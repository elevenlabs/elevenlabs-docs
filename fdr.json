{
    "types": {
        "ASRConversationalConfig": {
            "name": "ASRConversationalConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The quality of the transcription",
                        "key": "quality",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ASRQuality"
                            }
                        }
                    },
                    {
                        "description": "The provider of the transcription service",
                        "key": "provider",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ASRProvider"
                            }
                        }
                    },
                    {
                        "description": "The format of the audio to be transcribed",
                        "key": "user_input_audio_format",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ASRInputFormat"
                            }
                        }
                    },
                    {
                        "description": "Keywords to boost prediction probability for",
                        "key": "keywords",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ASRInputFormat": {
            "name": "ASRInputFormat",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "pcm_48000"
                    },
                    {
                        "value": "ulaw_8000"
                    }
                ]
            }
        },
        "ASRProvider": {
            "name": "ASRProvider",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "elevenlabs"
                    },
                    {
                        "value": "realtime_scribe_v1"
                    }
                ]
            }
        },
        "ASRQuality": {
            "name": "ASRQuality",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "high"
                    }
                ]
            }
        },
        "AddChapterResponseModel": {
            "name": "AddChapterResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "chapter",
                        "valueType": {
                            "type": "id",
                            "value": "ChapterWithContentResponseModel"
                        }
                    }
                ]
            }
        },
        "AddKnowledgeBaseResponseModel": {
            "name": "AddKnowledgeBaseResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "AddProjectResponseModel": {
            "name": "AddProjectResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "project",
                        "valueType": {
                            "type": "id",
                            "value": "ProjectResponseModel"
                        }
                    }
                ]
            }
        },
        "AddPronunciationDictionaryResponseModelPermissionOnResource": {
            "description": "The permission on the resource of the pronunciation dictionary.",
            "name": "AddPronunciationDictionaryResponseModelPermissionOnResource",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "admin"
                    },
                    {
                        "value": "editor"
                    },
                    {
                        "value": "viewer"
                    }
                ]
            }
        },
        "AddPronunciationDictionaryResponseModel": {
            "name": "AddPronunciationDictionaryResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the created pronunciation dictionary.",
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the created pronunciation dictionary.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The user ID of the creator of the pronunciation dictionary.",
                        "key": "created_by",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The creation time of the pronunciation dictionary in Unix timestamp.",
                        "key": "creation_time_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The ID of the created pronunciation dictionary version.",
                        "key": "version_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The number of rules in the version of the pronunciation dictionary.",
                        "key": "version_rules_num",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The description of the pronunciation dictionary.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The permission on the resource of the pronunciation dictionary.",
                        "key": "permission_on_resource",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "id",
                                "value": "AddPronunciationDictionaryResponseModelPermissionOnResource"
                            }
                        }
                    }
                ]
            }
        },
        "AddVoiceIVCResponseModel": {
            "name": "AddVoiceIVCResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the newly created voice.",
                        "key": "voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Whether the voice requires verification",
                        "key": "requires_verification",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "AddVoiceResponseModel": {
            "name": "AddVoiceResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the voice.",
                        "key": "voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "AddWorkspaceGroupMemberResponseModel": {
            "name": "AddWorkspaceGroupMemberResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the workspace group member addition request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "AddWorkspaceInviteResponseModel": {
            "name": "AddWorkspaceInviteResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the workspace invite request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "AdditionalFormatResponseModel": {
            "name": "AdditionalFormatResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The requested format.",
                        "key": "requested_format",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The file extension of the additional format.",
                        "key": "file_extension",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The content type of the additional format.",
                        "key": "content_type",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Whether the content is base64 encoded.",
                        "key": "is_base64_encoded",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The content of the additional format.",
                        "key": "content",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "AdditionalFormats": {
            "name": "AdditionalFormats",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "list",
                    "itemType": {
                        "type": "id",
                        "value": "ExportOptions"
                    }
                }
            }
        },
        "AgentBan": {
            "name": "AgentBan",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "at_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "reason",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "reason_type",
                        "valueType": {
                            "type": "id",
                            "value": "BanReasonType"
                        }
                    }
                ]
            }
        },
        "AgentCallLimits": {
            "name": "AgentCallLimits",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The maximum number of concurrent conversations. -1 indicates that there is no maximum",
                        "key": "agent_concurrency_limit",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": -1
                                }
                            }
                        }
                    },
                    {
                        "description": "The maximum number of conversations per day",
                        "key": "daily_limit",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": 100000
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to enable bursting. If true, exceeding workspace concurrency limit will be allowed up to 3 times the limit. Calls will be charged at double rate when exceeding the limit.",
                        "key": "bursting_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    }
                ]
            }
        },
        "AgentConfigAPIModel-Input": {
            "name": "AgentConfigAPIModel-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
                        "key": "first_message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "description": "Language of the agent - used for ASR and TTS",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "en"
                                }
                            }
                        }
                    },
                    {
                        "description": "Configuration for dynamic variables",
                        "key": "dynamic_variables",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "DynamicVariablesConfig"
                            }
                        }
                    },
                    {
                        "description": "The prompt for the agent",
                        "key": "prompt",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "PromptAgentAPIModel-Input"
                            }
                        }
                    }
                ]
            }
        },
        "AgentConfigAPIModel-Output": {
            "name": "AgentConfigAPIModel-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
                        "key": "first_message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "description": "Language of the agent - used for ASR and TTS",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "en"
                                }
                            }
                        }
                    },
                    {
                        "description": "Configuration for dynamic variables",
                        "key": "dynamic_variables",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "DynamicVariablesConfig"
                            }
                        }
                    },
                    {
                        "description": "The prompt for the agent",
                        "key": "prompt",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "PromptAgentAPIModel-Output"
                            }
                        }
                    }
                ]
            }
        },
        "AgentConfigDBModel": {
            "name": "AgentConfigDBModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
                        "key": "first_message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "description": "Language of the agent - used for ASR and TTS",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "en"
                                }
                            }
                        }
                    },
                    {
                        "description": "Configuration for dynamic variables",
                        "key": "dynamic_variables",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "DynamicVariablesConfig"
                            }
                        }
                    },
                    {
                        "key": "prompt",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "PromptAgentDBModel"
                            }
                        }
                    }
                ]
            }
        },
        "AgentConfigOverride": {
            "name": "AgentConfigOverride",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
                        "key": "first_message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Language of the agent - used for ASR and TTS",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The prompt for the agent",
                        "key": "prompt",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "PromptAgentAPIModelOverride"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "AgentConfigOverrideConfig": {
            "name": "AgentConfigOverrideConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether to allow overriding the first_message field.",
                        "key": "first_message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to allow overriding the language field.",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Configures overrides for nested fields.",
                        "key": "prompt",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "PromptAgentAPIModelOverrideConfig"
                            }
                        }
                    }
                ]
            }
        },
        "AgentMetadataResponseModel": {
            "name": "AgentMetadataResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The creation time of the agent in unix seconds",
                        "key": "created_at_unix_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "AgentPlatformSettingsRequestModel": {
            "name": "AgentPlatformSettingsRequestModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Settings for authentication",
                        "key": "auth",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AuthSettings"
                            }
                        }
                    },
                    {
                        "description": "Settings for evaluation",
                        "key": "evaluation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "EvaluationSettings"
                            }
                        }
                    },
                    {
                        "description": "Configuration for the widget",
                        "key": "widget",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetConfig-Input"
                            }
                        }
                    },
                    {
                        "description": "Data collection settings",
                        "key": "data_collection",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "LiteralJsonSchemaProperty"
                                }
                            }
                        }
                    },
                    {
                        "description": "Additional overrides for the agent during conversation initiation",
                        "key": "overrides",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationInitiationClientDataConfig-Input"
                            }
                        }
                    },
                    {
                        "description": "Call limits for the agent",
                        "key": "call_limits",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AgentCallLimits"
                            }
                        }
                    },
                    {
                        "description": "Privacy settings for the agent",
                        "key": "privacy",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "PrivacyConfig"
                            }
                        }
                    },
                    {
                        "description": "Workspace overrides for the agent",
                        "key": "workspace_overrides",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AgentWorkspaceOverrides-Input"
                            }
                        }
                    }
                ]
            }
        },
        "AgentPlatformSettingsResponseModel": {
            "name": "AgentPlatformSettingsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Settings for authentication",
                        "key": "auth",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AuthSettings"
                            }
                        }
                    },
                    {
                        "description": "Settings for evaluation",
                        "key": "evaluation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "EvaluationSettings"
                            }
                        }
                    },
                    {
                        "description": "Configuration for the widget",
                        "key": "widget",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetConfig-Output"
                            }
                        }
                    },
                    {
                        "description": "Data collection settings",
                        "key": "data_collection",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "LiteralJsonSchemaProperty"
                                }
                            }
                        }
                    },
                    {
                        "description": "Additional overrides for the agent during conversation initiation",
                        "key": "overrides",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationInitiationClientDataConfig-Output"
                            }
                        }
                    },
                    {
                        "description": "Call limits for the agent",
                        "key": "call_limits",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AgentCallLimits"
                            }
                        }
                    },
                    {
                        "description": "Privacy settings for the agent",
                        "key": "privacy",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "PrivacyConfig"
                            }
                        }
                    },
                    {
                        "description": "Workspace overrides for the agent",
                        "key": "workspace_overrides",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AgentWorkspaceOverrides-Output"
                            }
                        }
                    },
                    {
                        "key": "safety",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "SafetyResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "AgentSimulatedChatTestResponseModel": {
            "name": "AgentSimulatedChatTestResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "simulated_conversation",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationHistoryTranscriptCommonModel-Output"
                            }
                        }
                    },
                    {
                        "key": "analysis",
                        "valueType": {
                            "type": "id",
                            "value": "ConversationHistoryAnalysisCommonModel"
                        }
                    }
                ]
            }
        },
        "AgentSummaryResponseModel": {
            "name": "AgentSummaryResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the agent",
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the agent",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Agent tags used to categorize the agent",
                        "key": "tags",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "The creation time of the agent in unix seconds",
                        "key": "created_at_unix_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The access information of the agent",
                        "key": "access_info",
                        "valueType": {
                            "type": "id",
                            "value": "ResourceAccessInfo"
                        }
                    }
                ]
            }
        },
        "AgentTransfer": {
            "name": "AgentTransfer",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "condition",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "AgentWorkspaceOverrides-Input": {
            "name": "AgentWorkspaceOverrides-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The webhook to send conversation initiation client data to",
                        "key": "conversation_initiation_client_data_webhook",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationInitiationClientDataWebhook"
                                }
                            }
                        }
                    },
                    {
                        "key": "webhooks",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConvAIWebhooks"
                            }
                        }
                    }
                ]
            }
        },
        "AgentWorkspaceOverrides-Output": {
            "name": "AgentWorkspaceOverrides-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The webhook to send conversation initiation client data to",
                        "key": "conversation_initiation_client_data_webhook",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationInitiationClientDataWebhook"
                                }
                            }
                        }
                    },
                    {
                        "key": "webhooks",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConvAIWebhooks"
                            }
                        }
                    }
                ]
            }
        },
        "AllowlistItem": {
            "name": "AllowlistItem",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The hostname of the allowed origin",
                        "key": "hostname",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ArrayJsonSchemaPropertyInputItems": {
            "name": "ArrayJsonSchemaPropertyInputItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "LiteralJsonSchemaProperty",
                        "type": {
                            "type": "id",
                            "value": "LiteralJsonSchemaProperty"
                        },
                        "displayName": "LiteralJsonSchemaProperty"
                    },
                    {
                        "typeName": "ObjectJsonSchemaProperty-Input",
                        "type": {
                            "type": "id",
                            "value": "ObjectJsonSchemaProperty-Input"
                        },
                        "displayName": "ObjectJsonSchemaProperty"
                    },
                    {
                        "typeName": "ArrayJsonSchemaProperty-Input",
                        "type": {
                            "type": "id",
                            "value": "ArrayJsonSchemaProperty-Input"
                        },
                        "displayName": "ArrayJsonSchemaProperty"
                    }
                ]
            }
        },
        "ArrayJsonSchemaProperty-Input": {
            "name": "ArrayJsonSchemaProperty-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "array"
                                }
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "key": "items",
                        "valueType": {
                            "type": "id",
                            "value": "ArrayJsonSchemaPropertyInputItems"
                        }
                    }
                ]
            }
        },
        "ArrayJsonSchemaPropertyOutputItems": {
            "name": "ArrayJsonSchemaPropertyOutputItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "LiteralJsonSchemaProperty",
                        "type": {
                            "type": "id",
                            "value": "LiteralJsonSchemaProperty"
                        },
                        "displayName": "LiteralJsonSchemaProperty"
                    },
                    {
                        "typeName": "ObjectJsonSchemaProperty-Output",
                        "type": {
                            "type": "id",
                            "value": "ObjectJsonSchemaProperty-Output"
                        },
                        "displayName": "ObjectJsonSchemaProperty"
                    },
                    {
                        "typeName": "ArrayJsonSchemaProperty-Output",
                        "type": {
                            "type": "id",
                            "value": "ArrayJsonSchemaProperty-Output"
                        },
                        "displayName": "ArrayJsonSchemaProperty"
                    }
                ]
            }
        },
        "ArrayJsonSchemaProperty-Output": {
            "name": "ArrayJsonSchemaProperty-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "array"
                                }
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "key": "items",
                        "valueType": {
                            "type": "id",
                            "value": "ArrayJsonSchemaPropertyOutputItems"
                        }
                    }
                ]
            }
        },
        "AudioNativeCreateProjectResponseModel": {
            "name": "AudioNativeCreateProjectResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the created Audio Native project.",
                        "key": "project_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Whether the project is currently being converted.",
                        "key": "converting",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The HTML snippet to embed the Audio Native player.",
                        "key": "html_snippet",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "AudioNativeEditContentResponseModel": {
            "name": "AudioNativeEditContentResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the project.",
                        "key": "project_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Whether the project is currently being converted.",
                        "key": "converting",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the project is currently being published.",
                        "key": "publishing",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The HTML snippet to embed the Audio Native player.",
                        "key": "html_snippet",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "AudioNativeProjectSettingsResponseModelStatus": {
            "description": "Current state of the project",
            "name": "AudioNativeProjectSettingsResponseModelStatus",
            "shape": {
                "type": "enum",
                "default": "ready",
                "values": [
                    {
                        "value": "processing"
                    },
                    {
                        "value": "ready"
                    }
                ]
            }
        },
        "AudioNativeProjectSettingsResponseModel": {
            "name": "AudioNativeProjectSettingsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The title of the project.",
                        "key": "title",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The image of the project.",
                        "key": "image",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The author of the project.",
                        "key": "author",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Whether the project is small.",
                        "key": "small",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The text color of the project.",
                        "key": "text_color",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The background color of the project.",
                        "key": "background_color",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The sessionization of the project. Specifies for how many minutes to persist the session across page reloads.",
                        "key": "sessionization",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The path of the audio file.",
                        "key": "audio_path",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The URL of the audio file.",
                        "key": "audio_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Current state of the project",
                        "key": "status",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AudioNativeProjectSettingsResponseModelStatus"
                            }
                        }
                    }
                ]
            }
        },
        "AudioWithTimestampsResponseModel": {
            "name": "AudioWithTimestampsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Base64 encoded audio data",
                        "key": "audio_base64",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Timestamp information for each character in the original text",
                        "key": "alignment",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "CharacterAlignmentResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "Timestamp information for each character in the normalized text",
                        "key": "normalized_alignment",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "CharacterAlignmentResponseModel"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "AuthSettings": {
            "name": "AuthSettings",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "If set to true, starting a conversation with an agent will require a signed token",
                        "key": "enable_auth",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of hosts that are allowed to start conversations with the agent",
                        "key": "allowlist",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "AllowlistItem"
                                }
                            }
                        }
                    },
                    {
                        "description": "A shareable token that can be used to start a conversation with the agent",
                        "key": "shareable_token",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "AuthorizationMethod": {
            "name": "AuthorizationMethod",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "invalid"
                    },
                    {
                        "value": "public"
                    },
                    {
                        "value": "authorization_header"
                    },
                    {
                        "value": "signed_url"
                    },
                    {
                        "value": "shareable_link"
                    },
                    {
                        "value": "livekit_token"
                    },
                    {
                        "value": "livekit_token_website"
                    },
                    {
                        "value": "genesys_api_key"
                    }
                ]
            }
        },
        "BanReasonType": {
            "name": "BanReasonType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "safety"
                    },
                    {
                        "value": "manual"
                    }
                ]
            }
        },
        "BatchCallDetailedResponse": {
            "description": "Detailed response model for a batch call including all recipients.",
            "name": "BatchCallDetailedResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "phone_number_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "phone_provider",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TelephonyProvider"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "created_at_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "scheduled_time_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "total_calls_dispatched",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "total_calls_scheduled",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "last_updated_at_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "status",
                        "valueType": {
                            "type": "id",
                            "value": "BatchCallStatus"
                        }
                    },
                    {
                        "key": "agent_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "recipients",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "OutboundCallRecipientResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "BatchCallRecipientStatus": {
            "name": "BatchCallRecipientStatus",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "pending"
                    },
                    {
                        "value": "initiated"
                    },
                    {
                        "value": "in_progress"
                    },
                    {
                        "value": "completed"
                    },
                    {
                        "value": "failed"
                    },
                    {
                        "value": "cancelled"
                    }
                ]
            }
        },
        "BatchCallResponse": {
            "name": "BatchCallResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "phone_number_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "phone_provider",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TelephonyProvider"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "created_at_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "scheduled_time_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "total_calls_dispatched",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "total_calls_scheduled",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "last_updated_at_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "status",
                        "valueType": {
                            "type": "id",
                            "value": "BatchCallStatus"
                        }
                    },
                    {
                        "key": "agent_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "BatchCallStatus": {
            "name": "BatchCallStatus",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "pending"
                    },
                    {
                        "value": "in_progress"
                    },
                    {
                        "value": "completed"
                    },
                    {
                        "value": "failed"
                    },
                    {
                        "value": "cancelled"
                    }
                ]
            }
        },
        "Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post": {
            "name": "Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The Target language.",
                        "key": "language",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromFilePostWorkspaceAccess": {
            "description": "Should be one of 'admin', 'editor' or 'viewer'. If not provided, defaults to no access.",
            "name": "BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromFilePostWorkspaceAccess",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "admin"
                    },
                    {
                        "value": "editor"
                    },
                    {
                        "value": "viewer"
                    }
                ]
            }
        },
        "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post": {
            "name": "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name of the pronunciation dictionary, used for identification only.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "A lexicon .pls file which we will use to initialize the project with.",
                        "key": "file",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A description of the pronunciation dictionary, used for identification only.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Should be one of 'admin', 'editor' or 'viewer'. If not provided, defaults to no access.",
                        "key": "workspace_access",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromFilePostWorkspaceAccess"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostRulesItems": {
            "name": "BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostRulesItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "PronunciationDictionaryAliasRuleRequestModel",
                        "type": {
                            "type": "id",
                            "value": "PronunciationDictionaryAliasRuleRequestModel"
                        },
                        "displayName": "PronunciationDictionaryAliasRuleRequestModel"
                    },
                    {
                        "typeName": "PronunciationDictionaryPhonemeRuleRequestModel",
                        "type": {
                            "type": "id",
                            "value": "PronunciationDictionaryPhonemeRuleRequestModel"
                        },
                        "displayName": "PronunciationDictionaryPhonemeRuleRequestModel"
                    }
                ]
            }
        },
        "BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostWorkspaceAccess": {
            "description": "Should be one of 'admin', 'editor' or 'viewer'. If not provided, defaults to no access.",
            "name": "BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostWorkspaceAccess",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "admin"
                    },
                    {
                        "value": "editor"
                    },
                    {
                        "value": "viewer"
                    }
                ]
            }
        },
        "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post": {
            "name": "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "List of pronunciation rules. Rule can be either:\n    an alias rule: {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b', }\n    or a phoneme rule: {'string_to_replace': 'a', 'type': 'phoneme', 'phoneme': 'b', 'alphabet': 'ipa' }",
                        "key": "rules",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostRulesItems"
                            }
                        }
                    },
                    {
                        "description": "The name of the pronunciation dictionary, used for identification only.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "A description of the pronunciation dictionary, used for identification only.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Should be one of 'admin', 'editor' or 'viewer'. If not provided, defaults to no access.",
                        "key": "workspace_access",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromRulesPostWorkspaceAccess"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post": {
            "name": "Body_Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name of the chapter, used for identification only.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                        "key": "from_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post": {
            "name": "Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The email of the target workspace member.",
                        "key": "email",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "BodyAddProjectV1ProjectsAddPostTargetAudience": {
            "description": "An optional target audience of the Studio project.",
            "name": "BodyAddProjectV1ProjectsAddPostTargetAudience",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "children"
                    },
                    {
                        "value": "young adult"
                    },
                    {
                        "value": "adult"
                    },
                    {
                        "value": "all ages"
                    }
                ]
            }
        },
        "BodyAddProjectV1ProjectsAddPostFiction": {
            "description": "An optional specification of whether the content of this Studio project is fiction.",
            "name": "BodyAddProjectV1ProjectsAddPostFiction",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "fiction"
                    },
                    {
                        "value": "non-fiction"
                    }
                ]
            }
        },
        "BodyAddProjectV1ProjectsAddPostApplyTextNormalization": {
            "description": "\n    This parameter controls text normalization with four modes: 'auto', 'on', 'apply_english' and 'off'.\n    When set to 'auto', the system will automatically decide whether to apply text normalization\n    (e.g., spelling out numbers). With 'on', text normalization will always be applied, while\n    with 'off', it will be skipped. 'apply_english' is the same as 'on' but will assume that text is in English.\n    ",
            "name": "BodyAddProjectV1ProjectsAddPostApplyTextNormalization",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "auto"
                    },
                    {
                        "value": "on"
                    },
                    {
                        "value": "off"
                    },
                    {
                        "value": "apply_english"
                    }
                ]
            }
        },
        "BodyAddProjectV1ProjectsAddPostSourceType": {
            "description": "The type of Studio project to create.",
            "name": "BodyAddProjectV1ProjectsAddPostSourceType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "blank"
                    },
                    {
                        "value": "book"
                    },
                    {
                        "value": "article"
                    },
                    {
                        "value": "genfm"
                    }
                ]
            }
        },
        "Body_Add_project_v1_projects_add_post": {
            "name": "Body_Add_project_v1_projects_add_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name of the Studio project, used for identification only.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The voice_id that corresponds to the default voice used for new titles.",
                        "key": "default_title_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
                        "key": "default_paragraph_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
                        "key": "default_model_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                        "key": "from_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                        "key": "from_document",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional content to initialize the Studio project with. If this is set, 'from_url' and 'from_document' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                        "key": "from_content_json",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
                        "key": "quality_preset",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "standard"
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                        "key": "title",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                        "key": "author",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional description of the Studio project.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional list of genres associated with the Studio project.",
                        "key": "genres",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional target audience of the Studio project.",
                        "key": "target_audience",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyAddProjectV1ProjectsAddPostTargetAudience"
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 2
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional content type of the Studio project.",
                        "key": "content_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional original publication date of the Studio project, in the format YYYY-MM-DD or YYYY.",
                        "key": "original_publication_date",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "regex": "^\\d{4}-\\d{2}-\\d{2}$|^\\d{4}$"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional specification of whether this Studio project contains mature content.",
                        "key": "mature_content",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                        "key": "isbn_number",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "[Deprecated] When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
                        "key": "acx_volume_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
                        "key": "volume_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "\n    A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion\n    Messages:\n    1. When project was converted successfully:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"success\",\n        project_snapshot_id: \"22m00Tcm4TlvDq8ikMAT\",\n        error_details: None,\n      }\n    }\n    2. When project conversion failed:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"error\",\n        project_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n\n    3. When chapter was converted successfully:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"success\",\n        chapter_snapshot_id: \"23m00Tcm4TlvDq8ikMAV\",\n        error_details: None,\n      }\n    }\n    4. When chapter conversion failed:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"error\",\n        chapter_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n    ",
                        "key": "callback_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional specification of whether the content of this Studio project is fiction.",
                        "key": "fiction",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyAddProjectV1ProjectsAddPostFiction"
                                }
                            }
                        }
                    },
                    {
                        "description": "\n    This parameter controls text normalization with four modes: 'auto', 'on', 'apply_english' and 'off'.\n    When set to 'auto', the system will automatically decide whether to apply text normalization\n    (e.g., spelling out numbers). With 'on', text normalization will always be applied, while\n    with 'off', it will be skipped. 'apply_english' is the same as 'on' but will assume that text is in English.\n    ",
                        "key": "apply_text_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyAddProjectV1ProjectsAddPostApplyTextNormalization"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to auto convert the Studio project to audio or not.",
                        "key": "auto_convert",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "[Alpha Feature] Whether automatically assign voices to phrases in the create Project.",
                        "key": "auto_assign_voices",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The type of Studio project to create.",
                        "key": "source_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyAddProjectV1ProjectsAddPostSourceType"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyAddRulesToThePronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdAddRulesPostRulesItems": {
            "name": "BodyAddRulesToThePronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdAddRulesPostRulesItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "PronunciationDictionaryAliasRuleRequestModel",
                        "type": {
                            "type": "id",
                            "value": "PronunciationDictionaryAliasRuleRequestModel"
                        },
                        "displayName": "PronunciationDictionaryAliasRuleRequestModel"
                    },
                    {
                        "typeName": "PronunciationDictionaryPhonemeRuleRequestModel",
                        "type": {
                            "type": "id",
                            "value": "PronunciationDictionaryPhonemeRuleRequestModel"
                        },
                        "displayName": "PronunciationDictionaryPhonemeRuleRequestModel"
                    }
                ]
            }
        },
        "Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post": {
            "name": "Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "List of pronunciation rules. Rule can be either:\n    an alias rule: {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b', }\n    or a phoneme rule: {'string_to_replace': 'a', 'type': 'phoneme', 'phoneme': 'b', 'alphabet': 'ipa' }",
                        "key": "rules",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "BodyAddRulesToThePronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdAddRulesPostRulesItems"
                            }
                        }
                    }
                ]
            }
        },
        "Body_Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post": {
            "name": "Body_Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Audio files used to create the voice.",
                        "key": "files",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    {
                        "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
                        "key": "remove_background_noise",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post": {
            "name": "Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
                        "key": "new_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "Body_Add_to_knowledge_base_v1_convai_add_to_knowledge_base_post": {
            "name": "Body_Add_to_knowledge_base_v1_convai_add_to_knowledge_base_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A custom, human-readable name for the document.",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "URL to a page of documentation that the agent will have access to in order to interact with users.",
                        "key": "url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Documentation that the agent will have access to in order to interact with users.",
                        "key": "file",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Add_to_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post": {
            "name": "Body_Add_to_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A custom, human-readable name for the document.",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "URL to a page of documentation that the agent will have access to in order to interact with users.",
                        "key": "url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Documentation that the agent will have access to in order to interact with users.",
                        "key": "file",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Add_to_knowledge_base_v1_convai_knowledge_base_post": {
            "name": "Body_Add_to_knowledge_base_v1_convai_knowledge_base_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A custom, human-readable name for the document.",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "URL to a page of documentation that the agent will have access to in order to interact with users.",
                        "key": "url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Documentation that the agent will have access to in order to interact with users.",
                        "key": "file",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Add_voice_v1_voices_add_post": {
            "name": "Body_Add_voice_v1_voices_add_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "A list of file paths to audio recordings intended for voice cloning.",
                        "key": "files",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    {
                        "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
                        "key": "remove_background_noise",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "A description of the voice.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Serialized labels dictionary for the voice.",
                        "key": "labels",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyAudioIsolationStreamV1AudioIsolationStreamPostFileFormat": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "name": "BodyAudioIsolationStreamV1AudioIsolationStreamPostFileFormat",
            "shape": {
                "type": "enum",
                "default": "other",
                "values": [
                    {
                        "value": "pcm_s16le_16"
                    },
                    {
                        "value": "other"
                    }
                ]
            }
        },
        "Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post": {
            "name": "Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The audio file from which vocals/speech will be isolated from.",
                        "key": "audio",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    {
                        "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
                        "key": "file_format",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyAudioIsolationStreamV1AudioIsolationStreamPostFileFormat"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyAudioIsolationV1AudioIsolationPostFileFormat": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "name": "BodyAudioIsolationV1AudioIsolationPostFileFormat",
            "shape": {
                "type": "enum",
                "default": "other",
                "values": [
                    {
                        "value": "pcm_s16le_16"
                    },
                    {
                        "value": "other"
                    }
                ]
            }
        },
        "Body_Audio_Isolation_v1_audio_isolation_post": {
            "name": "Body_Audio_Isolation_v1_audio_isolation_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The audio file from which vocals/speech will be isolated from.",
                        "key": "audio",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    {
                        "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
                        "key": "file_format",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyAudioIsolationV1AudioIsolationPostFileFormat"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Create_Agent_v1_convai_agents_create_post": {
            "name": "Body_Create_Agent_v1_convai_agents_create_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Conversation configuration for an agent",
                        "key": "conversation_config",
                        "valueType": {
                            "type": "id",
                            "value": "ConversationalConfigAPIModel-Input"
                        }
                    },
                    {
                        "description": "Platform settings for the agent are all settings that aren't related to the conversation orchestration and content.",
                        "key": "platform_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "AgentPlatformSettingsRequestModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "A name to make the agent easier to find",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Tags to help classify and filter the agent",
                        "key": "tags",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Create_PVC_voice_v1_voices_pvc_post": {
            "name": "Body_Create_PVC_voice_v1_voices_pvc_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "maxLength": 100
                            }
                        }
                    },
                    {
                        "description": "Language used in the samples.",
                        "key": "language",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Description to use for the created voice.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "maxLength": 500
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Serialized labels dictionary for the voice.",
                        "key": "labels",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "map",
                                    "keyType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "valueType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post": {
            "name": "Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "PronunciationDictionaryVersionLocatorDBModel"
                            }
                        }
                    },
                    {
                        "description": "This will automatically mark text in this project for reconversion when the new dictionary applies or the old one no longer does.",
                        "key": "invalidate_affected_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyCreateStudioProjectV1StudioProjectsPostTargetAudience": {
            "description": "An optional target audience of the Studio project.",
            "name": "BodyCreateStudioProjectV1StudioProjectsPostTargetAudience",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "children"
                    },
                    {
                        "value": "young adult"
                    },
                    {
                        "value": "adult"
                    },
                    {
                        "value": "all ages"
                    }
                ]
            }
        },
        "BodyCreateStudioProjectV1StudioProjectsPostFiction": {
            "description": "An optional specification of whether the content of this Studio project is fiction.",
            "name": "BodyCreateStudioProjectV1StudioProjectsPostFiction",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "fiction"
                    },
                    {
                        "value": "non-fiction"
                    }
                ]
            }
        },
        "BodyCreateStudioProjectV1StudioProjectsPostApplyTextNormalization": {
            "description": "\n    This parameter controls text normalization with four modes: 'auto', 'on', 'apply_english' and 'off'.\n    When set to 'auto', the system will automatically decide whether to apply text normalization\n    (e.g., spelling out numbers). With 'on', text normalization will always be applied, while\n    with 'off', it will be skipped. 'apply_english' is the same as 'on' but will assume that text is in English.\n    ",
            "name": "BodyCreateStudioProjectV1StudioProjectsPostApplyTextNormalization",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "auto"
                    },
                    {
                        "value": "on"
                    },
                    {
                        "value": "off"
                    },
                    {
                        "value": "apply_english"
                    }
                ]
            }
        },
        "BodyCreateStudioProjectV1StudioProjectsPostSourceType": {
            "description": "The type of Studio project to create.",
            "name": "BodyCreateStudioProjectV1StudioProjectsPostSourceType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "blank"
                    },
                    {
                        "value": "book"
                    },
                    {
                        "value": "article"
                    },
                    {
                        "value": "genfm"
                    }
                ]
            }
        },
        "Body_Create_Studio_project_v1_studio_projects_post": {
            "name": "Body_Create_Studio_project_v1_studio_projects_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name of the Studio project, used for identification only.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The voice_id that corresponds to the default voice used for new titles.",
                        "key": "default_title_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
                        "key": "default_paragraph_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
                        "key": "default_model_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                        "key": "from_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                        "key": "from_document",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional content to initialize the Studio project with. If this is set, 'from_url' and 'from_document' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                        "key": "from_content_json",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
                        "key": "quality_preset",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "standard"
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                        "key": "title",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                        "key": "author",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional description of the Studio project.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional list of genres associated with the Studio project.",
                        "key": "genres",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional target audience of the Studio project.",
                        "key": "target_audience",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyCreateStudioProjectV1StudioProjectsPostTargetAudience"
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 2
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional content type of the Studio project.",
                        "key": "content_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional original publication date of the Studio project, in the format YYYY-MM-DD or YYYY.",
                        "key": "original_publication_date",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "regex": "^\\d{4}-\\d{2}-\\d{2}$|^\\d{4}$"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional specification of whether this Studio project contains mature content.",
                        "key": "mature_content",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                        "key": "isbn_number",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "[Deprecated] When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
                        "key": "acx_volume_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
                        "key": "volume_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "\n    A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion\n    Messages:\n    1. When project was converted successfully:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"success\",\n        project_snapshot_id: \"22m00Tcm4TlvDq8ikMAT\",\n        error_details: None,\n      }\n    }\n    2. When project conversion failed:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"error\",\n        project_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n\n    3. When chapter was converted successfully:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"success\",\n        chapter_snapshot_id: \"23m00Tcm4TlvDq8ikMAV\",\n        error_details: None,\n      }\n    }\n    4. When chapter conversion failed:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"error\",\n        chapter_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n    ",
                        "key": "callback_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional specification of whether the content of this Studio project is fiction.",
                        "key": "fiction",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyCreateStudioProjectV1StudioProjectsPostFiction"
                                }
                            }
                        }
                    },
                    {
                        "description": "\n    This parameter controls text normalization with four modes: 'auto', 'on', 'apply_english' and 'off'.\n    When set to 'auto', the system will automatically decide whether to apply text normalization\n    (e.g., spelling out numbers). With 'on', text normalization will always be applied, while\n    with 'off', it will be skipped. 'apply_english' is the same as 'on' but will assume that text is in English.\n    ",
                        "key": "apply_text_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyCreateStudioProjectV1StudioProjectsPostApplyTextNormalization"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to auto convert the Studio project to audio or not.",
                        "key": "auto_convert",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "[Alpha Feature] Whether automatically assign voices to phrases in the create Project.",
                        "key": "auto_assign_voices",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The type of Studio project to create.",
                        "key": "source_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyCreateStudioProjectV1StudioProjectsPostSourceType"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Create_URL_document_v1_convai_knowledge_base_url_post": {
            "name": "Body_Create_URL_document_v1_convai_knowledge_base_url_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "URL to a page of documentation that the agent will have access to in order to interact with users.",
                        "key": "url",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "A custom, human-readable name for the document.",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post": {
            "name": "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Name to use for the created voice.",
                        "key": "voice_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Description to use for the created voice.",
                        "key": "voice_description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 20,
                                "maxLength": 1000
                            }
                        }
                    },
                    {
                        "description": "The generated_voice_id to create, call POST /v1/text-to-voice/create-previews and fetch the generated_voice_id from the response header if don't have one yet.",
                        "key": "generated_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Optional, metadata to add to the created voice. Defaults to None.",
                        "key": "labels",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "map",
                                    "keyType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "valueType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "List of voice ids that the user has played but not selected. Used for RLHF.",
                        "key": "played_not_selected_voice_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_post": {
            "name": "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Name to use for the created voice.",
                        "key": "voice_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Description to use for the created voice.",
                        "key": "voice_description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 20,
                                "maxLength": 1000
                            }
                        }
                    },
                    {
                        "description": "The generated_voice_id to create, call POST /v1/text-to-voice/create-previews and fetch the generated_voice_id from the response header if don't have one yet.",
                        "key": "generated_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Optional, metadata to add to the created voice. Defaults to None.",
                        "key": "labels",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "map",
                                    "keyType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "valueType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "List of voice ids that the user has played but not selected. Used for RLHF.",
                        "key": "played_not_selected_voice_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post": {
            "name": "Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Name to use for the created voice.",
                        "key": "voice_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Description to use for the created voice.",
                        "key": "voice_description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The generated_voice_id to create, call POST /v1/text-to-voice/create-previews and fetch the generated_voice_id from the response header if don't have one yet.",
                        "key": "generated_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "List of voice ids that the user has played but not selected. Used for RLHF.",
                        "key": "played_not_selected_voice_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Optional, metadata to add to the created voice. Defaults to None.",
                        "key": "labels",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "map",
                                    "keyType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "valueType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Create_chapter_v1_studio_projects__project_id__chapters_post": {
            "name": "Body_Create_chapter_v1_studio_projects__project_id__chapters_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name of the chapter, used for identification only.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                        "key": "from_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Create_file_document_v1_convai_knowledge_base_file_post": {
            "name": "Body_Create_file_document_v1_convai_knowledge_base_file_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Documentation that the agent will have access to in order to interact with users.",
                        "key": "file",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    {
                        "description": "A custom, human-readable name for the document.",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Create_forced_alignment_v1_forced_alignment_post": {
            "name": "Body_Create_forced_alignment_v1_forced_alignment_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The file to align. All major audio formats are supported. The file size must be less than 1GB.",
                        "key": "file",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    {
                        "description": "The text to align with the audio. The input text can be in any format, however diarization is not supported at this time.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "If true, the file will be streamed to the server and processed in chunks. This is useful for large files that cannot be loaded into memory. The default is false.",
                        "key": "enabled_spooled_file",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyCreatePodcastV1ProjectsPodcastCreatePostMode": {
            "description": "The type of podcast to generate. Can be 'conversation', an interaction between two voices, or 'bulletin', a monologue.",
            "name": "BodyCreatePodcastV1ProjectsPodcastCreatePostMode",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "PodcastConversationMode",
                        "type": {
                            "type": "id",
                            "value": "PodcastConversationMode"
                        },
                        "displayName": "PodcastConversationMode"
                    },
                    {
                        "typeName": "PodcastBulletinMode",
                        "type": {
                            "type": "id",
                            "value": "PodcastBulletinMode"
                        },
                        "displayName": "PodcastBulletinMode"
                    }
                ]
            }
        },
        "BodyCreatePodcastV1ProjectsPodcastCreatePostSourceOneOf2Items": {
            "name": "BodyCreatePodcastV1ProjectsPodcastCreatePostSourceOneOf2Items",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "PodcastTextSource",
                        "type": {
                            "type": "id",
                            "value": "PodcastTextSource"
                        },
                        "displayName": "PodcastTextSource"
                    },
                    {
                        "typeName": "PodcastURLSource",
                        "type": {
                            "type": "id",
                            "value": "PodcastURLSource"
                        },
                        "displayName": "PodcastURLSource"
                    }
                ]
            }
        },
        "BodyCreatePodcastV1ProjectsPodcastCreatePostSource2": {
            "name": "BodyCreatePodcastV1ProjectsPodcastCreatePostSource2",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "list",
                    "itemType": {
                        "type": "id",
                        "value": "BodyCreatePodcastV1ProjectsPodcastCreatePostSourceOneOf2Items"
                    }
                }
            }
        },
        "BodyCreatePodcastV1ProjectsPodcastCreatePostSource": {
            "description": "The source content for the Podcast.",
            "name": "BodyCreatePodcastV1ProjectsPodcastCreatePostSource",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "PodcastTextSource",
                        "type": {
                            "type": "id",
                            "value": "PodcastTextSource"
                        },
                        "displayName": "PodcastTextSource"
                    },
                    {
                        "typeName": "PodcastURLSource",
                        "type": {
                            "type": "id",
                            "value": "PodcastURLSource"
                        },
                        "displayName": "PodcastURLSource"
                    },
                    {
                        "typeName": "BodyCreatePodcastV1ProjectsPodcastCreatePostSource2",
                        "type": {
                            "type": "id",
                            "value": "BodyCreatePodcastV1ProjectsPodcastCreatePostSource2"
                        }
                    }
                ]
            }
        },
        "BodyCreatePodcastV1ProjectsPodcastCreatePostQualityPreset": {
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "name": "BodyCreatePodcastV1ProjectsPodcastCreatePostQualityPreset",
            "shape": {
                "type": "enum",
                "default": "standard",
                "values": [
                    {
                        "value": "standard"
                    },
                    {
                        "value": "high"
                    },
                    {
                        "value": "highest"
                    },
                    {
                        "value": "ultra"
                    },
                    {
                        "value": "ultra_lossless"
                    }
                ]
            }
        },
        "BodyCreatePodcastV1ProjectsPodcastCreatePostDurationScale": {
            "description": "Duration of the generated podcast. Must be one of:\nshort - produces podcasts shorter than 3 minutes.\ndefault - produces podcasts roughly between 3-7 minutes.\nlong - produces podcasts longer than 7 minutes.\n",
            "name": "BodyCreatePodcastV1ProjectsPodcastCreatePostDurationScale",
            "shape": {
                "type": "enum",
                "default": "default",
                "values": [
                    {
                        "value": "short"
                    },
                    {
                        "value": "default"
                    },
                    {
                        "value": "long"
                    }
                ]
            }
        },
        "Body_Create_podcast_v1_projects_podcast_create_post": {
            "name": "Body_Create_podcast_v1_projects_podcast_create_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
                        "key": "model_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The type of podcast to generate. Can be 'conversation', an interaction between two voices, or 'bulletin', a monologue.",
                        "key": "mode",
                        "valueType": {
                            "type": "id",
                            "value": "BodyCreatePodcastV1ProjectsPodcastCreatePostMode"
                        }
                    },
                    {
                        "description": "The source content for the Podcast.",
                        "key": "source",
                        "valueType": {
                            "type": "id",
                            "value": "BodyCreatePodcastV1ProjectsPodcastCreatePostSource"
                        }
                    },
                    {
                        "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
                        "key": "quality_preset",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "BodyCreatePodcastV1ProjectsPodcastCreatePostQualityPreset"
                            }
                        }
                    },
                    {
                        "description": "Duration of the generated podcast. Must be one of:\nshort - produces podcasts shorter than 3 minutes.\ndefault - produces podcasts roughly between 3-7 minutes.\nlong - produces podcasts longer than 7 minutes.\n",
                        "key": "duration_scale",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "BodyCreatePodcastV1ProjectsPodcastCreatePostDurationScale"
                            }
                        }
                    },
                    {
                        "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 2
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A brief summary or highlights of the Studio project's content, providing key points or themes. This should be between 10 and 70 characters.",
                        "key": "highlights",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string",
                                            "minLength": 10,
                                            "maxLength": 70
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "\n    A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion\n    Messages:\n    1. When project was converted successfully:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"success\",\n        project_snapshot_id: \"22m00Tcm4TlvDq8ikMAT\",\n        error_details: None,\n      }\n    }\n    2. When project conversion failed:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"error\",\n        project_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n\n    3. When chapter was converted successfully:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"success\",\n        chapter_snapshot_id: \"23m00Tcm4TlvDq8ikMAV\",\n        error_details: None,\n      }\n    }\n    4. When chapter conversion failed:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"error\",\n        chapter_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n    ",
                        "key": "callback_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyCreatePodcastV1StudioPodcastsPostMode": {
            "description": "The type of podcast to generate. Can be 'conversation', an interaction between two voices, or 'bulletin', a monologue.",
            "name": "BodyCreatePodcastV1StudioPodcastsPostMode",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "PodcastConversationMode",
                        "type": {
                            "type": "id",
                            "value": "PodcastConversationMode"
                        },
                        "displayName": "PodcastConversationMode"
                    },
                    {
                        "typeName": "PodcastBulletinMode",
                        "type": {
                            "type": "id",
                            "value": "PodcastBulletinMode"
                        },
                        "displayName": "PodcastBulletinMode"
                    }
                ]
            }
        },
        "BodyCreatePodcastV1StudioPodcastsPostSourceOneOf2Items": {
            "name": "BodyCreatePodcastV1StudioPodcastsPostSourceOneOf2Items",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "PodcastTextSource",
                        "type": {
                            "type": "id",
                            "value": "PodcastTextSource"
                        },
                        "displayName": "PodcastTextSource"
                    },
                    {
                        "typeName": "PodcastURLSource",
                        "type": {
                            "type": "id",
                            "value": "PodcastURLSource"
                        },
                        "displayName": "PodcastURLSource"
                    }
                ]
            }
        },
        "BodyCreatePodcastV1StudioPodcastsPostSource2": {
            "name": "BodyCreatePodcastV1StudioPodcastsPostSource2",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "list",
                    "itemType": {
                        "type": "id",
                        "value": "BodyCreatePodcastV1StudioPodcastsPostSourceOneOf2Items"
                    }
                }
            }
        },
        "BodyCreatePodcastV1StudioPodcastsPostSource": {
            "description": "The source content for the Podcast.",
            "name": "BodyCreatePodcastV1StudioPodcastsPostSource",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "PodcastTextSource",
                        "type": {
                            "type": "id",
                            "value": "PodcastTextSource"
                        },
                        "displayName": "PodcastTextSource"
                    },
                    {
                        "typeName": "PodcastURLSource",
                        "type": {
                            "type": "id",
                            "value": "PodcastURLSource"
                        },
                        "displayName": "PodcastURLSource"
                    },
                    {
                        "typeName": "BodyCreatePodcastV1StudioPodcastsPostSource2",
                        "type": {
                            "type": "id",
                            "value": "BodyCreatePodcastV1StudioPodcastsPostSource2"
                        }
                    }
                ]
            }
        },
        "BodyCreatePodcastV1StudioPodcastsPostQualityPreset": {
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "name": "BodyCreatePodcastV1StudioPodcastsPostQualityPreset",
            "shape": {
                "type": "enum",
                "default": "standard",
                "values": [
                    {
                        "value": "standard"
                    },
                    {
                        "value": "high"
                    },
                    {
                        "value": "highest"
                    },
                    {
                        "value": "ultra"
                    },
                    {
                        "value": "ultra_lossless"
                    }
                ]
            }
        },
        "BodyCreatePodcastV1StudioPodcastsPostDurationScale": {
            "description": "Duration of the generated podcast. Must be one of:\nshort - produces podcasts shorter than 3 minutes.\ndefault - produces podcasts roughly between 3-7 minutes.\nlong - produces podcasts longer than 7 minutes.\n",
            "name": "BodyCreatePodcastV1StudioPodcastsPostDurationScale",
            "shape": {
                "type": "enum",
                "default": "default",
                "values": [
                    {
                        "value": "short"
                    },
                    {
                        "value": "default"
                    },
                    {
                        "value": "long"
                    }
                ]
            }
        },
        "Body_Create_podcast_v1_studio_podcasts_post": {
            "name": "Body_Create_podcast_v1_studio_podcasts_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
                        "key": "model_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The type of podcast to generate. Can be 'conversation', an interaction between two voices, or 'bulletin', a monologue.",
                        "key": "mode",
                        "valueType": {
                            "type": "id",
                            "value": "BodyCreatePodcastV1StudioPodcastsPostMode"
                        }
                    },
                    {
                        "description": "The source content for the Podcast.",
                        "key": "source",
                        "valueType": {
                            "type": "id",
                            "value": "BodyCreatePodcastV1StudioPodcastsPostSource"
                        }
                    },
                    {
                        "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
                        "key": "quality_preset",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "BodyCreatePodcastV1StudioPodcastsPostQualityPreset"
                            }
                        }
                    },
                    {
                        "description": "Duration of the generated podcast. Must be one of:\nshort - produces podcasts shorter than 3 minutes.\ndefault - produces podcasts roughly between 3-7 minutes.\nlong - produces podcasts longer than 7 minutes.\n",
                        "key": "duration_scale",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "BodyCreatePodcastV1StudioPodcastsPostDurationScale"
                            }
                        }
                    },
                    {
                        "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 2
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A brief summary or highlights of the Studio project's content, providing key points or themes. This should be between 10 and 70 characters.",
                        "key": "highlights",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string",
                                            "minLength": 10,
                                            "maxLength": 70
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "\n    A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion\n    Messages:\n    1. When project was converted successfully:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"success\",\n        project_snapshot_id: \"22m00Tcm4TlvDq8ikMAT\",\n        error_details: None,\n      }\n    }\n    2. When project conversion failed:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"error\",\n        project_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n\n    3. When chapter was converted successfully:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"success\",\n        chapter_snapshot_id: \"23m00Tcm4TlvDq8ikMAV\",\n        error_details: None,\n      }\n    }\n    4. When chapter conversion failed:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"error\",\n        chapter_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n    ",
                        "key": "callback_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Create_text_document_v1_convai_knowledge_base_text_post": {
            "name": "Body_Create_text_document_v1_convai_knowledge_base_text_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Text content to be added to the knowledge base.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "A custom, human-readable name for the document.",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "minLength": 1
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Creates_Audio_Native_enabled_project__v1_audio_native_post": {
            "name": "Body_Creates_Audio_Native_enabled_project__v1_audio_native_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Project name.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "(Deprecated) Image URL used in the player. If not provided, default image set in the Player settings is used.",
                        "key": "image",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "availability": "Deprecated"
                    },
                    {
                        "description": "Author used in the player and inserted at the start of the uploaded article. If not provided, the default author set in the Player settings is used.",
                        "key": "author",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Title used in the player and inserted at the top of the uploaded article. If not provided, the default title set in the Player settings is used.",
                        "key": "title",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "(Deprecated) Whether to use small player or not. If not provided, default value set in the Player settings is used.",
                        "key": "small",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "availability": "Deprecated"
                    },
                    {
                        "description": "Text color used in the player. If not provided, default text color set in the Player settings is used.",
                        "key": "text_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Background color used in the player. If not provided, default background color set in the Player settings is used.",
                        "key": "background_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "(Deprecated) Specifies for how many minutes to persist the session across page reloads. If not provided, default sessionization set in the Player settings is used.",
                        "key": "sessionization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        },
                        "availability": "Deprecated"
                    },
                    {
                        "description": "Voice ID used to voice the content. If not provided, default voice ID set in the Player settings is used.",
                        "key": "voice_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "TTS Model ID used in the player. If not provided, default model ID set in the Player settings is used.",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Either txt or HTML input file containing the article content. HTML should be formatted as follows '&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;Your content&lt;/p&gt;&lt;h3&gt;More of your content&lt;/h3&gt;&lt;p&gt;Some more of your content&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'",
                        "key": "file",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to auto convert the project to audio or not.",
                        "key": "auto_convert",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Delete_existing_invitation_v1_workspace_invites_delete": {
            "name": "Body_Delete_existing_invitation_v1_workspace_invites_delete",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The email of the customer",
                        "key": "email",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post": {
            "name": "Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The email of the target workspace member.",
                        "key": "email",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "Body_Delete_member_v1_workspace_members_delete": {
            "name": "Body_Delete_member_v1_workspace_members_delete",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Email of the target user.",
                        "key": "email",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "Body_Download_history_items_v1_history_download_post": {
            "name": "Body_Download_history_items_v1_history_download_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A list of history items to download, you can get IDs of history items and other metadata using the GET https://api.elevenlabs.io/v1/history endpoint.",
                        "key": "history_item_ids",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Output format to transcode the audio file, can be wav or default.",
                        "key": "output_format",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post": {
            "name": "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A list of file paths to audio recordings intended for voice cloning",
                        "key": "file",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "CSV file containing transcription/translation metadata",
                        "key": "csv_file",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "For use only with csv input",
                        "key": "foreground_audio_file",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "For use only with csv input",
                        "key": "background_audio_file",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Name of the dubbing project.",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "URL of the source video/audio file.",
                        "key": "source_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Source language.",
                        "key": "source_lang",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "auto"
                                }
                            }
                        }
                    },
                    {
                        "description": "The Target language to dub the content into.",
                        "key": "target_lang",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Number of speakers to use for the dubbing. Set to 0 to automatically detect the number of speakers",
                        "key": "num_speakers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to apply watermark to the output video.",
                        "key": "watermark",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Start time of the source video/audio file.",
                        "key": "start_time",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "End time of the source video/audio file.",
                        "key": "end_time",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to use the highest resolution available.",
                        "key": "highest_resolution",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "An advanced setting. Whether to drop background audio from the final dub. This can improve dub quality where it's known that audio shouldn't have a background track such as for speeches or monologues.",
                        "key": "drop_background_audio",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "[BETA] Whether transcripts should have profanities censored with the words '[censored]'",
                        "key": "use_profanity_filter",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to prepare dub for edits in dubbing studio or edits as a dubbing resource.",
                        "key": "dubbing_studio",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "[BETA] Instead of using a voice clone in dubbing, use a similar voice from the ElevenLabs Voice Library.",
                        "key": "disable_voice_cloning",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "automatic or manual. Manual mode is only supported when creating a dubbing studio project",
                        "key": "mode",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "default": "automatic"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Frames per second to use when parsing a CSV file for dubbing. If not provided, FPS will be inferred from timecodes.",
                        "key": "csv_fps",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post": {
            "name": "Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Dub only this list of segments.",
                        "key": "segments",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Dub only these languages for each segment.",
                        "key": "languages",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Duplicate_Agent_v1_convai_agents__agent_id__duplicate_post": {
            "name": "Body_Duplicate_Agent_v1_convai_agents__agent_id__duplicate_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A name to make the agent easier to find",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Edit_PVC_voice_v1_voices_pvc__voice_id__post": {
            "name": "Body_Edit_PVC_voice_v1_voices_pvc__voice_id__post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "maxLength": 100
                                }
                            }
                        }
                    },
                    {
                        "description": "Language used in the samples.",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Description to use for the created voice.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "maxLength": 500
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Serialized labels dictionary for the voice.",
                        "key": "labels",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "map",
                                    "keyType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "valueType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Edit_basic_project_info_v1_projects__project_id__post": {
            "name": "Body_Edit_basic_project_info_v1_projects__project_id__post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name of the Studio project, used for identification only.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The voice_id that corresponds to the default voice used for new titles.",
                        "key": "default_title_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
                        "key": "default_paragraph_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                        "key": "title",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                        "key": "author",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                        "key": "isbn_number",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
                        "key": "volume_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Edit_chapter_v1_projects__project_id__chapters__chapter_id__patch": {
            "name": "Body_Edit_chapter_v1_projects__project_id__chapters__chapter_id__patch",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name of the chapter, used for identification only.",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The chapter content to use.",
                        "key": "content",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ChapterContentInputModel"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Edit_project_content_v1_projects__project_id__content_post": {
            "name": "Body_Edit_project_content_v1_projects__project_id__content_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                        "key": "from_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                        "key": "from_document",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to auto convert the Studio project to audio or not.",
                        "key": "auto_convert",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Edit_voice_v1_voices__voice_id__edit_post": {
            "name": "Body_Edit_voice_v1_voices__voice_id__edit_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Audio files to add to the voice",
                        "key": "files",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
                        "key": "remove_background_noise",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "A description of the voice.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Serialized labels dictionary for the voice.",
                        "key": "labels",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostGender": {
            "description": "Category code corresponding to the gender of the generated voice. Possible values: female, male.",
            "name": "BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostGender",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "female"
                    },
                    {
                        "value": "male"
                    }
                ]
            }
        },
        "BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostAge": {
            "description": "Category code corresponding to the age of the generated voice. Possible values: young, middle_aged, old.",
            "name": "BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostAge",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "young"
                    },
                    {
                        "value": "middle_aged"
                    },
                    {
                        "value": "old"
                    }
                ]
            }
        },
        "Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post": {
            "name": "Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Category code corresponding to the gender of the generated voice. Possible values: female, male.",
                        "key": "gender",
                        "valueType": {
                            "type": "id",
                            "value": "BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostGender"
                        }
                    },
                    {
                        "description": "Category code corresponding to the accent of the generated voice. Possible values: british, american, african, australian, indian.",
                        "key": "accent",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Category code corresponding to the age of the generated voice. Possible values: young, middle_aged, old.",
                        "key": "age",
                        "valueType": {
                            "type": "id",
                            "value": "BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostAge"
                        }
                    },
                    {
                        "description": "The strength of the accent of the generated voice. Has to be between 0.3 and 2.0.",
                        "key": "accent_strength",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "description": "Text to generate, text length has to be between 100 and 1000.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 100,
                                "maxLength": 1000
                            }
                        }
                    }
                ]
            }
        },
        "Body_Get_similar_library_voices_v1_similar_voices_post": {
            "name": "Body_Get_similar_library_voices_v1_similar_voices_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "audio_file",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    {
                        "description": "Threshold for voice similarity between provided sample and library voices. Values range from 0 to 2. The smaller the value the more similar voices will be returned.",
                        "key": "similarity_threshold",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Number of most similar voices to return. If similarity_threshold is provided, less than this number of voices may be returned. Values range from 1 to 100.",
                        "key": "top_k",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Handle_an_outbound_call_via_SIP_trunk_v1_convai_sip_trunk_outbound_call_post": {
            "name": "Body_Handle_an_outbound_call_via_SIP_trunk_v1_convai_sip_trunk_outbound_call_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "agent_phone_number_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "to_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "conversation_initiation_client_data",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationInitiationClientDataRequest-Input"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post": {
            "name": "Body_Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "agent_phone_number_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "to_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "conversation_initiation_client_data",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationInitiationClientDataRequest-Input"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post": {
            "name": "Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The email of the customer",
                        "key": "emails",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "The group ids of the user",
                        "key": "group_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyInviteUserV1WorkspaceInvitesAddPostWorkspacePermission": {
            "description": "The workspace permission of the user",
            "name": "BodyInviteUserV1WorkspaceInvitesAddPostWorkspacePermission",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "external"
                    },
                    {
                        "value": "admin"
                    },
                    {
                        "value": "workspace_admin"
                    },
                    {
                        "value": "workspace_member"
                    },
                    {
                        "value": "support_l1"
                    },
                    {
                        "value": "support_l2"
                    },
                    {
                        "value": "moderator"
                    },
                    {
                        "value": "sales"
                    },
                    {
                        "value": "voice_mixer"
                    },
                    {
                        "value": "voice_admin"
                    },
                    {
                        "value": "convai_admin"
                    },
                    {
                        "value": "enterprise_viewer"
                    },
                    {
                        "value": "quality_check_admin"
                    },
                    {
                        "value": "workspace_migration_admin"
                    },
                    {
                        "value": "human_reviewer"
                    },
                    {
                        "value": "productions_admin"
                    }
                ]
            }
        },
        "Body_Invite_user_v1_workspace_invites_add_post": {
            "name": "Body_Invite_user_v1_workspace_invites_add_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The email of the customer",
                        "key": "email",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The group ids of the user",
                        "key": "group_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The workspace permission of the user",
                        "key": "workspace_permission",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyInviteUserV1WorkspaceInvitesAddPostWorkspacePermission"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch": {
            "name": "Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Conversation configuration for an agent",
                        "key": "conversation_config",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationalConfigAPIModel-Input"
                            }
                        }
                    },
                    {
                        "description": "Platform settings for the agent are all settings that aren't related to the conversation orchestration and content.",
                        "key": "platform_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AgentPlatformSettingsRequestModel"
                            }
                        }
                    },
                    {
                        "description": "A name to make the agent easier to find",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Tags to help classify and filter the agent",
                        "key": "tags",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post": {
            "name": "Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "An image file to be used as the agent's avatar.",
                        "key": "avatar_file",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                ]
            }
        },
        "Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post": {
            "name": "Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "List of strings to remove from the pronunciation dictionary.",
                        "key": "rule_strings",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post": {
            "name": "Body_Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The type of the render. One of ['mp4', 'aac', 'mp3', 'wav', 'aaf', 'tracks_zip', 'clips_zip']",
                        "key": "render_type",
                        "valueType": {
                            "type": "id",
                            "value": "RenderType"
                        }
                    }
                ]
            }
        },
        "Body_Request_manual_verification_v1_voices_pvc__voice_id__verification_post": {
            "name": "Body_Request_manual_verification_v1_voices_pvc__voice_id__verification_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Verification documents",
                        "key": "files",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    {
                        "description": "Extra text to be used in the manual verification process.",
                        "key": "extra_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Retrieve_voice_sample_audio_v1_voices_pvc__voice_id__samples__sample_id__audio_get": {
            "name": "Body_Retrieve_voice_sample_audio_v1_voices_pvc__voice_id__samples__sample_id__audio_get",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
                        "key": "remove_background_noise",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Run_PVC_training_v1_voices_pvc__voice_id__train_post": {
            "name": "Body_Run_PVC_training_v1_voices_pvc__voice_id__train_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The model ID to use for the conversion.",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post": {
            "name": "Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Either 'like' or 'dislike' to indicate the feedback for the conversation.",
                        "key": "feedback",
                        "valueType": {
                            "type": "id",
                            "value": "UserFeedbackScore"
                        }
                    }
                ]
            }
        },
        "BodyShareWorkspaceResourceV1WorkspaceResourcesResourceIdSharePostRole": {
            "description": "Role to update the target principal with.",
            "name": "BodyShareWorkspaceResourceV1WorkspaceResourcesResourceIdSharePostRole",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "admin"
                    },
                    {
                        "value": "editor"
                    },
                    {
                        "value": "viewer"
                    }
                ]
            }
        },
        "Body_Share_workspace_resource_v1_workspace_resources__resource_id__share_post": {
            "name": "Body_Share_workspace_resource_v1_workspace_resources__resource_id__share_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Role to update the target principal with.",
                        "key": "role",
                        "valueType": {
                            "type": "id",
                            "value": "BodyShareWorkspaceResourceV1WorkspaceResourcesResourceIdSharePostRole"
                        }
                    },
                    {
                        "description": "Resource type of the target resource.",
                        "key": "resource_type",
                        "valueType": {
                            "type": "id",
                            "value": "WorkspaceResourceType"
                        }
                    },
                    {
                        "description": "The email of the user or service account.",
                        "key": "user_email",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The ID of the target group. To target the permissions principals have by default on this resource, use the value 'default'.",
                        "key": "group_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The ID of the target workspace API key. This isn't the same as the key itself that would you pass in the header for authentication. Workspace admins can find this in the workspace settings UI.",
                        "key": "workspace_api_key_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Simulates_a_conversation__Stream__v1_convai_agents__agent_id__simulate_conversation_stream_post": {
            "name": "Body_Simulates_a_conversation__Stream__v1_convai_agents__agent_id__simulate_conversation_stream_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A specification detailing how the conversation should be simulated",
                        "key": "simulation_specification",
                        "valueType": {
                            "type": "id",
                            "value": "ConversationSimulationSpecification"
                        }
                    },
                    {
                        "description": "A list of evaluation criteria to test",
                        "key": "extra_evaluation_criteria",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "PromptEvaluationCriteria"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Simulates_a_conversation_v1_convai_agents__agent_id__simulate_conversation_post": {
            "name": "Body_Simulates_a_conversation_v1_convai_agents__agent_id__simulate_conversation_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A specification detailing how the conversation should be simulated",
                        "key": "simulation_specification",
                        "valueType": {
                            "type": "id",
                            "value": "ConversationSimulationSpecification"
                        }
                    },
                    {
                        "description": "A list of evaluation criteria to test",
                        "key": "extra_evaluation_criteria",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "PromptEvaluationCriteria"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Sound_Generation_v1_sound_generation_post": {
            "name": "Body_Sound_Generation_v1_sound_generation_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The text that will get converted into a sound effect.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The duration of the sound which will be generated in seconds. Must be at least 0.5 and at most 22. If set to None we will guess the optimal duration using the prompt. Defaults to None.",
                        "key": "duration_seconds",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A higher prompt influence makes your generation follow the prompt more closely while also making generations less variable. Must be a value between 0 and 1. Defaults to 0.3.",
                        "key": "prompt_influence",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double",
                                        "default": 0.3
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodySpeechToSpeechStreamingV1SpeechToSpeechVoiceIdStreamPostFileFormat": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "name": "BodySpeechToSpeechStreamingV1SpeechToSpeechVoiceIdStreamPostFileFormat",
            "shape": {
                "type": "enum",
                "default": "other",
                "values": [
                    {
                        "value": "pcm_s16le_16"
                    },
                    {
                        "value": "other"
                    }
                ]
            }
        },
        "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post": {
            "name": "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The audio file which holds the content and emotion that will control the generated speech.",
                        "key": "audio",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    {
                        "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "eleven_english_sts_v2"
                                }
                            }
                        }
                    },
                    {
                        "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string.",
                        "key": "voice_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
                        "key": "seed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If set, will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
                        "key": "remove_background_noise",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
                        "key": "file_format",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodySpeechToSpeechStreamingV1SpeechToSpeechVoiceIdStreamPostFileFormat"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodySpeechToSpeechV1SpeechToSpeechVoiceIdPostFileFormat": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "name": "BodySpeechToSpeechV1SpeechToSpeechVoiceIdPostFileFormat",
            "shape": {
                "type": "enum",
                "default": "other",
                "values": [
                    {
                        "value": "pcm_s16le_16"
                    },
                    {
                        "value": "other"
                    }
                ]
            }
        },
        "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post": {
            "name": "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The audio file which holds the content and emotion that will control the generated speech.",
                        "key": "audio",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    {
                        "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "eleven_english_sts_v2"
                                }
                            }
                        }
                    },
                    {
                        "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string.",
                        "key": "voice_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
                        "key": "seed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If set, will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
                        "key": "remove_background_noise",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
                        "key": "file_format",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodySpeechToSpeechV1SpeechToSpeechVoiceIdPostFileFormat"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodySpeechToTextV1SpeechToTextPostTimestampsGranularity": {
            "description": "The granularity of the timestamps in the transcription. 'word' provides word-level timestamps and 'character' provides character-level timestamps per word.",
            "name": "BodySpeechToTextV1SpeechToTextPostTimestampsGranularity",
            "shape": {
                "type": "enum",
                "default": "word",
                "values": [
                    {
                        "value": "none"
                    },
                    {
                        "value": "word"
                    },
                    {
                        "value": "character"
                    }
                ]
            }
        },
        "BodySpeechToTextV1SpeechToTextPostFileFormat": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "name": "BodySpeechToTextV1SpeechToTextPostFileFormat",
            "shape": {
                "type": "enum",
                "default": "other",
                "values": [
                    {
                        "value": "pcm_s16le_16"
                    },
                    {
                        "value": "other"
                    }
                ]
            }
        },
        "Body_Speech_to_Text_v1_speech_to_text_post": {
            "name": "Body_Speech_to_Text_v1_speech_to_text_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the model to use for transcription, currently only 'scribe_v1' and 'scribe_v1_experimental' are available.",
                        "key": "model_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The file to transcribe. All major audio and video formats are supported. Exactly one of the file or cloud_storage_url parameters must be provided. The file size must be less than 1GB.",
                        "key": "file",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An ISO-639-1 or ISO-639-3 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. Defaults to null, in this case the language is predicted automatically.",
                        "key": "language_code",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to tag audio events like (laughter), (footsteps), etc. in the transcription.",
                        "key": "tag_audio_events",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "description": "The maximum amount of speakers talking in the uploaded file. Can help with predicting who speaks when. The maximum amount of speakers that can be predicted is 32. Defaults to null, in this case the amount of speakers is set to the maximum value the model supports.",
                        "key": "num_speakers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 32
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The granularity of the timestamps in the transcription. 'word' provides word-level timestamps and 'character' provides character-level timestamps per word.",
                        "key": "timestamps_granularity",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "BodySpeechToTextV1SpeechToTextPostTimestampsGranularity"
                            }
                        }
                    },
                    {
                        "description": "Whether to annotate which speaker is currently talking in the uploaded file.",
                        "key": "diarize",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of additional formats to export the transcript to.",
                        "key": "additional_formats",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AdditionalFormats"
                            }
                        }
                    },
                    {
                        "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
                        "key": "file_format",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "BodySpeechToTextV1SpeechToTextPostFileFormat"
                            }
                        }
                    },
                    {
                        "description": "The valid AWS S3, Cloudflare R2 or Google Cloud Storage URL of the file to transcribe. Exactly one of the file or cloud_storage_url parameters must be provided. The file must be a valid publicly accessible cloud storage URL. The file size must be less than 2GB. URL can be pre-signed.",
                        "key": "cloud_storage_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to send the transcription result to configured speech-to-text webhooks.  If set the request will return early without the transcription, which will be delivered later via webhook.",
                        "key": "webhook",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Controls the randomness of the transcription output. Accepts values between 0.0 and 2.0, where higher values result in more diverse and less deterministic results. If omitted, we will use a temperature based on the model you selected which is usually 0.",
                        "key": "temperature",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double",
                                        "minimum": 0,
                                        "maximum": 2
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post": {
            "name": "Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether to convert the audio to mpeg format.",
                        "key": "convert_to_mpeg",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post": {
            "name": "Body_Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether to convert the audio to mpeg format.",
                        "key": "convert_to_mpeg",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post": {
            "name": "Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether to convert the audio to mpeg format.",
                        "key": "convert_to_mpeg",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post": {
            "name": "Body_Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether to convert the audio to mpeg format.",
                        "key": "convert_to_mpeg",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Submit_a_batch_call_request__v1_convai_batch_calling_submit_post": {
            "name": "Body_Submit_a_batch_call_request__v1_convai_batch_calling_submit_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "call_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "agent_phone_number_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "scheduled_time_unix",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "key": "recipients",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "OutboundCallRecipient"
                            }
                        }
                    }
                ]
            }
        },
        "Body_Text_to_dialogue__multi_voice__streaming_v1_text_to_dialogue_stream_post": {
            "name": "Body_Text_to_dialogue__multi_voice__streaming_v1_text_to_dialogue_stream_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A list of dialogue inputs, each containing text and a voice ID which will be converted into speech.",
                        "key": "inputs",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "DialogueInput"
                            }
                        }
                    },
                    {
                        "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "eleven_v3"
                                }
                            }
                        }
                    },
                    {
                        "description": "Settings controlling the dialogue generation.",
                        "key": "settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ModelSettingsResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "PronunciationDictionaryVersionLocatorRequestModel"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
                        "key": "seed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Text_to_dialogue__multi_voice__v1_text_to_dialogue_post": {
            "name": "Body_Text_to_dialogue__multi_voice__v1_text_to_dialogue_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A list of dialogue inputs, each containing text and a voice ID which will be converted into speech.",
                        "key": "inputs",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "DialogueInput"
                            }
                        }
                    },
                    {
                        "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "eleven_v3"
                                }
                            }
                        }
                    },
                    {
                        "description": "Settings controlling the dialogue generation.",
                        "key": "settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ModelSettingsResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "PronunciationDictionaryVersionLocatorRequestModel"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
                        "key": "seed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization": {
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
            "name": "BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization",
            "shape": {
                "type": "enum",
                "default": "auto",
                "values": [
                    {
                        "value": "auto"
                    },
                    {
                        "value": "on"
                    },
                    {
                        "value": "off"
                    }
                ]
            }
        },
        "Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post": {
            "name": "Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The text that will get converted into speech.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "eleven_multilingual_v2"
                                }
                            }
                        }
                    },
                    {
                        "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided.",
                        "key": "language_code",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request.",
                        "key": "voice_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "VoiceSettingsResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "PronunciationDictionaryVersionLocatorRequestModel"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
                        "key": "seed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
                        "key": "previous_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
                        "key": "next_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
                        "key": "previous_request_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
                        "key": "next_request_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
                        "key": "use_pvc_as_ivc",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "availability": "Deprecated"
                    },
                    {
                        "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
                        "key": "apply_text_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostApplyTextNormalization"
                            }
                        }
                    },
                    {
                        "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
                        "key": "apply_language_text_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization": {
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
            "name": "BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization",
            "shape": {
                "type": "enum",
                "default": "auto",
                "values": [
                    {
                        "value": "auto"
                    },
                    {
                        "value": "on"
                    },
                    {
                        "value": "off"
                    }
                ]
            }
        },
        "Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post": {
            "name": "Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The text that will get converted into speech.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "eleven_multilingual_v2"
                                }
                            }
                        }
                    },
                    {
                        "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided.",
                        "key": "language_code",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request.",
                        "key": "voice_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "VoiceSettingsResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "PronunciationDictionaryVersionLocatorRequestModel"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
                        "key": "seed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
                        "key": "previous_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
                        "key": "next_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
                        "key": "previous_request_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
                        "key": "next_request_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
                        "key": "use_pvc_as_ivc",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "availability": "Deprecated"
                    },
                    {
                        "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
                        "key": "apply_text_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostApplyTextNormalization"
                            }
                        }
                    },
                    {
                        "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
                        "key": "apply_language_text_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization": {
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
            "name": "BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization",
            "shape": {
                "type": "enum",
                "default": "auto",
                "values": [
                    {
                        "value": "auto"
                    },
                    {
                        "value": "on"
                    },
                    {
                        "value": "off"
                    }
                ]
            }
        },
        "Body_Text_to_speech_v1_text_to_speech__voice_id__post": {
            "name": "Body_Text_to_speech_v1_text_to_speech__voice_id__post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The text that will get converted into speech.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "eleven_multilingual_v2"
                                }
                            }
                        }
                    },
                    {
                        "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided.",
                        "key": "language_code",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request.",
                        "key": "voice_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "VoiceSettingsResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "PronunciationDictionaryVersionLocatorRequestModel"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
                        "key": "seed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
                        "key": "previous_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
                        "key": "next_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
                        "key": "previous_request_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
                        "key": "next_request_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
                        "key": "use_pvc_as_ivc",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "availability": "Deprecated"
                    },
                    {
                        "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
                        "key": "apply_text_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "BodyTextToSpeechV1TextToSpeechVoiceIdPostApplyTextNormalization"
                            }
                        }
                    },
                    {
                        "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
                        "key": "apply_language_text_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization": {
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
            "name": "BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization",
            "shape": {
                "type": "enum",
                "default": "auto",
                "values": [
                    {
                        "value": "auto"
                    },
                    {
                        "value": "on"
                    },
                    {
                        "value": "off"
                    }
                ]
            }
        },
        "Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post": {
            "name": "Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The text that will get converted into speech.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "eleven_multilingual_v2"
                                }
                            }
                        }
                    },
                    {
                        "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided.",
                        "key": "language_code",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request.",
                        "key": "voice_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "VoiceSettingsResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "PronunciationDictionaryVersionLocatorRequestModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
                        "key": "seed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
                        "key": "previous_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
                        "key": "next_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
                        "key": "previous_request_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
                        "key": "next_request_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
                        "key": "use_pvc_as_ivc",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        },
                        "availability": "Deprecated"
                    },
                    {
                        "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
                        "key": "apply_text_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostApplyTextNormalization"
                            }
                        }
                    },
                    {
                        "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
                        "key": "apply_language_text_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post": {
            "name": "Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Transcribe this specific list of segments.",
                        "key": "segments",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post": {
            "name": "Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Translate only this list of segments.",
                        "key": "segments",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Translate only these languages for each segment.",
                        "key": "languages",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post": {
            "name": "Body_Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Resource type of the target resource.",
                        "key": "resource_type",
                        "valueType": {
                            "type": "id",
                            "value": "WorkspaceResourceType"
                        }
                    },
                    {
                        "description": "The email of the user or service account.",
                        "key": "user_email",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The ID of the target group. To target the permissions principals have by default on this resource, use the value 'default'.",
                        "key": "group_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The ID of the target workspace API key. This isn't the same as the key itself that would you pass in the header for authentication. Workspace admins can find this in the workspace settings UI.",
                        "key": "workspace_api_key_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post": {
            "name": "Body_Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
                        "key": "remove_background_noise",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Speaker IDs to be used for PVC training. Make sure you send all the speaker IDs you want to use for PVC training in one request because the last request will override the previous ones.",
                        "key": "selected_speaker_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The start time of the audio to be used for PVC training. Time should be in milliseconds",
                        "key": "trim_start_time",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The end time of the audio to be used for PVC training. Time should be in milliseconds",
                        "key": "trim_end_time",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post": {
            "name": "Body_Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "PronunciationDictionaryVersionLocatorDBModel"
                            }
                        }
                    },
                    {
                        "description": "This will automatically mark text in this project for reconversion when the new dictionary applies or the old one no longer does.",
                        "key": "invalidate_affected_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post": {
            "name": "Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                        "key": "from_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                        "key": "from_document",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to auto convert the Studio project to audio or not.",
                        "key": "auto_convert",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Update_Studio_project_v1_studio_projects__project_id__post": {
            "name": "Body_Update_Studio_project_v1_studio_projects__project_id__post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name of the Studio project, used for identification only.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The voice_id that corresponds to the default voice used for new titles.",
                        "key": "default_title_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
                        "key": "default_paragraph_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                        "key": "title",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                        "key": "author",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                        "key": "isbn_number",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
                        "key": "volume_normalization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post": {
            "name": "Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Either txt or HTML input file containing the article content. HTML should be formatted as follows '&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;Your content&lt;/p&gt;&lt;h5&gt;More of your content&lt;/h5&gt;&lt;p&gt;Some more of your content&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'",
                        "key": "file",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to auto convert the project to audio or not.",
                        "key": "auto_convert",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to auto publish the new project snapshot after it's converted.",
                        "key": "auto_publish",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post": {
            "name": "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name of the chapter, used for identification only.",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The chapter content to use.",
                        "key": "content",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ChapterContentInputModel"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Update_document_v1_convai_knowledge_base__documentation_id__patch": {
            "name": "Body_Update_document_v1_convai_knowledge_base__documentation_id__patch",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A custom, human-readable name for the document.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    }
                ]
            }
        },
        "BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole": {
            "description": "Role dictating permissions in the workspace.",
            "name": "BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "workspace_admin"
                    },
                    {
                        "value": "workspace_member"
                    }
                ]
            }
        },
        "Body_Update_member_v1_workspace_members_post": {
            "name": "Body_Update_member_v1_workspace_members_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Email of the target user.",
                        "key": "email",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Whether to lock or unlock the user account.",
                        "key": "is_locked",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Role dictating permissions in the workspace.",
                        "key": "workspace_role",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Update_metadata_for_a_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__patch": {
            "name": "Body_Update_metadata_for_a_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__patch",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Either the identifier of a voice from the ElevenLabs voice library, or one of ['track-clone', 'clip-clone'].",
                        "key": "voice_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Languages to apply these changes to. If empty, will apply to all languages.",
                        "key": "languages",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post": {
            "name": "Body_Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Audio recording of the user",
                        "key": "recording",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                ]
            }
        },
        "Body_update_default_sharing_preferences_v1_workspace_default_sharing_preferences_post": {
            "name": "Body_update_default_sharing_preferences_v1_workspace_default_sharing_preferences_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "List of group IDs to share with by default",
                        "key": "default_sharing_groups",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Body_update_user_auto_provisioning_v1_workspace_user_auto_provisioning_post": {
            "name": "Body_update_user_auto_provisioning_v1_workspace_user_auto_provisioning_post",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "enabled",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "BreakdownTypes": {
            "description": "How to break down the information. Cannot be \"user\" or \"api_key\" if include_workspace_metrics is False.",
            "name": "BreakdownTypes",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "none"
                    },
                    {
                        "value": "voice"
                    },
                    {
                        "value": "voice_multiplier"
                    },
                    {
                        "value": "user"
                    },
                    {
                        "value": "groups"
                    },
                    {
                        "value": "api_keys"
                    },
                    {
                        "value": "all_api_keys"
                    },
                    {
                        "value": "product_type"
                    },
                    {
                        "value": "model"
                    },
                    {
                        "value": "resource"
                    },
                    {
                        "value": "request_queue"
                    }
                ]
            }
        },
        "BuiltInTools-Input": {
            "name": "BuiltInTools-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The end call tool",
                        "key": "end_call",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SystemToolConfig-Input"
                                }
                            }
                        }
                    },
                    {
                        "description": "The language detection tool",
                        "key": "language_detection",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SystemToolConfig-Input"
                                }
                            }
                        }
                    },
                    {
                        "description": "The transfer to agent tool",
                        "key": "transfer_to_agent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SystemToolConfig-Input"
                                }
                            }
                        }
                    },
                    {
                        "description": "The transfer to number tool",
                        "key": "transfer_to_number",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SystemToolConfig-Input"
                                }
                            }
                        }
                    },
                    {
                        "description": "The skip turn tool",
                        "key": "skip_turn",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SystemToolConfig-Input"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "BuiltInTools-Output": {
            "name": "BuiltInTools-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The end call tool",
                        "key": "end_call",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SystemToolConfig-Output"
                                }
                            }
                        }
                    },
                    {
                        "description": "The language detection tool",
                        "key": "language_detection",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SystemToolConfig-Output"
                                }
                            }
                        }
                    },
                    {
                        "description": "The transfer to agent tool",
                        "key": "transfer_to_agent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SystemToolConfig-Output"
                                }
                            }
                        }
                    },
                    {
                        "description": "The transfer to number tool",
                        "key": "transfer_to_number",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SystemToolConfig-Output"
                                }
                            }
                        }
                    },
                    {
                        "description": "The skip turn tool",
                        "key": "skip_turn",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SystemToolConfig-Output"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ChapterContentBlockExtendableNodeResponseModel": {
            "description": "Not used. Make sure you anticipate new types in the future.",
            "name": "ChapterContentBlockExtendableNodeResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "_other"
                            }
                        }
                    }
                ]
            }
        },
        "ChapterContentBlockInputModelSubType": {
            "name": "ChapterContentBlockInputModelSubType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "p"
                    },
                    {
                        "value": "h1"
                    },
                    {
                        "value": "h2"
                    },
                    {
                        "value": "h3"
                    }
                ]
            }
        },
        "ChapterContentBlockInputModel": {
            "name": "ChapterContentBlockInputModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "sub_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ChapterContentBlockInputModelSubType"
                                }
                            }
                        }
                    },
                    {
                        "key": "nodes",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ChapterContentParagraphTtsNodeInputModel"
                            }
                        }
                    },
                    {
                        "key": "block_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ChapterContentBlockResponseModelNodesItems": {
            "name": "ChapterContentBlockResponseModelNodesItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "ChapterContentBlockTtsNodeResponseModel",
                        "type": {
                            "type": "id",
                            "value": "ChapterContentBlockTtsNodeResponseModel"
                        },
                        "displayName": "ChapterContentBlockTtsNodeResponseModel"
                    },
                    {
                        "typeName": "ChapterContentBlockExtendableNodeResponseModel",
                        "type": {
                            "type": "id",
                            "value": "ChapterContentBlockExtendableNodeResponseModel"
                        },
                        "displayName": "ChapterContentBlockExtendableNodeResponseModel"
                    }
                ]
            }
        },
        "ChapterContentBlockResponseModel": {
            "name": "ChapterContentBlockResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "block_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "nodes",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ChapterContentBlockResponseModelNodesItems"
                            }
                        }
                    }
                ]
            }
        },
        "ChapterContentBlockTtsNodeResponseModel": {
            "name": "ChapterContentBlockTtsNodeResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "tts_node"
                            }
                        }
                    },
                    {
                        "key": "voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ChapterContentInputModel": {
            "name": "ChapterContentInputModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "blocks",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ChapterContentBlockInputModel"
                            }
                        }
                    }
                ]
            }
        },
        "ChapterContentParagraphTtsNodeInputModel": {
            "name": "ChapterContentParagraphTtsNodeInputModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "tts_node"
                            }
                        }
                    },
                    {
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ChapterContentResponseModel": {
            "name": "ChapterContentResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "blocks",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ChapterContentBlockResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "ChapterState": {
            "description": "The state of the chapter.",
            "name": "ChapterState",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "default"
                    },
                    {
                        "value": "converting"
                    }
                ]
            }
        },
        "ChapterResponseModel": {
            "name": "ChapterResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the chapter.",
                        "key": "chapter_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the chapter.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The last conversion date of the chapter.",
                        "key": "last_conversion_date_unix",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The conversion progress of the chapter.",
                        "key": "conversion_progress",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the chapter can be downloaded.",
                        "key": "can_be_downloaded",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The state of the chapter.",
                        "key": "state",
                        "valueType": {
                            "type": "id",
                            "value": "ChapterState"
                        }
                    },
                    {
                        "description": "The statistics of the chapter.",
                        "key": "statistics",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ChapterStatisticsResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "The last conversion error of the chapter.",
                        "key": "last_conversion_error",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ChapterSnapshotExtendedResponseModel": {
            "name": "ChapterSnapshotExtendedResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the chapter snapshot.",
                        "key": "chapter_snapshot_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the project.",
                        "key": "project_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the chapter.",
                        "key": "chapter_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The creation date of the chapter snapshot.",
                        "key": "created_at_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The name of the chapter snapshot.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "character_alignments",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "CharacterAlignmentModel"
                            }
                        }
                    }
                ]
            }
        },
        "ChapterSnapshotResponseModel": {
            "name": "ChapterSnapshotResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the chapter snapshot.",
                        "key": "chapter_snapshot_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the project.",
                        "key": "project_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the chapter.",
                        "key": "chapter_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The creation date of the chapter snapshot.",
                        "key": "created_at_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The name of the chapter snapshot.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ChapterSnapshotsResponseModel": {
            "name": "ChapterSnapshotsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "List of chapter snapshots.",
                        "key": "snapshots",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ChapterSnapshotResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "ChapterStatisticsResponseModel": {
            "name": "ChapterStatisticsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The number of unconverted characters.",
                        "key": "characters_unconverted",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The number of converted characters.",
                        "key": "characters_converted",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The number of converted paragraphs.",
                        "key": "paragraphs_converted",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The number of unconverted paragraphs.",
                        "key": "paragraphs_unconverted",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "ChapterWithContentResponseModelState": {
            "description": "The state of the chapter.",
            "name": "ChapterWithContentResponseModelState",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "default"
                    },
                    {
                        "value": "converting"
                    }
                ]
            }
        },
        "ChapterWithContentResponseModel": {
            "name": "ChapterWithContentResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the chapter.",
                        "key": "chapter_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the chapter.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The last conversion date of the chapter.",
                        "key": "last_conversion_date_unix",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The conversion progress of the chapter.",
                        "key": "conversion_progress",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the chapter can be downloaded.",
                        "key": "can_be_downloaded",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The state of the chapter.",
                        "key": "state",
                        "valueType": {
                            "type": "id",
                            "value": "ChapterWithContentResponseModelState"
                        }
                    },
                    {
                        "description": "The statistics of the chapter.",
                        "key": "statistics",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ChapterStatisticsResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "The last conversion error of the chapter.",
                        "key": "last_conversion_error",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "content",
                        "valueType": {
                            "type": "id",
                            "value": "ChapterContentResponseModel"
                        }
                    }
                ]
            }
        },
        "CharacterAlignmentModel": {
            "name": "CharacterAlignmentModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "characters",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "key": "character_start_times_seconds",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double"
                                }
                            }
                        }
                    },
                    {
                        "key": "character_end_times_seconds",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "CharacterAlignmentResponseModel": {
            "name": "CharacterAlignmentResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "characters",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "key": "character_start_times_seconds",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double"
                                }
                            }
                        }
                    },
                    {
                        "key": "character_end_times_seconds",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ClientEvent": {
            "name": "ClientEvent",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "conversation_initiation_metadata"
                    },
                    {
                        "value": "asr_initiation_metadata"
                    },
                    {
                        "value": "ping"
                    },
                    {
                        "value": "audio"
                    },
                    {
                        "value": "interruption"
                    },
                    {
                        "value": "user_transcript"
                    },
                    {
                        "value": "agent_response"
                    },
                    {
                        "value": "agent_response_correction"
                    },
                    {
                        "value": "client_tool_call"
                    },
                    {
                        "value": "mcp_tool_call"
                    },
                    {
                        "value": "mcp_connection_status"
                    },
                    {
                        "value": "agent_tool_response"
                    },
                    {
                        "value": "vad_score"
                    },
                    {
                        "value": "internal_turn_probability"
                    },
                    {
                        "value": "internal_tentative_agent_response"
                    }
                ]
            }
        },
        "ClientToolConfig-Input": {
            "description": "A client tool is one that sends an event to the user's client to trigger something client side",
            "name": "ClientToolConfig-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "regex": "^[a-zA-Z0-9_-]{1,64}$",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "description": "The maximum time in seconds to wait for the tool call to complete. Must be between 1 and 30 seconds (inclusive).",
                        "key": "response_timeout_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 30,
                                    "default": 20
                                }
                            }
                        }
                    },
                    {
                        "description": "The type of tool",
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "client"
                                }
                            }
                        }
                    },
                    {
                        "description": "Schema for any parameters to pass to the client",
                        "key": "parameters",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ObjectJsonSchemaProperty-Input"
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, calling this tool should block the conversation until the client responds with some response which is passed to the llm. If false then we will continue the conversation without waiting for the client to respond, this is useful to show content to a user but not block the conversation",
                        "key": "expects_response",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Configuration for dynamic variables",
                        "key": "dynamic_variables",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "DynamicVariablesConfig"
                            }
                        }
                    }
                ]
            }
        },
        "ClientToolConfig-Output": {
            "description": "A client tool is one that sends an event to the user's client to trigger something client side",
            "name": "ClientToolConfig-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "regex": "^[a-zA-Z0-9_-]{1,64}$",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "description": "The maximum time in seconds to wait for the tool call to complete. Must be between 1 and 30 seconds (inclusive).",
                        "key": "response_timeout_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 30,
                                    "default": 20
                                }
                            }
                        }
                    },
                    {
                        "description": "The type of tool",
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "client"
                                }
                            }
                        }
                    },
                    {
                        "description": "Schema for any parameters to pass to the client",
                        "key": "parameters",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ObjectJsonSchemaProperty-Output"
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, calling this tool should block the conversation until the client responds with some response which is passed to the llm. If false then we will continue the conversation without waiting for the client to respond, this is useful to show content to a user but not block the conversation",
                        "key": "expects_response",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Configuration for dynamic variables",
                        "key": "dynamic_variables",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "DynamicVariablesConfig"
                            }
                        }
                    }
                ]
            }
        },
        "ConvAIDynamicVariable": {
            "description": "Used to reference a dynamic variable.",
            "name": "ConvAIDynamicVariable",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "variable_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ConvAISecretLocator": {
            "description": "Used to reference a secret from the agent's secret store.",
            "name": "ConvAISecretLocator",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "secret_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ConvAiStoredSecretDependenciesToolsItems": {
            "name": "ConvAiStoredSecretDependenciesToolsItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "DependentAvailableToolIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentAvailableToolIdentifier"
                        },
                        "displayName": "DependentAvailableToolIdentifier"
                    },
                    {
                        "typeName": "DependentUnknownToolIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentUnknownToolIdentifier"
                        },
                        "displayName": "DependentUnknownToolIdentifier"
                    }
                ]
            }
        },
        "ConvAiStoredSecretDependenciesAgentsItems": {
            "name": "ConvAiStoredSecretDependenciesAgentsItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "DependentAvailableAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentAvailableAgentIdentifier"
                        },
                        "displayName": "DependentAvailableAgentIdentifier"
                    },
                    {
                        "typeName": "DependentUnknownAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentUnknownAgentIdentifier"
                        },
                        "displayName": "DependentUnknownAgentIdentifier"
                    }
                ]
            }
        },
        "ConvAIStoredSecretDependencies": {
            "name": "ConvAIStoredSecretDependencies",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "tools",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ConvAiStoredSecretDependenciesToolsItems"
                            }
                        }
                    },
                    {
                        "key": "agents",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ConvAiStoredSecretDependenciesAgentsItems"
                            }
                        }
                    },
                    {
                        "key": "others",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "SecretDependencyType"
                            }
                        }
                    },
                    {
                        "key": "phone_numbers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "DependentPhoneNumberIdentifier"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConvAIUserSecretDBModel": {
            "description": "User-specific secret model that are not shared with other users in a workspace.",
            "name": "ConvAIUserSecretDBModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "encrypted_value",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "nonce",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ConvAIWebhooks": {
            "name": "ConvAIWebhooks",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "post_call_webhook_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConvAIWorkspaceStoredSecretConfig": {
            "name": "ConvAIWorkspaceStoredSecretConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "stored"
                            }
                        }
                    },
                    {
                        "key": "secret_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "used_by",
                        "valueType": {
                            "type": "id",
                            "value": "ConvAIStoredSecretDependencies"
                        }
                    }
                ]
            }
        },
        "ConversationChargingCommonModel": {
            "name": "ConversationChargingCommonModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "dev_discount",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "is_burst",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "tier",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "llm_usage",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "LLMCategoryUsage"
                            }
                        }
                    },
                    {
                        "key": "llm_price",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "llm_charge",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "call_charge",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationConfig": {
            "name": "ConversationConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "If enabled audio will not be processed and only text will be used, use to avoid audio pricing.",
                        "key": "text_only",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "The maximum duration of a conversation in seconds",
                        "key": "max_duration_seconds",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": 600
                                }
                            }
                        }
                    },
                    {
                        "description": "The events that will be sent to the client",
                        "key": "client_events",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "ClientEvent"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationConfigClientOverride-Input": {
            "name": "ConversationConfigClientOverride-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Configuration for conversational text to speech",
                        "key": "tts",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "TTSConversationalConfigOverride"
                                }
                            }
                        }
                    },
                    {
                        "description": "Configuration for conversational events",
                        "key": "conversation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationConfigOverride"
                                }
                            }
                        }
                    },
                    {
                        "description": "Agent specific configuration",
                        "key": "agent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "AgentConfigOverride"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationConfigClientOverride-Output": {
            "name": "ConversationConfigClientOverride-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Configuration for conversational text to speech",
                        "key": "tts",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "TTSConversationalConfigOverride"
                                }
                            }
                        }
                    },
                    {
                        "description": "Configuration for conversational events",
                        "key": "conversation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationConfigOverride"
                                }
                            }
                        }
                    },
                    {
                        "description": "Agent specific configuration",
                        "key": "agent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "AgentConfigOverride"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationConfigClientOverrideConfig-Input": {
            "name": "ConversationConfigClientOverrideConfig-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Configures overrides for nested fields.",
                        "key": "tts",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TTSConversationalConfigOverrideConfig"
                            }
                        }
                    },
                    {
                        "description": "Configures overrides for nested fields.",
                        "key": "conversation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationConfigOverrideConfig"
                            }
                        }
                    },
                    {
                        "description": "Configures overrides for nested fields.",
                        "key": "agent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AgentConfigOverrideConfig"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationConfigClientOverrideConfig-Output": {
            "name": "ConversationConfigClientOverrideConfig-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Configures overrides for nested fields.",
                        "key": "tts",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TTSConversationalConfigOverrideConfig"
                            }
                        }
                    },
                    {
                        "description": "Configures overrides for nested fields.",
                        "key": "conversation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationConfigOverrideConfig"
                            }
                        }
                    },
                    {
                        "description": "Configures overrides for nested fields.",
                        "key": "agent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AgentConfigOverrideConfig"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationConfigOverride": {
            "name": "ConversationConfigOverride",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "If enabled audio will not be processed and only text will be used, use to avoid audio pricing.",
                        "key": "text_only",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationConfigOverrideConfig": {
            "name": "ConversationConfigOverrideConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether to allow overriding the text_only field.",
                        "key": "text_only",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationDeletionSettings": {
            "name": "ConversationDeletionSettings",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "deletion_time_unix_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "deleted_logs_at_time_unix_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "deleted_audio_at_time_unix_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "deleted_transcript_at_time_unix_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "delete_transcript_and_pii",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "delete_audio",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryAnalysisCommonModel": {
            "name": "ConversationHistoryAnalysisCommonModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "evaluation_criteria_results",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "ConversationHistoryEvaluationCriteriaResultCommonModel"
                                }
                            }
                        }
                    },
                    {
                        "key": "data_collection_results",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "DataCollectionResultCommonModel"
                                }
                            }
                        }
                    },
                    {
                        "key": "call_successful",
                        "valueType": {
                            "type": "id",
                            "value": "EvaluationSuccessResult"
                        }
                    },
                    {
                        "key": "transcript_summary",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryBatchCallModel": {
            "name": "ConversationHistoryBatchCallModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "batch_call_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "batch_call_recipient_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryErrorCommonModel": {
            "name": "ConversationHistoryErrorCommonModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "code",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "reason",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryEvaluationCriteriaResultCommonModel": {
            "name": "ConversationHistoryEvaluationCriteriaResultCommonModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "criteria_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "result",
                        "valueType": {
                            "type": "id",
                            "value": "EvaluationSuccessResult"
                        }
                    },
                    {
                        "key": "rationale",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryFeedbackCommonModel": {
            "name": "ConversationHistoryFeedbackCommonModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "overall_score",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "UserFeedbackScore"
                                }
                            }
                        }
                    },
                    {
                        "key": "likes",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        }
                    },
                    {
                        "key": "dislikes",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryMetadataCommonModelPhoneCall": {
            "name": "ConversationHistoryMetadataCommonModelPhoneCall",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "ConversationHistoryTwilioPhoneCallModel",
                        "type": {
                            "type": "id",
                            "value": "ConversationHistoryTwilioPhoneCallModel"
                        },
                        "displayName": "ConversationHistoryTwilioPhoneCallModel"
                    },
                    {
                        "typeName": "ConversationHistorySIPTrunkingPhoneCallModel",
                        "type": {
                            "type": "id",
                            "value": "ConversationHistorySIPTrunkingPhoneCallModel"
                        },
                        "displayName": "ConversationHistorySIPTrunkingPhoneCallModel"
                    }
                ]
            }
        },
        "ConversationHistoryMetadataCommonModel": {
            "name": "ConversationHistoryMetadataCommonModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "start_time_unix_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "accepted_time_unix_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "call_duration_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "cost",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "deletion_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationDeletionSettings"
                            }
                        }
                    },
                    {
                        "key": "feedback",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationHistoryFeedbackCommonModel"
                            }
                        }
                    },
                    {
                        "key": "authorization_method",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AuthorizationMethod"
                            }
                        }
                    },
                    {
                        "key": "charging",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationChargingCommonModel"
                            }
                        }
                    },
                    {
                        "key": "phone_call",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationHistoryMetadataCommonModelPhoneCall"
                                }
                            }
                        }
                    },
                    {
                        "key": "batch_call",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationHistoryBatchCallModel"
                                }
                            }
                        }
                    },
                    {
                        "key": "termination_reason",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "key": "error",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationHistoryErrorCommonModel"
                                }
                            }
                        }
                    },
                    {
                        "key": "main_language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "rag_usage",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationHistoryRagUsageCommonModel"
                                }
                            }
                        }
                    },
                    {
                        "key": "text_only",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "features_usage",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "FeaturesUsageCommonModel"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryRagUsageCommonModel": {
            "name": "ConversationHistoryRagUsageCommonModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "usage_count",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "embedding_model",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistorySipTrunkingPhoneCallModelDirection": {
            "name": "ConversationHistorySipTrunkingPhoneCallModelDirection",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "inbound"
                    },
                    {
                        "value": "outbound"
                    }
                ]
            }
        },
        "ConversationHistorySIPTrunkingPhoneCallModel": {
            "name": "ConversationHistorySIPTrunkingPhoneCallModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "direction",
                        "valueType": {
                            "type": "id",
                            "value": "ConversationHistorySipTrunkingPhoneCallModelDirection"
                        }
                    },
                    {
                        "key": "phone_number_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "agent_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "external_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "sip_trunking"
                            }
                        }
                    },
                    {
                        "key": "call_sid",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryTranscriptCommonModelInputRole": {
            "name": "ConversationHistoryTranscriptCommonModelInputRole",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "user"
                    },
                    {
                        "value": "agent"
                    }
                ]
            }
        },
        "ConversationHistoryTranscriptCommonModelInputSourceMedium": {
            "name": "ConversationHistoryTranscriptCommonModelInputSourceMedium",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "audio"
                    },
                    {
                        "value": "text"
                    }
                ]
            }
        },
        "ConversationHistoryTranscriptCommonModel-Input": {
            "name": "ConversationHistoryTranscriptCommonModel-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "role",
                        "valueType": {
                            "type": "id",
                            "value": "ConversationHistoryTranscriptCommonModelInputRole"
                        }
                    },
                    {
                        "key": "message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "tool_calls",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationHistoryTranscriptToolCallCommonModel"
                                }
                            }
                        }
                    },
                    {
                        "key": "tool_results",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationHistoryTranscriptToolResultCommonModel"
                                }
                            }
                        }
                    },
                    {
                        "key": "feedback",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "UserFeedback"
                                }
                            }
                        }
                    },
                    {
                        "key": "llm_override",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "time_in_call_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "conversation_turn_metrics",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationTurnMetrics"
                                }
                            }
                        }
                    },
                    {
                        "key": "rag_retrieval_info",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "RagRetrievalInfo"
                                }
                            }
                        }
                    },
                    {
                        "key": "llm_usage",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "LLMUsage-Input"
                                }
                            }
                        }
                    },
                    {
                        "key": "interrupted",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "original_message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "source_medium",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationHistoryTranscriptCommonModelInputSourceMedium"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryTranscriptCommonModelOutputRole": {
            "name": "ConversationHistoryTranscriptCommonModelOutputRole",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "user"
                    },
                    {
                        "value": "agent"
                    }
                ]
            }
        },
        "ConversationHistoryTranscriptCommonModelOutputSourceMedium": {
            "name": "ConversationHistoryTranscriptCommonModelOutputSourceMedium",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "audio"
                    },
                    {
                        "value": "text"
                    }
                ]
            }
        },
        "ConversationHistoryTranscriptCommonModel-Output": {
            "name": "ConversationHistoryTranscriptCommonModel-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "role",
                        "valueType": {
                            "type": "id",
                            "value": "ConversationHistoryTranscriptCommonModelOutputRole"
                        }
                    },
                    {
                        "key": "message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "tool_calls",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationHistoryTranscriptToolCallCommonModel"
                                }
                            }
                        }
                    },
                    {
                        "key": "tool_results",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationHistoryTranscriptToolResultCommonModel"
                                }
                            }
                        }
                    },
                    {
                        "key": "feedback",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "UserFeedback"
                                }
                            }
                        }
                    },
                    {
                        "key": "llm_override",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "time_in_call_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "conversation_turn_metrics",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationTurnMetrics"
                                }
                            }
                        }
                    },
                    {
                        "key": "rag_retrieval_info",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "RagRetrievalInfo"
                                }
                            }
                        }
                    },
                    {
                        "key": "llm_usage",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "LLMUsage-Output"
                                }
                            }
                        }
                    },
                    {
                        "key": "interrupted",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "original_message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "source_medium",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationHistoryTranscriptCommonModelOutputSourceMedium"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryTranscriptToolCallClientDetails": {
            "name": "ConversationHistoryTranscriptToolCallClientDetails",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "client"
                                }
                            }
                        }
                    },
                    {
                        "key": "parameters",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryTranscriptToolCallCommonModelToolDetails": {
            "name": "ConversationHistoryTranscriptToolCallCommonModelToolDetails",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "ConversationHistoryTranscriptToolCallWebhookDetails",
                        "type": {
                            "type": "id",
                            "value": "ConversationHistoryTranscriptToolCallWebhookDetails"
                        },
                        "displayName": "ConversationHistoryTranscriptToolCallWebhookDetails"
                    },
                    {
                        "typeName": "ConversationHistoryTranscriptToolCallClientDetails",
                        "type": {
                            "type": "id",
                            "value": "ConversationHistoryTranscriptToolCallClientDetails"
                        },
                        "displayName": "ConversationHistoryTranscriptToolCallClientDetails"
                    }
                ]
            }
        },
        "ConversationHistoryTranscriptToolCallCommonModel": {
            "name": "ConversationHistoryTranscriptToolCallCommonModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "request_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "tool_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "params_as_json",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "tool_has_been_called",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "key": "tool_details",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationHistoryTranscriptToolCallCommonModelToolDetails"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryTranscriptToolCallWebhookDetails": {
            "name": "ConversationHistoryTranscriptToolCallWebhookDetails",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "webhook"
                                }
                            }
                        }
                    },
                    {
                        "key": "method",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "url",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "headers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "path_params",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "query_params",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "body",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryTranscriptToolResultCommonModel": {
            "name": "ConversationHistoryTranscriptToolResultCommonModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "request_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "tool_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "result_value",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "is_error",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "key": "tool_has_been_called",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "key": "tool_latency_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "default": 0
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationHistoryTwilioPhoneCallModelDirection": {
            "name": "ConversationHistoryTwilioPhoneCallModelDirection",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "inbound"
                    },
                    {
                        "value": "outbound"
                    }
                ]
            }
        },
        "ConversationHistoryTwilioPhoneCallModel": {
            "name": "ConversationHistoryTwilioPhoneCallModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "direction",
                        "valueType": {
                            "type": "id",
                            "value": "ConversationHistoryTwilioPhoneCallModelDirection"
                        }
                    },
                    {
                        "key": "phone_number_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "agent_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "external_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "twilio"
                            }
                        }
                    },
                    {
                        "key": "stream_sid",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "call_sid",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationInitiationClientDataConfig-Input": {
            "name": "ConversationInitiationClientDataConfig-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Overrides for the conversation configuration",
                        "key": "conversation_config_override",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationConfigClientOverrideConfig-Input"
                            }
                        }
                    },
                    {
                        "description": "Whether to include custom LLM extra body",
                        "key": "custom_llm_extra_body",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to enable conversation initiation client data from webhooks",
                        "key": "enable_conversation_initiation_client_data_from_webhook",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationInitiationClientDataConfig-Output": {
            "name": "ConversationInitiationClientDataConfig-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Overrides for the conversation configuration",
                        "key": "conversation_config_override",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationConfigClientOverrideConfig-Output"
                            }
                        }
                    },
                    {
                        "description": "Whether to include custom LLM extra body",
                        "key": "custom_llm_extra_body",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to enable conversation initiation client data from webhooks",
                        "key": "enable_conversation_initiation_client_data_from_webhook",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationInitiationClientDataInternalCustomLlmExtraBody": {
            "name": "ConversationInitiationClientDataInternalCustomLlmExtraBody",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": []
            }
        },
        "ConversationInitiationClientDataInternalDynamicVariables": {
            "name": "ConversationInitiationClientDataInternalDynamicVariables",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationInitiationClientDataInternal": {
            "name": "ConversationInitiationClientDataInternal",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "conversation_config_override",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationConfigClientOverride-Output"
                            }
                        }
                    },
                    {
                        "key": "custom_llm_extra_body",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationInitiationClientDataInternalCustomLlmExtraBody"
                            }
                        }
                    },
                    {
                        "key": "dynamic_variables",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "id",
                                        "value": "ConversationInitiationClientDataInternalDynamicVariables"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationInitiationClientDataRequestInputCustomLlmExtraBody": {
            "name": "ConversationInitiationClientDataRequestInputCustomLlmExtraBody",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": []
            }
        },
        "ConversationInitiationClientDataRequestInputDynamicVariables": {
            "name": "ConversationInitiationClientDataRequestInputDynamicVariables",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationInitiationClientDataRequest-Input": {
            "name": "ConversationInitiationClientDataRequest-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "conversation_config_override",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationConfigClientOverride-Input"
                            }
                        }
                    },
                    {
                        "key": "custom_llm_extra_body",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationInitiationClientDataRequestInputCustomLlmExtraBody"
                            }
                        }
                    },
                    {
                        "key": "dynamic_variables",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "id",
                                        "value": "ConversationInitiationClientDataRequestInputDynamicVariables"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationInitiationClientDataRequestOutputCustomLlmExtraBody": {
            "name": "ConversationInitiationClientDataRequestOutputCustomLlmExtraBody",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": []
            }
        },
        "ConversationInitiationClientDataRequestOutputDynamicVariables": {
            "name": "ConversationInitiationClientDataRequestOutputDynamicVariables",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationInitiationClientDataRequest-Output": {
            "name": "ConversationInitiationClientDataRequest-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "conversation_config_override",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationConfigClientOverride-Output"
                            }
                        }
                    },
                    {
                        "key": "custom_llm_extra_body",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationInitiationClientDataRequestOutputCustomLlmExtraBody"
                            }
                        }
                    },
                    {
                        "key": "dynamic_variables",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "id",
                                        "value": "ConversationInitiationClientDataRequestOutputDynamicVariables"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationInitiationClientDataWebhookRequestHeaders": {
            "name": "ConversationInitiationClientDataWebhookRequestHeaders",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "typeName": "ConvAISecretLocator",
                        "type": {
                            "type": "id",
                            "value": "ConvAISecretLocator"
                        },
                        "displayName": "ConvAISecretLocator"
                    }
                ]
            }
        },
        "ConversationInitiationClientDataWebhook": {
            "name": "ConversationInitiationClientDataWebhook",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The URL to send the webhook to",
                        "key": "url",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The headers to send with the webhook request",
                        "key": "request_headers",
                        "valueType": {
                            "type": "map",
                            "keyType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            },
                            "valueType": {
                                "type": "id",
                                "value": "ConversationInitiationClientDataWebhookRequestHeaders"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationSignedUrlResponseModel": {
            "name": "ConversationSignedUrlResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "signed_url",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationSimulationSpecificationDynamicVariables": {
            "name": "ConversationSimulationSpecificationDynamicVariables",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationSimulationSpecification": {
            "description": "A specification that will be used to simulate a conversation between an agent and an AI user.",
            "name": "ConversationSimulationSpecification",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "simulated_user_config",
                        "valueType": {
                            "type": "id",
                            "value": "AgentConfigDBModel"
                        }
                    },
                    {
                        "key": "tool_mock_config",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "ToolMockConfig"
                                }
                            }
                        }
                    },
                    {
                        "description": "A partial conversation history to start the simulation from. If empty, simulation starts fresh.",
                        "key": "partial_conversation_history",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationHistoryTranscriptCommonModel-Input"
                                }
                            }
                        }
                    },
                    {
                        "key": "dynamic_variables",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "id",
                                        "value": "ConversationSimulationSpecificationDynamicVariables"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationSummaryResponseModelStatus": {
            "name": "ConversationSummaryResponseModelStatus",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "initiated"
                    },
                    {
                        "value": "in-progress"
                    },
                    {
                        "value": "processing"
                    },
                    {
                        "value": "done"
                    },
                    {
                        "value": "failed"
                    }
                ]
            }
        },
        "ConversationSummaryResponseModel": {
            "name": "ConversationSummaryResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "agent_name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "conversation_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "start_time_unix_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "call_duration_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "message_count",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "status",
                        "valueType": {
                            "type": "id",
                            "value": "ConversationSummaryResponseModelStatus"
                        }
                    },
                    {
                        "key": "call_successful",
                        "valueType": {
                            "type": "id",
                            "value": "EvaluationSuccessResult"
                        }
                    }
                ]
            }
        },
        "ConversationTokenDBModel": {
            "name": "ConversationTokenDBModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the agent",
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The token for the agent",
                        "key": "conversation_token",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The expiration time of the token in unix seconds",
                        "key": "expiration_time_unix_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The ID of the conversation",
                        "key": "conversation_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The purpose of the token",
                        "key": "purpose",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationTokenPurpose"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationTokenPurpose": {
            "name": "ConversationTokenPurpose",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "signed_url"
                    },
                    {
                        "value": "shareable_link"
                    }
                ]
            }
        },
        "ConversationTurnMetrics": {
            "name": "ConversationTurnMetrics",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "metrics",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "MetricRecord"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ConversationalConfigAPIModel-Input": {
            "name": "ConversationalConfigAPIModel-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Configuration for conversational transcription",
                        "key": "asr",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ASRConversationalConfig"
                            }
                        }
                    },
                    {
                        "description": "Configuration for turn detection",
                        "key": "turn",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TurnConfig"
                            }
                        }
                    },
                    {
                        "description": "Configuration for conversational text to speech",
                        "key": "tts",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TTSConversationalConfig-Input"
                            }
                        }
                    },
                    {
                        "description": "Configuration for conversational events",
                        "key": "conversation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationConfig"
                            }
                        }
                    },
                    {
                        "description": "Language presets for conversations",
                        "key": "language_presets",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "LanguagePreset-Input"
                                }
                            }
                        }
                    },
                    {
                        "description": "Agent specific configuration",
                        "key": "agent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AgentConfigAPIModel-Input"
                            }
                        }
                    }
                ]
            }
        },
        "ConversationalConfigAPIModel-Output": {
            "name": "ConversationalConfigAPIModel-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Configuration for conversational transcription",
                        "key": "asr",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ASRConversationalConfig"
                            }
                        }
                    },
                    {
                        "description": "Configuration for turn detection",
                        "key": "turn",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TurnConfig"
                            }
                        }
                    },
                    {
                        "description": "Configuration for conversational text to speech",
                        "key": "tts",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TTSConversationalConfig-Output"
                            }
                        }
                    },
                    {
                        "description": "Configuration for conversational events",
                        "key": "conversation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationConfig"
                            }
                        }
                    },
                    {
                        "description": "Language presets for conversations",
                        "key": "language_presets",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "LanguagePreset-Output"
                                }
                            }
                        }
                    },
                    {
                        "description": "Agent specific configuration",
                        "key": "agent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AgentConfigAPIModel-Output"
                            }
                        }
                    }
                ]
            }
        },
        "ConvertChapterResponseModel": {
            "name": "ConvertChapterResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the studio chapter conversion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ConvertProjectResponseModel": {
            "name": "ConvertProjectResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the studio project conversion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "CreateAgentResponseModel": {
            "name": "CreateAgentResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "ID of the created agent",
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "CreatePhoneNumberResponseModel": {
            "name": "CreatePhoneNumberResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Phone entity ID",
                        "key": "phone_number_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "CreatePronunciationDictionaryResponseModel": {
            "name": "CreatePronunciationDictionaryResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the create pronunciation dictionary request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "CreateSIPTrunkPhoneNumberRequest": {
            "description": "SIP trunk phone number request\n\nIncludes termination URI and optional digest authentication credentials.\nIf credentials are provided, both username and password must be included.\nIf credentials are not provided, ACL authentication is assumed. (user needs to add our ips in their settings)",
            "name": "CreateSIPTrunkPhoneNumberRequest",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Phone number",
                        "key": "phone_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Label for the phone number",
                        "key": "label",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "provider",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "sip_trunk"
                                }
                            }
                        }
                    },
                    {
                        "description": "SIP trunk termination URI",
                        "key": "termination_uri",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Hostname or IP the SIP INVITE is sent to.",
                        "key": "address",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Protocol to use for SIP transport (signalling layer).",
                        "key": "transport",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "SIPTrunkTransportEnum"
                            }
                        }
                    },
                    {
                        "description": "Whether or not to encrypt media (data layer).",
                        "key": "media_encryption",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "SIPMediaEncryptionEnum"
                            }
                        }
                    },
                    {
                        "description": "Whether or not to encrypt media (data layer) for inbound calls.",
                        "key": "inbound_media_encryption",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "SIPMediaEncryptionEnum"
                            }
                        }
                    },
                    {
                        "description": "SIP X-* headers for INVITE request. These headers are sent as-is and may help identify this call.",
                        "key": "headers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Optional digest authentication credentials (username/password). If not provided, ACL authentication is assumed.",
                        "key": "credentials",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SIPTrunkCredentials"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "CreateTwilioPhoneNumberRequest": {
            "name": "CreateTwilioPhoneNumberRequest",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Phone number",
                        "key": "phone_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Label for the phone number",
                        "key": "label",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "provider",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "twilio"
                                }
                            }
                        }
                    },
                    {
                        "description": "Twilio Account SID",
                        "key": "sid",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Twilio Auth Token",
                        "key": "token",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "CustomLlmRequestHeaders": {
            "name": "CustomLlmRequestHeaders",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "typeName": "ConvAISecretLocator",
                        "type": {
                            "type": "id",
                            "value": "ConvAISecretLocator"
                        },
                        "displayName": "ConvAISecretLocator"
                    },
                    {
                        "typeName": "ConvAIDynamicVariable",
                        "type": {
                            "type": "id",
                            "value": "ConvAIDynamicVariable"
                        },
                        "displayName": "ConvAIDynamicVariable"
                    }
                ]
            }
        },
        "CustomLLM": {
            "name": "CustomLLM",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The URL of the Chat Completions compatible endpoint",
                        "key": "url",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The model ID to be used if URL serves multiple models",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The API key for authentication",
                        "key": "api_key",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConvAISecretLocator"
                                }
                            }
                        }
                    },
                    {
                        "description": "Headers that should be included in the request",
                        "key": "request_headers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "CustomLlmRequestHeaders"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "DashboardCallSuccessChartModel": {
            "name": "DashboardCallSuccessChartModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "call_success"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "DashboardCriteriaChartModel": {
            "name": "DashboardCriteriaChartModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "criteria"
                                }
                            }
                        }
                    },
                    {
                        "key": "criteria_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DashboardDataCollectionChartModel": {
            "name": "DashboardDataCollectionChartModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "data_collection"
                                }
                            }
                        }
                    },
                    {
                        "key": "data_collection_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DataCollectionResultCommonModel": {
            "name": "DataCollectionResultCommonModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "data_collection_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "value",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "unknown"
                            }
                        }
                    },
                    {
                        "key": "json_schema",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "LiteralJsonSchemaProperty"
                                }
                            }
                        }
                    },
                    {
                        "key": "rationale",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DefaultSharingPreferencesResponseModel": {
            "name": "DefaultSharingPreferencesResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "List of groups that the user shares with by default",
                        "key": "default_sharing_groups",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "WorkspaceGroupResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "DeleteChapterResponseModel": {
            "name": "DeleteChapterResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the studio chapter deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DeleteDubbingResponseModel": {
            "name": "DeleteDubbingResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the dubbing project. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DeleteHistoryItemResponse": {
            "name": "DeleteHistoryItemResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with http code 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DeleteProjectResponseModel": {
            "name": "DeleteProjectResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the studio project deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DeleteSampleResponseModel": {
            "name": "DeleteSampleResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the sample deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DeleteVoiceResponseModel": {
            "name": "DeleteVoiceResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the voice deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DeleteVoiceSampleResponseModel": {
            "name": "DeleteVoiceSampleResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the voice sample deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DeleteWorkspaceGroupMemberResponseModel": {
            "name": "DeleteWorkspaceGroupMemberResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the workspace group member deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DeleteWorkspaceInviteResponseModel": {
            "name": "DeleteWorkspaceInviteResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the workspace invite deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DeleteWorkspaceMemberResponseModel": {
            "name": "DeleteWorkspaceMemberResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the workspace member deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DependentAvailableAgentIdentifierAccessLevel": {
            "name": "DependentAvailableAgentIdentifierAccessLevel",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "admin"
                    },
                    {
                        "value": "editor"
                    },
                    {
                        "value": "viewer"
                    }
                ]
            }
        },
        "DependentAvailableAgentIdentifier": {
            "name": "DependentAvailableAgentIdentifier",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "available"
                                }
                            }
                        }
                    },
                    {
                        "key": "created_at_unix_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "access_level",
                        "valueType": {
                            "type": "id",
                            "value": "DependentAvailableAgentIdentifierAccessLevel"
                        }
                    }
                ]
            }
        },
        "DependentAvailableToolIdentifierAccessLevel": {
            "name": "DependentAvailableToolIdentifierAccessLevel",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "admin"
                    },
                    {
                        "value": "editor"
                    },
                    {
                        "value": "viewer"
                    }
                ]
            }
        },
        "DependentAvailableToolIdentifier": {
            "name": "DependentAvailableToolIdentifier",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "available"
                                }
                            }
                        }
                    },
                    {
                        "key": "created_at_unix_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "access_level",
                        "valueType": {
                            "type": "id",
                            "value": "DependentAvailableToolIdentifierAccessLevel"
                        }
                    }
                ]
            }
        },
        "DependentPhoneNumberIdentifier": {
            "name": "DependentPhoneNumberIdentifier",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "phone_number_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "phone_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "label",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "provider",
                        "valueType": {
                            "type": "id",
                            "value": "TelephonyProvider"
                        }
                    }
                ]
            }
        },
        "DependentUnknownAgentIdentifier": {
            "description": "A model that represents an agent dependent on a knowledge base/tools\nto which the user has no direct access.",
            "name": "DependentUnknownAgentIdentifier",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "unknown"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "DependentUnknownToolIdentifier": {
            "description": "A model that represents an tool dependent on a knowledge base/tools\nto which the user has no direct access.",
            "name": "DependentUnknownToolIdentifier",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "unknown"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "DialogueInput": {
            "name": "DialogueInput",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The text to be converted into speech.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the voice to be used for the generation.",
                        "key": "voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DialogueInputResponseModel": {
            "name": "DialogueInputResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The text of the dialogue input line.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the voice used for this dialogue input line.",
                        "key": "voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the voice used for this dialogue input line.",
                        "key": "voice_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DoDubbingResponseModel": {
            "name": "DoDubbingResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the dubbing project.",
                        "key": "dubbing_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The expected duration of the dubbing project in seconds.",
                        "key": "expected_duration_sec",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "DocumentUsageModeEnum": {
            "name": "DocumentUsageModeEnum",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "prompt"
                    },
                    {
                        "value": "auto"
                    }
                ]
            }
        },
        "DocxExportOptions": {
            "name": "DocxExportOptions",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "include_speakers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "key": "include_timestamps",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "key": "format",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "docx"
                            }
                        }
                    },
                    {
                        "key": "segment_on_silence_longer_than_s",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "max_segment_duration_s",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "max_segment_chars",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "DubbedSegment": {
            "name": "DubbedSegment",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "start_time",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "key": "end_time",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "key": "text",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "key": "audio_stale",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "key": "media_ref",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "id",
                                "value": "DubbingMediaReference"
                            }
                        }
                    }
                ]
            }
        },
        "DubbingMediaMetadata": {
            "name": "DubbingMediaMetadata",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The content type of the media.",
                        "key": "content_type",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The duration of the media in seconds.",
                        "key": "duration",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "DubbingMediaReference": {
            "name": "DubbingMediaReference",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "src",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "content_type",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "bucket_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "random_path_slug",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "duration_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "key": "is_audio",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "key": "url",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DubbingMetadataResponse": {
            "name": "DubbingMetadataResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the dubbing project.",
                        "key": "dubbing_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the dubbing project.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The status of the dubbing project. Either 'dubbed', 'dubbing' or 'failed'.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The target languages of the dubbing project.",
                        "key": "target_languages",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "The media metadata of the dubbing project.",
                        "key": "media_metadata",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "DubbingMediaMetadata"
                                }
                            }
                        }
                    },
                    {
                        "description": "Optional error message if the dubbing project failed.",
                        "key": "error",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "DubbingRenderResponseModel": {
            "name": "DubbingRenderResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "version",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "render_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "DubbingResource": {
            "name": "DubbingResource",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "version",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "source_language",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "target_languages",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "key": "input",
                        "valueType": {
                            "type": "id",
                            "value": "DubbingMediaReference"
                        }
                    },
                    {
                        "key": "background",
                        "valueType": {
                            "type": "id",
                            "value": "DubbingMediaReference"
                        }
                    },
                    {
                        "key": "foreground",
                        "valueType": {
                            "type": "id",
                            "value": "DubbingMediaReference"
                        }
                    },
                    {
                        "key": "speaker_tracks",
                        "valueType": {
                            "type": "map",
                            "keyType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            },
                            "valueType": {
                                "type": "id",
                                "value": "SpeakerTrack"
                            }
                        }
                    },
                    {
                        "key": "speaker_segments",
                        "valueType": {
                            "type": "map",
                            "keyType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            },
                            "valueType": {
                                "type": "id",
                                "value": "SpeakerSegment"
                            }
                        }
                    },
                    {
                        "key": "renders",
                        "valueType": {
                            "type": "map",
                            "keyType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            },
                            "valueType": {
                                "type": "id",
                                "value": "Render"
                            }
                        }
                    }
                ]
            }
        },
        "DynamicVariablesConfigDynamicVariablePlaceholders": {
            "name": "DynamicVariablesConfigDynamicVariablePlaceholders",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "DynamicVariablesConfig": {
            "name": "DynamicVariablesConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A dictionary of dynamic variable placeholders and their values",
                        "key": "dynamic_variable_placeholders",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "DynamicVariablesConfigDynamicVariablePlaceholders"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "EditChapterResponseModel": {
            "name": "EditChapterResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "chapter",
                        "valueType": {
                            "type": "id",
                            "value": "ChapterWithContentResponseModel"
                        }
                    }
                ]
            }
        },
        "EditProjectResponseModel": {
            "name": "EditProjectResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "project",
                        "valueType": {
                            "type": "id",
                            "value": "ProjectResponseModel"
                        }
                    }
                ]
            }
        },
        "EditVoiceResponseModel": {
            "name": "EditVoiceResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the voice edit request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "EditVoiceSettingsResponseModel": {
            "name": "EditVoiceSettingsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the voice settings edit request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "EmbedVariant": {
            "name": "EmbedVariant",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "tiny"
                    },
                    {
                        "value": "compact"
                    },
                    {
                        "value": "full"
                    },
                    {
                        "value": "expandable"
                    }
                ]
            }
        },
        "EmbeddingModelEnum": {
            "name": "EmbeddingModelEnum",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "e5_mistral_7b_instruct"
                    },
                    {
                        "value": "multilingual_e5_large_instruct"
                    }
                ]
            }
        },
        "EndCallToolConfig": {
            "name": "EndCallToolConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "system_tool_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "end_call"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "EvaluationSettings": {
            "description": "Settings to evaluate an agent's performance.\nAgents are evaluated against a set of criteria, with success being defined as meeting some combination of those criteria.",
            "name": "EvaluationSettings",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Individual criteria that the agent should be evaluated against",
                        "key": "criteria",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "PromptEvaluationCriteria"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "EvaluationSuccessResult": {
            "name": "EvaluationSuccessResult",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "success"
                    },
                    {
                        "value": "failure"
                    },
                    {
                        "value": "unknown"
                    }
                ]
            }
        },
        "ExportOptions": {
            "name": "ExportOptions",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "SegmentedJsonExportOptions",
                        "type": {
                            "type": "id",
                            "value": "SegmentedJsonExportOptions"
                        },
                        "displayName": "SegmentedJsonExportOptions"
                    },
                    {
                        "typeName": "DocxExportOptions",
                        "type": {
                            "type": "id",
                            "value": "DocxExportOptions"
                        },
                        "displayName": "DocxExportOptions"
                    },
                    {
                        "typeName": "PdfExportOptions",
                        "type": {
                            "type": "id",
                            "value": "PdfExportOptions"
                        },
                        "displayName": "PdfExportOptions"
                    },
                    {
                        "typeName": "TxtExportOptions",
                        "type": {
                            "type": "id",
                            "value": "TxtExportOptions"
                        },
                        "displayName": "TxtExportOptions"
                    },
                    {
                        "typeName": "HtmlExportOptions",
                        "type": {
                            "type": "id",
                            "value": "HtmlExportOptions"
                        },
                        "displayName": "HtmlExportOptions"
                    },
                    {
                        "typeName": "SrtExportOptions",
                        "type": {
                            "type": "id",
                            "value": "SrtExportOptions"
                        },
                        "displayName": "SrtExportOptions"
                    }
                ]
            }
        },
        "ExtendedSubscriptionResponseModelCurrency": {
            "description": "The currency of the user's subscription.",
            "name": "ExtendedSubscriptionResponseModelCurrency",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "usd"
                    },
                    {
                        "value": "eur"
                    }
                ]
            }
        },
        "ExtendedSubscriptionResponseModelBillingPeriod": {
            "description": "The billing period of the user's subscription.",
            "name": "ExtendedSubscriptionResponseModelBillingPeriod",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "monthly_period"
                    },
                    {
                        "value": "annual_period"
                    }
                ]
            }
        },
        "ExtendedSubscriptionResponseModelCharacterRefreshPeriod": {
            "description": "The character refresh period of the user's subscription.",
            "name": "ExtendedSubscriptionResponseModelCharacterRefreshPeriod",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "monthly_period"
                    },
                    {
                        "value": "annual_period"
                    }
                ]
            }
        },
        "ExtendedSubscriptionResponseModel": {
            "name": "ExtendedSubscriptionResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The tier of the user's subscription.",
                        "key": "tier",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The number of characters used by the user.",
                        "key": "character_count",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The maximum number of characters allowed in the current billing period.",
                        "key": "character_limit",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "Maximum number of characters that the character limit can be exceeded by. Managed by the workspace admin.",
                        "key": "max_character_limit_extension",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the user can extend their character limit.",
                        "key": "can_extend_character_limit",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user is allowed to extend their character limit.",
                        "key": "allowed_to_extend_character_limit",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The Unix timestamp of the next character count reset.",
                        "key": "next_character_count_reset_unix",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The number of voice slots used by the user.",
                        "key": "voice_slots_used",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The number of professional voice slots used by the workspace/user if single seat.",
                        "key": "professional_voice_slots_used",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The maximum number of voice slots allowed for the user.",
                        "key": "voice_limit",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The maximum number of voice add/edits allowed for the user.",
                        "key": "max_voice_add_edits",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The number of voice add/edits used by the user.",
                        "key": "voice_add_edit_counter",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The maximum number of professional voices allowed for the user.",
                        "key": "professional_voice_limit",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "Whether the user can extend their voice limit.",
                        "key": "can_extend_voice_limit",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user can use instant voice cloning.",
                        "key": "can_use_instant_voice_cloning",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user can use professional voice cloning.",
                        "key": "can_use_professional_voice_cloning",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The currency of the user's subscription.",
                        "key": "currency",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ExtendedSubscriptionResponseModelCurrency"
                                }
                            }
                        }
                    },
                    {
                        "description": "The status of the user's subscription.",
                        "key": "status",
                        "valueType": {
                            "type": "id",
                            "value": "SubscriptionStatusType"
                        }
                    },
                    {
                        "description": "The billing period of the user's subscription.",
                        "key": "billing_period",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ExtendedSubscriptionResponseModelBillingPeriod"
                                }
                            }
                        }
                    },
                    {
                        "description": "The character refresh period of the user's subscription.",
                        "key": "character_refresh_period",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ExtendedSubscriptionResponseModelCharacterRefreshPeriod"
                                }
                            }
                        }
                    },
                    {
                        "description": "The next invoice for the user.",
                        "key": "next_invoice",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "InvoiceResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the user has open invoices.",
                        "key": "has_open_invoices",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "FeatureStatusCommonModel": {
            "name": "FeatureStatusCommonModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "used",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "FeaturesUsageCommonModel": {
            "name": "FeaturesUsageCommonModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "language_detection",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "FeatureStatusCommonModel"
                            }
                        }
                    },
                    {
                        "key": "transfer_to_agent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "FeatureStatusCommonModel"
                            }
                        }
                    },
                    {
                        "key": "transfer_to_number",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "FeatureStatusCommonModel"
                            }
                        }
                    },
                    {
                        "key": "multivoice",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "FeatureStatusCommonModel"
                            }
                        }
                    },
                    {
                        "key": "pii_zrm_workspace",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "pii_zrm_agent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "FeedbackResponseModel": {
            "name": "FeedbackResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether the user liked the generated item.",
                        "key": "thumbs_up",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The feedback text provided by the user.",
                        "key": "feedback",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Whether the user provided emotions.",
                        "key": "emotions",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user thinks the clone is inaccurate.",
                        "key": "inaccurate_clone",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user thinks there are glitches in the audio.",
                        "key": "glitches",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user thinks the audio quality is good.",
                        "key": "audio_quality",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user provided other feedback.",
                        "key": "other",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The review status of the item. Defaults to 'not_reviewed'.",
                        "key": "review_status",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "not_reviewed"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "FineTuningResponseModelState": {
            "name": "FineTuningResponseModelState",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "not_started"
                    },
                    {
                        "value": "queued"
                    },
                    {
                        "value": "fine_tuning"
                    },
                    {
                        "value": "fine_tuned"
                    },
                    {
                        "value": "failed"
                    },
                    {
                        "value": "delayed"
                    }
                ]
            }
        },
        "FineTuningResponseModel": {
            "name": "FineTuningResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether the user is allowed to fine-tune the voice.",
                        "key": "is_allowed_to_fine_tune",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "The state of the fine-tuning process for each model.",
                        "key": "state",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "FineTuningResponseModelState"
                                }
                            }
                        }
                    },
                    {
                        "description": "List of verification failures in the fine-tuning process.",
                        "key": "verification_failures",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The number of verification attempts in the fine-tuning process.",
                        "key": "verification_attempts_count",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether a manual verification was requested for the fine-tuning process.",
                        "key": "manual_verification_requested",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "The language of the fine-tuning process.",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The progress of the fine-tuning process.",
                        "key": "progress",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "map",
                                    "keyType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "valueType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "double"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The message of the fine-tuning process.",
                        "key": "message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "map",
                                    "keyType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "valueType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The duration of the dataset in seconds.",
                        "key": "dataset_duration_seconds",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The number of verification attempts.",
                        "key": "verification_attempts",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "VerificationAttemptResponseModel"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "List of slice IDs.",
                        "key": "slice_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The manual verification of the fine-tuning process.",
                        "key": "manual_verification",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ManualVerificationResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "The maximum number of verification attempts.",
                        "key": "max_verification_attempts",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The next maximum verification attempts reset time in Unix milliseconds.",
                        "key": "next_max_verification_attempts_reset_unix_ms",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "finetuning_state",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "unknown"
                            }
                        }
                    }
                ]
            }
        },
        "ForcedAlignmentCharacterResponseModel": {
            "description": "Model representing a single character with its timing information from the aligner.",
            "name": "ForcedAlignmentCharacterResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The character that was transcribed.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The start time of the character in seconds.",
                        "key": "start",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "description": "The end time of the character in seconds.",
                        "key": "end",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "ForcedAlignmentResponseModel": {
            "description": "Model representing the response from the aligner service.",
            "name": "ForcedAlignmentResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "List of characters with their timing information.",
                        "key": "characters",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ForcedAlignmentCharacterResponseModel"
                            }
                        }
                    },
                    {
                        "description": "List of words with their timing information.",
                        "key": "words",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ForcedAlignmentWordResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "ForcedAlignmentWordResponseModel": {
            "description": "Model representing a single word with its timing information from the aligner.",
            "name": "ForcedAlignmentWordResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The word that was transcribed.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The start time of the word in seconds.",
                        "key": "start",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "description": "The end time of the word in seconds.",
                        "key": "end",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "GetAgentEmbedResponseModel": {
            "name": "GetAgentEmbedResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "widget_config",
                        "valueType": {
                            "type": "id",
                            "value": "WidgetConfigResponseModel"
                        }
                    }
                ]
            }
        },
        "GetAgentKnowledgebaseSizeResponseModel": {
            "name": "GetAgentKnowledgebaseSizeResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "number_of_pages",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "GetAgentLinkResponseModel": {
            "name": "GetAgentLinkResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the agent",
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The token data for the agent",
                        "key": "token",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationTokenDBModel"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "GetAgentResponseModelPhoneNumbersItems": {
            "name": "GetAgentResponseModelPhoneNumbersItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "GetPhoneNumberTwilioResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetPhoneNumberTwilioResponseModel"
                        },
                        "displayName": "GetPhoneNumberTwilioResponseModel"
                    },
                    {
                        "typeName": "GetPhoneNumberSIPTrunkResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetPhoneNumberSIPTrunkResponseModel"
                        },
                        "displayName": "GetPhoneNumberSIPTrunkResponseModel"
                    }
                ]
            }
        },
        "GetAgentResponseModel": {
            "name": "GetAgentResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the agent",
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the agent",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The conversation configuration of the agent",
                        "key": "conversation_config",
                        "valueType": {
                            "type": "id",
                            "value": "ConversationalConfigAPIModel-Output"
                        }
                    },
                    {
                        "description": "The metadata of the agent",
                        "key": "metadata",
                        "valueType": {
                            "type": "id",
                            "value": "AgentMetadataResponseModel"
                        }
                    },
                    {
                        "description": "The platform settings of the agent",
                        "key": "platform_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "AgentPlatformSettingsResponseModel"
                            }
                        }
                    },
                    {
                        "description": "The phone numbers of the agent",
                        "key": "phone_numbers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "GetAgentResponseModelPhoneNumbersItems"
                                }
                            }
                        }
                    },
                    {
                        "description": "The access information of the agent for the user",
                        "key": "access_info",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ResourceAccessInfo"
                                }
                            }
                        }
                    },
                    {
                        "description": "Agent tags used to categorize the agent",
                        "key": "tags",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "GetAgentsPageResponseModel": {
            "name": "GetAgentsPageResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A list of agents and their metadata",
                        "key": "agents",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "AgentSummaryResponseModel"
                            }
                        }
                    },
                    {
                        "description": "The next cursor to paginate through the agents",
                        "key": "next_cursor",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether there are more agents to paginate through",
                        "key": "has_more",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "GetAudioNativeProjectSettingsResponseModel": {
            "name": "GetAudioNativeProjectSettingsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether the project is enabled.",
                        "key": "enabled",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The ID of the latest snapshot of the project.",
                        "key": "snapshot_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The settings of the project.",
                        "key": "settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "AudioNativeProjectSettingsResponseModel"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "GetChaptersResponseModel": {
            "name": "GetChaptersResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "chapters",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ChapterResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "GetConvAiDashboardSettingsResponseModelChartsItems": {
            "name": "GetConvAiDashboardSettingsResponseModelChartsItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "DashboardCallSuccessChartModel",
                        "type": {
                            "type": "id",
                            "value": "DashboardCallSuccessChartModel"
                        },
                        "displayName": "DashboardCallSuccessChartModel"
                    },
                    {
                        "typeName": "DashboardCriteriaChartModel",
                        "type": {
                            "type": "id",
                            "value": "DashboardCriteriaChartModel"
                        },
                        "displayName": "DashboardCriteriaChartModel"
                    },
                    {
                        "typeName": "DashboardDataCollectionChartModel",
                        "type": {
                            "type": "id",
                            "value": "DashboardDataCollectionChartModel"
                        },
                        "displayName": "DashboardDataCollectionChartModel"
                    }
                ]
            }
        },
        "GetConvAIDashboardSettingsResponseModel": {
            "name": "GetConvAIDashboardSettingsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "charts",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "GetConvAiDashboardSettingsResponseModelChartsItems"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "GetConvAISettingsResponseModel": {
            "name": "GetConvAISettingsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "conversation_initiation_client_data_webhook",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationInitiationClientDataWebhook"
                                }
                            }
                        }
                    },
                    {
                        "key": "webhooks",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConvAIWebhooks"
                            }
                        }
                    },
                    {
                        "description": "Whether the workspace can use MCP servers",
                        "key": "can_use_mcp_servers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "rag_retention_period_days",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "maximum": 30,
                                    "default": 10
                                }
                            }
                        }
                    }
                ]
            }
        },
        "GetConversationResponseModelStatus": {
            "name": "GetConversationResponseModelStatus",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "initiated"
                    },
                    {
                        "value": "in-progress"
                    },
                    {
                        "value": "processing"
                    },
                    {
                        "value": "done"
                    },
                    {
                        "value": "failed"
                    }
                ]
            }
        },
        "GetConversationResponseModel": {
            "name": "GetConversationResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "conversation_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "status",
                        "valueType": {
                            "type": "id",
                            "value": "GetConversationResponseModelStatus"
                        }
                    },
                    {
                        "key": "transcript",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationHistoryTranscriptCommonModel-Output"
                            }
                        }
                    },
                    {
                        "key": "metadata",
                        "valueType": {
                            "type": "id",
                            "value": "ConversationHistoryMetadataCommonModel"
                        }
                    },
                    {
                        "key": "analysis",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationHistoryAnalysisCommonModel"
                                }
                            }
                        }
                    },
                    {
                        "key": "conversation_initiation_client_data",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationInitiationClientDataRequest-Output"
                            }
                        }
                    },
                    {
                        "key": "has_audio",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "key": "has_user_audio",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "key": "has_response_audio",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "GetConversationsPageResponseModel": {
            "name": "GetConversationsPageResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "conversations",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ConversationSummaryResponseModel"
                            }
                        }
                    },
                    {
                        "key": "next_cursor",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "has_more",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "GetKnowledgeBaseDependentAgentsResponseModelAgentsItems": {
            "name": "GetKnowledgeBaseDependentAgentsResponseModelAgentsItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "DependentAvailableAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentAvailableAgentIdentifier"
                        },
                        "displayName": "DependentAvailableAgentIdentifier"
                    },
                    {
                        "typeName": "DependentUnknownAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentUnknownAgentIdentifier"
                        },
                        "displayName": "DependentUnknownAgentIdentifier"
                    }
                ]
            }
        },
        "GetKnowledgeBaseDependentAgentsResponseModel": {
            "name": "GetKnowledgeBaseDependentAgentsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "agents",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "GetKnowledgeBaseDependentAgentsResponseModelAgentsItems"
                            }
                        }
                    },
                    {
                        "key": "next_cursor",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "has_more",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "GetKnowledgeBaseFileResponseModel": {
            "name": "GetKnowledgeBaseFileResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "metadata",
                        "valueType": {
                            "type": "id",
                            "value": "KnowledgeBaseDocumentMetadataResponseModel"
                        }
                    },
                    {
                        "key": "supported_usages",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "DocumentUsageModeEnum"
                            }
                        }
                    },
                    {
                        "key": "access_info",
                        "valueType": {
                            "type": "id",
                            "value": "ResourceAccessInfo"
                        }
                    },
                    {
                        "key": "extracted_inner_html",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "file"
                            }
                        }
                    }
                ]
            }
        },
        "GetKnowledgeBaseListResponseModelDocumentsItems": {
            "name": "GetKnowledgeBaseListResponseModelDocumentsItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "GetKnowledgeBaseSummaryURLResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetKnowledgeBaseSummaryURLResponseModel"
                        },
                        "displayName": "GetKnowledgeBaseSummaryURLResponseModel"
                    },
                    {
                        "typeName": "GetKnowledgeBaseSummaryFileResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetKnowledgeBaseSummaryFileResponseModel"
                        },
                        "displayName": "GetKnowledgeBaseSummaryFileResponseModel"
                    },
                    {
                        "typeName": "GetKnowledgeBaseSummaryTextResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetKnowledgeBaseSummaryTextResponseModel"
                        },
                        "displayName": "GetKnowledgeBaseSummaryTextResponseModel"
                    }
                ]
            }
        },
        "GetKnowledgeBaseListResponseModel": {
            "name": "GetKnowledgeBaseListResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "documents",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "GetKnowledgeBaseListResponseModelDocumentsItems"
                            }
                        }
                    },
                    {
                        "key": "next_cursor",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "has_more",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "GetKnowledgeBaseSummaryFileResponseModelDependentAgentsItems": {
            "name": "GetKnowledgeBaseSummaryFileResponseModelDependentAgentsItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "DependentAvailableAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentAvailableAgentIdentifier"
                        },
                        "displayName": "DependentAvailableAgentIdentifier"
                    },
                    {
                        "typeName": "DependentUnknownAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentUnknownAgentIdentifier"
                        },
                        "displayName": "DependentUnknownAgentIdentifier"
                    }
                ]
            }
        },
        "GetKnowledgeBaseSummaryFileResponseModel": {
            "name": "GetKnowledgeBaseSummaryFileResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "metadata",
                        "valueType": {
                            "type": "id",
                            "value": "KnowledgeBaseDocumentMetadataResponseModel"
                        }
                    },
                    {
                        "key": "supported_usages",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "DocumentUsageModeEnum"
                            }
                        }
                    },
                    {
                        "key": "access_info",
                        "valueType": {
                            "type": "id",
                            "value": "ResourceAccessInfo"
                        }
                    },
                    {
                        "key": "dependent_agents",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "GetKnowledgeBaseSummaryFileResponseModelDependentAgentsItems"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "file"
                            }
                        }
                    }
                ]
            }
        },
        "GetKnowledgeBaseSummaryTextResponseModelDependentAgentsItems": {
            "name": "GetKnowledgeBaseSummaryTextResponseModelDependentAgentsItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "DependentAvailableAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentAvailableAgentIdentifier"
                        },
                        "displayName": "DependentAvailableAgentIdentifier"
                    },
                    {
                        "typeName": "DependentUnknownAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentUnknownAgentIdentifier"
                        },
                        "displayName": "DependentUnknownAgentIdentifier"
                    }
                ]
            }
        },
        "GetKnowledgeBaseSummaryTextResponseModel": {
            "name": "GetKnowledgeBaseSummaryTextResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "metadata",
                        "valueType": {
                            "type": "id",
                            "value": "KnowledgeBaseDocumentMetadataResponseModel"
                        }
                    },
                    {
                        "key": "supported_usages",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "DocumentUsageModeEnum"
                            }
                        }
                    },
                    {
                        "key": "access_info",
                        "valueType": {
                            "type": "id",
                            "value": "ResourceAccessInfo"
                        }
                    },
                    {
                        "key": "dependent_agents",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "GetKnowledgeBaseSummaryTextResponseModelDependentAgentsItems"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "text"
                            }
                        }
                    }
                ]
            }
        },
        "GetKnowledgeBaseSummaryUrlResponseModelDependentAgentsItems": {
            "name": "GetKnowledgeBaseSummaryUrlResponseModelDependentAgentsItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "DependentAvailableAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentAvailableAgentIdentifier"
                        },
                        "displayName": "DependentAvailableAgentIdentifier"
                    },
                    {
                        "typeName": "DependentUnknownAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentUnknownAgentIdentifier"
                        },
                        "displayName": "DependentUnknownAgentIdentifier"
                    }
                ]
            }
        },
        "GetKnowledgeBaseSummaryURLResponseModel": {
            "name": "GetKnowledgeBaseSummaryURLResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "metadata",
                        "valueType": {
                            "type": "id",
                            "value": "KnowledgeBaseDocumentMetadataResponseModel"
                        }
                    },
                    {
                        "key": "supported_usages",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "DocumentUsageModeEnum"
                            }
                        }
                    },
                    {
                        "key": "access_info",
                        "valueType": {
                            "type": "id",
                            "value": "ResourceAccessInfo"
                        }
                    },
                    {
                        "key": "dependent_agents",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "GetKnowledgeBaseSummaryUrlResponseModelDependentAgentsItems"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "url"
                            }
                        }
                    },
                    {
                        "key": "url",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "GetKnowledgeBaseTextResponseModel": {
            "name": "GetKnowledgeBaseTextResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "metadata",
                        "valueType": {
                            "type": "id",
                            "value": "KnowledgeBaseDocumentMetadataResponseModel"
                        }
                    },
                    {
                        "key": "supported_usages",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "DocumentUsageModeEnum"
                            }
                        }
                    },
                    {
                        "key": "access_info",
                        "valueType": {
                            "type": "id",
                            "value": "ResourceAccessInfo"
                        }
                    },
                    {
                        "key": "extracted_inner_html",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "text"
                            }
                        }
                    }
                ]
            }
        },
        "GetKnowledgeBaseURLResponseModel": {
            "name": "GetKnowledgeBaseURLResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "metadata",
                        "valueType": {
                            "type": "id",
                            "value": "KnowledgeBaseDocumentMetadataResponseModel"
                        }
                    },
                    {
                        "key": "supported_usages",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "DocumentUsageModeEnum"
                            }
                        }
                    },
                    {
                        "key": "access_info",
                        "valueType": {
                            "type": "id",
                            "value": "ResourceAccessInfo"
                        }
                    },
                    {
                        "key": "extracted_inner_html",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "url"
                            }
                        }
                    },
                    {
                        "key": "url",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "GetLibraryVoicesResponseModel": {
            "name": "GetLibraryVoicesResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The list of shared voices",
                        "key": "voices",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "LibraryVoiceResponseModel"
                            }
                        }
                    },
                    {
                        "description": "Whether there are more shared voices in subsequent pages.",
                        "key": "has_more",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "key": "last_sort_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "GetPhoneNumberSIPTrunkResponseModel": {
            "name": "GetPhoneNumberSIPTrunkResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Phone number",
                        "key": "phone_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Label for the phone number",
                        "key": "label",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the phone number",
                        "key": "phone_number_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The agent that is assigned to the phone number",
                        "key": "assigned_agent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "PhoneNumberAgentInfo"
                                }
                            }
                        }
                    },
                    {
                        "description": "Phone provider",
                        "key": "provider",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "sip_trunk"
                                }
                            }
                        }
                    },
                    {
                        "key": "provider_config",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SIPTrunkConfigResponseModel"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "GetPhoneNumberTwilioResponseModel": {
            "name": "GetPhoneNumberTwilioResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Phone number",
                        "key": "phone_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Label for the phone number",
                        "key": "label",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the phone number",
                        "key": "phone_number_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The agent that is assigned to the phone number",
                        "key": "assigned_agent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "PhoneNumberAgentInfo"
                                }
                            }
                        }
                    },
                    {
                        "description": "Phone provider",
                        "key": "provider",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "twilio"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "GetProjectsResponseModel": {
            "name": "GetProjectsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A list of projects with their metadata.",
                        "key": "projects",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ProjectResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "GetPronunciationDictionariesMetadataResponseModel": {
            "name": "GetPronunciationDictionariesMetadataResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A list of pronunciation dictionaries and their metadata.",
                        "key": "pronunciation_dictionaries",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "GetPronunciationDictionaryMetadataResponseModel"
                            }
                        }
                    },
                    {
                        "description": "The next cursor to use for pagination.",
                        "key": "next_cursor",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether there are more pronunciation dictionaries to fetch.",
                        "key": "has_more",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "GetPronunciationDictionaryMetadataResponseModelPermissionOnResource": {
            "description": "The permission on the resource of the pronunciation dictionary.",
            "name": "GetPronunciationDictionaryMetadataResponseModelPermissionOnResource",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "admin"
                    },
                    {
                        "value": "editor"
                    },
                    {
                        "value": "viewer"
                    }
                ]
            }
        },
        "GetPronunciationDictionaryMetadataResponseModel": {
            "name": "GetPronunciationDictionaryMetadataResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the pronunciation dictionary.",
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the latest version of the pronunciation dictionary.",
                        "key": "latest_version_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The number of rules in the latest version of the pronunciation dictionary.",
                        "key": "latest_version_rules_num",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The name of the pronunciation dictionary.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The permission on the resource of the pronunciation dictionary.",
                        "key": "permission_on_resource",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "id",
                                "value": "GetPronunciationDictionaryMetadataResponseModelPermissionOnResource"
                            }
                        }
                    },
                    {
                        "description": "The user ID of the creator of the pronunciation dictionary.",
                        "key": "created_by",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The creation time of the pronunciation dictionary in Unix timestamp.",
                        "key": "creation_time_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The archive time of the pronunciation dictionary in Unix timestamp.",
                        "key": "archived_time_unix",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "description": "The description of the pronunciation dictionary.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "GetSpeechHistoryResponseModel": {
            "name": "GetSpeechHistoryResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A list of speech history items.",
                        "key": "history",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "SpeechHistoryItemResponseModel"
                            }
                        }
                    },
                    {
                        "description": "The ID of the last history item.",
                        "key": "last_history_item_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether there are more history items to fetch.",
                        "key": "has_more",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "GetToolDependentAgentsResponseModelAgentsItems": {
            "name": "GetToolDependentAgentsResponseModelAgentsItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "DependentAvailableAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentAvailableAgentIdentifier"
                        },
                        "displayName": "DependentAvailableAgentIdentifier"
                    },
                    {
                        "typeName": "DependentUnknownAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentUnknownAgentIdentifier"
                        },
                        "displayName": "DependentUnknownAgentIdentifier"
                    }
                ]
            }
        },
        "GetToolDependentAgentsResponseModel": {
            "name": "GetToolDependentAgentsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "agents",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "GetToolDependentAgentsResponseModelAgentsItems"
                            }
                        }
                    },
                    {
                        "key": "next_cursor",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "has_more",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "GetVoicesResponseModel": {
            "name": "GetVoicesResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A list of available voices.",
                        "key": "voices",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "VoiceResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "GetVoicesV2ResponseModel": {
            "name": "GetVoicesV2ResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "voices",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "VoiceResponseModel"
                            }
                        }
                    },
                    {
                        "key": "has_more",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "key": "total_count",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "next_page_token",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "GetWorkspaceSecretsResponseModel": {
            "name": "GetWorkspaceSecretsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "secrets",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ConvAIWorkspaceStoredSecretConfig"
                            }
                        }
                    }
                ]
            }
        },
        "HTTPValidationError": {
            "name": "HTTPValidationError",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "detail",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "ValidationError"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "HistoryAlignmentResponseModel": {
            "name": "HistoryAlignmentResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The characters in the alignment.",
                        "key": "characters",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "The start times of the characters in seconds.",
                        "key": "character_start_times_seconds",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double"
                                }
                            }
                        }
                    },
                    {
                        "description": "The end times of the characters in seconds.",
                        "key": "character_end_times_seconds",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "HistoryAlignmentsResponseModel": {
            "name": "HistoryAlignmentsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The alignment of the text.",
                        "key": "alignment",
                        "valueType": {
                            "type": "id",
                            "value": "HistoryAlignmentResponseModel"
                        }
                    },
                    {
                        "description": "The normalized alignment of the text.",
                        "key": "normalized_alignment",
                        "valueType": {
                            "type": "id",
                            "value": "HistoryAlignmentResponseModel"
                        }
                    }
                ]
            }
        },
        "HtmlExportOptions": {
            "name": "HtmlExportOptions",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "include_speakers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "key": "include_timestamps",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "key": "format",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "html"
                            }
                        }
                    },
                    {
                        "key": "segment_on_silence_longer_than_s",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "max_segment_duration_s",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "max_segment_chars",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ImageAvatar": {
            "name": "ImageAvatar",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The type of the avatar",
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "image"
                                }
                            }
                        }
                    },
                    {
                        "description": "The URL of the avatar",
                        "key": "url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    }
                ]
            }
        },
        "IntegrationType": {
            "name": "IntegrationType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "mcp_server"
                    },
                    {
                        "value": "mcp_integration"
                    }
                ]
            }
        },
        "InvoiceResponseModel": {
            "name": "InvoiceResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The amount due in cents.",
                        "key": "amount_due_cents",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The discount applied to the invoice. E.g. [20.0f] for 20% off.",
                        "key": "discount_percent_off",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The discount applied to the invoice. E.g. [20.0f] for 20% off.",
                        "key": "discount_amount_off",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The Unix timestamp of the next payment attempt.",
                        "key": "next_payment_attempt_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "KnowledgeBaseDocumentChunkResponseModel": {
            "name": "KnowledgeBaseDocumentChunkResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "content",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "KnowledgeBaseDocumentMetadataResponseModel": {
            "name": "KnowledgeBaseDocumentMetadataResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "created_at_unix_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "last_updated_at_unix_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "size_bytes",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "KnowledgeBaseDocumentType": {
            "name": "KnowledgeBaseDocumentType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "file"
                    },
                    {
                        "value": "url"
                    },
                    {
                        "value": "text"
                    }
                ]
            }
        },
        "KnowledgeBaseLocator": {
            "name": "KnowledgeBaseLocator",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The type of the knowledge base",
                        "key": "type",
                        "valueType": {
                            "type": "id",
                            "value": "KnowledgeBaseDocumentType"
                        }
                    },
                    {
                        "description": "The name of the knowledge base",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the knowledge base",
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The usage mode of the knowledge base",
                        "key": "usage_mode",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "DocumentUsageModeEnum"
                            }
                        }
                    }
                ]
            }
        },
        "LLM": {
            "name": "LLM",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "gpt-4o-mini"
                    },
                    {
                        "value": "gpt-4o"
                    },
                    {
                        "value": "gpt-4"
                    },
                    {
                        "value": "gpt-4-turbo"
                    },
                    {
                        "value": "gpt-4.1"
                    },
                    {
                        "value": "gpt-4.1-mini"
                    },
                    {
                        "value": "gpt-4.1-nano"
                    },
                    {
                        "value": "gpt-3.5-turbo"
                    },
                    {
                        "value": "gemini-1.5-pro"
                    },
                    {
                        "value": "gemini-1.5-flash"
                    },
                    {
                        "value": "gemini-2.0-flash"
                    },
                    {
                        "value": "gemini-2.0-flash-lite"
                    },
                    {
                        "value": "gemini-2.5-flash"
                    },
                    {
                        "value": "claude-sonnet-4"
                    },
                    {
                        "value": "claude-3-7-sonnet"
                    },
                    {
                        "value": "claude-3-5-sonnet"
                    },
                    {
                        "value": "claude-3-5-sonnet-v1"
                    },
                    {
                        "value": "claude-3-haiku"
                    },
                    {
                        "value": "grok-beta"
                    },
                    {
                        "value": "custom-llm"
                    },
                    {
                        "value": "gemini-2.5-flash-preview-05-20"
                    },
                    {
                        "value": "gemini-2.5-flash-preview-04-17"
                    },
                    {
                        "value": "gemini-2.0-flash-lite-001"
                    },
                    {
                        "value": "gemini-2.0-flash-001"
                    },
                    {
                        "value": "gemini-1.5-flash-002"
                    },
                    {
                        "value": "gemini-1.5-flash-001"
                    },
                    {
                        "value": "gemini-1.5-pro-002"
                    },
                    {
                        "value": "gemini-1.5-pro-001"
                    },
                    {
                        "value": "claude-sonnet-4@20250514"
                    },
                    {
                        "value": "claude-3-7-sonnet@20250219"
                    },
                    {
                        "value": "claude-3-5-sonnet@20240620"
                    },
                    {
                        "value": "claude-3-5-sonnet-v2@20241022"
                    },
                    {
                        "value": "claude-3-haiku@20240307"
                    },
                    {
                        "value": "gpt-4.1-2025-04-14"
                    },
                    {
                        "value": "gpt-4.1-mini-2025-04-14"
                    },
                    {
                        "value": "gpt-4.1-nano-2025-04-14"
                    },
                    {
                        "value": "gpt-4o-mini-2024-07-18"
                    },
                    {
                        "value": "gpt-4o-2024-11-20"
                    },
                    {
                        "value": "gpt-4o-2024-08-06"
                    },
                    {
                        "value": "gpt-4o-2024-05-13"
                    },
                    {
                        "value": "gpt-4-0613"
                    },
                    {
                        "value": "gpt-4-0314"
                    },
                    {
                        "value": "gpt-4-turbo-2024-04-09"
                    },
                    {
                        "value": "gpt-3.5-turbo-0125"
                    },
                    {
                        "value": "gpt-3.5-turbo-1106"
                    }
                ]
            }
        },
        "LLMCategoryUsage": {
            "name": "LLMCategoryUsage",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "irreversible_generation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "LLMUsage-Output"
                            }
                        }
                    },
                    {
                        "key": "initiated_generation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "LLMUsage-Output"
                            }
                        }
                    }
                ]
            }
        },
        "LLMInputOutputTokensUsage": {
            "name": "LLMInputOutputTokensUsage",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "input",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "LLMTokensCategoryUsage"
                            }
                        }
                    },
                    {
                        "key": "input_cache_read",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "LLMTokensCategoryUsage"
                            }
                        }
                    },
                    {
                        "key": "input_cache_write",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "LLMTokensCategoryUsage"
                            }
                        }
                    },
                    {
                        "key": "output_total",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "LLMTokensCategoryUsage"
                            }
                        }
                    }
                ]
            }
        },
        "LLMTokensCategoryUsage": {
            "name": "LLMTokensCategoryUsage",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "tokens",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        }
                    },
                    {
                        "key": "price",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "default": 0
                                }
                            }
                        }
                    }
                ]
            }
        },
        "LLMUsage-Input": {
            "name": "LLMUsage-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "model_usage",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "LLMInputOutputTokensUsage"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "LLMUsage-Output": {
            "name": "LLMUsage-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "model_usage",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "LLMInputOutputTokensUsage"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "LLMUsageCalculatorLLMResponseModel": {
            "name": "LLMUsageCalculatorLLMResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "llm",
                        "valueType": {
                            "type": "id",
                            "value": "LLM"
                        }
                    },
                    {
                        "key": "price_per_minute",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "LLMUsageCalculatorPublicRequestModel": {
            "name": "LLMUsageCalculatorPublicRequestModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Length of the prompt in characters.",
                        "key": "prompt_length",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "Pages of content in PDF documents or URLs in the agent's knowledge base.",
                        "key": "number_of_pages",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "Whether RAG is enabled.",
                        "key": "rag_enabled",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "LLMUsageCalculatorRequestModel": {
            "name": "LLMUsageCalculatorRequestModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Length of the prompt in characters.",
                        "key": "prompt_length",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Pages of content in pdf documents OR urls in agent's Knowledge Base.",
                        "key": "number_of_pages",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether RAG is enabled.",
                        "key": "rag_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "LLMUsageCalculatorResponseModel": {
            "name": "LLMUsageCalculatorResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "llm_prices",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "LLMUsageCalculatorLLMResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "LanguageAddedResponse": {
            "name": "LanguageAddedResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "version",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "LanguageDetectionToolConfig": {
            "name": "LanguageDetectionToolConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "system_tool_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "language_detection"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "LanguagePreset-Input": {
            "name": "LanguagePreset-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The overrides for the language preset",
                        "key": "overrides",
                        "valueType": {
                            "type": "id",
                            "value": "ConversationConfigClientOverride-Input"
                        }
                    },
                    {
                        "description": "The translation of the first message",
                        "key": "first_message_translation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "LanguagePresetTranslation"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "LanguagePreset-Output": {
            "name": "LanguagePreset-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The overrides for the language preset",
                        "key": "overrides",
                        "valueType": {
                            "type": "id",
                            "value": "ConversationConfigClientOverride-Output"
                        }
                    },
                    {
                        "description": "The translation of the first message",
                        "key": "first_message_translation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "LanguagePresetTranslation"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "LanguagePresetTranslation": {
            "name": "LanguagePresetTranslation",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "source_hash",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "LanguageResponseModel": {
            "name": "LanguageResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The unique identifier of the language.",
                        "key": "language_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the language.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "LibraryVoiceResponseModelCategory": {
            "description": "The category of the voice.",
            "name": "LibraryVoiceResponseModelCategory",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "generated"
                    },
                    {
                        "value": "cloned"
                    },
                    {
                        "value": "premade"
                    },
                    {
                        "value": "professional"
                    },
                    {
                        "value": "famous"
                    },
                    {
                        "value": "high_quality"
                    }
                ]
            }
        },
        "LibraryVoiceResponseModel": {
            "name": "LibraryVoiceResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The public owner id of the voice.",
                        "key": "public_owner_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The id of the voice.",
                        "key": "voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The date the voice was added to the library in Unix time.",
                        "key": "date_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The name of the voice.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The accent of the voice.",
                        "key": "accent",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The gender of the voice.",
                        "key": "gender",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The age of the voice.",
                        "key": "age",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The descriptive of the voice.",
                        "key": "descriptive",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The use case of the voice.",
                        "key": "use_case",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The category of the voice.",
                        "key": "category",
                        "valueType": {
                            "type": "id",
                            "value": "LibraryVoiceResponseModelCategory"
                        }
                    },
                    {
                        "description": "The language of the voice.",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The locale of the voice.",
                        "key": "locale",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The description of the voice.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The preview URL of the voice.",
                        "key": "preview_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The usage character count of the voice in the last year.",
                        "key": "usage_character_count_1y",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The usage character count of the voice in the last 7 days.",
                        "key": "usage_character_count_7d",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The play API usage character count of the voice in the last year.",
                        "key": "play_api_usage_character_count_1y",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The number of times the voice has been cloned.",
                        "key": "cloned_by_count",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The rate multiplier of the voice.",
                        "key": "rate",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The rate of the voice in USD per 1000 credits. null if default",
                        "key": "fiat_rate",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether free users are allowed to use the voice.",
                        "key": "free_users_allowed",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether live moderation is enabled for the voice.",
                        "key": "live_moderation_enabled",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the voice is featured.",
                        "key": "featured",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The verified languages of the voice.",
                        "key": "verified_languages",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "VerifiedVoiceLanguageResponseModel"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The notice period of the voice.",
                        "key": "notice_period",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The Instagram username of the voice.",
                        "key": "instagram_username",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The Twitter username of the voice.",
                        "key": "twitter_username",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The YouTube username of the voice.",
                        "key": "youtube_username",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The TikTok username of the voice.",
                        "key": "tiktok_username",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The image URL of the voice.",
                        "key": "image_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the voice was added by the user.",
                        "key": "is_added_by_user",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ListMCPToolsResponseModel": {
            "description": "Response model for testing tools available on an MCP server.",
            "name": "ListMCPToolsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Indicates if the operation was successful.",
                        "key": "success",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "A list of tools available on the MCP server.",
                        "key": "tools",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "Tool"
                            }
                        }
                    },
                    {
                        "description": "Error message if the operation was not successful.",
                        "key": "error_message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "LiteralJsonSchemaPropertyType": {
            "name": "LiteralJsonSchemaPropertyType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "boolean"
                    },
                    {
                        "value": "string"
                    },
                    {
                        "value": "integer"
                    },
                    {
                        "value": "number"
                    }
                ]
            }
        },
        "LiteralJsonSchemaPropertyConstantValue": {
            "description": "The constant value of the property",
            "name": "LiteralJsonSchemaPropertyConstantValue",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "LiteralJsonSchemaProperty": {
            "name": "LiteralJsonSchemaProperty",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "id",
                            "value": "LiteralJsonSchemaPropertyType"
                        }
                    },
                    {
                        "description": "The description of the property",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "description": "The dynamic variable of the property",
                        "key": "dynamic_variable",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "description": "The constant value of the property",
                        "key": "constant_value",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "LiteralJsonSchemaPropertyConstantValue"
                            }
                        }
                    }
                ]
            }
        },
        "MCPApprovalPolicy": {
            "description": "Defines the MCP server-level approval policy for tool execution.",
            "name": "MCPApprovalPolicy",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "auto_approve_all"
                    },
                    {
                        "value": "require_approval_all"
                    },
                    {
                        "value": "require_approval_per_tool"
                    }
                ]
            }
        },
        "MCPApprovalPolicyUpdateRequestModel": {
            "description": "Request model for updating MCP Server approval mode.",
            "name": "MCPApprovalPolicyUpdateRequestModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The approval mode to set for the MCP server",
                        "key": "approval_policy",
                        "valueType": {
                            "type": "id",
                            "value": "MCPApprovalPolicy"
                        }
                    }
                ]
            }
        },
        "McpServerConfigInputUrl": {
            "description": "The URL of the MCP server, if this contains a secret please store as a workspace secret, otherwise store as a plain string. Must use https",
            "name": "McpServerConfigInputUrl",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "typeName": "ConvAISecretLocator",
                        "type": {
                            "type": "id",
                            "value": "ConvAISecretLocator"
                        },
                        "displayName": "ConvAISecretLocator"
                    }
                ]
            }
        },
        "McpServerConfigInputSecretToken": {
            "description": "The secret token (Authorization header) stored as a workspace secret or in-place secret",
            "name": "McpServerConfigInputSecretToken",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "ConvAISecretLocator",
                        "type": {
                            "type": "id",
                            "value": "ConvAISecretLocator"
                        },
                        "displayName": "ConvAISecretLocator"
                    },
                    {
                        "typeName": "ConvAIUserSecretDBModel",
                        "type": {
                            "type": "id",
                            "value": "ConvAIUserSecretDBModel"
                        },
                        "displayName": "ConvAIUserSecretDBModel"
                    }
                ]
            }
        },
        "McpServerConfigInputRequestHeaders": {
            "name": "McpServerConfigInputRequestHeaders",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "typeName": "ConvAISecretLocator",
                        "type": {
                            "type": "id",
                            "value": "ConvAISecretLocator"
                        },
                        "displayName": "ConvAISecretLocator"
                    }
                ]
            }
        },
        "MCPServerConfig-Input": {
            "name": "MCPServerConfig-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "approval_policy",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "MCPApprovalPolicy"
                            }
                        }
                    },
                    {
                        "description": "List of tool approval hashes for per-tool approval when approval_policy is REQUIRE_APPROVAL_PER_TOOL",
                        "key": "tool_approval_hashes",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "MCPToolApprovalHash"
                                }
                            }
                        }
                    },
                    {
                        "description": "The transport type used to connect to the MCP server",
                        "key": "transport",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "MCPServerTransport"
                            }
                        }
                    },
                    {
                        "description": "The URL of the MCP server, if this contains a secret please store as a workspace secret, otherwise store as a plain string. Must use https",
                        "key": "url",
                        "valueType": {
                            "type": "id",
                            "value": "McpServerConfigInputUrl"
                        }
                    },
                    {
                        "description": "The secret token (Authorization header) stored as a workspace secret or in-place secret",
                        "key": "secret_token",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "McpServerConfigInputSecretToken"
                                }
                            }
                        }
                    },
                    {
                        "description": "The headers included in the request",
                        "key": "request_headers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "McpServerConfigInputRequestHeaders"
                                }
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    }
                ]
            }
        },
        "McpServerConfigOutputUrl": {
            "description": "The URL of the MCP server, if this contains a secret please store as a workspace secret, otherwise store as a plain string. Must use https",
            "name": "McpServerConfigOutputUrl",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "typeName": "ConvAISecretLocator",
                        "type": {
                            "type": "id",
                            "value": "ConvAISecretLocator"
                        },
                        "displayName": "ConvAISecretLocator"
                    }
                ]
            }
        },
        "McpServerConfigOutputSecretToken": {
            "description": "The secret token (Authorization header) stored as a workspace secret or in-place secret",
            "name": "McpServerConfigOutputSecretToken",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "ConvAISecretLocator",
                        "type": {
                            "type": "id",
                            "value": "ConvAISecretLocator"
                        },
                        "displayName": "ConvAISecretLocator"
                    },
                    {
                        "typeName": "ConvAIUserSecretDBModel",
                        "type": {
                            "type": "id",
                            "value": "ConvAIUserSecretDBModel"
                        },
                        "displayName": "ConvAIUserSecretDBModel"
                    }
                ]
            }
        },
        "McpServerConfigOutputRequestHeaders": {
            "name": "McpServerConfigOutputRequestHeaders",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "typeName": "ConvAISecretLocator",
                        "type": {
                            "type": "id",
                            "value": "ConvAISecretLocator"
                        },
                        "displayName": "ConvAISecretLocator"
                    }
                ]
            }
        },
        "MCPServerConfig-Output": {
            "name": "MCPServerConfig-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "approval_policy",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "MCPApprovalPolicy"
                            }
                        }
                    },
                    {
                        "description": "List of tool approval hashes for per-tool approval when approval_policy is REQUIRE_APPROVAL_PER_TOOL",
                        "key": "tool_approval_hashes",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "MCPToolApprovalHash"
                                }
                            }
                        }
                    },
                    {
                        "description": "The transport type used to connect to the MCP server",
                        "key": "transport",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "MCPServerTransport"
                            }
                        }
                    },
                    {
                        "description": "The URL of the MCP server, if this contains a secret please store as a workspace secret, otherwise store as a plain string. Must use https",
                        "key": "url",
                        "valueType": {
                            "type": "id",
                            "value": "McpServerConfigOutputUrl"
                        }
                    },
                    {
                        "description": "The secret token (Authorization header) stored as a workspace secret or in-place secret",
                        "key": "secret_token",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "McpServerConfigOutputSecretToken"
                                }
                            }
                        }
                    },
                    {
                        "description": "The headers included in the request",
                        "key": "request_headers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "McpServerConfigOutputRequestHeaders"
                                }
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    }
                ]
            }
        },
        "MCPServerMetadataResponseModel": {
            "name": "MCPServerMetadataResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "created_at",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "owner_user_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "MCPServerRequestModel": {
            "description": "Request model for creating/updating an MCP Server configuration.",
            "name": "MCPServerRequestModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Configuration details for the MCP Server.",
                        "key": "config",
                        "valueType": {
                            "type": "id",
                            "value": "MCPServerConfig-Input"
                        }
                    }
                ]
            }
        },
        "McpServerResponseModelDependentAgentsItems": {
            "name": "McpServerResponseModelDependentAgentsItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "DependentAvailableAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentAvailableAgentIdentifier"
                        },
                        "displayName": "DependentAvailableAgentIdentifier"
                    },
                    {
                        "typeName": "DependentUnknownAgentIdentifier",
                        "type": {
                            "type": "id",
                            "value": "DependentUnknownAgentIdentifier"
                        },
                        "displayName": "DependentUnknownAgentIdentifier"
                    }
                ]
            }
        },
        "MCPServerResponseModel": {
            "description": "Response model representing an MCP Server configuration.",
            "name": "MCPServerResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "config",
                        "valueType": {
                            "type": "id",
                            "value": "MCPServerConfig-Output"
                        }
                    },
                    {
                        "description": "The access information of the MCP Server",
                        "key": "access_info",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ResourceAccessInfo"
                                }
                            }
                        }
                    },
                    {
                        "description": "List of agents that depend on this MCP Server.",
                        "key": "dependent_agents",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "McpServerResponseModelDependentAgentsItems"
                                }
                            }
                        }
                    },
                    {
                        "description": "The metadata of the MCP Server",
                        "key": "metadata",
                        "valueType": {
                            "type": "id",
                            "value": "MCPServerMetadataResponseModel"
                        }
                    }
                ]
            }
        },
        "MCPServerTransport": {
            "description": "Supported MCP server transport types.",
            "name": "MCPServerTransport",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "SSE"
                    },
                    {
                        "value": "STREAMABLE_HTTP"
                    }
                ]
            }
        },
        "MCPServersResponseModel": {
            "description": "Response model for a list of MCP Server configurations.",
            "name": "MCPServersResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "mcp_servers",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "MCPServerResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "McpToolAddApprovalRequestModelInputSchema": {
            "description": "The input schema of the MCP tool (the schema defined on the MCP server before ElevenLabs does any extra processing)",
            "name": "McpToolAddApprovalRequestModelInputSchema",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": []
            }
        },
        "MCPToolAddApprovalRequestModel": {
            "description": "Request model for adding approval for a single MCP tool.",
            "name": "MCPToolAddApprovalRequestModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name of the MCP tool",
                        "key": "tool_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The description of the MCP tool",
                        "key": "tool_description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The input schema of the MCP tool (the schema defined on the MCP server before ElevenLabs does any extra processing)",
                        "key": "input_schema",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "McpToolAddApprovalRequestModelInputSchema"
                            }
                        }
                    },
                    {
                        "description": "The tool-level approval policy",
                        "key": "approval_policy",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "MCPToolApprovalPolicy"
                            }
                        }
                    }
                ]
            }
        },
        "MCPToolApprovalHash": {
            "description": "Model for storing tool approval hashes for per-tool approval.",
            "name": "MCPToolApprovalHash",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name of the MCP tool",
                        "key": "tool_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "SHA256 hash of the tool's parameters and description",
                        "key": "tool_hash",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The approval policy for this tool",
                        "key": "approval_policy",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "MCPToolApprovalPolicy"
                            }
                        }
                    }
                ]
            }
        },
        "MCPToolApprovalPolicy": {
            "description": "Defines the tool-level approval policy.",
            "name": "MCPToolApprovalPolicy",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "auto_approved"
                    },
                    {
                        "value": "requires_approval"
                    }
                ]
            }
        },
        "McpToolConfigInputMcpInputSchema": {
            "description": "Original inputSchema dict for consistent hashing (pure MCP format)",
            "name": "McpToolConfigInputMcpInputSchema",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": []
            }
        },
        "MCPToolConfig-Input": {
            "description": "An MCP tool configuration that can be used to call MCP servers",
            "name": "MCPToolConfig-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "regex": "^[a-zA-Z0-9_-]{1,64}$",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "description": "The maximum time in seconds to wait for the tool call to complete.",
                        "key": "response_timeout_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": 20
                                }
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "mcp"
                                }
                            }
                        }
                    },
                    {
                        "description": "The type of MCP tool",
                        "key": "integration_type",
                        "valueType": {
                            "type": "id",
                            "value": "IntegrationType"
                        }
                    },
                    {
                        "description": "Schema for any parameters the LLM needs to provide to the MCP tool.",
                        "key": "parameters",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ObjectJsonSchemaProperty-Input"
                                }
                            }
                        }
                    },
                    {
                        "description": "The approval policy for the MCP tool",
                        "key": "approval_policy",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "MCPApprovalPolicy"
                            }
                        }
                    },
                    {
                        "description": "The name of the MCP tool to call",
                        "key": "mcp_tool_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The description of the MCP tool to call",
                        "key": "mcp_tool_description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The id of the MCP server to call",
                        "key": "mcp_server_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the MCP server to call",
                        "key": "mcp_server_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Original inputSchema dict for consistent hashing (pure MCP format)",
                        "key": "mcp_input_schema",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "McpToolConfigInputMcpInputSchema"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "McpToolConfigOutputMcpInputSchema": {
            "description": "Original inputSchema dict for consistent hashing (pure MCP format)",
            "name": "McpToolConfigOutputMcpInputSchema",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": []
            }
        },
        "MCPToolConfig-Output": {
            "description": "An MCP tool configuration that can be used to call MCP servers",
            "name": "MCPToolConfig-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "regex": "^[a-zA-Z0-9_-]{1,64}$",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "description": "The maximum time in seconds to wait for the tool call to complete.",
                        "key": "response_timeout_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": 20
                                }
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "mcp"
                                }
                            }
                        }
                    },
                    {
                        "description": "The type of MCP tool",
                        "key": "integration_type",
                        "valueType": {
                            "type": "id",
                            "value": "IntegrationType"
                        }
                    },
                    {
                        "description": "Schema for any parameters the LLM needs to provide to the MCP tool.",
                        "key": "parameters",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ObjectJsonSchemaProperty-Output"
                                }
                            }
                        }
                    },
                    {
                        "description": "The approval policy for the MCP tool",
                        "key": "approval_policy",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "MCPApprovalPolicy"
                            }
                        }
                    },
                    {
                        "description": "The name of the MCP tool to call",
                        "key": "mcp_tool_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The description of the MCP tool to call",
                        "key": "mcp_tool_description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The id of the MCP server to call",
                        "key": "mcp_server_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the MCP server to call",
                        "key": "mcp_server_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Original inputSchema dict for consistent hashing (pure MCP format)",
                        "key": "mcp_input_schema",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "McpToolConfigOutputMcpInputSchema"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ManualVerificationFileResponseModel": {
            "name": "ManualVerificationFileResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the file.",
                        "key": "file_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the file.",
                        "key": "file_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The MIME type of the file.",
                        "key": "mime_type",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The size of the file in bytes.",
                        "key": "size_bytes",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The date of the file in Unix time.",
                        "key": "upload_date_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "ManualVerificationResponseModel": {
            "name": "ManualVerificationResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The extra text of the manual verification.",
                        "key": "extra_text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The date of the manual verification in Unix time.",
                        "key": "request_time_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The files of the manual verification.",
                        "key": "files",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ManualVerificationFileResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "MetricRecord": {
            "name": "MetricRecord",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "elapsed_time",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "MetricType": {
            "name": "MetricType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "credits"
                    },
                    {
                        "value": "minutes_used"
                    },
                    {
                        "value": "request_count"
                    },
                    {
                        "value": "ttfb_avg"
                    },
                    {
                        "value": "ttfb_p95"
                    },
                    {
                        "value": "fiat_units_spent"
                    }
                ]
            }
        },
        "ModelRatesResponseModel": {
            "name": "ModelRatesResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The cost multiplier for characters.",
                        "key": "character_cost_multiplier",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "ModelResponseModelConcurrencyGroup": {
            "description": "The concurrency group for the model.",
            "name": "ModelResponseModelConcurrencyGroup",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "standard"
                    },
                    {
                        "value": "turbo"
                    }
                ]
            }
        },
        "ModelResponseModel": {
            "name": "ModelResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The unique identifier of the model.",
                        "key": "model_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the model.",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the model can be finetuned.",
                        "key": "can_be_finetuned",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the model can do text-to-speech.",
                        "key": "can_do_text_to_speech",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the model can do voice conversion.",
                        "key": "can_do_voice_conversion",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the model can use style.",
                        "key": "can_use_style",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the model can use speaker boost.",
                        "key": "can_use_speaker_boost",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the model serves pro voices.",
                        "key": "serves_pro_voices",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "The cost factor for the model.",
                        "key": "token_cost_factor",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double"
                                }
                            }
                        }
                    },
                    {
                        "description": "The description of the model.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the model requires alpha access.",
                        "key": "requires_alpha_access",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "The maximum number of characters that can be requested by a free user.",
                        "key": "max_characters_request_free_user",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "description": "The maximum number of characters that can be requested by a subscribed user.",
                        "key": "max_characters_request_subscribed_user",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "description": "The maximum length of text that can be requested for this model.",
                        "key": "maximum_text_length_per_request",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "description": "The languages supported by the model.",
                        "key": "languages",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "LanguageResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "The rates for the model.",
                        "key": "model_rates",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ModelRatesResponseModel"
                            }
                        }
                    },
                    {
                        "description": "The concurrency group for the model.",
                        "key": "concurrency_group",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ModelResponseModelConcurrencyGroup"
                            }
                        }
                    }
                ]
            }
        },
        "ModelSettingsResponseModel": {
            "name": "ModelSettingsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Determines how stable the voice is and the randomness between each generation. Lower values introduce broader emotional range for the voice. Higher values can result in a monotonous voice with limited emotion.",
                        "key": "stability",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "This setting boosts the similarity to the original speaker. Using this setting requires a slightly higher computational load, which in turn increases latency.",
                        "key": "use_speaker_boost",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ModerationStatusResponseModelSafetyStatus": {
            "description": "The safety status of the user.",
            "name": "ModerationStatusResponseModelSafetyStatus",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "appeal_approved"
                    },
                    {
                        "value": "appeal_denied"
                    },
                    {
                        "value": "false_positive"
                    }
                ]
            }
        },
        "ModerationStatusResponseModelWarningStatus": {
            "description": "The warning status of the user.",
            "name": "ModerationStatusResponseModelWarningStatus",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "warning"
                    },
                    {
                        "value": "warning_cleared"
                    }
                ]
            }
        },
        "ModerationStatusResponseModel": {
            "name": "ModerationStatusResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether the user is in probation.",
                        "key": "is_in_probation",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user's enterprise check nogo voice is enabled.",
                        "key": "enterprise_check_nogo_voice",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user's enterprise check block nogo voice is enabled.",
                        "key": "enterprise_check_block_nogo_voice",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user's never live moderate is enabled.",
                        "key": "never_live_moderate",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The number of similar voice uploads that have been blocked.",
                        "key": "nogo_voice_similar_voice_upload_count",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "Whether the user's enterprise background moderation is enabled.",
                        "key": "enterprise_background_moderation_enabled",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The safety status of the user.",
                        "key": "safety_status",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ModerationStatusResponseModelSafetyStatus"
                                }
                            }
                        }
                    },
                    {
                        "description": "The warning status of the user.",
                        "key": "warning_status",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ModerationStatusResponseModelWarningStatus"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the user is on the watchlist.",
                        "key": "on_watchlist",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            }
        },
        "ObjectJsonSchemaPropertyInput": {
            "name": "ObjectJsonSchemaPropertyInput",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "LiteralJsonSchemaProperty",
                        "type": {
                            "type": "id",
                            "value": "LiteralJsonSchemaProperty"
                        },
                        "displayName": "LiteralJsonSchemaProperty"
                    },
                    {
                        "typeName": "ObjectJsonSchemaProperty-Input",
                        "type": {
                            "type": "id",
                            "value": "ObjectJsonSchemaProperty-Input"
                        },
                        "displayName": "ObjectJsonSchemaProperty"
                    },
                    {
                        "typeName": "ArrayJsonSchemaProperty-Input",
                        "type": {
                            "type": "id",
                            "value": "ArrayJsonSchemaProperty-Input"
                        },
                        "displayName": "ArrayJsonSchemaProperty"
                    }
                ]
            }
        },
        "ObjectJsonSchemaProperty-Input": {
            "name": "ObjectJsonSchemaProperty-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "object"
                                }
                            }
                        }
                    },
                    {
                        "key": "required",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "key": "properties",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "ObjectJsonSchemaPropertyInput"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ObjectJsonSchemaPropertyOutput": {
            "name": "ObjectJsonSchemaPropertyOutput",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "LiteralJsonSchemaProperty",
                        "type": {
                            "type": "id",
                            "value": "LiteralJsonSchemaProperty"
                        },
                        "displayName": "LiteralJsonSchemaProperty"
                    },
                    {
                        "typeName": "ObjectJsonSchemaProperty-Output",
                        "type": {
                            "type": "id",
                            "value": "ObjectJsonSchemaProperty-Output"
                        },
                        "displayName": "ObjectJsonSchemaProperty"
                    },
                    {
                        "typeName": "ArrayJsonSchemaProperty-Output",
                        "type": {
                            "type": "id",
                            "value": "ArrayJsonSchemaProperty-Output"
                        },
                        "displayName": "ArrayJsonSchemaProperty"
                    }
                ]
            }
        },
        "ObjectJsonSchemaProperty-Output": {
            "name": "ObjectJsonSchemaProperty-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "object"
                                }
                            }
                        }
                    },
                    {
                        "key": "required",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "key": "properties",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "ObjectJsonSchemaPropertyOutput"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "OrbAvatar": {
            "name": "OrbAvatar",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The type of the avatar",
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "orb"
                                }
                            }
                        }
                    },
                    {
                        "description": "The first color of the avatar",
                        "key": "color_1",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#2792dc"
                                }
                            }
                        }
                    },
                    {
                        "description": "The second color of the avatar",
                        "key": "color_2",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#9ce6e6"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "OutboundCallRecipient": {
            "name": "OutboundCallRecipient",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "phone_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "conversation_initiation_client_data",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationInitiationClientDataRequest-Input"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "OutboundCallRecipientResponseModel": {
            "name": "OutboundCallRecipientResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "phone_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "status",
                        "valueType": {
                            "type": "id",
                            "value": "BatchCallRecipientStatus"
                        }
                    },
                    {
                        "key": "created_at_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "updated_at_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "conversation_id",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "key": "conversation_initiation_client_data",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationInitiationClientDataInternal"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "PatchConvAiDashboardSettingsRequestChartsItems": {
            "name": "PatchConvAiDashboardSettingsRequestChartsItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "DashboardCallSuccessChartModel",
                        "type": {
                            "type": "id",
                            "value": "DashboardCallSuccessChartModel"
                        },
                        "displayName": "DashboardCallSuccessChartModel"
                    },
                    {
                        "typeName": "DashboardCriteriaChartModel",
                        "type": {
                            "type": "id",
                            "value": "DashboardCriteriaChartModel"
                        },
                        "displayName": "DashboardCriteriaChartModel"
                    },
                    {
                        "typeName": "DashboardDataCollectionChartModel",
                        "type": {
                            "type": "id",
                            "value": "DashboardDataCollectionChartModel"
                        },
                        "displayName": "DashboardDataCollectionChartModel"
                    }
                ]
            }
        },
        "PatchConvAIDashboardSettingsRequest": {
            "name": "PatchConvAIDashboardSettingsRequest",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "charts",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "PatchConvAiDashboardSettingsRequestChartsItems"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "PatchConvAISettingsRequest": {
            "name": "PatchConvAISettingsRequest",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "conversation_initiation_client_data_webhook",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ConversationInitiationClientDataWebhook"
                                }
                            }
                        }
                    },
                    {
                        "key": "webhooks",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "ConvAIWebhooks"
                            }
                        }
                    },
                    {
                        "description": "Whether the workspace can use MCP servers",
                        "key": "can_use_mcp_servers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "rag_retention_period_days",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "maximum": 30,
                                    "default": 10
                                }
                            }
                        }
                    }
                ]
            }
        },
        "PatchWorkspaceSecretRequest": {
            "name": "PatchWorkspaceSecretRequest",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "update"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "value",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "PdfExportOptions": {
            "name": "PdfExportOptions",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "include_speakers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "key": "include_timestamps",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "key": "format",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "pdf"
                            }
                        }
                    },
                    {
                        "key": "segment_on_silence_longer_than_s",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "max_segment_duration_s",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "max_segment_chars",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "PhoneNumberAgentInfo": {
            "name": "PhoneNumberAgentInfo",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the agent",
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the agent",
                        "key": "agent_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "PhoneNumberTransfer": {
            "name": "PhoneNumberTransfer",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "phone_number",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "condition",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "PodcastBulletinMode": {
            "name": "PodcastBulletinMode",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The type of podcast to create.",
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "bulletin"
                            }
                        }
                    },
                    {
                        "description": "The voice settings for the bulletin.",
                        "key": "bulletin",
                        "valueType": {
                            "type": "id",
                            "value": "PodcastBulletinModeData"
                        }
                    }
                ]
            }
        },
        "PodcastBulletinModeData": {
            "name": "PodcastBulletinModeData",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the host voice.",
                        "key": "host_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "PodcastConversationMode": {
            "name": "PodcastConversationMode",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The type of podcast to create.",
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "conversation"
                            }
                        }
                    },
                    {
                        "description": "The voice settings for the conversation.",
                        "key": "conversation",
                        "valueType": {
                            "type": "id",
                            "value": "PodcastConversationModeData"
                        }
                    }
                ]
            }
        },
        "PodcastConversationModeData": {
            "name": "PodcastConversationModeData",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the host voice.",
                        "key": "host_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the guest voice.",
                        "key": "guest_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "PodcastProjectResponseModel": {
            "name": "PodcastProjectResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The project associated with the created podcast.",
                        "key": "project",
                        "valueType": {
                            "type": "id",
                            "value": "ProjectResponseModel"
                        }
                    }
                ]
            }
        },
        "PodcastTextSource": {
            "name": "PodcastTextSource",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The type of source to create.",
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "text"
                            }
                        }
                    },
                    {
                        "description": "The text to create the podcast from.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "PodcastURLSource": {
            "name": "PodcastURLSource",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The type of source to create.",
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "url"
                            }
                        }
                    },
                    {
                        "description": "The URL to create the podcast from.",
                        "key": "url",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "PostAgentAvatarResponseModel": {
            "name": "PostAgentAvatarResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "agent_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "avatar_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "PostWorkspaceSecretRequest": {
            "name": "PostWorkspaceSecretRequest",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "new"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "value",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "PostWorkspaceSecretResponseModel": {
            "name": "PostWorkspaceSecretResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "stored"
                            }
                        }
                    },
                    {
                        "key": "secret_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "PrivacyConfig": {
            "name": "PrivacyConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether to record the conversation",
                        "key": "record_voice",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "description": "The number of days to retain the conversation. -1 indicates there is no retention limit",
                        "key": "retention_days",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": -1
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to delete the transcript and PII",
                        "key": "delete_transcript_and_pii",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to delete the audio",
                        "key": "delete_audio",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to apply the privacy settings to existing conversations",
                        "key": "apply_to_existing_conversations",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to enable zero retention mode - no PII data is stored",
                        "key": "zero_retention_mode",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ProjectCreationMetaResponseModelStatus": {
            "description": "The status of the project creation action.",
            "name": "ProjectCreationMetaResponseModelStatus",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "pending"
                    },
                    {
                        "value": "creating"
                    },
                    {
                        "value": "finished"
                    },
                    {
                        "value": "failed"
                    }
                ]
            }
        },
        "ProjectCreationMetaResponseModelType": {
            "description": "The type of the project creation action.",
            "name": "ProjectCreationMetaResponseModelType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "blank"
                    },
                    {
                        "value": "generate_podcast"
                    },
                    {
                        "value": "auto_assign_voices"
                    }
                ]
            }
        },
        "ProjectCreationMetaResponseModel": {
            "name": "ProjectCreationMetaResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The progress of the project creation.",
                        "key": "creation_progress",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "description": "The status of the project creation action.",
                        "key": "status",
                        "valueType": {
                            "type": "id",
                            "value": "ProjectCreationMetaResponseModelStatus"
                        }
                    },
                    {
                        "description": "The type of the project creation action.",
                        "key": "type",
                        "valueType": {
                            "type": "id",
                            "value": "ProjectCreationMetaResponseModelType"
                        }
                    }
                ]
            }
        },
        "ProjectExtendedResponseModelTargetAudience": {
            "description": "The target audience of the project.",
            "name": "ProjectExtendedResponseModelTargetAudience",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "children"
                    },
                    {
                        "value": "young adult"
                    },
                    {
                        "value": "adult"
                    },
                    {
                        "value": "all ages"
                    }
                ]
            }
        },
        "ProjectState": {
            "description": "The state of the project.",
            "name": "ProjectState",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "creating"
                    },
                    {
                        "value": "default"
                    },
                    {
                        "value": "converting"
                    },
                    {
                        "value": "in_queue"
                    }
                ]
            }
        },
        "ProjectExtendedResponseModelAccessLevel": {
            "description": "The access level of the project.",
            "name": "ProjectExtendedResponseModelAccessLevel",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "admin"
                    },
                    {
                        "value": "editor"
                    },
                    {
                        "value": "viewer"
                    }
                ]
            }
        },
        "ProjectExtendedResponseModelFiction": {
            "description": "Whether the project is fiction.",
            "name": "ProjectExtendedResponseModelFiction",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "fiction"
                    },
                    {
                        "value": "non-fiction"
                    }
                ]
            }
        },
        "ProjectExtendedResponseModelSourceType": {
            "description": "The source type of the project.",
            "name": "ProjectExtendedResponseModelSourceType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "blank"
                    },
                    {
                        "value": "book"
                    },
                    {
                        "value": "article"
                    },
                    {
                        "value": "genfm"
                    }
                ]
            }
        },
        "ProjectExtendedResponseModelQualityPreset": {
            "description": "The quality preset level of the project.",
            "name": "ProjectExtendedResponseModelQualityPreset",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "standard"
                    },
                    {
                        "value": "high"
                    },
                    {
                        "value": "highest"
                    },
                    {
                        "value": "ultra"
                    },
                    {
                        "value": "ultra_lossless"
                    }
                ]
            }
        },
        "ProjectExtendedResponseModelApplyTextNormalization": {
            "description": "Whether text normalization is applied to the project.",
            "name": "ProjectExtendedResponseModelApplyTextNormalization",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "auto"
                    },
                    {
                        "value": "on"
                    },
                    {
                        "value": "off"
                    },
                    {
                        "value": "apply_english"
                    }
                ]
            }
        },
        "ProjectExtendedResponseModelExperimental": {
            "description": "Experimental features of the project.",
            "name": "ProjectExtendedResponseModelExperimental",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": []
            }
        },
        "ProjectExtendedResponseModel": {
            "name": "ProjectExtendedResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the project.",
                        "key": "project_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the project.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The creation date of the project.",
                        "key": "create_date_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The default title voice ID.",
                        "key": "default_title_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The default paragraph voice ID.",
                        "key": "default_paragraph_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The default model ID.",
                        "key": "default_model_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The last conversion date of the project.",
                        "key": "last_conversion_date_unix",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the project can be downloaded.",
                        "key": "can_be_downloaded",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The title of the project.",
                        "key": "title",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The author of the project.",
                        "key": "author",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The description of the project.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "List of genres of the project.",
                        "key": "genres",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The cover image URL of the project.",
                        "key": "cover_image_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The target audience of the project.",
                        "key": "target_audience",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ProjectExtendedResponseModelTargetAudience"
                                }
                            }
                        }
                    },
                    {
                        "description": "Two-letter language code (ISO 639-1) of the language of the project.",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The content type of the project, e.g. 'Novel' or 'Short Story'",
                        "key": "content_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The original publication date of the project.",
                        "key": "original_publication_date",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the project contains mature content.",
                        "key": "mature_content",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The ISBN number of the project.",
                        "key": "isbn_number",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the project uses volume normalization.",
                        "key": "volume_normalization",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The state of the project.",
                        "key": "state",
                        "valueType": {
                            "type": "id",
                            "value": "ProjectState"
                        }
                    },
                    {
                        "description": "The access level of the project.",
                        "key": "access_level",
                        "valueType": {
                            "type": "id",
                            "value": "ProjectExtendedResponseModelAccessLevel"
                        }
                    },
                    {
                        "description": "Whether the project is fiction.",
                        "key": "fiction",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ProjectExtendedResponseModelFiction"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether quality check is enabled for this project.",
                        "key": "quality_check_on",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        },
                        "availability": "Deprecated"
                    },
                    {
                        "description": "Whether quality check is enabled on the project when bulk converting.",
                        "key": "quality_check_on_when_bulk_convert",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        },
                        "availability": "Deprecated"
                    },
                    {
                        "description": "The creation meta of the project.",
                        "key": "creation_meta",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ProjectCreationMetaResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "The source type of the project.",
                        "key": "source_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ProjectExtendedResponseModelSourceType"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether chapters are enabled for the project.",
                        "key": "chapters_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The quality preset level of the project.",
                        "key": "quality_preset",
                        "valueType": {
                            "type": "id",
                            "value": "ProjectExtendedResponseModelQualityPreset"
                        }
                    },
                    {
                        "description": "List of chapters of the project and their metadata.",
                        "key": "chapters",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ChapterResponseModel"
                            }
                        }
                    },
                    {
                        "description": "List of pronunciation dictionary versions of the project and their metadata.",
                        "key": "pronunciation_dictionary_versions",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "PronunciationDictionaryVersionResponseModel"
                            }
                        }
                    },
                    {
                        "description": "List of pronunciation dictionary locators.",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "PronunciationDictionaryLocatorResponseModel"
                            }
                        }
                    },
                    {
                        "description": "Whether text normalization is applied to the project.",
                        "key": "apply_text_normalization",
                        "valueType": {
                            "type": "id",
                            "value": "ProjectExtendedResponseModelApplyTextNormalization"
                        }
                    },
                    {
                        "description": "Experimental features of the project.",
                        "key": "experimental",
                        "valueType": {
                            "type": "id",
                            "value": "ProjectExtendedResponseModelExperimental"
                        }
                    }
                ]
            }
        },
        "ProjectResponseModelTargetAudience": {
            "description": "The target audience of the project.",
            "name": "ProjectResponseModelTargetAudience",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "children"
                    },
                    {
                        "value": "young adult"
                    },
                    {
                        "value": "adult"
                    },
                    {
                        "value": "all ages"
                    }
                ]
            }
        },
        "ProjectResponseModelAccessLevel": {
            "description": "The access level of the project.",
            "name": "ProjectResponseModelAccessLevel",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "admin"
                    },
                    {
                        "value": "editor"
                    },
                    {
                        "value": "viewer"
                    }
                ]
            }
        },
        "ProjectResponseModelFiction": {
            "description": "Whether the project is fiction.",
            "name": "ProjectResponseModelFiction",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "fiction"
                    },
                    {
                        "value": "non-fiction"
                    }
                ]
            }
        },
        "ProjectResponseModelSourceType": {
            "description": "The source type of the project.",
            "name": "ProjectResponseModelSourceType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "blank"
                    },
                    {
                        "value": "book"
                    },
                    {
                        "value": "article"
                    },
                    {
                        "value": "genfm"
                    }
                ]
            }
        },
        "ProjectResponseModel": {
            "name": "ProjectResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the project.",
                        "key": "project_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the project.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The creation date of the project.",
                        "key": "create_date_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The default title voice ID.",
                        "key": "default_title_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The default paragraph voice ID.",
                        "key": "default_paragraph_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The default model ID.",
                        "key": "default_model_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The last conversion date of the project.",
                        "key": "last_conversion_date_unix",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the project can be downloaded.",
                        "key": "can_be_downloaded",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The title of the project.",
                        "key": "title",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The author of the project.",
                        "key": "author",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The description of the project.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "List of genres of the project.",
                        "key": "genres",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The cover image URL of the project.",
                        "key": "cover_image_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The target audience of the project.",
                        "key": "target_audience",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ProjectResponseModelTargetAudience"
                                }
                            }
                        }
                    },
                    {
                        "description": "Two-letter language code (ISO 639-1) of the language of the project.",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The content type of the project, e.g. 'Novel' or 'Short Story'",
                        "key": "content_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The original publication date of the project.",
                        "key": "original_publication_date",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the project contains mature content.",
                        "key": "mature_content",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The ISBN number of the project.",
                        "key": "isbn_number",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the project uses volume normalization.",
                        "key": "volume_normalization",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The state of the project.",
                        "key": "state",
                        "valueType": {
                            "type": "id",
                            "value": "ProjectState"
                        }
                    },
                    {
                        "description": "The access level of the project.",
                        "key": "access_level",
                        "valueType": {
                            "type": "id",
                            "value": "ProjectResponseModelAccessLevel"
                        }
                    },
                    {
                        "description": "Whether the project is fiction.",
                        "key": "fiction",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ProjectResponseModelFiction"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether quality check is enabled for this project.",
                        "key": "quality_check_on",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        },
                        "availability": "Deprecated"
                    },
                    {
                        "description": "Whether quality check is enabled on the project when bulk converting.",
                        "key": "quality_check_on_when_bulk_convert",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        },
                        "availability": "Deprecated"
                    },
                    {
                        "description": "The creation meta of the project.",
                        "key": "creation_meta",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ProjectCreationMetaResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "The source type of the project.",
                        "key": "source_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ProjectResponseModelSourceType"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether chapters are enabled for the project.",
                        "key": "chapters_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ProjectSnapshotExtendedResponseModelAudioUpload": {
            "description": "(Deprecated)",
            "name": "ProjectSnapshotExtendedResponseModelAudioUpload",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": []
            }
        },
        "ProjectSnapshotExtendedResponseModelZipUpload": {
            "description": "(Deprecated)",
            "name": "ProjectSnapshotExtendedResponseModelZipUpload",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": []
            }
        },
        "ProjectSnapshotExtendedResponseModel": {
            "name": "ProjectSnapshotExtendedResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the project snapshot.",
                        "key": "project_snapshot_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the project.",
                        "key": "project_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The creation date of the project snapshot.",
                        "key": "created_at_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The name of the project snapshot.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "(Deprecated)",
                        "key": "audio_upload",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ProjectSnapshotExtendedResponseModelAudioUpload"
                                }
                            }
                        }
                    },
                    {
                        "description": "(Deprecated)",
                        "key": "zip_upload",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ProjectSnapshotExtendedResponseModelZipUpload"
                                }
                            }
                        }
                    },
                    {
                        "key": "character_alignments",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "CharacterAlignmentModel"
                            }
                        }
                    }
                ]
            }
        },
        "ProjectSnapshotResponseModelAudioUpload": {
            "description": "(Deprecated)",
            "name": "ProjectSnapshotResponseModelAudioUpload",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": []
            }
        },
        "ProjectSnapshotResponseModelZipUpload": {
            "description": "(Deprecated)",
            "name": "ProjectSnapshotResponseModelZipUpload",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": []
            }
        },
        "ProjectSnapshotResponseModel": {
            "name": "ProjectSnapshotResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the project snapshot.",
                        "key": "project_snapshot_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the project.",
                        "key": "project_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The creation date of the project snapshot.",
                        "key": "created_at_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The name of the project snapshot.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "(Deprecated)",
                        "key": "audio_upload",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ProjectSnapshotResponseModelAudioUpload"
                                }
                            }
                        }
                    },
                    {
                        "description": "(Deprecated)",
                        "key": "zip_upload",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ProjectSnapshotResponseModelZipUpload"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ProjectSnapshotsResponseModel": {
            "name": "ProjectSnapshotsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "List of project snapshots.",
                        "key": "snapshots",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ProjectSnapshotResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "PromptAgentApiModelInputToolsItems": {
            "description": "The type of tool",
            "name": "PromptAgentApiModelInputToolsItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "WebhookToolConfig-Input",
                        "type": {
                            "type": "id",
                            "value": "WebhookToolConfig-Input"
                        },
                        "displayName": "WebhookToolConfig"
                    },
                    {
                        "typeName": "ClientToolConfig-Input",
                        "type": {
                            "type": "id",
                            "value": "ClientToolConfig-Input"
                        },
                        "displayName": "ClientToolConfig"
                    },
                    {
                        "typeName": "SystemToolConfig-Input",
                        "type": {
                            "type": "id",
                            "value": "SystemToolConfig-Input"
                        },
                        "displayName": "SystemToolConfig"
                    },
                    {
                        "typeName": "MCPToolConfig-Input",
                        "type": {
                            "type": "id",
                            "value": "MCPToolConfig-Input"
                        },
                        "displayName": "MCPToolConfig"
                    }
                ]
            }
        },
        "PromptAgentAPIModel-Input": {
            "name": "PromptAgentAPIModel-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The prompt for the agent",
                        "key": "prompt",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "description": "The LLM to query with the prompt and the chat history",
                        "key": "llm",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "LLM"
                            }
                        }
                    },
                    {
                        "description": "The temperature for the LLM",
                        "key": "temperature",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "default": 0
                                }
                            }
                        }
                    },
                    {
                        "description": "If greater than 0, maximum number of tokens the LLM can predict",
                        "key": "max_tokens",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": -1
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of IDs of tools used by the agent",
                        "key": "tool_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Built-in system tools to be used by the agent",
                        "key": "built_in_tools",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "BuiltInTools-Input"
                            }
                        }
                    },
                    {
                        "description": "A list of MCP server ids to be used by the agent",
                        "key": "mcp_server_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of Native MCP server ids to be used by the agent",
                        "key": "native_mcp_server_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of knowledge bases to be used by the agent",
                        "key": "knowledge_base",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "KnowledgeBaseLocator"
                                }
                            }
                        }
                    },
                    {
                        "description": "Definition for a custom LLM if LLM field is set to 'CUSTOM_LLM'",
                        "key": "custom_llm",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "CustomLLM"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to ignore the default personality",
                        "key": "ignore_default_personality",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Configuration for RAG",
                        "key": "rag",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "RagConfig"
                            }
                        }
                    },
                    {
                        "description": "A list of tools that the agent can use over the course of the conversation, use tool_ids instead",
                        "key": "tools",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "PromptAgentApiModelInputToolsItems"
                                }
                            }
                        },
                        "availability": "Deprecated"
                    }
                ]
            }
        },
        "PromptAgentApiModelOutputToolsItems": {
            "description": "The type of tool",
            "name": "PromptAgentApiModelOutputToolsItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "WebhookToolConfig-Output",
                        "type": {
                            "type": "id",
                            "value": "WebhookToolConfig-Output"
                        },
                        "displayName": "WebhookToolConfig"
                    },
                    {
                        "typeName": "ClientToolConfig-Output",
                        "type": {
                            "type": "id",
                            "value": "ClientToolConfig-Output"
                        },
                        "displayName": "ClientToolConfig"
                    },
                    {
                        "typeName": "SystemToolConfig-Output",
                        "type": {
                            "type": "id",
                            "value": "SystemToolConfig-Output"
                        },
                        "displayName": "SystemToolConfig"
                    },
                    {
                        "typeName": "MCPToolConfig-Output",
                        "type": {
                            "type": "id",
                            "value": "MCPToolConfig-Output"
                        },
                        "displayName": "MCPToolConfig"
                    }
                ]
            }
        },
        "PromptAgentAPIModel-Output": {
            "name": "PromptAgentAPIModel-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The prompt for the agent",
                        "key": "prompt",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "description": "The LLM to query with the prompt and the chat history",
                        "key": "llm",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "LLM"
                            }
                        }
                    },
                    {
                        "description": "The temperature for the LLM",
                        "key": "temperature",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "default": 0
                                }
                            }
                        }
                    },
                    {
                        "description": "If greater than 0, maximum number of tokens the LLM can predict",
                        "key": "max_tokens",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": -1
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of IDs of tools used by the agent",
                        "key": "tool_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Built-in system tools to be used by the agent",
                        "key": "built_in_tools",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "BuiltInTools-Output"
                            }
                        }
                    },
                    {
                        "description": "A list of MCP server ids to be used by the agent",
                        "key": "mcp_server_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of Native MCP server ids to be used by the agent",
                        "key": "native_mcp_server_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of knowledge bases to be used by the agent",
                        "key": "knowledge_base",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "KnowledgeBaseLocator"
                                }
                            }
                        }
                    },
                    {
                        "description": "Definition for a custom LLM if LLM field is set to 'CUSTOM_LLM'",
                        "key": "custom_llm",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "CustomLLM"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to ignore the default personality",
                        "key": "ignore_default_personality",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Configuration for RAG",
                        "key": "rag",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "RagConfig"
                            }
                        }
                    },
                    {
                        "description": "A list of tools that the agent can use over the course of the conversation, use tool_ids instead",
                        "key": "tools",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "PromptAgentApiModelOutputToolsItems"
                                }
                            }
                        },
                        "availability": "Deprecated"
                    }
                ]
            }
        },
        "PromptAgentAPIModelOverride": {
            "name": "PromptAgentAPIModelOverride",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The prompt for the agent",
                        "key": "prompt",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "PromptAgentAPIModelOverrideConfig": {
            "name": "PromptAgentAPIModelOverrideConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether to allow overriding the prompt field.",
                        "key": "prompt",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "PromptAgentDBModel": {
            "name": "PromptAgentDBModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The prompt for the agent",
                        "key": "prompt",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "description": "The LLM to query with the prompt and the chat history",
                        "key": "llm",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "LLM"
                            }
                        }
                    },
                    {
                        "description": "The temperature for the LLM",
                        "key": "temperature",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "default": 0
                                }
                            }
                        }
                    },
                    {
                        "description": "If greater than 0, maximum number of tokens the LLM can predict",
                        "key": "max_tokens",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": -1
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of IDs of tools used by the agent",
                        "key": "tool_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Built-in system tools to be used by the agent",
                        "key": "built_in_tools",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "BuiltInTools-Input"
                            }
                        }
                    },
                    {
                        "description": "A list of MCP server ids to be used by the agent",
                        "key": "mcp_server_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of Native MCP server ids to be used by the agent",
                        "key": "native_mcp_server_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of knowledge bases to be used by the agent",
                        "key": "knowledge_base",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "KnowledgeBaseLocator"
                                }
                            }
                        }
                    },
                    {
                        "description": "Definition for a custom LLM if LLM field is set to 'CUSTOM_LLM'",
                        "key": "custom_llm",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "CustomLLM"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to ignore the default personality",
                        "key": "ignore_default_personality",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Configuration for RAG",
                        "key": "rag",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "RagConfig"
                            }
                        }
                    },
                    {
                        "key": "knowledge_base_document_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "tools",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "unknown"
                            }
                        }
                    }
                ]
            }
        },
        "PromptEvaluationCriteria": {
            "description": "An evaluation using the transcript and a prompt for a yes/no achieved answer",
            "name": "PromptEvaluationCriteria",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The unique identifier for the evaluation criteria",
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The type of evaluation criteria",
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "prompt"
                                }
                            }
                        }
                    },
                    {
                        "description": "The prompt that the agent should use to evaluate the conversation",
                        "key": "conversation_goal_prompt",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "maxLength": 2000
                            }
                        }
                    },
                    {
                        "description": "When evaluating the prompt, should the agent's knowledge base be used.",
                        "key": "use_knowledge_base",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "PronunciationDictionaryAliasRuleRequestModel": {
            "name": "PronunciationDictionaryAliasRuleRequestModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The string to replace. Must be a non-empty string.",
                        "key": "string_to_replace",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The type of the rule.",
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "alias"
                            }
                        }
                    },
                    {
                        "description": "The alias for the string to be replaced.",
                        "key": "alias",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "PronunciationDictionaryLocatorResponseModel": {
            "name": "PronunciationDictionaryLocatorResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "pronunciation_dictionary_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "version_id",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "PronunciationDictionaryPhonemeRuleRequestModel": {
            "name": "PronunciationDictionaryPhonemeRuleRequestModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The string to replace. Must be a non-empty string.",
                        "key": "string_to_replace",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The type of the rule.",
                        "key": "type",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "phoneme"
                            }
                        }
                    },
                    {
                        "description": "The phoneme rule.",
                        "key": "phoneme",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The alphabet to use with the phoneme rule.",
                        "key": "alphabet",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "PronunciationDictionaryRulesResponseModel": {
            "name": "PronunciationDictionaryRulesResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the pronunciation dictionary.",
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The version ID of the pronunciation dictionary.",
                        "key": "version_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The number of rules in the version of the pronunciation dictionary.",
                        "key": "version_rules_num",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "PronunciationDictionaryVersionLocatorDBModel": {
            "name": "PronunciationDictionaryVersionLocatorDBModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "pronunciation_dictionary_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "version_id",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "PronunciationDictionaryVersionLocatorRequestModel": {
            "name": "PronunciationDictionaryVersionLocatorRequestModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the pronunciation dictionary.",
                        "key": "pronunciation_dictionary_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the version of the pronunciation dictionary. If not provided, the latest version will be used.",
                        "key": "version_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "PronunciationDictionaryVersionResponseModelPermissionOnResource": {
            "name": "PronunciationDictionaryVersionResponseModelPermissionOnResource",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "admin"
                    },
                    {
                        "value": "editor"
                    },
                    {
                        "value": "viewer"
                    }
                ]
            }
        },
        "PronunciationDictionaryVersionResponseModel": {
            "name": "PronunciationDictionaryVersionResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "version_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "version_rules_num",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "pronunciation_dictionary_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "dictionary_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "version_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "permission_on_resource",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "id",
                                "value": "PronunciationDictionaryVersionResponseModelPermissionOnResource"
                            }
                        }
                    },
                    {
                        "key": "created_by",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "creation_time_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "archived_time_unix",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "PydanticPronunciationDictionaryVersionLocator": {
            "description": "A locator for other documents to be able to reference a specific dictionary and it's version.\nThis is a pydantic version of PronunciationDictionaryVersionLocatorDBModel.\nRequired to ensure compat with the rest of the agent data models.",
            "name": "PydanticPronunciationDictionaryVersionLocator",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the pronunciation dictionary",
                        "key": "pronunciation_dictionary_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the version of the pronunciation dictionary",
                        "key": "version_id",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "QueryParamsJsonSchema": {
            "name": "QueryParamsJsonSchema",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "properties",
                        "valueType": {
                            "type": "map",
                            "keyType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            },
                            "valueType": {
                                "type": "id",
                                "value": "LiteralJsonSchemaProperty"
                            }
                        }
                    },
                    {
                        "key": "required",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "RAGDocumentIndexResponseModel": {
            "name": "RAGDocumentIndexResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "model",
                        "valueType": {
                            "type": "id",
                            "value": "EmbeddingModelEnum"
                        }
                    },
                    {
                        "key": "status",
                        "valueType": {
                            "type": "id",
                            "value": "RAGIndexStatus"
                        }
                    },
                    {
                        "key": "progress_percentage",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "key": "document_model_index_usage",
                        "valueType": {
                            "type": "id",
                            "value": "RAGDocumentIndexUsage"
                        }
                    }
                ]
            }
        },
        "RAGDocumentIndexUsage": {
            "name": "RAGDocumentIndexUsage",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "used_bytes",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "RAGDocumentIndexesResponseModel": {
            "name": "RAGDocumentIndexesResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "indexes",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "RAGDocumentIndexResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "RAGIndexOverviewEmbeddingModelResponseModel": {
            "name": "RAGIndexOverviewEmbeddingModelResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "model",
                        "valueType": {
                            "type": "id",
                            "value": "EmbeddingModelEnum"
                        }
                    },
                    {
                        "key": "used_bytes",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "RAGIndexOverviewResponseModel": {
            "name": "RAGIndexOverviewResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "total_used_bytes",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "total_max_bytes",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "models",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "RAGIndexOverviewEmbeddingModelResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "RAGIndexRequestModel": {
            "name": "RAGIndexRequestModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "model",
                        "valueType": {
                            "type": "id",
                            "value": "EmbeddingModelEnum"
                        }
                    }
                ]
            }
        },
        "RAGIndexStatus": {
            "name": "RAGIndexStatus",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "created"
                    },
                    {
                        "value": "processing"
                    },
                    {
                        "value": "failed"
                    },
                    {
                        "value": "succeeded"
                    },
                    {
                        "value": "rag_limit_exceeded"
                    },
                    {
                        "value": "document_too_small"
                    }
                ]
            }
        },
        "RagChunkMetadata": {
            "name": "RagChunkMetadata",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "document_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "chunk_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "vector_distance",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "RagConfig": {
            "name": "RagConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "embedding_model",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "EmbeddingModelEnum"
                            }
                        }
                    },
                    {
                        "description": "Maximum vector distance of retrieved chunks.",
                        "key": "max_vector_distance",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "default": 0.6
                                }
                            }
                        }
                    },
                    {
                        "description": "Maximum total length of document chunks retrieved from RAG.",
                        "key": "max_documents_length",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": 50000
                                }
                            }
                        }
                    },
                    {
                        "description": "Maximum number of RAG document chunks to initially retrieve from the vector store. These are then further filtered by vector distance and total length.",
                        "key": "max_retrieved_rag_chunks_count",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "maximum": 20,
                                    "default": 20
                                }
                            }
                        }
                    }
                ]
            }
        },
        "RagRetrievalInfo": {
            "name": "RagRetrievalInfo",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "chunks",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "RagChunkMetadata"
                            }
                        }
                    },
                    {
                        "key": "embedding_model",
                        "valueType": {
                            "type": "id",
                            "value": "EmbeddingModelEnum"
                        }
                    },
                    {
                        "key": "retrieval_query",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "rag_latency_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "ReaderResourceResponseModelResourceType": {
            "description": "The type of resource.",
            "name": "ReaderResourceResponseModelResourceType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "read"
                    },
                    {
                        "value": "collection"
                    }
                ]
            }
        },
        "ReaderResourceResponseModel": {
            "name": "ReaderResourceResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The type of resource.",
                        "key": "resource_type",
                        "valueType": {
                            "type": "id",
                            "value": "ReaderResourceResponseModelResourceType"
                        }
                    },
                    {
                        "description": "The ID of the resource.",
                        "key": "resource_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "RecordingResponseModel": {
            "name": "RecordingResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the recording.",
                        "key": "recording_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The MIME type of the recording.",
                        "key": "mime_type",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The size of the recording in bytes.",
                        "key": "size_bytes",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The date of the recording in Unix time.",
                        "key": "upload_date_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The transcription of the recording.",
                        "key": "transcription",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "RenderStatus": {
            "name": "RenderStatus",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "complete"
                    },
                    {
                        "value": "processing"
                    },
                    {
                        "value": "failed"
                    }
                ]
            }
        },
        "Render": {
            "name": "Render",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "version",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "language",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "id",
                                "value": "RenderType"
                            }
                        }
                    },
                    {
                        "key": "media_ref",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "id",
                                "value": "DubbingMediaReference"
                            }
                        }
                    },
                    {
                        "key": "status",
                        "valueType": {
                            "type": "id",
                            "value": "RenderStatus"
                        }
                    }
                ]
            }
        },
        "RenderType": {
            "name": "RenderType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "mp4"
                    },
                    {
                        "value": "aac"
                    },
                    {
                        "value": "mp3"
                    },
                    {
                        "value": "wav"
                    },
                    {
                        "value": "aaf"
                    },
                    {
                        "value": "tracks_zip"
                    },
                    {
                        "value": "clips_zip"
                    }
                ]
            }
        },
        "RequestPVCManualVerificationResponseModel": {
            "name": "RequestPVCManualVerificationResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the request PVC manual verification request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "ResourceAccessInfoRole": {
            "description": "The role of the user making the request",
            "name": "ResourceAccessInfoRole",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "admin"
                    },
                    {
                        "value": "editor"
                    },
                    {
                        "value": "viewer"
                    }
                ]
            }
        },
        "ResourceAccessInfo": {
            "name": "ResourceAccessInfo",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether the user making the request is the creator of the agent",
                        "key": "is_creator",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Name of the agent's creator",
                        "key": "creator_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Email of the agent's creator",
                        "key": "creator_email",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The role of the user making the request",
                        "key": "role",
                        "valueType": {
                            "type": "id",
                            "value": "ResourceAccessInfoRole"
                        }
                    }
                ]
            }
        },
        "ResourceMetadataResponseModel": {
            "name": "ResourceMetadataResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the resource.",
                        "key": "resource_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The type of the resource.",
                        "key": "resource_type",
                        "valueType": {
                            "type": "id",
                            "value": "WorkspaceResourceType"
                        }
                    },
                    {
                        "description": "The ID of the user who created the resource.",
                        "key": "creator_user_id",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "A mapping of roles to group IDs. When the resource is shared with a user, the group id is the user's id.",
                        "key": "role_to_group_ids",
                        "valueType": {
                            "type": "map",
                            "keyType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            },
                            "valueType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "List of options for sharing the resource further in the workspace. These are users who don't have access to the resource yet.",
                        "key": "share_options",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ShareOptionResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "SIPMediaEncryptionEnum": {
            "name": "SIPMediaEncryptionEnum",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "disabled"
                    },
                    {
                        "value": "allowed"
                    },
                    {
                        "value": "required"
                    }
                ]
            }
        },
        "SIPTrunkConfigResponseModel": {
            "description": "SIP Trunk configuration details for a phone number",
            "name": "SIPTrunkConfigResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Hostname or IP the SIP INVITE is sent to",
                        "key": "address",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Protocol to use for SIP transport",
                        "key": "transport",
                        "valueType": {
                            "type": "id",
                            "value": "SIPTrunkTransportEnum"
                        }
                    },
                    {
                        "description": "Whether or not to encrypt media (data layer).",
                        "key": "media_encryption",
                        "valueType": {
                            "type": "id",
                            "value": "SIPMediaEncryptionEnum"
                        }
                    },
                    {
                        "description": "SIP headers for INVITE request",
                        "key": "headers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether authentication credentials are configured",
                        "key": "has_auth_credentials",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "SIP trunk username (if available)",
                        "key": "username",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether a LiveKit SIP outbound trunk is configured",
                        "key": "has_outbound_trunk",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SIPTrunkCredentials": {
            "name": "SIPTrunkCredentials",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "SIP trunk username",
                        "key": "username",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "SIP trunk password",
                        "key": "password",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "SIPTrunkOutboundCallResponse": {
            "name": "SIPTrunkOutboundCallResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "success",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "key": "message",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "conversation_id",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "key": "sip_call_id",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SIPTrunkTransportEnum": {
            "name": "SIPTrunkTransportEnum",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "auto"
                    },
                    {
                        "value": "udp"
                    },
                    {
                        "value": "tcp"
                    },
                    {
                        "value": "tls"
                    }
                ]
            }
        },
        "SafetyCommonModel": {
            "description": "Safety object that has the information of safety evaluations based on used voice.",
            "name": "SafetyCommonModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "ivc",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "SafetyEvaluation"
                            }
                        }
                    },
                    {
                        "key": "non_ivc",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "SafetyEvaluation"
                            }
                        }
                    }
                ]
            }
        },
        "SafetyEvaluation": {
            "description": "Safety evaluation of the agent. Prompt and first message is taken into account.\nThe unsafe reason is provided from the evaluation",
            "name": "SafetyEvaluation",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "is_unsafe",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "llm_reason",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    },
                    {
                        "key": "safety_prompt_version",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": 0
                                }
                            }
                        }
                    },
                    {
                        "key": "matched_rule_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "SafetyRule"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SafetyResponseModel": {
            "name": "SafetyResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "is_blocked_ivc",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "is_blocked_non_ivc",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "ignore_safety_evaluation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SafetyRule": {
            "name": "SafetyRule",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "sexual_minors"
                    },
                    {
                        "value": "forget_moderation"
                    },
                    {
                        "value": "extremism"
                    },
                    {
                        "value": "scam_fraud"
                    },
                    {
                        "value": "political"
                    },
                    {
                        "value": "self_harm"
                    },
                    {
                        "value": "illegal_distribution_medical"
                    },
                    {
                        "value": "sexual_adults"
                    },
                    {
                        "value": "unknown"
                    }
                ]
            }
        },
        "SampleResponseModel": {
            "name": "SampleResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the sample.",
                        "key": "sample_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "The name of the sample file.",
                        "key": "file_name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "The MIME type of the sample file.",
                        "key": "mime_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "The size of the sample file in bytes.",
                        "key": "size_bytes",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "description": "The hash of the sample file.",
                        "key": "hash",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "key": "duration_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "remove_background_noise",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "has_isolated_audio",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "has_isolated_audio_preview",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "speaker_separation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SpeakerSeparationResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "key": "trim_start",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "trim_end",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SecretDependencyType": {
            "name": "SecretDependencyType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "conversation_initiation_webhook"
                    }
                ]
            }
        },
        "SegmentCreatePayload": {
            "name": "SegmentCreatePayload",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "start_time",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "key": "end_time",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "key": "text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "translations",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "map",
                                    "keyType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "valueType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SegmentCreateResponse": {
            "name": "SegmentCreateResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "version",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "new_segment",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "SegmentDeleteResponse": {
            "name": "SegmentDeleteResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "version",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "SegmentDubResponse": {
            "name": "SegmentDubResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "version",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "SegmentTranscriptionResponse": {
            "name": "SegmentTranscriptionResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "version",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "SegmentTranslationResponse": {
            "name": "SegmentTranslationResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "version",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "SegmentUpdatePayload": {
            "name": "SegmentUpdatePayload",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "start_time",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "end_time",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SegmentUpdateResponse": {
            "name": "SegmentUpdateResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "version",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "SegmentedJsonExportOptions": {
            "name": "SegmentedJsonExportOptions",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "include_speakers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "key": "include_timestamps",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "key": "format",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "segmented_json"
                            }
                        }
                    },
                    {
                        "key": "segment_on_silence_longer_than_s",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "max_segment_duration_s",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "max_segment_chars",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ShareOptionResponseModelType": {
            "description": "The type of the principal: user, group, or service account (under 'key').",
            "name": "ShareOptionResponseModelType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "user"
                    },
                    {
                        "value": "group"
                    },
                    {
                        "value": "key"
                    }
                ]
            }
        },
        "ShareOptionResponseModel": {
            "name": "ShareOptionResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name of the principal.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the principal.",
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The type of the principal: user, group, or service account (under 'key').",
                        "key": "type",
                        "valueType": {
                            "type": "id",
                            "value": "ShareOptionResponseModelType"
                        }
                    }
                ]
            }
        },
        "SimilarVoiceCategory": {
            "name": "SimilarVoiceCategory",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "premade"
                    },
                    {
                        "value": "cloned"
                    },
                    {
                        "value": "generated"
                    },
                    {
                        "value": "professional"
                    },
                    {
                        "value": "famous"
                    }
                ]
            }
        },
        "SimilarVoice": {
            "name": "SimilarVoice",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "category",
                        "valueType": {
                            "type": "id",
                            "value": "SimilarVoiceCategory"
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "preview_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SimilarVoicesForSpeakerResponse": {
            "name": "SimilarVoicesForSpeakerResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "voices",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "SimilarVoice"
                            }
                        }
                    }
                ]
            }
        },
        "SkipTurnToolConfig": {
            "description": "Allows the agent to explicitly skip its turn.\n\nThis tool should be invoked by the LLM when the user indicates they would like\nto think or take a short pause before continuing the conversation—e.g. when\nthey say: \"Give me a second\", \"Let me think\", or \"One moment please\".  After\ncalling this tool, the assistant should not speak until the user speaks\nagain, or another normal turn-taking condition is met.  The tool itself has\nno parameters and performs no side-effects other than informing the backend\nthat the current turn generation is complete.",
            "name": "SkipTurnToolConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "system_tool_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "skip_turn"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SpeakerAudioResponseModel": {
            "name": "SpeakerAudioResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The base64 encoded audio.",
                        "key": "audio_base_64",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The media type of the audio.",
                        "key": "media_type",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The duration of the audio in seconds.",
                        "key": "duration_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "SpeakerResponseModel": {
            "name": "SpeakerResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the speaker.",
                        "key": "speaker_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The duration of the speaker segment in seconds.",
                        "key": "duration_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "description": "The utterances of the speaker.",
                        "key": "utterances",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "UtteranceResponseModel"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SpeakerSegment": {
            "name": "SpeakerSegment",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "start_time",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "key": "end_time",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "dubs",
                        "valueType": {
                            "type": "map",
                            "keyType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            },
                            "valueType": {
                                "type": "id",
                                "value": "DubbedSegment"
                            }
                        }
                    }
                ]
            }
        },
        "SpeakerSeparationResponseModelStatus": {
            "description": "The status of the speaker separation.",
            "name": "SpeakerSeparationResponseModelStatus",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "not_started"
                    },
                    {
                        "value": "pending"
                    },
                    {
                        "value": "completed"
                    },
                    {
                        "value": "failed"
                    }
                ]
            }
        },
        "SpeakerSeparationResponseModel": {
            "name": "SpeakerSeparationResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the voice.",
                        "key": "voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the sample.",
                        "key": "sample_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The status of the speaker separation.",
                        "key": "status",
                        "valueType": {
                            "type": "id",
                            "value": "SpeakerSeparationResponseModelStatus"
                        }
                    },
                    {
                        "description": "The speakers of the sample.",
                        "key": "speakers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "map",
                                    "keyType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "valueType": {
                                        "type": "id",
                                        "value": "SpeakerResponseModel"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The IDs of the selected speakers.",
                        "key": "selected_speaker_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SpeakerTrack": {
            "name": "SpeakerTrack",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "media_ref",
                        "valueType": {
                            "type": "id",
                            "value": "DubbingMediaReference"
                        }
                    },
                    {
                        "key": "speaker_name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "voices",
                        "valueType": {
                            "type": "map",
                            "keyType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            },
                            "valueType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "key": "segments",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SpeakerUpdatedResponse": {
            "name": "SpeakerUpdatedResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "version",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "SpeechHistoryItemResponseModelVoiceCategory": {
            "description": "The category of the voice. Either 'premade', 'cloned', 'generated' or 'professional'.",
            "name": "SpeechHistoryItemResponseModelVoiceCategory",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "premade"
                    },
                    {
                        "value": "cloned"
                    },
                    {
                        "value": "generated"
                    },
                    {
                        "value": "professional"
                    }
                ]
            }
        },
        "SpeechHistoryItemResponseModelSettings": {
            "description": "The settings of the history item.",
            "name": "SpeechHistoryItemResponseModelSettings",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": []
            }
        },
        "SpeechHistoryItemResponseModelSource": {
            "description": "The source of the history item. Either TTS (text to speech), STS (speech to text), AN (audio native), Projects, Dubbing, PlayAPI, PD (pronunciation dictionary) or ConvAI (conversational AI).",
            "name": "SpeechHistoryItemResponseModelSource",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "TTS"
                    },
                    {
                        "value": "STS"
                    },
                    {
                        "value": "Projects"
                    },
                    {
                        "value": "PD"
                    },
                    {
                        "value": "AN"
                    },
                    {
                        "value": "Dubbing"
                    },
                    {
                        "value": "PlayAPI"
                    },
                    {
                        "value": "ConvAI"
                    }
                ]
            }
        },
        "SpeechHistoryItemResponseModel": {
            "name": "SpeechHistoryItemResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the history item.",
                        "key": "history_item_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the request.",
                        "key": "request_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The ID of the voice used.",
                        "key": "voice_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The ID of the model.",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The name of the voice.",
                        "key": "voice_name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The category of the voice. Either 'premade', 'cloned', 'generated' or 'professional'.",
                        "key": "voice_category",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SpeechHistoryItemResponseModelVoiceCategory"
                                }
                            }
                        }
                    },
                    {
                        "description": "The text used to generate the audio item.",
                        "key": "text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Unix timestamp of when the item was created.",
                        "key": "date_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The character count change from.",
                        "key": "character_count_change_from",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The character count change to.",
                        "key": "character_count_change_to",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The content type of the generated item.",
                        "key": "content_type",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "state",
                        "valueType": {
                            "type": "unknown"
                        }
                    },
                    {
                        "description": "The settings of the history item.",
                        "key": "settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SpeechHistoryItemResponseModelSettings"
                                }
                            }
                        }
                    },
                    {
                        "description": "Feedback associated with the generated item. Returns null if no feedback has been provided.",
                        "key": "feedback",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "FeedbackResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "The ID of the share link.",
                        "key": "share_link_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The source of the history item. Either TTS (text to speech), STS (speech to text), AN (audio native), Projects, Dubbing, PlayAPI, PD (pronunciation dictionary) or ConvAI (conversational AI).",
                        "key": "source",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SpeechHistoryItemResponseModelSource"
                                }
                            }
                        }
                    },
                    {
                        "description": "The alignments of the history item.",
                        "key": "alignments",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "HistoryAlignmentsResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "The dialogue (voice and text pairs) used to generate the audio item. If this is set then the top level `text` and `voice_id` fields will be empty.",
                        "key": "dialogue",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "DialogueInputResponseModel"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SpeechToTextCharacterResponseModel": {
            "name": "SpeechToTextCharacterResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The character that was transcribed.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The start time of the character in seconds.",
                        "key": "start",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The end time of the character in seconds.",
                        "key": "end",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SpeechToTextChunkResponseModel": {
            "description": "Chunk-level detail of the transcription with timing information.",
            "name": "SpeechToTextChunkResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The detected language code (e.g. 'eng' for English).",
                        "key": "language_code",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The confidence score of the language detection (0 to 1).",
                        "key": "language_probability",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "description": "The raw text of the transcription.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "List of words with their timing information.",
                        "key": "words",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "SpeechToTextWordResponseModel"
                            }
                        }
                    },
                    {
                        "description": "Requested additional formats of the transcript.",
                        "key": "additional_formats",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "nullable",
                                        "itemType": {
                                            "type": "id",
                                            "value": "AdditionalFormatResponseModel"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SpeechToTextWordResponseModelType": {
            "description": "The type of the word or sound. 'audio_event' is used for non-word sounds like laughter or footsteps.",
            "name": "SpeechToTextWordResponseModelType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "word"
                    },
                    {
                        "value": "spacing"
                    },
                    {
                        "value": "audio_event"
                    }
                ]
            }
        },
        "SpeechToTextWordResponseModel": {
            "description": "Word-level detail of the transcription with timing information.",
            "name": "SpeechToTextWordResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The word or sound that was transcribed.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The start time of the word or sound in seconds.",
                        "key": "start",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The end time of the word or sound in seconds.",
                        "key": "end",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The type of the word or sound. 'audio_event' is used for non-word sounds like laughter or footsteps.",
                        "key": "type",
                        "valueType": {
                            "type": "id",
                            "value": "SpeechToTextWordResponseModelType"
                        }
                    },
                    {
                        "description": "Unique identifier for the speaker of this word.",
                        "key": "speaker_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The log of the probability with which this word was predicted. Logprobs are in range [-infinity, 0], higher logprobs indicate a higher confidence the model has in its predictions.",
                        "key": "logprob",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "description": "The characters that make up the word and their timing information.",
                        "key": "characters",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "SpeechToTextCharacterResponseModel"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SrtExportOptions": {
            "name": "SrtExportOptions",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "max_characters_per_line",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "default": 50
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "include_speakers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "include_timestamps",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "key": "format",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "srt"
                            }
                        }
                    },
                    {
                        "key": "segment_on_silence_longer_than_s",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double",
                                        "default": 0.6
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "max_segment_duration_s",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double",
                                        "default": 5
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "max_segment_chars",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "default": 90
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "StartPVCVoiceTrainingResponseModel": {
            "name": "StartPVCVoiceTrainingResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the start PVC voice training request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "StartSpeakerSeparationResponseModel": {
            "name": "StartSpeakerSeparationResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the start speaker seperation request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "StreamingAudioChunkWithTimestampsResponseModel": {
            "name": "StreamingAudioChunkWithTimestampsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Base64 encoded audio data",
                        "key": "audio_base64",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Timestamp information for each character in the original text",
                        "key": "alignment",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "CharacterAlignmentResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "Timestamp information for each character in the normalized text",
                        "key": "normalized_alignment",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "CharacterAlignmentResponseModel"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SubscriptionExtrasResponseModel": {
            "name": "SubscriptionExtrasResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The concurrency of the user.",
                        "key": "concurrency",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The Convai concurrency of the user.",
                        "key": "convai_concurrency",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The Convai characters per minute of the user.",
                        "key": "convai_chars_per_minute",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The Convai ASR characters per minute of the user.",
                        "key": "convai_asr_chars_per_minute",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the user's logging is disabled.",
                        "key": "force_logging_disabled",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user can request manual pro voice verification.",
                        "key": "can_request_manual_pro_voice_verification",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user can bypass the voice captcha.",
                        "key": "can_bypass_voice_captcha",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The moderation status of the user.",
                        "key": "moderation",
                        "valueType": {
                            "type": "id",
                            "value": "ModerationStatusResponseModel"
                        }
                    },
                    {
                        "description": "The unused characters rolled over from the previous period.",
                        "key": "unused_characters_rolled_over_from_previous_period",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The overused characters rolled over from the previous period.",
                        "key": "overused_characters_rolled_over_from_previous_period",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Data on how the subscription is being used.",
                        "key": "usage",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SubscriptionUsageResponseModel"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SubscriptionResponseModelCurrency": {
            "description": "The currency of the user's subscription.",
            "name": "SubscriptionResponseModelCurrency",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "usd"
                    },
                    {
                        "value": "eur"
                    }
                ]
            }
        },
        "SubscriptionResponseModelBillingPeriod": {
            "description": "The billing period of the user's subscription.",
            "name": "SubscriptionResponseModelBillingPeriod",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "monthly_period"
                    },
                    {
                        "value": "annual_period"
                    }
                ]
            }
        },
        "SubscriptionResponseModelCharacterRefreshPeriod": {
            "description": "The character refresh period of the user's subscription.",
            "name": "SubscriptionResponseModelCharacterRefreshPeriod",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "monthly_period"
                    },
                    {
                        "value": "annual_period"
                    }
                ]
            }
        },
        "SubscriptionResponseModel": {
            "name": "SubscriptionResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The tier of the user's subscription.",
                        "key": "tier",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The number of characters used by the user.",
                        "key": "character_count",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The maximum number of characters allowed in the current billing period.",
                        "key": "character_limit",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "Maximum number of characters that the character limit can be exceeded by. Managed by the workspace admin.",
                        "key": "max_character_limit_extension",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the user can extend their character limit.",
                        "key": "can_extend_character_limit",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user is allowed to extend their character limit.",
                        "key": "allowed_to_extend_character_limit",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The Unix timestamp of the next character count reset.",
                        "key": "next_character_count_reset_unix",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The number of voice slots used by the user.",
                        "key": "voice_slots_used",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The number of professional voice slots used by the workspace/user if single seat.",
                        "key": "professional_voice_slots_used",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The maximum number of voice slots allowed for the user.",
                        "key": "voice_limit",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The maximum number of voice add/edits allowed for the user.",
                        "key": "max_voice_add_edits",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The number of voice add/edits used by the user.",
                        "key": "voice_add_edit_counter",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The maximum number of professional voices allowed for the user.",
                        "key": "professional_voice_limit",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "Whether the user can extend their voice limit.",
                        "key": "can_extend_voice_limit",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user can use instant voice cloning.",
                        "key": "can_use_instant_voice_cloning",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user can use professional voice cloning.",
                        "key": "can_use_professional_voice_cloning",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The currency of the user's subscription.",
                        "key": "currency",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SubscriptionResponseModelCurrency"
                                }
                            }
                        }
                    },
                    {
                        "description": "The status of the user's subscription.",
                        "key": "status",
                        "valueType": {
                            "type": "id",
                            "value": "SubscriptionStatusType"
                        }
                    },
                    {
                        "description": "The billing period of the user's subscription.",
                        "key": "billing_period",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SubscriptionResponseModelBillingPeriod"
                                }
                            }
                        }
                    },
                    {
                        "description": "The character refresh period of the user's subscription.",
                        "key": "character_refresh_period",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SubscriptionResponseModelCharacterRefreshPeriod"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SubscriptionStatusType": {
            "name": "SubscriptionStatusType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "trialing"
                    },
                    {
                        "value": "active"
                    },
                    {
                        "value": "incomplete"
                    },
                    {
                        "value": "incomplete_expired"
                    },
                    {
                        "value": "past_due"
                    },
                    {
                        "value": "free"
                    },
                    {
                        "value": "free_disabled"
                    },
                    {
                        "value": "canceled"
                    }
                ]
            }
        },
        "SubscriptionUsageResponseModel": {
            "name": "SubscriptionUsageResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The rollover credits quota.",
                        "key": "rollover_credits_quota",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The subscription cycle credits quota.",
                        "key": "subscription_cycle_credits_quota",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The manually gifted credits quota.",
                        "key": "manually_gifted_credits_quota",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The rollover credits used.",
                        "key": "rollover_credits_used",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The subscription cycle credits used.",
                        "key": "subscription_cycle_credits_used",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The manually gifted credits used.",
                        "key": "manually_gifted_credits_used",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The paid usage based credits used.",
                        "key": "paid_usage_based_credits_used",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The actual reported credits.",
                        "key": "actual_reported_credits",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "SupportedVoice": {
            "name": "SupportedVoice",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "label",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "key": "voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "model_family",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "TTSModelFamily"
                                }
                            }
                        }
                    },
                    {
                        "key": "optimize_streaming_latency",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "TTSOptimizeStreamingLatency"
                                }
                            }
                        }
                    },
                    {
                        "key": "stability",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double",
                                        "minimum": 0,
                                        "maximum": 1
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "speed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double",
                                        "minimum": 0.7,
                                        "maximum": 1.2
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "similarity_boost",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double",
                                        "minimum": 0,
                                        "maximum": 1
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SystemToolConfigInputParams": {
            "name": "SystemToolConfigInputParams",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "EndCallToolConfig",
                        "type": {
                            "type": "id",
                            "value": "EndCallToolConfig"
                        },
                        "displayName": "EndCallToolConfig"
                    },
                    {
                        "typeName": "LanguageDetectionToolConfig",
                        "type": {
                            "type": "id",
                            "value": "LanguageDetectionToolConfig"
                        },
                        "displayName": "LanguageDetectionToolConfig"
                    },
                    {
                        "typeName": "TransferToAgentToolConfig",
                        "type": {
                            "type": "id",
                            "value": "TransferToAgentToolConfig"
                        },
                        "displayName": "TransferToAgentToolConfig"
                    },
                    {
                        "typeName": "TransferToNumberToolConfig",
                        "type": {
                            "type": "id",
                            "value": "TransferToNumberToolConfig"
                        },
                        "displayName": "TransferToNumberToolConfig"
                    },
                    {
                        "typeName": "SkipTurnToolConfig",
                        "type": {
                            "type": "id",
                            "value": "SkipTurnToolConfig"
                        },
                        "displayName": "SkipTurnToolConfig"
                    }
                ]
            }
        },
        "SystemToolConfig-Input": {
            "description": "A system tool is a tool that is used to call a system method in the server",
            "name": "SystemToolConfig-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "regex": "^[a-zA-Z0-9_-]{1,64}$",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "description": "The maximum time in seconds to wait for the tool call to complete.",
                        "key": "response_timeout_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": 20
                                }
                            }
                        }
                    },
                    {
                        "description": "The type of tool",
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "system"
                                }
                            }
                        }
                    },
                    {
                        "key": "params",
                        "valueType": {
                            "type": "id",
                            "value": "SystemToolConfigInputParams"
                        }
                    }
                ]
            }
        },
        "SystemToolConfigOutputParams": {
            "name": "SystemToolConfigOutputParams",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "EndCallToolConfig",
                        "type": {
                            "type": "id",
                            "value": "EndCallToolConfig"
                        },
                        "displayName": "EndCallToolConfig"
                    },
                    {
                        "typeName": "LanguageDetectionToolConfig",
                        "type": {
                            "type": "id",
                            "value": "LanguageDetectionToolConfig"
                        },
                        "displayName": "LanguageDetectionToolConfig"
                    },
                    {
                        "typeName": "TransferToAgentToolConfig",
                        "type": {
                            "type": "id",
                            "value": "TransferToAgentToolConfig"
                        },
                        "displayName": "TransferToAgentToolConfig"
                    },
                    {
                        "typeName": "TransferToNumberToolConfig",
                        "type": {
                            "type": "id",
                            "value": "TransferToNumberToolConfig"
                        },
                        "displayName": "TransferToNumberToolConfig"
                    },
                    {
                        "typeName": "SkipTurnToolConfig",
                        "type": {
                            "type": "id",
                            "value": "SkipTurnToolConfig"
                        },
                        "displayName": "SkipTurnToolConfig"
                    }
                ]
            }
        },
        "SystemToolConfig-Output": {
            "description": "A system tool is a tool that is used to call a system method in the server",
            "name": "SystemToolConfig-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "regex": "^[a-zA-Z0-9_-]{1,64}$",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "description": "The maximum time in seconds to wait for the tool call to complete.",
                        "key": "response_timeout_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "default": 20
                                }
                            }
                        }
                    },
                    {
                        "description": "The type of tool",
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "system"
                                }
                            }
                        }
                    },
                    {
                        "key": "params",
                        "valueType": {
                            "type": "id",
                            "value": "SystemToolConfigOutputParams"
                        }
                    }
                ]
            }
        },
        "TTSConversationalConfig-Input": {
            "name": "TTSConversationalConfig-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The model to use for TTS",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TTSConversationalModel"
                            }
                        }
                    },
                    {
                        "description": "The voice ID to use for TTS",
                        "key": "voice_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "minLength": 0,
                                    "default": "cjVigY5qzO86Huf0OWal"
                                }
                            }
                        }
                    },
                    {
                        "description": "Additional supported voices for the agent",
                        "key": "supported_voices",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "SupportedVoice"
                                }
                            }
                        }
                    },
                    {
                        "description": "The audio format to use for TTS",
                        "key": "agent_output_audio_format",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TTSOutputFormat"
                            }
                        }
                    },
                    {
                        "description": "The optimization for streaming latency",
                        "key": "optimize_streaming_latency",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TTSOptimizeStreamingLatency"
                            }
                        }
                    },
                    {
                        "description": "The stability of generated speech",
                        "key": "stability",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "default": 0.5
                                }
                            }
                        }
                    },
                    {
                        "description": "The speed of generated speech",
                        "key": "speed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "minimum": 0.7,
                                    "maximum": 1.2,
                                    "default": 1
                                }
                            }
                        }
                    },
                    {
                        "description": "The similarity boost for generated speech",
                        "key": "similarity_boost",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "default": 0.8
                                }
                            }
                        }
                    },
                    {
                        "description": "The pronunciation dictionary locators",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "PydanticPronunciationDictionaryVersionLocator"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "TTSConversationalConfig-Output": {
            "name": "TTSConversationalConfig-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The model to use for TTS",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TTSConversationalModel"
                            }
                        }
                    },
                    {
                        "description": "The voice ID to use for TTS",
                        "key": "voice_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "minLength": 0,
                                    "default": "cjVigY5qzO86Huf0OWal"
                                }
                            }
                        }
                    },
                    {
                        "description": "Additional supported voices for the agent",
                        "key": "supported_voices",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "SupportedVoice"
                                }
                            }
                        }
                    },
                    {
                        "description": "The audio format to use for TTS",
                        "key": "agent_output_audio_format",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TTSOutputFormat"
                            }
                        }
                    },
                    {
                        "description": "The optimization for streaming latency",
                        "key": "optimize_streaming_latency",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TTSOptimizeStreamingLatency"
                            }
                        }
                    },
                    {
                        "description": "The stability of generated speech",
                        "key": "stability",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "default": 0.5
                                }
                            }
                        }
                    },
                    {
                        "description": "The speed of generated speech",
                        "key": "speed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "minimum": 0.7,
                                    "maximum": 1.2,
                                    "default": 1
                                }
                            }
                        }
                    },
                    {
                        "description": "The similarity boost for generated speech",
                        "key": "similarity_boost",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "minimum": 0,
                                    "maximum": 1,
                                    "default": 0.8
                                }
                            }
                        }
                    },
                    {
                        "description": "The pronunciation dictionary locators",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "PydanticPronunciationDictionaryVersionLocator"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "TTSConversationalConfigOverride": {
            "name": "TTSConversationalConfigOverride",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The voice ID to use for TTS",
                        "key": "voice_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "TTSConversationalConfigOverrideConfig": {
            "name": "TTSConversationalConfigOverrideConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether to allow overriding the voice_id field.",
                        "key": "voice_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "TTSConversationalModel": {
            "name": "TTSConversationalModel",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "eleven_turbo_v2"
                    },
                    {
                        "value": "eleven_turbo_v2_5"
                    },
                    {
                        "value": "eleven_flash_v2"
                    },
                    {
                        "value": "eleven_flash_v2_5"
                    }
                ]
            }
        },
        "TTSModelFamily": {
            "name": "TTSModelFamily",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "turbo"
                    },
                    {
                        "value": "flash"
                    },
                    {
                        "value": "multilingual"
                    }
                ]
            }
        },
        "TTSOptimizeStreamingLatency": {
            "name": "TTSOptimizeStreamingLatency",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "0"
                    },
                    {
                        "value": "1"
                    },
                    {
                        "value": "2"
                    },
                    {
                        "value": "3"
                    },
                    {
                        "value": "4"
                    }
                ]
            }
        },
        "TTSOutputFormat": {
            "name": "TTSOutputFormat",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "pcm_48000"
                    },
                    {
                        "value": "ulaw_8000"
                    }
                ]
            }
        },
        "TelephonyProvider": {
            "name": "TelephonyProvider",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "twilio"
                    },
                    {
                        "value": "sip_trunk"
                    }
                ]
            }
        },
        "ToolInputSchema": {
            "name": "ToolInputSchema",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": []
            }
        },
        "Tool": {
            "description": "Definition for a tool the client can call.",
            "name": "Tool",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "inputSchema",
                        "valueType": {
                            "type": "id",
                            "value": "ToolInputSchema"
                        }
                    },
                    {
                        "key": "annotations",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ToolAnnotations"
                                }
                            }
                        }
                    }
                ],
                "extraProperties": {
                    "type": "unknown"
                }
            }
        },
        "ToolAnnotations": {
            "description": "Additional properties describing a Tool to clients.\n\nNOTE: all properties in ToolAnnotations are **hints**.\nThey are not guaranteed to provide a faithful description of\ntool behavior (including descriptive properties like `title`).\n\nClients should never make tool use decisions based on ToolAnnotations\nreceived from untrusted servers.",
            "name": "ToolAnnotations",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "title",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "readOnlyHint",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "destructiveHint",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "idempotentHint",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "openWorldHint",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                ],
                "extraProperties": {
                    "type": "unknown"
                }
            }
        },
        "ToolMockConfig": {
            "name": "ToolMockConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "default_return_value",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "Tool Called."
                                }
                            }
                        }
                    },
                    {
                        "key": "default_is_error",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ToolRequestModelToolConfig": {
            "description": "Configuration for the tool",
            "name": "ToolRequestModelToolConfig",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "WebhookToolConfig-Input",
                        "type": {
                            "type": "id",
                            "value": "WebhookToolConfig-Input"
                        },
                        "displayName": "WebhookToolConfig"
                    },
                    {
                        "typeName": "ClientToolConfig-Input",
                        "type": {
                            "type": "id",
                            "value": "ClientToolConfig-Input"
                        },
                        "displayName": "ClientToolConfig"
                    },
                    {
                        "typeName": "SystemToolConfig-Input",
                        "type": {
                            "type": "id",
                            "value": "SystemToolConfig-Input"
                        },
                        "displayName": "SystemToolConfig"
                    },
                    {
                        "typeName": "MCPToolConfig-Input",
                        "type": {
                            "type": "id",
                            "value": "MCPToolConfig-Input"
                        },
                        "displayName": "MCPToolConfig"
                    }
                ]
            }
        },
        "ToolRequestModel": {
            "name": "ToolRequestModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Configuration for the tool",
                        "key": "tool_config",
                        "valueType": {
                            "type": "id",
                            "value": "ToolRequestModelToolConfig"
                        }
                    }
                ]
            }
        },
        "ToolResponseModelToolConfig": {
            "description": "The type of tool",
            "name": "ToolResponseModelToolConfig",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "WebhookToolConfig-Output",
                        "type": {
                            "type": "id",
                            "value": "WebhookToolConfig-Output"
                        },
                        "displayName": "WebhookToolConfig"
                    },
                    {
                        "typeName": "ClientToolConfig-Output",
                        "type": {
                            "type": "id",
                            "value": "ClientToolConfig-Output"
                        },
                        "displayName": "ClientToolConfig"
                    },
                    {
                        "typeName": "SystemToolConfig-Output",
                        "type": {
                            "type": "id",
                            "value": "SystemToolConfig-Output"
                        },
                        "displayName": "SystemToolConfig"
                    },
                    {
                        "typeName": "MCPToolConfig-Output",
                        "type": {
                            "type": "id",
                            "value": "MCPToolConfig-Output"
                        },
                        "displayName": "MCPToolConfig"
                    }
                ]
            }
        },
        "ToolResponseModel": {
            "name": "ToolResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The type of tool",
                        "key": "tool_config",
                        "valueType": {
                            "type": "id",
                            "value": "ToolResponseModelToolConfig"
                        }
                    },
                    {
                        "key": "access_info",
                        "valueType": {
                            "type": "id",
                            "value": "ResourceAccessInfo"
                        }
                    }
                ]
            }
        },
        "ToolsResponseModel": {
            "name": "ToolsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "tools",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ToolResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "TransferToAgentToolConfig": {
            "name": "TransferToAgentToolConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "system_tool_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "transfer_to_agent"
                                }
                            }
                        }
                    },
                    {
                        "key": "transfers",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "AgentTransfer"
                            }
                        }
                    }
                ]
            }
        },
        "TransferToNumberToolConfig": {
            "name": "TransferToNumberToolConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "system_tool_type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "transfer_to_number"
                                }
                            }
                        }
                    },
                    {
                        "key": "transfers",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "PhoneNumberTransfer"
                            }
                        }
                    },
                    {
                        "description": "Whether to play a message to the client while they wait for transfer. Defaults to true for backward compatibility.",
                        "key": "enable_client_message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    }
                ]
            }
        },
        "TurnConfig": {
            "name": "TurnConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Maximum wait time for the user's reply before re-engaging the user",
                        "key": "turn_timeout",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "default": 7
                                }
                            }
                        }
                    },
                    {
                        "description": "Maximum wait time since the user last spoke before terminating the call",
                        "key": "silence_end_call_timeout",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "default": -1
                                }
                            }
                        }
                    },
                    {
                        "description": "The mode of turn detection",
                        "key": "mode",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "TurnMode"
                            }
                        }
                    }
                ]
            }
        },
        "TurnMode": {
            "name": "TurnMode",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "silence"
                    },
                    {
                        "value": "turn"
                    }
                ]
            }
        },
        "TwilioOutboundCallResponse": {
            "name": "TwilioOutboundCallResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "success",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "key": "message",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "conversation_id",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "key": "callSid",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "TxtExportOptions": {
            "name": "TxtExportOptions",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "max_characters_per_line",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "default": 100
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "include_speakers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "key": "include_timestamps",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "key": "format",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": "txt"
                            }
                        }
                    },
                    {
                        "key": "segment_on_silence_longer_than_s",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "max_segment_duration_s",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "max_segment_chars",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "URLAvatar": {
            "name": "URLAvatar",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The type of the avatar",
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "url"
                                }
                            }
                        }
                    },
                    {
                        "description": "The custom URL of the avatar",
                        "key": "custom_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": ""
                                }
                            }
                        }
                    }
                ]
            }
        },
        "UpdatePhoneNumberRequest": {
            "name": "UpdatePhoneNumberRequest",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "agent_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "UpdateWorkspaceMemberResponseModel": {
            "name": "UpdateWorkspaceMemberResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the workspace member update request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "UsageAggregationInterval": {
            "description": "The time interval over which to aggregate the usage data.",
            "name": "UsageAggregationInterval",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "hour"
                    },
                    {
                        "value": "day"
                    },
                    {
                        "value": "week"
                    },
                    {
                        "value": "month"
                    },
                    {
                        "value": "cumulative"
                    }
                ]
            }
        },
        "UsageCharactersResponseModel": {
            "name": "UsageCharactersResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The time axis with unix timestamps for each day.",
                        "key": "time",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "description": "The usage of each breakdown type along the time axis.",
                        "key": "usage",
                        "valueType": {
                            "type": "map",
                            "keyType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            },
                            "valueType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "UserFeedback": {
            "name": "UserFeedback",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "score",
                        "valueType": {
                            "type": "id",
                            "value": "UserFeedbackScore"
                        }
                    },
                    {
                        "key": "time_in_call_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "UserFeedbackScore": {
            "name": "UserFeedbackScore",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "like"
                    },
                    {
                        "value": "dislike"
                    }
                ]
            }
        },
        "UserResponseModel": {
            "name": "UserResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The unique identifier of the user.",
                        "key": "user_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Details of the user's subscription.",
                        "key": "subscription",
                        "valueType": {
                            "type": "id",
                            "value": "SubscriptionResponseModel"
                        }
                    },
                    {
                        "description": "Optional additional details about the user's subscription.",
                        "key": "subscription_extras",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "SubscriptionExtrasResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the user is new.",
                        "key": "is_new_user",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The API key of the user.",
                        "key": "xi_api_key",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "This field is deprecated and will be removed in a future major version. Instead use subscription.trust_on_invoice_creation.",
                        "key": "can_use_delayed_payment_methods",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        },
                        "availability": "Deprecated"
                    },
                    {
                        "description": "Whether the user's onboarding is completed.",
                        "key": "is_onboarding_completed",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the user's onboarding checklist is completed.",
                        "key": "is_onboarding_checklist_completed",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "First name of the user.",
                        "key": "first_name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the user's API key is hashed.",
                        "key": "is_api_key_hashed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "The preview of the user's API key.",
                        "key": "xi_api_key_preview",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The referral link code of the user.",
                        "key": "referral_link_code",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The Partnerstack partner default link of the user.",
                        "key": "partnerstack_partner_default_link",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "UtteranceResponseModel": {
            "name": "UtteranceResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The start time of the utterance in seconds.",
                        "key": "start",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "description": "The end time of the utterance in seconds.",
                        "key": "end",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "ValidationErrorLocItems": {
            "name": "ValidationErrorLocItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    }
                ]
            }
        },
        "ValidationError": {
            "name": "ValidationError",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "loc",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "ValidationErrorLocItems"
                            }
                        }
                    },
                    {
                        "key": "msg",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "type",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "VerificationAttemptResponseModel": {
            "name": "VerificationAttemptResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The text of the verification attempt.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The date of the verification attempt in Unix time.",
                        "key": "date_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "Whether the verification attempt was accepted.",
                        "key": "accepted",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "The similarity of the verification attempt.",
                        "key": "similarity",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "description": "The Levenshtein distance of the verification attempt.",
                        "key": "levenshtein_distance",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "description": "The recording of the verification attempt.",
                        "key": "recording",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "RecordingResponseModel"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "VerifiedVoiceLanguageResponseModel": {
            "name": "VerifiedVoiceLanguageResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The language of the voice.",
                        "key": "language",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The voice's model ID.",
                        "key": "model_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The voice's accent, if applicable.",
                        "key": "accent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The voice's locale, if applicable.",
                        "key": "locale",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The voice's preview URL, if applicable.",
                        "key": "preview_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "VerifyPVCVoiceCaptchaResponseModel": {
            "name": "VerifyPVCVoiceCaptchaResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the verify PVC captcha request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
                        "key": "status",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "VoiceDesignRequestModelModelId": {
            "description": "Model to use for the voice generation. Possible values: eleven_multilingual_ttv_v2, eleven_ttv_v3.",
            "name": "VoiceDesignRequestModelModelId",
            "shape": {
                "type": "enum",
                "default": "eleven_multilingual_ttv_v2",
                "values": [
                    {
                        "value": "eleven_multilingual_ttv_v2"
                    },
                    {
                        "value": "eleven_ttv_v3"
                    }
                ]
            }
        },
        "VoiceDesignRequestModel": {
            "name": "VoiceDesignRequestModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Description to use for the created voice.",
                        "key": "voice_description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 20,
                                "maxLength": 1000
                            }
                        }
                    },
                    {
                        "description": "Model to use for the voice generation. Possible values: eleven_multilingual_ttv_v2, eleven_ttv_v3.",
                        "key": "model_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "VoiceDesignRequestModelModelId"
                            }
                        }
                    },
                    {
                        "description": "Text to generate, text length has to be between 100 and 1000.",
                        "key": "text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "minLength": 100,
                                        "maxLength": 1000
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to automatically generate a text suitable for the voice description.",
                        "key": "auto_generate_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Controls the volume level of the generated voice. -1 is quietest, 1 is loudest, 0 corresponds to roughly -24 LUFS.",
                        "key": "loudness",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "minimum": -1,
                                    "maximum": 1,
                                    "default": 0.5
                                }
                            }
                        }
                    },
                    {
                        "description": "Random number that controls the voice generation. Same seed with same inputs produces same voice.",
                        "key": "seed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 2147483647
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Controls how closely the AI follows the prompt. Lower numbers give the AI more freedom to be creative, while higher numbers force it to stick more to the prompt. High numbers can cause voice to sound artificial or robotic. We recommend to use longer, more detailed prompts at lower Guidance Scale.",
                        "key": "guidance_scale",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "default": 5
                                }
                            }
                        }
                    },
                    {
                        "description": "Higher quality results in better voice output but less variety.",
                        "key": "quality",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double",
                                        "minimum": -1,
                                        "maximum": 1
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Reference audio to use for the voice generation. The audio should be base64 encoded. Only supported when using the  eleven_ttv_v3 model.",
                        "key": "reference_audio_base64",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Controls the balance of prompt versus reference audio when generating voice samples. 0 means almost no prompt influence, 1 means almost no reference audio influence. Only supported when using the eleven_ttv_v3 model and providing reference audio.",
                        "key": "prompt_strength",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double",
                                        "minimum": 0,
                                        "maximum": 1
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "VoiceGenerationParameterOptionResponseModel": {
            "name": "VoiceGenerationParameterOptionResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "code",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "VoiceGenerationParameterResponseModel": {
            "name": "VoiceGenerationParameterResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "genders",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "VoiceGenerationParameterOptionResponseModel"
                            }
                        }
                    },
                    {
                        "key": "accents",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "VoiceGenerationParameterOptionResponseModel"
                            }
                        }
                    },
                    {
                        "key": "ages",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "VoiceGenerationParameterOptionResponseModel"
                            }
                        }
                    },
                    {
                        "key": "minimum_characters",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "maximum_characters",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "key": "minimum_accent_strength",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    },
                    {
                        "key": "maximum_accent_strength",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "VoicePreviewResponseModel": {
            "name": "VoicePreviewResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The base64 encoded audio of the preview.",
                        "key": "audio_base_64",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the generated voice. Use it to create a voice from the preview.",
                        "key": "generated_voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The media type of the preview.",
                        "key": "media_type",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The duration of the preview in seconds.",
                        "key": "duration_secs",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "double"
                            }
                        }
                    }
                ]
            }
        },
        "VoicePreviewsRequestModel": {
            "name": "VoicePreviewsRequestModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Description to use for the created voice.",
                        "key": "voice_description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 20,
                                "maxLength": 1000
                            }
                        }
                    },
                    {
                        "description": "Text to generate, text length has to be between 100 and 1000.",
                        "key": "text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "minLength": 100,
                                        "maxLength": 1000
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to automatically generate a text suitable for the voice description.",
                        "key": "auto_generate_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Controls the volume level of the generated voice. -1 is quietest, 1 is loudest, 0 corresponds to roughly -24 LUFS.",
                        "key": "loudness",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "minimum": -1,
                                    "maximum": 1,
                                    "default": 0.5
                                }
                            }
                        }
                    },
                    {
                        "description": "Higher quality results in better voice output but less variety.",
                        "key": "quality",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "minimum": -1,
                                    "maximum": 1,
                                    "default": 0.9
                                }
                            }
                        }
                    },
                    {
                        "description": "Random number that controls the voice generation. Same seed with same inputs produces same voice.",
                        "key": "seed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 2147483647
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Controls how closely the AI follows the prompt. Lower numbers give the AI more freedom to be creative, while higher numbers force it to stick more to the prompt. High numbers can cause voice to sound artificial or robotic. We recommend to use longer, more detailed prompts at lower Guidance Scale.",
                        "key": "guidance_scale",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "minimum": 0,
                                    "maximum": 100,
                                    "default": 5
                                }
                            }
                        }
                    }
                ]
            }
        },
        "VoicePreviewsResponseModel": {
            "name": "VoicePreviewsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The previews of the generated voices.",
                        "key": "previews",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "VoicePreviewResponseModel"
                            }
                        }
                    },
                    {
                        "description": "The text used to preview the voices.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "VoiceResponseModelCategory": {
            "description": "The category of the voice.",
            "name": "VoiceResponseModelCategory",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "generated"
                    },
                    {
                        "value": "cloned"
                    },
                    {
                        "value": "premade"
                    },
                    {
                        "value": "professional"
                    },
                    {
                        "value": "famous"
                    },
                    {
                        "value": "high_quality"
                    }
                ]
            }
        },
        "VoiceResponseModelSafetyControl": {
            "description": "The safety controls of the voice.",
            "name": "VoiceResponseModelSafetyControl",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "NONE"
                    },
                    {
                        "value": "BAN"
                    },
                    {
                        "value": "CAPTCHA"
                    },
                    {
                        "value": "CAPTCHA_AND_MODERATION"
                    },
                    {
                        "value": "ENTERPRISE_BAN"
                    },
                    {
                        "value": "ENTERPRISE_CAPTCHA"
                    }
                ]
            }
        },
        "VoiceResponseModel": {
            "name": "VoiceResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the voice.",
                        "key": "voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The name of the voice.",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "List of samples associated with the voice.",
                        "key": "samples",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "SampleResponseModel"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The category of the voice.",
                        "key": "category",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "VoiceResponseModelCategory"
                            }
                        }
                    },
                    {
                        "description": "Fine-tuning information for the voice.",
                        "key": "fine_tuning",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "FineTuningResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "Labels associated with the voice.",
                        "key": "labels",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The description of the voice.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The preview URL of the voice.",
                        "key": "preview_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The tiers the voice is available for.",
                        "key": "available_for_tiers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The settings of the voice.",
                        "key": "settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "VoiceSettingsResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "The sharing information of the voice.",
                        "key": "sharing",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "VoiceSharingResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "The base model IDs for high-quality voices.",
                        "key": "high_quality_base_model_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The verified languages of the voice.",
                        "key": "verified_languages",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "VerifiedVoiceLanguageResponseModel"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The safety controls of the voice.",
                        "key": "safety_control",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "VoiceResponseModelSafetyControl"
                                }
                            }
                        }
                    },
                    {
                        "description": "The voice verification of the voice.",
                        "key": "voice_verification",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "VoiceVerificationResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "The permission on the resource of the voice.",
                        "key": "permission_on_resource",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the voice is owned by the user.",
                        "key": "is_owner",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the voice is legacy.",
                        "key": "is_legacy",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the voice is mixed.",
                        "key": "is_mixed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "The creation time of the voice in Unix time.",
                        "key": "created_at_unix",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "VoiceSamplePreviewResponseModel": {
            "name": "VoiceSamplePreviewResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The base64 encoded audio.",
                        "key": "audio_base_64",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the voice.",
                        "key": "voice_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the sample.",
                        "key": "sample_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The media type of the audio.",
                        "key": "media_type",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The duration of the audio in seconds.",
                        "key": "duration_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "VoiceSampleVisualWaveformResponseModel": {
            "name": "VoiceSampleVisualWaveformResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The ID of the sample.",
                        "key": "sample_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The visual waveform of the sample, represented as a list of floats.",
                        "key": "visual_waveform",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "VoiceSettingsResponseModel": {
            "name": "VoiceSettingsResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Determines how stable the voice is and the randomness between each generation. Lower values introduce broader emotional range for the voice. Higher values can result in a monotonous voice with limited emotion.",
                        "key": "stability",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "This setting boosts the similarity to the original speaker. Using this setting requires a slightly higher computational load, which in turn increases latency.",
                        "key": "use_speaker_boost",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Determines how closely the AI should adhere to the original voice when attempting to replicate it.",
                        "key": "similarity_boost",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Determines the style exaggeration of the voice. This setting attempts to amplify the style of the original speaker. It does consume additional computational resources and might increase latency if set to anything other than 0.",
                        "key": "style",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Adjusts the speed of the voice. A value of 1.0 is the default speed, while values less than 1.0 slow down the speech, and values greater than 1.0 speed it up.",
                        "key": "speed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "VoiceSharingModerationCheckResponseModel": {
            "name": "VoiceSharingModerationCheckResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The date the moderation check was made in Unix time.",
                        "key": "date_checked_unix",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The name value of the voice.",
                        "key": "name_value",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the name check was successful.",
                        "key": "name_check",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The description value of the voice.",
                        "key": "description_value",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the description check was successful.",
                        "key": "description_check",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of sample IDs.",
                        "key": "sample_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of sample checks.",
                        "key": "sample_checks",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "double"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of captcha IDs.",
                        "key": "captcha_ids",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of CAPTCHA check values.",
                        "key": "captcha_checks",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "double"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "voice_sharing_state": {
            "description": "The status of the voice sharing.",
            "name": "voice_sharing_state",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "enabled"
                    },
                    {
                        "value": "disabled"
                    },
                    {
                        "value": "copied"
                    },
                    {
                        "value": "copied_disabled"
                    }
                ]
            }
        },
        "VoiceSharingResponseModelCategory": {
            "description": "The category of the voice.",
            "name": "VoiceSharingResponseModelCategory",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "generated"
                    },
                    {
                        "value": "cloned"
                    },
                    {
                        "value": "premade"
                    },
                    {
                        "value": "professional"
                    },
                    {
                        "value": "famous"
                    },
                    {
                        "value": "high_quality"
                    }
                ]
            }
        },
        "review_status": {
            "description": "The review status of the voice.",
            "name": "review_status",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "not_requested"
                    },
                    {
                        "value": "pending"
                    },
                    {
                        "value": "declined"
                    },
                    {
                        "value": "allowed"
                    },
                    {
                        "value": "allowed_with_changes"
                    }
                ]
            }
        },
        "VoiceSharingResponseModel": {
            "name": "VoiceSharingResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The status of the voice sharing.",
                        "key": "status",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "voice_sharing_state"
                            }
                        }
                    },
                    {
                        "description": "The sample ID of the history item.",
                        "key": "history_item_sample_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The date of the voice sharing in Unix time.",
                        "key": "date_unix",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of whitelisted emails.",
                        "key": "whitelisted_emails",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The ID of the public owner.",
                        "key": "public_owner_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "The ID of the original voice.",
                        "key": "original_voice_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether financial rewards are enabled.",
                        "key": "financial_rewards_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether free users are allowed.",
                        "key": "free_users_allowed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether live moderation is enabled.",
                        "key": "live_moderation_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "The rate of the voice sharing.",
                        "key": "rate",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The rate of the voice sharing in USD per 1000 credits.",
                        "key": "fiat_rate",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The notice period of the voice sharing.",
                        "key": "notice_period",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "description": "The date of the voice sharing in Unix time.",
                        "key": "disable_at_unix",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether voice mixing is allowed.",
                        "key": "voice_mixing_allowed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the voice is featured.",
                        "key": "featured",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "The category of the voice.",
                        "key": "category",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "VoiceSharingResponseModelCategory"
                            }
                        }
                    },
                    {
                        "description": "Whether the reader app is enabled.",
                        "key": "reader_app_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The image URL of the voice.",
                        "key": "image_url",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The ban reason of the voice.",
                        "key": "ban_reason",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The number of likes on the voice.",
                        "key": "liked_by_count",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "description": "The number of clones on the voice.",
                        "key": "cloned_by_count",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    {
                        "description": "The name of the voice.",
                        "key": "name",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "The description of the voice.",
                        "key": "description",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The labels of the voice.",
                        "key": "labels",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The review status of the voice.",
                        "key": "review_status",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "review_status"
                            }
                        }
                    },
                    {
                        "description": "The review message of the voice.",
                        "key": "review_message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the voice is enabled in the library.",
                        "key": "enabled_in_library",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    {
                        "description": "The Instagram username of the voice.",
                        "key": "instagram_username",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The Twitter/X username of the voice.",
                        "key": "twitter_username",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The YouTube username of the voice.",
                        "key": "youtube_username",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The TikTok username of the voice.",
                        "key": "tiktok_username",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The moderation check of the voice.",
                        "key": "moderation_check",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "VoiceSharingModerationCheckResponseModel"
                                }
                            }
                        }
                    },
                    {
                        "description": "The reader restricted on of the voice.",
                        "key": "reader_restricted_on",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "ReaderResourceResponseModel"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "VoiceVerificationResponseModel": {
            "name": "VoiceVerificationResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Whether the voice requires verification.",
                        "key": "requires_verification",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the voice has been verified.",
                        "key": "is_verified",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "List of verification failures.",
                        "key": "verification_failures",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "The number of verification attempts.",
                        "key": "verification_attempts_count",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The language of the voice.",
                        "key": "language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Number of times a verification was attempted.",
                        "key": "verification_attempts",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "VerificationAttemptResponseModel"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WebhookAuthMethodType": {
            "name": "WebhookAuthMethodType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "hmac"
                    },
                    {
                        "value": "oauth2"
                    }
                ]
            }
        },
        "WebhookToolApiSchemaConfigInputMethod": {
            "description": "The HTTP method to use for the webhook",
            "name": "WebhookToolApiSchemaConfigInputMethod",
            "shape": {
                "type": "enum",
                "default": "GET",
                "values": [
                    {
                        "value": "GET"
                    },
                    {
                        "value": "POST"
                    },
                    {
                        "value": "PUT"
                    },
                    {
                        "value": "PATCH"
                    },
                    {
                        "value": "DELETE"
                    }
                ]
            }
        },
        "WebhookToolApiSchemaConfigInputRequestHeaders": {
            "name": "WebhookToolApiSchemaConfigInputRequestHeaders",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "typeName": "ConvAISecretLocator",
                        "type": {
                            "type": "id",
                            "value": "ConvAISecretLocator"
                        },
                        "displayName": "ConvAISecretLocator"
                    },
                    {
                        "typeName": "ConvAIDynamicVariable",
                        "type": {
                            "type": "id",
                            "value": "ConvAIDynamicVariable"
                        },
                        "displayName": "ConvAIDynamicVariable"
                    }
                ]
            }
        },
        "WebhookToolApiSchemaConfig-Input": {
            "description": "Configuration for a webhook that will be called by an LLM tool.",
            "name": "WebhookToolApiSchemaConfig-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The URL that the webhook will be sent to. May include path parameters, e.g. https://example.com/agents/{agent_id}",
                        "key": "url",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The HTTP method to use for the webhook",
                        "key": "method",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WebhookToolApiSchemaConfigInputMethod"
                            }
                        }
                    },
                    {
                        "description": "Schema for path parameters, if any. The keys should match the placeholders in the URL.",
                        "key": "path_params_schema",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "LiteralJsonSchemaProperty"
                                }
                            }
                        }
                    },
                    {
                        "description": "Schema for any query params, if any. These will be added to end of the URL as query params. Note: properties in a query param must all be literal types",
                        "key": "query_params_schema",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "QueryParamsJsonSchema"
                                }
                            }
                        }
                    },
                    {
                        "description": "Schema for the body parameters, if any. Used for POST/PATCH/PUT requests. The schema should be an object which will be sent as the json body",
                        "key": "request_body_schema",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ObjectJsonSchemaProperty-Input"
                                }
                            }
                        }
                    },
                    {
                        "description": "Headers that should be included in the request",
                        "key": "request_headers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "WebhookToolApiSchemaConfigInputRequestHeaders"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WebhookToolApiSchemaConfigOutputMethod": {
            "description": "The HTTP method to use for the webhook",
            "name": "WebhookToolApiSchemaConfigOutputMethod",
            "shape": {
                "type": "enum",
                "default": "GET",
                "values": [
                    {
                        "value": "GET"
                    },
                    {
                        "value": "POST"
                    },
                    {
                        "value": "PUT"
                    },
                    {
                        "value": "PATCH"
                    },
                    {
                        "value": "DELETE"
                    }
                ]
            }
        },
        "WebhookToolApiSchemaConfigOutputRequestHeaders": {
            "name": "WebhookToolApiSchemaConfigOutputRequestHeaders",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "type": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "typeName": "ConvAISecretLocator",
                        "type": {
                            "type": "id",
                            "value": "ConvAISecretLocator"
                        },
                        "displayName": "ConvAISecretLocator"
                    },
                    {
                        "typeName": "ConvAIDynamicVariable",
                        "type": {
                            "type": "id",
                            "value": "ConvAIDynamicVariable"
                        },
                        "displayName": "ConvAIDynamicVariable"
                    }
                ]
            }
        },
        "WebhookToolApiSchemaConfig-Output": {
            "description": "Configuration for a webhook that will be called by an LLM tool.",
            "name": "WebhookToolApiSchemaConfig-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The URL that the webhook will be sent to. May include path parameters, e.g. https://example.com/agents/{agent_id}",
                        "key": "url",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The HTTP method to use for the webhook",
                        "key": "method",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WebhookToolApiSchemaConfigOutputMethod"
                            }
                        }
                    },
                    {
                        "description": "Schema for path parameters, if any. The keys should match the placeholders in the URL.",
                        "key": "path_params_schema",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "LiteralJsonSchemaProperty"
                                }
                            }
                        }
                    },
                    {
                        "description": "Schema for any query params, if any. These will be added to end of the URL as query params. Note: properties in a query param must all be literal types",
                        "key": "query_params_schema",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "QueryParamsJsonSchema"
                                }
                            }
                        }
                    },
                    {
                        "description": "Schema for the body parameters, if any. Used for POST/PATCH/PUT requests. The schema should be an object which will be sent as the json body",
                        "key": "request_body_schema",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "ObjectJsonSchemaProperty-Output"
                                }
                            }
                        }
                    },
                    {
                        "description": "Headers that should be included in the request",
                        "key": "request_headers",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "WebhookToolApiSchemaConfigOutputRequestHeaders"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WebhookToolConfig-Input": {
            "description": "A webhook tool is a tool that calls an external webhook from our server",
            "name": "WebhookToolConfig-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "regex": "^[a-zA-Z0-9_-]{1,64}$",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "description": "The maximum time in seconds to wait for the tool call to complete. Must be between 5 and 120 seconds (inclusive).",
                        "key": "response_timeout_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "minimum": 5,
                                    "maximum": 120,
                                    "default": 20
                                }
                            }
                        }
                    },
                    {
                        "description": "The type of tool",
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "webhook"
                                }
                            }
                        }
                    },
                    {
                        "description": "The schema for the outgoing webhoook, including parameters and URL specification",
                        "key": "api_schema",
                        "valueType": {
                            "type": "id",
                            "value": "WebhookToolApiSchemaConfig-Input"
                        }
                    },
                    {
                        "description": "Configuration for dynamic variables",
                        "key": "dynamic_variables",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "DynamicVariablesConfig"
                            }
                        }
                    }
                ]
            }
        },
        "WebhookToolConfig-Output": {
            "description": "A webhook tool is a tool that calls an external webhook from our server",
            "name": "WebhookToolConfig-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "regex": "^[a-zA-Z0-9_-]{1,64}$",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "key": "description",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string",
                                "minLength": 0
                            }
                        }
                    },
                    {
                        "description": "The maximum time in seconds to wait for the tool call to complete. Must be between 5 and 120 seconds (inclusive).",
                        "key": "response_timeout_secs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer",
                                    "minimum": 5,
                                    "maximum": 120,
                                    "default": 20
                                }
                            }
                        }
                    },
                    {
                        "description": "The type of tool",
                        "key": "type",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "stringLiteral",
                                    "value": "webhook"
                                }
                            }
                        }
                    },
                    {
                        "description": "The schema for the outgoing webhoook, including parameters and URL specification",
                        "key": "api_schema",
                        "valueType": {
                            "type": "id",
                            "value": "WebhookToolApiSchemaConfig-Output"
                        }
                    },
                    {
                        "description": "Configuration for dynamic variables",
                        "key": "dynamic_variables",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "DynamicVariablesConfig"
                            }
                        }
                    }
                ]
            }
        },
        "WebhookUsageType": {
            "name": "WebhookUsageType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "ConvAI Agent Settings"
                    },
                    {
                        "value": "ConvAI Settings"
                    },
                    {
                        "value": "Voice Library Removal Notices"
                    },
                    {
                        "value": "Speech to Text"
                    }
                ]
            }
        },
        "WidgetConfigInputAvatar": {
            "description": "The avatar of the widget",
            "name": "WidgetConfigInputAvatar",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "OrbAvatar",
                        "type": {
                            "type": "id",
                            "value": "OrbAvatar"
                        },
                        "displayName": "OrbAvatar"
                    },
                    {
                        "typeName": "URLAvatar",
                        "type": {
                            "type": "id",
                            "value": "URLAvatar"
                        },
                        "displayName": "URLAvatar"
                    },
                    {
                        "typeName": "ImageAvatar",
                        "type": {
                            "type": "id",
                            "value": "ImageAvatar"
                        },
                        "displayName": "ImageAvatar"
                    }
                ]
            }
        },
        "WidgetConfig-Input": {
            "name": "WidgetConfig-Input",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The variant of the widget",
                        "key": "variant",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "EmbedVariant"
                            }
                        }
                    },
                    {
                        "description": "The placement of the widget on the screen",
                        "key": "placement",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetPlacement"
                            }
                        }
                    },
                    {
                        "description": "Whether the widget is expandable",
                        "key": "expandable",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetExpandable"
                            }
                        }
                    },
                    {
                        "description": "The avatar of the widget",
                        "key": "avatar",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetConfigInputAvatar"
                            }
                        }
                    },
                    {
                        "description": "The feedback mode of the widget",
                        "key": "feedback_mode",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetFeedbackMode"
                            }
                        }
                    },
                    {
                        "description": "The background color of the widget",
                        "key": "bg_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#ffffff"
                                }
                            }
                        }
                    },
                    {
                        "description": "The text color of the widget",
                        "key": "text_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#000000"
                                }
                            }
                        }
                    },
                    {
                        "description": "The button color of the widget",
                        "key": "btn_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#000000"
                                }
                            }
                        }
                    },
                    {
                        "description": "The button text color of the widget",
                        "key": "btn_text_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#ffffff"
                                }
                            }
                        }
                    },
                    {
                        "description": "The border color of the widget",
                        "key": "border_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#e1e1e1"
                                }
                            }
                        }
                    },
                    {
                        "description": "The focus color of the widget",
                        "key": "focus_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#000000"
                                }
                            }
                        }
                    },
                    {
                        "description": "The border radius of the widget",
                        "key": "border_radius",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The button radius of the widget",
                        "key": "btn_radius",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The action text of the widget",
                        "key": "action_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The start call text of the widget",
                        "key": "start_call_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The end call text of the widget",
                        "key": "end_call_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The expand text of the widget",
                        "key": "expand_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text to display when the agent is listening",
                        "key": "listening_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text to display when the agent is speaking",
                        "key": "speaking_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text to display when sharing",
                        "key": "shareable_page_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to show terms and conditions on the shareable page",
                        "key": "shareable_page_show_terms",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "description": "The text to display for terms and conditions",
                        "key": "terms_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The HTML to display for terms and conditions",
                        "key": "terms_html",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The key to display for terms and conditions",
                        "key": "terms_key",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to show the avatar when the widget is collapsed",
                        "key": "show_avatar_when_collapsed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to disable the banner",
                        "key": "disable_banner",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "The override link for the widget",
                        "key": "override_link",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to enable mic muting",
                        "key": "mic_muting_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the widget should show the conversation transcript as it goes on",
                        "key": "transcript_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the user should be able to send text messages",
                        "key": "text_input_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "description": "Text contents of the widget",
                        "key": "text_contents",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetTextContents"
                            }
                        }
                    },
                    {
                        "description": "Styles for the widget",
                        "key": "styles",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetStyles"
                            }
                        }
                    },
                    {
                        "description": "Whether to show the language selector",
                        "key": "language_selector",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the widget can switch to text only mode",
                        "key": "supports_text_only",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "description": "The custom avatar path",
                        "key": "custom_avatar_path",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Language presets for the widget",
                        "key": "language_presets",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "WidgetLanguagePreset"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WidgetConfigOutputAvatar": {
            "description": "The avatar of the widget",
            "name": "WidgetConfigOutputAvatar",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "OrbAvatar",
                        "type": {
                            "type": "id",
                            "value": "OrbAvatar"
                        },
                        "displayName": "OrbAvatar"
                    },
                    {
                        "typeName": "URLAvatar",
                        "type": {
                            "type": "id",
                            "value": "URLAvatar"
                        },
                        "displayName": "URLAvatar"
                    },
                    {
                        "typeName": "ImageAvatar",
                        "type": {
                            "type": "id",
                            "value": "ImageAvatar"
                        },
                        "displayName": "ImageAvatar"
                    }
                ]
            }
        },
        "WidgetConfig-Output": {
            "name": "WidgetConfig-Output",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The variant of the widget",
                        "key": "variant",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "EmbedVariant"
                            }
                        }
                    },
                    {
                        "description": "The placement of the widget on the screen",
                        "key": "placement",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetPlacement"
                            }
                        }
                    },
                    {
                        "description": "Whether the widget is expandable",
                        "key": "expandable",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetExpandable"
                            }
                        }
                    },
                    {
                        "description": "The avatar of the widget",
                        "key": "avatar",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetConfigOutputAvatar"
                            }
                        }
                    },
                    {
                        "description": "The feedback mode of the widget",
                        "key": "feedback_mode",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetFeedbackMode"
                            }
                        }
                    },
                    {
                        "description": "The background color of the widget",
                        "key": "bg_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#ffffff"
                                }
                            }
                        }
                    },
                    {
                        "description": "The text color of the widget",
                        "key": "text_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#000000"
                                }
                            }
                        }
                    },
                    {
                        "description": "The button color of the widget",
                        "key": "btn_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#000000"
                                }
                            }
                        }
                    },
                    {
                        "description": "The button text color of the widget",
                        "key": "btn_text_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#ffffff"
                                }
                            }
                        }
                    },
                    {
                        "description": "The border color of the widget",
                        "key": "border_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#e1e1e1"
                                }
                            }
                        }
                    },
                    {
                        "description": "The focus color of the widget",
                        "key": "focus_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#000000"
                                }
                            }
                        }
                    },
                    {
                        "description": "The border radius of the widget",
                        "key": "border_radius",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The button radius of the widget",
                        "key": "btn_radius",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The action text of the widget",
                        "key": "action_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The start call text of the widget",
                        "key": "start_call_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The end call text of the widget",
                        "key": "end_call_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The expand text of the widget",
                        "key": "expand_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text to display when the agent is listening",
                        "key": "listening_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text to display when the agent is speaking",
                        "key": "speaking_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text to display when sharing",
                        "key": "shareable_page_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to show terms and conditions on the shareable page",
                        "key": "shareable_page_show_terms",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "description": "The text to display for terms and conditions",
                        "key": "terms_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The HTML to display for terms and conditions",
                        "key": "terms_html",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The key to display for terms and conditions",
                        "key": "terms_key",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to show the avatar when the widget is collapsed",
                        "key": "show_avatar_when_collapsed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to disable the banner",
                        "key": "disable_banner",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "The override link for the widget",
                        "key": "override_link",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to enable mic muting",
                        "key": "mic_muting_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the widget should show the conversation transcript as it goes on",
                        "key": "transcript_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the user should be able to send text messages",
                        "key": "text_input_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "description": "Text contents of the widget",
                        "key": "text_contents",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetTextContents"
                            }
                        }
                    },
                    {
                        "description": "Styles for the widget",
                        "key": "styles",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetStyles"
                            }
                        }
                    },
                    {
                        "description": "Whether to show the language selector",
                        "key": "language_selector",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the widget can switch to text only mode",
                        "key": "supports_text_only",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "description": "The custom avatar path",
                        "key": "custom_avatar_path",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Language presets for the widget",
                        "key": "language_presets",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "WidgetLanguagePreset"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WidgetConfigResponseModelAvatar": {
            "description": "The avatar of the widget",
            "name": "WidgetConfigResponseModelAvatar",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "OrbAvatar",
                        "type": {
                            "type": "id",
                            "value": "OrbAvatar"
                        },
                        "displayName": "OrbAvatar"
                    },
                    {
                        "typeName": "URLAvatar",
                        "type": {
                            "type": "id",
                            "value": "URLAvatar"
                        },
                        "displayName": "URLAvatar"
                    },
                    {
                        "typeName": "ImageAvatar",
                        "type": {
                            "type": "id",
                            "value": "ImageAvatar"
                        },
                        "displayName": "ImageAvatar"
                    }
                ]
            }
        },
        "WidgetConfigResponseModel": {
            "name": "WidgetConfigResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The variant of the widget",
                        "key": "variant",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "EmbedVariant"
                            }
                        }
                    },
                    {
                        "description": "The placement of the widget on the screen",
                        "key": "placement",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetPlacement"
                            }
                        }
                    },
                    {
                        "description": "Whether the widget is expandable",
                        "key": "expandable",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetExpandable"
                            }
                        }
                    },
                    {
                        "description": "The avatar of the widget",
                        "key": "avatar",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetConfigResponseModelAvatar"
                            }
                        }
                    },
                    {
                        "description": "The feedback mode of the widget",
                        "key": "feedback_mode",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetFeedbackMode"
                            }
                        }
                    },
                    {
                        "description": "The background color of the widget",
                        "key": "bg_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#ffffff"
                                }
                            }
                        }
                    },
                    {
                        "description": "The text color of the widget",
                        "key": "text_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#000000"
                                }
                            }
                        }
                    },
                    {
                        "description": "The button color of the widget",
                        "key": "btn_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#000000"
                                }
                            }
                        }
                    },
                    {
                        "description": "The button text color of the widget",
                        "key": "btn_text_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#ffffff"
                                }
                            }
                        }
                    },
                    {
                        "description": "The border color of the widget",
                        "key": "border_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#e1e1e1"
                                }
                            }
                        }
                    },
                    {
                        "description": "The focus color of the widget",
                        "key": "focus_color",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string",
                                    "default": "#000000"
                                }
                            }
                        }
                    },
                    {
                        "description": "The border radius of the widget",
                        "key": "border_radius",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The button radius of the widget",
                        "key": "btn_radius",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The action text of the widget",
                        "key": "action_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The start call text of the widget",
                        "key": "start_call_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The end call text of the widget",
                        "key": "end_call_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The expand text of the widget",
                        "key": "expand_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text to display when the agent is listening",
                        "key": "listening_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text to display when the agent is speaking",
                        "key": "speaking_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text to display when sharing",
                        "key": "shareable_page_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to show terms and conditions on the shareable page",
                        "key": "shareable_page_show_terms",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "description": "The text to display for terms and conditions",
                        "key": "terms_text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The HTML to display for terms and conditions",
                        "key": "terms_html",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The key to display for terms and conditions",
                        "key": "terms_key",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to show the avatar when the widget is collapsed",
                        "key": "show_avatar_when_collapsed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to disable the banner",
                        "key": "disable_banner",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "The override link for the widget",
                        "key": "override_link",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether to enable mic muting",
                        "key": "mic_muting_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the widget should show the conversation transcript as it goes on",
                        "key": "transcript_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the user should be able to send text messages",
                        "key": "text_input_enabled",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "description": "Text contents of the widget",
                        "key": "text_contents",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetTextContents"
                            }
                        }
                    },
                    {
                        "description": "Styles for the widget",
                        "key": "styles",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "WidgetStyles"
                            }
                        }
                    },
                    {
                        "key": "language",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "supported_language_overrides",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Language presets for the widget",
                        "key": "language_presets",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "map",
                                "keyType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "valueType": {
                                    "type": "id",
                                    "value": "WidgetLanguagePresetResponse"
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the agent uses text-only mode",
                        "key": "text_only",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether the agent can be switched to text-only mode",
                        "key": "supports_text_only",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "key": "first_message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WidgetExpandable": {
            "name": "WidgetExpandable",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "never"
                    },
                    {
                        "value": "mobile"
                    },
                    {
                        "value": "desktop"
                    },
                    {
                        "value": "always"
                    }
                ]
            }
        },
        "WidgetFeedbackMode": {
            "name": "WidgetFeedbackMode",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "none"
                    },
                    {
                        "value": "during"
                    },
                    {
                        "value": "end"
                    }
                ]
            }
        },
        "WidgetLanguagePreset": {
            "name": "WidgetLanguagePreset",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The text contents for the selected language",
                        "key": "text_contents",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "WidgetTextContents"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WidgetLanguagePresetResponse": {
            "name": "WidgetLanguagePresetResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "first_message",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The text contents for the selected language",
                        "key": "text_contents",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "WidgetTextContents"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WidgetPlacement": {
            "name": "WidgetPlacement",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "top-left"
                    },
                    {
                        "value": "top"
                    },
                    {
                        "value": "top-right"
                    },
                    {
                        "value": "bottom-left"
                    },
                    {
                        "value": "bottom"
                    },
                    {
                        "value": "bottom-right"
                    }
                ]
            }
        },
        "WidgetStyles": {
            "name": "WidgetStyles",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The base background color.",
                        "key": "base",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The color of the base background when hovered.",
                        "key": "base_hover",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The color of the base background when active (clicked).",
                        "key": "base_active",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The color of the border against the base background.",
                        "key": "base_border",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The color of subtle text against the base background.",
                        "key": "base_subtle",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The color of primary text against the base background.",
                        "key": "base_primary",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The color of error text against the base background.",
                        "key": "base_error",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The accent background color.",
                        "key": "accent",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The color of the accent background when hovered.",
                        "key": "accent_hover",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The color of the accent background when active (clicked).",
                        "key": "accent_active",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The color of the border against the accent background.",
                        "key": "accent_border",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The color of subtle text against the accent background.",
                        "key": "accent_subtle",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The color of primary text against the accent background.",
                        "key": "accent_primary",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The padding around the edges of the viewport.",
                        "key": "overlay_padding",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The radius of the buttons.",
                        "key": "button_radius",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The radius of the input fields.",
                        "key": "input_radius",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The radius of the chat bubbles.",
                        "key": "bubble_radius",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The default radius of sheets.",
                        "key": "sheet_radius",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The radius of the sheet in compact mode.",
                        "key": "compact_sheet_radius",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The radius of the dropdown sheet.",
                        "key": "dropdown_sheet_radius",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WidgetTextContents": {
            "name": "WidgetTextContents",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Call to action displayed inside the compact and full variants.",
                        "key": "main_label",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Text and ARIA label for the start call button.",
                        "key": "start_call",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Text and ARIA label for the new call button. Displayed when the caller already finished at least one call in order ot start the next one.",
                        "key": "new_call",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Text and ARIA label for the end call button.",
                        "key": "end_call",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "ARIA label for the mute microphone button.",
                        "key": "mute_microphone",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "ARIA label for the change language dropdown.",
                        "key": "change_language",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "ARIA label for the collapse button.",
                        "key": "collapse",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "ARIA label for the expand button.",
                        "key": "expand",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Text displayed when the user copies a value using the copy button.",
                        "key": "copied",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Text and ARIA label for the accept terms button.",
                        "key": "accept_terms",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Text and ARIA label for the cancel terms button.",
                        "key": "dismiss_terms",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Status displayed when the agent is listening.",
                        "key": "listening_status",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Status displayed when the agent is speaking.",
                        "key": "speaking_status",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Status displayed when the agent is connecting.",
                        "key": "connecting_status",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "ARIA label for the text message input.",
                        "key": "input_label",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Placeholder text for the text message input.",
                        "key": "input_placeholder",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Information message displayed when the user ends the conversation.",
                        "key": "user_ended_conversation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Information message displayed when the agent ends the conversation.",
                        "key": "agent_ended_conversation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Text label used next to the conversation ID.",
                        "key": "conversation_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Text label used when an error occurs.",
                        "key": "error_occurred",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Text and ARIA label used for the copy ID button.",
                        "key": "copy_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WorkspaceBatchCallsResponse": {
            "name": "WorkspaceBatchCallsResponse",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "batch_calls",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "BatchCallResponse"
                            }
                        }
                    },
                    {
                        "description": "The next document, used to paginate through the batch calls",
                        "key": "next_doc",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Whether there are more batch calls to paginate through",
                        "key": "has_more",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WorkspaceGroupByNameResponseModel": {
            "name": "WorkspaceGroupByNameResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The name of the workspace group.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The ID of the workspace group.",
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The emails of the members of the workspace group.",
                        "key": "members_emails",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WorkspaceGroupPermission": {
            "name": "WorkspaceGroupPermission",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "text_to_speech"
                    },
                    {
                        "value": "speech_to_speech"
                    },
                    {
                        "value": "voice_lab"
                    },
                    {
                        "value": "sound_effects"
                    },
                    {
                        "value": "projects"
                    },
                    {
                        "value": "voiceover_studio"
                    },
                    {
                        "value": "dubbing"
                    },
                    {
                        "value": "audio_native"
                    },
                    {
                        "value": "conversational_ai"
                    },
                    {
                        "value": "voice_isolator"
                    },
                    {
                        "value": "ai_speech_classifier"
                    },
                    {
                        "value": "add_voice_from_voice_library"
                    },
                    {
                        "value": "create_instant_voice_clone"
                    },
                    {
                        "value": "create_professional_voice_clone"
                    },
                    {
                        "value": "create_user_api_key"
                    },
                    {
                        "value": "publish_studio_project"
                    }
                ]
            }
        },
        "WorkspaceGroupResponseModel": {
            "name": "WorkspaceGroupResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "members",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "key": "permissions",
                        "valueType": {
                            "type": "nullable",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "WorkspaceGroupPermission"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WorkspaceResourceType": {
            "description": "Resource types that can be shared in the workspace. The name always need to match the collection names",
            "name": "WorkspaceResourceType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "voice"
                    },
                    {
                        "value": "voice_collection"
                    },
                    {
                        "value": "pronunciation_dictionary"
                    },
                    {
                        "value": "dubbing"
                    },
                    {
                        "value": "project"
                    },
                    {
                        "value": "convai_agents"
                    },
                    {
                        "value": "convai_knowledge_base_documents"
                    },
                    {
                        "value": "convai_tools"
                    },
                    {
                        "value": "convai_settings"
                    },
                    {
                        "value": "convai_secrets"
                    },
                    {
                        "value": "music_latent"
                    },
                    {
                        "value": "convai_phone_numbers"
                    },
                    {
                        "value": "convai_mcp_servers"
                    },
                    {
                        "value": "convai_batch_calls"
                    }
                ]
            }
        },
        "WorkspaceWebhookListResponseModel": {
            "name": "WorkspaceWebhookListResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "List of webhooks currently configured for the workspace",
                        "key": "webhooks",
                        "valueType": {
                            "type": "list",
                            "itemType": {
                                "type": "id",
                                "value": "WorkspaceWebhookResponseModel"
                            }
                        }
                    }
                ]
            }
        },
        "WorkspaceWebhookResponseModel": {
            "name": "WorkspaceWebhookResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The display name for this webhook.",
                        "key": "name",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The unique ID for this webhook.",
                        "key": "webhook_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The HTTPS callback URL that is called when this webhook is triggered in the platform.",
                        "key": "webhook_url",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Whether the webhook has been manually disabled by a user.",
                        "key": "is_disabled",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Whether the webhook has been automatically disabled due to repeated consecutive failures over a long period of time.",
                        "key": "is_auto_disabled",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean"
                            }
                        }
                    },
                    {
                        "description": "Original creation time of the webhook.",
                        "key": "created_at_unix",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "description": "The authentication mode used to secure the webhook.",
                        "key": "auth_type",
                        "valueType": {
                            "type": "id",
                            "value": "WebhookAuthMethodType"
                        }
                    },
                    {
                        "description": "The list of products that are currently configured to trigger this webhook.",
                        "key": "usage",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "list",
                                    "itemType": {
                                        "type": "id",
                                        "value": "WorkspaceWebhookUsageResponseModel"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The most recent error code returned from the callback URL.",
                        "key": "most_recent_failure_error_code",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "The most recent time the webhook failed, failures are any non-200 codes returned by the callback URL.",
                        "key": "most_recent_failure_timestamp",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WorkspaceWebhookUsageResponseModel": {
            "name": "WorkspaceWebhookUsageResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "usage_type",
                        "valueType": {
                            "type": "id",
                            "value": "WebhookUsageType"
                        }
                    }
                ]
            }
        },
        "OutputFormat": {
            "name": "OutputFormat",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "description": "Output format, mp3 with 22.05kHz sample rate at 32kbps",
                        "value": "mp3_22050_32"
                    },
                    {
                        "description": "Output format, mp3 with 44.1kHz sample rate at 32kbps",
                        "value": "mp3_44100_32"
                    },
                    {
                        "description": "Output format, mp3 with 44.1kHz sample rate at 64kbps",
                        "value": "mp3_44100_64"
                    },
                    {
                        "description": "Output format, mp3 with 44.1kHz sample rate at 96kbps",
                        "value": "mp3_44100_96"
                    },
                    {
                        "description": "Default output format, mp3 with 44.1kHz sample rate at 128kbps",
                        "value": "mp3_44100_128"
                    },
                    {
                        "description": "Output format, mp3 with 44.1kHz sample rate at 192kbps.\n",
                        "value": "mp3_44100_192"
                    },
                    {
                        "description": "PCM format (S16LE) with 16kHz sample rate.\n",
                        "value": "pcm_16000"
                    },
                    {
                        "description": "PCM format (S16LE) with 22.05kHz sample rate.\n",
                        "value": "pcm_22050"
                    },
                    {
                        "description": "PCM format (S16LE) with 24kHz sample rate.\n",
                        "value": "pcm_24000"
                    },
                    {
                        "description": "PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Independent Publisher tier or above.\n",
                        "value": "pcm_44100"
                    },
                    {
                        "description": "μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
                        "value": "ulaw_8000"
                    }
                ]
            }
        },
        "HistoryItemResponseModel": {
            "name": "HistoryItemResponseModel",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "key": "state",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "unknown"
                            }
                        }
                    },
                    {
                        "key": "voice_category",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "unknown"
                            }
                        }
                    }
                ]
            }
        },
        "Age": {
            "name": "Age",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Gender": {
            "name": "Gender",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Add_sharing_voice_v1_voices_add__public_user_id___voice_id__post": {
            "name": "Body_Add_sharing_voice_v1_voices_add__public_user_id___voice_id__post",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Creates_AudioNative_enabled_project__v1_audio_native_post": {
            "name": "Body_Creates_AudioNative_enabled_project__v1_audio_native_post",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Text_to_speech_v1_text_to_speech__voice_id__stream_post": {
            "name": "Body_Text_to_speech_v1_text_to_speech__voice_id__stream_post",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "GetPhoneNumberResponseModel": {
            "name": "GetPhoneNumberResponseModel",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Edit_voice_settings_v1_voices__voice_id__settings_edit_post": {
            "name": "Body_Edit_voice_settings_v1_voices__voice_id__settings_edit_post",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Get_Chapters_v1_studio_projects__project_id__chapters_get": {
            "name": "Body_Get_Chapters_v1_studio_projects__project_id__chapters_get",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Get_Chapter_v1_studio_projects__project_id__chapters__chapter_id__get": {
            "name": "Body_Get_Chapter_v1_studio_projects__project_id__chapters__chapter_id__get",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Delete_Chapter_v1_studio_projects__project_id__chapters__chapter_id__delete": {
            "name": "Body_Delete_Chapter_v1_studio_projects__project_id__chapters__chapter_id__delete",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Get_Project_Chapters_Snapshots_v1_studio_projects__project_id__chapters__chapter_id__snapshots_get": {
            "name": "Body_Get_Project_Chapters_Snapshots_v1_studio_projects__project_id__chapters__chapter_id__snapshots_get",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Get_Projects_v1_studio_projects_get": {
            "name": "Body_Get_Projects_v1_studio_projects_get",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Get_Project_v1_studio_projects__project_id__get": {
            "name": "Body_Get_Project_v1_studio_projects__project_id__get",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Delete_Project_v1_studio_projects__project_id__delete": {
            "name": "Body_Delete_Project_v1_studio_projects__project_id__delete",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Create_transcript_v1_speech_to_text_post": {
            "name": "Body_Create_transcript_v1_speech_to_text_post",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Remove_member_from_user_group_v1_workspace_groups__group_id__members_remove_post": {
            "name": "Body_Remove_member_from_user_group_v1_workspace_groups__group_id__members_remove_post",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Update_audio_native_project_v1_audio_native__project_id__content_post": {
            "name": "Body_Update_audio_native_project_v1_audio_native__project_id__content_post",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Update_Project_v1_studio_projects__project_id__post": {
            "name": "Body_Update_Project_v1_studio_projects__project_id__post",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "Body_Update_Chapter_v1_studio_projects__project_id__chapters__chapter_id__post": {
            "name": "Body_Update_Chapter_v1_studio_projects__project_id__chapters__chapter_id__post",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "CharacterUsageResponse": {
            "name": "CharacterUsageResponse",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "GetPronunciationDictionariesResponseModel": {
            "name": "GetPronunciationDictionariesResponseModel",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "GetPronunciationDictionaryResponseModel": {
            "name": "GetPronunciationDictionaryResponseModel",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "PromptAgent-Input": {
            "name": "PromptAgent-Input",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "PromptAgent-Output": {
            "name": "PromptAgent-Output",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "PromptAgentApiModel-Input": {
            "name": "PromptAgentApiModel-Input",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "PromptAgentApiModel-Output": {
            "name": "PromptAgentApiModel-Output",
            "shape": {
                "type": "alias",
                "value": {
                    "type": "unknown"
                }
            }
        },
        "V1HistoryGetParametersSourceSchema": {
            "description": "Source of the generated history item",
            "name": "V1HistoryGetParametersSourceSchema",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "TTS"
                    },
                    {
                        "value": "STS"
                    }
                ]
            }
        },
        "V1SoundGenerationPostParametersOutputFormat": {
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "name": "V1SoundGenerationPostParametersOutputFormat",
            "shape": {
                "type": "enum",
                "default": "mp3_44100_128",
                "values": [
                    {
                        "value": "mp3_22050_32"
                    },
                    {
                        "value": "mp3_44100_32"
                    },
                    {
                        "value": "mp3_44100_64"
                    },
                    {
                        "value": "mp3_44100_96"
                    },
                    {
                        "value": "mp3_44100_128"
                    },
                    {
                        "value": "mp3_44100_192"
                    },
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "pcm_48000"
                    },
                    {
                        "value": "ulaw_8000"
                    },
                    {
                        "value": "alaw_8000"
                    },
                    {
                        "value": "opus_48000_32"
                    },
                    {
                        "value": "opus_48000_64"
                    },
                    {
                        "value": "opus_48000_96"
                    },
                    {
                        "value": "opus_48000_128"
                    },
                    {
                        "value": "opus_48000_192"
                    }
                ]
            }
        },
        "V1AudioIsolationPostRequestBodyContentMultipartFormDataSchemaFileFormat": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "name": "V1AudioIsolationPostRequestBodyContentMultipartFormDataSchemaFileFormat",
            "shape": {
                "type": "enum",
                "default": "other",
                "values": [
                    {
                        "value": "pcm_s16le_16"
                    },
                    {
                        "value": "other"
                    }
                ]
            }
        },
        "V1AudioIsolationStreamPostRequestBodyContentMultipartFormDataSchemaFileFormat": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "name": "V1AudioIsolationStreamPostRequestBodyContentMultipartFormDataSchemaFileFormat",
            "shape": {
                "type": "enum",
                "default": "other",
                "values": [
                    {
                        "value": "pcm_s16le_16"
                    },
                    {
                        "value": "other"
                    }
                ]
            }
        },
        "V1TextToSpeechVoiceIdPostParametersOutputFormat": {
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "name": "V1TextToSpeechVoiceIdPostParametersOutputFormat",
            "shape": {
                "type": "enum",
                "default": "mp3_44100_128",
                "values": [
                    {
                        "value": "mp3_22050_32"
                    },
                    {
                        "value": "mp3_44100_32"
                    },
                    {
                        "value": "mp3_44100_64"
                    },
                    {
                        "value": "mp3_44100_96"
                    },
                    {
                        "value": "mp3_44100_128"
                    },
                    {
                        "value": "mp3_44100_192"
                    },
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "pcm_48000"
                    },
                    {
                        "value": "ulaw_8000"
                    },
                    {
                        "value": "alaw_8000"
                    },
                    {
                        "value": "opus_48000_32"
                    },
                    {
                        "value": "opus_48000_64"
                    },
                    {
                        "value": "opus_48000_96"
                    },
                    {
                        "value": "opus_48000_128"
                    },
                    {
                        "value": "opus_48000_192"
                    }
                ]
            }
        },
        "V1TextToSpeechVoiceIdWithTimestampsPostParametersOutputFormat": {
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "name": "V1TextToSpeechVoiceIdWithTimestampsPostParametersOutputFormat",
            "shape": {
                "type": "enum",
                "default": "mp3_44100_128",
                "values": [
                    {
                        "value": "mp3_22050_32"
                    },
                    {
                        "value": "mp3_44100_32"
                    },
                    {
                        "value": "mp3_44100_64"
                    },
                    {
                        "value": "mp3_44100_96"
                    },
                    {
                        "value": "mp3_44100_128"
                    },
                    {
                        "value": "mp3_44100_192"
                    },
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "pcm_48000"
                    },
                    {
                        "value": "ulaw_8000"
                    },
                    {
                        "value": "alaw_8000"
                    },
                    {
                        "value": "opus_48000_32"
                    },
                    {
                        "value": "opus_48000_64"
                    },
                    {
                        "value": "opus_48000_96"
                    },
                    {
                        "value": "opus_48000_128"
                    },
                    {
                        "value": "opus_48000_192"
                    }
                ]
            }
        },
        "V1TextToSpeechVoiceIdStreamPostParametersOutputFormat": {
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "name": "V1TextToSpeechVoiceIdStreamPostParametersOutputFormat",
            "shape": {
                "type": "enum",
                "default": "mp3_44100_128",
                "values": [
                    {
                        "value": "mp3_22050_32"
                    },
                    {
                        "value": "mp3_44100_32"
                    },
                    {
                        "value": "mp3_44100_64"
                    },
                    {
                        "value": "mp3_44100_96"
                    },
                    {
                        "value": "mp3_44100_128"
                    },
                    {
                        "value": "mp3_44100_192"
                    },
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "pcm_48000"
                    },
                    {
                        "value": "ulaw_8000"
                    },
                    {
                        "value": "alaw_8000"
                    },
                    {
                        "value": "opus_48000_32"
                    },
                    {
                        "value": "opus_48000_64"
                    },
                    {
                        "value": "opus_48000_96"
                    },
                    {
                        "value": "opus_48000_128"
                    },
                    {
                        "value": "opus_48000_192"
                    }
                ]
            }
        },
        "V1TextToSpeechVoiceIdStreamWithTimestampsPostParametersOutputFormat": {
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "name": "V1TextToSpeechVoiceIdStreamWithTimestampsPostParametersOutputFormat",
            "shape": {
                "type": "enum",
                "default": "mp3_44100_128",
                "values": [
                    {
                        "value": "mp3_22050_32"
                    },
                    {
                        "value": "mp3_44100_32"
                    },
                    {
                        "value": "mp3_44100_64"
                    },
                    {
                        "value": "mp3_44100_96"
                    },
                    {
                        "value": "mp3_44100_128"
                    },
                    {
                        "value": "mp3_44100_192"
                    },
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "pcm_48000"
                    },
                    {
                        "value": "ulaw_8000"
                    },
                    {
                        "value": "alaw_8000"
                    },
                    {
                        "value": "opus_48000_32"
                    },
                    {
                        "value": "opus_48000_64"
                    },
                    {
                        "value": "opus_48000_96"
                    },
                    {
                        "value": "opus_48000_128"
                    },
                    {
                        "value": "opus_48000_192"
                    }
                ]
            }
        },
        "V1TextToDialoguePostParametersOutputFormat": {
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "name": "V1TextToDialoguePostParametersOutputFormat",
            "shape": {
                "type": "enum",
                "default": "mp3_44100_128",
                "values": [
                    {
                        "value": "mp3_22050_32"
                    },
                    {
                        "value": "mp3_44100_32"
                    },
                    {
                        "value": "mp3_44100_64"
                    },
                    {
                        "value": "mp3_44100_96"
                    },
                    {
                        "value": "mp3_44100_128"
                    },
                    {
                        "value": "mp3_44100_192"
                    },
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "pcm_48000"
                    },
                    {
                        "value": "ulaw_8000"
                    },
                    {
                        "value": "alaw_8000"
                    },
                    {
                        "value": "opus_48000_32"
                    },
                    {
                        "value": "opus_48000_64"
                    },
                    {
                        "value": "opus_48000_96"
                    },
                    {
                        "value": "opus_48000_128"
                    },
                    {
                        "value": "opus_48000_192"
                    }
                ]
            }
        },
        "V1TextToDialogueStreamPostParametersOutputFormat": {
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "name": "V1TextToDialogueStreamPostParametersOutputFormat",
            "shape": {
                "type": "enum",
                "default": "mp3_44100_128",
                "values": [
                    {
                        "value": "mp3_22050_32"
                    },
                    {
                        "value": "mp3_44100_32"
                    },
                    {
                        "value": "mp3_44100_64"
                    },
                    {
                        "value": "mp3_44100_96"
                    },
                    {
                        "value": "mp3_44100_128"
                    },
                    {
                        "value": "mp3_44100_192"
                    },
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "pcm_48000"
                    },
                    {
                        "value": "ulaw_8000"
                    },
                    {
                        "value": "alaw_8000"
                    },
                    {
                        "value": "opus_48000_32"
                    },
                    {
                        "value": "opus_48000_64"
                    },
                    {
                        "value": "opus_48000_96"
                    },
                    {
                        "value": "opus_48000_128"
                    },
                    {
                        "value": "opus_48000_192"
                    }
                ]
            }
        },
        "V1SpeechToSpeechVoiceIdPostParametersOutputFormat": {
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "name": "V1SpeechToSpeechVoiceIdPostParametersOutputFormat",
            "shape": {
                "type": "enum",
                "default": "mp3_44100_128",
                "values": [
                    {
                        "value": "mp3_22050_32"
                    },
                    {
                        "value": "mp3_44100_32"
                    },
                    {
                        "value": "mp3_44100_64"
                    },
                    {
                        "value": "mp3_44100_96"
                    },
                    {
                        "value": "mp3_44100_128"
                    },
                    {
                        "value": "mp3_44100_192"
                    },
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "pcm_48000"
                    },
                    {
                        "value": "ulaw_8000"
                    },
                    {
                        "value": "alaw_8000"
                    },
                    {
                        "value": "opus_48000_32"
                    },
                    {
                        "value": "opus_48000_64"
                    },
                    {
                        "value": "opus_48000_96"
                    },
                    {
                        "value": "opus_48000_128"
                    },
                    {
                        "value": "opus_48000_192"
                    }
                ]
            }
        },
        "V1SpeechToSpeechVoiceIdPostRequestBodyContentMultipartFormDataSchemaFileFormat": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "name": "V1SpeechToSpeechVoiceIdPostRequestBodyContentMultipartFormDataSchemaFileFormat",
            "shape": {
                "type": "enum",
                "default": "other",
                "values": [
                    {
                        "value": "pcm_s16le_16"
                    },
                    {
                        "value": "other"
                    }
                ]
            }
        },
        "V1SpeechToSpeechVoiceIdStreamPostParametersOutputFormat": {
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "name": "V1SpeechToSpeechVoiceIdStreamPostParametersOutputFormat",
            "shape": {
                "type": "enum",
                "default": "mp3_44100_128",
                "values": [
                    {
                        "value": "mp3_22050_32"
                    },
                    {
                        "value": "mp3_44100_32"
                    },
                    {
                        "value": "mp3_44100_64"
                    },
                    {
                        "value": "mp3_44100_96"
                    },
                    {
                        "value": "mp3_44100_128"
                    },
                    {
                        "value": "mp3_44100_192"
                    },
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "pcm_48000"
                    },
                    {
                        "value": "ulaw_8000"
                    },
                    {
                        "value": "alaw_8000"
                    },
                    {
                        "value": "opus_48000_32"
                    },
                    {
                        "value": "opus_48000_64"
                    },
                    {
                        "value": "opus_48000_96"
                    },
                    {
                        "value": "opus_48000_128"
                    },
                    {
                        "value": "opus_48000_192"
                    }
                ]
            }
        },
        "V1SpeechToSpeechVoiceIdStreamPostRequestBodyContentMultipartFormDataSchemaFileFormat": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "name": "V1SpeechToSpeechVoiceIdStreamPostRequestBodyContentMultipartFormDataSchemaFileFormat",
            "shape": {
                "type": "enum",
                "default": "other",
                "values": [
                    {
                        "value": "pcm_s16le_16"
                    },
                    {
                        "value": "other"
                    }
                ]
            }
        },
        "V1TextToVoiceCreatePreviewsPostParametersOutputFormat": {
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "name": "V1TextToVoiceCreatePreviewsPostParametersOutputFormat",
            "shape": {
                "type": "enum",
                "default": "mp3_44100_192",
                "values": [
                    {
                        "value": "mp3_22050_32"
                    },
                    {
                        "value": "mp3_44100_32"
                    },
                    {
                        "value": "mp3_44100_64"
                    },
                    {
                        "value": "mp3_44100_96"
                    },
                    {
                        "value": "mp3_44100_128"
                    },
                    {
                        "value": "mp3_44100_192"
                    },
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "pcm_48000"
                    },
                    {
                        "value": "ulaw_8000"
                    },
                    {
                        "value": "alaw_8000"
                    },
                    {
                        "value": "opus_48000_32"
                    },
                    {
                        "value": "opus_48000_64"
                    },
                    {
                        "value": "opus_48000_96"
                    },
                    {
                        "value": "opus_48000_128"
                    },
                    {
                        "value": "opus_48000_192"
                    }
                ]
            }
        },
        "V1TextToVoiceDesignPostParametersOutputFormat": {
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "name": "V1TextToVoiceDesignPostParametersOutputFormat",
            "shape": {
                "type": "enum",
                "default": "mp3_44100_192",
                "values": [
                    {
                        "value": "mp3_22050_32"
                    },
                    {
                        "value": "mp3_44100_32"
                    },
                    {
                        "value": "mp3_44100_64"
                    },
                    {
                        "value": "mp3_44100_96"
                    },
                    {
                        "value": "mp3_44100_128"
                    },
                    {
                        "value": "mp3_44100_192"
                    },
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "pcm_48000"
                    },
                    {
                        "value": "ulaw_8000"
                    },
                    {
                        "value": "alaw_8000"
                    },
                    {
                        "value": "opus_48000_32"
                    },
                    {
                        "value": "opus_48000_64"
                    },
                    {
                        "value": "opus_48000_96"
                    },
                    {
                        "value": "opus_48000_128"
                    },
                    {
                        "value": "opus_48000_192"
                    }
                ]
            }
        },
        "V1StudioProjectsPostRequestBodyContentMultipartFormDataSchemaTargetAudience": {
            "description": "An optional target audience of the Studio project.",
            "name": "V1StudioProjectsPostRequestBodyContentMultipartFormDataSchemaTargetAudience",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "children"
                    },
                    {
                        "value": "young adult"
                    },
                    {
                        "value": "adult"
                    },
                    {
                        "value": "all ages"
                    }
                ]
            }
        },
        "V1StudioProjectsPostRequestBodyContentMultipartFormDataSchemaFiction": {
            "description": "An optional specification of whether the content of this Studio project is fiction.",
            "name": "V1StudioProjectsPostRequestBodyContentMultipartFormDataSchemaFiction",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "fiction"
                    },
                    {
                        "value": "non-fiction"
                    }
                ]
            }
        },
        "V1StudioProjectsPostRequestBodyContentMultipartFormDataSchemaApplyTextNormalization": {
            "description": "\n    This parameter controls text normalization with four modes: 'auto', 'on', 'apply_english' and 'off'.\n    When set to 'auto', the system will automatically decide whether to apply text normalization\n    (e.g., spelling out numbers). With 'on', text normalization will always be applied, while\n    with 'off', it will be skipped. 'apply_english' is the same as 'on' but will assume that text is in English.\n    ",
            "name": "V1StudioProjectsPostRequestBodyContentMultipartFormDataSchemaApplyTextNormalization",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "auto"
                    },
                    {
                        "value": "on"
                    },
                    {
                        "value": "off"
                    },
                    {
                        "value": "apply_english"
                    }
                ]
            }
        },
        "V1StudioProjectsPostRequestBodyContentMultipartFormDataSchemaSourceType": {
            "description": "The type of Studio project to create.",
            "name": "V1StudioProjectsPostRequestBodyContentMultipartFormDataSchemaSourceType",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "blank"
                    },
                    {
                        "value": "book"
                    },
                    {
                        "value": "article"
                    },
                    {
                        "value": "genfm"
                    }
                ]
            }
        },
        "V1DubbingDubbingIdTranscriptLanguageCodeGetParametersFormatType": {
            "description": "Format to use for the subtitle file, either 'srt' or 'webvtt'",
            "name": "V1DubbingDubbingIdTranscriptLanguageCodeGetParametersFormatType",
            "shape": {
                "type": "enum",
                "default": "srt",
                "values": [
                    {
                        "value": "srt"
                    },
                    {
                        "value": "webvtt"
                    }
                ]
            }
        },
        "V1SharedVoicesGetParametersCategory": {
            "description": "Voice category used for filtering",
            "name": "V1SharedVoicesGetParametersCategory",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "professional"
                    },
                    {
                        "value": "famous"
                    },
                    {
                        "value": "high_quality"
                    }
                ]
            }
        },
        "V1PronunciationDictionariesAddFromFilePostRequestBodyContentMultipartFormDataSchemaWorkspaceAccess": {
            "description": "Should be one of 'admin', 'editor' or 'viewer'. If not provided, defaults to no access.",
            "name": "V1PronunciationDictionariesAddFromFilePostRequestBodyContentMultipartFormDataSchemaWorkspaceAccess",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "admin"
                    },
                    {
                        "value": "editor"
                    },
                    {
                        "value": "viewer"
                    }
                ]
            }
        },
        "V1PronunciationDictionariesGetParametersSortSchema": {
            "description": "Which field to sort by, one of 'created_at_unix' or 'name'.",
            "name": "V1PronunciationDictionariesGetParametersSortSchema",
            "shape": {
                "type": "enum",
                "default": "creation_time_unix",
                "values": [
                    {
                        "value": "creation_time_unix"
                    },
                    {
                        "value": "name"
                    }
                ]
            }
        },
        "V1SpeechToTextPostRequestBodyContentMultipartFormDataSchemaTimestampsGranularity": {
            "description": "The granularity of the timestamps in the transcription. 'word' provides word-level timestamps and 'character' provides character-level timestamps per word.",
            "name": "V1SpeechToTextPostRequestBodyContentMultipartFormDataSchemaTimestampsGranularity",
            "shape": {
                "type": "enum",
                "default": "word",
                "values": [
                    {
                        "value": "none"
                    },
                    {
                        "value": "word"
                    },
                    {
                        "value": "character"
                    }
                ]
            }
        },
        "V1SpeechToTextPostRequestBodyContentMultipartFormDataSchemaFileFormat": {
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "name": "V1SpeechToTextPostRequestBodyContentMultipartFormDataSchemaFileFormat",
            "shape": {
                "type": "enum",
                "default": "other",
                "values": [
                    {
                        "value": "pcm_s16le_16"
                    },
                    {
                        "value": "other"
                    }
                ]
            }
        },
        "conversational_ai_phone_numbers_create_Request": {
            "description": "Create Phone Request Information",
            "name": "conversational_ai_phone_numbers_create_Request",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "CreateTwilioPhoneNumberRequest",
                        "type": {
                            "type": "id",
                            "value": "CreateTwilioPhoneNumberRequest"
                        },
                        "displayName": "CreateTwilioPhoneNumberRequest"
                    },
                    {
                        "typeName": "CreateSIPTrunkPhoneNumberRequest",
                        "type": {
                            "type": "id",
                            "value": "CreateSIPTrunkPhoneNumberRequest"
                        },
                        "displayName": "CreateSIPTrunkPhoneNumberRequest"
                    }
                ]
            }
        },
        "conversational_ai_phone_numbers_get_Response_200": {
            "name": "conversational_ai_phone_numbers_get_Response_200",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "GetPhoneNumberTwilioResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetPhoneNumberTwilioResponseModel"
                        },
                        "displayName": "GetPhoneNumberTwilioResponseModel"
                    },
                    {
                        "typeName": "GetPhoneNumberSIPTrunkResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetPhoneNumberSIPTrunkResponseModel"
                        },
                        "displayName": "GetPhoneNumberSIPTrunkResponseModel"
                    }
                ]
            }
        },
        "conversational_ai_phone_numbers_update_Response_200": {
            "name": "conversational_ai_phone_numbers_update_Response_200",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "GetPhoneNumberTwilioResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetPhoneNumberTwilioResponseModel"
                        },
                        "displayName": "GetPhoneNumberTwilioResponseModel"
                    },
                    {
                        "typeName": "GetPhoneNumberSIPTrunkResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetPhoneNumberSIPTrunkResponseModel"
                        },
                        "displayName": "GetPhoneNumberSIPTrunkResponseModel"
                    }
                ]
            }
        },
        "V1ConvaiPhoneNumbersGetResponsesContentApplicationJsonSchemaItems": {
            "name": "V1ConvaiPhoneNumbersGetResponsesContentApplicationJsonSchemaItems",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "GetPhoneNumberTwilioResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetPhoneNumberTwilioResponseModel"
                        },
                        "displayName": "GetPhoneNumberTwilioResponseModel"
                    },
                    {
                        "typeName": "GetPhoneNumberSIPTrunkResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetPhoneNumberSIPTrunkResponseModel"
                        },
                        "displayName": "GetPhoneNumberSIPTrunkResponseModel"
                    }
                ]
            }
        },
        "conversational_ai_knowledge_base_documents_get_Response_200": {
            "name": "conversational_ai_knowledge_base_documents_get_Response_200",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "GetKnowledgeBaseURLResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetKnowledgeBaseURLResponseModel"
                        },
                        "displayName": "GetKnowledgeBaseURLResponseModel"
                    },
                    {
                        "typeName": "GetKnowledgeBaseFileResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetKnowledgeBaseFileResponseModel"
                        },
                        "displayName": "GetKnowledgeBaseFileResponseModel"
                    },
                    {
                        "typeName": "GetKnowledgeBaseTextResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetKnowledgeBaseTextResponseModel"
                        },
                        "displayName": "GetKnowledgeBaseTextResponseModel"
                    }
                ]
            }
        },
        "conversational_ai_knowledge_base_documents_update_Response_200": {
            "name": "conversational_ai_knowledge_base_documents_update_Response_200",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "GetKnowledgeBaseURLResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetKnowledgeBaseURLResponseModel"
                        },
                        "displayName": "GetKnowledgeBaseURLResponseModel"
                    },
                    {
                        "typeName": "GetKnowledgeBaseFileResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetKnowledgeBaseFileResponseModel"
                        },
                        "displayName": "GetKnowledgeBaseFileResponseModel"
                    },
                    {
                        "typeName": "GetKnowledgeBaseTextResponseModel",
                        "type": {
                            "type": "id",
                            "value": "GetKnowledgeBaseTextResponseModel"
                        },
                        "displayName": "GetKnowledgeBaseTextResponseModel"
                    }
                ]
            }
        },
        "SendText": {
            "name": "SendText",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The text to be sent to the API for audio generation. Should always end with a single space string.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "This is an advanced setting that most users shouldn't need to use. It relates to our generation schedule.\n\nUse this to attempt to immediately trigger the generation of audio, overriding the `chunk_length_schedule`.\nUnlike flush, `try_trigger_generation` will only generate audio if our\nbuffer contains more than a minimum\nthreshold of characters, this is to ensure a higher quality response from our model.\n\nNote that overriding the chunk schedule to generate small amounts of\ntext may result in lower quality audio, therefore, only use this parameter if you\nreally need text to be processed immediately. We generally recommend keeping the default value of\n`false` and adjusting the `chunk_length_schedule` in the `generation_config` instead.\n",
                        "key": "try_trigger_generation",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "The voice settings field can be provided in the first `InitializeConnection` message and then must either be not provided or not changed.",
                        "key": "voice_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "RealtimeVoiceSettings"
                            }
                        }
                    },
                    {
                        "description": "The generator config field can be provided in the first `InitializeConnection` message and then must either be not provided or not changed.",
                        "key": "generator_config",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "GenerationConfig"
                            }
                        }
                    },
                    {
                        "description": "Flush forces the generation of audio. Set this value to true when you have finished sending text, but want to keep the websocket connection open.\n\nThis is useful when you want to ensure that the last chunk of audio is generated even when the length of text sent is smaller than the value set in chunk_length_schedule (e.g. 120 or 50).\n",
                        "key": "flush",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "InitializeConnection": {
            "name": "InitializeConnection",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The initial text that must be sent is a blank space.",
                        "key": "text",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": " "
                            }
                        }
                    },
                    {
                        "key": "voice_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "RealtimeVoiceSettings"
                            }
                        }
                    },
                    {
                        "key": "generation_config",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "GenerationConfig"
                            }
                        }
                    },
                    {
                        "description": "Optional list of pronunciation dictionary locators. If provided, these dictionaries will be used to\nmodify pronunciation of matching text. Must only be provided in the first message.\n\nNote: Pronunciation dictionary matches will only be respected within a provided chunk.\n",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "PronunciationDictionaryLocator"
                                }
                            }
                        }
                    },
                    {
                        "description": "Your ElevenLabs API key. This can only be included in the first message and is not needed if present in the header.\n",
                        "key": "xi-api-key",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Your authorization bearer token. This can only be included in the first message and is not needed if present in the header.\n",
                        "key": "authorization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "CloseConnection": {
            "name": "CloseConnection",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "End the stream with an empty string",
                        "key": "text",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": ""
                            }
                        }
                    }
                ]
            }
        },
        "AudioOutput": {
            "name": "AudioOutput",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A generated partial audio chunk, encoded using the selected output_format, by default this\nis MP3 encoded as a base64 string.\n",
                        "key": "audio",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "normalizedAlignment",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "NormalizedAlignment"
                            }
                        }
                    },
                    {
                        "key": "alignment",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "Alignment"
                            }
                        }
                    }
                ]
            }
        },
        "FinalOutput": {
            "name": "FinalOutput",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Indicates if the generation is complete. If set to `True`, `audio` will be null.\n",
                        "key": "isFinal",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "literal",
                                "value": {
                                    "type": "booleanLiteral",
                                    "value": true
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ClientMultiMessage": {
            "description": "Message sent from the client to the multi-context TTS WebSocket.",
            "name": "ClientMultiMessage",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Text to be synthesized.\nFor the first message establishing a new context (identified by `context_id`, or a default context if `context_id` is absent), this should be a single space character (' ').\nFor subsequent messages to an active context, this is the text to synthesize.\nThis field can be null or an empty string if the message is primarily for control (e.g., using `flush`, `close_context`, or `close_socket`).\n",
                        "key": "text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Voice settings. Can only be provided in the first message for a given context_id (or first message overall if context_id is not used/default).",
                        "key": "voice_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "RealtimeVoiceSettings"
                            }
                        }
                    },
                    {
                        "description": "Generation config. Can only be provided in the first message for a given context_id (or first message overall if context_id is not used/default).",
                        "key": "generation_config",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "GenerationConfig"
                            }
                        }
                    },
                    {
                        "description": "Your ElevenLabs API key. Can only be provided in the first message for a given context_id if not present in the header.",
                        "key": "xi-api-key",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Your authorization bearer token. Can only be provided in the first message for a given context_id if not present in the header.",
                        "key": "authorization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, flushes the audio buffer and returns the remaining audio for the specified `context_id`.",
                        "key": "flush",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Optional list of pronunciation dictionary locators. Can only be provided in the first message for a given context_id.",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "PronunciationDictionaryLocator"
                                }
                            }
                        }
                    },
                    {
                        "description": "An identifier for the text-to-speech context. Allows managing multiple independent audio generation streams over a single WebSocket connection. If omitted, a default context is used.",
                        "key": "contextId",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, closes the specified `contextId`. No further audio will be generated for this context. The `text` field is ignored.",
                        "key": "close_context",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, flushes all contexts and closes the entire WebSocket connection. The `text` and `contextId` fields are ignored.",
                        "key": "close_socket",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "ServerMultiMessage": {
            "description": "Message sent from the server to the client for the multi-context TTS WebSocket.",
            "name": "ServerMultiMessage",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A generated partial audio chunk, encoded using the selected output_format (e.g., MP3 as a base64 string).",
                        "key": "audio",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, indicates that this is the final message for the specified contextId. This is sent when a context is closed. `audio` will be null or empty.",
                        "key": "is_final",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "normalizedAlignment",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "NormalizedAlignment"
                                }
                            }
                        }
                    },
                    {
                        "key": "alignment",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "Alignment"
                                }
                            }
                        }
                    },
                    {
                        "description": "The context identifier to which this message pertains.",
                        "key": "contextId",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "InitializeConnectionMulti": {
            "description": "Payload to initialize a new context in a multi-stream WebSocket connection.",
            "name": "InitializeConnectionMulti",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Must be a single space character to initiate the context.",
                        "key": "text",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": " "
                            }
                        }
                    },
                    {
                        "key": "voice_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "RealtimeVoiceSettings"
                            }
                        }
                    },
                    {
                        "key": "generation_config",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "GenerationConfig"
                            }
                        }
                    },
                    {
                        "description": "Optional pronunciation dictionaries for this context.",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "PronunciationDictionaryLocator"
                                }
                            }
                        }
                    },
                    {
                        "description": "Your ElevenLabs API key (if not in header). For this context's first message only.",
                        "key": "xi_api_key",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Your authorization bearer token (if not in header). For this context's first message only.",
                        "key": "authorization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "A unique identifier for the first context created in the websocket. If not provided, a default context will be used.",
                        "key": "context_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "SendTextMulti": {
            "description": "Payload to send text for synthesis to an existing context.",
            "name": "SendTextMulti",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Text to synthesize. Should end with a single space.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The target context_id for this text.",
                        "key": "context_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, flushes the audio buffer for the specified context. If false, the text will be appended to the buffer to be generated.",
                        "key": "flush",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "FlushContextClient": {
            "description": "Payload to flush the audio buffer for a specific context.",
            "name": "FlushContextClient",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The context_id to flush.",
                        "key": "context_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The text to append to the buffer to be flushed.",
                        "key": "text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, flushes the audio buffer for the specified context. If false, the context will remain open and the text will be appended to the buffer to be generated.",
                        "key": "flush",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean",
                                "default": false
                            }
                        }
                    }
                ]
            }
        },
        "CloseContextClient": {
            "description": "Payload to close a specific TTS context.",
            "name": "CloseContextClient",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The context_id to close.",
                        "key": "context_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Must set the close_context to true, to close the specified context. If false, the context will remain open and the text will be ignored. If set to true, the context will close. If it has already been set to flush it will continue flushing. The same context id can be used again but will not be linked to the previous context with the same name.",
                        "key": "close_context",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean",
                                "default": false
                            }
                        }
                    }
                ]
            }
        },
        "CloseSocketClient": {
            "description": "Payload to signal closing the entire WebSocket connection.",
            "name": "CloseSocketClient",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "If true, closes all contexts and closes the entire WebSocket connection. Any context that was previously set to flush will wait to flush before closing.",
                        "key": "close_socket",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "AudioOutputMulti": {
            "description": "Server payload containing an audio chunk for a specific context.",
            "name": "AudioOutputMulti",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Base64 encoded audio chunk.",
                        "key": "audio",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "normalizedAlignment",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "NormalizedAlignment"
                                }
                            }
                        }
                    },
                    {
                        "key": "alignment",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "Alignment"
                                }
                            }
                        }
                    },
                    {
                        "description": "The contextId for which this audio is.",
                        "key": "contextId",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "FinalOutputMulti": {
            "description": "Server payload indicating the final output for a specific context.",
            "name": "FinalOutputMulti",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Indicates this is the final message for the context.",
                        "key": "isFinal",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "booleanLiteral",
                                "value": true
                            }
                        }
                    },
                    {
                        "description": "The context_id for which this is the final message.",
                        "key": "contextId",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "KeepContextAlive": {
            "description": "Payload to keep a specific context alive by resetting its inactivity timeout. Empty text is ignored but resets the clock.",
            "name": "KeepContextAlive",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "An empty string. This text is ignored by the server but its presence resets the inactivity timeout for the specified context.",
                        "key": "text",
                        "valueType": {
                            "type": "literal",
                            "value": {
                                "type": "stringLiteral",
                                "value": ""
                            }
                        }
                    },
                    {
                        "description": "The identifier of the context to keep alive.",
                        "key": "context_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "InitialiseContext": {
            "description": "Payload to initialize or re-initialize a TTS context with specific settings and initial text for multi-stream connections.",
            "name": "InitialiseContext",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The initial text to synthesize. Should end with a single space.",
                        "key": "text",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "key": "voice_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "RealtimeVoiceSettings"
                            }
                        }
                    },
                    {
                        "key": "generation_config",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "GenerationConfig"
                            }
                        }
                    },
                    {
                        "description": "Optional list of pronunciation dictionary locators to be used for this context.",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "PronunciationDictionaryLocator"
                                }
                            }
                        }
                    },
                    {
                        "description": "Your ElevenLabs API key. Required if not provided in the WebSocket connection's header or query parameters. This applies to the (re)initialization of this specific context.",
                        "key": "xi_api_key",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Your authorization bearer token. Required if not provided in the WebSocket connection's header or query parameters. This applies to the (re)initialization of this specific context.",
                        "key": "authorization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "An identifier for the text-to-speech context. If omitted, a default context ID may be assigned by the server. If provided, this message will create a new context with this ID or re-initialize an existing one with the new settings and text.",
                        "key": "context_id",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "RealtimeVoiceSettings": {
            "name": "RealtimeVoiceSettings",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Defines the stability for voice settings.",
                        "key": "stability",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "default": 0.5
                                }
                            }
                        }
                    },
                    {
                        "description": "Defines the similarity boost for voice settings.",
                        "key": "similarity_boost",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "default": 0.75
                                }
                            }
                        }
                    },
                    {
                        "description": "Defines the style for voice settings. This parameter is available on V2+ models.",
                        "key": "style",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "default": 0
                                }
                            }
                        }
                    },
                    {
                        "description": "Defines the use speaker boost for voice settings. This parameter is available on V2+ models.",
                        "key": "use_speaker_boost",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": true
                                }
                            }
                        }
                    },
                    {
                        "description": "Controls the speed of the generated speech. Values range from 0.7 to 1.2, with 1.0 being the default speed.",
                        "key": "speed",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "double",
                                    "default": 1
                                }
                            }
                        }
                    }
                ]
            }
        },
        "GenerationConfig": {
            "name": "GenerationConfig",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "This is an advanced setting that most users shouldn't need to use. It relates to our\ngeneration schedule.\n\nOur WebSocket service incorporates a buffer system designed to optimize the Time To First Byte (TTFB) while maintaining high-quality streaming.\n\nAll text sent to the WebSocket endpoint is added to this buffer and only when that buffer reaches a certain size is an audio generation attempted. This is because our model provides higher quality audio when the model has longer inputs, and can deduce more context about how the text should be delivered.\n\nThe buffer ensures smooth audio data delivery and is automatically emptied with a final audio generation either when the stream is closed, or upon sending a `flush` command. We have advanced settings for changing the chunk schedule, which can improve latency at the cost of quality by generating audio more frequently with smaller text inputs.\n\nThe `chunk_length_schedule` determines the minimum amount of text that needs to be sent and present in our\nbuffer before audio starts being generated. This is to maximise the amount of context available to\nthe model to improve audio quality, whilst balancing latency of the returned audio chunks.\n\nThe default value for `chunk_length_schedule` is: [120, 160, 250, 290].\n\nThis means that the first chunk of audio will not be generated until you send text that\ntotals at least 120 characters long. The next chunk of audio will only be generated once a\nfurther 160 characters have been sent. The third audio chunk will be generated after the\nnext 250 characters. Then the fourth, and beyond, will be generated in sets of at least 290 characters.\n\nCustomize this array to suit your needs. If you want to generate audio more frequently\nto optimise latency, you can reduce the values in the array. Note that setting the values\ntoo low may result in lower quality audio. Please test and adjust as needed.\n\nEach item should be in the range 50-500.\n",
                        "key": "chunk_length_schedule",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "double"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "NormalizedAlignment": {
            "description": "Alignment information for the generated audio given the input normalized text sequence.\n",
            "name": "NormalizedAlignment",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A list of starting times (in milliseconds) for each character in the normalized text as it\ncorresponds to the audio. For instance, the character 'H' starts at time 0 ms in the audio.\nNote these times are relative to the returned chunk from the model, and not the\nfull audio response.\n",
                        "key": "charStartTimesMs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of durations (in milliseconds) for each character in the normalized text as it\ncorresponds to the audio. For instance, the character 'H' lasts for 3 ms in the audio.\nNote these times are relative to the returned chunk from the model, and not the\nfull audio response.\n",
                        "key": "charsDurationsMs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of characters in the normalized text sequence. For instance, the first character is 'H'.\nNote that this list may contain spaces, punctuation, and other special characters.\nThe length of this list should be the same as the lengths of `charStartTimesMs` and `charsDurationsMs`.\n",
                        "key": "chars",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "Alignment": {
            "description": "Alignment information for the generated audio given the input text sequence.\n",
            "name": "Alignment",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A list of starting times (in milliseconds) for each character in the text as it\ncorresponds to the audio. For instance, the character 'H' starts at time 0 ms in the audio.\nNote these times are relative to the returned chunk from the model, and not the\nfull audio response.\n",
                        "key": "charStartTimesMs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of durations (in milliseconds) for each character in the text as it\ncorresponds to the audio. For instance, the character 'H' lasts for 3 ms in the audio.\nNote these times are relative to the returned chunk from the model, and not the\nfull audio response.\n",
                        "key": "charsDurationsMs",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "A list of characters in the text sequence. For instance, the first character is 'H'.\nNote that this list may contain spaces, punctuation, and other special characters.\nThe length of this list should be the same as the lengths of `charStartTimesMs` and `charsDurationsMs`.\n",
                        "key": "chars",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "PronunciationDictionaryLocator": {
            "description": "Identifies a specific pronunciation dictionary to use",
            "name": "PronunciationDictionaryLocator",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The unique identifier of the pronunciation dictionary",
                        "key": "pronunciation_dictionary_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The version identifier of the pronunciation dictionary",
                        "key": "version_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            }
        },
        "WebsocketTTSClientMessageMulti": {
            "description": "Message sent from the client to the multi-context TTS WebSocket.",
            "name": "WebsocketTTSClientMessageMulti",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "Text to be synthesized.\nFor the first message establishing a new context (identified by `context_id`, or a default context if `context_id` is absent), this should be a single space character (' ').\nFor subsequent messages to an active context, this is the text to synthesize.\nThis field can be null or an empty string if the message is primarily for control (e.g., using `flush`, `close_context`, or `close_socket`).\n",
                        "key": "text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "Voice settings. Can only be provided in the first message for a given context_id (or first message overall if context_id is not used/default).",
                        "key": "voice_settings",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "RealtimeVoiceSettings"
                            }
                        }
                    },
                    {
                        "description": "Generation config. Can only be provided in the first message for a given context_id (or first message overall if context_id is not used/default).",
                        "key": "generation_config",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "id",
                                "value": "GenerationConfig"
                            }
                        }
                    },
                    {
                        "description": "Your ElevenLabs API key. Can only be provided in the first message for a given context_id if not present in the header.",
                        "key": "xi-api-key",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "Your authorization bearer token. Can only be provided in the first message for a given context_id if not present in the header.",
                        "key": "authorization",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, flushes the audio buffer and returns the remaining audio for the specified `context_id`.",
                        "key": "flush",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "Optional list of pronunciation dictionary locators. Can only be provided in the first message for a given context_id.",
                        "key": "pronunciation_dictionary_locators",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "PronunciationDictionaryLocator"
                                }
                            }
                        }
                    },
                    {
                        "description": "An identifier for the text-to-speech context. Allows managing multiple independent audio generation streams over a single WebSocket connection. If omitted, a default context is used.",
                        "key": "contextId",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, closes the specified `contextId`. No further audio will be generated for this context. The `text` field is ignored.",
                        "key": "close_context",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, flushes all contexts and closes the entire WebSocket connection. The `text` and `contextId` fields are ignored.",
                        "key": "close_socket",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "WebsocketTTSServerMessageMulti": {
            "description": "Message sent from the server to the client for the multi-context TTS WebSocket.",
            "name": "WebsocketTTSServerMessageMulti",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "A generated partial audio chunk, encoded using the selected output_format (e.g., MP3 as a base64 string).",
                        "key": "audio",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, indicates that this is the final message for the specified contextId. This is sent when a context is closed. `audio` will be null or empty.",
                        "key": "is_final",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "key": "normalizedAlignment",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "NormalizedAlignment"
                                }
                            }
                        }
                    },
                    {
                        "key": "alignment",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "id",
                                    "value": "Alignment"
                                }
                            }
                        }
                    },
                    {
                        "description": "The context identifier to which this message pertains.",
                        "key": "contextId",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "nullable",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "FlushContext": {
            "description": "Payload to flush the audio buffer for a specific context.",
            "name": "FlushContext",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The context_id to flush.",
                        "key": "context_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "The text to append to the buffer to be flushed.",
                        "key": "text",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "description": "If true, flushes the audio buffer for the specified context. If false, the context will remain open and the text will be appended to the buffer to be generated.",
                        "key": "flush",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean",
                                "default": false
                            }
                        }
                    }
                ]
            }
        },
        "CloseContext": {
            "description": "Payload to close a specific TTS context.",
            "name": "CloseContext",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "The context_id to close.",
                        "key": "context_id",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "description": "Must set the close_context to true, to close the specified context. If false, the context will remain open and the text will be ignored. If set to true, the context will close. If it has already been set to flush it will continue flushing. The same context id can be used again but will not be linked to the previous context with the same name.",
                        "key": "close_context",
                        "valueType": {
                            "type": "primitive",
                            "value": {
                                "type": "boolean",
                                "default": false
                            }
                        }
                    }
                ]
            }
        },
        "CloseSocket": {
            "description": "Payload to signal closing the entire WebSocket connection.",
            "name": "CloseSocket",
            "shape": {
                "type": "object",
                "extends": [],
                "properties": [
                    {
                        "description": "If true, closes all contexts and closes the entire WebSocket connection. Any context that was previously set to flush will wait to flush before closing.",
                        "key": "close_socket",
                        "valueType": {
                            "type": "optional",
                            "itemType": {
                                "type": "primitive",
                                "value": {
                                    "type": "boolean",
                                    "default": false
                                }
                            }
                        }
                    }
                ]
            }
        },
        "TextToSpeechApplyTextNormalizationEnum": {
            "description": "This parameter controls text normalization with three modes - 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models. Defaults to 'auto'.",
            "name": "TextToSpeechApplyTextNormalizationEnum",
            "shape": {
                "type": "enum",
                "default": "auto",
                "values": [
                    {
                        "value": "auto"
                    },
                    {
                        "value": "on"
                    },
                    {
                        "value": "off"
                    }
                ]
            }
        },
        "TextToSpeechOutputFormatEnum": {
            "description": "The output audio format",
            "name": "TextToSpeechOutputFormatEnum",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "mp3_22050_32"
                    },
                    {
                        "value": "mp3_44100_32"
                    },
                    {
                        "value": "mp3_44100_64"
                    },
                    {
                        "value": "mp3_44100_96"
                    },
                    {
                        "value": "mp3_44100_128"
                    },
                    {
                        "value": "mp3_44100_192"
                    },
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "ulaw_8000"
                    },
                    {
                        "value": "alaw_8000"
                    },
                    {
                        "value": "opus_48000_32"
                    },
                    {
                        "value": "opus_48000_64"
                    },
                    {
                        "value": "opus_48000_96"
                    },
                    {
                        "value": "opus_48000_128"
                    },
                    {
                        "value": "opus_48000_192"
                    }
                ]
            }
        },
        "output_format": {
            "description": "The output audio format",
            "name": "output_format",
            "shape": {
                "type": "enum",
                "values": [
                    {
                        "value": "mp3_22050_32"
                    },
                    {
                        "value": "mp3_44100_32"
                    },
                    {
                        "value": "mp3_44100_64"
                    },
                    {
                        "value": "mp3_44100_96"
                    },
                    {
                        "value": "mp3_44100_128"
                    },
                    {
                        "value": "mp3_44100_192"
                    },
                    {
                        "value": "pcm_8000"
                    },
                    {
                        "value": "pcm_16000"
                    },
                    {
                        "value": "pcm_22050"
                    },
                    {
                        "value": "pcm_24000"
                    },
                    {
                        "value": "pcm_44100"
                    },
                    {
                        "value": "ulaw_8000"
                    },
                    {
                        "value": "alaw_8000"
                    },
                    {
                        "value": "opus_48000_32"
                    },
                    {
                        "value": "opus_48000_64"
                    },
                    {
                        "value": "opus_48000_96"
                    },
                    {
                        "value": "opus_48000_128"
                    },
                    {
                        "value": "opus_48000_192"
                    }
                ]
            }
        },
        "apply_text_normalization": {
            "description": "This parameter controls text normalization with three modes - 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models. Defaults to 'auto'.",
            "name": "apply_text_normalization",
            "shape": {
                "type": "enum",
                "default": "auto",
                "values": [
                    {
                        "value": "auto"
                    },
                    {
                        "value": "on"
                    },
                    {
                        "value": "off"
                    }
                ]
            }
        },
        "V1TextToSpeechVoiceIdStreamInputSubscribe": {
            "name": "V1TextToSpeechVoiceIdStreamInputSubscribe",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "AudioOutput",
                        "type": {
                            "type": "id",
                            "value": "AudioOutput"
                        },
                        "displayName": "audioOutput"
                    },
                    {
                        "typeName": "FinalOutput",
                        "type": {
                            "type": "id",
                            "value": "FinalOutput"
                        },
                        "displayName": "finalOutput"
                    }
                ]
            }
        },
        "V1TextToSpeechVoiceIdStreamInputPublish": {
            "name": "V1TextToSpeechVoiceIdStreamInputPublish",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "InitializeConnection",
                        "type": {
                            "type": "id",
                            "value": "InitializeConnection"
                        },
                        "displayName": "initializeConnection"
                    },
                    {
                        "typeName": "SendText",
                        "type": {
                            "type": "id",
                            "value": "SendText"
                        },
                        "displayName": "sendText"
                    },
                    {
                        "typeName": "CloseConnection",
                        "type": {
                            "type": "id",
                            "value": "CloseConnection"
                        },
                        "displayName": "closeConnection"
                    }
                ]
            }
        },
        "V1TextToSpeechVoiceIdMultiStreamInputSubscribe": {
            "name": "V1TextToSpeechVoiceIdMultiStreamInputSubscribe",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "AudioOutputMulti",
                        "type": {
                            "type": "id",
                            "value": "AudioOutputMulti"
                        },
                        "displayName": "audioOutputMulti"
                    },
                    {
                        "typeName": "FinalOutputMulti",
                        "type": {
                            "type": "id",
                            "value": "FinalOutputMulti"
                        },
                        "displayName": "finalOutputMulti"
                    }
                ]
            }
        },
        "V1TextToSpeechVoiceIdMultiStreamInputPublish": {
            "name": "V1TextToSpeechVoiceIdMultiStreamInputPublish",
            "shape": {
                "type": "undiscriminatedUnion",
                "variants": [
                    {
                        "typeName": "InitializeConnectionMulti",
                        "type": {
                            "type": "id",
                            "value": "InitializeConnectionMulti"
                        },
                        "displayName": "initializeConnectionMulti"
                    },
                    {
                        "typeName": "InitialiseContext",
                        "type": {
                            "type": "id",
                            "value": "InitialiseContext"
                        },
                        "displayName": "initialiseContext"
                    },
                    {
                        "typeName": "SendTextMulti",
                        "type": {
                            "type": "id",
                            "value": "SendTextMulti"
                        },
                        "displayName": "sendTextMulti"
                    },
                    {
                        "typeName": "FlushContextClient",
                        "type": {
                            "type": "id",
                            "value": "FlushContextClient"
                        },
                        "displayName": "flushContextClient"
                    },
                    {
                        "typeName": "CloseContextClient",
                        "type": {
                            "type": "id",
                            "value": "CloseContextClient"
                        },
                        "displayName": "closeContextClient"
                    },
                    {
                        "typeName": "CloseSocketClient",
                        "type": {
                            "type": "id",
                            "value": "CloseSocketClient"
                        },
                        "displayName": "closeSocketClient"
                    },
                    {
                        "typeName": "KeepContextAlive",
                        "type": {
                            "type": "id",
                            "value": "KeepContextAlive"
                        },
                        "displayName": "keepContextAlive"
                    }
                ]
            }
        }
    },
    "subpackages": {
        "subpackage_history": {
            "subpackageId": "subpackage_history",
            "name": "history",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Returns a list of your generated audio.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_history.list",
                    "name": "Get generated items",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/history"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "How many history items to return at maximum. Can not exceed 1000, defaults to 100.",
                            "key": "page_size",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "default": 100
                                    }
                                }
                            }
                        },
                        {
                            "description": "After which ID to start fetching, use this parameter to paginate across a large collection of history items. In case this parameter is not provided history items will be fetched starting from the most recently created one ordered descending by their creation date.",
                            "key": "start_after_history_item_id",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "ID of the voice to be filtered for. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.",
                            "key": "voice_id",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Search term used for filtering history items. If provided, source becomes required.",
                            "key": "search",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Source of the generated history item",
                            "key": "source",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "id",
                                        "value": "V1HistoryGetParametersSourceSchema"
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetSpeechHistoryResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/history",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "history": [
                                    {
                                        "history_item_id": "ja9xsmfGhxYcymxGcOGB",
                                        "request_id": "BF0BZg4IwLGBlaVjv9Im",
                                        "voice_id": "21m00Tcm4TlvDq8ikWAM",
                                        "model_id": "eleven_multilingual_v2",
                                        "voice_name": "Rachel",
                                        "voice_category": "premade",
                                        "text": "Hello, world!",
                                        "date_unix": 1714650306,
                                        "character_count_change_from": 17189,
                                        "character_count_change_to": 17231,
                                        "content_type": "audio/mpeg",
                                        "state": null,
                                        "settings": {
                                            "similarity_boost": 0.5,
                                            "stability": 0.71,
                                            "style": 0,
                                            "use_speaker_boost": true
                                        },
                                        "source": "TTS"
                                    }
                                ],
                                "last_history_item_id": "ja9xsmfGhxYcymxGcOGB",
                                "has_more": true
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "history": [
                                        {
                                            "history_item_id": "ja9xsmfGhxYcymxGcOGB",
                                            "request_id": "BF0BZg4IwLGBlaVjv9Im",
                                            "voice_id": "21m00Tcm4TlvDq8ikWAM",
                                            "model_id": "eleven_multilingual_v2",
                                            "voice_name": "Rachel",
                                            "voice_category": "premade",
                                            "text": "Hello, world!",
                                            "date_unix": 1714650306,
                                            "character_count_change_from": 17189,
                                            "character_count_change_to": 17231,
                                            "content_type": "audio/mpeg",
                                            "state": null,
                                            "settings": {
                                                "similarity_boost": 0.5,
                                                "stability": 0.71,
                                                "style": 0,
                                                "use_speaker_boost": true
                                            },
                                            "source": "TTS"
                                        }
                                    ],
                                    "last_history_item_id": "ja9xsmfGhxYcymxGcOGB",
                                    "has_more": true
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Retrieves a history item.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_history.get",
                    "name": "Get history item",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the history item to be used. You can use the [Get generated items](/docs/api-reference/history/get-all) endpoint to retrieve a list of history items.",
                                "key": "history_item_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/history/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "history_item_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "SpeechHistoryItemResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/history/history_item_id",
                            "pathParameters": {
                                "history_item_id": "history_item_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "history_item_id": "ja9xsmfGhxYcymxGcOGB",
                                "request_id": "BF0BZg4IwLGBlaVjv9Im",
                                "voice_id": "21m00Tcm4TlvDq8ikWAM",
                                "model_id": "eleven_multilingual_v2",
                                "voice_name": "Rachel",
                                "voice_category": "premade",
                                "text": "Hello, world!",
                                "date_unix": 1714650306,
                                "character_count_change_from": 17189,
                                "character_count_change_to": 17231,
                                "content_type": "audio/mpeg",
                                "state": null,
                                "settings": {
                                    "similarity_boost": 0.5,
                                    "stability": 0.71,
                                    "style": 0,
                                    "use_speaker_boost": true
                                },
                                "source": "TTS"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "history_item_id": "ja9xsmfGhxYcymxGcOGB",
                                    "request_id": "BF0BZg4IwLGBlaVjv9Im",
                                    "voice_id": "21m00Tcm4TlvDq8ikWAM",
                                    "model_id": "eleven_multilingual_v2",
                                    "voice_name": "Rachel",
                                    "voice_category": "premade",
                                    "text": "Hello, world!",
                                    "date_unix": 1714650306,
                                    "character_count_change_from": 17189,
                                    "character_count_change_to": 17231,
                                    "content_type": "audio/mpeg",
                                    "state": null,
                                    "settings": {
                                        "similarity_boost": 0.5,
                                        "stability": 0.71,
                                        "style": 0,
                                        "use_speaker_boost": true
                                    },
                                    "source": "TTS"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Delete a history item by its ID",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_history.delete",
                    "name": "Delete history item",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the history item to be used. You can use the [Get generated items](/docs/api-reference/history/get-all) endpoint to retrieve a list of history items.",
                                "key": "history_item_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/history/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "history_item_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DeleteHistoryItemResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/history/history_item_id",
                            "pathParameters": {
                                "history_item_id": "history_item_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Returns the audio of an history item.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get_audio",
                    "originalEndpointId": "endpoint_history.get_audio",
                    "name": "Get audio from history item",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the history item to be used. You can use the [Get generated items](/docs/api-reference/history/get-all) endpoint to retrieve a list of history items.",
                                "key": "history_item_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/history/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "history_item_id"
                            },
                            {
                                "type": "literal",
                                "value": "/audio"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "fileDownload"
                        },
                        "statusCode": 200,
                        "description": "The audio file of the history item."
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/history/history_item_id/audio",
                            "pathParameters": {
                                "history_item_id": "history_item_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Download one or more history items. If one history item ID is provided, we will return a single audio file. If more than one history item IDs are provided, we will provide the history items packed into a .zip file.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "download",
                    "originalEndpointId": "endpoint_history.download",
                    "name": "Download history items",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/history/download"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Download_history_items_v1_history_download_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "fileDownload"
                        },
                        "statusCode": 200,
                        "description": "The requested audio file, or a zip file containing multiple audio files when multiple history items are requested."
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/history/download",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "history_item_ids": [
                                    "foo"
                                ]
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "history_item_ids": [
                                        "foo"
                                    ]
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_textToSoundEffects": {
            "subpackageId": "subpackage_textToSoundEffects",
            "name": "textToSoundEffects",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Turn text into sound effects for your videos, voice-overs or video games using the most advanced sound effects model in the world.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "convert",
                    "originalEndpointId": "endpoint_textToSoundEffects.convert",
                    "name": "Create sound effect",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/sound-generation"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
                            "key": "output_format",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1SoundGenerationPostParametersOutputFormat"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Sound_Generation_v1_sound_generation_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "fileDownload"
                        },
                        "statusCode": 200,
                        "description": "The generated sound effect as an MP3 file"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/sound-generation",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {},
                            "requestBody": {
                                "text": "Spacious braam suitable for high-impact movie trailer moments"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "text": "Spacious braam suitable for high-impact movie trailer moments"
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_audioIsolation": {
            "subpackageId": "subpackage_audioIsolation",
            "name": "audioIsolation",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Removes background noise from audio.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "convert",
                    "originalEndpointId": "endpoint_audioIsolation.convert",
                    "name": "Audio isolation",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/audio-isolation"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "audio_isolation_convert_Request",
                                "properties": [
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "audio",
                                            "isOptional": false,
                                            "contentType": "multipart/form-data",
                                            "description": "The audio file from which vocals/speech will be isolated from."
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "file_format",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "id",
                                                    "value": "V1AudioIsolationPostRequestBodyContentMultipartFormDataSchemaFileFormat"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/audio-isolation",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "audio": "foo"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "audio": {
                                        "type": "filename",
                                        "value": "foo"
                                    },
                                    "file_format": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Removes background noise from audio.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "stream",
                    "originalEndpointId": "endpoint_audioIsolation.stream",
                    "name": "Audio isolation stream",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/audio-isolation/stream"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "audio_isolation_stream_Request",
                                "properties": [
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "audio",
                                            "isOptional": false,
                                            "contentType": "multipart/form-data",
                                            "description": "The audio file from which vocals/speech will be isolated from."
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "file_format",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "id",
                                                    "value": "V1AudioIsolationStreamPostRequestBodyContentMultipartFormDataSchemaFileFormat"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/audio-isolation/stream",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "audio": "foo"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "audio": {
                                        "type": "filename",
                                        "value": "foo"
                                    },
                                    "file_format": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_samples": {
            "subpackageId": "subpackage_samples",
            "displayName": "Samples",
            "name": "samples",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Removes a sample by its ID.",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_samples.delete",
                    "name": "Delete voice sample",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "ID of the sample to be used. You can use the [Get voices](/docs/api-reference/voices/get) endpoint list all the available samples for a voice.",
                                "key": "sample_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/samples/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "sample_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DeleteSampleResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/voice_id/samples/sample_id",
                            "pathParameters": {
                                "voice_id": "voice_id",
                                "sample_id": "sample_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_voices": {
            "subpackageId": "subpackage_voices",
            "displayName": "voices",
            "name": "voices",
            "endpoints": [
                {
                    "availability": "Deprecated",
                    "auth": false,
                    "description": "Returns a list of all available voices for a user.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get_all",
                    "originalEndpointId": "endpoint_voices.get_all",
                    "name": "List voices",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "If set to true, legacy premade voices will be included in responses from /v1/voices",
                            "key": "show_legacy",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "boolean",
                                            "default": false
                                        }
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetVoicesResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voices": [
                                    {
                                        "voice_id": "21m00Tcm4TlvDq8ikWAM",
                                        "name": "Rachel",
                                        "category": "professional",
                                        "fine_tuning": {
                                            "is_allowed_to_fine_tune": true,
                                            "state": {
                                                "eleven_multilingual_v2": "fine_tuned"
                                            },
                                            "verification_failures": [],
                                            "verification_attempts_count": 2,
                                            "manual_verification_requested": false
                                        },
                                        "labels": {
                                            "accent": "American",
                                            "age": "middle-aged",
                                            "description": "expressive",
                                            "gender": "female",
                                            "use_case": "social media"
                                        },
                                        "description": "A warm, expressive voice with a touch of humor.",
                                        "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
                                        "available_for_tiers": [
                                            "creator",
                                            "enterprise"
                                        ],
                                        "settings": {
                                            "stability": 1,
                                            "use_speaker_boost": true,
                                            "similarity_boost": 1,
                                            "style": 0,
                                            "speed": 1
                                        },
                                        "sharing": {
                                            "status": "enabled",
                                            "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                            "date_unix": 1714204800,
                                            "whitelisted_emails": [
                                                "example@example.com"
                                            ],
                                            "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                            "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                            "financial_rewards_enabled": true,
                                            "free_users_allowed": true,
                                            "live_moderation_enabled": true,
                                            "rate": 0.05,
                                            "notice_period": 30,
                                            "disable_at_unix": 1714204800,
                                            "voice_mixing_allowed": false,
                                            "featured": true,
                                            "category": "professional",
                                            "reader_app_enabled": true,
                                            "liked_by_count": 100,
                                            "cloned_by_count": 50,
                                            "name": "Rachel",
                                            "description": "A female voice with a soft and friendly tone.",
                                            "labels": {
                                                "accent": "American",
                                                "gender": "female"
                                            },
                                            "review_status": "allowed",
                                            "enabled_in_library": true,
                                            "moderation_check": {
                                                "date_checked_unix": 1714204800,
                                                "name_value": "Rachel",
                                                "name_check": true,
                                                "description_value": "A female voice with a soft and friendly tone.",
                                                "description_check": true,
                                                "sample_ids": [
                                                    "sample1",
                                                    "sample2"
                                                ],
                                                "sample_checks": [
                                                    0.95,
                                                    0.98
                                                ],
                                                "captcha_ids": [
                                                    "captcha1",
                                                    "captcha2"
                                                ],
                                                "captcha_checks": [
                                                    0.95,
                                                    0.98
                                                ]
                                            },
                                            "reader_restricted_on": [
                                                {
                                                    "resource_type": "read",
                                                    "resource_id": "FCwhRBWXzGAHq8TQ4Fs18"
                                                }
                                            ]
                                        },
                                        "high_quality_base_model_ids": [
                                            "eleven_v2_flash",
                                            "eleven_flash_v2",
                                            "eleven_turbo_v2_5",
                                            "eleven_multilingual_v2",
                                            "eleven_v2_5_flash",
                                            "eleven_flash_v2_5",
                                            "eleven_turbo_v2"
                                        ],
                                        "verified_languages": [
                                            {
                                                "language": "en",
                                                "model_id": "eleven_turbo_v2_5",
                                                "accent": "American"
                                            }
                                        ],
                                        "voice_verification": {
                                            "requires_verification": false,
                                            "is_verified": true,
                                            "verification_failures": [],
                                            "verification_attempts_count": 0,
                                            "language": "en",
                                            "verification_attempts": [
                                                {
                                                    "text": "Hello, how are you?",
                                                    "date_unix": 1714204800,
                                                    "accepted": true,
                                                    "similarity": 0.95,
                                                    "levenshtein_distance": 2,
                                                    "recording": {
                                                        "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                                                        "mime_type": "audio/mpeg",
                                                        "size_bytes": 1000000,
                                                        "upload_date_unix": 1714204800,
                                                        "transcription": "Hello, how are you?"
                                                    }
                                                }
                                            ]
                                        },
                                        "is_owner": false,
                                        "is_legacy": false,
                                        "is_mixed": false
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voices": [
                                        {
                                            "voice_id": "21m00Tcm4TlvDq8ikWAM",
                                            "name": "Rachel",
                                            "category": "professional",
                                            "fine_tuning": {
                                                "is_allowed_to_fine_tune": true,
                                                "state": {
                                                    "eleven_multilingual_v2": "fine_tuned"
                                                },
                                                "verification_failures": [],
                                                "verification_attempts_count": 2,
                                                "manual_verification_requested": false
                                            },
                                            "labels": {
                                                "accent": "American",
                                                "age": "middle-aged",
                                                "description": "expressive",
                                                "gender": "female",
                                                "use_case": "social media"
                                            },
                                            "description": "A warm, expressive voice with a touch of humor.",
                                            "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
                                            "available_for_tiers": [
                                                "creator",
                                                "enterprise"
                                            ],
                                            "settings": {
                                                "stability": 1,
                                                "use_speaker_boost": true,
                                                "similarity_boost": 1,
                                                "style": 0,
                                                "speed": 1
                                            },
                                            "sharing": {
                                                "status": "enabled",
                                                "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                                "date_unix": 1714204800,
                                                "whitelisted_emails": [
                                                    "example@example.com"
                                                ],
                                                "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                                "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                                "financial_rewards_enabled": true,
                                                "free_users_allowed": true,
                                                "live_moderation_enabled": true,
                                                "rate": 0.05,
                                                "notice_period": 30,
                                                "disable_at_unix": 1714204800,
                                                "voice_mixing_allowed": false,
                                                "featured": true,
                                                "category": "professional",
                                                "reader_app_enabled": true,
                                                "liked_by_count": 100,
                                                "cloned_by_count": 50,
                                                "name": "Rachel",
                                                "description": "A female voice with a soft and friendly tone.",
                                                "labels": {
                                                    "accent": "American",
                                                    "gender": "female"
                                                },
                                                "review_status": "allowed",
                                                "enabled_in_library": true,
                                                "moderation_check": {
                                                    "date_checked_unix": 1714204800,
                                                    "name_value": "Rachel",
                                                    "name_check": true,
                                                    "description_value": "A female voice with a soft and friendly tone.",
                                                    "description_check": true,
                                                    "sample_ids": [
                                                        "sample1",
                                                        "sample2"
                                                    ],
                                                    "sample_checks": [
                                                        0.95,
                                                        0.98
                                                    ],
                                                    "captcha_ids": [
                                                        "captcha1",
                                                        "captcha2"
                                                    ],
                                                    "captcha_checks": [
                                                        0.95,
                                                        0.98
                                                    ]
                                                },
                                                "reader_restricted_on": [
                                                    {
                                                        "resource_type": "read",
                                                        "resource_id": "FCwhRBWXzGAHq8TQ4Fs18"
                                                    }
                                                ]
                                            },
                                            "high_quality_base_model_ids": [
                                                "eleven_v2_flash",
                                                "eleven_flash_v2",
                                                "eleven_turbo_v2_5",
                                                "eleven_multilingual_v2",
                                                "eleven_v2_5_flash",
                                                "eleven_flash_v2_5",
                                                "eleven_turbo_v2"
                                            ],
                                            "verified_languages": [
                                                {
                                                    "language": "en",
                                                    "model_id": "eleven_turbo_v2_5",
                                                    "accent": "American"
                                                }
                                            ],
                                            "voice_verification": {
                                                "requires_verification": false,
                                                "is_verified": true,
                                                "verification_failures": [],
                                                "verification_attempts_count": 0,
                                                "language": "en",
                                                "verification_attempts": [
                                                    {
                                                        "text": "Hello, how are you?",
                                                        "date_unix": 1714204800,
                                                        "accepted": true,
                                                        "similarity": 0.95,
                                                        "levenshtein_distance": 2,
                                                        "recording": {
                                                            "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                                                            "mime_type": "audio/mpeg",
                                                            "size_bytes": 1000000,
                                                            "upload_date_unix": 1714204800,
                                                            "transcription": "Hello, how are you?"
                                                        }
                                                    }
                                                ]
                                            },
                                            "is_owner": false,
                                            "is_legacy": false,
                                            "is_mixed": false
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Gets a list of all available voices for a user with search, filtering and pagination.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "search",
                    "originalEndpointId": "endpoint_voices.search",
                    "name": "List voices",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v2/voices"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "The next page token to use for pagination. Returned from the previous request.",
                            "key": "next_page_token",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "How many voices to return at maximum. Can not exceed 100, defaults to 10. Page 0 may include more voices due to default voices being included.",
                            "key": "page_size",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "default": 10
                                    }
                                }
                            }
                        },
                        {
                            "description": "Search term to filter voices by. Searches in name, description, labels, category.",
                            "key": "search",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Which field to sort by, one of 'created_at_unix' or 'name'. 'created_at_unix' may not be available for older voices.",
                            "key": "sort",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Which direction to sort the voices in. 'asc' or 'desc'.",
                            "key": "sort_direction",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Type of the voice to filter by. One of 'personal', 'community', 'default', 'workspace', 'non-default'. 'non-default' is equal to all but 'default'.",
                            "key": "voice_type",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Category of the voice to filter by. One of 'premade', 'cloned', 'generated', 'professional'",
                            "key": "category",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "State of the voice's fine tuning to filter by. Applicable only to professional voices clones. One of 'draft', 'not_verified', 'not_started', 'queued', 'fine_tuning', 'fine_tuned', 'failed', 'delayed'",
                            "key": "fine_tuning_state",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Collection ID to filter voices by.",
                            "key": "collection_id",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Whether to include the total count of voices found in the response. Incurs a performance cost.",
                            "key": "include_total_count",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetVoicesV2ResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v2/voices",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voices": [
                                    {
                                        "voice_id": "foo",
                                        "name": "foo",
                                        "samples": [
                                            {
                                                "sample_id": "foo",
                                                "file_name": "foo",
                                                "mime_type": "foo",
                                                "size_bytes": 42,
                                                "hash": "foo",
                                                "duration_secs": 42,
                                                "remove_background_noise": true,
                                                "has_isolated_audio": true,
                                                "has_isolated_audio_preview": true,
                                                "speaker_separation": {
                                                    "voice_id": "foo",
                                                    "sample_id": "foo",
                                                    "status": "not_started",
                                                    "speakers": {},
                                                    "selected_speaker_ids": [
                                                        "foo"
                                                    ]
                                                },
                                                "trim_start": 42,
                                                "trim_end": 42
                                            }
                                        ],
                                        "category": "generated",
                                        "fine_tuning": {
                                            "is_allowed_to_fine_tune": true,
                                            "state": {},
                                            "verification_failures": [
                                                "foo"
                                            ],
                                            "verification_attempts_count": 42,
                                            "manual_verification_requested": true,
                                            "language": "foo",
                                            "progress": {},
                                            "message": {},
                                            "dataset_duration_seconds": 42,
                                            "verification_attempts": [
                                                {
                                                    "text": "foo",
                                                    "date_unix": 42,
                                                    "accepted": true,
                                                    "similarity": 42,
                                                    "levenshtein_distance": 42,
                                                    "recording": {
                                                        "recording_id": "foo",
                                                        "mime_type": "foo",
                                                        "size_bytes": 42,
                                                        "upload_date_unix": 42,
                                                        "transcription": "foo"
                                                    }
                                                }
                                            ],
                                            "slice_ids": [
                                                "foo"
                                            ],
                                            "manual_verification": {
                                                "extra_text": "foo",
                                                "request_time_unix": 42,
                                                "files": [
                                                    {
                                                        "file_id": "foo",
                                                        "file_name": "foo",
                                                        "mime_type": "foo",
                                                        "size_bytes": 42,
                                                        "upload_date_unix": 42
                                                    }
                                                ]
                                            },
                                            "max_verification_attempts": 42,
                                            "next_max_verification_attempts_reset_unix_ms": 42,
                                            "finetuning_state": null
                                        },
                                        "labels": {},
                                        "description": "foo",
                                        "preview_url": "foo",
                                        "available_for_tiers": [
                                            "foo"
                                        ],
                                        "settings": {
                                            "stability": 42,
                                            "use_speaker_boost": true,
                                            "similarity_boost": 42,
                                            "style": 42,
                                            "speed": 42
                                        },
                                        "sharing": {
                                            "status": "enabled",
                                            "history_item_sample_id": "foo",
                                            "date_unix": 42,
                                            "whitelisted_emails": [
                                                "foo"
                                            ],
                                            "public_owner_id": "foo",
                                            "original_voice_id": "foo",
                                            "financial_rewards_enabled": true,
                                            "free_users_allowed": true,
                                            "live_moderation_enabled": true,
                                            "rate": 42,
                                            "fiat_rate": 42,
                                            "notice_period": 42,
                                            "disable_at_unix": 42,
                                            "voice_mixing_allowed": true,
                                            "featured": true,
                                            "category": "generated",
                                            "reader_app_enabled": true,
                                            "image_url": "foo",
                                            "ban_reason": "foo",
                                            "liked_by_count": 42,
                                            "cloned_by_count": 42,
                                            "name": "foo",
                                            "description": "foo",
                                            "labels": {},
                                            "review_status": "not_requested",
                                            "review_message": "foo",
                                            "enabled_in_library": true,
                                            "instagram_username": "foo",
                                            "twitter_username": "foo",
                                            "youtube_username": "foo",
                                            "tiktok_username": "foo",
                                            "moderation_check": {
                                                "date_checked_unix": 42,
                                                "name_value": "foo",
                                                "name_check": true,
                                                "description_value": "foo",
                                                "description_check": true,
                                                "sample_ids": [
                                                    "foo"
                                                ],
                                                "sample_checks": [
                                                    42
                                                ],
                                                "captcha_ids": [
                                                    "foo"
                                                ],
                                                "captcha_checks": [
                                                    42
                                                ]
                                            },
                                            "reader_restricted_on": [
                                                {
                                                    "resource_type": "read",
                                                    "resource_id": "foo"
                                                }
                                            ]
                                        },
                                        "high_quality_base_model_ids": [
                                            "foo"
                                        ],
                                        "verified_languages": [
                                            {
                                                "language": "foo",
                                                "model_id": "foo",
                                                "accent": "foo",
                                                "locale": "foo",
                                                "preview_url": "foo"
                                            }
                                        ],
                                        "safety_control": "NONE",
                                        "voice_verification": {
                                            "requires_verification": true,
                                            "is_verified": true,
                                            "verification_failures": [
                                                "foo"
                                            ],
                                            "verification_attempts_count": 42,
                                            "language": "foo",
                                            "verification_attempts": [
                                                {
                                                    "text": "foo",
                                                    "date_unix": 42,
                                                    "accepted": true,
                                                    "similarity": 42,
                                                    "levenshtein_distance": 42,
                                                    "recording": {
                                                        "recording_id": "foo",
                                                        "mime_type": "foo",
                                                        "size_bytes": 42,
                                                        "upload_date_unix": 42,
                                                        "transcription": "foo"
                                                    }
                                                }
                                            ]
                                        },
                                        "permission_on_resource": "foo",
                                        "is_owner": true,
                                        "is_legacy": false,
                                        "is_mixed": false,
                                        "created_at_unix": 42
                                    }
                                ],
                                "has_more": true,
                                "total_count": 42,
                                "next_page_token": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voices": [
                                        {
                                            "voice_id": "foo",
                                            "name": "foo",
                                            "samples": [
                                                {
                                                    "sample_id": "foo",
                                                    "file_name": "foo",
                                                    "mime_type": "foo",
                                                    "size_bytes": 42,
                                                    "hash": "foo",
                                                    "duration_secs": 42,
                                                    "remove_background_noise": true,
                                                    "has_isolated_audio": true,
                                                    "has_isolated_audio_preview": true,
                                                    "speaker_separation": {
                                                        "voice_id": "foo",
                                                        "sample_id": "foo",
                                                        "status": "not_started",
                                                        "speakers": {},
                                                        "selected_speaker_ids": [
                                                            "foo"
                                                        ]
                                                    },
                                                    "trim_start": 42,
                                                    "trim_end": 42
                                                }
                                            ],
                                            "category": "generated",
                                            "fine_tuning": {
                                                "is_allowed_to_fine_tune": true,
                                                "state": {},
                                                "verification_failures": [
                                                    "foo"
                                                ],
                                                "verification_attempts_count": 42,
                                                "manual_verification_requested": true,
                                                "language": "foo",
                                                "progress": {},
                                                "message": {},
                                                "dataset_duration_seconds": 42,
                                                "verification_attempts": [
                                                    {
                                                        "text": "foo",
                                                        "date_unix": 42,
                                                        "accepted": true,
                                                        "similarity": 42,
                                                        "levenshtein_distance": 42,
                                                        "recording": {
                                                            "recording_id": "foo",
                                                            "mime_type": "foo",
                                                            "size_bytes": 42,
                                                            "upload_date_unix": 42,
                                                            "transcription": "foo"
                                                        }
                                                    }
                                                ],
                                                "slice_ids": [
                                                    "foo"
                                                ],
                                                "manual_verification": {
                                                    "extra_text": "foo",
                                                    "request_time_unix": 42,
                                                    "files": [
                                                        {
                                                            "file_id": "foo",
                                                            "file_name": "foo",
                                                            "mime_type": "foo",
                                                            "size_bytes": 42,
                                                            "upload_date_unix": 42
                                                        }
                                                    ]
                                                },
                                                "max_verification_attempts": 42,
                                                "next_max_verification_attempts_reset_unix_ms": 42,
                                                "finetuning_state": null
                                            },
                                            "labels": {},
                                            "description": "foo",
                                            "preview_url": "foo",
                                            "available_for_tiers": [
                                                "foo"
                                            ],
                                            "settings": {
                                                "stability": 42,
                                                "use_speaker_boost": true,
                                                "similarity_boost": 42,
                                                "style": 42,
                                                "speed": 42
                                            },
                                            "sharing": {
                                                "status": "enabled",
                                                "history_item_sample_id": "foo",
                                                "date_unix": 42,
                                                "whitelisted_emails": [
                                                    "foo"
                                                ],
                                                "public_owner_id": "foo",
                                                "original_voice_id": "foo",
                                                "financial_rewards_enabled": true,
                                                "free_users_allowed": true,
                                                "live_moderation_enabled": true,
                                                "rate": 42,
                                                "fiat_rate": 42,
                                                "notice_period": 42,
                                                "disable_at_unix": 42,
                                                "voice_mixing_allowed": true,
                                                "featured": true,
                                                "category": "generated",
                                                "reader_app_enabled": true,
                                                "image_url": "foo",
                                                "ban_reason": "foo",
                                                "liked_by_count": 42,
                                                "cloned_by_count": 42,
                                                "name": "foo",
                                                "description": "foo",
                                                "labels": {},
                                                "review_status": "not_requested",
                                                "review_message": "foo",
                                                "enabled_in_library": true,
                                                "instagram_username": "foo",
                                                "twitter_username": "foo",
                                                "youtube_username": "foo",
                                                "tiktok_username": "foo",
                                                "moderation_check": {
                                                    "date_checked_unix": 42,
                                                    "name_value": "foo",
                                                    "name_check": true,
                                                    "description_value": "foo",
                                                    "description_check": true,
                                                    "sample_ids": [
                                                        "foo"
                                                    ],
                                                    "sample_checks": [
                                                        42
                                                    ],
                                                    "captcha_ids": [
                                                        "foo"
                                                    ],
                                                    "captcha_checks": [
                                                        42
                                                    ]
                                                },
                                                "reader_restricted_on": [
                                                    {
                                                        "resource_type": "read",
                                                        "resource_id": "foo"
                                                    }
                                                ]
                                            },
                                            "high_quality_base_model_ids": [
                                                "foo"
                                            ],
                                            "verified_languages": [
                                                {
                                                    "language": "foo",
                                                    "model_id": "foo",
                                                    "accent": "foo",
                                                    "locale": "foo",
                                                    "preview_url": "foo"
                                                }
                                            ],
                                            "safety_control": "NONE",
                                            "voice_verification": {
                                                "requires_verification": true,
                                                "is_verified": true,
                                                "verification_failures": [
                                                    "foo"
                                                ],
                                                "verification_attempts_count": 42,
                                                "language": "foo",
                                                "verification_attempts": [
                                                    {
                                                        "text": "foo",
                                                        "date_unix": 42,
                                                        "accepted": true,
                                                        "similarity": 42,
                                                        "levenshtein_distance": 42,
                                                        "recording": {
                                                            "recording_id": "foo",
                                                            "mime_type": "foo",
                                                            "size_bytes": 42,
                                                            "upload_date_unix": 42,
                                                            "transcription": "foo"
                                                        }
                                                    }
                                                ]
                                            },
                                            "permission_on_resource": "foo",
                                            "is_owner": true,
                                            "is_legacy": false,
                                            "is_mixed": false,
                                            "created_at_unix": 42
                                        }
                                    ],
                                    "has_more": true,
                                    "total_count": 42,
                                    "next_page_token": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Returns metadata about a specific voice.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_voices.get",
                    "name": "Get voice",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "This parameter is now deprecated. It is ignored and will be removed in a future version.",
                            "key": "with_settings",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            },
                            "availability": "Deprecated"
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "VoiceResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/voice_id",
                            "pathParameters": {
                                "voice_id": "voice_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voice_id": "21m00Tcm4TlvDq8ikWAM",
                                "name": "Rachel",
                                "category": "professional",
                                "fine_tuning": {
                                    "is_allowed_to_fine_tune": true,
                                    "state": {
                                        "eleven_multilingual_v2": "fine_tuned"
                                    },
                                    "verification_failures": [],
                                    "verification_attempts_count": 2,
                                    "manual_verification_requested": false
                                },
                                "labels": {
                                    "accent": "American",
                                    "age": "middle-aged",
                                    "description": "expressive",
                                    "gender": "female",
                                    "use_case": "social media"
                                },
                                "description": "A warm, expressive voice with a touch of humor.",
                                "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
                                "available_for_tiers": [
                                    "creator",
                                    "enterprise"
                                ],
                                "settings": {
                                    "stability": 1,
                                    "use_speaker_boost": true,
                                    "similarity_boost": 1,
                                    "style": 0,
                                    "speed": 1
                                },
                                "sharing": {
                                    "status": "enabled",
                                    "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "date_unix": 1714204800,
                                    "whitelisted_emails": [
                                        "example@example.com"
                                    ],
                                    "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "financial_rewards_enabled": true,
                                    "free_users_allowed": true,
                                    "live_moderation_enabled": true,
                                    "rate": 0.05,
                                    "notice_period": 30,
                                    "disable_at_unix": 1714204800,
                                    "voice_mixing_allowed": false,
                                    "featured": true,
                                    "category": "professional",
                                    "reader_app_enabled": true,
                                    "liked_by_count": 100,
                                    "cloned_by_count": 50,
                                    "name": "Rachel",
                                    "description": "A female voice with a soft and friendly tone.",
                                    "labels": {
                                        "accent": "American",
                                        "gender": "female"
                                    },
                                    "review_status": "allowed",
                                    "enabled_in_library": true,
                                    "moderation_check": {
                                        "date_checked_unix": 1714204800,
                                        "name_value": "Rachel",
                                        "name_check": true,
                                        "description_value": "A female voice with a soft and friendly tone.",
                                        "description_check": true,
                                        "sample_ids": [
                                            "sample1",
                                            "sample2"
                                        ],
                                        "sample_checks": [
                                            0.95,
                                            0.98
                                        ],
                                        "captcha_ids": [
                                            "captcha1",
                                            "captcha2"
                                        ],
                                        "captcha_checks": [
                                            0.95,
                                            0.98
                                        ]
                                    },
                                    "reader_restricted_on": [
                                        {
                                            "resource_type": "read",
                                            "resource_id": "FCwhRBWXzGAHq8TQ4Fs18"
                                        }
                                    ]
                                },
                                "high_quality_base_model_ids": [
                                    "eleven_v2_flash",
                                    "eleven_flash_v2",
                                    "eleven_turbo_v2_5",
                                    "eleven_multilingual_v2",
                                    "eleven_v2_5_flash",
                                    "eleven_flash_v2_5",
                                    "eleven_turbo_v2"
                                ],
                                "verified_languages": [
                                    {
                                        "language": "en",
                                        "model_id": "eleven_turbo_v2_5",
                                        "accent": "American"
                                    }
                                ],
                                "voice_verification": {
                                    "requires_verification": false,
                                    "is_verified": true,
                                    "verification_failures": [],
                                    "verification_attempts_count": 0,
                                    "language": "en",
                                    "verification_attempts": [
                                        {
                                            "text": "Hello, how are you?",
                                            "date_unix": 1714204800,
                                            "accepted": true,
                                            "similarity": 0.95,
                                            "levenshtein_distance": 2,
                                            "recording": {
                                                "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                                                "mime_type": "audio/mpeg",
                                                "size_bytes": 1000000,
                                                "upload_date_unix": 1714204800,
                                                "transcription": "Hello, how are you?"
                                            }
                                        }
                                    ]
                                },
                                "is_owner": false,
                                "is_legacy": false,
                                "is_mixed": false
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voice_id": "21m00Tcm4TlvDq8ikWAM",
                                    "name": "Rachel",
                                    "category": "professional",
                                    "fine_tuning": {
                                        "is_allowed_to_fine_tune": true,
                                        "state": {
                                            "eleven_multilingual_v2": "fine_tuned"
                                        },
                                        "verification_failures": [],
                                        "verification_attempts_count": 2,
                                        "manual_verification_requested": false
                                    },
                                    "labels": {
                                        "accent": "American",
                                        "age": "middle-aged",
                                        "description": "expressive",
                                        "gender": "female",
                                        "use_case": "social media"
                                    },
                                    "description": "A warm, expressive voice with a touch of humor.",
                                    "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
                                    "available_for_tiers": [
                                        "creator",
                                        "enterprise"
                                    ],
                                    "settings": {
                                        "stability": 1,
                                        "use_speaker_boost": true,
                                        "similarity_boost": 1,
                                        "style": 0,
                                        "speed": 1
                                    },
                                    "sharing": {
                                        "status": "enabled",
                                        "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                        "date_unix": 1714204800,
                                        "whitelisted_emails": [
                                            "example@example.com"
                                        ],
                                        "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                        "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                        "financial_rewards_enabled": true,
                                        "free_users_allowed": true,
                                        "live_moderation_enabled": true,
                                        "rate": 0.05,
                                        "notice_period": 30,
                                        "disable_at_unix": 1714204800,
                                        "voice_mixing_allowed": false,
                                        "featured": true,
                                        "category": "professional",
                                        "reader_app_enabled": true,
                                        "liked_by_count": 100,
                                        "cloned_by_count": 50,
                                        "name": "Rachel",
                                        "description": "A female voice with a soft and friendly tone.",
                                        "labels": {
                                            "accent": "American",
                                            "gender": "female"
                                        },
                                        "review_status": "allowed",
                                        "enabled_in_library": true,
                                        "moderation_check": {
                                            "date_checked_unix": 1714204800,
                                            "name_value": "Rachel",
                                            "name_check": true,
                                            "description_value": "A female voice with a soft and friendly tone.",
                                            "description_check": true,
                                            "sample_ids": [
                                                "sample1",
                                                "sample2"
                                            ],
                                            "sample_checks": [
                                                0.95,
                                                0.98
                                            ],
                                            "captcha_ids": [
                                                "captcha1",
                                                "captcha2"
                                            ],
                                            "captcha_checks": [
                                                0.95,
                                                0.98
                                            ]
                                        },
                                        "reader_restricted_on": [
                                            {
                                                "resource_type": "read",
                                                "resource_id": "FCwhRBWXzGAHq8TQ4Fs18"
                                            }
                                        ]
                                    },
                                    "high_quality_base_model_ids": [
                                        "eleven_v2_flash",
                                        "eleven_flash_v2",
                                        "eleven_turbo_v2_5",
                                        "eleven_multilingual_v2",
                                        "eleven_v2_5_flash",
                                        "eleven_flash_v2_5",
                                        "eleven_turbo_v2"
                                    ],
                                    "verified_languages": [
                                        {
                                            "language": "en",
                                            "model_id": "eleven_turbo_v2_5",
                                            "accent": "American"
                                        }
                                    ],
                                    "voice_verification": {
                                        "requires_verification": false,
                                        "is_verified": true,
                                        "verification_failures": [],
                                        "verification_attempts_count": 0,
                                        "language": "en",
                                        "verification_attempts": [
                                            {
                                                "text": "Hello, how are you?",
                                                "date_unix": 1714204800,
                                                "accepted": true,
                                                "similarity": 0.95,
                                                "levenshtein_distance": 2,
                                                "recording": {
                                                    "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                                                    "mime_type": "audio/mpeg",
                                                    "size_bytes": 1000000,
                                                    "upload_date_unix": 1714204800,
                                                    "transcription": "Hello, how are you?"
                                                }
                                            }
                                        ]
                                    },
                                    "is_owner": false,
                                    "is_legacy": false,
                                    "is_mixed": false
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Deletes a voice by its ID.",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_voices.delete",
                    "name": "Delete voice",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DeleteVoiceResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/voice_id",
                            "pathParameters": {
                                "voice_id": "voice_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Edit a voice created by you.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_voices.update",
                    "name": "Edit voice",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/edit"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "voices_update_Request",
                                "properties": [
                                    {
                                        "type": "bodyProperty",
                                        "key": "name",
                                        "valueType": {
                                            "type": "primitive",
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "fileArray",
                                            "key": "files",
                                            "isOptional": true,
                                            "contentType": "multipart/form-data",
                                            "description": "Audio files to add to the voice"
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "remove_background_noise",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "description",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "A description of the voice.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "labels",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Serialized labels dictionary for the voice.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "EditVoiceResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/voice_id/edit",
                            "pathParameters": {
                                "voice_id": "voice_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "name": "John Smith"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "name": {
                                        "type": "json",
                                        "value": "John Smith"
                                    },
                                    "files": {
                                        "type": "filenames",
                                        "value": []
                                    },
                                    "remove_background_noise": {
                                        "type": "json"
                                    },
                                    "description": {
                                        "type": "json"
                                    },
                                    "labels": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Add a shared voice to your collection of Voices",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "share",
                    "originalEndpointId": "endpoint_voices.share",
                    "name": "Add shared voice",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Public user ID used to publicly identify ElevenLabs users.",
                                "key": "public_user_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/add/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "public_user_id"
                            },
                            {
                                "type": "literal",
                                "value": "/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddVoiceResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/add/public_user_id/voice_id",
                            "pathParameters": {
                                "public_user_id": "public_user_id",
                                "voice_id": "voice_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "new_name": "John Smith"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "new_name": "John Smith"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voice_id": "b38kUX8pkfYO2kHyqfFy"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voice_id": "b38kUX8pkfYO2kHyqfFy"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Retrieves a list of shared voices.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get_shared",
                    "originalEndpointId": "endpoint_voices.get_shared",
                    "name": "Get shared voices",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/shared-voices"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "How many shared voices to return at maximum. Can not exceed 100, defaults to 30.",
                            "key": "page_size",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "default": 30
                                    }
                                }
                            }
                        },
                        {
                            "description": "Voice category used for filtering",
                            "key": "category",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1SharedVoicesGetParametersCategory"
                                }
                            }
                        },
                        {
                            "description": "Gender used for filtering",
                            "key": "gender",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Age used for filtering",
                            "key": "age",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Accent used for filtering",
                            "key": "accent",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Language used for filtering",
                            "key": "language",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Locale used for filtering",
                            "key": "locale",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Search term used for filtering",
                            "key": "search",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Use-case used for filtering",
                            "key": "use_cases",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "list",
                                        "itemType": {
                                            "type": "primitive",
                                            "value": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Search term used for filtering",
                            "key": "descriptives",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "list",
                                        "itemType": {
                                            "type": "primitive",
                                            "value": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Filter featured voices",
                            "key": "featured",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        },
                        {
                            "description": "Filter voices with a minimum notice period of the given number of days.",
                            "key": "min_notice_period_days",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Include/exclude voices with custom rates",
                            "key": "include_custom_rates",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Include/exclude voices that are live moderated",
                            "key": "include_live_moderated",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Filter voices that are enabled for the reader app",
                            "key": "reader_app_enabled",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        },
                        {
                            "description": "Filter voices by public owner ID",
                            "key": "owner_id",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Sort criteria",
                            "key": "sort",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "key": "page",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "default": 0
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetLibraryVoicesResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/shared-voices",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voices": [
                                    {
                                        "public_owner_id": "63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f",
                                        "voice_id": "sB1b5zUrxQVAFl2PhZFp",
                                        "date_unix": 1714423232,
                                        "name": "Alita",
                                        "accent": "american",
                                        "gender": "Female",
                                        "age": "young",
                                        "descriptive": "calm",
                                        "use_case": "characters_animation",
                                        "category": "professional",
                                        "language": "en",
                                        "description": "Perfectly calm, neutral and strong voice. Great for a young female protagonist.",
                                        "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3",
                                        "usage_character_count_1y": 12852,
                                        "usage_character_count_7d": 12852,
                                        "play_api_usage_character_count_1y": 12852,
                                        "cloned_by_count": 11,
                                        "rate": 1,
                                        "free_users_allowed": true,
                                        "live_moderation_enabled": false,
                                        "featured": false
                                    }
                                ],
                                "has_more": false
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voices": [
                                        {
                                            "public_owner_id": "63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f",
                                            "voice_id": "sB1b5zUrxQVAFl2PhZFp",
                                            "date_unix": 1714423232,
                                            "name": "Alita",
                                            "accent": "american",
                                            "gender": "Female",
                                            "age": "young",
                                            "descriptive": "calm",
                                            "use_case": "characters_animation",
                                            "category": "professional",
                                            "language": "en",
                                            "description": "Perfectly calm, neutral and strong voice. Great for a young female protagonist.",
                                            "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3",
                                            "usage_character_count_1y": 12852,
                                            "usage_character_count_7d": 12852,
                                            "play_api_usage_character_count_1y": 12852,
                                            "cloned_by_count": 11,
                                            "rate": 1,
                                            "free_users_allowed": true,
                                            "live_moderation_enabled": false,
                                            "featured": false
                                        }
                                    ],
                                    "has_more": false
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Returns a list of shared voices similar to the provided audio sample. If neither similarity_threshold nor top_k is provided, we will apply default values.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "find_similar_voices",
                    "originalEndpointId": "endpoint_voices.find_similar_voices",
                    "name": "List similar voices",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/similar-voices"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "voices_find_similar_voices_Request",
                                "properties": [
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "audio_file",
                                            "isOptional": true,
                                            "contentType": "multipart/form-data"
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "similarity_threshold",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "double"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Threshold for voice similarity between provided sample and library voices. Values range from 0 to 2. The smaller the value the more similar voices will be returned.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "top_k",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Number of most similar voices to return. If similarity_threshold is provided, less than this number of voices may be returned. Values range from 1 to 100.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetLibraryVoicesResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/similar-voices",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "audio_file": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    },
                                    "similarity_threshold": {
                                        "type": "json"
                                    },
                                    "top_k": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voices": [
                                    {
                                        "public_owner_id": "63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f",
                                        "voice_id": "sB1b5zUrxQVAFl2PhZFp",
                                        "date_unix": 1714423232,
                                        "name": "Alita",
                                        "accent": "american",
                                        "gender": "Female",
                                        "age": "young",
                                        "descriptive": "calm",
                                        "use_case": "characters_animation",
                                        "category": "professional",
                                        "language": "en",
                                        "description": "Perfectly calm, neutral and strong voice. Great for a young female protagonist.",
                                        "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3",
                                        "usage_character_count_1y": 12852,
                                        "usage_character_count_7d": 12852,
                                        "play_api_usage_character_count_1y": 12852,
                                        "cloned_by_count": 11,
                                        "rate": 1,
                                        "free_users_allowed": true,
                                        "live_moderation_enabled": false,
                                        "featured": false
                                    }
                                ],
                                "has_more": false
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voices": [
                                        {
                                            "public_owner_id": "63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f",
                                            "voice_id": "sB1b5zUrxQVAFl2PhZFp",
                                            "date_unix": 1714423232,
                                            "name": "Alita",
                                            "accent": "american",
                                            "gender": "Female",
                                            "age": "young",
                                            "descriptive": "calm",
                                            "use_case": "characters_animation",
                                            "category": "professional",
                                            "language": "en",
                                            "description": "Perfectly calm, neutral and strong voice. Great for a young female protagonist.",
                                            "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3",
                                            "usage_character_count_1y": 12852,
                                            "usage_character_count_7d": 12852,
                                            "play_api_usage_character_count_1y": 12852,
                                            "cloned_by_count": 11,
                                            "rate": 1,
                                            "free_users_allowed": true,
                                            "live_moderation_enabled": false,
                                            "featured": false
                                        }
                                    ],
                                    "has_more": false
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_voices/samples",
                "subpackage_voices/settings",
                "subpackage_voices/ivc",
                "subpackage_voices/pvc"
            ]
        },
        "subpackage_voices/samples": {
            "subpackageId": "subpackage_voices/samples",
            "name": "samples",
            "endpoints": [],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_voices/samples/audio"
            ]
        },
        "subpackage_voices/samples/audio": {
            "subpackageId": "subpackage_voices/samples/audio",
            "name": "audio",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Returns the audio corresponding to a sample attached to a voice.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_voices/samples/audio.get",
                    "name": "Get audio from sample",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "ID of the sample to be used. You can use the [Get voices](/docs/api-reference/voices/get) endpoint list all the available samples for a voice.",
                                "key": "sample_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/samples/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "sample_id"
                            },
                            {
                                "type": "literal",
                                "value": "/audio"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/voice_id/samples/sample_id/audio",
                            "pathParameters": {
                                "voice_id": "voice_id",
                                "sample_id": "sample_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_textToSpeech": {
            "subpackageId": "subpackage_textToSpeech",
            "name": "textToSpeech",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Converts text into speech using a voice of your choice and returns audio.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "convert",
                    "originalEndpointId": "endpoint_textToSpeech.convert",
                    "name": "Create speech",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/text-to-speech/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
                            "key": "enable_logging",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        },
                        {
                            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
                            "key": "optimize_streaming_latency",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "availability": "Deprecated"
                        },
                        {
                            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
                            "key": "output_format",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1TextToSpeechVoiceIdPostParametersOutputFormat"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Text_to_speech_v1_text_to_speech__voice_id__post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "fileDownload"
                        },
                        "statusCode": 200,
                        "description": "The generated audio file"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/text-to-speech/JBFqnCBsd6RMkjVDRZzb",
                            "pathParameters": {
                                "voice_id": "JBFqnCBsd6RMkjVDRZzb"
                            },
                            "queryParameters": {
                                "output_format": "mp3_44100_128"
                            },
                            "headers": {},
                            "requestBody": {
                                "text": "The first move is what sets everything in motion.",
                                "model_id": "eleven_multilingual_v2"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "text": "The first move is what sets everything in motion.",
                                    "model_id": "eleven_multilingual_v2"
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Generate speech from text with precise character-level timing information for audio-text synchronization.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "convert_with_timestamps",
                    "originalEndpointId": "endpoint_textToSpeech.convert_with_timestamps",
                    "name": "Create speech with timing",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/text-to-speech/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/with-timestamps"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
                            "key": "enable_logging",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        },
                        {
                            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
                            "key": "optimize_streaming_latency",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "availability": "Deprecated"
                        },
                        {
                            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
                            "key": "output_format",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1TextToSpeechVoiceIdWithTimestampsPostParametersOutputFormat"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AudioWithTimestampsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/text-to-speech/voice_id/with-timestamps",
                            "pathParameters": {
                                "voice_id": "voice_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "text": "This is a test for the API of ElevenLabs."
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "text": "This is a test for the API of ElevenLabs."
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "audio_base64": "base64_encoded_audio_string",
                                "alignment": {
                                    "characters": [
                                        "H",
                                        "e",
                                        "l",
                                        "l",
                                        "o"
                                    ],
                                    "character_start_times_seconds": [
                                        0,
                                        0.1,
                                        0.2,
                                        0.3,
                                        0.4
                                    ],
                                    "character_end_times_seconds": [
                                        0.1,
                                        0.2,
                                        0.3,
                                        0.4,
                                        0.5
                                    ]
                                },
                                "normalized_alignment": {
                                    "characters": [
                                        "H",
                                        "e",
                                        "l",
                                        "l",
                                        "o"
                                    ],
                                    "character_start_times_seconds": [
                                        0,
                                        0.1,
                                        0.2,
                                        0.3,
                                        0.4
                                    ],
                                    "character_end_times_seconds": [
                                        0.1,
                                        0.2,
                                        0.3,
                                        0.4,
                                        0.5
                                    ]
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "audio_base64": "base64_encoded_audio_string",
                                    "alignment": {
                                        "characters": [
                                            "H",
                                            "e",
                                            "l",
                                            "l",
                                            "o"
                                        ],
                                        "character_start_times_seconds": [
                                            0,
                                            0.1,
                                            0.2,
                                            0.3,
                                            0.4
                                        ],
                                        "character_end_times_seconds": [
                                            0.1,
                                            0.2,
                                            0.3,
                                            0.4,
                                            0.5
                                        ]
                                    },
                                    "normalized_alignment": {
                                        "characters": [
                                            "H",
                                            "e",
                                            "l",
                                            "l",
                                            "o"
                                        ],
                                        "character_start_times_seconds": [
                                            0,
                                            0.1,
                                            0.2,
                                            0.3,
                                            0.4
                                        ],
                                        "character_end_times_seconds": [
                                            0.1,
                                            0.2,
                                            0.3,
                                            0.4,
                                            0.5
                                        ]
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Converts text into speech using a voice of your choice and returns audio as an audio stream.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "stream",
                    "originalEndpointId": "endpoint_textToSpeech.stream",
                    "name": "Stream speech",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/text-to-speech/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/stream"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
                            "key": "enable_logging",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        },
                        {
                            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
                            "key": "optimize_streaming_latency",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "availability": "Deprecated"
                        },
                        {
                            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
                            "key": "output_format",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1TextToSpeechVoiceIdStreamPostParametersOutputFormat"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "stream",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        },
                        "statusCode": 200,
                        "description": "Streaming audio data"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/text-to-speech/JBFqnCBsd6RMkjVDRZzb/stream",
                            "pathParameters": {
                                "voice_id": "JBFqnCBsd6RMkjVDRZzb"
                            },
                            "queryParameters": {
                                "output_format": "mp3_44100_128"
                            },
                            "headers": {},
                            "requestBody": {
                                "text": "The first move is what sets everything in motion.",
                                "model_id": "eleven_multilingual_v2"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "text": "The first move is what sets everything in motion.",
                                    "model_id": "eleven_multilingual_v2"
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Converts text into speech using a voice of your choice and returns a stream of JSONs containing audio as a base64 encoded string together with information on when which character was spoken.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "stream_with_timestamps",
                    "originalEndpointId": "endpoint_textToSpeech.stream_with_timestamps",
                    "name": "Stream speech with timing",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/text-to-speech/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/stream/with-timestamps"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
                            "key": "enable_logging",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        },
                        {
                            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
                            "key": "optimize_streaming_latency",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "availability": "Deprecated"
                        },
                        {
                            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
                            "key": "output_format",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1TextToSpeechVoiceIdStreamWithTimestampsPostParametersOutputFormat"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "stream",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "StreamingAudioChunkWithTimestampsResponseModel"
                                }
                            }
                        },
                        "statusCode": 200,
                        "description": "Stream of transcription chunks"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/text-to-speech/JBFqnCBsd6RMkjVDRZzb/stream/with-timestamps",
                            "pathParameters": {
                                "voice_id": "JBFqnCBsd6RMkjVDRZzb"
                            },
                            "queryParameters": {
                                "output_format": "mp3_44100_128"
                            },
                            "headers": {},
                            "requestBody": {
                                "text": "The first move is what sets everything in motion.",
                                "model_id": "eleven_multilingual_v2"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "text": "The first move is what sets everything in motion.",
                                    "model_id": "eleven_multilingual_v2"
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_textToDialogue": {
            "subpackageId": "subpackage_textToDialogue",
            "name": "textToDialogue",
            "endpoints": [
                {
                    "auth": false,
                    "description": "<Warning>Eleven v3 API access is currently not publicly available, but will be soon.</Warning><br/>Converts a list of text and voice ID pairs into speech (dialogue) and returns audio.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "convert",
                    "originalEndpointId": "endpoint_textToDialogue.convert",
                    "name": "Create dialogue",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/text-to-dialogue"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
                            "key": "output_format",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1TextToDialoguePostParametersOutputFormat"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Text_to_dialogue__multi_voice__v1_text_to_dialogue_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "fileDownload"
                        },
                        "statusCode": 200,
                        "description": "The generated audio file"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/text-to-dialogue",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {},
                            "requestBody": {
                                "inputs": [
                                    {
                                        "text": "Knock knock",
                                        "voice_id": "JBFqnCBsd6RMkjVDRZzb"
                                    },
                                    {
                                        "text": "Who is there?",
                                        "voice_id": "Aw4FAjKCGjjNkVhN1Xmq"
                                    }
                                ]
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "inputs": [
                                        {
                                            "text": "Knock knock",
                                            "voice_id": "JBFqnCBsd6RMkjVDRZzb"
                                        },
                                        {
                                            "text": "Who is there?",
                                            "voice_id": "Aw4FAjKCGjjNkVhN1Xmq"
                                        }
                                    ]
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "<Warning>Eleven v3 API access is currently not publicly available, but will be soon.</Warning><br/>Converts a list of text and voice ID pairs into speech (dialogue) and returns an audio stream.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "stream",
                    "originalEndpointId": "endpoint_textToDialogue.stream",
                    "name": "Stream dialogue",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/text-to-dialogue/stream"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
                            "key": "output_format",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1TextToDialogueStreamPostParametersOutputFormat"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Text_to_dialogue__multi_voice__streaming_v1_text_to_dialogue_stream_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "stream",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        },
                        "statusCode": 200,
                        "description": "Streaming audio data"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/text-to-dialogue/stream",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {},
                            "requestBody": {
                                "inputs": [
                                    {
                                        "text": "Knock knock",
                                        "voice_id": "JBFqnCBsd6RMkjVDRZzb"
                                    },
                                    {
                                        "text": "Who is there?",
                                        "voice_id": "Aw4FAjKCGjjNkVhN1Xmq"
                                    }
                                ]
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "inputs": [
                                        {
                                            "text": "Knock knock",
                                            "voice_id": "JBFqnCBsd6RMkjVDRZzb"
                                        },
                                        {
                                            "text": "Who is there?",
                                            "voice_id": "Aw4FAjKCGjjNkVhN1Xmq"
                                        }
                                    ]
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_speechToSpeech": {
            "subpackageId": "subpackage_speechToSpeech",
            "name": "speechToSpeech",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Transform audio from one voice to another. Maintain full control over emotion, timing and delivery.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "convert",
                    "originalEndpointId": "endpoint_speechToSpeech.convert",
                    "name": "Voice changer",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/speech-to-speech/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
                            "key": "enable_logging",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        },
                        {
                            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
                            "key": "optimize_streaming_latency",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "availability": "Deprecated"
                        },
                        {
                            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
                            "key": "output_format",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1SpeechToSpeechVoiceIdPostParametersOutputFormat"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "speech_to_speech_convert_Request",
                                "properties": [
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "audio",
                                            "isOptional": false,
                                            "contentType": "multipart/form-data",
                                            "description": "The audio file which holds the content and emotion that will control the generated speech."
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "model_id",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "string",
                                                    "default": "eleven_english_sts_v2"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "voice_settings",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "seed",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "remove_background_noise",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "If set, will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "file_format",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "id",
                                                    "value": "V1SpeechToSpeechVoiceIdPostRequestBodyContentMultipartFormDataSchemaFileFormat"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "fileDownload"
                        },
                        "statusCode": 200,
                        "description": "The generated audio file"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/speech-to-speech/JBFqnCBsd6RMkjVDRZzb",
                            "pathParameters": {
                                "voice_id": "JBFqnCBsd6RMkjVDRZzb"
                            },
                            "queryParameters": {
                                "output_format": "mp3_44100_128"
                            },
                            "headers": {},
                            "requestBody": {
                                "model_id": "eleven_multilingual_sts_v2"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "audio": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    },
                                    "model_id": {
                                        "type": "json",
                                        "value": "eleven_multilingual_sts_v2"
                                    },
                                    "voice_settings": {
                                        "type": "json"
                                    },
                                    "seed": {
                                        "type": "json"
                                    },
                                    "remove_background_noise": {
                                        "type": "json"
                                    },
                                    "file_format": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Stream audio from one voice to another. Maintain full control over emotion, timing and delivery.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "stream",
                    "originalEndpointId": "endpoint_speechToSpeech.stream",
                    "name": "Voice changer stream",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/speech-to-speech/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/stream"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
                            "key": "enable_logging",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        },
                        {
                            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
                            "key": "optimize_streaming_latency",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "availability": "Deprecated"
                        },
                        {
                            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
                            "key": "output_format",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1SpeechToSpeechVoiceIdStreamPostParametersOutputFormat"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "speech_to_speech_stream_Request",
                                "properties": [
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "audio",
                                            "isOptional": false,
                                            "contentType": "multipart/form-data",
                                            "description": "The audio file which holds the content and emotion that will control the generated speech."
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "model_id",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "string",
                                                    "default": "eleven_english_sts_v2"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "voice_settings",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "seed",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "remove_background_noise",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "If set, will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "file_format",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "id",
                                                    "value": "V1SpeechToSpeechVoiceIdStreamPostRequestBodyContentMultipartFormDataSchemaFileFormat"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "stream",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        },
                        "statusCode": 200,
                        "description": "Streaming audio data"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/speech-to-speech/JBFqnCBsd6RMkjVDRZzb/stream",
                            "pathParameters": {
                                "voice_id": "JBFqnCBsd6RMkjVDRZzb"
                            },
                            "queryParameters": {
                                "output_format": "mp3_44100_128"
                            },
                            "headers": {},
                            "requestBody": {
                                "model_id": "eleven_multilingual_sts_v2"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "audio": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    },
                                    "model_id": {
                                        "type": "json",
                                        "value": "eleven_multilingual_sts_v2"
                                    },
                                    "voice_settings": {
                                        "type": "json"
                                    },
                                    "seed": {
                                        "type": "json"
                                    },
                                    "remove_background_noise": {
                                        "type": "json"
                                    },
                                    "file_format": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_textToVoice": {
            "subpackageId": "subpackage_textToVoice",
            "name": "textToVoice",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Create a voice from a text prompt.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create_previews",
                    "originalEndpointId": "endpoint_textToVoice.create_previews",
                    "name": "Voice design",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/text-to-voice/create-previews"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "The output format of the generated audio.",
                            "key": "output_format",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1TextToVoiceCreatePreviewsPostParametersOutputFormat"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "VoicePreviewsRequestModel"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "VoicePreviewsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/text-to-voice/create-previews",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "voice_description": "A sassy squeaky mouse"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "voice_description": "A sassy squeaky mouse"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "previews": [
                                    {
                                        "audio_base_64": "foo",
                                        "generated_voice_id": "foo",
                                        "media_type": "foo",
                                        "duration_secs": 42
                                    }
                                ],
                                "text": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "previews": [
                                        {
                                            "audio_base_64": "foo",
                                            "generated_voice_id": "foo",
                                            "media_type": "foo",
                                            "duration_secs": 42
                                        }
                                    ],
                                    "text": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Add a generated voice to the voice library.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create_voice_from_preview",
                    "originalEndpointId": "endpoint_textToVoice.create_voice_from_preview",
                    "name": "Save a voice preview",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/text-to-voice/create-voice-from-preview"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "VoiceResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/text-to-voice/create-voice-from-preview",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "voice_name": "Sassy squeaky mouse",
                                "voice_description": "A sassy squeaky mouse",
                                "generated_voice_id": "37HceQefKmEi3bGovXjL"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "voice_name": "Sassy squeaky mouse",
                                    "voice_description": "A sassy squeaky mouse",
                                    "generated_voice_id": "37HceQefKmEi3bGovXjL"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voice_id": "21m00Tcm4TlvDq8ikWAM",
                                "name": "Rachel",
                                "category": "professional",
                                "fine_tuning": {
                                    "is_allowed_to_fine_tune": true,
                                    "state": {
                                        "eleven_multilingual_v2": "fine_tuned"
                                    },
                                    "verification_failures": [],
                                    "verification_attempts_count": 2,
                                    "manual_verification_requested": false
                                },
                                "labels": {
                                    "accent": "American",
                                    "age": "middle-aged",
                                    "description": "expressive",
                                    "gender": "female",
                                    "use_case": "social media"
                                },
                                "description": "A warm, expressive voice with a touch of humor.",
                                "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
                                "available_for_tiers": [
                                    "creator",
                                    "enterprise"
                                ],
                                "settings": {
                                    "stability": 1,
                                    "use_speaker_boost": true,
                                    "similarity_boost": 1,
                                    "style": 0,
                                    "speed": 1
                                },
                                "sharing": {
                                    "status": "enabled",
                                    "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "date_unix": 1714204800,
                                    "whitelisted_emails": [
                                        "example@example.com"
                                    ],
                                    "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "financial_rewards_enabled": true,
                                    "free_users_allowed": true,
                                    "live_moderation_enabled": true,
                                    "rate": 0.05,
                                    "notice_period": 30,
                                    "disable_at_unix": 1714204800,
                                    "voice_mixing_allowed": false,
                                    "featured": true,
                                    "category": "professional",
                                    "reader_app_enabled": true,
                                    "liked_by_count": 100,
                                    "cloned_by_count": 50,
                                    "name": "Rachel",
                                    "description": "A female voice with a soft and friendly tone.",
                                    "labels": {
                                        "accent": "American",
                                        "gender": "female"
                                    },
                                    "review_status": "allowed",
                                    "enabled_in_library": true,
                                    "moderation_check": {
                                        "date_checked_unix": 1714204800,
                                        "name_value": "Rachel",
                                        "name_check": true,
                                        "description_value": "A female voice with a soft and friendly tone.",
                                        "description_check": true,
                                        "sample_ids": [
                                            "sample1",
                                            "sample2"
                                        ],
                                        "sample_checks": [
                                            0.95,
                                            0.98
                                        ],
                                        "captcha_ids": [
                                            "captcha1",
                                            "captcha2"
                                        ],
                                        "captcha_checks": [
                                            0.95,
                                            0.98
                                        ]
                                    },
                                    "reader_restricted_on": [
                                        {
                                            "resource_type": "read",
                                            "resource_id": "FCwhRBWXzGAHq8TQ4Fs18"
                                        }
                                    ]
                                },
                                "high_quality_base_model_ids": [
                                    "eleven_v2_flash",
                                    "eleven_flash_v2",
                                    "eleven_turbo_v2_5",
                                    "eleven_multilingual_v2",
                                    "eleven_v2_5_flash",
                                    "eleven_flash_v2_5",
                                    "eleven_turbo_v2"
                                ],
                                "verified_languages": [
                                    {
                                        "language": "en",
                                        "model_id": "eleven_turbo_v2_5",
                                        "accent": "American"
                                    }
                                ],
                                "voice_verification": {
                                    "requires_verification": false,
                                    "is_verified": true,
                                    "verification_failures": [],
                                    "verification_attempts_count": 0,
                                    "language": "en",
                                    "verification_attempts": [
                                        {
                                            "text": "Hello, how are you?",
                                            "date_unix": 1714204800,
                                            "accepted": true,
                                            "similarity": 0.95,
                                            "levenshtein_distance": 2,
                                            "recording": {
                                                "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                                                "mime_type": "audio/mpeg",
                                                "size_bytes": 1000000,
                                                "upload_date_unix": 1714204800,
                                                "transcription": "Hello, how are you?"
                                            }
                                        }
                                    ]
                                },
                                "is_owner": false,
                                "is_legacy": false,
                                "is_mixed": false
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voice_id": "21m00Tcm4TlvDq8ikWAM",
                                    "name": "Rachel",
                                    "category": "professional",
                                    "fine_tuning": {
                                        "is_allowed_to_fine_tune": true,
                                        "state": {
                                            "eleven_multilingual_v2": "fine_tuned"
                                        },
                                        "verification_failures": [],
                                        "verification_attempts_count": 2,
                                        "manual_verification_requested": false
                                    },
                                    "labels": {
                                        "accent": "American",
                                        "age": "middle-aged",
                                        "description": "expressive",
                                        "gender": "female",
                                        "use_case": "social media"
                                    },
                                    "description": "A warm, expressive voice with a touch of humor.",
                                    "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
                                    "available_for_tiers": [
                                        "creator",
                                        "enterprise"
                                    ],
                                    "settings": {
                                        "stability": 1,
                                        "use_speaker_boost": true,
                                        "similarity_boost": 1,
                                        "style": 0,
                                        "speed": 1
                                    },
                                    "sharing": {
                                        "status": "enabled",
                                        "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                        "date_unix": 1714204800,
                                        "whitelisted_emails": [
                                            "example@example.com"
                                        ],
                                        "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                        "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                        "financial_rewards_enabled": true,
                                        "free_users_allowed": true,
                                        "live_moderation_enabled": true,
                                        "rate": 0.05,
                                        "notice_period": 30,
                                        "disable_at_unix": 1714204800,
                                        "voice_mixing_allowed": false,
                                        "featured": true,
                                        "category": "professional",
                                        "reader_app_enabled": true,
                                        "liked_by_count": 100,
                                        "cloned_by_count": 50,
                                        "name": "Rachel",
                                        "description": "A female voice with a soft and friendly tone.",
                                        "labels": {
                                            "accent": "American",
                                            "gender": "female"
                                        },
                                        "review_status": "allowed",
                                        "enabled_in_library": true,
                                        "moderation_check": {
                                            "date_checked_unix": 1714204800,
                                            "name_value": "Rachel",
                                            "name_check": true,
                                            "description_value": "A female voice with a soft and friendly tone.",
                                            "description_check": true,
                                            "sample_ids": [
                                                "sample1",
                                                "sample2"
                                            ],
                                            "sample_checks": [
                                                0.95,
                                                0.98
                                            ],
                                            "captcha_ids": [
                                                "captcha1",
                                                "captcha2"
                                            ],
                                            "captcha_checks": [
                                                0.95,
                                                0.98
                                            ]
                                        },
                                        "reader_restricted_on": [
                                            {
                                                "resource_type": "read",
                                                "resource_id": "FCwhRBWXzGAHq8TQ4Fs18"
                                            }
                                        ]
                                    },
                                    "high_quality_base_model_ids": [
                                        "eleven_v2_flash",
                                        "eleven_flash_v2",
                                        "eleven_turbo_v2_5",
                                        "eleven_multilingual_v2",
                                        "eleven_v2_5_flash",
                                        "eleven_flash_v2_5",
                                        "eleven_turbo_v2"
                                    ],
                                    "verified_languages": [
                                        {
                                            "language": "en",
                                            "model_id": "eleven_turbo_v2_5",
                                            "accent": "American"
                                        }
                                    ],
                                    "voice_verification": {
                                        "requires_verification": false,
                                        "is_verified": true,
                                        "verification_failures": [],
                                        "verification_attempts_count": 0,
                                        "language": "en",
                                        "verification_attempts": [
                                            {
                                                "text": "Hello, how are you?",
                                                "date_unix": 1714204800,
                                                "accepted": true,
                                                "similarity": 0.95,
                                                "levenshtein_distance": 2,
                                                "recording": {
                                                    "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                                                    "mime_type": "audio/mpeg",
                                                    "size_bytes": 1000000,
                                                    "upload_date_unix": 1714204800,
                                                    "transcription": "Hello, how are you?"
                                                }
                                            }
                                        ]
                                    },
                                    "is_owner": false,
                                    "is_legacy": false,
                                    "is_mixed": false
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Create a voice from previously generated voice preview. This endpoint should be called after you fetched a generated_voice_id using POST /v1/text-to-voice/design or POST /v1/text-to-voice/:voice_id/remix.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_textToVoice.create",
                    "name": "Create A New Voice From Voice Preview",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/text-to-voice"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "VoiceResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/text-to-voice",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "voice_name": "Sassy squeaky mouse",
                                "voice_description": "A sassy squeaky mouse",
                                "generated_voice_id": "37HceQefKmEi3bGovXjL"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "voice_name": "Sassy squeaky mouse",
                                    "voice_description": "A sassy squeaky mouse",
                                    "generated_voice_id": "37HceQefKmEi3bGovXjL"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voice_id": "21m00Tcm4TlvDq8ikWAM",
                                "name": "Rachel",
                                "category": "professional",
                                "fine_tuning": {
                                    "is_allowed_to_fine_tune": true,
                                    "state": {
                                        "eleven_multilingual_v2": "fine_tuned"
                                    },
                                    "verification_failures": [],
                                    "verification_attempts_count": 2,
                                    "manual_verification_requested": false
                                },
                                "labels": {
                                    "accent": "American",
                                    "age": "middle-aged",
                                    "description": "expressive",
                                    "gender": "female",
                                    "use_case": "social media"
                                },
                                "description": "A warm, expressive voice with a touch of humor.",
                                "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
                                "available_for_tiers": [
                                    "creator",
                                    "enterprise"
                                ],
                                "settings": {
                                    "stability": 1,
                                    "use_speaker_boost": true,
                                    "similarity_boost": 1,
                                    "style": 0,
                                    "speed": 1
                                },
                                "sharing": {
                                    "status": "enabled",
                                    "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "date_unix": 1714204800,
                                    "whitelisted_emails": [
                                        "example@example.com"
                                    ],
                                    "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "financial_rewards_enabled": true,
                                    "free_users_allowed": true,
                                    "live_moderation_enabled": true,
                                    "rate": 0.05,
                                    "notice_period": 30,
                                    "disable_at_unix": 1714204800,
                                    "voice_mixing_allowed": false,
                                    "featured": true,
                                    "category": "professional",
                                    "reader_app_enabled": true,
                                    "liked_by_count": 100,
                                    "cloned_by_count": 50,
                                    "name": "Rachel",
                                    "description": "A female voice with a soft and friendly tone.",
                                    "labels": {
                                        "accent": "American",
                                        "gender": "female"
                                    },
                                    "review_status": "allowed",
                                    "enabled_in_library": true,
                                    "moderation_check": {
                                        "date_checked_unix": 1714204800,
                                        "name_value": "Rachel",
                                        "name_check": true,
                                        "description_value": "A female voice with a soft and friendly tone.",
                                        "description_check": true,
                                        "sample_ids": [
                                            "sample1",
                                            "sample2"
                                        ],
                                        "sample_checks": [
                                            0.95,
                                            0.98
                                        ],
                                        "captcha_ids": [
                                            "captcha1",
                                            "captcha2"
                                        ],
                                        "captcha_checks": [
                                            0.95,
                                            0.98
                                        ]
                                    },
                                    "reader_restricted_on": [
                                        {
                                            "resource_type": "read",
                                            "resource_id": "FCwhRBWXzGAHq8TQ4Fs18"
                                        }
                                    ]
                                },
                                "high_quality_base_model_ids": [
                                    "eleven_v2_flash",
                                    "eleven_flash_v2",
                                    "eleven_turbo_v2_5",
                                    "eleven_multilingual_v2",
                                    "eleven_v2_5_flash",
                                    "eleven_flash_v2_5",
                                    "eleven_turbo_v2"
                                ],
                                "verified_languages": [
                                    {
                                        "language": "en",
                                        "model_id": "eleven_turbo_v2_5",
                                        "accent": "American"
                                    }
                                ],
                                "voice_verification": {
                                    "requires_verification": false,
                                    "is_verified": true,
                                    "verification_failures": [],
                                    "verification_attempts_count": 0,
                                    "language": "en",
                                    "verification_attempts": [
                                        {
                                            "text": "Hello, how are you?",
                                            "date_unix": 1714204800,
                                            "accepted": true,
                                            "similarity": 0.95,
                                            "levenshtein_distance": 2,
                                            "recording": {
                                                "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                                                "mime_type": "audio/mpeg",
                                                "size_bytes": 1000000,
                                                "upload_date_unix": 1714204800,
                                                "transcription": "Hello, how are you?"
                                            }
                                        }
                                    ]
                                },
                                "is_owner": false,
                                "is_legacy": false,
                                "is_mixed": false
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voice_id": "21m00Tcm4TlvDq8ikWAM",
                                    "name": "Rachel",
                                    "category": "professional",
                                    "fine_tuning": {
                                        "is_allowed_to_fine_tune": true,
                                        "state": {
                                            "eleven_multilingual_v2": "fine_tuned"
                                        },
                                        "verification_failures": [],
                                        "verification_attempts_count": 2,
                                        "manual_verification_requested": false
                                    },
                                    "labels": {
                                        "accent": "American",
                                        "age": "middle-aged",
                                        "description": "expressive",
                                        "gender": "female",
                                        "use_case": "social media"
                                    },
                                    "description": "A warm, expressive voice with a touch of humor.",
                                    "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
                                    "available_for_tiers": [
                                        "creator",
                                        "enterprise"
                                    ],
                                    "settings": {
                                        "stability": 1,
                                        "use_speaker_boost": true,
                                        "similarity_boost": 1,
                                        "style": 0,
                                        "speed": 1
                                    },
                                    "sharing": {
                                        "status": "enabled",
                                        "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                        "date_unix": 1714204800,
                                        "whitelisted_emails": [
                                            "example@example.com"
                                        ],
                                        "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                        "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                        "financial_rewards_enabled": true,
                                        "free_users_allowed": true,
                                        "live_moderation_enabled": true,
                                        "rate": 0.05,
                                        "notice_period": 30,
                                        "disable_at_unix": 1714204800,
                                        "voice_mixing_allowed": false,
                                        "featured": true,
                                        "category": "professional",
                                        "reader_app_enabled": true,
                                        "liked_by_count": 100,
                                        "cloned_by_count": 50,
                                        "name": "Rachel",
                                        "description": "A female voice with a soft and friendly tone.",
                                        "labels": {
                                            "accent": "American",
                                            "gender": "female"
                                        },
                                        "review_status": "allowed",
                                        "enabled_in_library": true,
                                        "moderation_check": {
                                            "date_checked_unix": 1714204800,
                                            "name_value": "Rachel",
                                            "name_check": true,
                                            "description_value": "A female voice with a soft and friendly tone.",
                                            "description_check": true,
                                            "sample_ids": [
                                                "sample1",
                                                "sample2"
                                            ],
                                            "sample_checks": [
                                                0.95,
                                                0.98
                                            ],
                                            "captcha_ids": [
                                                "captcha1",
                                                "captcha2"
                                            ],
                                            "captcha_checks": [
                                                0.95,
                                                0.98
                                            ]
                                        },
                                        "reader_restricted_on": [
                                            {
                                                "resource_type": "read",
                                                "resource_id": "FCwhRBWXzGAHq8TQ4Fs18"
                                            }
                                        ]
                                    },
                                    "high_quality_base_model_ids": [
                                        "eleven_v2_flash",
                                        "eleven_flash_v2",
                                        "eleven_turbo_v2_5",
                                        "eleven_multilingual_v2",
                                        "eleven_v2_5_flash",
                                        "eleven_flash_v2_5",
                                        "eleven_turbo_v2"
                                    ],
                                    "verified_languages": [
                                        {
                                            "language": "en",
                                            "model_id": "eleven_turbo_v2_5",
                                            "accent": "American"
                                        }
                                    ],
                                    "voice_verification": {
                                        "requires_verification": false,
                                        "is_verified": true,
                                        "verification_failures": [],
                                        "verification_attempts_count": 0,
                                        "language": "en",
                                        "verification_attempts": [
                                            {
                                                "text": "Hello, how are you?",
                                                "date_unix": 1714204800,
                                                "accepted": true,
                                                "similarity": 0.95,
                                                "levenshtein_distance": 2,
                                                "recording": {
                                                    "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                                                    "mime_type": "audio/mpeg",
                                                    "size_bytes": 1000000,
                                                    "upload_date_unix": 1714204800,
                                                    "transcription": "Hello, how are you?"
                                                }
                                            }
                                        ]
                                    },
                                    "is_owner": false,
                                    "is_legacy": false,
                                    "is_mixed": false
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Design a voice via a prompt. This method returns a list of voice previews. Each preview has a generated_voice_id and a sample of the voice as base64 encoded mp3 audio. To create a voice use the generated_voice_id of the preferred preview with the /v1/text-to-voice endpoint.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "design",
                    "originalEndpointId": "endpoint_textToVoice.design",
                    "name": "Design A Voice.",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/text-to-voice/design"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
                            "key": "output_format",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1TextToVoiceDesignPostParametersOutputFormat"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "VoiceDesignRequestModel"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "VoicePreviewsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/text-to-voice/design",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "voice_description": "A sassy squeaky mouse"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "voice_description": "A sassy squeaky mouse"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "previews": [
                                    {
                                        "audio_base_64": "foo",
                                        "generated_voice_id": "foo",
                                        "media_type": "foo",
                                        "duration_secs": 42
                                    }
                                ],
                                "text": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "previews": [
                                        {
                                            "audio_base_64": "foo",
                                            "generated_voice_id": "foo",
                                            "media_type": "foo",
                                            "duration_secs": 42
                                        }
                                    ],
                                    "text": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_user": {
            "subpackageId": "subpackage_user",
            "displayName": "User",
            "name": "user",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Gets information about the user",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_user.get",
                    "name": "Get user",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/user"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "UserResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/user",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "user_id": "1234567890",
                                "subscription": {
                                    "tier": "trial",
                                    "character_count": 17231,
                                    "character_limit": 100000,
                                    "max_character_limit_extension": 42,
                                    "can_extend_character_limit": false,
                                    "allowed_to_extend_character_limit": false,
                                    "next_character_count_reset_unix": 1738356858,
                                    "voice_slots_used": 1,
                                    "professional_voice_slots_used": 0,
                                    "voice_limit": 120,
                                    "max_voice_add_edits": 230,
                                    "voice_add_edit_counter": 212,
                                    "professional_voice_limit": 1,
                                    "can_extend_voice_limit": false,
                                    "can_use_instant_voice_cloning": true,
                                    "can_use_professional_voice_cloning": true,
                                    "currency": "usd",
                                    "status": "free",
                                    "billing_period": "monthly_period",
                                    "character_refresh_period": "monthly_period"
                                },
                                "subscription_extras": {
                                    "concurrency": 10,
                                    "convai_concurrency": 10,
                                    "convai_chars_per_minute": 1000,
                                    "convai_asr_chars_per_minute": 1000,
                                    "force_logging_disabled": false,
                                    "can_request_manual_pro_voice_verification": true,
                                    "can_bypass_voice_captcha": true,
                                    "moderation": {
                                        "is_in_probation": false,
                                        "enterprise_check_nogo_voice": false,
                                        "enterprise_check_block_nogo_voice": false,
                                        "never_live_moderate": false,
                                        "nogo_voice_similar_voice_upload_count": 0,
                                        "enterprise_background_moderation_enabled": false,
                                        "on_watchlist": false
                                    },
                                    "unused_characters_rolled_over_from_previous_period": 1000,
                                    "overused_characters_rolled_over_from_previous_period": 1000,
                                    "usage": {
                                        "rollover_credits_quota": 1000,
                                        "subscription_cycle_credits_quota": 1000,
                                        "manually_gifted_credits_quota": 1000,
                                        "rollover_credits_used": 1000,
                                        "subscription_cycle_credits_used": 1000,
                                        "manually_gifted_credits_used": 1000,
                                        "paid_usage_based_credits_used": 1000,
                                        "actual_reported_credits": 1000
                                    }
                                },
                                "is_new_user": false,
                                "xi_api_key": "8so27l7327189x0h939ekx293380l920",
                                "can_use_delayed_payment_methods": true,
                                "is_onboarding_completed": true,
                                "is_onboarding_checklist_completed": true,
                                "first_name": "John",
                                "is_api_key_hashed": false
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "user_id": "1234567890",
                                    "subscription": {
                                        "tier": "trial",
                                        "character_count": 17231,
                                        "character_limit": 100000,
                                        "max_character_limit_extension": 42,
                                        "can_extend_character_limit": false,
                                        "allowed_to_extend_character_limit": false,
                                        "next_character_count_reset_unix": 1738356858,
                                        "voice_slots_used": 1,
                                        "professional_voice_slots_used": 0,
                                        "voice_limit": 120,
                                        "max_voice_add_edits": 230,
                                        "voice_add_edit_counter": 212,
                                        "professional_voice_limit": 1,
                                        "can_extend_voice_limit": false,
                                        "can_use_instant_voice_cloning": true,
                                        "can_use_professional_voice_cloning": true,
                                        "currency": "usd",
                                        "status": "free",
                                        "billing_period": "monthly_period",
                                        "character_refresh_period": "monthly_period"
                                    },
                                    "subscription_extras": {
                                        "concurrency": 10,
                                        "convai_concurrency": 10,
                                        "convai_chars_per_minute": 1000,
                                        "convai_asr_chars_per_minute": 1000,
                                        "force_logging_disabled": false,
                                        "can_request_manual_pro_voice_verification": true,
                                        "can_bypass_voice_captcha": true,
                                        "moderation": {
                                            "is_in_probation": false,
                                            "enterprise_check_nogo_voice": false,
                                            "enterprise_check_block_nogo_voice": false,
                                            "never_live_moderate": false,
                                            "nogo_voice_similar_voice_upload_count": 0,
                                            "enterprise_background_moderation_enabled": false,
                                            "on_watchlist": false
                                        },
                                        "unused_characters_rolled_over_from_previous_period": 1000,
                                        "overused_characters_rolled_over_from_previous_period": 1000,
                                        "usage": {
                                            "rollover_credits_quota": 1000,
                                            "subscription_cycle_credits_quota": 1000,
                                            "manually_gifted_credits_quota": 1000,
                                            "rollover_credits_used": 1000,
                                            "subscription_cycle_credits_used": 1000,
                                            "manually_gifted_credits_used": 1000,
                                            "paid_usage_based_credits_used": 1000,
                                            "actual_reported_credits": 1000
                                        }
                                    },
                                    "is_new_user": false,
                                    "xi_api_key": "8so27l7327189x0h939ekx293380l920",
                                    "can_use_delayed_payment_methods": true,
                                    "is_onboarding_completed": true,
                                    "is_onboarding_checklist_completed": true,
                                    "first_name": "John",
                                    "is_api_key_hashed": false
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_user/subscription"
            ]
        },
        "subpackage_user/subscription": {
            "subpackageId": "subpackage_user/subscription",
            "name": "subscription",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Gets extended information about the users subscription",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_user/subscription.get",
                    "name": "Get user subscription",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/user/subscription"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ExtendedSubscriptionResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/user/subscription",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "tier": "foo",
                                "character_count": 42,
                                "character_limit": 42,
                                "max_character_limit_extension": 42,
                                "can_extend_character_limit": true,
                                "allowed_to_extend_character_limit": true,
                                "voice_slots_used": 42,
                                "professional_voice_slots_used": 42,
                                "voice_limit": 42,
                                "voice_add_edit_counter": 42,
                                "professional_voice_limit": 42,
                                "can_extend_voice_limit": true,
                                "can_use_instant_voice_cloning": true,
                                "can_use_professional_voice_cloning": true,
                                "status": "trialing",
                                "next_invoice": {
                                    "amount_due_cents": 1000,
                                    "next_payment_attempt_unix": 1738356858
                                },
                                "has_open_invoices": false
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "tier": "foo",
                                    "character_count": 42,
                                    "character_limit": 42,
                                    "max_character_limit_extension": 42,
                                    "can_extend_character_limit": true,
                                    "allowed_to_extend_character_limit": true,
                                    "voice_slots_used": 42,
                                    "professional_voice_slots_used": 42,
                                    "voice_limit": 42,
                                    "voice_add_edit_counter": 42,
                                    "professional_voice_limit": 42,
                                    "can_extend_voice_limit": true,
                                    "can_use_instant_voice_cloning": true,
                                    "can_use_professional_voice_cloning": true,
                                    "status": "trialing",
                                    "next_invoice": {
                                        "amount_due_cents": 1000,
                                        "next_payment_attempt_unix": 1738356858
                                    },
                                    "has_open_invoices": false
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_voices/settings": {
            "subpackageId": "subpackage_voices/settings",
            "name": "settings",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Gets the default settings for voices. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get_default",
                    "originalEndpointId": "endpoint_voices/settings.get_default",
                    "name": "Get default voice settings",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/settings/default"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "VoiceSettingsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/settings/default",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "stability": 1,
                                "use_speaker_boost": true,
                                "similarity_boost": 1,
                                "style": 0,
                                "speed": 1
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "stability": 1,
                                    "use_speaker_boost": true,
                                    "similarity_boost": 1,
                                    "style": 0,
                                    "speed": 1
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Returns the settings for a specific voice. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_voices/settings.get",
                    "name": "Get voice settings",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/settings"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "VoiceSettingsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/voice_id/settings",
                            "pathParameters": {
                                "voice_id": "voice_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "stability": 1,
                                "use_speaker_boost": true,
                                "similarity_boost": 1,
                                "style": 0,
                                "speed": 1
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "stability": 1,
                                    "use_speaker_boost": true,
                                    "similarity_boost": 1,
                                    "style": 0,
                                    "speed": 1
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Edit your settings for a specific voice. \"similarity_boost\" corresponds to \"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_voices/settings.update",
                    "name": "Edit voice settings",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/search) endpoint list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/settings/edit"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "VoiceSettingsResponseModel"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "EditVoiceSettingsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/voice_id/settings/edit",
                            "pathParameters": {
                                "voice_id": "voice_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "stability": 1,
                                "use_speaker_boost": true,
                                "similarity_boost": 1,
                                "style": 0,
                                "speed": 1
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "stability": 1,
                                    "use_speaker_boost": true,
                                    "similarity_boost": 1,
                                    "style": 0,
                                    "speed": 1
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_voices/ivc": {
            "subpackageId": "subpackage_voices/ivc",
            "name": "ivc",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Create a voice clone and add it to your Voices",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_voices/ivc.create",
                    "name": "Create voice clone",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/add"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "voices_ivc_create_Request",
                                "properties": [
                                    {
                                        "type": "bodyProperty",
                                        "key": "name",
                                        "valueType": {
                                            "type": "primitive",
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "fileArray",
                                            "key": "files",
                                            "isOptional": false,
                                            "contentType": "multipart/form-data",
                                            "description": "A list of file paths to audio recordings intended for voice cloning."
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "remove_background_noise",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "description",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "A description of the voice.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "labels",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Serialized labels dictionary for the voice.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddVoiceIVCResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/add",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "name": "John Smith",
                                "files": [
                                    "foo"
                                ]
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "name": {
                                        "type": "json",
                                        "value": "John Smith"
                                    },
                                    "files": {
                                        "type": "filenames",
                                        "value": [
                                            "foo"
                                        ]
                                    },
                                    "remove_background_noise": {
                                        "type": "json"
                                    },
                                    "description": {
                                        "type": "json"
                                    },
                                    "labels": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voice_id": "c38kUX8pkfYO2kHyqfFy",
                                "requires_verification": false
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voice_id": "c38kUX8pkfYO2kHyqfFy",
                                    "requires_verification": false
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_studio": {
            "subpackageId": "subpackage_studio",
            "displayName": "studio",
            "name": "studio",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Create and auto-convert a podcast project. Currently, the LLM cost is covered by us but you will still be charged for the audio generation. In the future, you will be charged for both the LLM and audio generation costs.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create_podcast",
                    "originalEndpointId": "endpoint_studio.create_podcast",
                    "name": "Create Podcast",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/podcasts"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Create_podcast_v1_studio_podcasts_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "PodcastProjectResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/podcasts",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "model_id": "eleven_multilingual_v2",
                                "mode": {
                                    "type": "foo",
                                    "conversation": {
                                        "host_voice_id": "foo",
                                        "guest_voice_id": "foo"
                                    }
                                },
                                "source": {
                                    "type": "foo",
                                    "text": "foo"
                                }
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "model_id": "eleven_multilingual_v2",
                                    "mode": {
                                        "type": "foo",
                                        "conversation": {
                                            "host_voice_id": "foo",
                                            "guest_voice_id": "foo"
                                        }
                                    },
                                    "source": {
                                        "type": "foo",
                                        "text": "foo"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "project": {
                                    "project_id": "foo",
                                    "name": "foo",
                                    "create_date_unix": 42,
                                    "default_title_voice_id": "foo",
                                    "default_paragraph_voice_id": "foo",
                                    "default_model_id": "foo",
                                    "last_conversion_date_unix": 42,
                                    "can_be_downloaded": true,
                                    "title": "foo",
                                    "author": "foo",
                                    "description": "foo",
                                    "genres": [
                                        "foo"
                                    ],
                                    "cover_image_url": "foo",
                                    "target_audience": "children",
                                    "language": "foo",
                                    "content_type": "foo",
                                    "original_publication_date": "foo",
                                    "mature_content": true,
                                    "isbn_number": "foo",
                                    "volume_normalization": true,
                                    "state": "creating",
                                    "access_level": "admin",
                                    "fiction": "fiction",
                                    "quality_check_on": true,
                                    "quality_check_on_when_bulk_convert": true,
                                    "creation_meta": {
                                        "creation_progress": 42,
                                        "status": "pending",
                                        "type": "blank"
                                    },
                                    "source_type": "blank",
                                    "chapters_enabled": true
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "project": {
                                        "project_id": "foo",
                                        "name": "foo",
                                        "create_date_unix": 42,
                                        "default_title_voice_id": "foo",
                                        "default_paragraph_voice_id": "foo",
                                        "default_model_id": "foo",
                                        "last_conversion_date_unix": 42,
                                        "can_be_downloaded": true,
                                        "title": "foo",
                                        "author": "foo",
                                        "description": "foo",
                                        "genres": [
                                            "foo"
                                        ],
                                        "cover_image_url": "foo",
                                        "target_audience": "children",
                                        "language": "foo",
                                        "content_type": "foo",
                                        "original_publication_date": "foo",
                                        "mature_content": true,
                                        "isbn_number": "foo",
                                        "volume_normalization": true,
                                        "state": "creating",
                                        "access_level": "admin",
                                        "fiction": "fiction",
                                        "quality_check_on": true,
                                        "quality_check_on_when_bulk_convert": true,
                                        "creation_meta": {
                                            "creation_progress": 42,
                                            "status": "pending",
                                            "type": "blank"
                                        },
                                        "source_type": "blank",
                                        "chapters_enabled": true
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_studio/projects"
            ]
        },
        "subpackage_studio/projects": {
            "subpackageId": "subpackage_studio/projects",
            "name": "projects",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Returns a list of your Studio projects with metadata.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_studio/projects.list",
                    "name": "List Studio Projects",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetProjectsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "projects": [
                                    {
                                        "project_id": "aw1NgEzBg83R7vgmiJt6",
                                        "name": "My Project",
                                        "create_date_unix": 1714204800,
                                        "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
                                        "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
                                        "default_model_id": "eleven_multilingual_v2",
                                        "last_conversion_date_unix": 1714204800,
                                        "can_be_downloaded": true,
                                        "title": "My Project",
                                        "author": "John Doe",
                                        "description": "This is a description of my project.",
                                        "genres": [
                                            "Novel",
                                            "Short Story"
                                        ],
                                        "cover_image_url": "https://example.com/cover.jpg",
                                        "target_audience": "children",
                                        "language": "en",
                                        "content_type": "Novel",
                                        "original_publication_date": "2025-01-01",
                                        "mature_content": false,
                                        "isbn_number": "978-90-274-3964-2",
                                        "volume_normalization": true,
                                        "state": "default",
                                        "access_level": "viewer",
                                        "fiction": "fiction",
                                        "quality_check_on": false,
                                        "quality_check_on_when_bulk_convert": false,
                                        "creation_meta": {
                                            "creation_progress": 0.5,
                                            "status": "pending",
                                            "type": "blank"
                                        }
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "projects": [
                                        {
                                            "project_id": "aw1NgEzBg83R7vgmiJt6",
                                            "name": "My Project",
                                            "create_date_unix": 1714204800,
                                            "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
                                            "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
                                            "default_model_id": "eleven_multilingual_v2",
                                            "last_conversion_date_unix": 1714204800,
                                            "can_be_downloaded": true,
                                            "title": "My Project",
                                            "author": "John Doe",
                                            "description": "This is a description of my project.",
                                            "genres": [
                                                "Novel",
                                                "Short Story"
                                            ],
                                            "cover_image_url": "https://example.com/cover.jpg",
                                            "target_audience": "children",
                                            "language": "en",
                                            "content_type": "Novel",
                                            "original_publication_date": "2025-01-01",
                                            "mature_content": false,
                                            "isbn_number": "978-90-274-3964-2",
                                            "volume_normalization": true,
                                            "state": "default",
                                            "access_level": "viewer",
                                            "fiction": "fiction",
                                            "quality_check_on": false,
                                            "quality_check_on_when_bulk_convert": false,
                                            "creation_meta": {
                                                "creation_progress": 0.5,
                                                "status": "pending",
                                                "type": "blank"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Creates a new Studio project, it can be either initialized as blank, from a document or from a URL.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_studio/projects.create",
                    "name": "Create Studio Project",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "studio_projects_create_Request",
                                "properties": [
                                    {
                                        "type": "bodyProperty",
                                        "key": "name",
                                        "valueType": {
                                            "type": "primitive",
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The name of the Studio project, used for identification only.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "default_title_voice_id",
                                        "valueType": {
                                            "type": "primitive",
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The voice_id that corresponds to the default voice used for new titles.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "default_paragraph_voice_id",
                                        "valueType": {
                                            "type": "primitive",
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "default_model_id",
                                        "valueType": {
                                            "type": "primitive",
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "from_url",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "from_document",
                                            "isOptional": true,
                                            "contentType": "multipart/form-data",
                                            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank."
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "from_content_json",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional content to initialize the Studio project with. If this is set, 'from_url' and 'from_document' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "quality_preset",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "string",
                                                    "default": "standard"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "title",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "author",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "description",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional description of the Studio project.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "genres",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "list",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional list of genres associated with the Studio project.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "target_audience",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "id",
                                                    "value": "V1StudioProjectsPostRequestBodyContentMultipartFormDataSchemaTargetAudience"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional target audience of the Studio project.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "language",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string",
                                                        "minLength": 2,
                                                        "maxLength": 2
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "content_type",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional content type of the Studio project.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "original_publication_date",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string",
                                                        "regex": "^\\d{4}-\\d{2}-\\d{2}$|^\\d{4}$"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional original publication date of the Studio project, in the format YYYY-MM-DD or YYYY.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "mature_content",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "boolean",
                                                        "default": false
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional specification of whether this Studio project contains mature content.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "isbn_number",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "acx_volume_normalization",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "[Deprecated] When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "volume_normalization",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "pronunciation_dictionary_locators",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "list",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "callback_url",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "\n    A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion\n    Messages:\n    1. When project was converted successfully:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"success\",\n        project_snapshot_id: \"22m00Tcm4TlvDq8ikMAT\",\n        error_details: None,\n      }\n    }\n    2. When project conversion failed:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"error\",\n        project_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n\n    3. When chapter was converted successfully:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"success\",\n        chapter_snapshot_id: \"23m00Tcm4TlvDq8ikMAV\",\n        error_details: None,\n      }\n    }\n    4. When chapter conversion failed:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"error\",\n        chapter_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n    ",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "fiction",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "id",
                                                    "value": "V1StudioProjectsPostRequestBodyContentMultipartFormDataSchemaFiction"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional specification of whether the content of this Studio project is fiction.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "apply_text_normalization",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "id",
                                                    "value": "V1StudioProjectsPostRequestBodyContentMultipartFormDataSchemaApplyTextNormalization"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "\n    This parameter controls text normalization with four modes: 'auto', 'on', 'apply_english' and 'off'.\n    When set to 'auto', the system will automatically decide whether to apply text normalization\n    (e.g., spelling out numbers). With 'on', text normalization will always be applied, while\n    with 'off', it will be skipped. 'apply_english' is the same as 'on' but will assume that text is in English.\n    ",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "auto_convert",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Whether to auto convert the Studio project to audio or not.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "auto_assign_voices",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "boolean",
                                                        "default": false
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "[Alpha Feature] Whether automatically assign voices to phrases in the create Project.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "source_type",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "id",
                                                    "value": "V1StudioProjectsPostRequestBodyContentMultipartFormDataSchemaSourceType"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The type of Studio project to create.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddProjectResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "name": "Project 1",
                                "default_title_voice_id": "21m00Tcm4TlvDq8ikWAM",
                                "default_paragraph_voice_id": "21m00Tcm4TlvDq8ikWAM",
                                "default_model_id": "eleven_multilingual_v2"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "name": {
                                        "type": "json",
                                        "value": "Project 1"
                                    },
                                    "default_title_voice_id": {
                                        "type": "json",
                                        "value": "21m00Tcm4TlvDq8ikWAM"
                                    },
                                    "default_paragraph_voice_id": {
                                        "type": "json",
                                        "value": "21m00Tcm4TlvDq8ikWAM"
                                    },
                                    "default_model_id": {
                                        "type": "json",
                                        "value": "eleven_multilingual_v2"
                                    },
                                    "from_url": {
                                        "type": "json"
                                    },
                                    "from_document": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    },
                                    "from_content_json": {
                                        "type": "json"
                                    },
                                    "quality_preset": {
                                        "type": "json"
                                    },
                                    "title": {
                                        "type": "json"
                                    },
                                    "author": {
                                        "type": "json"
                                    },
                                    "description": {
                                        "type": "json"
                                    },
                                    "genres": {
                                        "type": "json"
                                    },
                                    "target_audience": {
                                        "type": "json"
                                    },
                                    "language": {
                                        "type": "json"
                                    },
                                    "content_type": {
                                        "type": "json"
                                    },
                                    "original_publication_date": {
                                        "type": "json"
                                    },
                                    "mature_content": {
                                        "type": "json"
                                    },
                                    "isbn_number": {
                                        "type": "json"
                                    },
                                    "acx_volume_normalization": {
                                        "type": "json"
                                    },
                                    "volume_normalization": {
                                        "type": "json"
                                    },
                                    "pronunciation_dictionary_locators": {
                                        "type": "json"
                                    },
                                    "callback_url": {
                                        "type": "json"
                                    },
                                    "fiction": {
                                        "type": "json"
                                    },
                                    "apply_text_normalization": {
                                        "type": "json"
                                    },
                                    "auto_convert": {
                                        "type": "json"
                                    },
                                    "auto_assign_voices": {
                                        "type": "json"
                                    },
                                    "source_type": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "project": {
                                    "project_id": "foo",
                                    "name": "foo",
                                    "create_date_unix": 42,
                                    "default_title_voice_id": "foo",
                                    "default_paragraph_voice_id": "foo",
                                    "default_model_id": "foo",
                                    "last_conversion_date_unix": 42,
                                    "can_be_downloaded": true,
                                    "title": "foo",
                                    "author": "foo",
                                    "description": "foo",
                                    "genres": [
                                        "foo"
                                    ],
                                    "cover_image_url": "foo",
                                    "target_audience": "children",
                                    "language": "foo",
                                    "content_type": "foo",
                                    "original_publication_date": "foo",
                                    "mature_content": true,
                                    "isbn_number": "foo",
                                    "volume_normalization": true,
                                    "state": "creating",
                                    "access_level": "admin",
                                    "fiction": "fiction",
                                    "quality_check_on": true,
                                    "quality_check_on_when_bulk_convert": true,
                                    "creation_meta": {
                                        "creation_progress": 42,
                                        "status": "pending",
                                        "type": "blank"
                                    },
                                    "source_type": "blank",
                                    "chapters_enabled": true
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "project": {
                                        "project_id": "foo",
                                        "name": "foo",
                                        "create_date_unix": 42,
                                        "default_title_voice_id": "foo",
                                        "default_paragraph_voice_id": "foo",
                                        "default_model_id": "foo",
                                        "last_conversion_date_unix": 42,
                                        "can_be_downloaded": true,
                                        "title": "foo",
                                        "author": "foo",
                                        "description": "foo",
                                        "genres": [
                                            "foo"
                                        ],
                                        "cover_image_url": "foo",
                                        "target_audience": "children",
                                        "language": "foo",
                                        "content_type": "foo",
                                        "original_publication_date": "foo",
                                        "mature_content": true,
                                        "isbn_number": "foo",
                                        "volume_normalization": true,
                                        "state": "creating",
                                        "access_level": "admin",
                                        "fiction": "fiction",
                                        "quality_check_on": true,
                                        "quality_check_on_when_bulk_convert": true,
                                        "creation_meta": {
                                            "creation_progress": 42,
                                            "status": "pending",
                                            "type": "blank"
                                        },
                                        "source_type": "blank",
                                        "chapters_enabled": true
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Returns information about a specific Studio project. This endpoint returns more detailed information about a project than `GET /v1/studio`.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_studio/projects.get",
                    "name": "Get Studio Project",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ProjectExtendedResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id",
                            "pathParameters": {
                                "project_id": "project_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "project_id": "aw1NgEzBg83R7vgmiJt6",
                                "name": "My Project",
                                "create_date_unix": 1714204800,
                                "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
                                "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
                                "default_model_id": "eleven_multilingual_v2",
                                "last_conversion_date_unix": 1714204800,
                                "can_be_downloaded": true,
                                "title": "My Project",
                                "author": "John Doe",
                                "description": "This is a description of my project.",
                                "genres": [
                                    "Novel",
                                    "Short Story"
                                ],
                                "cover_image_url": "https://example.com/cover.jpg",
                                "target_audience": "children",
                                "language": "en",
                                "content_type": "Novel",
                                "original_publication_date": "2025-01-01",
                                "mature_content": false,
                                "isbn_number": "978-90-274-3964-2",
                                "volume_normalization": true,
                                "state": "default",
                                "access_level": "viewer",
                                "fiction": "fiction",
                                "quality_check_on": false,
                                "quality_check_on_when_bulk_convert": false,
                                "creation_meta": {
                                    "creation_progress": 0.5,
                                    "status": "pending",
                                    "type": "blank"
                                },
                                "quality_preset": "standard",
                                "chapters": [
                                    {
                                        "chapter_id": "foo",
                                        "name": "foo",
                                        "last_conversion_date_unix": 42,
                                        "conversion_progress": 42,
                                        "can_be_downloaded": true,
                                        "state": "default",
                                        "statistics": {
                                            "characters_unconverted": 42,
                                            "characters_converted": 42,
                                            "paragraphs_converted": 42,
                                            "paragraphs_unconverted": 42
                                        },
                                        "last_conversion_error": "foo"
                                    }
                                ],
                                "pronunciation_dictionary_versions": [
                                    {
                                        "version_id": "foo",
                                        "version_rules_num": 42,
                                        "pronunciation_dictionary_id": "foo",
                                        "dictionary_name": "foo",
                                        "version_name": "foo",
                                        "permission_on_resource": "admin",
                                        "created_by": "foo",
                                        "creation_time_unix": 42,
                                        "archived_time_unix": 42
                                    }
                                ],
                                "pronunciation_dictionary_locators": [
                                    {
                                        "pronunciation_dictionary_id": "foo",
                                        "version_id": "foo"
                                    }
                                ],
                                "apply_text_normalization": "auto",
                                "experimental": {}
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "project_id": "aw1NgEzBg83R7vgmiJt6",
                                    "name": "My Project",
                                    "create_date_unix": 1714204800,
                                    "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
                                    "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
                                    "default_model_id": "eleven_multilingual_v2",
                                    "last_conversion_date_unix": 1714204800,
                                    "can_be_downloaded": true,
                                    "title": "My Project",
                                    "author": "John Doe",
                                    "description": "This is a description of my project.",
                                    "genres": [
                                        "Novel",
                                        "Short Story"
                                    ],
                                    "cover_image_url": "https://example.com/cover.jpg",
                                    "target_audience": "children",
                                    "language": "en",
                                    "content_type": "Novel",
                                    "original_publication_date": "2025-01-01",
                                    "mature_content": false,
                                    "isbn_number": "978-90-274-3964-2",
                                    "volume_normalization": true,
                                    "state": "default",
                                    "access_level": "viewer",
                                    "fiction": "fiction",
                                    "quality_check_on": false,
                                    "quality_check_on_when_bulk_convert": false,
                                    "creation_meta": {
                                        "creation_progress": 0.5,
                                        "status": "pending",
                                        "type": "blank"
                                    },
                                    "quality_preset": "standard",
                                    "chapters": [
                                        {
                                            "chapter_id": "foo",
                                            "name": "foo",
                                            "last_conversion_date_unix": 42,
                                            "conversion_progress": 42,
                                            "can_be_downloaded": true,
                                            "state": "default",
                                            "statistics": {
                                                "characters_unconverted": 42,
                                                "characters_converted": 42,
                                                "paragraphs_converted": 42,
                                                "paragraphs_unconverted": 42
                                            },
                                            "last_conversion_error": "foo"
                                        }
                                    ],
                                    "pronunciation_dictionary_versions": [
                                        {
                                            "version_id": "foo",
                                            "version_rules_num": 42,
                                            "pronunciation_dictionary_id": "foo",
                                            "dictionary_name": "foo",
                                            "version_name": "foo",
                                            "permission_on_resource": "admin",
                                            "created_by": "foo",
                                            "creation_time_unix": 42,
                                            "archived_time_unix": 42
                                        }
                                    ],
                                    "pronunciation_dictionary_locators": [
                                        {
                                            "pronunciation_dictionary_id": "foo",
                                            "version_id": "foo"
                                        }
                                    ],
                                    "apply_text_normalization": "auto",
                                    "experimental": {}
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Updates the specified Studio project by setting the values of the parameters passed.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_studio/projects.update",
                    "name": "Update Studio Project",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Update_Studio_project_v1_studio_projects__project_id__post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "EditProjectResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id",
                            "pathParameters": {
                                "project_id": "project_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "name": "Project 1",
                                "default_title_voice_id": "21m00Tcm4TlvDq8ikWAM",
                                "default_paragraph_voice_id": "21m00Tcm4TlvDq8ikWAM"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "name": "Project 1",
                                    "default_title_voice_id": "21m00Tcm4TlvDq8ikWAM",
                                    "default_paragraph_voice_id": "21m00Tcm4TlvDq8ikWAM"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "project": {
                                    "project_id": "foo",
                                    "name": "foo",
                                    "create_date_unix": 42,
                                    "default_title_voice_id": "foo",
                                    "default_paragraph_voice_id": "foo",
                                    "default_model_id": "foo",
                                    "last_conversion_date_unix": 42,
                                    "can_be_downloaded": true,
                                    "title": "foo",
                                    "author": "foo",
                                    "description": "foo",
                                    "genres": [
                                        "foo"
                                    ],
                                    "cover_image_url": "foo",
                                    "target_audience": "children",
                                    "language": "foo",
                                    "content_type": "foo",
                                    "original_publication_date": "foo",
                                    "mature_content": true,
                                    "isbn_number": "foo",
                                    "volume_normalization": true,
                                    "state": "creating",
                                    "access_level": "admin",
                                    "fiction": "fiction",
                                    "quality_check_on": true,
                                    "quality_check_on_when_bulk_convert": true,
                                    "creation_meta": {
                                        "creation_progress": 42,
                                        "status": "pending",
                                        "type": "blank"
                                    },
                                    "source_type": "blank",
                                    "chapters_enabled": true
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "project": {
                                        "project_id": "foo",
                                        "name": "foo",
                                        "create_date_unix": 42,
                                        "default_title_voice_id": "foo",
                                        "default_paragraph_voice_id": "foo",
                                        "default_model_id": "foo",
                                        "last_conversion_date_unix": 42,
                                        "can_be_downloaded": true,
                                        "title": "foo",
                                        "author": "foo",
                                        "description": "foo",
                                        "genres": [
                                            "foo"
                                        ],
                                        "cover_image_url": "foo",
                                        "target_audience": "children",
                                        "language": "foo",
                                        "content_type": "foo",
                                        "original_publication_date": "foo",
                                        "mature_content": true,
                                        "isbn_number": "foo",
                                        "volume_normalization": true,
                                        "state": "creating",
                                        "access_level": "admin",
                                        "fiction": "fiction",
                                        "quality_check_on": true,
                                        "quality_check_on_when_bulk_convert": true,
                                        "creation_meta": {
                                            "creation_progress": 42,
                                            "status": "pending",
                                            "type": "blank"
                                        },
                                        "source_type": "blank",
                                        "chapters_enabled": true
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Deletes a Studio project.",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_studio/projects.delete",
                    "name": "Delete Studio Project",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DeleteProjectResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id",
                            "pathParameters": {
                                "project_id": "project_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Starts conversion of a Studio project and all of its chapters.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "convert",
                    "originalEndpointId": "endpoint_studio/projects.convert",
                    "name": "Convert Studio Project",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/convert"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ConvertProjectResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/convert",
                            "pathParameters": {
                                "project_id": "project_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_studio/projects/content",
                "subpackage_studio/projects/snapshots",
                "subpackage_studio/projects/chapters",
                "subpackage_studio/projects/pronunciationDictionaries"
            ]
        },
        "subpackage_studio/projects/content": {
            "subpackageId": "subpackage_studio/projects/content",
            "name": "content",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Updates Studio project content.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_studio/projects/content.update",
                    "name": "Update Studio Project Content",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/content"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "studio_projects_content_update_Request",
                                "properties": [
                                    {
                                        "type": "bodyProperty",
                                        "key": "from_url",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "from_document",
                                            "isOptional": true,
                                            "contentType": "multipart/form-data",
                                            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank."
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "auto_convert",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Whether to auto convert the Studio project to audio or not.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "EditProjectResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/content",
                            "pathParameters": {
                                "project_id": "project_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "from_url": {
                                        "type": "json"
                                    },
                                    "from_document": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    },
                                    "auto_convert": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "project": {
                                    "project_id": "foo",
                                    "name": "foo",
                                    "create_date_unix": 42,
                                    "default_title_voice_id": "foo",
                                    "default_paragraph_voice_id": "foo",
                                    "default_model_id": "foo",
                                    "last_conversion_date_unix": 42,
                                    "can_be_downloaded": true,
                                    "title": "foo",
                                    "author": "foo",
                                    "description": "foo",
                                    "genres": [
                                        "foo"
                                    ],
                                    "cover_image_url": "foo",
                                    "target_audience": "children",
                                    "language": "foo",
                                    "content_type": "foo",
                                    "original_publication_date": "foo",
                                    "mature_content": true,
                                    "isbn_number": "foo",
                                    "volume_normalization": true,
                                    "state": "creating",
                                    "access_level": "admin",
                                    "fiction": "fiction",
                                    "quality_check_on": true,
                                    "quality_check_on_when_bulk_convert": true,
                                    "creation_meta": {
                                        "creation_progress": 42,
                                        "status": "pending",
                                        "type": "blank"
                                    },
                                    "source_type": "blank",
                                    "chapters_enabled": true
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "project": {
                                        "project_id": "foo",
                                        "name": "foo",
                                        "create_date_unix": 42,
                                        "default_title_voice_id": "foo",
                                        "default_paragraph_voice_id": "foo",
                                        "default_model_id": "foo",
                                        "last_conversion_date_unix": 42,
                                        "can_be_downloaded": true,
                                        "title": "foo",
                                        "author": "foo",
                                        "description": "foo",
                                        "genres": [
                                            "foo"
                                        ],
                                        "cover_image_url": "foo",
                                        "target_audience": "children",
                                        "language": "foo",
                                        "content_type": "foo",
                                        "original_publication_date": "foo",
                                        "mature_content": true,
                                        "isbn_number": "foo",
                                        "volume_normalization": true,
                                        "state": "creating",
                                        "access_level": "admin",
                                        "fiction": "fiction",
                                        "quality_check_on": true,
                                        "quality_check_on_when_bulk_convert": true,
                                        "creation_meta": {
                                            "creation_progress": 42,
                                            "status": "pending",
                                            "type": "blank"
                                        },
                                        "source_type": "blank",
                                        "chapters_enabled": true
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_studio/projects/snapshots": {
            "subpackageId": "subpackage_studio/projects/snapshots",
            "name": "snapshots",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Retrieves a list of snapshots for a Studio project.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_studio/projects/snapshots.list",
                    "name": "List Studio Project Snapshots",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the Studio project.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/snapshots"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ProjectSnapshotsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/snapshots",
                            "pathParameters": {
                                "project_id": "project_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "snapshots": [
                                    {
                                        "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6",
                                        "project_id": "aw1NgEzBg83R7vgmiJt6",
                                        "created_at_unix": 1714204800,
                                        "name": "My Project Snapshot"
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "snapshots": [
                                        {
                                            "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6",
                                            "project_id": "aw1NgEzBg83R7vgmiJt6",
                                            "created_at_unix": 1714204800,
                                            "name": "My Project Snapshot"
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Returns the project snapshot.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_studio/projects/snapshots.get",
                    "name": "Get Project Snapshot",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the Studio project.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The ID of the Studio project snapshot.",
                                "key": "project_snapshot_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/snapshots/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_snapshot_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ProjectSnapshotExtendedResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/snapshots/project_snapshot_id",
                            "pathParameters": {
                                "project_id": "project_id",
                                "project_snapshot_id": "project_snapshot_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6",
                                "project_id": "aw1NgEzBg83R7vgmiJt6",
                                "created_at_unix": 1714204800,
                                "name": "My Project Snapshot",
                                "character_alignments": [
                                    {
                                        "characters": [
                                            "foo"
                                        ],
                                        "character_start_times_seconds": [
                                            42
                                        ],
                                        "character_end_times_seconds": [
                                            42
                                        ]
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6",
                                    "project_id": "aw1NgEzBg83R7vgmiJt6",
                                    "created_at_unix": 1714204800,
                                    "name": "My Project Snapshot",
                                    "character_alignments": [
                                        {
                                            "characters": [
                                                "foo"
                                            ],
                                            "character_start_times_seconds": [
                                                42
                                            ],
                                            "character_end_times_seconds": [
                                                42
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Stream the audio from a Studio project snapshot.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "stream",
                    "originalEndpointId": "endpoint_studio/projects/snapshots.stream",
                    "name": "Stream Studio Project Audio",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The ID of the Studio project snapshot.",
                                "key": "project_snapshot_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/snapshots/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_snapshot_id"
                            },
                            {
                                "type": "literal",
                                "value": "/stream"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "stream",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/snapshots/project_snapshot_id/stream",
                            "pathParameters": {
                                "project_id": "project_id",
                                "project_snapshot_id": "project_snapshot_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": [
                                "foo"
                            ],
                            "responseBodyV3": {
                                "type": "stream",
                                "value": [
                                    {
                                        "type": "json",
                                        "value": "foo"
                                    }
                                ]
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Returns a compressed archive of the Studio project's audio.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "stream_archive",
                    "originalEndpointId": "endpoint_studio/projects/snapshots.stream_archive",
                    "name": "Stream Archive With Studio Project Audio",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The ID of the Studio project snapshot.",
                                "key": "project_snapshot_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/snapshots/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_snapshot_id"
                            },
                            {
                                "type": "literal",
                                "value": "/archive"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "fileDownload"
                        },
                        "statusCode": 200,
                        "description": "Streaming archive data"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/snapshots/project_snapshot_id/archive",
                            "pathParameters": {
                                "project_id": "project_id",
                                "project_snapshot_id": "project_snapshot_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_studio/projects/chapters": {
            "subpackageId": "subpackage_studio/projects/chapters",
            "name": "chapters",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Returns a list of a Studio project's chapters.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_studio/projects/chapters.list",
                    "name": "List Chapters",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the Studio project.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/chapters"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetChaptersResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/chapters",
                            "pathParameters": {
                                "project_id": "project_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "chapters": [
                                    {
                                        "chapter_id": "foo",
                                        "name": "foo",
                                        "last_conversion_date_unix": 42,
                                        "conversion_progress": 42,
                                        "can_be_downloaded": true,
                                        "state": "default",
                                        "statistics": {
                                            "characters_unconverted": 42,
                                            "characters_converted": 42,
                                            "paragraphs_converted": 42,
                                            "paragraphs_unconverted": 42
                                        },
                                        "last_conversion_error": "foo"
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "chapters": [
                                        {
                                            "chapter_id": "foo",
                                            "name": "foo",
                                            "last_conversion_date_unix": 42,
                                            "conversion_progress": 42,
                                            "can_be_downloaded": true,
                                            "state": "default",
                                            "statistics": {
                                                "characters_unconverted": 42,
                                                "characters_converted": 42,
                                                "paragraphs_converted": 42,
                                                "paragraphs_unconverted": 42
                                            },
                                            "last_conversion_error": "foo"
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Creates a new chapter either as blank or from a URL.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_studio/projects/chapters.create",
                    "name": "Create Chapter",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the Studio project.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/chapters"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Create_chapter_v1_studio_projects__project_id__chapters_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddChapterResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/chapters",
                            "pathParameters": {
                                "project_id": "project_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "name": "Chapter 1"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "name": "Chapter 1"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "chapter": {
                                    "chapter_id": "foo",
                                    "name": "foo",
                                    "last_conversion_date_unix": 42,
                                    "conversion_progress": 42,
                                    "can_be_downloaded": true,
                                    "state": "default",
                                    "statistics": {
                                        "characters_unconverted": 42,
                                        "characters_converted": 42,
                                        "paragraphs_converted": 42,
                                        "paragraphs_unconverted": 42
                                    },
                                    "last_conversion_error": "foo",
                                    "content": {
                                        "blocks": [
                                            {
                                                "block_id": "foo",
                                                "nodes": [
                                                    {
                                                        "type": "foo",
                                                        "voice_id": "foo",
                                                        "text": "foo"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "chapter": {
                                        "chapter_id": "foo",
                                        "name": "foo",
                                        "last_conversion_date_unix": 42,
                                        "conversion_progress": 42,
                                        "can_be_downloaded": true,
                                        "state": "default",
                                        "statistics": {
                                            "characters_unconverted": 42,
                                            "characters_converted": 42,
                                            "paragraphs_converted": 42,
                                            "paragraphs_unconverted": 42
                                        },
                                        "last_conversion_error": "foo",
                                        "content": {
                                            "blocks": [
                                                {
                                                    "block_id": "foo",
                                                    "nodes": [
                                                        {
                                                            "type": "foo",
                                                            "voice_id": "foo",
                                                            "text": "foo"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Returns information about a specific chapter.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_studio/projects/chapters.get",
                    "name": "Get Chapter",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.",
                                "key": "chapter_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/chapters/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "chapter_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ChapterWithContentResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/chapters/chapter_id",
                            "pathParameters": {
                                "project_id": "project_id",
                                "chapter_id": "chapter_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "chapter_id": "aw1NgEzBg83R7vgmiJt6",
                                "name": "Chapter 1",
                                "last_conversion_date_unix": 1714204800,
                                "conversion_progress": 0.5,
                                "can_be_downloaded": true,
                                "state": "converting",
                                "statistics": {
                                    "characters_unconverted": 1000,
                                    "characters_converted": 500,
                                    "paragraphs_converted": 20,
                                    "paragraphs_unconverted": 10
                                },
                                "last_conversion_error": "Error message",
                                "content": {
                                    "blocks": [
                                        {
                                            "block_id": "foo",
                                            "nodes": [
                                                {
                                                    "type": "foo",
                                                    "voice_id": "foo",
                                                    "text": "foo"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "chapter_id": "aw1NgEzBg83R7vgmiJt6",
                                    "name": "Chapter 1",
                                    "last_conversion_date_unix": 1714204800,
                                    "conversion_progress": 0.5,
                                    "can_be_downloaded": true,
                                    "state": "converting",
                                    "statistics": {
                                        "characters_unconverted": 1000,
                                        "characters_converted": 500,
                                        "paragraphs_converted": 20,
                                        "paragraphs_unconverted": 10
                                    },
                                    "last_conversion_error": "Error message",
                                    "content": {
                                        "blocks": [
                                            {
                                                "block_id": "foo",
                                                "nodes": [
                                                    {
                                                        "type": "foo",
                                                        "voice_id": "foo",
                                                        "text": "foo"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Updates a chapter.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_studio/projects/chapters.update",
                    "name": "Update Chapter",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.",
                                "key": "chapter_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/chapters/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "chapter_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "EditChapterResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/chapters/chapter_id",
                            "pathParameters": {
                                "project_id": "project_id",
                                "chapter_id": "chapter_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "chapter": {
                                    "chapter_id": "foo",
                                    "name": "foo",
                                    "last_conversion_date_unix": 42,
                                    "conversion_progress": 42,
                                    "can_be_downloaded": true,
                                    "state": "default",
                                    "statistics": {
                                        "characters_unconverted": 42,
                                        "characters_converted": 42,
                                        "paragraphs_converted": 42,
                                        "paragraphs_unconverted": 42
                                    },
                                    "last_conversion_error": "foo",
                                    "content": {
                                        "blocks": [
                                            {
                                                "block_id": "foo",
                                                "nodes": [
                                                    {
                                                        "type": "foo",
                                                        "voice_id": "foo",
                                                        "text": "foo"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "chapter": {
                                        "chapter_id": "foo",
                                        "name": "foo",
                                        "last_conversion_date_unix": 42,
                                        "conversion_progress": 42,
                                        "can_be_downloaded": true,
                                        "state": "default",
                                        "statistics": {
                                            "characters_unconverted": 42,
                                            "characters_converted": 42,
                                            "paragraphs_converted": 42,
                                            "paragraphs_unconverted": 42
                                        },
                                        "last_conversion_error": "foo",
                                        "content": {
                                            "blocks": [
                                                {
                                                    "block_id": "foo",
                                                    "nodes": [
                                                        {
                                                            "type": "foo",
                                                            "voice_id": "foo",
                                                            "text": "foo"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Deletes a chapter.",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_studio/projects/chapters.delete",
                    "name": "Delete Chapter",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.",
                                "key": "chapter_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/chapters/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "chapter_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DeleteChapterResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/chapters/chapter_id",
                            "pathParameters": {
                                "project_id": "project_id",
                                "chapter_id": "chapter_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Starts conversion of a specific chapter.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "convert",
                    "originalEndpointId": "endpoint_studio/projects/chapters.convert",
                    "name": "Convert Chapter",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.",
                                "key": "chapter_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/chapters/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "chapter_id"
                            },
                            {
                                "type": "literal",
                                "value": "/convert"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ConvertChapterResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/chapters/chapter_id/convert",
                            "pathParameters": {
                                "project_id": "project_id",
                                "chapter_id": "chapter_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_studio/projects/chapters/snapshots"
            ]
        },
        "subpackage_studio/projects/chapters/snapshots": {
            "subpackageId": "subpackage_studio/projects/chapters/snapshots",
            "name": "snapshots",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Gets information about all the snapshots of a chapter. Each snapshot can be downloaded as audio. Whenever a chapter is converted a snapshot will automatically be created.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_studio/projects/chapters/snapshots.list",
                    "name": "List Chapter Snapshots",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.",
                                "key": "chapter_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/chapters/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "chapter_id"
                            },
                            {
                                "type": "literal",
                                "value": "/snapshots"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ChapterSnapshotsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/chapters/chapter_id/snapshots",
                            "pathParameters": {
                                "project_id": "project_id",
                                "chapter_id": "chapter_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "snapshots": [
                                    {
                                        "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
                                        "project_id": "aw1NgEzBg83R7vgmiJt2",
                                        "chapter_id": "aw1NgEzBg83R7vgmiJt3",
                                        "created_at_unix": 1714204800,
                                        "name": "My Chapter Snapshot"
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "snapshots": [
                                        {
                                            "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
                                            "project_id": "aw1NgEzBg83R7vgmiJt2",
                                            "chapter_id": "aw1NgEzBg83R7vgmiJt3",
                                            "created_at_unix": 1714204800,
                                            "name": "My Chapter Snapshot"
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Returns the chapter snapshot.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_studio/projects/chapters/snapshots.get",
                    "name": "Get Chapter Snapshot",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the Studio project.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The ID of the chapter.",
                                "key": "chapter_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The ID of the chapter snapshot.",
                                "key": "chapter_snapshot_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/chapters/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "chapter_id"
                            },
                            {
                                "type": "literal",
                                "value": "/snapshots/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "chapter_snapshot_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ChapterSnapshotExtendedResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/chapters/chapter_id/snapshots/chapter_snapshot_id",
                            "pathParameters": {
                                "project_id": "project_id",
                                "chapter_id": "chapter_id",
                                "chapter_snapshot_id": "chapter_snapshot_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
                                "project_id": "aw1NgEzBg83R7vgmiJt2",
                                "chapter_id": "aw1NgEzBg83R7vgmiJt3",
                                "created_at_unix": 1714204800,
                                "name": "My Chapter Snapshot",
                                "character_alignments": [
                                    {
                                        "characters": [
                                            "foo"
                                        ],
                                        "character_start_times_seconds": [
                                            42
                                        ],
                                        "character_end_times_seconds": [
                                            42
                                        ]
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
                                    "project_id": "aw1NgEzBg83R7vgmiJt2",
                                    "chapter_id": "aw1NgEzBg83R7vgmiJt3",
                                    "created_at_unix": 1714204800,
                                    "name": "My Chapter Snapshot",
                                    "character_alignments": [
                                        {
                                            "characters": [
                                                "foo"
                                            ],
                                            "character_start_times_seconds": [
                                                42
                                            ],
                                            "character_end_times_seconds": [
                                                42
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Stream the audio from a chapter snapshot. Use `GET /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots` to return the snapshots of a chapter.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "stream",
                    "originalEndpointId": "endpoint_studio/projects/chapters/snapshots.stream",
                    "name": "Stream Chapter Audio",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.",
                                "key": "chapter_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The ID of the chapter snapshot to be used. You can use the [List project chapter snapshots](/docs/api-reference/studio/get-snapshots) endpoint to list all the available snapshots.",
                                "key": "chapter_snapshot_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/chapters/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "chapter_id"
                            },
                            {
                                "type": "literal",
                                "value": "/snapshots/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "chapter_snapshot_id"
                            },
                            {
                                "type": "literal",
                                "value": "/stream"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "stream",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        },
                        "statusCode": 200,
                        "description": "Streaming audio data"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/chapters/chapter_id/snapshots/chapter_snapshot_id/stream",
                            "pathParameters": {
                                "project_id": "project_id",
                                "chapter_id": "chapter_id",
                                "chapter_snapshot_id": "chapter_snapshot_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": [
                                "foo"
                            ],
                            "responseBodyV3": {
                                "type": "stream",
                                "value": [
                                    {
                                        "type": "json",
                                        "value": "foo"
                                    }
                                ]
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_studio/projects/pronunciationDictionaries": {
            "subpackageId": "subpackage_studio/projects/pronunciationDictionaries",
            "name": "pronunciationDictionaries",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Create a set of pronunciation dictionaries acting on a project. This will automatically mark text within this project as requiring reconverting where the new dictionary would apply or the old one no longer does.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_studio/projects/pronunciationDictionaries.create",
                    "name": "Create Pronunciation Dictionaries",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/studio/projects/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/pronunciation-dictionaries"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "CreatePronunciationDictionaryResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/studio/projects/project_id/pronunciation-dictionaries",
                            "pathParameters": {
                                "project_id": "project_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "pronunciation_dictionary_locators": [
                                    {
                                        "pronunciation_dictionary_id": "foo",
                                        "version_id": "foo"
                                    }
                                ]
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "pronunciation_dictionary_locators": [
                                        {
                                            "pronunciation_dictionary_id": "foo",
                                            "version_id": "foo"
                                        }
                                    ]
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_dubbing": {
            "subpackageId": "subpackage_dubbing",
            "displayName": "dubbing",
            "name": "dubbing",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Dubs a provided audio or video file into given language.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_dubbing.create",
                    "name": "Dub a video or audio file",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "dubbing_create_Request",
                                "properties": [
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "file",
                                            "isOptional": true,
                                            "contentType": "multipart/form-data",
                                            "description": "A list of file paths to audio recordings intended for voice cloning"
                                        }
                                    },
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "csv_file",
                                            "isOptional": true,
                                            "contentType": "multipart/form-data",
                                            "description": "CSV file containing transcription/translation metadata"
                                        }
                                    },
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "foreground_audio_file",
                                            "isOptional": true,
                                            "contentType": "multipart/form-data",
                                            "description": "For use only with csv input"
                                        }
                                    },
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "background_audio_file",
                                            "isOptional": true,
                                            "contentType": "multipart/form-data",
                                            "description": "For use only with csv input"
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "name",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Name of the dubbing project.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "source_url",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "URL of the source video/audio file.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "source_lang",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "string",
                                                    "default": "auto"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Source language.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "target_lang",
                                        "valueType": {
                                            "type": "nullable",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The Target language to dub the content into.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "num_speakers",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "integer",
                                                    "default": 0
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Number of speakers to use for the dubbing. Set to 0 to automatically detect the number of speakers",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "watermark",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Whether to apply watermark to the output video.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "start_time",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Start time of the source video/audio file.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "end_time",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "End time of the source video/audio file.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "highest_resolution",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Whether to use the highest resolution available.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "drop_background_audio",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An advanced setting. Whether to drop background audio from the final dub. This can improve dub quality where it's known that audio shouldn't have a background track such as for speeches or monologues.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "use_profanity_filter",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "[BETA] Whether transcripts should have profanities censored with the words '[censored]'",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "dubbing_studio",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Whether to prepare dub for edits in dubbing studio or edits as a dubbing resource.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "disable_voice_cloning",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "[BETA] Instead of using a voice clone in dubbing, use a similar voice from the ElevenLabs Voice Library.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "mode",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string",
                                                        "default": "automatic"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "automatic or manual. Manual mode is only supported when creating a dubbing studio project",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "csv_fps",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "double"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Frames per second to use when parsing a CSV file for dubbing. If not provided, FPS will be inferred from timecodes.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DoDubbingResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "target_lang": "foo"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "file": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    },
                                    "csv_file": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    },
                                    "foreground_audio_file": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    },
                                    "background_audio_file": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    },
                                    "name": {
                                        "type": "json"
                                    },
                                    "source_url": {
                                        "type": "json"
                                    },
                                    "source_lang": {
                                        "type": "json"
                                    },
                                    "target_lang": {
                                        "type": "json",
                                        "value": "foo"
                                    },
                                    "num_speakers": {
                                        "type": "json"
                                    },
                                    "watermark": {
                                        "type": "json"
                                    },
                                    "start_time": {
                                        "type": "json"
                                    },
                                    "end_time": {
                                        "type": "json"
                                    },
                                    "highest_resolution": {
                                        "type": "json"
                                    },
                                    "drop_background_audio": {
                                        "type": "json"
                                    },
                                    "use_profanity_filter": {
                                        "type": "json"
                                    },
                                    "dubbing_studio": {
                                        "type": "json"
                                    },
                                    "disable_voice_cloning": {
                                        "type": "json"
                                    },
                                    "mode": {
                                        "type": "json"
                                    },
                                    "csv_fps": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "dubbing_id": "21m00Tcm4TlvDq8ikWAM",
                                "expected_duration_sec": 127.5
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "dubbing_id": "21m00Tcm4TlvDq8ikWAM",
                                    "expected_duration_sec": 127.5
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Returns metadata about a dubbing project, including whether it's still in progress or not",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_dubbing.get",
                    "name": "Get dubbing",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DubbingMetadataResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/dubbing_id",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "dubbing_id": "21m00Tcm4TlvDq8ikWAM",
                                "name": "My Dubbing Project",
                                "status": "dubbed",
                                "target_languages": [
                                    "es",
                                    "fr",
                                    "de"
                                ],
                                "media_metadata": {
                                    "content_type": "video/mp4",
                                    "duration": 127.5
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "dubbing_id": "21m00Tcm4TlvDq8ikWAM",
                                    "name": "My Dubbing Project",
                                    "status": "dubbed",
                                    "target_languages": [
                                        "es",
                                        "fr",
                                        "de"
                                    ],
                                    "media_metadata": {
                                        "content_type": "video/mp4",
                                        "duration": 127.5
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Deletes a dubbing project.",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_dubbing.delete",
                    "name": "Delete dubbing",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DeleteDubbingResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/dubbing_id",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_dubbing/resource",
                "subpackage_dubbing/audio",
                "subpackage_dubbing/transcript"
            ]
        },
        "subpackage_dubbing/resource": {
            "subpackageId": "subpackage_dubbing/resource",
            "name": "resource",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Given a dubbing ID generated from the '/v1/dubbing' endpoint with studio enabled, returns the dubbing resource.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_dubbing/resource.get",
                    "name": "Get dubbing resource",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/resource/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DubbingResource"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/resource/dubbing_id",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "version": 42,
                                "source_language": "foo",
                                "target_languages": [
                                    "foo"
                                ],
                                "input": {
                                    "src": "foo",
                                    "content_type": "foo",
                                    "bucket_name": "foo",
                                    "random_path_slug": "foo",
                                    "duration_secs": 42,
                                    "is_audio": true,
                                    "url": "foo"
                                },
                                "background": {
                                    "src": "foo",
                                    "content_type": "foo",
                                    "bucket_name": "foo",
                                    "random_path_slug": "foo",
                                    "duration_secs": 42,
                                    "is_audio": true,
                                    "url": "foo"
                                },
                                "foreground": {
                                    "src": "foo",
                                    "content_type": "foo",
                                    "bucket_name": "foo",
                                    "random_path_slug": "foo",
                                    "duration_secs": 42,
                                    "is_audio": true,
                                    "url": "foo"
                                },
                                "speaker_tracks": {},
                                "speaker_segments": {},
                                "renders": {}
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "version": 42,
                                    "source_language": "foo",
                                    "target_languages": [
                                        "foo"
                                    ],
                                    "input": {
                                        "src": "foo",
                                        "content_type": "foo",
                                        "bucket_name": "foo",
                                        "random_path_slug": "foo",
                                        "duration_secs": 42,
                                        "is_audio": true,
                                        "url": "foo"
                                    },
                                    "background": {
                                        "src": "foo",
                                        "content_type": "foo",
                                        "bucket_name": "foo",
                                        "random_path_slug": "foo",
                                        "duration_secs": 42,
                                        "is_audio": true,
                                        "url": "foo"
                                    },
                                    "foreground": {
                                        "src": "foo",
                                        "content_type": "foo",
                                        "bucket_name": "foo",
                                        "random_path_slug": "foo",
                                        "duration_secs": 42,
                                        "is_audio": true,
                                        "url": "foo"
                                    },
                                    "speaker_tracks": {},
                                    "speaker_segments": {},
                                    "renders": {}
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Regenerate the transcriptions for the specified segments. Does not automatically regenerate translations or dubs.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "transcribe",
                    "originalEndpointId": "endpoint_dubbing/resource.transcribe",
                    "name": "Transcribe segments",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/resource/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": "/transcribe"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "SegmentTranscriptionResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/resource/dubbing_id/transcribe",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "segments": [
                                    "foo"
                                ]
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "segments": [
                                        "foo"
                                    ]
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "version": 42
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "version": 42
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Regenerate the translations for either the entire resource or the specified segments/languages. Will automatically transcribe missing transcriptions. Will not automatically regenerate the dubs.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "translate",
                    "originalEndpointId": "endpoint_dubbing/resource.translate",
                    "name": "Translate segments",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/resource/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": "/translate"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "SegmentTranslationResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/resource/dubbing_id/translate",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "segments": [
                                    "foo"
                                ],
                                "languages": [
                                    "foo"
                                ]
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "segments": [
                                        "foo"
                                    ],
                                    "languages": [
                                        "foo"
                                    ]
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "version": 42
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "version": 42
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Regenerate the dubs for either the entire resource or the specified segments/languages. Will automatically transcribe and translate any missing transcriptions and translations.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "dub",
                    "originalEndpointId": "endpoint_dubbing/resource.dub",
                    "name": "Dub segments",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/resource/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": "/dub"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "SegmentDubResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/resource/dubbing_id/dub",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "segments": [
                                    "foo"
                                ],
                                "languages": [
                                    "foo"
                                ]
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "segments": [
                                        "foo"
                                    ],
                                    "languages": [
                                        "foo"
                                    ]
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "version": 42
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "version": 42
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Regenerate the output media for a language using the latest Studio state. Please ensure all segments have been dubbed before rendering, otherwise they will be omitted. Renders are generated asynchronously, and to check the status of all renders please use the 'Get Dubbing Resource' endpoint.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "render",
                    "originalEndpointId": "endpoint_dubbing/resource.render",
                    "name": "Render Audio Or Video For The Given Language",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "Render this language",
                                "key": "language",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/resource/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": "/render/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "language"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DubbingRenderResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/resource/dubbing_id/render/language",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id",
                                "language": "language"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "render_type": "mp4"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "render_type": "mp4"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "version": 42,
                                "render_id": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "version": 42,
                                    "render_id": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_dubbing/resource/language",
                "subpackage_dubbing/resource/speaker",
                "subpackage_dubbing/resource/segment"
            ]
        },
        "subpackage_dubbing/resource/language": {
            "subpackageId": "subpackage_dubbing/resource/language",
            "name": "language",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Adds the given ElevenLab Turbo V2/V2.5 language code to the resource. Does not automatically generate transcripts/translations/audio.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "add",
                    "originalEndpointId": "endpoint_dubbing/resource/language.add",
                    "name": "Add language to dubbing resource",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/resource/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": "/language"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "LanguageAddedResponse"
                            }
                        },
                        "statusCode": 201,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/resource/dubbing_id/language",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "language": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "language": "foo"
                                }
                            },
                            "responseStatusCode": 201,
                            "responseBody": {
                                "version": 42
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "version": 42
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_dubbing/resource/speaker": {
            "subpackageId": "subpackage_dubbing/resource/speaker",
            "name": "speaker",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Amend the metadata associated with a speaker, such as their voice. Both voice cloning and using voices from the ElevenLabs library are supported.",
                    "method": "PATCH",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_dubbing/resource/speaker.update",
                    "name": "Update Metadata For A Speaker",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "ID of the speaker.",
                                "key": "speaker_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/resource/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": "/speaker/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "speaker_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Update_metadata_for_a_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__patch"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "SpeakerUpdatedResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/resource/dubbing_id/speaker/speaker_id",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id",
                                "speaker_id": "speaker_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "version": 42
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "version": 42
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Fetch the top 10 similar voices to a speaker, including the voice IDs, names, descriptions, and, where possible, a sample audio recording.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "find_similar_voices",
                    "originalEndpointId": "endpoint_dubbing/resource/speaker.find_similar_voices",
                    "name": "Search The Elevenlabs Library For Voices Similar To A Speaker.",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "ID of the speaker.",
                                "key": "speaker_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/resource/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": "/speaker/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "speaker_id"
                            },
                            {
                                "type": "literal",
                                "value": "/similar-voices"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "SimilarVoicesForSpeakerResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/resource/dubbing_id/speaker/speaker_id/similar-voices",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id",
                                "speaker_id": "speaker_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voices": [
                                    {
                                        "voice_id": "foo",
                                        "name": "foo",
                                        "category": "premade",
                                        "description": "foo",
                                        "preview_url": "foo"
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voices": [
                                        {
                                            "voice_id": "foo",
                                            "name": "foo",
                                            "category": "premade",
                                            "description": "foo",
                                            "preview_url": "foo"
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_dubbing/resource/speaker/segment"
            ]
        },
        "subpackage_dubbing/resource/speaker/segment": {
            "subpackageId": "subpackage_dubbing/resource/speaker/segment",
            "name": "segment",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Creates a new segment in dubbing resource with a start and end time for the speaker in every available language. Does not automatically generate transcripts/translations/audio.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_dubbing/resource/speaker/segment.create",
                    "name": "Add speaker segment to dubbing resource",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "ID of the speaker.",
                                "key": "speaker_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/resource/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": "/speaker/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "speaker_id"
                            },
                            {
                                "type": "literal",
                                "value": "/segment"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "SegmentCreatePayload"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "SegmentCreateResponse"
                            }
                        },
                        "statusCode": 201,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/resource/dubbing_id/speaker/speaker_id/segment",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id",
                                "speaker_id": "speaker_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "start_time": 42,
                                "end_time": 42
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "start_time": 42,
                                    "end_time": 42
                                }
                            },
                            "responseStatusCode": 201,
                            "responseBody": {
                                "version": 42,
                                "new_segment": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "version": 42,
                                    "new_segment": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_dubbing/resource/segment": {
            "subpackageId": "subpackage_dubbing/resource/segment",
            "name": "segment",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Modifies a single segment with new text and/or start/end times. Will update the values for only a specific language of a segment. Does not automatically regenerate the dub.",
                    "method": "PATCH",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_dubbing/resource/segment.update",
                    "name": "Modify a segment",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "ID of the segment",
                                "key": "segment_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "ID of the language.",
                                "key": "language",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/resource/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": "/segment/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "segment_id"
                            },
                            {
                                "type": "literal",
                                "value": "/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "language"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "SegmentUpdatePayload"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "SegmentUpdateResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/resource/dubbing_id/segment/segment_id/language",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id",
                                "segment_id": "segment_id",
                                "language": "language"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "version": 42
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "version": 42
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Deletes a single segment from the dubbing.",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_dubbing/resource/segment.delete",
                    "name": "Delete a segment",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "ID of the segment",
                                "key": "segment_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/resource/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": "/segment/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "segment_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "SegmentDeleteResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/resource/dubbing_id/segment/segment_id",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id",
                                "segment_id": "segment_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "version": 42
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "version": 42
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_dubbing/audio": {
            "subpackageId": "subpackage_dubbing/audio",
            "name": "audio",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Returns dub as a streamed MP3 or MP4 file. If this dub has been edited using Dubbing Studio you need to use the resource render endpoint as this endpoint only returns the original automatic dub result.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_dubbing/audio.get",
                    "name": "Get dubbed audio",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "ID of the language.",
                                "key": "language_code",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": "/audio/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "language_code"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "fileDownload"
                        },
                        "statusCode": 200,
                        "description": "The dubbed audio or video file"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/dubbing_id/audio/language_code",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id",
                                "language_code": "language_code"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_dubbing/transcript": {
            "subpackageId": "subpackage_dubbing/transcript",
            "name": "transcript",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Returns transcript for the dub as an SRT or WEBVTT file.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get_transcript_for_dub",
                    "originalEndpointId": "endpoint_dubbing/transcript.get_transcript_for_dub",
                    "name": "Get dubbed transcript",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the dubbing project.",
                                "key": "dubbing_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "ID of the language.",
                                "key": "language_code",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/dubbing/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dubbing_id"
                            },
                            {
                                "type": "literal",
                                "value": "/transcript/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "language_code"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Format to use for the subtitle file, either 'srt' or 'webvtt'",
                            "key": "format_type",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1DubbingDubbingIdTranscriptLanguageCodeGetParametersFormatType"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "statusCode": 200,
                        "type": {
                            "type": "object",
                            "extends": [],
                            "properties": []
                        }
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/dubbing/dubbing_id/transcript/language_code",
                            "pathParameters": {
                                "dubbing_id": "dubbing_id",
                                "language_code": "language_code"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": "1\n00:00:01,000 --> 00:00:04,000\nHello, this is the first subtitle line\n\n2\n00:00:05,000 --> 00:00:07,000\nAnd here's the second subtitle line",
                            "responseBodyV3": {
                                "type": "json",
                                "value": "1\n00:00:01,000 --> 00:00:04,000\nHello, this is the first subtitle line\n\n2\n00:00:05,000 --> 00:00:07,000\nAnd here's the second subtitle line"
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_models": {
            "subpackageId": "subpackage_models",
            "displayName": "Models",
            "name": "models",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Gets a list of available models.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_models.list",
                    "name": "List models",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/models"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "ModelResponseModel"
                                }
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/models",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": [
                                {
                                    "model_id": "foo",
                                    "name": "foo",
                                    "can_be_finetuned": true,
                                    "can_do_text_to_speech": true,
                                    "can_do_voice_conversion": true,
                                    "can_use_style": true,
                                    "can_use_speaker_boost": true,
                                    "serves_pro_voices": true,
                                    "token_cost_factor": 42,
                                    "description": "foo",
                                    "requires_alpha_access": true,
                                    "max_characters_request_free_user": 42,
                                    "max_characters_request_subscribed_user": 42,
                                    "maximum_text_length_per_request": 42,
                                    "languages": [
                                        {
                                            "language_id": "foo",
                                            "name": "foo"
                                        }
                                    ],
                                    "model_rates": {
                                        "character_cost_multiplier": 42
                                    },
                                    "concurrency_group": "standard"
                                }
                            ],
                            "responseBodyV3": {
                                "type": "json",
                                "value": [
                                    {
                                        "model_id": "foo",
                                        "name": "foo",
                                        "can_be_finetuned": true,
                                        "can_do_text_to_speech": true,
                                        "can_do_voice_conversion": true,
                                        "can_use_style": true,
                                        "can_use_speaker_boost": true,
                                        "serves_pro_voices": true,
                                        "token_cost_factor": 42,
                                        "description": "foo",
                                        "requires_alpha_access": true,
                                        "max_characters_request_free_user": 42,
                                        "max_characters_request_subscribed_user": 42,
                                        "maximum_text_length_per_request": 42,
                                        "languages": [
                                            {
                                                "language_id": "foo",
                                                "name": "foo"
                                            }
                                        ],
                                        "model_rates": {
                                            "character_cost_multiplier": 42
                                        },
                                        "concurrency_group": "standard"
                                    }
                                ]
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_audioNative": {
            "subpackageId": "subpackage_audioNative",
            "name": "audioNative",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Creates Audio Native enabled project, optionally starts conversion and returns project ID and embeddable HTML snippet.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_audioNative.create",
                    "name": "Create audio native project",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/audio-native"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "audio_native_create_Request",
                                "properties": [
                                    {
                                        "type": "bodyProperty",
                                        "key": "name",
                                        "valueType": {
                                            "type": "primitive",
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Project name.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "image",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "(Deprecated) Image URL used in the player. If not provided, default image set in the Player settings is used.",
                                        "availability": "Deprecated",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "author",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Author used in the player and inserted at the start of the uploaded article. If not provided, the default author set in the Player settings is used.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "title",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Title used in the player and inserted at the top of the uploaded article. If not provided, the default title set in the Player settings is used.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "small",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "(Deprecated) Whether to use small player or not. If not provided, default value set in the Player settings is used.",
                                        "availability": "Deprecated",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "text_color",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Text color used in the player. If not provided, default text color set in the Player settings is used.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "background_color",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Background color used in the player. If not provided, default background color set in the Player settings is used.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "sessionization",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "integer",
                                                    "default": 0
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "(Deprecated) Specifies for how many minutes to persist the session across page reloads. If not provided, default sessionization set in the Player settings is used.",
                                        "availability": "Deprecated",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "voice_id",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Voice ID used to voice the content. If not provided, default voice ID set in the Player settings is used.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "model_id",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "TTS Model ID used in the player. If not provided, default model ID set in the Player settings is used.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "file",
                                            "isOptional": true,
                                            "contentType": "multipart/form-data",
                                            "description": "Either txt or HTML input file containing the article content. HTML should be formatted as follows '&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;Your content&lt;/p&gt;&lt;h3&gt;More of your content&lt;/h3&gt;&lt;p&gt;Some more of your content&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'"
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "auto_convert",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Whether to auto convert the project to audio or not.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AudioNativeCreateProjectResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/audio-native",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "name": "foo"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "name": {
                                        "type": "json",
                                        "value": "foo"
                                    },
                                    "image": {
                                        "type": "json"
                                    },
                                    "author": {
                                        "type": "json"
                                    },
                                    "title": {
                                        "type": "json"
                                    },
                                    "small": {
                                        "type": "json"
                                    },
                                    "text_color": {
                                        "type": "json"
                                    },
                                    "background_color": {
                                        "type": "json"
                                    },
                                    "sessionization": {
                                        "type": "json"
                                    },
                                    "voice_id": {
                                        "type": "json"
                                    },
                                    "model_id": {
                                        "type": "json"
                                    },
                                    "file": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    },
                                    "auto_convert": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "project_id": "JBFqnCBsd6RMkjVDRZzb",
                                "converting": false,
                                "html_snippet": "<div id='audio-native-player'></div>"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "project_id": "JBFqnCBsd6RMkjVDRZzb",
                                    "converting": false,
                                    "html_snippet": "<div id='audio-native-player'></div>"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get player settings for the specific project.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get_settings",
                    "originalEndpointId": "endpoint_audioNative.get_settings",
                    "name": "Get Audio Native Project Settings",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the Studio project.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/audio-native/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/settings"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetAudioNativeProjectSettingsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/audio-native/project_id/settings",
                            "pathParameters": {
                                "project_id": "project_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "enabled": true,
                                "snapshot_id": "JBFqnCBsd6RMkjVDRZzb",
                                "settings": {
                                    "title": "My Project",
                                    "image": "https://example.com/image.jpg",
                                    "author": "John Doe",
                                    "small": false,
                                    "text_color": "#000000",
                                    "background_color": "#FFFFFF",
                                    "sessionization": 1,
                                    "audio_path": "audio/my_project.mp3",
                                    "audio_url": "https://example.com/audio/my_project.mp3",
                                    "status": "ready"
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "enabled": true,
                                    "snapshot_id": "JBFqnCBsd6RMkjVDRZzb",
                                    "settings": {
                                        "title": "My Project",
                                        "image": "https://example.com/image.jpg",
                                        "author": "John Doe",
                                        "small": false,
                                        "text_color": "#000000",
                                        "background_color": "#FFFFFF",
                                        "sessionization": 1,
                                        "audio_path": "audio/my_project.mp3",
                                        "audio_url": "https://example.com/audio/my_project.mp3",
                                        "status": "ready"
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Updates content for the specific AudioNative Project.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_audioNative.update",
                    "name": "Update audio native project",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.",
                                "key": "project_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/audio-native/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "project_id"
                            },
                            {
                                "type": "literal",
                                "value": "/content"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "audio_native_update_Request",
                                "properties": [
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "file",
                                            "isOptional": true,
                                            "contentType": "multipart/form-data",
                                            "description": "Either txt or HTML input file containing the article content. HTML should be formatted as follows '&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;Your content&lt;/p&gt;&lt;h5&gt;More of your content&lt;/h5&gt;&lt;p&gt;Some more of your content&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'"
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "auto_convert",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Whether to auto convert the project to audio or not.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "auto_publish",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Whether to auto publish the new project snapshot after it's converted.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AudioNativeEditContentResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/audio-native/project_id/content",
                            "pathParameters": {
                                "project_id": "project_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "file": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    },
                                    "auto_convert": {
                                        "type": "json"
                                    },
                                    "auto_publish": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "project_id": "JBFqnCBsd6RMkjVDRZzb",
                                "converting": false,
                                "publishing": false,
                                "html_snippet": "<div id='audio-native-player'></div>"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "project_id": "JBFqnCBsd6RMkjVDRZzb",
                                    "converting": false,
                                    "publishing": false,
                                    "html_snippet": "<div id='audio-native-player'></div>"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_usage": {
            "subpackageId": "subpackage_usage",
            "displayName": "Usage",
            "name": "usage",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Returns the usage metrics for the current user or the entire workspace they are part of. The response provides a time axis based on the specified aggregation interval (default: day), with usage values for each interval along that axis. Usage is broken down by the selected breakdown type. For example, breakdown type \"voice\" will return the usage of each voice for each interval along the time axis.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_usage.get",
                    "name": "Get character usage metrics",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/usage/character-stats"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "UTC Unix timestamp for the start of the usage window, in milliseconds. To include the first day of the window, the timestamp should be at 00:00:00 of that day.",
                            "key": "start_unix",
                            "type": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        },
                        {
                            "description": "UTC Unix timestamp for the end of the usage window, in milliseconds. To include the last day of the window, the timestamp should be at 23:59:59 of that day.",
                            "key": "end_unix",
                            "type": {
                                "type": "primitive",
                                "value": {
                                    "type": "integer"
                                }
                            }
                        },
                        {
                            "description": "Whether or not to include the statistics of the entire workspace.",
                            "key": "include_workspace_metrics",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        },
                        {
                            "description": "How to break down the information. Cannot be \"user\" if include_workspace_metrics is False.",
                            "key": "breakdown_type",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "BreakdownTypes"
                                }
                            }
                        },
                        {
                            "description": "How to aggregate usage data over time. Can be \"hour\", \"day\", \"week\", \"month\", or \"cumulative\".",
                            "key": "aggregation_interval",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "UsageAggregationInterval"
                                }
                            }
                        },
                        {
                            "description": "Which metric to aggregate.",
                            "key": "metric",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "MetricType"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "UsageCharactersResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/usage/character-stats",
                            "pathParameters": {},
                            "queryParameters": {
                                "start_unix": "1685574000",
                                "end_unix": "1688165999"
                            },
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "time": [
                                    1738252091000,
                                    1739404800000
                                ],
                                "usage": {
                                    "All": [
                                        49,
                                        1053
                                    ]
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "time": [
                                        1738252091000,
                                        1739404800000
                                    ],
                                    "usage": {
                                        "All": [
                                            49,
                                            1053
                                        ]
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_pronunciationDictionaries": {
            "subpackageId": "subpackage_pronunciationDictionaries",
            "name": "pronunciationDictionaries",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Creates a new pronunciation dictionary from a lexicon .PLS file",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create_from_file",
                    "originalEndpointId": "endpoint_pronunciationDictionaries.create_from_file",
                    "name": "Create a pronunciation dictionary from a file",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/pronunciation-dictionaries/add-from-file"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "pronunciation_dictionaries_create_from_file_Request",
                                "properties": [
                                    {
                                        "type": "bodyProperty",
                                        "key": "name",
                                        "valueType": {
                                            "type": "primitive",
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The name of the pronunciation dictionary, used for identification only.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "file",
                                            "isOptional": true,
                                            "contentType": "multipart/form-data",
                                            "description": "A lexicon .pls file which we will use to initialize the project with."
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "description",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "A description of the pronunciation dictionary, used for identification only.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "workspace_access",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "id",
                                                    "value": "V1PronunciationDictionariesAddFromFilePostRequestBodyContentMultipartFormDataSchemaWorkspaceAccess"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Should be one of 'admin', 'editor' or 'viewer'. If not provided, defaults to no access.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddPronunciationDictionaryResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/pronunciation-dictionaries/add-from-file",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "name": "My Dictionary"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "name": {
                                        "type": "json",
                                        "value": "My Dictionary"
                                    },
                                    "file": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    },
                                    "description": {
                                        "type": "json"
                                    },
                                    "workspace_access": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "5xM3yVvZQKV0EfqQpLrJ",
                                "name": "My Dictionary",
                                "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
                                "creation_time_unix": 1714156800,
                                "version_id": "5xM3yVvZQKV0EfqQpLrJ",
                                "version_rules_num": 42,
                                "description": "This is a test dictionary",
                                "permission_on_resource": "admin"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "5xM3yVvZQKV0EfqQpLrJ",
                                    "name": "My Dictionary",
                                    "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
                                    "creation_time_unix": 1714156800,
                                    "version_id": "5xM3yVvZQKV0EfqQpLrJ",
                                    "version_rules_num": 42,
                                    "description": "This is a test dictionary",
                                    "permission_on_resource": "admin"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Creates a new pronunciation dictionary from provided rules.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create_from_rules",
                    "originalEndpointId": "endpoint_pronunciationDictionaries.create_from_rules",
                    "name": "Create a pronunciation dictionary from rules",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/pronunciation-dictionaries/add-from-rules"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddPronunciationDictionaryResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/pronunciation-dictionaries/add-from-rules",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "rules": [
                                    {
                                        "string_to_replace": "foo",
                                        "type": "foo",
                                        "alias": "foo"
                                    }
                                ],
                                "name": "My Dictionary"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "rules": [
                                        {
                                            "string_to_replace": "foo",
                                            "type": "foo",
                                            "alias": "foo"
                                        }
                                    ],
                                    "name": "My Dictionary"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "5xM3yVvZQKV0EfqQpLrJ",
                                "name": "My Dictionary",
                                "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
                                "creation_time_unix": 1714156800,
                                "version_id": "5xM3yVvZQKV0EfqQpLrJ",
                                "version_rules_num": 42,
                                "description": "This is a test dictionary",
                                "permission_on_resource": "admin"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "5xM3yVvZQKV0EfqQpLrJ",
                                    "name": "My Dictionary",
                                    "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
                                    "creation_time_unix": 1714156800,
                                    "version_id": "5xM3yVvZQKV0EfqQpLrJ",
                                    "version_rules_num": 42,
                                    "description": "This is a test dictionary",
                                    "permission_on_resource": "admin"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get a PLS file with a pronunciation dictionary version rules",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "download",
                    "originalEndpointId": "endpoint_pronunciationDictionaries.download",
                    "name": "Get pronunciation dictionary by version",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of the pronunciation dictionary",
                                "key": "dictionary_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The id of the version of the pronunciation dictionary",
                                "key": "version_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/pronunciation-dictionaries/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "dictionary_id"
                            },
                            {
                                "type": "literal",
                                "value": "/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "version_id"
                            },
                            {
                                "type": "literal",
                                "value": "/download"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "fileDownload"
                        },
                        "statusCode": 200,
                        "description": "The PLS file containing pronunciation dictionary rules"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/pronunciation-dictionaries/dictionary_id/version_id/download",
                            "pathParameters": {
                                "dictionary_id": "dictionary_id",
                                "version_id": "version_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get metadata for a pronunciation dictionary",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_pronunciationDictionaries.get",
                    "name": "Get pronunciation dictionary",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of the pronunciation dictionary",
                                "key": "pronunciation_dictionary_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/pronunciation-dictionaries/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "pronunciation_dictionary_id"
                            },
                            {
                                "type": "literal",
                                "value": "/"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetPronunciationDictionaryMetadataResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/pronunciation-dictionaries/pronunciation_dictionary_id/",
                            "pathParameters": {
                                "pronunciation_dictionary_id": "pronunciation_dictionary_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "5xM3yVvZQKV0EfqQpLrJ",
                                "latest_version_id": "5xM3yVvZQKV0EfqQpLr2",
                                "latest_version_rules_num": 2,
                                "name": "My Dictionary",
                                "permission_on_resource": "admin",
                                "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
                                "creation_time_unix": 1714156800,
                                "archived_time_unix": 42,
                                "description": "This is a test dictionary"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "5xM3yVvZQKV0EfqQpLrJ",
                                    "latest_version_id": "5xM3yVvZQKV0EfqQpLr2",
                                    "latest_version_rules_num": 2,
                                    "name": "My Dictionary",
                                    "permission_on_resource": "admin",
                                    "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
                                    "creation_time_unix": 1714156800,
                                    "archived_time_unix": 42,
                                    "description": "This is a test dictionary"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get a list of the pronunciation dictionaries you have access to and their metadata",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_pronunciationDictionaries.list",
                    "name": "List pronunciation dictionaries",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/pronunciation-dictionaries/"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Used for fetching next page. Cursor is returned in the response.",
                            "key": "cursor",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "How many pronunciation dictionaries to return at maximum. Can not exceed 100, defaults to 30.",
                            "key": "page_size",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 100,
                                        "default": 30
                                    }
                                }
                            }
                        },
                        {
                            "description": "Which field to sort by, one of 'created_at_unix' or 'name'.",
                            "key": "sort",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "id",
                                        "value": "V1PronunciationDictionariesGetParametersSortSchema"
                                    }
                                }
                            }
                        },
                        {
                            "description": "Which direction to sort the voices in. 'ascending' or 'descending'.",
                            "key": "sort_direction",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string",
                                            "default": "DESCENDING"
                                        }
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetPronunciationDictionariesMetadataResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/pronunciation-dictionaries/",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "pronunciation_dictionaries": [
                                    {
                                        "id": "foo",
                                        "latest_version_id": "foo",
                                        "latest_version_rules_num": 42,
                                        "name": "foo",
                                        "permission_on_resource": "admin",
                                        "created_by": "foo",
                                        "creation_time_unix": 42,
                                        "archived_time_unix": 42,
                                        "description": "foo"
                                    }
                                ],
                                "next_cursor": "5xM3yVvZQKV0EfqQpLr2",
                                "has_more": false
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "pronunciation_dictionaries": [
                                        {
                                            "id": "foo",
                                            "latest_version_id": "foo",
                                            "latest_version_rules_num": 42,
                                            "name": "foo",
                                            "permission_on_resource": "admin",
                                            "created_by": "foo",
                                            "creation_time_unix": 42,
                                            "archived_time_unix": 42,
                                            "description": "foo"
                                        }
                                    ],
                                    "next_cursor": "5xM3yVvZQKV0EfqQpLr2",
                                    "has_more": false
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_pronunciationDictionaries/rules"
            ]
        },
        "subpackage_pronunciationDictionaries/rules": {
            "subpackageId": "subpackage_pronunciationDictionaries/rules",
            "name": "rules",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Add rules to the pronunciation dictionary",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "add",
                    "originalEndpointId": "endpoint_pronunciationDictionaries/rules.add",
                    "name": "Add pronunciation dictionary rules",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of the pronunciation dictionary",
                                "key": "pronunciation_dictionary_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/pronunciation-dictionaries/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "pronunciation_dictionary_id"
                            },
                            {
                                "type": "literal",
                                "value": "/add-rules"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "PronunciationDictionaryRulesResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/pronunciation-dictionaries/pronunciation_dictionary_id/add-rules",
                            "pathParameters": {
                                "pronunciation_dictionary_id": "pronunciation_dictionary_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "rules": [
                                    {
                                        "string_to_replace": "foo",
                                        "type": "foo",
                                        "alias": "foo"
                                    }
                                ]
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "rules": [
                                        {
                                            "string_to_replace": "foo",
                                            "type": "foo",
                                            "alias": "foo"
                                        }
                                    ]
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "5xM3yVvZQKV0EfqQpLrJ",
                                "version_id": "5xM3yVvZQKV0EfqQpLr2",
                                "version_rules_num": 42
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "5xM3yVvZQKV0EfqQpLrJ",
                                    "version_id": "5xM3yVvZQKV0EfqQpLr2",
                                    "version_rules_num": 42
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Remove rules from the pronunciation dictionary",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "remove",
                    "originalEndpointId": "endpoint_pronunciationDictionaries/rules.remove",
                    "name": "Remove pronunciation dictionary rules",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of the pronunciation dictionary",
                                "key": "pronunciation_dictionary_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/pronunciation-dictionaries/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "pronunciation_dictionary_id"
                            },
                            {
                                "type": "literal",
                                "value": "/remove-rules"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "PronunciationDictionaryRulesResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/pronunciation-dictionaries/pronunciation_dictionary_id/remove-rules",
                            "pathParameters": {
                                "pronunciation_dictionary_id": "pronunciation_dictionary_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "rule_strings": [
                                    "foo"
                                ]
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "rule_strings": [
                                        "foo"
                                    ]
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "5xM3yVvZQKV0EfqQpLrJ",
                                "version_id": "5xM3yVvZQKV0EfqQpLr2",
                                "version_rules_num": 42
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "5xM3yVvZQKV0EfqQpLrJ",
                                    "version_id": "5xM3yVvZQKV0EfqQpLr2",
                                    "version_rules_num": 42
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_workspace": {
            "subpackageId": "subpackage_workspace",
            "name": "workspace",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Update user auto provisioning settings for the workspace.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update_user_auto_provisioning_v1_workspace_user_auto_provisioning_post",
                    "originalEndpointId": "endpoint_workspace.update_user_auto_provisioning_v1_workspace_user_auto_provisioning_post",
                    "name": "Update User Auto Provisioning",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/user-auto-provisioning"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_update_user_auto_provisioning_v1_workspace_user_auto_provisioning_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "unknown"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/user-auto-provisioning",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "enabled": true
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "enabled": true
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get the user's default sharing preferences.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get_default_sharing_preferences_v1_workspace_default_sharing_preferences_get",
                    "originalEndpointId": "endpoint_workspace.get_default_sharing_preferences_v1_workspace_default_sharing_preferences_get",
                    "name": "Get Default Sharing Preferences",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/default-sharing-preferences"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DefaultSharingPreferencesResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/default-sharing-preferences",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "default_sharing_groups": [
                                    {
                                        "name": "foo",
                                        "id": "foo",
                                        "members": [
                                            "foo"
                                        ],
                                        "permissions": [
                                            "text_to_speech"
                                        ]
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "default_sharing_groups": [
                                        {
                                            "name": "foo",
                                            "id": "foo",
                                            "members": [
                                                "foo"
                                            ],
                                            "permissions": [
                                                "text_to_speech"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Update the user's default sharing preferences.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update_default_sharing_preferences_v1_workspace_default_sharing_preferences_post",
                    "originalEndpointId": "endpoint_workspace.update_default_sharing_preferences_v1_workspace_default_sharing_preferences_post",
                    "name": "Update Default Sharing Preferences",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/default-sharing-preferences"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_update_default_sharing_preferences_v1_workspace_default_sharing_preferences_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "unknown"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/default-sharing-preferences",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "default_sharing_groups": [
                                    "foo"
                                ]
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "default_sharing_groups": [
                                        "foo"
                                    ]
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get the share options for a workspace.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get_share_options_v1_workspace_share_options_get",
                    "originalEndpointId": "endpoint_workspace.get_share_options_v1_workspace_share_options_get",
                    "name": "Get Share Options",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/share-options"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "ShareOptionResponseModel"
                                }
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/share-options",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": [
                                {
                                    "name": "foo",
                                    "id": "foo",
                                    "type": "user"
                                }
                            ],
                            "responseBodyV3": {
                                "type": "json",
                                "value": [
                                    {
                                        "name": "foo",
                                        "id": "foo",
                                        "type": "user"
                                    }
                                ]
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_workspace/groups",
                "subpackage_workspace/invites",
                "subpackage_workspace/members",
                "subpackage_workspace/resources"
            ]
        },
        "subpackage_workspace/groups": {
            "subpackageId": "subpackage_workspace/groups",
            "name": "groups",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Searches for user groups in the workspace. Multiple or no groups may be returned.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "search",
                    "originalEndpointId": "endpoint_workspace/groups.search",
                    "name": "Search user group",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/groups/search"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Name of the target group.",
                            "key": "name",
                            "type": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "WorkspaceGroupByNameResponseModel"
                                }
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/groups/search",
                            "pathParameters": {},
                            "queryParameters": {
                                "name": "name"
                            },
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": [
                                {
                                    "name": "foo",
                                    "id": "foo",
                                    "members_emails": [
                                        "foo"
                                    ]
                                }
                            ],
                            "responseBodyV3": {
                                "type": "json",
                                "value": [
                                    {
                                        "name": "foo",
                                        "id": "foo",
                                        "members_emails": [
                                            "foo"
                                        ]
                                    }
                                ]
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_workspace/groups/members"
            ]
        },
        "subpackage_workspace/groups/members": {
            "subpackageId": "subpackage_workspace/groups/members",
            "name": "members",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Removes a member from the specified group. This endpoint may only be called by workspace administrators.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "remove",
                    "originalEndpointId": "endpoint_workspace/groups/members.remove",
                    "name": "Remove member from user group",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the target group.",
                                "key": "group_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/groups/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "group_id"
                            },
                            {
                                "type": "literal",
                                "value": "/members/remove"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DeleteWorkspaceGroupMemberResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/groups/group_id/members/remove",
                            "pathParameters": {
                                "group_id": "group_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "email": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "email": "foo"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Adds a member of your workspace to the specified group. This endpoint may only be called by workspace administrators.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "add",
                    "originalEndpointId": "endpoint_workspace/groups/members.add",
                    "name": "Add member to user group",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the target group.",
                                "key": "group_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/groups/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "group_id"
                            },
                            {
                                "type": "literal",
                                "value": "/members"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddWorkspaceGroupMemberResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/groups/group_id/members",
                            "pathParameters": {
                                "group_id": "group_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "email": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "email": "foo"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_workspace/invites": {
            "subpackageId": "subpackage_workspace/invites",
            "name": "invites",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Sends an email invitation to join your workspace to the provided email. If the user doesn't have an account they will be prompted to create one. If the user accepts this invite they will be added as a user to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators. If the user is already in the workspace a 400 error will be returned.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_workspace/invites.create",
                    "name": "Invite user",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/invites/add"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Invite_user_v1_workspace_invites_add_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddWorkspaceInviteResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/invites/add",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "email": "john.doe@testmail.com"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "email": "john.doe@testmail.com"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Sends email invitations to join your workspace to the provided emails. Requires all email addresses to be part of a verified domain. If the users don't have an account they will be prompted to create one. If the users accept these invites they will be added as users to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create_batch",
                    "originalEndpointId": "endpoint_workspace/invites.create_batch",
                    "name": "Invite Multiple Users",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/invites/add-bulk"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddWorkspaceInviteResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/invites/add-bulk",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "emails": [
                                    "foo"
                                ]
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "emails": [
                                        "foo"
                                    ]
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Invalidates an existing email invitation. The invitation will still show up in the inbox it has been delivered to, but activating it to join the workspace won't work. This endpoint may only be called by workspace administrators.",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_workspace/invites.delete",
                    "name": "Delete invite",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/invites"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Delete_existing_invitation_v1_workspace_invites_delete"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DeleteWorkspaceInviteResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/invites",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "email": "john.doe@testmail.com"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "email": "john.doe@testmail.com"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_workspace/members": {
            "subpackageId": "subpackage_workspace/members",
            "name": "members",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Updates attributes of a workspace member. Apart from the email identifier, all parameters will remain unchanged unless specified. This endpoint may only be called by workspace administrators.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_workspace/members.update",
                    "name": "Update member",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/members"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Update_member_v1_workspace_members_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "UpdateWorkspaceMemberResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/members",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "email": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "email": "foo"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Deletes a workspace member. This endpoint may only be called by workspace administrators.",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_workspace/members.delete",
                    "name": "Delete Member",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/members"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Delete_member_v1_workspace_members_delete"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DeleteWorkspaceMemberResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/members",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "email": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "email": "foo"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_workspace/resources": {
            "subpackageId": "subpackage_workspace/resources",
            "name": "resources",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Gets the metadata of a resource by ID.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_workspace/resources.get",
                    "name": "Get Resource",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the target resource.",
                                "key": "resource_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/resources/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "resource_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Resource type of the target resource.",
                            "key": "resource_type",
                            "type": {
                                "type": "id",
                                "value": "WorkspaceResourceType"
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ResourceMetadataResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/resources/resource_id",
                            "pathParameters": {
                                "resource_id": "resource_id"
                            },
                            "queryParameters": {
                                "resource_type": "voice"
                            },
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "resource_id": "4ZUqyldxf71HqUbcP2Lc",
                                "resource_type": "voice",
                                "creator_user_id": "5zavrE1kZXv2lFw9BKgEkf0B5Wqo",
                                "role_to_group_ids": {
                                    "admin": [
                                        "5zavrE1kZXv2lFw9BKgEkf0B5Wqo"
                                    ],
                                    "editor": [
                                        "8ruQDGM2R4w1mFbHI5aROCUjIpJZ"
                                    ],
                                    "viewer": []
                                },
                                "share_options": [
                                    {
                                        "name": "user@example.com",
                                        "id": "i2YYI6huwBmcgYydAXARmQJc3pmX",
                                        "type": "user"
                                    },
                                    {
                                        "name": "mygroup",
                                        "id": "x1AfvYKAmiqxCnbvZeNXHqqthJaC",
                                        "type": "group"
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "resource_id": "4ZUqyldxf71HqUbcP2Lc",
                                    "resource_type": "voice",
                                    "creator_user_id": "5zavrE1kZXv2lFw9BKgEkf0B5Wqo",
                                    "role_to_group_ids": {
                                        "admin": [
                                            "5zavrE1kZXv2lFw9BKgEkf0B5Wqo"
                                        ],
                                        "editor": [
                                            "8ruQDGM2R4w1mFbHI5aROCUjIpJZ"
                                        ],
                                        "viewer": []
                                    },
                                    "share_options": [
                                        {
                                            "name": "user@example.com",
                                            "id": "i2YYI6huwBmcgYydAXARmQJc3pmX",
                                            "type": "user"
                                        },
                                        {
                                            "name": "mygroup",
                                            "id": "x1AfvYKAmiqxCnbvZeNXHqqthJaC",
                                            "type": "group"
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Grants a role on a workspace resource to a user or a group. It overrides any existing role this user/service account/group/workspace api key has on the resource. To target a user or service account, pass only the user email. The user must be in your workspace. To target a group, pass only the group id. To target a workspace api key, pass the api key id. The resource will be shared with the service account associated with the api key. You must have admin access to the resource to share it.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "share",
                    "originalEndpointId": "endpoint_workspace/resources.share",
                    "name": "Share Workspace Resource",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the target resource.",
                                "key": "resource_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/resources/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "resource_id"
                            },
                            {
                                "type": "literal",
                                "value": "/share"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Share_workspace_resource_v1_workspace_resources__resource_id__share_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "unknown"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/resources/resource_id/share",
                            "pathParameters": {
                                "resource_id": "resource_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "role": "admin",
                                "resource_type": "voice"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "role": "admin",
                                    "resource_type": "voice"
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Removes any existing role on a workspace resource from a user, service account, group or workspace api key. To target a user or service account, pass only the user email. The user must be in your workspace. To target a group, pass only the group id. To target a workspace api key, pass the api key id. The resource will be unshared from the service account associated with the api key. You must have admin access to the resource to unshare it. You cannot remove permissions from the user who created the resource.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "unshare",
                    "originalEndpointId": "endpoint_workspace/resources.unshare",
                    "name": "Unshare Workspace Resource",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The ID of the target resource.",
                                "key": "resource_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/resources/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "resource_id"
                            },
                            {
                                "type": "literal",
                                "value": "/unshare"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "unknown"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/resources/resource_id/unshare",
                            "pathParameters": {
                                "resource_id": "resource_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "resource_type": "voice"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "resource_type": "voice"
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_webhooks": {
            "subpackageId": "subpackage_webhooks",
            "name": "webhooks",
            "endpoints": [
                {
                    "auth": false,
                    "description": "List all webhooks for a workspace",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_webhooks.list",
                    "name": "List Workspace Webhooks",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/workspace/webhooks"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Whether to include active usages of the webhook, only usable by admins",
                            "key": "include_usages",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "WorkspaceWebhookListResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/workspace/webhooks",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "webhooks": [
                                    {
                                        "name": "My Webhook",
                                        "webhook_id": "123",
                                        "webhook_url": "https://elevenlabs.io/example-callback-url",
                                        "is_disabled": false,
                                        "is_auto_disabled": false,
                                        "created_at_unix": 123456789,
                                        "auth_type": "hmac",
                                        "usage": [
                                            {
                                                "usage_type": "ConvAI Agent Settings"
                                            }
                                        ],
                                        "most_recent_failure_error_code": 404,
                                        "most_recent_failure_timestamp": 123456799
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "webhooks": [
                                        {
                                            "name": "My Webhook",
                                            "webhook_id": "123",
                                            "webhook_url": "https://elevenlabs.io/example-callback-url",
                                            "is_disabled": false,
                                            "is_auto_disabled": false,
                                            "created_at_unix": 123456789,
                                            "auth_type": "hmac",
                                            "usage": [
                                                {
                                                    "usage_type": "ConvAI Agent Settings"
                                                }
                                            ],
                                            "most_recent_failure_error_code": 404,
                                            "most_recent_failure_timestamp": 123456799
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_speechToText": {
            "subpackageId": "subpackage_speechToText",
            "name": "speechToText",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Transcribe an audio or video file. If webhook is set to true, the request will be processed asynchronously and results sent to configured webhooks.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "convert",
                    "originalEndpointId": "endpoint_speechToText.convert",
                    "name": "Create transcript",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/speech-to-text"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
                            "key": "enable_logging",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "speech_to_text_convert_Request",
                                "properties": [
                                    {
                                        "type": "bodyProperty",
                                        "key": "model_id",
                                        "valueType": {
                                            "type": "primitive",
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The ID of the model to use for transcription, currently only 'scribe_v1' and 'scribe_v1_experimental' are available.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "file",
                                            "isOptional": true,
                                            "contentType": "multipart/form-data",
                                            "description": "The file to transcribe. All major audio and video formats are supported. Exactly one of the file or cloud_storage_url parameters must be provided. The file size must be less than 1GB."
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "language_code",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "An ISO-639-1 or ISO-639-3 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. Defaults to null, in this case the language is predicted automatically.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "tag_audio_events",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": true
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Whether to tag audio events like (laughter), (footsteps), etc. in the transcription.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "num_speakers",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "integer",
                                                        "minimum": 1,
                                                        "maximum": 32
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The maximum amount of speakers talking in the uploaded file. Can help with predicting who speaks when. The maximum amount of speakers that can be predicted is 32. Defaults to null, in this case the amount of speakers is set to the maximum value the model supports.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "timestamps_granularity",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "id",
                                                "value": "V1SpeechToTextPostRequestBodyContentMultipartFormDataSchemaTimestampsGranularity"
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The granularity of the timestamps in the transcription. 'word' provides word-level timestamps and 'character' provides character-level timestamps per word.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "diarize",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Whether to annotate which speaker is currently talking in the uploaded file.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "additional_formats",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "id",
                                                "value": "AdditionalFormats"
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "A list of additional formats to export the transcript to.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "file_format",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "id",
                                                "value": "V1SpeechToTextPostRequestBodyContentMultipartFormDataSchemaFileFormat"
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "cloud_storage_url",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The valid AWS S3, Cloudflare R2 or Google Cloud Storage URL of the file to transcribe. Exactly one of the file or cloud_storage_url parameters must be provided. The file must be a valid publicly accessible cloud storage URL. The file size must be less than 2GB. URL can be pre-signed.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "webhook",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Whether to send the transcription result to configured speech-to-text webhooks.  If set the request will return early without the transcription, which will be delivered later via webhook.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "temperature",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "double",
                                                        "minimum": 0,
                                                        "maximum": 2
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Controls the randomness of the transcription output. Accepts values between 0.0 and 2.0, where higher values result in more diverse and less deterministic results. If omitted, we will use a temperature based on the model you selected which is usually 0.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "SpeechToTextChunkResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Synchronous transcription result"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/speech-to-text",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "model_id": "foo"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "model_id": {
                                        "type": "json",
                                        "value": "foo"
                                    },
                                    "file": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    },
                                    "language_code": {
                                        "type": "json"
                                    },
                                    "tag_audio_events": {
                                        "type": "json"
                                    },
                                    "num_speakers": {
                                        "type": "json"
                                    },
                                    "timestamps_granularity": {
                                        "type": "json"
                                    },
                                    "diarize": {
                                        "type": "json"
                                    },
                                    "additional_formats": {
                                        "type": "json"
                                    },
                                    "file_format": {
                                        "type": "json"
                                    },
                                    "cloud_storage_url": {
                                        "type": "json"
                                    },
                                    "webhook": {
                                        "type": "json"
                                    },
                                    "temperature": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "language_code": "en",
                                "language_probability": 0.98,
                                "text": "Hello world!",
                                "words": [
                                    {
                                        "text": "Hello",
                                        "start": 0,
                                        "end": 0.5,
                                        "type": "word",
                                        "speaker_id": "speaker_1",
                                        "logprob": 42
                                    },
                                    {
                                        "text": " ",
                                        "start": 0.5,
                                        "end": 0.5,
                                        "type": "spacing",
                                        "speaker_id": "speaker_1",
                                        "logprob": 42
                                    },
                                    {
                                        "text": "world!",
                                        "start": 0.5,
                                        "end": 1.2,
                                        "type": "word",
                                        "speaker_id": "speaker_1",
                                        "logprob": 42
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "language_code": "en",
                                    "language_probability": 0.98,
                                    "text": "Hello world!",
                                    "words": [
                                        {
                                            "text": "Hello",
                                            "start": 0,
                                            "end": 0.5,
                                            "type": "word",
                                            "speaker_id": "speaker_1",
                                            "logprob": 42
                                        },
                                        {
                                            "text": " ",
                                            "start": 0.5,
                                            "end": 0.5,
                                            "type": "spacing",
                                            "speaker_id": "speaker_1",
                                            "logprob": 42
                                        },
                                        {
                                            "text": "world!",
                                            "start": 0.5,
                                            "end": 1.2,
                                            "type": "word",
                                            "speaker_id": "speaker_1",
                                            "logprob": 42
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_forcedAlignment": {
            "subpackageId": "subpackage_forcedAlignment",
            "name": "forcedAlignment",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Force align an audio file to text. Use this endpoint to get the timing information for each character and word in an audio file based on a provided text transcript.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_forcedAlignment.create",
                    "name": "Create Forced Alignment",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/forced-alignment"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "forced_alignment_create_Request",
                                "properties": [
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "file",
                                            "isOptional": false,
                                            "contentType": "multipart/form-data",
                                            "description": "The file to align. All major audio formats are supported. The file size must be less than 1GB."
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "text",
                                        "valueType": {
                                            "type": "primitive",
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "The text to align with the audio. The input text can be in any format, however diarization is not supported at this time.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "enabled_spooled_file",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "If true, the file will be streamed to the server and processed in chunks. This is useful for large files that cannot be loaded into memory. The default is false.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ForcedAlignmentResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/forced-alignment",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "file": "foo",
                                "text": "foo"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "file": {
                                        "type": "filename",
                                        "value": "foo"
                                    },
                                    "text": {
                                        "type": "json",
                                        "value": "foo"
                                    },
                                    "enabled_spooled_file": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "characters": [
                                    {
                                        "text": "foo",
                                        "start": 42,
                                        "end": 42
                                    }
                                ],
                                "words": [
                                    {
                                        "text": "foo",
                                        "start": 42,
                                        "end": 42
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "characters": [
                                        {
                                            "text": "foo",
                                            "start": 42,
                                            "end": 42
                                        }
                                    ],
                                    "words": [
                                        {
                                            "text": "foo",
                                            "start": 42,
                                            "end": 42
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi": {
            "subpackageId": "subpackage_conversationalAi",
            "name": "conversationalAi",
            "endpoints": [
                {
                    "availability": "Deprecated",
                    "auth": false,
                    "description": "Upload a file or webpage URL to create a knowledge base document. <br> <Note> After creating the document, update the agent's knowledge base by calling [Update agent](/docs/conversational-ai/api-reference/agents/update-agent). </Note>",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "add_to_knowledge_base",
                    "originalEndpointId": "endpoint_conversationalAi.add_to_knowledge_base",
                    "name": "Add To Knowledge Base",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "conversational_ai_add_to_knowledge_base_Request",
                                "properties": [
                                    {
                                        "type": "bodyProperty",
                                        "key": "name",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string",
                                                        "minLength": 1
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "A custom, human-readable name for the document.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "url",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "URL to a page of documentation that the agent will have access to in order to interact with users.",
                                        "exploded": false
                                    },
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "file",
                                            "isOptional": true,
                                            "contentType": "multipart/form-data",
                                            "description": "Documentation that the agent will have access to in order to interact with users."
                                        }
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddKnowledgeBaseResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "name": {
                                        "type": "json"
                                    },
                                    "url": {
                                        "type": "json"
                                    },
                                    "file": {
                                        "type": "filename",
                                        "value": "<file1>"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "name": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "name": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Provides information about all RAG indexes of the specified knowledgebase document.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get_document_rag_indexes",
                    "originalEndpointId": "endpoint_conversationalAi.get_document_rag_indexes",
                    "name": "Get Rag Indexes Of The Specified Knowledgebase Document.",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of a document from the knowledge base. This is returned on document addition.",
                                "key": "documentation_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "documentation_id"
                            },
                            {
                                "type": "literal",
                                "value": "/rag-index"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "RAGDocumentIndexesResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base/documentation_id/rag-index",
                            "pathParameters": {
                                "documentation_id": "documentation_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "indexes": [
                                    {
                                        "id": "foo",
                                        "model": "e5_mistral_7b_instruct",
                                        "status": "created",
                                        "progress_percentage": 42,
                                        "document_model_index_usage": {
                                            "used_bytes": 42
                                        }
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "indexes": [
                                        {
                                            "id": "foo",
                                            "model": "e5_mistral_7b_instruct",
                                            "status": "created",
                                            "progress_percentage": 42,
                                            "document_model_index_usage": {
                                                "used_bytes": 42
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Delete RAG index for the knowledgebase document.",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete_document_rag_index",
                    "originalEndpointId": "endpoint_conversationalAi.delete_document_rag_index",
                    "name": "Delete Rag Index.",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of a document from the knowledge base. This is returned on document addition.",
                                "key": "documentation_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The id of RAG index of document from the knowledge base.",
                                "key": "rag_index_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "documentation_id"
                            },
                            {
                                "type": "literal",
                                "value": "/rag-index/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "rag_index_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "RAGDocumentIndexResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base/documentation_id/rag-index/rag_index_id",
                            "pathParameters": {
                                "documentation_id": "documentation_id",
                                "rag_index_id": "rag_index_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "model": "e5_mistral_7b_instruct",
                                "status": "created",
                                "progress_percentage": 42,
                                "document_model_index_usage": {
                                    "used_bytes": 42
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "model": "e5_mistral_7b_instruct",
                                    "status": "created",
                                    "progress_percentage": 42,
                                    "document_model_index_usage": {
                                        "used_bytes": 42
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Provides total size and other information of RAG indexes used by knowledgebase documents",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "rag_index_overview",
                    "originalEndpointId": "endpoint_conversationalAi.rag_index_overview",
                    "name": "Get Rag Index Overview.",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base/rag-index"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "RAGIndexOverviewResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base/rag-index",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "total_used_bytes": 42,
                                "total_max_bytes": 42,
                                "models": [
                                    {
                                        "model": "e5_mistral_7b_instruct",
                                        "used_bytes": 42
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "total_used_bytes": 42,
                                    "total_max_bytes": 42,
                                    "models": [
                                        {
                                            "model": "e5_mistral_7b_instruct",
                                            "used_bytes": 42
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Update an existing secret for the workspace",
                    "method": "PATCH",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update_secret",
                    "originalEndpointId": "endpoint_conversationalAi.update_secret",
                    "name": "Update Convai Workspace Secret",
                    "path": {
                        "pathParameters": [
                            {
                                "key": "secret_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/secrets/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "secret_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "PatchWorkspaceSecretRequest"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "PostWorkspaceSecretResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/secrets/secret_id",
                            "pathParameters": {
                                "secret_id": "secret_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "type": "foo",
                                "name": "foo",
                                "value": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "type": "foo",
                                    "name": "foo",
                                    "value": "foo"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "type": "foo",
                                "secret_id": "foo",
                                "name": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "type": "foo",
                                    "secret_id": "foo",
                                    "name": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_conversationalAi/conversations",
                "subpackage_conversationalAi/twilio",
                "subpackage_conversationalAi/agents",
                "subpackage_conversationalAi/phoneNumbers",
                "subpackage_conversationalAi/llmUsage",
                "subpackage_conversationalAi/knowledgeBase",
                "subpackage_conversationalAi/tools",
                "subpackage_conversationalAi/settings",
                "subpackage_conversationalAi/dashboard",
                "subpackage_conversationalAi/secrets",
                "subpackage_conversationalAi/batchCalls",
                "subpackage_conversationalAi/sipTrunk",
                "subpackage_conversationalAi/mcpServers"
            ]
        },
        "subpackage_conversationalAi/conversations": {
            "subpackageId": "subpackage_conversationalAi/conversations",
            "name": "conversations",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Get a signed url to start a conversation with an agent with an agent that requires authorization",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get_signed_url",
                    "originalEndpointId": "endpoint_conversationalAi/conversations.get_signed_url",
                    "name": "Get Signed Url",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/conversation/get-signed-url"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "The id of the agent you're taking the action on.",
                            "key": "agent_id",
                            "type": {
                                "type": "primitive",
                                "value": {
                                    "type": "string"
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ConversationSignedUrlResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/conversation/get-signed-url",
                            "pathParameters": {},
                            "queryParameters": {
                                "agent_id": "agent_id"
                            },
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "signed_url": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "signed_url": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get all conversations of agents that user owns. With option to restrict to a specific agent.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_conversationalAi/conversations.list",
                    "name": "List conversations",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/conversations"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Used for fetching next page. Cursor is returned in the response.",
                            "key": "cursor",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "The id of the agent you're taking the action on.",
                            "key": "agent_id",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "The result of the success evaluation",
                            "key": "call_successful",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "id",
                                        "value": "EvaluationSuccessResult"
                                    }
                                }
                            }
                        },
                        {
                            "description": "Unix timestamp (in seconds) to filter conversations up to this start date.",
                            "key": "call_start_before_unix",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "Unix timestamp (in seconds) to filter conversations after to this start date.",
                            "key": "call_start_after_unix",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "How many conversations to return at maximum. Can not exceed 100, defaults to 30.",
                            "key": "page_size",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 100,
                                        "default": 30
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetConversationsPageResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/conversations",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "conversations": [
                                    {
                                        "agent_id": "foo",
                                        "agent_name": "foo",
                                        "conversation_id": "foo",
                                        "start_time_unix_secs": 42,
                                        "call_duration_secs": 42,
                                        "message_count": 42,
                                        "status": "initiated",
                                        "call_successful": "success"
                                    }
                                ],
                                "next_cursor": "foo",
                                "has_more": true
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "conversations": [
                                        {
                                            "agent_id": "foo",
                                            "agent_name": "foo",
                                            "conversation_id": "foo",
                                            "start_time_unix_secs": 42,
                                            "call_duration_secs": 42,
                                            "message_count": 42,
                                            "status": "initiated",
                                            "call_successful": "success"
                                        }
                                    ],
                                    "next_cursor": "foo",
                                    "has_more": true
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get the details of a particular conversation",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_conversationalAi/conversations.get",
                    "name": "Get Conversation Details",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of the conversation you're taking the action on.",
                                "key": "conversation_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/conversations/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "conversation_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetConversationResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {},
                            "responseStatusCode": 200,
                            "responseBody": {
                                "agent_id": "123",
                                "conversation_id": "123",
                                "status": "processing",
                                "transcript": [
                                    {
                                        "role": "user",
                                        "message": "Hello, how are you?",
                                        "time_in_call_secs": 10
                                    }
                                ],
                                "metadata": {
                                    "start_time_unix_secs": 1714423232,
                                    "call_duration_secs": 10
                                },
                                "has_audio": true,
                                "has_user_audio": true,
                                "has_response_audio": true
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "agent_id": "123",
                                    "conversation_id": "123",
                                    "status": "processing",
                                    "transcript": [
                                        {
                                            "role": "user",
                                            "message": "Hello, how are you?",
                                            "time_in_call_secs": 10
                                        }
                                    ],
                                    "metadata": {
                                        "start_time_unix_secs": 1714423232,
                                        "call_duration_secs": 10
                                    },
                                    "has_audio": true,
                                    "has_user_audio": true,
                                    "has_response_audio": true
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Delete a particular conversation",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_conversationalAi/conversations.delete",
                    "name": "Delete Conversation",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of the conversation you're taking the action on.",
                                "key": "conversation_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/conversations/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "conversation_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "unknown"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/conversations/conversation_id",
                            "pathParameters": {
                                "conversation_id": "conversation_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_conversationalAi/conversations/audio",
                "subpackage_conversationalAi/conversations/feedback"
            ]
        },
        "subpackage_conversationalAi/twilio": {
            "subpackageId": "subpackage_conversationalAi/twilio",
            "name": "twilio",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Handle an outbound call via Twilio",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "outbound_call",
                    "originalEndpointId": "endpoint_conversationalAi/twilio.outbound_call",
                    "name": "Handle An Outbound Call Via Twilio",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/twilio/outbound-call"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "TwilioOutboundCallResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/twilio/outbound-call",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "agent_id": "foo",
                                "agent_phone_number_id": "foo",
                                "to_number": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "agent_id": "foo",
                                    "agent_phone_number_id": "foo",
                                    "to_number": "foo"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "success": true,
                                "message": "foo",
                                "conversation_id": "foo",
                                "callSid": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "success": true,
                                    "message": "foo",
                                    "conversation_id": "foo",
                                    "callSid": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/agents": {
            "subpackageId": "subpackage_conversationalAi/agents",
            "name": "agents",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Create an agent from a config object",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_conversationalAi/agents.create",
                    "name": "Create agent",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/agents/create"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Create_Agent_v1_convai_agents_create_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "CreateAgentResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/agents/create",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "conversation_config": {}
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "conversation_config": {}
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "agent_id": "J3Pbu5gP6NNKBscdCdwB"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "agent_id": "J3Pbu5gP6NNKBscdCdwB"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Retrieve config for an agent",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_conversationalAi/agents.get",
                    "name": "Get agent",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of an agent. This is returned on agent creation.",
                                "key": "agent_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/agents/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "agent_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetAgentResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/agents/agent_id",
                            "pathParameters": {
                                "agent_id": "agent_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "agent_id": "J3Pbu5gP6NNKBscdCdwB",
                                "name": "My Agent",
                                "conversation_config": {
                                    "asr": {
                                        "quality": "high",
                                        "provider": "elevenlabs",
                                        "user_input_audio_format": "pcm_8000",
                                        "keywords": [
                                            "foo"
                                        ]
                                    },
                                    "turn": {
                                        "turn_timeout": 7,
                                        "silence_end_call_timeout": -1,
                                        "mode": "silence"
                                    },
                                    "tts": {
                                        "model_id": "eleven_turbo_v2",
                                        "voice_id": "cjVigY5qzO86Huf0OWal",
                                        "supported_voices": [
                                            {
                                                "label": "foo",
                                                "voice_id": "foo",
                                                "description": "foo",
                                                "language": "foo",
                                                "model_family": "turbo",
                                                "optimize_streaming_latency": 0,
                                                "stability": 42,
                                                "speed": 42,
                                                "similarity_boost": 42
                                            }
                                        ],
                                        "agent_output_audio_format": "pcm_8000",
                                        "optimize_streaming_latency": 0,
                                        "stability": 0.5,
                                        "speed": 1,
                                        "similarity_boost": 0.8,
                                        "pronunciation_dictionary_locators": [
                                            {
                                                "pronunciation_dictionary_id": "foo",
                                                "version_id": "foo"
                                            }
                                        ]
                                    },
                                    "conversation": {
                                        "text_only": false,
                                        "max_duration_seconds": 600,
                                        "client_events": [
                                            "conversation_initiation_metadata"
                                        ]
                                    },
                                    "language_presets": {},
                                    "agent": {
                                        "first_message": "",
                                        "language": "en",
                                        "dynamic_variables": {
                                            "dynamic_variable_placeholders": {}
                                        },
                                        "prompt": {
                                            "prompt": "",
                                            "llm": "gpt-4o-mini",
                                            "temperature": 0,
                                            "max_tokens": -1,
                                            "tool_ids": [
                                                "foo"
                                            ],
                                            "built_in_tools": {
                                                "end_call": {
                                                    "name": "foo",
                                                    "description": "foo",
                                                    "response_timeout_secs": 20,
                                                    "type": "system",
                                                    "params": {
                                                        "system_tool_type": "end_call"
                                                    }
                                                },
                                                "language_detection": {
                                                    "name": "foo",
                                                    "description": "foo",
                                                    "response_timeout_secs": 20,
                                                    "type": "system",
                                                    "params": {
                                                        "system_tool_type": "end_call"
                                                    }
                                                },
                                                "transfer_to_agent": {
                                                    "name": "foo",
                                                    "description": "foo",
                                                    "response_timeout_secs": 20,
                                                    "type": "system",
                                                    "params": {
                                                        "system_tool_type": "end_call"
                                                    }
                                                },
                                                "transfer_to_number": {
                                                    "name": "foo",
                                                    "description": "foo",
                                                    "response_timeout_secs": 20,
                                                    "type": "system",
                                                    "params": {
                                                        "system_tool_type": "end_call"
                                                    }
                                                },
                                                "skip_turn": {
                                                    "name": "foo",
                                                    "description": "foo",
                                                    "response_timeout_secs": 20,
                                                    "type": "system",
                                                    "params": {
                                                        "system_tool_type": "end_call"
                                                    }
                                                }
                                            },
                                            "mcp_server_ids": [
                                                "foo"
                                            ],
                                            "native_mcp_server_ids": [
                                                "foo"
                                            ],
                                            "knowledge_base": [
                                                {
                                                    "type": "file",
                                                    "name": "foo",
                                                    "id": "foo",
                                                    "usage_mode": "prompt"
                                                }
                                            ],
                                            "custom_llm": {
                                                "url": "foo",
                                                "model_id": "foo",
                                                "api_key": {
                                                    "secret_id": "foo"
                                                },
                                                "request_headers": {}
                                            },
                                            "ignore_default_personality": true,
                                            "rag": {
                                                "enabled": false,
                                                "embedding_model": "e5_mistral_7b_instruct",
                                                "max_vector_distance": 0.6,
                                                "max_documents_length": 50000,
                                                "max_retrieved_rag_chunks_count": 20
                                            },
                                            "tools": [
                                                {
                                                    "name": "foo",
                                                    "description": "foo",
                                                    "response_timeout_secs": 20,
                                                    "type": "webhook",
                                                    "api_schema": {
                                                        "url": "foo",
                                                        "method": "GET",
                                                        "path_params_schema": {},
                                                        "query_params_schema": {
                                                            "properties": {},
                                                            "required": [
                                                                "foo"
                                                            ]
                                                        },
                                                        "request_body_schema": {
                                                            "type": "object",
                                                            "required": [
                                                                "foo"
                                                            ],
                                                            "description": "",
                                                            "properties": {}
                                                        },
                                                        "request_headers": {}
                                                    },
                                                    "dynamic_variables": {
                                                        "dynamic_variable_placeholders": {}
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                "metadata": {
                                    "created_at_unix_secs": 42
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "agent_id": "J3Pbu5gP6NNKBscdCdwB",
                                    "name": "My Agent",
                                    "conversation_config": {
                                        "asr": {
                                            "quality": "high",
                                            "provider": "elevenlabs",
                                            "user_input_audio_format": "pcm_8000",
                                            "keywords": [
                                                "foo"
                                            ]
                                        },
                                        "turn": {
                                            "turn_timeout": 7,
                                            "silence_end_call_timeout": -1,
                                            "mode": "silence"
                                        },
                                        "tts": {
                                            "model_id": "eleven_turbo_v2",
                                            "voice_id": "cjVigY5qzO86Huf0OWal",
                                            "supported_voices": [
                                                {
                                                    "label": "foo",
                                                    "voice_id": "foo",
                                                    "description": "foo",
                                                    "language": "foo",
                                                    "model_family": "turbo",
                                                    "optimize_streaming_latency": 0,
                                                    "stability": 42,
                                                    "speed": 42,
                                                    "similarity_boost": 42
                                                }
                                            ],
                                            "agent_output_audio_format": "pcm_8000",
                                            "optimize_streaming_latency": 0,
                                            "stability": 0.5,
                                            "speed": 1,
                                            "similarity_boost": 0.8,
                                            "pronunciation_dictionary_locators": [
                                                {
                                                    "pronunciation_dictionary_id": "foo",
                                                    "version_id": "foo"
                                                }
                                            ]
                                        },
                                        "conversation": {
                                            "text_only": false,
                                            "max_duration_seconds": 600,
                                            "client_events": [
                                                "conversation_initiation_metadata"
                                            ]
                                        },
                                        "language_presets": {},
                                        "agent": {
                                            "first_message": "",
                                            "language": "en",
                                            "dynamic_variables": {
                                                "dynamic_variable_placeholders": {}
                                            },
                                            "prompt": {
                                                "prompt": "",
                                                "llm": "gpt-4o-mini",
                                                "temperature": 0,
                                                "max_tokens": -1,
                                                "tool_ids": [
                                                    "foo"
                                                ],
                                                "built_in_tools": {
                                                    "end_call": {
                                                        "name": "foo",
                                                        "description": "foo",
                                                        "response_timeout_secs": 20,
                                                        "type": "system",
                                                        "params": {
                                                            "system_tool_type": "end_call"
                                                        }
                                                    },
                                                    "language_detection": {
                                                        "name": "foo",
                                                        "description": "foo",
                                                        "response_timeout_secs": 20,
                                                        "type": "system",
                                                        "params": {
                                                            "system_tool_type": "end_call"
                                                        }
                                                    },
                                                    "transfer_to_agent": {
                                                        "name": "foo",
                                                        "description": "foo",
                                                        "response_timeout_secs": 20,
                                                        "type": "system",
                                                        "params": {
                                                            "system_tool_type": "end_call"
                                                        }
                                                    },
                                                    "transfer_to_number": {
                                                        "name": "foo",
                                                        "description": "foo",
                                                        "response_timeout_secs": 20,
                                                        "type": "system",
                                                        "params": {
                                                            "system_tool_type": "end_call"
                                                        }
                                                    },
                                                    "skip_turn": {
                                                        "name": "foo",
                                                        "description": "foo",
                                                        "response_timeout_secs": 20,
                                                        "type": "system",
                                                        "params": {
                                                            "system_tool_type": "end_call"
                                                        }
                                                    }
                                                },
                                                "mcp_server_ids": [
                                                    "foo"
                                                ],
                                                "native_mcp_server_ids": [
                                                    "foo"
                                                ],
                                                "knowledge_base": [
                                                    {
                                                        "type": "file",
                                                        "name": "foo",
                                                        "id": "foo",
                                                        "usage_mode": "prompt"
                                                    }
                                                ],
                                                "custom_llm": {
                                                    "url": "foo",
                                                    "model_id": "foo",
                                                    "api_key": {
                                                        "secret_id": "foo"
                                                    },
                                                    "request_headers": {}
                                                },
                                                "ignore_default_personality": true,
                                                "rag": {
                                                    "enabled": false,
                                                    "embedding_model": "e5_mistral_7b_instruct",
                                                    "max_vector_distance": 0.6,
                                                    "max_documents_length": 50000,
                                                    "max_retrieved_rag_chunks_count": 20
                                                },
                                                "tools": [
                                                    {
                                                        "name": "foo",
                                                        "description": "foo",
                                                        "response_timeout_secs": 20,
                                                        "type": "webhook",
                                                        "api_schema": {
                                                            "url": "foo",
                                                            "method": "GET",
                                                            "path_params_schema": {},
                                                            "query_params_schema": {
                                                                "properties": {},
                                                                "required": [
                                                                    "foo"
                                                                ]
                                                            },
                                                            "request_body_schema": {
                                                                "type": "object",
                                                                "required": [
                                                                    "foo"
                                                                ],
                                                                "description": "",
                                                                "properties": {}
                                                            },
                                                            "request_headers": {}
                                                        },
                                                        "dynamic_variables": {
                                                            "dynamic_variable_placeholders": {}
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "metadata": {
                                        "created_at_unix_secs": 42
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Delete an agent",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_conversationalAi/agents.delete",
                    "name": "Delete agent",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of an agent. This is returned on agent creation.",
                                "key": "agent_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/agents/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "agent_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/agents/agent_id",
                            "pathParameters": {
                                "agent_id": "agent_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Patches an Agent settings",
                    "method": "PATCH",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_conversationalAi/agents.update",
                    "name": "Update agent",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of an agent. This is returned on agent creation.",
                                "key": "agent_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/agents/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "agent_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetAgentResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/agents/agent_id",
                            "pathParameters": {
                                "agent_id": "agent_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "agent_id": "J3Pbu5gP6NNKBscdCdwB",
                                "name": "My Agent",
                                "conversation_config": {
                                    "asr": {
                                        "quality": "high",
                                        "provider": "elevenlabs",
                                        "user_input_audio_format": "pcm_8000",
                                        "keywords": [
                                            "foo"
                                        ]
                                    },
                                    "turn": {
                                        "turn_timeout": 7,
                                        "silence_end_call_timeout": -1,
                                        "mode": "silence"
                                    },
                                    "tts": {
                                        "model_id": "eleven_turbo_v2",
                                        "voice_id": "cjVigY5qzO86Huf0OWal",
                                        "supported_voices": [
                                            {
                                                "label": "foo",
                                                "voice_id": "foo",
                                                "description": "foo",
                                                "language": "foo",
                                                "model_family": "turbo",
                                                "optimize_streaming_latency": 0,
                                                "stability": 42,
                                                "speed": 42,
                                                "similarity_boost": 42
                                            }
                                        ],
                                        "agent_output_audio_format": "pcm_8000",
                                        "optimize_streaming_latency": 0,
                                        "stability": 0.5,
                                        "speed": 1,
                                        "similarity_boost": 0.8,
                                        "pronunciation_dictionary_locators": [
                                            {
                                                "pronunciation_dictionary_id": "foo",
                                                "version_id": "foo"
                                            }
                                        ]
                                    },
                                    "conversation": {
                                        "text_only": false,
                                        "max_duration_seconds": 600,
                                        "client_events": [
                                            "conversation_initiation_metadata"
                                        ]
                                    },
                                    "language_presets": {},
                                    "agent": {
                                        "first_message": "",
                                        "language": "en",
                                        "dynamic_variables": {
                                            "dynamic_variable_placeholders": {}
                                        },
                                        "prompt": {
                                            "prompt": "",
                                            "llm": "gpt-4o-mini",
                                            "temperature": 0,
                                            "max_tokens": -1,
                                            "tool_ids": [
                                                "foo"
                                            ],
                                            "built_in_tools": {
                                                "end_call": {
                                                    "name": "foo",
                                                    "description": "foo",
                                                    "response_timeout_secs": 20,
                                                    "type": "system",
                                                    "params": {
                                                        "system_tool_type": "end_call"
                                                    }
                                                },
                                                "language_detection": {
                                                    "name": "foo",
                                                    "description": "foo",
                                                    "response_timeout_secs": 20,
                                                    "type": "system",
                                                    "params": {
                                                        "system_tool_type": "end_call"
                                                    }
                                                },
                                                "transfer_to_agent": {
                                                    "name": "foo",
                                                    "description": "foo",
                                                    "response_timeout_secs": 20,
                                                    "type": "system",
                                                    "params": {
                                                        "system_tool_type": "end_call"
                                                    }
                                                },
                                                "transfer_to_number": {
                                                    "name": "foo",
                                                    "description": "foo",
                                                    "response_timeout_secs": 20,
                                                    "type": "system",
                                                    "params": {
                                                        "system_tool_type": "end_call"
                                                    }
                                                },
                                                "skip_turn": {
                                                    "name": "foo",
                                                    "description": "foo",
                                                    "response_timeout_secs": 20,
                                                    "type": "system",
                                                    "params": {
                                                        "system_tool_type": "end_call"
                                                    }
                                                }
                                            },
                                            "mcp_server_ids": [
                                                "foo"
                                            ],
                                            "native_mcp_server_ids": [
                                                "foo"
                                            ],
                                            "knowledge_base": [
                                                {
                                                    "type": "file",
                                                    "name": "foo",
                                                    "id": "foo",
                                                    "usage_mode": "prompt"
                                                }
                                            ],
                                            "custom_llm": {
                                                "url": "foo",
                                                "model_id": "foo",
                                                "api_key": {
                                                    "secret_id": "foo"
                                                },
                                                "request_headers": {}
                                            },
                                            "ignore_default_personality": true,
                                            "rag": {
                                                "enabled": false,
                                                "embedding_model": "e5_mistral_7b_instruct",
                                                "max_vector_distance": 0.6,
                                                "max_documents_length": 50000,
                                                "max_retrieved_rag_chunks_count": 20
                                            },
                                            "tools": [
                                                {
                                                    "name": "foo",
                                                    "description": "foo",
                                                    "response_timeout_secs": 20,
                                                    "type": "webhook",
                                                    "api_schema": {
                                                        "url": "foo",
                                                        "method": "GET",
                                                        "path_params_schema": {},
                                                        "query_params_schema": {
                                                            "properties": {},
                                                            "required": [
                                                                "foo"
                                                            ]
                                                        },
                                                        "request_body_schema": {
                                                            "type": "object",
                                                            "required": [
                                                                "foo"
                                                            ],
                                                            "description": "",
                                                            "properties": {}
                                                        },
                                                        "request_headers": {}
                                                    },
                                                    "dynamic_variables": {
                                                        "dynamic_variable_placeholders": {}
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                },
                                "metadata": {
                                    "created_at_unix_secs": 42
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "agent_id": "J3Pbu5gP6NNKBscdCdwB",
                                    "name": "My Agent",
                                    "conversation_config": {
                                        "asr": {
                                            "quality": "high",
                                            "provider": "elevenlabs",
                                            "user_input_audio_format": "pcm_8000",
                                            "keywords": [
                                                "foo"
                                            ]
                                        },
                                        "turn": {
                                            "turn_timeout": 7,
                                            "silence_end_call_timeout": -1,
                                            "mode": "silence"
                                        },
                                        "tts": {
                                            "model_id": "eleven_turbo_v2",
                                            "voice_id": "cjVigY5qzO86Huf0OWal",
                                            "supported_voices": [
                                                {
                                                    "label": "foo",
                                                    "voice_id": "foo",
                                                    "description": "foo",
                                                    "language": "foo",
                                                    "model_family": "turbo",
                                                    "optimize_streaming_latency": 0,
                                                    "stability": 42,
                                                    "speed": 42,
                                                    "similarity_boost": 42
                                                }
                                            ],
                                            "agent_output_audio_format": "pcm_8000",
                                            "optimize_streaming_latency": 0,
                                            "stability": 0.5,
                                            "speed": 1,
                                            "similarity_boost": 0.8,
                                            "pronunciation_dictionary_locators": [
                                                {
                                                    "pronunciation_dictionary_id": "foo",
                                                    "version_id": "foo"
                                                }
                                            ]
                                        },
                                        "conversation": {
                                            "text_only": false,
                                            "max_duration_seconds": 600,
                                            "client_events": [
                                                "conversation_initiation_metadata"
                                            ]
                                        },
                                        "language_presets": {},
                                        "agent": {
                                            "first_message": "",
                                            "language": "en",
                                            "dynamic_variables": {
                                                "dynamic_variable_placeholders": {}
                                            },
                                            "prompt": {
                                                "prompt": "",
                                                "llm": "gpt-4o-mini",
                                                "temperature": 0,
                                                "max_tokens": -1,
                                                "tool_ids": [
                                                    "foo"
                                                ],
                                                "built_in_tools": {
                                                    "end_call": {
                                                        "name": "foo",
                                                        "description": "foo",
                                                        "response_timeout_secs": 20,
                                                        "type": "system",
                                                        "params": {
                                                            "system_tool_type": "end_call"
                                                        }
                                                    },
                                                    "language_detection": {
                                                        "name": "foo",
                                                        "description": "foo",
                                                        "response_timeout_secs": 20,
                                                        "type": "system",
                                                        "params": {
                                                            "system_tool_type": "end_call"
                                                        }
                                                    },
                                                    "transfer_to_agent": {
                                                        "name": "foo",
                                                        "description": "foo",
                                                        "response_timeout_secs": 20,
                                                        "type": "system",
                                                        "params": {
                                                            "system_tool_type": "end_call"
                                                        }
                                                    },
                                                    "transfer_to_number": {
                                                        "name": "foo",
                                                        "description": "foo",
                                                        "response_timeout_secs": 20,
                                                        "type": "system",
                                                        "params": {
                                                            "system_tool_type": "end_call"
                                                        }
                                                    },
                                                    "skip_turn": {
                                                        "name": "foo",
                                                        "description": "foo",
                                                        "response_timeout_secs": 20,
                                                        "type": "system",
                                                        "params": {
                                                            "system_tool_type": "end_call"
                                                        }
                                                    }
                                                },
                                                "mcp_server_ids": [
                                                    "foo"
                                                ],
                                                "native_mcp_server_ids": [
                                                    "foo"
                                                ],
                                                "knowledge_base": [
                                                    {
                                                        "type": "file",
                                                        "name": "foo",
                                                        "id": "foo",
                                                        "usage_mode": "prompt"
                                                    }
                                                ],
                                                "custom_llm": {
                                                    "url": "foo",
                                                    "model_id": "foo",
                                                    "api_key": {
                                                        "secret_id": "foo"
                                                    },
                                                    "request_headers": {}
                                                },
                                                "ignore_default_personality": true,
                                                "rag": {
                                                    "enabled": false,
                                                    "embedding_model": "e5_mistral_7b_instruct",
                                                    "max_vector_distance": 0.6,
                                                    "max_documents_length": 50000,
                                                    "max_retrieved_rag_chunks_count": 20
                                                },
                                                "tools": [
                                                    {
                                                        "name": "foo",
                                                        "description": "foo",
                                                        "response_timeout_secs": 20,
                                                        "type": "webhook",
                                                        "api_schema": {
                                                            "url": "foo",
                                                            "method": "GET",
                                                            "path_params_schema": {},
                                                            "query_params_schema": {
                                                                "properties": {},
                                                                "required": [
                                                                    "foo"
                                                                ]
                                                            },
                                                            "request_body_schema": {
                                                                "type": "object",
                                                                "required": [
                                                                    "foo"
                                                                ],
                                                                "description": "",
                                                                "properties": {}
                                                            },
                                                            "request_headers": {}
                                                        },
                                                        "dynamic_variables": {
                                                            "dynamic_variable_placeholders": {}
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "metadata": {
                                        "created_at_unix_secs": 42
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Returns a list of your agents and their metadata.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_conversationalAi/agents.list",
                    "name": "List Agents",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/agents"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Used for fetching next page. Cursor is returned in the response.",
                            "key": "cursor",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "How many Agents to return at maximum. Can not exceed 100, defaults to 30.",
                            "key": "page_size",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 100,
                                        "default": 30
                                    }
                                }
                            }
                        },
                        {
                            "description": "Search by agents name.",
                            "key": "search",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetAgentsPageResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/agents",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "agents": [
                                    {
                                        "agent_id": "foo",
                                        "name": "foo",
                                        "tags": [
                                            "foo"
                                        ],
                                        "created_at_unix_secs": 42,
                                        "access_info": {
                                            "is_creator": true,
                                            "creator_name": "foo",
                                            "creator_email": "foo",
                                            "role": "admin"
                                        }
                                    }
                                ],
                                "next_cursor": "123",
                                "has_more": false
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "agents": [
                                        {
                                            "agent_id": "foo",
                                            "name": "foo",
                                            "tags": [
                                                "foo"
                                            ],
                                            "created_at_unix_secs": 42,
                                            "access_info": {
                                                "is_creator": true,
                                                "creator_name": "foo",
                                                "creator_email": "foo",
                                                "role": "admin"
                                            }
                                        }
                                    ],
                                    "next_cursor": "123",
                                    "has_more": false
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Create a new agent by duplicating an existing one",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "duplicate",
                    "originalEndpointId": "endpoint_conversationalAi/agents.duplicate",
                    "name": "Duplicate Agent",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of an agent. This is returned on agent creation.",
                                "key": "agent_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/agents/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "agent_id"
                            },
                            {
                                "type": "literal",
                                "value": "/duplicate"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Duplicate_Agent_v1_convai_agents__agent_id__duplicate_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "CreateAgentResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/agents/agent_id/duplicate",
                            "pathParameters": {
                                "agent_id": "agent_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "agent_id": "J3Pbu5gP6NNKBscdCdwB"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "agent_id": "J3Pbu5gP6NNKBscdCdwB"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Run a conversation between the agent and a simulated user.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "simulate_conversation",
                    "originalEndpointId": "endpoint_conversationalAi/agents.simulate_conversation",
                    "name": "Simulates A Conversation",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of an agent. This is returned on agent creation.",
                                "key": "agent_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/agents/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "agent_id"
                            },
                            {
                                "type": "literal",
                                "value": "/simulate-conversation"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Simulates_a_conversation_v1_convai_agents__agent_id__simulate_conversation_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AgentSimulatedChatTestResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/agents/agent_id/simulate-conversation",
                            "pathParameters": {
                                "agent_id": "agent_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "simulation_specification": {
                                    "simulated_user_config": {}
                                }
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "simulation_specification": {
                                        "simulated_user_config": {}
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "simulated_conversation": [
                                    {
                                        "role": "user",
                                        "message": "foo",
                                        "tool_calls": [
                                            {
                                                "type": "foo",
                                                "request_id": "foo",
                                                "tool_name": "foo",
                                                "params_as_json": "foo",
                                                "tool_has_been_called": true,
                                                "tool_details": {
                                                    "type": "webhook",
                                                    "method": "foo",
                                                    "url": "foo",
                                                    "headers": {},
                                                    "path_params": {},
                                                    "query_params": {},
                                                    "body": "foo"
                                                }
                                            }
                                        ],
                                        "tool_results": [
                                            {
                                                "type": "foo",
                                                "request_id": "foo",
                                                "tool_name": "foo",
                                                "result_value": "foo",
                                                "is_error": true,
                                                "tool_has_been_called": true,
                                                "tool_latency_secs": 0
                                            }
                                        ],
                                        "feedback": {
                                            "score": "like",
                                            "time_in_call_secs": 42
                                        },
                                        "llm_override": "foo",
                                        "time_in_call_secs": 42,
                                        "conversation_turn_metrics": {
                                            "metrics": {}
                                        },
                                        "rag_retrieval_info": {
                                            "chunks": [
                                                {
                                                    "document_id": "foo",
                                                    "chunk_id": "foo",
                                                    "vector_distance": 42
                                                }
                                            ],
                                            "embedding_model": "e5_mistral_7b_instruct",
                                            "retrieval_query": "foo",
                                            "rag_latency_secs": 42
                                        },
                                        "llm_usage": {
                                            "model_usage": {}
                                        },
                                        "interrupted": false,
                                        "original_message": "foo",
                                        "source_medium": "audio"
                                    }
                                ],
                                "analysis": {
                                    "evaluation_criteria_results": {},
                                    "data_collection_results": {},
                                    "call_successful": "success",
                                    "transcript_summary": "foo"
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "simulated_conversation": [
                                        {
                                            "role": "user",
                                            "message": "foo",
                                            "tool_calls": [
                                                {
                                                    "type": "foo",
                                                    "request_id": "foo",
                                                    "tool_name": "foo",
                                                    "params_as_json": "foo",
                                                    "tool_has_been_called": true,
                                                    "tool_details": {
                                                        "type": "webhook",
                                                        "method": "foo",
                                                        "url": "foo",
                                                        "headers": {},
                                                        "path_params": {},
                                                        "query_params": {},
                                                        "body": "foo"
                                                    }
                                                }
                                            ],
                                            "tool_results": [
                                                {
                                                    "type": "foo",
                                                    "request_id": "foo",
                                                    "tool_name": "foo",
                                                    "result_value": "foo",
                                                    "is_error": true,
                                                    "tool_has_been_called": true,
                                                    "tool_latency_secs": 0
                                                }
                                            ],
                                            "feedback": {
                                                "score": "like",
                                                "time_in_call_secs": 42
                                            },
                                            "llm_override": "foo",
                                            "time_in_call_secs": 42,
                                            "conversation_turn_metrics": {
                                                "metrics": {}
                                            },
                                            "rag_retrieval_info": {
                                                "chunks": [
                                                    {
                                                        "document_id": "foo",
                                                        "chunk_id": "foo",
                                                        "vector_distance": 42
                                                    }
                                                ],
                                                "embedding_model": "e5_mistral_7b_instruct",
                                                "retrieval_query": "foo",
                                                "rag_latency_secs": 42
                                            },
                                            "llm_usage": {
                                                "model_usage": {}
                                            },
                                            "interrupted": false,
                                            "original_message": "foo",
                                            "source_medium": "audio"
                                        }
                                    ],
                                    "analysis": {
                                        "evaluation_criteria_results": {},
                                        "data_collection_results": {},
                                        "call_successful": "success",
                                        "transcript_summary": "foo"
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Run a conversation between the agent and a simulated user and stream back the response. Response is streamed back as partial lists of messages that should be concatenated and once the conversation has complete a single final message with the conversation analysis will be sent.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "simulate_conversation_stream",
                    "originalEndpointId": "endpoint_conversationalAi/agents.simulate_conversation_stream",
                    "name": "Simulates A Conversation (Stream)",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of an agent. This is returned on agent creation.",
                                "key": "agent_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/agents/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "agent_id"
                            },
                            {
                                "type": "literal",
                                "value": "/simulate-conversation/stream"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Simulates_a_conversation__Stream__v1_convai_agents__agent_id__simulate_conversation_stream_post"
                                }
                            }
                        }
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/agents/agent_id/simulate-conversation/stream",
                            "pathParameters": {
                                "agent_id": "agent_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "simulation_specification": {
                                    "simulated_user_config": {}
                                }
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "simulation_specification": {
                                        "simulated_user_config": {}
                                    }
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_conversationalAi/agents/widget",
                "subpackage_conversationalAi/agents/link",
                "subpackage_conversationalAi/agents/knowledgeBase",
                "subpackage_conversationalAi/agents/llmUsage"
            ]
        },
        "subpackage_conversationalAi/agents/widget": {
            "subpackageId": "subpackage_conversationalAi/agents/widget",
            "name": "widget",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Retrieve the widget configuration for an agent",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_conversationalAi/agents/widget.get",
                    "name": "Get Agent Widget Config",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of an agent. This is returned on agent creation.",
                                "key": "agent_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/agents/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "agent_id"
                            },
                            {
                                "type": "literal",
                                "value": "/widget"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "An expiring token that enables a websocket conversation to start. These can be generated for an agent using the /v1/convai/conversation/get-signed-url endpoint",
                            "key": "conversation_signature",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetAgentEmbedResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/agents/agent_id/widget",
                            "pathParameters": {
                                "agent_id": "agent_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "agent_id": "foo",
                                "widget_config": {
                                    "variant": "tiny",
                                    "placement": "top-left",
                                    "expandable": "never",
                                    "avatar": {
                                        "type": "orb",
                                        "color_1": "#2792dc",
                                        "color_2": "#9ce6e6"
                                    },
                                    "feedback_mode": "none",
                                    "bg_color": "#ffffff",
                                    "text_color": "#000000",
                                    "btn_color": "#000000",
                                    "btn_text_color": "#ffffff",
                                    "border_color": "#e1e1e1",
                                    "focus_color": "#000000",
                                    "border_radius": 42,
                                    "btn_radius": 42,
                                    "action_text": "foo",
                                    "start_call_text": "foo",
                                    "end_call_text": "foo",
                                    "expand_text": "foo",
                                    "listening_text": "foo",
                                    "speaking_text": "foo",
                                    "shareable_page_text": "foo",
                                    "shareable_page_show_terms": true,
                                    "terms_text": "foo",
                                    "terms_html": "foo",
                                    "terms_key": "foo",
                                    "show_avatar_when_collapsed": true,
                                    "disable_banner": false,
                                    "override_link": "foo",
                                    "mic_muting_enabled": false,
                                    "transcript_enabled": false,
                                    "text_input_enabled": true,
                                    "text_contents": {
                                        "main_label": "foo",
                                        "start_call": "foo",
                                        "new_call": "foo",
                                        "end_call": "foo",
                                        "mute_microphone": "foo",
                                        "change_language": "foo",
                                        "collapse": "foo",
                                        "expand": "foo",
                                        "copied": "foo",
                                        "accept_terms": "foo",
                                        "dismiss_terms": "foo",
                                        "listening_status": "foo",
                                        "speaking_status": "foo",
                                        "connecting_status": "foo",
                                        "input_label": "foo",
                                        "input_placeholder": "foo",
                                        "user_ended_conversation": "foo",
                                        "agent_ended_conversation": "foo",
                                        "conversation_id": "foo",
                                        "error_occurred": "foo",
                                        "copy_id": "foo"
                                    },
                                    "styles": {
                                        "base": "foo",
                                        "base_hover": "foo",
                                        "base_active": "foo",
                                        "base_border": "foo",
                                        "base_subtle": "foo",
                                        "base_primary": "foo",
                                        "base_error": "foo",
                                        "accent": "foo",
                                        "accent_hover": "foo",
                                        "accent_active": "foo",
                                        "accent_border": "foo",
                                        "accent_subtle": "foo",
                                        "accent_primary": "foo",
                                        "overlay_padding": 42,
                                        "button_radius": 42,
                                        "input_radius": 42,
                                        "bubble_radius": 42,
                                        "sheet_radius": 42,
                                        "compact_sheet_radius": 42,
                                        "dropdown_sheet_radius": 42
                                    },
                                    "language": "foo",
                                    "supported_language_overrides": [
                                        "foo"
                                    ],
                                    "language_presets": {},
                                    "text_only": false,
                                    "supports_text_only": false,
                                    "first_message": "foo"
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "agent_id": "foo",
                                    "widget_config": {
                                        "variant": "tiny",
                                        "placement": "top-left",
                                        "expandable": "never",
                                        "avatar": {
                                            "type": "orb",
                                            "color_1": "#2792dc",
                                            "color_2": "#9ce6e6"
                                        },
                                        "feedback_mode": "none",
                                        "bg_color": "#ffffff",
                                        "text_color": "#000000",
                                        "btn_color": "#000000",
                                        "btn_text_color": "#ffffff",
                                        "border_color": "#e1e1e1",
                                        "focus_color": "#000000",
                                        "border_radius": 42,
                                        "btn_radius": 42,
                                        "action_text": "foo",
                                        "start_call_text": "foo",
                                        "end_call_text": "foo",
                                        "expand_text": "foo",
                                        "listening_text": "foo",
                                        "speaking_text": "foo",
                                        "shareable_page_text": "foo",
                                        "shareable_page_show_terms": true,
                                        "terms_text": "foo",
                                        "terms_html": "foo",
                                        "terms_key": "foo",
                                        "show_avatar_when_collapsed": true,
                                        "disable_banner": false,
                                        "override_link": "foo",
                                        "mic_muting_enabled": false,
                                        "transcript_enabled": false,
                                        "text_input_enabled": true,
                                        "text_contents": {
                                            "main_label": "foo",
                                            "start_call": "foo",
                                            "new_call": "foo",
                                            "end_call": "foo",
                                            "mute_microphone": "foo",
                                            "change_language": "foo",
                                            "collapse": "foo",
                                            "expand": "foo",
                                            "copied": "foo",
                                            "accept_terms": "foo",
                                            "dismiss_terms": "foo",
                                            "listening_status": "foo",
                                            "speaking_status": "foo",
                                            "connecting_status": "foo",
                                            "input_label": "foo",
                                            "input_placeholder": "foo",
                                            "user_ended_conversation": "foo",
                                            "agent_ended_conversation": "foo",
                                            "conversation_id": "foo",
                                            "error_occurred": "foo",
                                            "copy_id": "foo"
                                        },
                                        "styles": {
                                            "base": "foo",
                                            "base_hover": "foo",
                                            "base_active": "foo",
                                            "base_border": "foo",
                                            "base_subtle": "foo",
                                            "base_primary": "foo",
                                            "base_error": "foo",
                                            "accent": "foo",
                                            "accent_hover": "foo",
                                            "accent_active": "foo",
                                            "accent_border": "foo",
                                            "accent_subtle": "foo",
                                            "accent_primary": "foo",
                                            "overlay_padding": 42,
                                            "button_radius": 42,
                                            "input_radius": 42,
                                            "bubble_radius": 42,
                                            "sheet_radius": 42,
                                            "compact_sheet_radius": 42,
                                            "dropdown_sheet_radius": 42
                                        },
                                        "language": "foo",
                                        "supported_language_overrides": [
                                            "foo"
                                        ],
                                        "language_presets": {},
                                        "text_only": false,
                                        "supports_text_only": false,
                                        "first_message": "foo"
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_conversationalAi/agents/widget/avatar"
            ]
        },
        "subpackage_conversationalAi/agents/link": {
            "subpackageId": "subpackage_conversationalAi/agents/link",
            "name": "link",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Get the current link used to share the agent with others",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_conversationalAi/agents/link.get",
                    "name": "Get Shareable Agent Link",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of an agent. This is returned on agent creation.",
                                "key": "agent_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/agents/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "agent_id"
                            },
                            {
                                "type": "literal",
                                "value": "/link"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetAgentLinkResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/agents/agent_id/link",
                            "pathParameters": {
                                "agent_id": "agent_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "agent_id": "J3Pbu5gP6NNKBscdCdwB"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "agent_id": "J3Pbu5gP6NNKBscdCdwB"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/agents/widget/avatar": {
            "subpackageId": "subpackage_conversationalAi/agents/widget/avatar",
            "name": "avatar",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Sets the avatar for an agent displayed in the widget",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_conversationalAi/agents/widget/avatar.create",
                    "name": "Post Agent Avatar",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of an agent. This is returned on agent creation.",
                                "key": "agent_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/agents/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "agent_id"
                            },
                            {
                                "type": "literal",
                                "value": "/avatar"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "conversational_ai_agents_widget_avatar_create_Request",
                                "properties": [
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "avatar_file",
                                            "isOptional": false,
                                            "contentType": "multipart/form-data",
                                            "description": "An image file to be used as the agent's avatar."
                                        }
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "PostAgentAvatarResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/agents/agent_id/avatar",
                            "pathParameters": {
                                "agent_id": "agent_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "avatar_file": "foo"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "avatar_file": {
                                        "type": "filename",
                                        "value": "foo"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "agent_id": "foo",
                                "avatar_url": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "agent_id": "foo",
                                    "avatar_url": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/agents/knowledgeBase": {
            "subpackageId": "subpackage_conversationalAi/agents/knowledgeBase",
            "name": "knowledgeBase",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Returns the number of pages in the agent's knowledge base.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "size",
                    "originalEndpointId": "endpoint_conversationalAi/agents/knowledgeBase.size",
                    "name": "Returns The Size Of The Agent'S Knowledge Base",
                    "path": {
                        "pathParameters": [
                            {
                                "key": "agent_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/agent/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "agent_id"
                            },
                            {
                                "type": "literal",
                                "value": "/knowledge-base/size"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetAgentKnowledgebaseSizeResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/agent/agent_id/knowledge-base/size",
                            "pathParameters": {
                                "agent_id": "agent_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "number_of_pages": 42
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "number_of_pages": 42
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/agents/llmUsage": {
            "subpackageId": "subpackage_conversationalAi/agents/llmUsage",
            "name": "llmUsage",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Calculates expected number of LLM tokens needed for the specified agent.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "calculate",
                    "originalEndpointId": "endpoint_conversationalAi/agents/llmUsage.calculate",
                    "name": "Calculate Expected Llm Usage For An Agent",
                    "path": {
                        "pathParameters": [
                            {
                                "key": "agent_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/agent/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "agent_id"
                            },
                            {
                                "type": "literal",
                                "value": "/llm-usage/calculate"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "LLMUsageCalculatorRequestModel"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "LLMUsageCalculatorResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/agent/agent_id/llm-usage/calculate",
                            "pathParameters": {
                                "agent_id": "agent_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "llm_prices": [
                                    {
                                        "llm": "gpt-4o-mini",
                                        "price_per_minute": 42
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "llm_prices": [
                                        {
                                            "llm": "gpt-4o-mini",
                                            "price_per_minute": 42
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/conversations/audio": {
            "subpackageId": "subpackage_conversationalAi/conversations/audio",
            "name": "audio",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Get the audio recording of a particular conversation",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_conversationalAi/conversations/audio.get",
                    "name": "Get Conversation Audio",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of the conversation you're taking the action on.",
                                "key": "conversation_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/conversations/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "conversation_id"
                            },
                            {
                                "type": "literal",
                                "value": "/audio"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/conversations/conversation_id/audio",
                            "pathParameters": {
                                "conversation_id": "conversation_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/conversations/feedback": {
            "subpackageId": "subpackage_conversationalAi/conversations/feedback",
            "name": "feedback",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Send the feedback for the given conversation",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_conversationalAi/conversations/feedback.create",
                    "name": "Send Conversation Feedback",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of the conversation you're taking the action on.",
                                "key": "conversation_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/conversations/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "conversation_id"
                            },
                            {
                                "type": "literal",
                                "value": "/feedback"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "unknown"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/conversations/conversation_id/feedback",
                            "pathParameters": {
                                "conversation_id": "conversation_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "feedback": "like"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "feedback": "like"
                                }
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/phoneNumbers": {
            "subpackageId": "subpackage_conversationalAi/phoneNumbers",
            "name": "phoneNumbers",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Import Phone Number from provider configuration (Twilio or SIP trunk)",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_conversationalAi/phoneNumbers.create",
                    "name": "Import Phone Number",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/phone-numbers/create"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "conversational_ai_phone_numbers_create_Request"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "CreatePhoneNumberResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/phone-numbers/create",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "phone_number": "foo",
                                "label": "foo",
                                "sid": "foo",
                                "token": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "phone_number": "foo",
                                    "label": "foo",
                                    "sid": "foo",
                                    "token": "foo"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "phone_number_id": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "phone_number_id": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Retrieve Phone Number details by ID",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_conversationalAi/phoneNumbers.get",
                    "name": "Get Phone Number",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of an agent. This is returned on agent creation.",
                                "key": "phone_number_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/phone-numbers/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "phone_number_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "conversational_ai_phone_numbers_get_Response_200"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/phone-numbers/phone_number_id",
                            "pathParameters": {
                                "phone_number_id": "phone_number_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "phone_number": "foo",
                                "label": "foo",
                                "phone_number_id": "foo",
                                "assigned_agent": {
                                    "agent_id": "foo",
                                    "agent_name": "foo"
                                },
                                "provider": "twilio"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "phone_number": "foo",
                                    "label": "foo",
                                    "phone_number_id": "foo",
                                    "assigned_agent": {
                                        "agent_id": "foo",
                                        "agent_name": "foo"
                                    },
                                    "provider": "twilio"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Delete Phone Number by ID",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_conversationalAi/phoneNumbers.delete",
                    "name": "Delete Phone Number",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of an agent. This is returned on agent creation.",
                                "key": "phone_number_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/phone-numbers/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "phone_number_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "unknown"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/phone-numbers/phone_number_id",
                            "pathParameters": {
                                "phone_number_id": "phone_number_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Update Phone Number details by ID",
                    "method": "PATCH",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_conversationalAi/phoneNumbers.update",
                    "name": "Update Phone Number",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of an agent. This is returned on agent creation.",
                                "key": "phone_number_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/phone-numbers/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "phone_number_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "UpdatePhoneNumberRequest"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "conversational_ai_phone_numbers_update_Response_200"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/phone-numbers/phone_number_id",
                            "pathParameters": {
                                "phone_number_id": "phone_number_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "phone_number": "foo",
                                "label": "foo",
                                "phone_number_id": "foo",
                                "assigned_agent": {
                                    "agent_id": "foo",
                                    "agent_name": "foo"
                                },
                                "provider": "twilio"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "phone_number": "foo",
                                    "label": "foo",
                                    "phone_number_id": "foo",
                                    "assigned_agent": {
                                        "agent_id": "foo",
                                        "agent_name": "foo"
                                    },
                                    "provider": "twilio"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Retrieve all Phone Numbers",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_conversationalAi/phoneNumbers.list",
                    "name": "List Phone Numbers",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/phone-numbers/"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "V1ConvaiPhoneNumbersGetResponsesContentApplicationJsonSchemaItems"
                                }
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/phone-numbers/",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": [
                                {
                                    "phone_number": "foo",
                                    "label": "foo",
                                    "phone_number_id": "foo",
                                    "assigned_agent": {
                                        "agent_id": "foo",
                                        "agent_name": "foo"
                                    },
                                    "provider": "twilio"
                                }
                            ],
                            "responseBodyV3": {
                                "type": "json",
                                "value": [
                                    {
                                        "phone_number": "foo",
                                        "label": "foo",
                                        "phone_number_id": "foo",
                                        "assigned_agent": {
                                            "agent_id": "foo",
                                            "agent_name": "foo"
                                        },
                                        "provider": "twilio"
                                    }
                                ]
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/llmUsage": {
            "subpackageId": "subpackage_conversationalAi/llmUsage",
            "name": "llmUsage",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Returns a list of LLM models and the expected cost for using them based on the provided values.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "calculate",
                    "originalEndpointId": "endpoint_conversationalAi/llmUsage.calculate",
                    "name": "Calculate Expected Llm Usage",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/llm-usage/calculate"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "LLMUsageCalculatorPublicRequestModel"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "LLMUsageCalculatorResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/llm-usage/calculate",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "prompt_length": 42,
                                "number_of_pages": 42,
                                "rag_enabled": true
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "prompt_length": 42,
                                    "number_of_pages": 42,
                                    "rag_enabled": true
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "llm_prices": [
                                    {
                                        "llm": "gpt-4o-mini",
                                        "price_per_minute": 42
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "llm_prices": [
                                        {
                                            "llm": "gpt-4o-mini",
                                            "price_per_minute": 42
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/knowledgeBase": {
            "subpackageId": "subpackage_conversationalAi/knowledgeBase",
            "name": "knowledgeBase",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Get a list of available knowledge base documents",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_conversationalAi/knowledgeBase.list",
                    "name": "Get Knowledge Base List",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Used for fetching next page. Cursor is returned in the response.",
                            "key": "cursor",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
                            "key": "page_size",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 100,
                                        "default": 30
                                    }
                                }
                            }
                        },
                        {
                            "description": "If specified, the endpoint returns only such knowledge base documents whose names start with this string.",
                            "key": "search",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "If set to true, the endpoint will return only documents owned by you (and not shared from somebody else).",
                            "key": "show_only_owned_documents",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        },
                        {
                            "description": "If present, the endpoint will return only documents of the given types.",
                            "key": "types",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "list",
                                        "itemType": {
                                            "type": "id",
                                            "value": "KnowledgeBaseDocumentType"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "If set to true, the endpoint will use typesense DB to search for the documents).",
                            "key": "use_typesense",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetKnowledgeBaseListResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "documents": [
                                    {
                                        "id": "foo",
                                        "name": "foo",
                                        "metadata": {
                                            "created_at_unix_secs": 42,
                                            "last_updated_at_unix_secs": 42,
                                            "size_bytes": 42
                                        },
                                        "supported_usages": [
                                            "prompt"
                                        ],
                                        "access_info": {
                                            "is_creator": true,
                                            "creator_name": "foo",
                                            "creator_email": "foo",
                                            "role": "admin"
                                        },
                                        "dependent_agents": [
                                            {
                                                "type": "unknown"
                                            }
                                        ],
                                        "type": "foo",
                                        "url": "foo"
                                    }
                                ],
                                "next_cursor": "foo",
                                "has_more": true
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "documents": [
                                        {
                                            "id": "foo",
                                            "name": "foo",
                                            "metadata": {
                                                "created_at_unix_secs": 42,
                                                "last_updated_at_unix_secs": 42,
                                                "size_bytes": 42
                                            },
                                            "supported_usages": [
                                                "prompt"
                                            ],
                                            "access_info": {
                                                "is_creator": true,
                                                "creator_name": "foo",
                                                "creator_email": "foo",
                                                "role": "admin"
                                            },
                                            "dependent_agents": [
                                                {
                                                    "type": "unknown"
                                                }
                                            ],
                                            "type": "foo",
                                            "url": "foo"
                                        }
                                    ],
                                    "next_cursor": "foo",
                                    "has_more": true
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_conversationalAi/knowledgeBase/documents",
                "subpackage_conversationalAi/knowledgeBase/document"
            ]
        },
        "subpackage_conversationalAi/knowledgeBase/documents": {
            "subpackageId": "subpackage_conversationalAi/knowledgeBase/documents",
            "name": "documents",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Create a knowledge base document generated by scraping the given webpage.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create_from_url",
                    "originalEndpointId": "endpoint_conversationalAi/knowledgeBase/documents.create_from_url",
                    "name": "Create Url Document",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base/url"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Create_URL_document_v1_convai_knowledge_base_url_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddKnowledgeBaseResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base/url",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "url": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "url": "foo"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "name": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "name": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Create a knowledge base document generated form the uploaded file.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create_from_file",
                    "originalEndpointId": "endpoint_conversationalAi/knowledgeBase/documents.create_from_file",
                    "name": "Create File Document",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base/file"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "conversational_ai_knowledge_base_documents_create_from_file_Request",
                                "properties": [
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "file",
                                            "isOptional": false,
                                            "contentType": "multipart/form-data",
                                            "description": "Documentation that the agent will have access to in order to interact with users."
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "name",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string",
                                                        "minLength": 1
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "A custom, human-readable name for the document.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddKnowledgeBaseResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base/file",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "file": "foo"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "file": {
                                        "type": "filename",
                                        "value": "foo"
                                    },
                                    "name": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "name": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "name": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Create a knowledge base document containing the provided text.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create_from_text",
                    "originalEndpointId": "endpoint_conversationalAi/knowledgeBase/documents.create_from_text",
                    "name": "Create Text Document",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base/text"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Create_text_document_v1_convai_knowledge_base_text_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddKnowledgeBaseResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base/text",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "text": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "text": "foo"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "name": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "name": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get details about a specific documentation making up the agent's knowledge base",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_conversationalAi/knowledgeBase/documents.get",
                    "name": "Get Documentation From Knowledge Base",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of a document from the knowledge base. This is returned on document addition.",
                                "key": "documentation_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "documentation_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "conversational_ai_knowledge_base_documents_get_Response_200"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base/documentation_id",
                            "pathParameters": {
                                "documentation_id": "documentation_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "name": "foo",
                                "metadata": {
                                    "created_at_unix_secs": 42,
                                    "last_updated_at_unix_secs": 42,
                                    "size_bytes": 42
                                },
                                "supported_usages": [
                                    "prompt"
                                ],
                                "access_info": {
                                    "is_creator": true,
                                    "creator_name": "foo",
                                    "creator_email": "foo",
                                    "role": "admin"
                                },
                                "extracted_inner_html": "foo",
                                "type": "foo",
                                "url": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "name": "foo",
                                    "metadata": {
                                        "created_at_unix_secs": 42,
                                        "last_updated_at_unix_secs": 42,
                                        "size_bytes": 42
                                    },
                                    "supported_usages": [
                                        "prompt"
                                    ],
                                    "access_info": {
                                        "is_creator": true,
                                        "creator_name": "foo",
                                        "creator_email": "foo",
                                        "role": "admin"
                                    },
                                    "extracted_inner_html": "foo",
                                    "type": "foo",
                                    "url": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Delete a document from the knowledge base",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_conversationalAi/knowledgeBase/documents.delete",
                    "name": "Delete Knowledge Base Document",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of a document from the knowledge base. This is returned on document addition.",
                                "key": "documentation_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "documentation_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "If set to true, the document will be deleted regardless of whether it is used by any agents and it will be deleted from the dependent agents.",
                            "key": "force",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "unknown"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base/documentation_id",
                            "pathParameters": {
                                "documentation_id": "documentation_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Update the name of a document",
                    "method": "PATCH",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_conversationalAi/knowledgeBase/documents.update",
                    "name": "Update Document",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of a document from the knowledge base. This is returned on document addition.",
                                "key": "documentation_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "documentation_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Update_document_v1_convai_knowledge_base__documentation_id__patch"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "conversational_ai_knowledge_base_documents_update_Response_200"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base/documentation_id",
                            "pathParameters": {
                                "documentation_id": "documentation_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "name": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "name": "foo"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "name": "foo",
                                "metadata": {
                                    "created_at_unix_secs": 42,
                                    "last_updated_at_unix_secs": 42,
                                    "size_bytes": 42
                                },
                                "supported_usages": [
                                    "prompt"
                                ],
                                "access_info": {
                                    "is_creator": true,
                                    "creator_name": "foo",
                                    "creator_email": "foo",
                                    "role": "admin"
                                },
                                "extracted_inner_html": "foo",
                                "type": "foo",
                                "url": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "name": "foo",
                                    "metadata": {
                                        "created_at_unix_secs": 42,
                                        "last_updated_at_unix_secs": 42,
                                        "size_bytes": 42
                                    },
                                    "supported_usages": [
                                        "prompt"
                                    ],
                                    "access_info": {
                                        "is_creator": true,
                                        "creator_name": "foo",
                                        "creator_email": "foo",
                                        "role": "admin"
                                    },
                                    "extracted_inner_html": "foo",
                                    "type": "foo",
                                    "url": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get a list of agents depending on this knowledge base document",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get_agents",
                    "originalEndpointId": "endpoint_conversationalAi/knowledgeBase/documents.get_agents",
                    "name": "Get Dependent Agents List",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of a document from the knowledge base. This is returned on document addition.",
                                "key": "documentation_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "documentation_id"
                            },
                            {
                                "type": "literal",
                                "value": "/dependent-agents"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Used for fetching next page. Cursor is returned in the response.",
                            "key": "cursor",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
                            "key": "page_size",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 100,
                                        "default": 30
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetKnowledgeBaseDependentAgentsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base/documentation_id/dependent-agents",
                            "pathParameters": {
                                "documentation_id": "documentation_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "agents": [
                                    {
                                        "type": "unknown"
                                    }
                                ],
                                "next_cursor": "foo",
                                "has_more": true
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "agents": [
                                        {
                                            "type": "unknown"
                                        }
                                    ],
                                    "next_cursor": "foo",
                                    "has_more": true
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get the entire content of a document from the knowledge base",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get_content",
                    "originalEndpointId": "endpoint_conversationalAi/knowledgeBase/documents.get_content",
                    "name": "Get Document Content",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of a document from the knowledge base. This is returned on document addition.",
                                "key": "documentation_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "documentation_id"
                            },
                            {
                                "type": "literal",
                                "value": "/content"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base/documentation_id/content",
                            "pathParameters": {
                                "documentation_id": "documentation_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_conversationalAi/knowledgeBase/documents/chunk"
            ]
        },
        "subpackage_conversationalAi/knowledgeBase/document": {
            "subpackageId": "subpackage_conversationalAi/knowledgeBase/document",
            "name": "document",
            "endpoints": [
                {
                    "auth": false,
                    "description": "In case the document is not RAG indexed, it triggers rag indexing task, otherwise it just returns the current status.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "compute_rag_index",
                    "originalEndpointId": "endpoint_conversationalAi/knowledgeBase/document.compute_rag_index",
                    "name": "Compute Rag Index.",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of a document from the knowledge base. This is returned on document addition.",
                                "key": "documentation_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "documentation_id"
                            },
                            {
                                "type": "literal",
                                "value": "/rag-index"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "RAGIndexRequestModel"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "RAGDocumentIndexResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base/documentation_id/rag-index",
                            "pathParameters": {
                                "documentation_id": "documentation_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "model": "e5_mistral_7b_instruct"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "model": "e5_mistral_7b_instruct"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "model": "e5_mistral_7b_instruct",
                                "status": "created",
                                "progress_percentage": 42,
                                "document_model_index_usage": {
                                    "used_bytes": 42
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "model": "e5_mistral_7b_instruct",
                                    "status": "created",
                                    "progress_percentage": 42,
                                    "document_model_index_usage": {
                                        "used_bytes": 42
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/knowledgeBase/documents/chunk": {
            "subpackageId": "subpackage_conversationalAi/knowledgeBase/documents/chunk",
            "name": "chunk",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Get details about a specific documentation part used by RAG.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_conversationalAi/knowledgeBase/documents/chunk.get",
                    "name": "Get Documentation Chunk From Knowledge Base",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The id of a document from the knowledge base. This is returned on document addition.",
                                "key": "documentation_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "The id of a document RAG chunk from the knowledge base.",
                                "key": "chunk_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/knowledge-base/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "documentation_id"
                            },
                            {
                                "type": "literal",
                                "value": "/chunk/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "chunk_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "KnowledgeBaseDocumentChunkResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/knowledge-base/documentation_id/chunk/chunk_id",
                            "pathParameters": {
                                "documentation_id": "documentation_id",
                                "chunk_id": "chunk_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "name": "foo",
                                "content": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "name": "foo",
                                    "content": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/tools": {
            "subpackageId": "subpackage_conversationalAi/tools",
            "name": "tools",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Get all available tools available in the workspace.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_conversationalAi/tools.list",
                    "name": "Get Tools",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/tools"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ToolsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/tools",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "tools": [
                                    {
                                        "id": "foo",
                                        "tool_config": {
                                            "name": "foo",
                                            "description": "foo",
                                            "response_timeout_secs": 20,
                                            "type": "webhook",
                                            "api_schema": {
                                                "url": "foo",
                                                "method": "GET",
                                                "path_params_schema": {},
                                                "query_params_schema": {
                                                    "properties": {},
                                                    "required": [
                                                        "foo"
                                                    ]
                                                },
                                                "request_body_schema": {
                                                    "type": "object",
                                                    "required": [
                                                        "foo"
                                                    ],
                                                    "description": "",
                                                    "properties": {}
                                                },
                                                "request_headers": {}
                                            },
                                            "dynamic_variables": {
                                                "dynamic_variable_placeholders": {}
                                            }
                                        },
                                        "access_info": {
                                            "is_creator": true,
                                            "creator_name": "foo",
                                            "creator_email": "foo",
                                            "role": "admin"
                                        }
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "tools": [
                                        {
                                            "id": "foo",
                                            "tool_config": {
                                                "name": "foo",
                                                "description": "foo",
                                                "response_timeout_secs": 20,
                                                "type": "webhook",
                                                "api_schema": {
                                                    "url": "foo",
                                                    "method": "GET",
                                                    "path_params_schema": {},
                                                    "query_params_schema": {
                                                        "properties": {},
                                                        "required": [
                                                            "foo"
                                                        ]
                                                    },
                                                    "request_body_schema": {
                                                        "type": "object",
                                                        "required": [
                                                            "foo"
                                                        ],
                                                        "description": "",
                                                        "properties": {}
                                                    },
                                                    "request_headers": {}
                                                },
                                                "dynamic_variables": {
                                                    "dynamic_variable_placeholders": {}
                                                }
                                            },
                                            "access_info": {
                                                "is_creator": true,
                                                "creator_name": "foo",
                                                "creator_email": "foo",
                                                "role": "admin"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Add a new tool to the available tools in the workspace.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_conversationalAi/tools.create",
                    "name": "Add Tool",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/tools"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "ToolRequestModel"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ToolResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/tools",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "tool_config": {
                                    "name": "foo",
                                    "description": "foo",
                                    "api_schema": {
                                        "url": "foo"
                                    }
                                }
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "tool_config": {
                                        "name": "foo",
                                        "description": "foo",
                                        "api_schema": {
                                            "url": "foo"
                                        }
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "tool_config": {
                                    "name": "foo",
                                    "description": "foo",
                                    "response_timeout_secs": 20,
                                    "type": "webhook",
                                    "api_schema": {
                                        "url": "foo",
                                        "method": "GET",
                                        "path_params_schema": {},
                                        "query_params_schema": {
                                            "properties": {},
                                            "required": [
                                                "foo"
                                            ]
                                        },
                                        "request_body_schema": {
                                            "type": "object",
                                            "required": [
                                                "foo"
                                            ],
                                            "description": "",
                                            "properties": {}
                                        },
                                        "request_headers": {}
                                    },
                                    "dynamic_variables": {
                                        "dynamic_variable_placeholders": {}
                                    }
                                },
                                "access_info": {
                                    "is_creator": true,
                                    "creator_name": "foo",
                                    "creator_email": "foo",
                                    "role": "admin"
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "tool_config": {
                                        "name": "foo",
                                        "description": "foo",
                                        "response_timeout_secs": 20,
                                        "type": "webhook",
                                        "api_schema": {
                                            "url": "foo",
                                            "method": "GET",
                                            "path_params_schema": {},
                                            "query_params_schema": {
                                                "properties": {},
                                                "required": [
                                                    "foo"
                                                ]
                                            },
                                            "request_body_schema": {
                                                "type": "object",
                                                "required": [
                                                    "foo"
                                                ],
                                                "description": "",
                                                "properties": {}
                                            },
                                            "request_headers": {}
                                        },
                                        "dynamic_variables": {
                                            "dynamic_variable_placeholders": {}
                                        }
                                    },
                                    "access_info": {
                                        "is_creator": true,
                                        "creator_name": "foo",
                                        "creator_email": "foo",
                                        "role": "admin"
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get tool that is available in the workspace.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_conversationalAi/tools.get",
                    "name": "Get Tool",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the requested tool.",
                                "key": "tool_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/tools/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "tool_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ToolResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/tools/tool_id",
                            "pathParameters": {
                                "tool_id": "tool_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "tool_config": {
                                    "name": "foo",
                                    "description": "foo",
                                    "response_timeout_secs": 20,
                                    "type": "webhook",
                                    "api_schema": {
                                        "url": "foo",
                                        "method": "GET",
                                        "path_params_schema": {},
                                        "query_params_schema": {
                                            "properties": {},
                                            "required": [
                                                "foo"
                                            ]
                                        },
                                        "request_body_schema": {
                                            "type": "object",
                                            "required": [
                                                "foo"
                                            ],
                                            "description": "",
                                            "properties": {}
                                        },
                                        "request_headers": {}
                                    },
                                    "dynamic_variables": {
                                        "dynamic_variable_placeholders": {}
                                    }
                                },
                                "access_info": {
                                    "is_creator": true,
                                    "creator_name": "foo",
                                    "creator_email": "foo",
                                    "role": "admin"
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "tool_config": {
                                        "name": "foo",
                                        "description": "foo",
                                        "response_timeout_secs": 20,
                                        "type": "webhook",
                                        "api_schema": {
                                            "url": "foo",
                                            "method": "GET",
                                            "path_params_schema": {},
                                            "query_params_schema": {
                                                "properties": {},
                                                "required": [
                                                    "foo"
                                                ]
                                            },
                                            "request_body_schema": {
                                                "type": "object",
                                                "required": [
                                                    "foo"
                                                ],
                                                "description": "",
                                                "properties": {}
                                            },
                                            "request_headers": {}
                                        },
                                        "dynamic_variables": {
                                            "dynamic_variable_placeholders": {}
                                        }
                                    },
                                    "access_info": {
                                        "is_creator": true,
                                        "creator_name": "foo",
                                        "creator_email": "foo",
                                        "role": "admin"
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Delete tool from the workspace.",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_conversationalAi/tools.delete",
                    "name": "Delete Tool",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the requested tool.",
                                "key": "tool_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/tools/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "tool_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "unknown"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/tools/tool_id",
                            "pathParameters": {
                                "tool_id": "tool_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Update tool that is available in the workspace.",
                    "method": "PATCH",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_conversationalAi/tools.update",
                    "name": "Update Tool",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the requested tool.",
                                "key": "tool_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/tools/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "tool_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "ToolRequestModel"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ToolResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/tools/tool_id",
                            "pathParameters": {
                                "tool_id": "tool_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "tool_config": {
                                    "name": "foo",
                                    "description": "foo",
                                    "api_schema": {
                                        "url": "foo"
                                    }
                                }
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "tool_config": {
                                        "name": "foo",
                                        "description": "foo",
                                        "api_schema": {
                                            "url": "foo"
                                        }
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "tool_config": {
                                    "name": "foo",
                                    "description": "foo",
                                    "response_timeout_secs": 20,
                                    "type": "webhook",
                                    "api_schema": {
                                        "url": "foo",
                                        "method": "GET",
                                        "path_params_schema": {},
                                        "query_params_schema": {
                                            "properties": {},
                                            "required": [
                                                "foo"
                                            ]
                                        },
                                        "request_body_schema": {
                                            "type": "object",
                                            "required": [
                                                "foo"
                                            ],
                                            "description": "",
                                            "properties": {}
                                        },
                                        "request_headers": {}
                                    },
                                    "dynamic_variables": {
                                        "dynamic_variable_placeholders": {}
                                    }
                                },
                                "access_info": {
                                    "is_creator": true,
                                    "creator_name": "foo",
                                    "creator_email": "foo",
                                    "role": "admin"
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "tool_config": {
                                        "name": "foo",
                                        "description": "foo",
                                        "response_timeout_secs": 20,
                                        "type": "webhook",
                                        "api_schema": {
                                            "url": "foo",
                                            "method": "GET",
                                            "path_params_schema": {},
                                            "query_params_schema": {
                                                "properties": {},
                                                "required": [
                                                    "foo"
                                                ]
                                            },
                                            "request_body_schema": {
                                                "type": "object",
                                                "required": [
                                                    "foo"
                                                ],
                                                "description": "",
                                                "properties": {}
                                            },
                                            "request_headers": {}
                                        },
                                        "dynamic_variables": {
                                            "dynamic_variable_placeholders": {}
                                        }
                                    },
                                    "access_info": {
                                        "is_creator": true,
                                        "creator_name": "foo",
                                        "creator_email": "foo",
                                        "role": "admin"
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get a list of agents depending on this tool",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get_dependent_agents",
                    "originalEndpointId": "endpoint_conversationalAi/tools.get_dependent_agents",
                    "name": "Get Dependent Agents List",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the requested tool.",
                                "key": "tool_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/tools/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "tool_id"
                            },
                            {
                                "type": "literal",
                                "value": "/dependent-agents"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "description": "Used for fetching next page. Cursor is returned in the response.",
                            "key": "cursor",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
                            "key": "page_size",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 100,
                                        "default": 30
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetToolDependentAgentsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/tools/tool_id/dependent-agents",
                            "pathParameters": {
                                "tool_id": "tool_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "agents": [
                                    {
                                        "type": "unknown"
                                    }
                                ],
                                "next_cursor": "foo",
                                "has_more": true
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "agents": [
                                        {
                                            "type": "unknown"
                                        }
                                    ],
                                    "next_cursor": "foo",
                                    "has_more": true
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/settings": {
            "subpackageId": "subpackage_conversationalAi/settings",
            "name": "settings",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Retrieve Convai settings for the workspace",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_conversationalAi/settings.get",
                    "name": "Get Convai Settings",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/settings"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetConvAISettingsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/settings",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "conversation_initiation_client_data_webhook": {
                                    "url": "foo",
                                    "request_headers": {}
                                },
                                "webhooks": {
                                    "post_call_webhook_id": "foo"
                                },
                                "can_use_mcp_servers": false,
                                "rag_retention_period_days": 10
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "conversation_initiation_client_data_webhook": {
                                        "url": "foo",
                                        "request_headers": {}
                                    },
                                    "webhooks": {
                                        "post_call_webhook_id": "foo"
                                    },
                                    "can_use_mcp_servers": false,
                                    "rag_retention_period_days": 10
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Update Convai settings for the workspace",
                    "method": "PATCH",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_conversationalAi/settings.update",
                    "name": "Update Convai Settings",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/settings"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "PatchConvAISettingsRequest"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetConvAISettingsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/settings",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "conversation_initiation_client_data_webhook": {
                                    "url": "foo",
                                    "request_headers": {}
                                },
                                "webhooks": {
                                    "post_call_webhook_id": "foo"
                                },
                                "can_use_mcp_servers": false,
                                "rag_retention_period_days": 10
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "conversation_initiation_client_data_webhook": {
                                        "url": "foo",
                                        "request_headers": {}
                                    },
                                    "webhooks": {
                                        "post_call_webhook_id": "foo"
                                    },
                                    "can_use_mcp_servers": false,
                                    "rag_retention_period_days": 10
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/dashboard": {
            "subpackageId": "subpackage_conversationalAi/dashboard",
            "name": "dashboard",
            "endpoints": [],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_conversationalAi/dashboard/settings"
            ]
        },
        "subpackage_conversationalAi/dashboard/settings": {
            "subpackageId": "subpackage_conversationalAi/dashboard/settings",
            "name": "settings",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Retrieve Convai dashboard settings for the workspace",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_conversationalAi/dashboard/settings.get",
                    "name": "Get Convai Dashboard Settings",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/settings/dashboard"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetConvAIDashboardSettingsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/settings/dashboard",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "charts": [
                                    {
                                        "name": "foo",
                                        "type": "call_success"
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "charts": [
                                        {
                                            "name": "foo",
                                            "type": "call_success"
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Update Convai dashboard settings for the workspace",
                    "method": "PATCH",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_conversationalAi/dashboard/settings.update",
                    "name": "Update Convai Dashboard Settings",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/settings/dashboard"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "PatchConvAIDashboardSettingsRequest"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetConvAIDashboardSettingsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/settings/dashboard",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "charts": [
                                    {
                                        "name": "foo",
                                        "type": "call_success"
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "charts": [
                                        {
                                            "name": "foo",
                                            "type": "call_success"
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/secrets": {
            "subpackageId": "subpackage_conversationalAi/secrets",
            "name": "secrets",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Get all workspace secrets for the user",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_conversationalAi/secrets.list",
                    "name": "Get Convai Workspace Secrets",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/secrets"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "GetWorkspaceSecretsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/secrets",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "secrets": [
                                    {
                                        "type": "foo",
                                        "secret_id": "foo",
                                        "name": "foo",
                                        "used_by": {
                                            "tools": [
                                                {
                                                    "type": "unknown"
                                                }
                                            ],
                                            "agents": [
                                                {
                                                    "type": "unknown"
                                                }
                                            ],
                                            "others": [
                                                "conversation_initiation_webhook"
                                            ],
                                            "phone_numbers": [
                                                {
                                                    "phone_number_id": "foo",
                                                    "phone_number": "foo",
                                                    "label": "foo",
                                                    "provider": "twilio"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "secrets": [
                                        {
                                            "type": "foo",
                                            "secret_id": "foo",
                                            "name": "foo",
                                            "used_by": {
                                                "tools": [
                                                    {
                                                        "type": "unknown"
                                                    }
                                                ],
                                                "agents": [
                                                    {
                                                        "type": "unknown"
                                                    }
                                                ],
                                                "others": [
                                                    "conversation_initiation_webhook"
                                                ],
                                                "phone_numbers": [
                                                    {
                                                        "phone_number_id": "foo",
                                                        "phone_number": "foo",
                                                        "label": "foo",
                                                        "provider": "twilio"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Create a new secret for the workspace",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_conversationalAi/secrets.create",
                    "name": "Create Convai Workspace Secret",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/secrets"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "PostWorkspaceSecretRequest"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "PostWorkspaceSecretResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/secrets",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "type": "foo",
                                "name": "foo",
                                "value": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "type": "foo",
                                    "name": "foo",
                                    "value": "foo"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "type": "foo",
                                "secret_id": "foo",
                                "name": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "type": "foo",
                                    "secret_id": "foo",
                                    "name": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Delete a workspace secret if it's not in use",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_conversationalAi/secrets.delete",
                    "name": "Delete Convai Workspace Secret",
                    "path": {
                        "pathParameters": [
                            {
                                "key": "secret_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/secrets/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "secret_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/secrets/secret_id",
                            "pathParameters": {
                                "secret_id": "secret_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/batchCalls": {
            "subpackageId": "subpackage_conversationalAi/batchCalls",
            "name": "batchCalls",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Submit a batch call request to schedule calls for multiple recipients.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_conversationalAi/batchCalls.create",
                    "name": "Submit A Batch Call Request.",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/batch-calling/submit"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Submit_a_batch_call_request__v1_convai_batch_calling_submit_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "BatchCallResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/batch-calling/submit",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "call_name": "foo",
                                "agent_id": "foo",
                                "agent_phone_number_id": "foo",
                                "scheduled_time_unix": 42,
                                "recipients": [
                                    {
                                        "phone_number": "foo"
                                    }
                                ]
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "call_name": "foo",
                                    "agent_id": "foo",
                                    "agent_phone_number_id": "foo",
                                    "scheduled_time_unix": 42,
                                    "recipients": [
                                        {
                                            "phone_number": "foo"
                                        }
                                    ]
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "phone_number_id": "foo",
                                "phone_provider": "twilio",
                                "name": "foo",
                                "agent_id": "foo",
                                "created_at_unix": 42,
                                "scheduled_time_unix": 42,
                                "total_calls_dispatched": 42,
                                "total_calls_scheduled": 42,
                                "last_updated_at_unix": 42,
                                "status": "pending",
                                "agent_name": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "phone_number_id": "foo",
                                    "phone_provider": "twilio",
                                    "name": "foo",
                                    "agent_id": "foo",
                                    "created_at_unix": 42,
                                    "scheduled_time_unix": 42,
                                    "total_calls_dispatched": 42,
                                    "total_calls_scheduled": 42,
                                    "last_updated_at_unix": 42,
                                    "status": "pending",
                                    "agent_name": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get all batch calls for the current workspace.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_conversationalAi/batchCalls.list",
                    "name": "Get All Batch Calls For A Workspace.",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/batch-calling/workspace"
                            }
                        ]
                    },
                    "queryParameters": [
                        {
                            "key": "limit",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "default": 100
                                    }
                                }
                            }
                        },
                        {
                            "key": "last_doc",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "nullable",
                                    "itemType": {
                                        "type": "primitive",
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    ],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "WorkspaceBatchCallsResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/batch-calling/workspace",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "batch_calls": [
                                    {
                                        "id": "foo",
                                        "phone_number_id": "foo",
                                        "phone_provider": "twilio",
                                        "name": "foo",
                                        "agent_id": "foo",
                                        "created_at_unix": 42,
                                        "scheduled_time_unix": 42,
                                        "total_calls_dispatched": 42,
                                        "total_calls_scheduled": 42,
                                        "last_updated_at_unix": 42,
                                        "status": "pending",
                                        "agent_name": "foo"
                                    }
                                ],
                                "next_doc": "foo",
                                "has_more": false
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "batch_calls": [
                                        {
                                            "id": "foo",
                                            "phone_number_id": "foo",
                                            "phone_provider": "twilio",
                                            "name": "foo",
                                            "agent_id": "foo",
                                            "created_at_unix": 42,
                                            "scheduled_time_unix": 42,
                                            "total_calls_dispatched": 42,
                                            "total_calls_scheduled": 42,
                                            "last_updated_at_unix": 42,
                                            "status": "pending",
                                            "agent_name": "foo"
                                        }
                                    ],
                                    "next_doc": "foo",
                                    "has_more": false
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Get detailed information about a batch call including all recipients.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_conversationalAi/batchCalls.get",
                    "name": "Get A Batch Call By Id.",
                    "path": {
                        "pathParameters": [
                            {
                                "key": "batch_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/batch-calling/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "batch_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "BatchCallDetailedResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/batch-calling/batch_id",
                            "pathParameters": {
                                "batch_id": "batch_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "phone_number_id": "foo",
                                "phone_provider": "twilio",
                                "name": "foo",
                                "agent_id": "foo",
                                "created_at_unix": 42,
                                "scheduled_time_unix": 42,
                                "total_calls_dispatched": 42,
                                "total_calls_scheduled": 42,
                                "last_updated_at_unix": 42,
                                "status": "pending",
                                "agent_name": "foo",
                                "recipients": [
                                    {
                                        "id": "foo",
                                        "phone_number": "foo",
                                        "status": "pending",
                                        "created_at_unix": 42,
                                        "updated_at_unix": 42,
                                        "conversation_id": "foo",
                                        "conversation_initiation_client_data": {
                                            "conversation_config_override": {
                                                "tts": {
                                                    "voice_id": "foo"
                                                },
                                                "conversation": {
                                                    "text_only": true
                                                },
                                                "agent": {
                                                    "first_message": "foo",
                                                    "language": "foo",
                                                    "prompt": {
                                                        "prompt": "foo"
                                                    }
                                                }
                                            },
                                            "custom_llm_extra_body": {},
                                            "dynamic_variables": {}
                                        }
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "phone_number_id": "foo",
                                    "phone_provider": "twilio",
                                    "name": "foo",
                                    "agent_id": "foo",
                                    "created_at_unix": 42,
                                    "scheduled_time_unix": 42,
                                    "total_calls_dispatched": 42,
                                    "total_calls_scheduled": 42,
                                    "last_updated_at_unix": 42,
                                    "status": "pending",
                                    "agent_name": "foo",
                                    "recipients": [
                                        {
                                            "id": "foo",
                                            "phone_number": "foo",
                                            "status": "pending",
                                            "created_at_unix": 42,
                                            "updated_at_unix": 42,
                                            "conversation_id": "foo",
                                            "conversation_initiation_client_data": {
                                                "conversation_config_override": {
                                                    "tts": {
                                                        "voice_id": "foo"
                                                    },
                                                    "conversation": {
                                                        "text_only": true
                                                    },
                                                    "agent": {
                                                        "first_message": "foo",
                                                        "language": "foo",
                                                        "prompt": {
                                                            "prompt": "foo"
                                                        }
                                                    }
                                                },
                                                "custom_llm_extra_body": {},
                                                "dynamic_variables": {}
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Cancel a running batch call and set all recipients to cancelled status.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "cancel",
                    "originalEndpointId": "endpoint_conversationalAi/batchCalls.cancel",
                    "name": "Cancel A Batch Call.",
                    "path": {
                        "pathParameters": [
                            {
                                "key": "batch_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/batch-calling/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "batch_id"
                            },
                            {
                                "type": "literal",
                                "value": "/cancel"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "BatchCallResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/batch-calling/batch_id/cancel",
                            "pathParameters": {
                                "batch_id": "batch_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "phone_number_id": "foo",
                                "phone_provider": "twilio",
                                "name": "foo",
                                "agent_id": "foo",
                                "created_at_unix": 42,
                                "scheduled_time_unix": 42,
                                "total_calls_dispatched": 42,
                                "total_calls_scheduled": 42,
                                "last_updated_at_unix": 42,
                                "status": "pending",
                                "agent_name": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "phone_number_id": "foo",
                                    "phone_provider": "twilio",
                                    "name": "foo",
                                    "agent_id": "foo",
                                    "created_at_unix": 42,
                                    "scheduled_time_unix": 42,
                                    "total_calls_dispatched": 42,
                                    "total_calls_scheduled": 42,
                                    "last_updated_at_unix": 42,
                                    "status": "pending",
                                    "agent_name": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Retry a batch call by setting completed recipients back to pending status.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "retry",
                    "originalEndpointId": "endpoint_conversationalAi/batchCalls.retry",
                    "name": "Retry A Batch Call.",
                    "path": {
                        "pathParameters": [
                            {
                                "key": "batch_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/batch-calling/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "batch_id"
                            },
                            {
                                "type": "literal",
                                "value": "/retry"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "BatchCallResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/batch-calling/batch_id/retry",
                            "pathParameters": {
                                "batch_id": "batch_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "phone_number_id": "foo",
                                "phone_provider": "twilio",
                                "name": "foo",
                                "agent_id": "foo",
                                "created_at_unix": 42,
                                "scheduled_time_unix": 42,
                                "total_calls_dispatched": 42,
                                "total_calls_scheduled": 42,
                                "last_updated_at_unix": 42,
                                "status": "pending",
                                "agent_name": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "phone_number_id": "foo",
                                    "phone_provider": "twilio",
                                    "name": "foo",
                                    "agent_id": "foo",
                                    "created_at_unix": 42,
                                    "scheduled_time_unix": 42,
                                    "total_calls_dispatched": 42,
                                    "total_calls_scheduled": 42,
                                    "last_updated_at_unix": 42,
                                    "status": "pending",
                                    "agent_name": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/sipTrunk": {
            "subpackageId": "subpackage_conversationalAi/sipTrunk",
            "name": "sipTrunk",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Handle an outbound call via SIP trunk",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "outbound_call",
                    "originalEndpointId": "endpoint_conversationalAi/sipTrunk.outbound_call",
                    "name": "Handle An Outbound Call Via Sip Trunk",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/sip-trunk/outbound-call"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Handle_an_outbound_call_via_SIP_trunk_v1_convai_sip_trunk_outbound_call_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "SIPTrunkOutboundCallResponse"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/sip-trunk/outbound-call",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "agent_id": "foo",
                                "agent_phone_number_id": "foo",
                                "to_number": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "agent_id": "foo",
                                    "agent_phone_number_id": "foo",
                                    "to_number": "foo"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "success": true,
                                "message": "foo",
                                "conversation_id": "foo",
                                "sip_call_id": "foo"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "success": true,
                                    "message": "foo",
                                    "conversation_id": "foo",
                                    "sip_call_id": "foo"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/mcpServers": {
            "subpackageId": "subpackage_conversationalAi/mcpServers",
            "name": "mcpServers",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Retrieve all MCP server configurations available in the workspace.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_conversationalAi/mcpServers.list",
                    "name": "List Mcp Servers",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/mcp-servers"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "MCPServersResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/mcp-servers",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "mcp_servers": [
                                    {
                                        "id": "foo",
                                        "config": {
                                            "approval_policy": "auto_approve_all",
                                            "tool_approval_hashes": [
                                                {
                                                    "tool_name": "foo",
                                                    "tool_hash": "foo",
                                                    "approval_policy": "auto_approved"
                                                }
                                            ],
                                            "transport": "SSE",
                                            "url": "foo",
                                            "secret_token": {
                                                "secret_id": "foo"
                                            },
                                            "request_headers": {},
                                            "name": "foo",
                                            "description": ""
                                        },
                                        "access_info": {
                                            "is_creator": true,
                                            "creator_name": "foo",
                                            "creator_email": "foo",
                                            "role": "admin"
                                        },
                                        "dependent_agents": [
                                            {
                                                "type": "unknown"
                                            }
                                        ],
                                        "metadata": {
                                            "created_at": 42,
                                            "owner_user_id": "foo"
                                        }
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "mcp_servers": [
                                        {
                                            "id": "foo",
                                            "config": {
                                                "approval_policy": "auto_approve_all",
                                                "tool_approval_hashes": [
                                                    {
                                                        "tool_name": "foo",
                                                        "tool_hash": "foo",
                                                        "approval_policy": "auto_approved"
                                                    }
                                                ],
                                                "transport": "SSE",
                                                "url": "foo",
                                                "secret_token": {
                                                    "secret_id": "foo"
                                                },
                                                "request_headers": {},
                                                "name": "foo",
                                                "description": ""
                                            },
                                            "access_info": {
                                                "is_creator": true,
                                                "creator_name": "foo",
                                                "creator_email": "foo",
                                                "role": "admin"
                                            },
                                            "dependent_agents": [
                                                {
                                                    "type": "unknown"
                                                }
                                            ],
                                            "metadata": {
                                                "created_at": 42,
                                                "owner_user_id": "foo"
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Create a new MCP server configuration in the workspace.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_conversationalAi/mcpServers.create",
                    "name": "Create Mcp Server",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/mcp-servers"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "MCPServerRequestModel"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "MCPServerResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/mcp-servers",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "config": {
                                    "url": "foo",
                                    "name": "foo"
                                }
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "config": {
                                        "url": "foo",
                                        "name": "foo"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "config": {
                                    "approval_policy": "auto_approve_all",
                                    "tool_approval_hashes": [
                                        {
                                            "tool_name": "foo",
                                            "tool_hash": "foo",
                                            "approval_policy": "auto_approved"
                                        }
                                    ],
                                    "transport": "SSE",
                                    "url": "foo",
                                    "secret_token": {
                                        "secret_id": "foo"
                                    },
                                    "request_headers": {},
                                    "name": "foo",
                                    "description": ""
                                },
                                "access_info": {
                                    "is_creator": true,
                                    "creator_name": "foo",
                                    "creator_email": "foo",
                                    "role": "admin"
                                },
                                "dependent_agents": [
                                    {
                                        "type": "unknown"
                                    }
                                ],
                                "metadata": {
                                    "created_at": 42,
                                    "owner_user_id": "foo"
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "config": {
                                        "approval_policy": "auto_approve_all",
                                        "tool_approval_hashes": [
                                            {
                                                "tool_name": "foo",
                                                "tool_hash": "foo",
                                                "approval_policy": "auto_approved"
                                            }
                                        ],
                                        "transport": "SSE",
                                        "url": "foo",
                                        "secret_token": {
                                            "secret_id": "foo"
                                        },
                                        "request_headers": {},
                                        "name": "foo",
                                        "description": ""
                                    },
                                    "access_info": {
                                        "is_creator": true,
                                        "creator_name": "foo",
                                        "creator_email": "foo",
                                        "role": "admin"
                                    },
                                    "dependent_agents": [
                                        {
                                            "type": "unknown"
                                        }
                                    ],
                                    "metadata": {
                                        "created_at": 42,
                                        "owner_user_id": "foo"
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Retrieve a specific MCP server configuration from the workspace.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_conversationalAi/mcpServers.get",
                    "name": "Get Mcp Server",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the MCP Server.",
                                "key": "mcp_server_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/mcp-servers/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "mcp_server_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "MCPServerResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/mcp-servers/mcp_server_id",
                            "pathParameters": {
                                "mcp_server_id": "mcp_server_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "config": {
                                    "approval_policy": "auto_approve_all",
                                    "tool_approval_hashes": [
                                        {
                                            "tool_name": "foo",
                                            "tool_hash": "foo",
                                            "approval_policy": "auto_approved"
                                        }
                                    ],
                                    "transport": "SSE",
                                    "url": "foo",
                                    "secret_token": {
                                        "secret_id": "foo"
                                    },
                                    "request_headers": {},
                                    "name": "foo",
                                    "description": ""
                                },
                                "access_info": {
                                    "is_creator": true,
                                    "creator_name": "foo",
                                    "creator_email": "foo",
                                    "role": "admin"
                                },
                                "dependent_agents": [
                                    {
                                        "type": "unknown"
                                    }
                                ],
                                "metadata": {
                                    "created_at": 42,
                                    "owner_user_id": "foo"
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "config": {
                                        "approval_policy": "auto_approve_all",
                                        "tool_approval_hashes": [
                                            {
                                                "tool_name": "foo",
                                                "tool_hash": "foo",
                                                "approval_policy": "auto_approved"
                                            }
                                        ],
                                        "transport": "SSE",
                                        "url": "foo",
                                        "secret_token": {
                                            "secret_id": "foo"
                                        },
                                        "request_headers": {},
                                        "name": "foo",
                                        "description": ""
                                    },
                                    "access_info": {
                                        "is_creator": true,
                                        "creator_name": "foo",
                                        "creator_email": "foo",
                                        "role": "admin"
                                    },
                                    "dependent_agents": [
                                        {
                                            "type": "unknown"
                                        }
                                    ],
                                    "metadata": {
                                        "created_at": 42,
                                        "owner_user_id": "foo"
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_conversationalAi/mcpServers/tools",
                "subpackage_conversationalAi/mcpServers/approvalPolicy",
                "subpackage_conversationalAi/mcpServers/toolApprovals"
            ]
        },
        "subpackage_conversationalAi/mcpServers/tools": {
            "subpackageId": "subpackage_conversationalAi/mcpServers/tools",
            "name": "tools",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Retrieve all tools available for a specific MCP server configuration.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "list",
                    "originalEndpointId": "endpoint_conversationalAi/mcpServers/tools.list",
                    "name": "List Mcp Server Tools",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the MCP Server.",
                                "key": "mcp_server_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/mcp-servers/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "mcp_server_id"
                            },
                            {
                                "type": "literal",
                                "value": "/tools"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "ListMCPToolsResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/mcp-servers/mcp_server_id/tools",
                            "pathParameters": {
                                "mcp_server_id": "mcp_server_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "success": true,
                                "tools": [
                                    {
                                        "name": "weather_by_zapier_get_tomorrow",
                                        "description": "Gets tomorrow's forecasted weather conditions for a location.",
                                        "inputSchema": {
                                            "properties": {
                                                "latitude": {
                                                    "description": "Latitude",
                                                    "type": "string"
                                                },
                                                "longitude": {
                                                    "description": "Longitude",
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "latitude",
                                                "longitude"
                                            ],
                                            "type": "object"
                                        }
                                    },
                                    {
                                        "name": "tool2",
                                        "description": "Description of tool2",
                                        "inputSchema": {}
                                    }
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "success": true,
                                    "tools": [
                                        {
                                            "name": "weather_by_zapier_get_tomorrow",
                                            "description": "Gets tomorrow's forecasted weather conditions for a location.",
                                            "inputSchema": {
                                                "properties": {
                                                    "latitude": {
                                                        "description": "Latitude",
                                                        "type": "string"
                                                    },
                                                    "longitude": {
                                                        "description": "Longitude",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "latitude",
                                                    "longitude"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        {
                                            "name": "tool2",
                                            "description": "Description of tool2",
                                            "inputSchema": {}
                                        }
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/mcpServers/approvalPolicy": {
            "subpackageId": "subpackage_conversationalAi/mcpServers/approvalPolicy",
            "name": "approvalPolicy",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Update the approval policy configuration for an MCP server.",
                    "method": "PATCH",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_conversationalAi/mcpServers/approvalPolicy.update",
                    "name": "Update Mcp Server Approval Policy",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the MCP Server.",
                                "key": "mcp_server_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/mcp-servers/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "mcp_server_id"
                            },
                            {
                                "type": "literal",
                                "value": "/approval-policy"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "MCPApprovalPolicyUpdateRequestModel"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "MCPServerResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/mcp-servers/mcp_server_id/approval-policy",
                            "pathParameters": {
                                "mcp_server_id": "mcp_server_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "approval_policy": "auto_approve_all"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "approval_policy": "auto_approve_all"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "config": {
                                    "approval_policy": "auto_approve_all",
                                    "tool_approval_hashes": [
                                        {
                                            "tool_name": "foo",
                                            "tool_hash": "foo",
                                            "approval_policy": "auto_approved"
                                        }
                                    ],
                                    "transport": "SSE",
                                    "url": "foo",
                                    "secret_token": {
                                        "secret_id": "foo"
                                    },
                                    "request_headers": {},
                                    "name": "foo",
                                    "description": ""
                                },
                                "access_info": {
                                    "is_creator": true,
                                    "creator_name": "foo",
                                    "creator_email": "foo",
                                    "role": "admin"
                                },
                                "dependent_agents": [
                                    {
                                        "type": "unknown"
                                    }
                                ],
                                "metadata": {
                                    "created_at": 42,
                                    "owner_user_id": "foo"
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "config": {
                                        "approval_policy": "auto_approve_all",
                                        "tool_approval_hashes": [
                                            {
                                                "tool_name": "foo",
                                                "tool_hash": "foo",
                                                "approval_policy": "auto_approved"
                                            }
                                        ],
                                        "transport": "SSE",
                                        "url": "foo",
                                        "secret_token": {
                                            "secret_id": "foo"
                                        },
                                        "request_headers": {},
                                        "name": "foo",
                                        "description": ""
                                    },
                                    "access_info": {
                                        "is_creator": true,
                                        "creator_name": "foo",
                                        "creator_email": "foo",
                                        "role": "admin"
                                    },
                                    "dependent_agents": [
                                        {
                                            "type": "unknown"
                                        }
                                    ],
                                    "metadata": {
                                        "created_at": 42,
                                        "owner_user_id": "foo"
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_conversationalAi/mcpServers/toolApprovals": {
            "subpackageId": "subpackage_conversationalAi/mcpServers/toolApprovals",
            "name": "toolApprovals",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Add approval for a specific MCP tool when using per-tool approval mode.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_conversationalAi/mcpServers/toolApprovals.create",
                    "name": "Create Mcp Server Tool Approval",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the MCP Server.",
                                "key": "mcp_server_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/mcp-servers/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "mcp_server_id"
                            },
                            {
                                "type": "literal",
                                "value": "/tool-approvals"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "MCPToolAddApprovalRequestModel"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "MCPServerResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/mcp-servers/mcp_server_id/tool-approvals",
                            "pathParameters": {
                                "mcp_server_id": "mcp_server_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "tool_name": "foo",
                                "tool_description": "foo"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "tool_name": "foo",
                                    "tool_description": "foo"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "config": {
                                    "approval_policy": "auto_approve_all",
                                    "tool_approval_hashes": [
                                        {
                                            "tool_name": "foo",
                                            "tool_hash": "foo",
                                            "approval_policy": "auto_approved"
                                        }
                                    ],
                                    "transport": "SSE",
                                    "url": "foo",
                                    "secret_token": {
                                        "secret_id": "foo"
                                    },
                                    "request_headers": {},
                                    "name": "foo",
                                    "description": ""
                                },
                                "access_info": {
                                    "is_creator": true,
                                    "creator_name": "foo",
                                    "creator_email": "foo",
                                    "role": "admin"
                                },
                                "dependent_agents": [
                                    {
                                        "type": "unknown"
                                    }
                                ],
                                "metadata": {
                                    "created_at": 42,
                                    "owner_user_id": "foo"
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "config": {
                                        "approval_policy": "auto_approve_all",
                                        "tool_approval_hashes": [
                                            {
                                                "tool_name": "foo",
                                                "tool_hash": "foo",
                                                "approval_policy": "auto_approved"
                                            }
                                        ],
                                        "transport": "SSE",
                                        "url": "foo",
                                        "secret_token": {
                                            "secret_id": "foo"
                                        },
                                        "request_headers": {},
                                        "name": "foo",
                                        "description": ""
                                    },
                                    "access_info": {
                                        "is_creator": true,
                                        "creator_name": "foo",
                                        "creator_email": "foo",
                                        "role": "admin"
                                    },
                                    "dependent_agents": [
                                        {
                                            "type": "unknown"
                                        }
                                    ],
                                    "metadata": {
                                        "created_at": 42,
                                        "owner_user_id": "foo"
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Remove approval for a specific MCP tool when using per-tool approval mode.",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_conversationalAi/mcpServers/toolApprovals.delete",
                    "name": "Delete Mcp Server Tool Approval",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "ID of the MCP Server.",
                                "key": "mcp_server_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "Name of the MCP tool to remove approval for.",
                                "key": "tool_name",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/convai/mcp-servers/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "mcp_server_id"
                            },
                            {
                                "type": "literal",
                                "value": "/tool-approvals/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "tool_name"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "MCPServerResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/convai/mcp-servers/mcp_server_id/tool-approvals/tool_name",
                            "pathParameters": {
                                "mcp_server_id": "mcp_server_id",
                                "tool_name": "tool_name"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "id": "foo",
                                "config": {
                                    "approval_policy": "auto_approve_all",
                                    "tool_approval_hashes": [
                                        {
                                            "tool_name": "foo",
                                            "tool_hash": "foo",
                                            "approval_policy": "auto_approved"
                                        }
                                    ],
                                    "transport": "SSE",
                                    "url": "foo",
                                    "secret_token": {
                                        "secret_id": "foo"
                                    },
                                    "request_headers": {},
                                    "name": "foo",
                                    "description": ""
                                },
                                "access_info": {
                                    "is_creator": true,
                                    "creator_name": "foo",
                                    "creator_email": "foo",
                                    "role": "admin"
                                },
                                "dependent_agents": [
                                    {
                                        "type": "unknown"
                                    }
                                ],
                                "metadata": {
                                    "created_at": 42,
                                    "owner_user_id": "foo"
                                }
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "id": "foo",
                                    "config": {
                                        "approval_policy": "auto_approve_all",
                                        "tool_approval_hashes": [
                                            {
                                                "tool_name": "foo",
                                                "tool_hash": "foo",
                                                "approval_policy": "auto_approved"
                                            }
                                        ],
                                        "transport": "SSE",
                                        "url": "foo",
                                        "secret_token": {
                                            "secret_id": "foo"
                                        },
                                        "request_headers": {},
                                        "name": "foo",
                                        "description": ""
                                    },
                                    "access_info": {
                                        "is_creator": true,
                                        "creator_name": "foo",
                                        "creator_email": "foo",
                                        "role": "admin"
                                    },
                                    "dependent_agents": [
                                        {
                                            "type": "unknown"
                                        }
                                    ],
                                    "metadata": {
                                        "created_at": 42,
                                        "owner_user_id": "foo"
                                    }
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_voices/pvc": {
            "subpackageId": "subpackage_voices/pvc",
            "name": "pvc",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Creates a new PVC voice with metadata but no samples",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_voices/pvc.create",
                    "name": "Create PVC voice",
                    "path": {
                        "pathParameters": [],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Create_PVC_voice_v1_voices_pvc_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddVoiceResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc",
                            "pathParameters": {},
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "name": "John Smith",
                                "language": "en"
                            },
                            "requestBodyV3": {
                                "type": "json",
                                "value": {
                                    "name": "John Smith",
                                    "language": "en"
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voice_id": "b38kUX8pkfYO2kHyqfFy"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voice_id": "b38kUX8pkfYO2kHyqfFy"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Edit PVC voice metadata",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_voices/pvc.update",
                    "name": "Edit Pvc Voice",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Edit_PVC_voice_v1_voices_pvc__voice_id__post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddVoiceResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc/voice_id",
                            "pathParameters": {
                                "voice_id": "voice_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voice_id": "b38kUX8pkfYO2kHyqfFy"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voice_id": "b38kUX8pkfYO2kHyqfFy"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Start PVC training process for a voice.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "train",
                    "originalEndpointId": "endpoint_voices/pvc.train",
                    "name": "Run Pvc Training",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/train"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Run_PVC_training_v1_voices_pvc__voice_id__train_post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "StartPVCVoiceTrainingResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc/voice_id/train",
                            "pathParameters": {
                                "voice_id": "voice_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_voices/pvc/samples",
                "subpackage_voices/pvc/verification"
            ]
        },
        "subpackage_voices/pvc/samples": {
            "subpackageId": "subpackage_voices/pvc/samples",
            "name": "samples",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Add audio samples to a PVC voice",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "create",
                    "originalEndpointId": "endpoint_voices/pvc/samples.create",
                    "name": "Add Samples To Pvc Voice",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/samples"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "voices_pvc_samples_create_Request",
                                "properties": [
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "fileArray",
                                            "key": "files",
                                            "isOptional": false,
                                            "contentType": "multipart/form-data",
                                            "description": "Audio files used to create the voice."
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "remove_background_noise",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "primitive",
                                                "value": {
                                                    "type": "boolean",
                                                    "default": false
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "list",
                                "itemType": {
                                    "type": "id",
                                    "value": "SampleResponseModel"
                                }
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc/voice_id/samples",
                            "pathParameters": {
                                "voice_id": "voice_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "files": [
                                    "foo"
                                ]
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "files": {
                                        "type": "filenames",
                                        "value": [
                                            "foo"
                                        ]
                                    },
                                    "remove_background_noise": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": [
                                {
                                    "sample_id": "foo",
                                    "file_name": "foo",
                                    "mime_type": "foo",
                                    "size_bytes": 42,
                                    "hash": "foo",
                                    "duration_secs": 42,
                                    "remove_background_noise": true,
                                    "has_isolated_audio": true,
                                    "has_isolated_audio_preview": true,
                                    "speaker_separation": {
                                        "voice_id": "foo",
                                        "sample_id": "foo",
                                        "status": "not_started",
                                        "speakers": {},
                                        "selected_speaker_ids": [
                                            "foo"
                                        ]
                                    },
                                    "trim_start": 42,
                                    "trim_end": 42
                                }
                            ],
                            "responseBodyV3": {
                                "type": "json",
                                "value": [
                                    {
                                        "sample_id": "foo",
                                        "file_name": "foo",
                                        "mime_type": "foo",
                                        "size_bytes": 42,
                                        "hash": "foo",
                                        "duration_secs": 42,
                                        "remove_background_noise": true,
                                        "has_isolated_audio": true,
                                        "has_isolated_audio_preview": true,
                                        "speaker_separation": {
                                            "voice_id": "foo",
                                            "sample_id": "foo",
                                            "status": "not_started",
                                            "speakers": {},
                                            "selected_speaker_ids": [
                                                "foo"
                                            ]
                                        },
                                        "trim_start": 42,
                                        "trim_end": 42
                                    }
                                ]
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Update a PVC voice sample - apply noise removal, or select speaker.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "update",
                    "originalEndpointId": "endpoint_voices/pvc/samples.update",
                    "name": "Update Pvc Voice Sample",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "Sample ID to be used",
                                "key": "sample_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/samples/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "sample_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "AddVoiceResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc/voice_id/samples/sample_id",
                            "pathParameters": {
                                "voice_id": "voice_id",
                                "sample_id": "sample_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voice_id": "b38kUX8pkfYO2kHyqfFy"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voice_id": "b38kUX8pkfYO2kHyqfFy"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Delete a sample from a PVC voice.",
                    "method": "DELETE",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "delete",
                    "originalEndpointId": "endpoint_voices/pvc/samples.delete",
                    "name": "Delete Pvc Voice Sample",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "Sample ID to be used",
                                "key": "sample_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/samples/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "sample_id"
                            },
                            {
                                "type": "literal",
                                "value": ""
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "DeleteVoiceSampleResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc/voice_id/samples/sample_id",
                            "pathParameters": {
                                "voice_id": "voice_id",
                                "sample_id": "sample_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_voices/pvc/samples/audio",
                "subpackage_voices/pvc/samples/waveform",
                "subpackage_voices/pvc/samples/speakers"
            ]
        },
        "subpackage_voices/pvc/samples/audio": {
            "subpackageId": "subpackage_voices/pvc/samples/audio",
            "name": "audio",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Retrieve the first 30 seconds of voice sample audio with or without noise removal.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_voices/pvc/samples/audio.get",
                    "name": "Retrieve Voice Sample Audio",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "Sample ID to be used",
                                "key": "sample_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/samples/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "sample_id"
                            },
                            {
                                "type": "literal",
                                "value": "/audio"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "json",
                            "contentType": "application/json",
                            "shape": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "Body_Retrieve_voice_sample_audio_v1_voices_pvc__voice_id__samples__sample_id__audio_get"
                                }
                            }
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "VoiceSamplePreviewResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc/voice_id/samples/sample_id/audio",
                            "pathParameters": {
                                "voice_id": "voice_id",
                                "sample_id": "sample_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {},
                            "requestBodyV3": {
                                "type": "json",
                                "value": {}
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "audio_base_64": "audio_base_64",
                                "voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                "media_type": "audio/mpeg",
                                "duration_secs": 5
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "audio_base_64": "audio_base_64",
                                    "voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "media_type": "audio/mpeg",
                                    "duration_secs": 5
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_voices/pvc/samples/waveform": {
            "subpackageId": "subpackage_voices/pvc/samples/waveform",
            "name": "waveform",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Retrieve the visual waveform of a voice sample.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_voices/pvc/samples/waveform.get",
                    "name": "Retrieve Voice Sample Visual Waveform",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "Sample ID to be used",
                                "key": "sample_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/samples/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "sample_id"
                            },
                            {
                                "type": "literal",
                                "value": "/waveform"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "VoiceSampleVisualWaveformResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc/voice_id/samples/sample_id/waveform",
                            "pathParameters": {
                                "voice_id": "voice_id",
                                "sample_id": "sample_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                "visual_waveform": [
                                    0.1,
                                    0.2,
                                    0.3,
                                    0.4,
                                    0.5
                                ]
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "visual_waveform": [
                                        0.1,
                                        0.2,
                                        0.3,
                                        0.4,
                                        0.5
                                    ]
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_voices/pvc/samples/speakers": {
            "subpackageId": "subpackage_voices/pvc/samples/speakers",
            "name": "speakers",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Retrieve the status of the speaker separation process and the list of detected speakers if complete.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_voices/pvc/samples/speakers.get",
                    "name": "Retrieve Speaker Separation Status",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "Sample ID to be used",
                                "key": "sample_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/samples/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "sample_id"
                            },
                            {
                                "type": "literal",
                                "value": "/speakers"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "SpeakerSeparationResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc/voice_id/samples/sample_id/speakers",
                            "pathParameters": {
                                "voice_id": "voice_id",
                                "sample_id": "sample_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                "status": "not_started"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                                    "status": "not_started"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Start speaker separation process for a sample",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "separate",
                    "originalEndpointId": "endpoint_voices/pvc/samples/speakers.separate",
                    "name": "Start Speaker Separation",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "Sample ID to be used",
                                "key": "sample_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/samples/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "sample_id"
                            },
                            {
                                "type": "literal",
                                "value": "/separate-speakers"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "StartSpeakerSeparationResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc/voice_id/samples/sample_id/separate-speakers",
                            "pathParameters": {
                                "voice_id": "voice_id",
                                "sample_id": "sample_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_voices/pvc/samples/speakers/audio"
            ]
        },
        "subpackage_voices/pvc/samples/speakers/audio": {
            "subpackageId": "subpackage_voices/pvc/samples/speakers/audio",
            "name": "audio",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Retrieve the separated audio for a specific speaker.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_voices/pvc/samples/speakers/audio.get",
                    "name": "Retrieve Separated Speaker Audio",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "Sample ID to be used",
                                "key": "sample_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            },
                            {
                                "description": "Speaker ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id}/samples/{sample_id}/speakers to list all the available speakers for a sample.",
                                "key": "speaker_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/samples/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "sample_id"
                            },
                            {
                                "type": "literal",
                                "value": "/speakers/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "speaker_id"
                            },
                            {
                                "type": "literal",
                                "value": "/audio"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "SpeakerAudioResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc/voice_id/samples/sample_id/speakers/speaker_id/audio",
                            "pathParameters": {
                                "voice_id": "voice_id",
                                "sample_id": "sample_id",
                                "speaker_id": "speaker_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "audio_base_64": "audio_base_64",
                                "media_type": "audio/mpeg",
                                "duration_secs": 5
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "audio_base_64": "audio_base_64",
                                    "media_type": "audio/mpeg",
                                    "duration_secs": 5
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_voices/pvc/verification": {
            "subpackageId": "subpackage_voices/pvc/verification",
            "name": "verification",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Request manual verification for a PVC voice.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "request",
                    "originalEndpointId": "endpoint_voices/pvc/verification.request",
                    "name": "Request Manual Verification",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/verification"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "voices_pvc_verification_request_Request",
                                "properties": [
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "fileArray",
                                            "key": "files",
                                            "isOptional": false,
                                            "contentType": "multipart/form-data",
                                            "description": "Verification documents"
                                        }
                                    },
                                    {
                                        "type": "bodyProperty",
                                        "key": "extra_text",
                                        "valueType": {
                                            "type": "optional",
                                            "itemType": {
                                                "type": "nullable",
                                                "itemType": {
                                                    "type": "primitive",
                                                    "value": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "contentType": "multipart/form-data",
                                        "description": "Extra text to be used in the manual verification process.",
                                        "exploded": false
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "RequestPVCManualVerificationResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc/voice_id/verification",
                            "pathParameters": {
                                "voice_id": "voice_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "files": [
                                    "foo"
                                ]
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "files": {
                                        "type": "filenames",
                                        "value": [
                                            "foo"
                                        ]
                                    },
                                    "extra_text": {
                                        "type": "json"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": [
                "subpackage_voices/pvc/verification/captcha"
            ]
        },
        "subpackage_voices/pvc/verification/captcha": {
            "subpackageId": "subpackage_voices/pvc/verification/captcha",
            "name": "captcha",
            "endpoints": [
                {
                    "auth": false,
                    "description": "Get captcha for PVC voice verification.",
                    "method": "GET",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "get",
                    "originalEndpointId": "endpoint_voices/pvc/verification/captcha.get",
                    "name": "Get Pvc Voice Captcha",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/captcha"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc/voice_id/captcha",
                            "pathParameters": {
                                "voice_id": "voice_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "responseStatusCode": 200
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                },
                {
                    "auth": false,
                    "description": "Submit captcha verification for PVC voice.",
                    "method": "POST",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "https://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "https://api.us.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "https://api.eu.residency.elevenlabs.io"
                        }
                    ],
                    "id": "verify",
                    "originalEndpointId": "endpoint_voices/pvc/verification/captcha.verify",
                    "name": "Verify Pvc Voice Captcha",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": ""
                            },
                            {
                                "type": "literal",
                                "value": "/v1/voices/pvc/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/captcha"
                            }
                        ]
                    },
                    "queryParameters": [],
                    "headers": [],
                    "request": {
                        "type": {
                            "type": "fileUpload",
                            "value": {
                                "name": "voices_pvc_verification_captcha_verify_Request",
                                "properties": [
                                    {
                                        "type": "file",
                                        "value": {
                                            "type": "file",
                                            "key": "recording",
                                            "isOptional": false,
                                            "contentType": "multipart/form-data",
                                            "description": "Audio recording of the user"
                                        }
                                    }
                                ]
                            },
                            "contentType": "multipart/form-data"
                        }
                    },
                    "response": {
                        "type": {
                            "type": "reference",
                            "value": {
                                "type": "id",
                                "value": "VerifyPVCVoiceCaptchaResponseModel"
                            }
                        },
                        "statusCode": 200,
                        "description": "Successful Response"
                    },
                    "errorsV2": [
                        {
                            "type": {
                                "type": "alias",
                                "value": {
                                    "type": "id",
                                    "value": "HTTPValidationError"
                                }
                            },
                            "statusCode": 422,
                            "description": "Validation Error",
                            "name": "UnprocessableEntityError",
                            "examples": []
                        }
                    ],
                    "examples": [
                        {
                            "description": "",
                            "path": "/v1/voices/pvc/voice_id/captcha",
                            "pathParameters": {
                                "voice_id": "voice_id"
                            },
                            "queryParameters": {},
                            "headers": {
                                "xi-api-key": "xi-api-key"
                            },
                            "requestBody": {
                                "recording": "foo"
                            },
                            "requestBodyV3": {
                                "type": "form",
                                "value": {
                                    "recording": {
                                        "type": "filename",
                                        "value": "foo"
                                    }
                                }
                            },
                            "responseStatusCode": 200,
                            "responseBody": {
                                "status": "ok"
                            },
                            "responseBodyV3": {
                                "type": "json",
                                "value": {
                                    "status": "ok"
                                }
                            }
                        }
                    ],
                    "protocol": {
                        "type": "rest"
                    }
                }
            ],
            "webhooks": [],
            "websockets": [],
            "types": [],
            "subpackages": []
        },
        "subpackage_v1TextToSpeechVoiceIdStreamInput": {
            "subpackageId": "subpackage_v1TextToSpeechVoiceIdStreamInput",
            "name": "v1TextToSpeechVoiceIdStreamInput",
            "endpoints": [],
            "webhooks": [],
            "websockets": [
                {
                    "auth": false,
                    "description": "The Text-to-Speech WebSockets API is designed to generate audio from partial text input\nwhile ensuring consistency throughout the generated audio. Although highly flexible,\nthe WebSockets API isn't a one-size-fits-all solution. It's well-suited for scenarios where:\n  * The input text is being streamed or generated in chunks.\n  * Word-to-audio alignment information is required.\n\nHowever, it may not be the best choice when:\n  * The entire input text is available upfront. Given that the generations are partial,\n    some buffering is involved, which could potentially result in slightly higher latency compared\n    to a standard HTTP request.\n  * You want to quickly experiment or prototype. Working with WebSockets can be harder and more\n    complex than using a standard HTTP API, which might slow down rapid development and testing.\n",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "wss://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "wss://api.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "wss://api.elevenlabs.io"
                        }
                    ],
                    "id": "v1TextToSpeechVoiceIdStreamInput",
                    "name": "V 1 Text To Speech Voice Id Stream Input",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The unique identifier for the voice to use in the TTS process.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": "/v1/text-to-speech/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/stream-input"
                            }
                        ]
                    },
                    "headers": [],
                    "queryParameters": [
                        {
                            "description": "Your authorization bearer token.",
                            "key": "authorization",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        {
                            "description": "The model ID to use.",
                            "key": "model_id",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        {
                            "description": "The ISO 639-1 language code (for specific models).",
                            "key": "language_code",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        {
                            "description": "Whether to enable logging of the request.",
                            "key": "enable_logging",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        },
                        {
                            "description": "Whether to enable SSML parsing.",
                            "key": "enable_ssml_parsing",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        },
                        {
                            "description": "The output audio format",
                            "key": "output_format",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "output_format"
                                }
                            }
                        },
                        {
                            "description": "Timeout for inactivity before a context is closed (seconds), can be up to 180 seconds.",
                            "key": "inactivity_timeout",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "default": 20
                                    }
                                }
                            }
                        },
                        {
                            "description": "Whether to include timing data with every audio chunk.",
                            "key": "sync_alignment",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        },
                        {
                            "description": "Reduces latency by disabling chunk schedule and buffers. Recommended for full sentences/phrases.",
                            "key": "auto_mode",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        },
                        {
                            "description": "This parameter controls text normalization with three modes - 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models. Defaults to 'auto'.",
                            "key": "apply_text_normalization",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "apply_text_normalization"
                                }
                            }
                        },
                        {
                            "description": "If specified, system will best-effort sample deterministically. Integer between 0 and 4294967295.",
                            "key": "seed",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 4294967295
                                    }
                                }
                            }
                        }
                    ],
                    "messages": [
                        {
                            "type": "subscribe",
                            "displayName": "subscribe",
                            "origin": "server",
                            "body": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "V1TextToSpeechVoiceIdStreamInputSubscribe"
                                }
                            },
                            "description": "Receive messages from the WebSocket"
                        },
                        {
                            "type": "publish",
                            "displayName": "publish",
                            "origin": "client",
                            "body": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "V1TextToSpeechVoiceIdStreamInputPublish"
                                }
                            },
                            "description": "Send messages to the WebSocket"
                        }
                    ],
                    "examples": [
                        {
                            "name": "",
                            "description": "",
                            "path": "/v1/text-to-speech/{voice_id}/stream-input",
                            "pathParameters": {},
                            "queryParameters": {
                                "model_id": "pcm_s16le"
                            },
                            "headers": {},
                            "messages": [
                                {
                                    "type": "publish",
                                    "body": {
                                        "text": " ",
                                        "voice_settings": {
                                            "speed": 1,
                                            "stability": 0.5,
                                            "similarity_boost": 0.8
                                        },
                                        "xi_api_key": "<YOUR_API_KEY>"
                                    }
                                },
                                {
                                    "type": "publish",
                                    "body": {
                                        "text": "Hello World ",
                                        "try_trigger_generation": true
                                    }
                                },
                                {
                                    "type": "publish",
                                    "body": {
                                        "text": ""
                                    }
                                },
                                {
                                    "type": "subscribe",
                                    "body": {
                                        "audio": "Y3VyaW91cyBtaW5kcyB0aGluayBhbGlrZSA6KQ==",
                                        "isFinal": false,
                                        "normalizedAlignment": {
                                            "charStartTimesMs": [
                                                0,
                                                3,
                                                7,
                                                9,
                                                11,
                                                12,
                                                13,
                                                15,
                                                17,
                                                19,
                                                21
                                            ],
                                            "charsDurationsMs": [
                                                3,
                                                4,
                                                2,
                                                2,
                                                1,
                                                1,
                                                2,
                                                2,
                                                2,
                                                2,
                                                3
                                            ],
                                            "chars": [
                                                "H",
                                                "e",
                                                "l",
                                                "l",
                                                "o",
                                                " ",
                                                "w",
                                                "o",
                                                "r",
                                                "l",
                                                "d"
                                            ]
                                        },
                                        "alignment": {
                                            "charStartTimesMs": [
                                                0,
                                                3,
                                                7,
                                                9,
                                                11,
                                                12,
                                                13,
                                                15,
                                                17,
                                                19,
                                                21
                                            ],
                                            "charsDurationsMs": [
                                                3,
                                                4,
                                                2,
                                                2,
                                                1,
                                                1,
                                                2,
                                                2,
                                                2,
                                                2,
                                                3
                                            ],
                                            "chars": [
                                                "H",
                                                "e",
                                                "l",
                                                "l",
                                                "o",
                                                " ",
                                                "w",
                                                "o",
                                                "r",
                                                "l",
                                                "d"
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            ],
            "types": [],
            "subpackages": []
        },
        "subpackage_v1TextToSpeechVoiceIdMultiStreamInput": {
            "subpackageId": "subpackage_v1TextToSpeechVoiceIdMultiStreamInput",
            "name": "v1TextToSpeechVoiceIdMultiStreamInput",
            "endpoints": [],
            "webhooks": [],
            "websockets": [
                {
                    "auth": false,
                    "description": "The Multi-Context Text-to-Speech WebSockets API allows for generating audio from text input\nwhile managing multiple independent audio generation streams (contexts) over a single WebSocket connection.\nThis is useful for scenarios requiring concurrent or interleaved audio generations, such as dynamic\nconversational AI applications.\n\nEach context, identified by a context id, maintains its own state. You can send text to specific\ncontexts, flush them, or close them independently. A `close_socket` message can be used to terminate\nthe entire connection gracefully.\n\nFor more information on best practices for how to use this API, please see the [multi context websocket guide](/docs/cookbooks/multi-context-web-socket).\n",
                    "defaultEnvironment": "Production",
                    "environments": [
                        {
                            "id": "Production",
                            "baseUrl": "wss://api.elevenlabs.io"
                        },
                        {
                            "id": "Production US",
                            "baseUrl": "wss://api.elevenlabs.io"
                        },
                        {
                            "id": "Production EU",
                            "baseUrl": "wss://api.elevenlabs.io"
                        }
                    ],
                    "id": "v1TextToSpeechVoiceIdMultiStreamInput",
                    "name": "V 1 Text To Speech Voice Id Multi Stream Input",
                    "path": {
                        "pathParameters": [
                            {
                                "description": "The unique identifier for the voice to use in the TTS process.",
                                "key": "voice_id",
                                "type": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        ],
                        "parts": [
                            {
                                "type": "literal",
                                "value": "/v1/text-to-speech/"
                            },
                            {
                                "type": "pathParameter",
                                "value": "voice_id"
                            },
                            {
                                "type": "literal",
                                "value": "/multi-stream-input"
                            }
                        ]
                    },
                    "headers": [],
                    "queryParameters": [
                        {
                            "description": "Your authorization bearer token.",
                            "key": "authorization",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        {
                            "description": "The model ID to use.",
                            "key": "model_id",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        {
                            "description": "The ISO 639-1 language code (for specific models).",
                            "key": "language_code",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        {
                            "description": "Whether to enable logging of the request.",
                            "key": "enable_logging",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": true
                                    }
                                }
                            }
                        },
                        {
                            "description": "Whether to enable SSML parsing.",
                            "key": "enable_ssml_parsing",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        },
                        {
                            "description": "The output audio format",
                            "key": "output_format",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "output_format"
                                }
                            }
                        },
                        {
                            "description": "Timeout for inactivity before a context is closed (seconds), can be up to 180 seconds.",
                            "key": "inactivity_timeout",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "default": 20
                                    }
                                }
                            }
                        },
                        {
                            "description": "Whether to include timing data with every audio chunk.",
                            "key": "sync_alignment",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        },
                        {
                            "description": "Reduces latency by disabling chunk schedule and buffers. Recommended for full sentences/phrases.",
                            "key": "auto_mode",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "boolean",
                                        "default": false
                                    }
                                }
                            }
                        },
                        {
                            "description": "This parameter controls text normalization with three modes - 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models. Defaults to 'auto'.",
                            "key": "apply_text_normalization",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "id",
                                    "value": "apply_text_normalization"
                                }
                            }
                        },
                        {
                            "description": "If specified, system will best-effort sample deterministically. Integer between 0 and 4294967295.",
                            "key": "seed",
                            "type": {
                                "type": "optional",
                                "itemType": {
                                    "type": "primitive",
                                    "value": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 4294967295
                                    }
                                }
                            }
                        }
                    ],
                    "messages": [
                        {
                            "type": "subscribe",
                            "displayName": "subscribe",
                            "origin": "server",
                            "body": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "V1TextToSpeechVoiceIdMultiStreamInputSubscribe"
                                }
                            },
                            "description": "Receive messages from the multi-context WebSocket."
                        },
                        {
                            "type": "publish",
                            "displayName": "publish",
                            "origin": "client",
                            "body": {
                                "type": "reference",
                                "value": {
                                    "type": "id",
                                    "value": "V1TextToSpeechVoiceIdMultiStreamInputPublish"
                                }
                            },
                            "description": "Send messages to the multi-context WebSocket."
                        }
                    ],
                    "examples": [
                        {
                            "name": "",
                            "description": "",
                            "path": "/v1/text-to-speech/{voice_id}/multi-stream-input",
                            "pathParameters": {},
                            "queryParameters": {
                                "model_id": "eleven_multilingual_v2"
                            },
                            "headers": {},
                            "messages": [
                                {
                                    "type": "publish",
                                    "body": {
                                        "text": " ",
                                        "voice_settings": {
                                            "stability": 0.5,
                                            "similarity_boost": 0.8
                                        },
                                        "context_id": "conv_1"
                                    }
                                },
                                {
                                    "type": "publish",
                                    "body": {
                                        "text": "Hello from conversation one. ",
                                        "context_id": "conv_1"
                                    }
                                },
                                {
                                    "type": "publish",
                                    "body": {
                                        "text": "This is added to the buffer of text to flush. ",
                                        "context_id": "conv_1",
                                        "flush": true
                                    }
                                },
                                {
                                    "type": "subscribe",
                                    "body": {
                                        "audio": "Y3VyaW91cyBtaW5kcyB0aGluayBhbGlrZSA6KQ==",
                                        "is_final": false,
                                        "normalizedAlignment": {
                                            "charStartTimesMs": [
                                                0,
                                                3,
                                                7,
                                                9,
                                                11,
                                                12,
                                                13,
                                                15,
                                                17,
                                                19,
                                                21
                                            ],
                                            "charsDurationsMs": [
                                                3,
                                                4,
                                                2,
                                                2,
                                                1,
                                                1,
                                                2,
                                                2,
                                                2,
                                                2,
                                                3
                                            ],
                                            "chars": [
                                                "H",
                                                "e",
                                                "l",
                                                "l",
                                                "o",
                                                " ",
                                                "w",
                                                "o",
                                                "r",
                                                "l",
                                                "d"
                                            ]
                                        },
                                        "alignment": {
                                            "charStartTimesMs": [
                                                0,
                                                3,
                                                7,
                                                9,
                                                11,
                                                12,
                                                13,
                                                15,
                                                17,
                                                19,
                                                21
                                            ],
                                            "charsDurationsMs": [
                                                3,
                                                4,
                                                2,
                                                2,
                                                1,
                                                1,
                                                2,
                                                2,
                                                2,
                                                2,
                                                3
                                            ],
                                            "chars": [
                                                "H",
                                                "e",
                                                "l",
                                                "l",
                                                "o",
                                                " ",
                                                "w",
                                                "o",
                                                "r",
                                                "l",
                                                "d"
                                            ]
                                        },
                                        "contextId": "conv_1"
                                    }
                                },
                                {
                                    "type": "publish",
                                    "body": {
                                        "text": "Hi this is a new context with different settings! ",
                                        "context_id": "interruption_context",
                                        "voice_settings": {
                                            "stability": 0.2,
                                            "similarity_boost": 0.9
                                        }
                                    }
                                },
                                {
                                    "type": "publish",
                                    "body": {
                                        "context_id": "conv_1",
                                        "close_context": true
                                    }
                                },
                                {
                                    "type": "publish",
                                    "body": {
                                        "context_id": "interruption_context",
                                        "flush": true
                                    }
                                },
                                {
                                    "type": "subscribe",
                                    "body": {
                                        "audio": "Y3VyaW91cyBtaW5kcyB0aGluayBhbGlrZSA6KQ==",
                                        "is_final": false,
                                        "contextId": "interruption_context"
                                    }
                                },
                                {
                                    "type": "subscribe",
                                    "body": {
                                        "is_final": true,
                                        "contextId": "interruption_context"
                                    }
                                },
                                {
                                    "type": "publish",
                                    "body": {
                                        "context_id": "interruption_context",
                                        "text": ""
                                    }
                                },
                                {
                                    "type": "publish",
                                    "body": {
                                        "close_socket": true
                                    }
                                }
                            ]
                        }
                    ]
                }
            ],
            "types": [],
            "subpackages": []
        }
    },
    "rootPackage": {
        "endpoints": [],
        "webhooks": [],
        "websockets": [],
        "types": [
            "ASRConversationalConfig",
            "ASRInputFormat",
            "ASRProvider",
            "ASRQuality",
            "AddChapterResponseModel",
            "AddKnowledgeBaseResponseModel",
            "AddProjectResponseModel",
            "AddPronunciationDictionaryResponseModel",
            "AddVoiceIVCResponseModel",
            "AddVoiceResponseModel",
            "AddWorkspaceGroupMemberResponseModel",
            "AddWorkspaceInviteResponseModel",
            "AdditionalFormatResponseModel",
            "AdditionalFormats",
            "AgentBan",
            "AgentCallLimits",
            "AgentConfigAPIModel-Input",
            "AgentConfigAPIModel-Output",
            "AgentConfigDBModel",
            "AgentConfigOverride",
            "AgentConfigOverrideConfig",
            "AgentMetadataResponseModel",
            "AgentPlatformSettingsRequestModel",
            "AgentPlatformSettingsResponseModel",
            "AgentSimulatedChatTestResponseModel",
            "AgentSummaryResponseModel",
            "AgentTransfer",
            "AgentWorkspaceOverrides-Input",
            "AgentWorkspaceOverrides-Output",
            "AllowlistItem",
            "ArrayJsonSchemaProperty-Input",
            "ArrayJsonSchemaProperty-Output",
            "AudioNativeCreateProjectResponseModel",
            "AudioNativeEditContentResponseModel",
            "AudioNativeProjectSettingsResponseModel",
            "AudioWithTimestampsResponseModel",
            "AuthSettings",
            "AuthorizationMethod",
            "BanReasonType",
            "BatchCallDetailedResponse",
            "BatchCallRecipientStatus",
            "BatchCallResponse",
            "BatchCallStatus",
            "Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post",
            "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post",
            "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post",
            "Body_Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post",
            "Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post",
            "Body_Add_project_v1_projects_add_post",
            "Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post",
            "Body_Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post",
            "Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post",
            "Body_Add_to_knowledge_base_v1_convai_add_to_knowledge_base_post",
            "Body_Add_to_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post",
            "Body_Add_to_knowledge_base_v1_convai_knowledge_base_post",
            "Body_Add_voice_v1_voices_add_post",
            "Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post",
            "Body_Audio_Isolation_v1_audio_isolation_post",
            "Body_Create_Agent_v1_convai_agents_create_post",
            "Body_Create_PVC_voice_v1_voices_pvc_post",
            "Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post",
            "Body_Create_Studio_project_v1_studio_projects_post",
            "Body_Create_URL_document_v1_convai_knowledge_base_url_post",
            "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post",
            "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_post",
            "Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post",
            "Body_Create_chapter_v1_studio_projects__project_id__chapters_post",
            "Body_Create_file_document_v1_convai_knowledge_base_file_post",
            "Body_Create_forced_alignment_v1_forced_alignment_post",
            "Body_Create_podcast_v1_projects_podcast_create_post",
            "Body_Create_podcast_v1_studio_podcasts_post",
            "Body_Create_text_document_v1_convai_knowledge_base_text_post",
            "Body_Creates_Audio_Native_enabled_project__v1_audio_native_post",
            "Body_Delete_existing_invitation_v1_workspace_invites_delete",
            "Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post",
            "Body_Delete_member_v1_workspace_members_delete",
            "Body_Download_history_items_v1_history_download_post",
            "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post",
            "Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post",
            "Body_Duplicate_Agent_v1_convai_agents__agent_id__duplicate_post",
            "Body_Edit_PVC_voice_v1_voices_pvc__voice_id__post",
            "Body_Edit_basic_project_info_v1_projects__project_id__post",
            "Body_Edit_chapter_v1_projects__project_id__chapters__chapter_id__patch",
            "Body_Edit_project_content_v1_projects__project_id__content_post",
            "Body_Edit_voice_v1_voices__voice_id__edit_post",
            "Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post",
            "Body_Get_similar_library_voices_v1_similar_voices_post",
            "Body_Handle_an_outbound_call_via_SIP_trunk_v1_convai_sip_trunk_outbound_call_post",
            "Body_Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post",
            "Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post",
            "Body_Invite_user_v1_workspace_invites_add_post",
            "Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch",
            "Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post",
            "Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post",
            "Body_Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post",
            "Body_Request_manual_verification_v1_voices_pvc__voice_id__verification_post",
            "Body_Retrieve_voice_sample_audio_v1_voices_pvc__voice_id__samples__sample_id__audio_get",
            "Body_Run_PVC_training_v1_voices_pvc__voice_id__train_post",
            "Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post",
            "Body_Share_workspace_resource_v1_workspace_resources__resource_id__share_post",
            "Body_Simulates_a_conversation__Stream__v1_convai_agents__agent_id__simulate_conversation_stream_post",
            "Body_Simulates_a_conversation_v1_convai_agents__agent_id__simulate_conversation_post",
            "Body_Sound_Generation_v1_sound_generation_post",
            "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post",
            "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post",
            "Body_Speech_to_Text_v1_speech_to_text_post",
            "Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post",
            "Body_Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post",
            "Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post",
            "Body_Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post",
            "Body_Submit_a_batch_call_request__v1_convai_batch_calling_submit_post",
            "Body_Text_to_dialogue__multi_voice__streaming_v1_text_to_dialogue_stream_post",
            "Body_Text_to_dialogue__multi_voice__v1_text_to_dialogue_post",
            "Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post",
            "Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post",
            "Body_Text_to_speech_v1_text_to_speech__voice_id__post",
            "Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post",
            "Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post",
            "Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post",
            "Body_Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post",
            "Body_Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post",
            "Body_Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post",
            "Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post",
            "Body_Update_Studio_project_v1_studio_projects__project_id__post",
            "Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post",
            "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post",
            "Body_Update_document_v1_convai_knowledge_base__documentation_id__patch",
            "Body_Update_member_v1_workspace_members_post",
            "Body_Update_metadata_for_a_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__patch",
            "Body_Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post",
            "Body_update_default_sharing_preferences_v1_workspace_default_sharing_preferences_post",
            "Body_update_user_auto_provisioning_v1_workspace_user_auto_provisioning_post",
            "BreakdownTypes",
            "BuiltInTools-Input",
            "BuiltInTools-Output",
            "ChapterContentBlockExtendableNodeResponseModel",
            "ChapterContentBlockInputModel",
            "ChapterContentBlockResponseModel",
            "ChapterContentBlockTtsNodeResponseModel",
            "ChapterContentInputModel",
            "ChapterContentParagraphTtsNodeInputModel",
            "ChapterContentResponseModel",
            "ChapterResponseModel",
            "ChapterSnapshotExtendedResponseModel",
            "ChapterSnapshotResponseModel",
            "ChapterSnapshotsResponseModel",
            "ChapterStatisticsResponseModel",
            "ChapterWithContentResponseModel",
            "CharacterAlignmentModel",
            "CharacterAlignmentResponseModel",
            "ClientEvent",
            "ClientToolConfig-Input",
            "ClientToolConfig-Output",
            "ConvAIDynamicVariable",
            "ConvAISecretLocator",
            "ConvAIStoredSecretDependencies",
            "ConvAIUserSecretDBModel",
            "ConvAIWebhooks",
            "ConvAIWorkspaceStoredSecretConfig",
            "ConversationChargingCommonModel",
            "ConversationConfig",
            "ConversationConfigClientOverride-Input",
            "ConversationConfigClientOverride-Output",
            "ConversationConfigClientOverrideConfig-Input",
            "ConversationConfigClientOverrideConfig-Output",
            "ConversationConfigOverride",
            "ConversationConfigOverrideConfig",
            "ConversationDeletionSettings",
            "ConversationHistoryAnalysisCommonModel",
            "ConversationHistoryBatchCallModel",
            "ConversationHistoryErrorCommonModel",
            "ConversationHistoryEvaluationCriteriaResultCommonModel",
            "ConversationHistoryFeedbackCommonModel",
            "ConversationHistoryMetadataCommonModel",
            "ConversationHistoryRagUsageCommonModel",
            "ConversationHistorySIPTrunkingPhoneCallModel",
            "ConversationHistoryTranscriptCommonModel-Input",
            "ConversationHistoryTranscriptCommonModel-Output",
            "ConversationHistoryTranscriptToolCallClientDetails",
            "ConversationHistoryTranscriptToolCallCommonModel",
            "ConversationHistoryTranscriptToolCallWebhookDetails",
            "ConversationHistoryTranscriptToolResultCommonModel",
            "ConversationHistoryTwilioPhoneCallModel",
            "ConversationInitiationClientDataConfig-Input",
            "ConversationInitiationClientDataConfig-Output",
            "ConversationInitiationClientDataInternal",
            "ConversationInitiationClientDataRequest-Input",
            "ConversationInitiationClientDataRequest-Output",
            "ConversationInitiationClientDataWebhook",
            "ConversationSignedUrlResponseModel",
            "ConversationSimulationSpecification",
            "ConversationSummaryResponseModel",
            "ConversationTokenDBModel",
            "ConversationTokenPurpose",
            "ConversationTurnMetrics",
            "ConversationalConfigAPIModel-Input",
            "ConversationalConfigAPIModel-Output",
            "ConvertChapterResponseModel",
            "ConvertProjectResponseModel",
            "CreateAgentResponseModel",
            "CreatePhoneNumberResponseModel",
            "CreatePronunciationDictionaryResponseModel",
            "CreateSIPTrunkPhoneNumberRequest",
            "CreateTwilioPhoneNumberRequest",
            "CustomLLM",
            "DashboardCallSuccessChartModel",
            "DashboardCriteriaChartModel",
            "DashboardDataCollectionChartModel",
            "DataCollectionResultCommonModel",
            "DefaultSharingPreferencesResponseModel",
            "DeleteChapterResponseModel",
            "DeleteDubbingResponseModel",
            "DeleteHistoryItemResponse",
            "DeleteProjectResponseModel",
            "DeleteSampleResponseModel",
            "DeleteVoiceResponseModel",
            "DeleteVoiceSampleResponseModel",
            "DeleteWorkspaceGroupMemberResponseModel",
            "DeleteWorkspaceInviteResponseModel",
            "DeleteWorkspaceMemberResponseModel",
            "DependentAvailableAgentIdentifier",
            "DependentAvailableToolIdentifier",
            "DependentPhoneNumberIdentifier",
            "DependentUnknownAgentIdentifier",
            "DependentUnknownToolIdentifier",
            "DialogueInput",
            "DialogueInputResponseModel",
            "DoDubbingResponseModel",
            "DocumentUsageModeEnum",
            "DocxExportOptions",
            "DubbedSegment",
            "DubbingMediaMetadata",
            "DubbingMediaReference",
            "DubbingMetadataResponse",
            "DubbingRenderResponseModel",
            "DubbingResource",
            "DynamicVariablesConfig",
            "EditChapterResponseModel",
            "EditProjectResponseModel",
            "EditVoiceResponseModel",
            "EditVoiceSettingsResponseModel",
            "EmbedVariant",
            "EmbeddingModelEnum",
            "EndCallToolConfig",
            "EvaluationSettings",
            "EvaluationSuccessResult",
            "ExportOptions",
            "ExtendedSubscriptionResponseModel",
            "FeatureStatusCommonModel",
            "FeaturesUsageCommonModel",
            "FeedbackResponseModel",
            "FineTuningResponseModel",
            "ForcedAlignmentCharacterResponseModel",
            "ForcedAlignmentResponseModel",
            "ForcedAlignmentWordResponseModel",
            "GetAgentEmbedResponseModel",
            "GetAgentKnowledgebaseSizeResponseModel",
            "GetAgentLinkResponseModel",
            "GetAgentResponseModel",
            "GetAgentsPageResponseModel",
            "GetAudioNativeProjectSettingsResponseModel",
            "GetChaptersResponseModel",
            "GetConvAIDashboardSettingsResponseModel",
            "GetConvAISettingsResponseModel",
            "GetConversationResponseModel",
            "GetConversationsPageResponseModel",
            "GetKnowledgeBaseDependentAgentsResponseModel",
            "GetKnowledgeBaseFileResponseModel",
            "GetKnowledgeBaseListResponseModel",
            "GetKnowledgeBaseSummaryFileResponseModel",
            "GetKnowledgeBaseSummaryTextResponseModel",
            "GetKnowledgeBaseSummaryURLResponseModel",
            "GetKnowledgeBaseTextResponseModel",
            "GetKnowledgeBaseURLResponseModel",
            "GetLibraryVoicesResponseModel",
            "GetPhoneNumberSIPTrunkResponseModel",
            "GetPhoneNumberTwilioResponseModel",
            "GetProjectsResponseModel",
            "GetPronunciationDictionariesMetadataResponseModel",
            "GetPronunciationDictionaryMetadataResponseModel",
            "GetSpeechHistoryResponseModel",
            "GetToolDependentAgentsResponseModel",
            "GetVoicesResponseModel",
            "GetVoicesV2ResponseModel",
            "GetWorkspaceSecretsResponseModel",
            "HTTPValidationError",
            "HistoryAlignmentResponseModel",
            "HistoryAlignmentsResponseModel",
            "HtmlExportOptions",
            "ImageAvatar",
            "IntegrationType",
            "InvoiceResponseModel",
            "KnowledgeBaseDocumentChunkResponseModel",
            "KnowledgeBaseDocumentMetadataResponseModel",
            "KnowledgeBaseDocumentType",
            "KnowledgeBaseLocator",
            "LLM",
            "LLMCategoryUsage",
            "LLMInputOutputTokensUsage",
            "LLMTokensCategoryUsage",
            "LLMUsage-Input",
            "LLMUsage-Output",
            "LLMUsageCalculatorLLMResponseModel",
            "LLMUsageCalculatorPublicRequestModel",
            "LLMUsageCalculatorRequestModel",
            "LLMUsageCalculatorResponseModel",
            "LanguageAddedResponse",
            "LanguageDetectionToolConfig",
            "LanguagePreset-Input",
            "LanguagePreset-Output",
            "LanguagePresetTranslation",
            "LanguageResponseModel",
            "LibraryVoiceResponseModel",
            "ListMCPToolsResponseModel",
            "LiteralJsonSchemaProperty",
            "MCPApprovalPolicy",
            "MCPApprovalPolicyUpdateRequestModel",
            "MCPServerConfig-Input",
            "MCPServerConfig-Output",
            "MCPServerMetadataResponseModel",
            "MCPServerRequestModel",
            "MCPServerResponseModel",
            "MCPServerTransport",
            "MCPServersResponseModel",
            "MCPToolAddApprovalRequestModel",
            "MCPToolApprovalHash",
            "MCPToolApprovalPolicy",
            "MCPToolConfig-Input",
            "MCPToolConfig-Output",
            "ManualVerificationFileResponseModel",
            "ManualVerificationResponseModel",
            "MetricRecord",
            "MetricType",
            "ModelRatesResponseModel",
            "ModelResponseModel",
            "ModelSettingsResponseModel",
            "ModerationStatusResponseModel",
            "ObjectJsonSchemaProperty-Input",
            "ObjectJsonSchemaProperty-Output",
            "OrbAvatar",
            "OutboundCallRecipient",
            "OutboundCallRecipientResponseModel",
            "PatchConvAIDashboardSettingsRequest",
            "PatchConvAISettingsRequest",
            "PatchWorkspaceSecretRequest",
            "PdfExportOptions",
            "PhoneNumberAgentInfo",
            "PhoneNumberTransfer",
            "PodcastBulletinMode",
            "PodcastBulletinModeData",
            "PodcastConversationMode",
            "PodcastConversationModeData",
            "PodcastProjectResponseModel",
            "PodcastTextSource",
            "PodcastURLSource",
            "PostAgentAvatarResponseModel",
            "PostWorkspaceSecretRequest",
            "PostWorkspaceSecretResponseModel",
            "PrivacyConfig",
            "ProjectCreationMetaResponseModel",
            "ProjectExtendedResponseModel",
            "ProjectResponseModel",
            "ProjectSnapshotExtendedResponseModel",
            "ProjectSnapshotResponseModel",
            "ProjectSnapshotsResponseModel",
            "PromptAgentAPIModel-Input",
            "PromptAgentAPIModel-Output",
            "PromptAgentAPIModelOverride",
            "PromptAgentAPIModelOverrideConfig",
            "PromptAgentDBModel",
            "PromptEvaluationCriteria",
            "PronunciationDictionaryAliasRuleRequestModel",
            "PronunciationDictionaryLocatorResponseModel",
            "PronunciationDictionaryPhonemeRuleRequestModel",
            "PronunciationDictionaryRulesResponseModel",
            "PronunciationDictionaryVersionLocatorDBModel",
            "PronunciationDictionaryVersionLocatorRequestModel",
            "PronunciationDictionaryVersionResponseModel",
            "PydanticPronunciationDictionaryVersionLocator",
            "QueryParamsJsonSchema",
            "RAGDocumentIndexResponseModel",
            "RAGDocumentIndexUsage",
            "RAGDocumentIndexesResponseModel",
            "RAGIndexOverviewEmbeddingModelResponseModel",
            "RAGIndexOverviewResponseModel",
            "RAGIndexRequestModel",
            "RAGIndexStatus",
            "RagChunkMetadata",
            "RagConfig",
            "RagRetrievalInfo",
            "ReaderResourceResponseModel",
            "RecordingResponseModel",
            "Render",
            "RenderType",
            "RequestPVCManualVerificationResponseModel",
            "ResourceAccessInfo",
            "ResourceMetadataResponseModel",
            "SIPMediaEncryptionEnum",
            "SIPTrunkConfigResponseModel",
            "SIPTrunkCredentials",
            "SIPTrunkOutboundCallResponse",
            "SIPTrunkTransportEnum",
            "SafetyCommonModel",
            "SafetyEvaluation",
            "SafetyResponseModel",
            "SafetyRule",
            "SampleResponseModel",
            "SecretDependencyType",
            "SegmentCreatePayload",
            "SegmentCreateResponse",
            "SegmentDeleteResponse",
            "SegmentDubResponse",
            "SegmentTranscriptionResponse",
            "SegmentTranslationResponse",
            "SegmentUpdatePayload",
            "SegmentUpdateResponse",
            "SegmentedJsonExportOptions",
            "ShareOptionResponseModel",
            "SimilarVoice",
            "SimilarVoicesForSpeakerResponse",
            "SkipTurnToolConfig",
            "SpeakerAudioResponseModel",
            "SpeakerResponseModel",
            "SpeakerSegment",
            "SpeakerSeparationResponseModel",
            "SpeakerTrack",
            "SpeakerUpdatedResponse",
            "SpeechHistoryItemResponseModel",
            "SpeechToTextCharacterResponseModel",
            "SpeechToTextChunkResponseModel",
            "SpeechToTextWordResponseModel",
            "SrtExportOptions",
            "StartPVCVoiceTrainingResponseModel",
            "StartSpeakerSeparationResponseModel",
            "StreamingAudioChunkWithTimestampsResponseModel",
            "SubscriptionExtrasResponseModel",
            "SubscriptionResponseModel",
            "SubscriptionStatusType",
            "SubscriptionUsageResponseModel",
            "SupportedVoice",
            "SystemToolConfig-Input",
            "SystemToolConfig-Output",
            "TTSConversationalConfig-Input",
            "TTSConversationalConfig-Output",
            "TTSConversationalConfigOverride",
            "TTSConversationalConfigOverrideConfig",
            "TTSConversationalModel",
            "TTSModelFamily",
            "TTSOptimizeStreamingLatency",
            "TTSOutputFormat",
            "TelephonyProvider",
            "Tool",
            "ToolAnnotations",
            "ToolMockConfig",
            "ToolRequestModel",
            "ToolResponseModel",
            "ToolsResponseModel",
            "TransferToAgentToolConfig",
            "TransferToNumberToolConfig",
            "TurnConfig",
            "TurnMode",
            "TwilioOutboundCallResponse",
            "TxtExportOptions",
            "URLAvatar",
            "UpdatePhoneNumberRequest",
            "UpdateWorkspaceMemberResponseModel",
            "UsageAggregationInterval",
            "UsageCharactersResponseModel",
            "UserFeedback",
            "UserFeedbackScore",
            "UserResponseModel",
            "UtteranceResponseModel",
            "ValidationError",
            "VerificationAttemptResponseModel",
            "VerifiedVoiceLanguageResponseModel",
            "VerifyPVCVoiceCaptchaResponseModel",
            "VoiceDesignRequestModel",
            "VoiceGenerationParameterOptionResponseModel",
            "VoiceGenerationParameterResponseModel",
            "VoicePreviewResponseModel",
            "VoicePreviewsRequestModel",
            "VoicePreviewsResponseModel",
            "VoiceResponseModel",
            "VoiceSamplePreviewResponseModel",
            "VoiceSampleVisualWaveformResponseModel",
            "VoiceSettingsResponseModel",
            "VoiceSharingModerationCheckResponseModel",
            "VoiceSharingResponseModel",
            "VoiceVerificationResponseModel",
            "WebhookAuthMethodType",
            "WebhookToolApiSchemaConfig-Input",
            "WebhookToolApiSchemaConfig-Output",
            "WebhookToolConfig-Input",
            "WebhookToolConfig-Output",
            "WebhookUsageType",
            "WidgetConfig-Input",
            "WidgetConfig-Output",
            "WidgetConfigResponseModel",
            "WidgetExpandable",
            "WidgetFeedbackMode",
            "WidgetLanguagePreset",
            "WidgetLanguagePresetResponse",
            "WidgetPlacement",
            "WidgetStyles",
            "WidgetTextContents",
            "WorkspaceBatchCallsResponse",
            "WorkspaceGroupByNameResponseModel",
            "WorkspaceGroupPermission",
            "WorkspaceGroupResponseModel",
            "WorkspaceResourceType",
            "WorkspaceWebhookListResponseModel",
            "WorkspaceWebhookResponseModel",
            "WorkspaceWebhookUsageResponseModel",
            "OutputFormat",
            "HistoryItemResponseModel",
            "Age",
            "Gender",
            "Body_Add_sharing_voice_v1_voices_add__public_user_id___voice_id__post",
            "Body_Creates_AudioNative_enabled_project__v1_audio_native_post",
            "Body_Text_to_speech_v1_text_to_speech__voice_id__stream_post",
            "GetPhoneNumberResponseModel",
            "Body_Edit_voice_settings_v1_voices__voice_id__settings_edit_post",
            "Body_Get_Chapters_v1_studio_projects__project_id__chapters_get",
            "Body_Get_Chapter_v1_studio_projects__project_id__chapters__chapter_id__get",
            "Body_Delete_Chapter_v1_studio_projects__project_id__chapters__chapter_id__delete",
            "Body_Get_Project_Chapters_Snapshots_v1_studio_projects__project_id__chapters__chapter_id__snapshots_get",
            "Body_Get_Projects_v1_studio_projects_get",
            "Body_Get_Project_v1_studio_projects__project_id__get",
            "Body_Delete_Project_v1_studio_projects__project_id__delete",
            "Body_Create_transcript_v1_speech_to_text_post",
            "Body_Remove_member_from_user_group_v1_workspace_groups__group_id__members_remove_post",
            "Body_Update_audio_native_project_v1_audio_native__project_id__content_post",
            "Body_Update_Project_v1_studio_projects__project_id__post",
            "Body_Update_Chapter_v1_studio_projects__project_id__chapters__chapter_id__post",
            "CharacterUsageResponse",
            "GetPronunciationDictionariesResponseModel",
            "GetPronunciationDictionaryResponseModel",
            "PromptAgent-Input",
            "PromptAgent-Output",
            "PromptAgentApiModel-Input",
            "PromptAgentApiModel-Output",
            "SendText",
            "InitializeConnection",
            "CloseConnection",
            "AudioOutput",
            "FinalOutput",
            "ClientMultiMessage",
            "ServerMultiMessage",
            "InitializeConnectionMulti",
            "SendTextMulti",
            "FlushContextClient",
            "CloseContextClient",
            "CloseSocketClient",
            "AudioOutputMulti",
            "FinalOutputMulti",
            "KeepContextAlive",
            "InitialiseContext",
            "InitializeConnection",
            "CloseConnection",
            "SendText",
            "RealtimeVoiceSettings",
            "GenerationConfig",
            "AudioOutput",
            "FinalOutput",
            "NormalizedAlignment",
            "Alignment",
            "PronunciationDictionaryLocator",
            "WebsocketTTSClientMessageMulti",
            "WebsocketTTSServerMessageMulti",
            "InitializeConnectionMulti",
            "SendTextMulti",
            "FlushContext",
            "CloseContext",
            "CloseSocket",
            "AudioOutputMulti",
            "FinalOutputMulti",
            "KeepContextAlive",
            "InitialiseContext",
            "TextToSpeechApplyTextNormalizationEnum",
            "TextToSpeechOutputFormatEnum"
        ],
        "subpackages": [
            "subpackage_history",
            "subpackage_textToSoundEffects",
            "subpackage_audioIsolation",
            "subpackage_samples",
            "subpackage_voices",
            "subpackage_textToSpeech",
            "subpackage_textToDialogue",
            "subpackage_speechToSpeech",
            "subpackage_textToVoice",
            "subpackage_user",
            "subpackage_studio",
            "subpackage_dubbing",
            "subpackage_models",
            "subpackage_audioNative",
            "subpackage_usage",
            "subpackage_pronunciationDictionaries",
            "subpackage_workspace",
            "subpackage_webhooks",
            "subpackage_speechToText",
            "subpackage_forcedAlignment",
            "subpackage_conversationalAi",
            "subpackage_v1TextToSpeechVoiceIdStreamInput",
            "subpackage_v1TextToSpeechVoiceIdMultiStreamInput"
        ]
    },
    "snippetsConfiguration": {},
    "globalHeaders": [
        {
            "key": "xi-api-key",
            "type": {
                "type": "primitive",
                "value": {
                    "type": "string"
                }
            }
        }
    ]
}