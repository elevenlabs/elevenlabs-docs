{
  "openapi": "3.1.0",
  "info": {
    "title": "ElevenLabs API Documentation",
    "description": "This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your API key. You can find your API key in the dashboard at https://elevenlabs.io/app/settings/api-keys.",
    "version": "1.0"
  },
  "paths": {
    "/v1/history": {
      "get": {
        "tags": [
          "speech-history"
        ],
        "summary": "List Generated Items",
        "description": "Returns a list of your generated audio.",
        "operationId": "List_generated_items_v1_history_get",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "How many history items to return at maximum. Can not exceed 1000, defaults to 100.",
              "default": 100,
              "title": "Page Size"
            },
            "description": "How many history items to return at maximum. Can not exceed 1000, defaults to 100."
          },
          {
            "name": "start_after_history_item_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "After which ID to start fetching, use this parameter to paginate across a large collection of history items. In case this parameter is not provided history items will be fetched starting from the most recently created one ordered descending by their creation date.",
              "title": "Start After History Item Id"
            },
            "description": "After which ID to start fetching, use this parameter to paginate across a large collection of history items. In case this parameter is not provided history items will be fetched starting from the most recently created one ordered descending by their creation date."
          },
          {
            "name": "voice_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Voice ID to be filtered for, you can use GET https://api.elevenlabs.io/v1/voices to receive a list of voices and their IDs.",
              "title": "Voice Id"
            },
            "description": "Voice ID to be filtered for, you can use GET https://api.elevenlabs.io/v1/voices to receive a list of voices and their IDs."
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "search term used for filtering",
              "examples": [
                "In the land far far away"
              ],
              "title": "Search"
            },
            "description": "search term used for filtering"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "TTS",
                    "STS"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Source of the generated history item",
              "examples": [
                "TTS"
              ],
              "title": "Source"
            },
            "description": "Source of the generated history item"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSpeechHistoryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/history/{history_item_id}": {
      "get": {
        "tags": [
          "speech-history"
        ],
        "summary": "Get History Item",
        "description": "Retrieves a history item.",
        "operationId": "Get_history_item_v1_history__history_item_id__get",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            },
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeechHistoryItemResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "speech-history"
        ],
        "summary": "Delete History Item",
        "description": "Delete a history item by its ID",
        "operationId": "Delete_history_item_v1_history__history_item_id__delete",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            },
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteHistoryItemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/history/{history_item_id}/audio": {
      "get": {
        "tags": [
          "speech-history"
        ],
        "summary": "Get Audio From History Item",
        "description": "Returns the audio of an history item.",
        "operationId": "Get_audio_from_history_item_v1_history__history_item_id__audio_get",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            },
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "The audio file of the history item.",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "get_audio"
      }
    },
    "/v1/history/download": {
      "post": {
        "tags": [
          "speech-history"
        ],
        "summary": "Download History Items",
        "description": "Download one or more history items. If one history item ID is provided, we will return a single audio file. If more than one history item IDs are provided, we will provide the history items packed into a .zip file.",
        "operationId": "Download_history_items_v1_history_download_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Download_history_items_v1_history_download_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The requested audio file, or a zip file containing multiple audio files when multiple history items are requested.",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "invalid_output_format",
                  "message": "output_format must be wav or none"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "download"
      }
    },
    "/v1/sound-generation": {
      "post": {
        "tags": [
          "sound-generation"
        ],
        "summary": "Sound Generation",
        "description": "Turn text into sound effects for your videos, voice-overs or video games using the most advanced sound effects model in the world.",
        "operationId": "Sound_Generation_v1_sound_generation_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Sound_Generation_v1_sound_generation_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated sound effect as an MP3 file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "character-cost": {
                "description": "The number of characters used for billing",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_sound_effects",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/audio-isolation": {
      "post": {
        "tags": [
          "audio-isolation"
        ],
        "summary": "Audio Isolation",
        "description": "Removes background noise from audio",
        "operationId": "Audio_Isolation_v1_audio_isolation_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Audio_Isolation_v1_audio_isolation_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "audio_isolation",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/audio-isolation/stream": {
      "post": {
        "tags": [
          "audio-isolation"
        ],
        "summary": "Audio Isolation Stream",
        "description": "Removes background noise from audio and streams the result",
        "operationId": "Audio_Isolation_Stream_v1_audio_isolation_stream_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "audio_isolation",
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/voices/{voice_id}/samples/{sample_id}": {
      "delete": {
        "tags": [
          "samples"
        ],
        "summary": "Delete Sample",
        "description": "Removes a sample by its ID.",
        "operationId": "Delete_sample_v1_voices__voice_id__samples__sample_id__delete",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSampleResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "samples",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/voices/{voice_id}/samples/{sample_id}/audio": {
      "get": {
        "tags": [
          "samples"
        ],
        "summary": "Get Audio From Sample",
        "description": "Returns the audio corresponding to a sample attached to a voice.",
        "operationId": "Get_audio_from_sample_v1_voices__voice_id__samples__sample_id__audio_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/*": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "samples",
          "audio"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/text-to-speech/{voice_id}": {
      "post": {
        "tags": [
          "text-to-speech"
        ],
        "summary": "Text To Speech",
        "description": "Converts text into speech using a voice of your choice and returns audio.",
        "operationId": "Text_to_speech_v1_text_to_speech__voice_id__post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "deprecated": true
            },
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_v1_text_to_speech__voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated audio file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/text-to-speech/{voice_id}/with-timestamps": {
      "post": {
        "tags": [
          "text-to-speech"
        ],
        "summary": "Text To Speech With Timestamps",
        "description": "Generate speech from text with precise character-level timing information for audio-text synchronization.",
        "operationId": "Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "deprecated": true
            },
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioWithTimestampsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "convert_with_timestamps"
      }
    },
    "/v1/text-to-speech/{voice_id}/stream": {
      "post": {
        "tags": [
          "text-to-speech"
        ],
        "summary": "Text To Speech Streaming",
        "description": "Converts text into speech using a voice of your choice and returns audio as an audio stream.",
        "operationId": "Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "deprecated": true
            },
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/text-to-speech/{voice_id}/stream/with-timestamps": {
      "post": {
        "tags": [
          "text-to-speech"
        ],
        "summary": "Text To Speech Streaming With Timestamps",
        "description": "Converts text into speech using a voice of your choice and returns a stream of JSONs containing audio as a base64 encoded string together with information on when which character was spoken.",
        "operationId": "Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "deprecated": true
            },
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stream of transcription chunks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingAudioChunkWithTimestampsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "stream_with_timestamps",
        "x-fern-streaming": true
      }
    },
    "/v1/text-to-dialogue": {
      "post": {
        "tags": [
          "text-to-dialogue"
        ],
        "summary": "Text To Dialogue (Multi-Voice)",
        "description": "Converts a list of text and voice ID pairs into speech (dialogue) and returns audio.",
        "operationId": "Text_to_dialogue__multi_voice__v1_text_to_dialogue_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_dialogue__multi_voice__v1_text_to_dialogue_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated audio file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_dialogue",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/text-to-dialogue/stream": {
      "post": {
        "tags": [
          "text-to-dialogue"
        ],
        "summary": "Text To Dialogue (Multi-Voice) Streaming",
        "description": "Converts a list of text and voice ID pairs into speech (dialogue) and returns an audio stream.",
        "operationId": "Text_to_dialogue__multi_voice__streaming_v1_text_to_dialogue_stream_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_dialogue__multi_voice__streaming_v1_text_to_dialogue_stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_dialogue",
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/speech-to-speech/{voice_id}": {
      "post": {
        "tags": [
          "speech-to-speech"
        ],
        "summary": "Speech To Speech",
        "description": "Transform audio from one voice to another. Maintain full control over emotion, timing and delivery.",
        "operationId": "Speech_to_Speech_v1_speech_to_speech__voice_id__post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "deprecated": true
            },
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated audio file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "speech_to_speech",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/speech-to-speech/{voice_id}/stream": {
      "post": {
        "tags": [
          "speech-to-speech"
        ],
        "summary": "Speech To Speech Streaming",
        "description": "Stream audio from one voice to another. Maintain full control over emotion, timing and delivery.",
        "operationId": "Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "deprecated": true
            },
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "speech_to_speech",
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/voice-generation/generate-voice/parameters": {
      "get": {
        "tags": [
          "voice-generation"
        ],
        "summary": "Voice Generation Parameters",
        "description": "Get possible parameters for the /v1/voice-generation/generate-voice endpoint.",
        "operationId": "Voice_Generation_Parameters_v1_voice_generation_generate_voice_parameters_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceGenerationParameterResponseModel"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voice_generation",
        "x-fern-sdk-method-name": "generate_parameters"
      }
    },
    "/v1/voice-generation/generate-voice": {
      "post": {
        "tags": [
          "voice-generation"
        ],
        "summary": "Generate A Random Voice",
        "description": "Generate a random voice based on parameters. This method returns a generated_voice_id in the response header, and a sample of the voice in the body. If you like the generated voice call /v1/voice-generation/create-voice with the generated_voice_id to create the voice.",
        "operationId": "Generate_a_random_voice_v1_voice_generation_generate_voice_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voice_generation",
        "x-fern-sdk-method-name": "generate"
      }
    },
    "/v1/text-to-voice/create-previews": {
      "post": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Generate A Voice Preview From Description",
        "description": "Generate a custom voice based on voice description. This method returns a list of voice previews. Each preview has a generated_voice_id and a sample of the voice as base64 encoded mp3 audio. If you like the a voice previewand want to create the voice call /v1/text-to-voice/create-voice-from-preview with the generated_voice_id to create the voice.",
        "operationId": "Generate_a_voice_preview_from_description_v1_text_to_voice_create_previews_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_192"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoicePreviewsRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoicePreviewsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_voice",
        "x-fern-sdk-method-name": "create_previews"
      }
    },
    "/v1/voice-generation/create-voice": {
      "post": {
        "tags": [
          "voice-generation"
        ],
        "summary": "Create A Previously Generated Voice",
        "description": "Create a previously generated voice. This endpoint should be called after you fetched a generated_voice_id using /v1/voice-generation/generate-voice.",
        "operationId": "Create_a_previously_generated_voice_v1_voice_generation_create_voice_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voice_generation",
        "x-fern-sdk-method-name": "create_a_previously_generated_voice"
      }
    },
    "/v1/text-to-voice": {
      "post": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Create A New Voice From Voice Preview",
        "description": "Create a voice from previously generated voice preview. This endpoint should be called after you fetched a generated_voice_id using POST /v1/text-to-voice/design or POST /v1/text-to-voice/:voice_id/remix.",
        "operationId": "Create_a_new_voice_from_voice_preview_v1_text_to_voice_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_voice",
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/text-to-voice/design": {
      "post": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Design A Voice.",
        "description": "Design a voice via a prompt. This method returns a list of voice previews. Each preview has a generated_voice_id and a sample of the voice as base64 encoded mp3 audio. To create a voice use the generated_voice_id of the preferred preview with the /v1/text-to-voice endpoint.",
        "operationId": "Design_a_voice__v1_text_to_voice_design_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_192"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoiceDesignRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoicePreviewsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_voice",
        "x-fern-sdk-method-name": "design"
      }
    },
    "/v1/text-to-voice/{generated_voice_id}/stream": {
      "get": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Text To Voice Preview Streaming",
        "description": "Stream a voice preview that was created via the /v1/text-to-voice/design endpoint.",
        "operationId": "Text_to_voice_preview_streaming_v1_text_to_voice__generated_voice_id__stream_get",
        "parameters": [
          {
            "name": "generated_voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The generated_voice_id to stream.",
              "examples": [
                "37HceQefKmEi3bGovXjL"
              ],
              "embed": true,
              "title": "Generated Voice Id"
            },
            "description": "The generated_voice_id to stream."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "text_to_voice",
          "preview"
        ],
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/user/subscription": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Subscription Info",
        "description": "Gets extended information about the users subscription",
        "operationId": "Get_user_subscription_info_v1_user_subscription_get",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedSubscriptionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "user",
          "subscription"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Info",
        "description": "Gets information about the user",
        "operationId": "Get_user_info_v1_user_get",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "user",
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "List Voices",
        "description": "Returns a list of all available voices for a user.",
        "operationId": "List_voices_v1_voices_get",
        "parameters": [
          {
            "name": "show_legacy",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If set to true, legacy premade voices will be included in responses from /v1/voices",
              "examples": [
                true
              ],
              "default": false,
              "title": "Show Legacy"
            },
            "description": "If set to true, legacy premade voices will be included in responses from /v1/voices"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_all"
      }
    },
    "/v2/voices": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get Voices V2",
        "description": "Gets a list of all available voices for a user with search, filtering and pagination.",
        "operationId": "Get_voices_v2_v2_voices_get",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The next page token to use for pagination. Returned from the previous request.",
              "examples": [
                "0"
              ],
              "title": "Next Page Token"
            },
            "description": "The next page token to use for pagination. Returned from the previous request."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "How many voices to return at maximum. Can not exceed 100, defaults to 10. Page 0 may include more voices due to default voices being included.",
              "default": 10,
              "title": "Page Size"
            },
            "description": "How many voices to return at maximum. Can not exceed 100, defaults to 10. Page 0 may include more voices due to default voices being included."
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term to filter voices by. Searches in name, description, labels, category.",
              "title": "Search"
            },
            "description": "Search term to filter voices by. Searches in name, description, labels, category."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Which field to sort by, one of 'created_at_unix' or 'name'. 'created_at_unix' may not be available for older voices.",
              "examples": [
                "created_at_unix"
              ],
              "title": "Sort"
            },
            "description": "Which field to sort by, one of 'created_at_unix' or 'name'. 'created_at_unix' may not be available for older voices."
          },
          {
            "name": "sort_direction",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Which direction to sort the voices in. 'asc' or 'desc'.",
              "examples": [
                "desc"
              ],
              "title": "Sort Direction"
            },
            "description": "Which direction to sort the voices in. 'asc' or 'desc'."
          },
          {
            "name": "voice_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Type of the voice to filter by. One of 'personal', 'community', 'default', 'workspace', 'non-default'. 'non-default' is equal to all but 'default'.",
              "title": "Voice Type"
            },
            "description": "Type of the voice to filter by. One of 'personal', 'community', 'default', 'workspace', 'non-default'. 'non-default' is equal to all but 'default'."
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Category of the voice to filter by. One of 'premade', 'cloned', 'generated', 'professional'",
              "title": "Category"
            },
            "description": "Category of the voice to filter by. One of 'premade', 'cloned', 'generated', 'professional'"
          },
          {
            "name": "fine_tuning_state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "State of the voice's fine tuning to filter by. Applicable only to professional voices clones. One of 'draft', 'not_verified', 'not_started', 'queued', 'fine_tuning', 'fine_tuned', 'failed', 'delayed'",
              "title": "Fine Tuning State"
            },
            "description": "State of the voice's fine tuning to filter by. Applicable only to professional voices clones. One of 'draft', 'not_verified', 'not_started', 'queued', 'fine_tuning', 'fine_tuned', 'failed', 'delayed'"
          },
          {
            "name": "collection_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Collection ID to filter voices by.",
              "title": "Collection Id"
            },
            "description": "Collection ID to filter voices by."
          },
          {
            "name": "include_total_count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the total count of voices found in the response. Incurs a performance cost.",
              "examples": [
                true
              ],
              "default": true,
              "title": "Include Total Count"
            },
            "description": "Whether to include the total count of voices found in the response. Incurs a performance cost."
          },
          {
            "name": "voice_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Voice IDs to lookup by. Maximum 100 voice IDs.",
              "title": "Voice Ids"
            },
            "description": "Voice IDs to lookup by. Maximum 100 voice IDs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoicesV2ResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "search"
      }
    },
    "/v1/voices/settings/default": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get Default Voice Settings.",
        "description": "Gets the default settings for voices. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "operationId": "Get_default_voice_settings__v1_voices_settings_default_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSettingsResponseModel"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "settings"
        ],
        "x-fern-sdk-method-name": "get_default"
      }
    },
    "/v1/voices/{voice_id}/settings": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get Voice Settings",
        "description": "Returns the settings for a specific voice. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "operationId": "Get_voice_settings_v1_voices__voice_id__settings_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "settings"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/{voice_id}": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get Voice",
        "description": "Returns metadata about a specific voice.",
        "operationId": "Get_voice_v1_voices__voice_id__get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "with_settings",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "This parameter is now deprecated. It is ignored and will be removed in a future version.",
              "deprecated": true,
              "default": true,
              "title": "With Settings"
            },
            "description": "This parameter is now deprecated. It is ignored and will be removed in a future version.",
            "deprecated": true
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "voices"
        ],
        "summary": "Delete Voice",
        "description": "Deletes a voice by its ID.",
        "operationId": "Delete_voice_v1_voices__voice_id__delete",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/voices/{voice_id}/settings/edit": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Edit Voice Settings",
        "description": "Edit your settings for a specific voice. \"similarity_boost\" corresponds to \"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "operationId": "Edit_voice_settings_v1_voices__voice_id__settings_edit_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel",
                "description": "The settings for a specific voice."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditVoiceSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "settings"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/voices/add": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Add Voice",
        "description": "Add a new voice to your collection of voices in VoiceLab.",
        "operationId": "Add_voice_v1_voices_add_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_voice_v1_voices_add_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceIVCResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "ivc"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/voices/{voice_id}/edit": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Edit Voice",
        "description": "Edit a voice created by you.",
        "operationId": "Edit_voice_v1_voices__voice_id__edit_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_voice_v1_voices__voice_id__edit_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/voices/add/{public_user_id}/{voice_id}": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Add Shared Voice",
        "description": "Add a shared voice to your collection of voices.",
        "operationId": "Add_shared_voice_v1_voices_add__public_user_id___voice_id__post",
        "parameters": [
          {
            "name": "public_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Public user ID used to publicly identify ElevenLabs users.",
              "examples": [
                "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca"
              ],
              "title": "Public User Id"
            },
            "description": "Public user ID used to publicly identify ElevenLabs users."
          },
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "share"
      }
    },
    "/v1/studio/podcasts": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Create Podcast",
        "description": "Create and auto-convert a podcast project. Currently, the LLM cost is covered by us but you will still be charged for the audio generation. In the future, you will be charged for both the LLM and audio generation costs.",
        "operationId": "create_podcast",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_podcast_v1_studio_podcasts_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PodcastProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "studio",
        "x-fern-sdk-method-name": "create_podcast"
      }
    },
    "/v1/studio/projects": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "List Studio Projects",
        "description": "Returns a list of your Studio projects with metadata.",
        "operationId": "get_projects",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "list"
      },
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Create Studio Project",
        "description": "Creates a new Studio project, it can be either initialized as blank, from a document or from a URL.",
        "operationId": "add_project",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_Studio_project_v1_studio_projects_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/studio/projects/{project_id}": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Update Studio Project",
        "description": "Updates the specified Studio project by setting the values of the parameters passed.",
        "operationId": "edit_project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_Studio_project_v1_studio_projects__project_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "Get Studio Project",
        "description": "Returns information about a specific Studio project. This endpoint returns more detailed information about a project than `GET /v1/studio`.",
        "operationId": "get_project_by_id",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "studio"
        ],
        "summary": "Delete Studio Project",
        "description": "Deletes a Studio project.",
        "operationId": "delete_project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/studio/projects/{project_id}/content": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Update Studio Project Content",
        "description": "Updates Studio project content.",
        "operationId": "edit_project_content",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "content"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/studio/projects/{project_id}/convert": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Convert Studio Project",
        "description": "Starts conversion of a Studio project and all of its chapters.",
        "operationId": "convert_project_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConvertProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/studio/projects/{project_id}/snapshots": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "List Studio Project Snapshots",
        "description": "Retrieves a list of snapshots for a Studio project.",
        "operationId": "get_project_snapshots",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "Get Project Snapshot",
        "description": "Returns the project snapshot.",
        "operationId": "get_project_snapshot_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project snapshot.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            },
            "description": "The ID of the Studio project snapshot."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSnapshotExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/stream": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Stream Studio Project Audio",
        "description": "Stream the audio from a Studio project snapshot.",
        "operationId": "stream_project_snapshot_audio_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project snapshot.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            },
            "description": "The ID of the Studio project snapshot."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/archive": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Stream Archive With Studio Project Audio",
        "description": "Returns a compressed archive of the Studio project's audio.",
        "operationId": "stream_project_snapshot_archive_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project snapshot.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            },
            "description": "The ID of the Studio project snapshot."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Streaming archive data",
            "content": {
              "application/x-zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "stream_archive"
      }
    },
    "/v1/studio/projects/{project_id}/chapters": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "List Chapters",
        "description": "Returns a list of a Studio project's chapters.",
        "operationId": "get_chapters",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChaptersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters"
        ],
        "x-fern-sdk-method-name": "list"
      },
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Create Chapter",
        "description": "Creates a new chapter either as blank or from a URL.",
        "operationId": "add_chapter",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_chapter_v1_studio_projects__project_id__chapters_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "Get Chapter",
        "description": "Returns information about a specific chapter.",
        "operationId": "get_chapter_by_id_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterWithContentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Update Chapter",
        "description": "Updates a chapter.",
        "operationId": "edit_chapter",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "delete": {
        "tags": [
          "studio"
        ],
        "summary": "Delete Chapter",
        "description": "Deletes a chapter.",
        "operationId": "delete_chapter_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/convert": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Convert Chapter",
        "description": "Starts conversion of a specific chapter.",
        "operationId": "convert_chapter_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConvertChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters"
        ],
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "List Chapter Snapshots",
        "description": "Gets information about all the snapshots of a chapter. Each snapshot can be downloaded as audio. Whenever a chapter is converted a snapshot will automatically be created.",
        "operationId": "get_chapter_snapshots",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "Get Chapter Snapshot",
        "description": "Returns the chapter snapshot.",
        "operationId": "get_chapter_snapshot_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "chapter_snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter snapshot.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Snapshot Id"
            },
            "description": "The ID of the chapter snapshot."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterSnapshotExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}/stream": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Stream Chapter Audio",
        "description": "Stream the audio from a chapter snapshot. Use `GET /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots` to return the snapshots of a chapter.",
        "operationId": "stream_chapter_snapshot_audio",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "chapter_snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter snapshot.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Snapshot Id"
            },
            "description": "The ID of the chapter snapshot."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/studio/projects/{project_id}/pronunciation-dictionaries": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Create Pronunciation Dictionaries",
        "description": "Create a set of pronunciation dictionaries acting on a project. This will automatically mark text within this project as requiring reconverting where the new dictionary would apply or the old one no longer does.",
        "operationId": "update_pronunciation_dictionaries",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePronunciationDictionaryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "pronunciation_dictionaries"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Get The Dubbing Resource For An Id.",
        "description": "Given a dubbing ID generated from the '/v1/dubbing' endpoint with studio enabled, returns the dubbing resource.",
        "operationId": "Get_the_dubbing_resource_for_an_ID__v1_dubbing_resource__dubbing_id__get",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingResource"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/language": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Add A Language To The Resource",
        "description": "Adds the given ElevenLab Turbo V2/V2.5 language code to the resource. Does not automatically generate transcripts/translations/audio.",
        "operationId": "Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageAddedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource",
          "language"
        ],
        "x-fern-sdk-method-name": "add"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/speaker/{speaker_id}/segment": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Create A Segment For The Speaker",
        "description": "Creates a new segment in dubbing resource with a start and end time for the speaker in every available language. Does not automatically generate transcripts/translations/audio.",
        "operationId": "Create_a_segment_for_the_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__segment_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "speaker_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the speaker.",
              "title": "Speaker Id"
            },
            "description": "ID of the speaker."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentCreatePayload",
                "description": "The text, and start and end times of a segment."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource",
          "speaker",
          "segment"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/segment/{segment_id}/{language}": {
      "patch": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Modify A Single Segment",
        "description": "Modifies a single segment with new text and/or start/end times. Will update the values for only a specific language of a segment. Does not automatically regenerate the dub.",
        "operationId": "Modify_a_single_segment_v1_dubbing_resource__dubbing_id__segment__segment_id___language__patch",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "segment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the segment",
              "title": "Segment Id"
            },
            "description": "ID of the segment"
          },
          {
            "name": "language",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the language.",
              "title": "Language"
            },
            "description": "ID of the language."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentUpdatePayload",
                "description": "The text, and start and end times of a segment."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/segment/{segment_id}": {
      "delete": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Deletes A Single Segment",
        "description": "Deletes a single segment from the dubbing.",
        "operationId": "Deletes_a_single_segment_v1_dubbing_resource__dubbing_id__segment__segment_id__delete",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "segment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the segment",
              "title": "Segment Id"
            },
            "description": "ID of the segment"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentDeleteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/transcribe": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Transcribes Segments",
        "description": "Regenerate the transcriptions for the specified segments. Does not automatically regenerate translations or dubs.",
        "operationId": "Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentTranscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource"
        ],
        "x-fern-sdk-method-name": "transcribe"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/translate": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Translates All Or Some Segments And Languages",
        "description": "Regenerate the translations for either the entire resource or the specified segments/languages. Will automatically transcribe missing transcriptions. Will not automatically regenerate the dubs.",
        "operationId": "Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentTranslationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource"
        ],
        "x-fern-sdk-method-name": "translate"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/dub": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Dubs All Or Some Segments And Languages",
        "description": "Regenerate the dubs for either the entire resource or the specified segments/languages. Will automatically transcribe and translate any missing transcriptions and translations.",
        "operationId": "Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentDubResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource"
        ],
        "x-fern-sdk-method-name": "dub"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/speaker/{speaker_id}": {
      "patch": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Update Metadata For A Speaker",
        "description": "Amend the metadata associated with a speaker, such as their voice. Both voice cloning and using voices from the ElevenLabs library are supported.",
        "operationId": "Update_metadata_for_a_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__patch",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "speaker_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the speaker.",
              "title": "Speaker Id"
            },
            "description": "ID of the speaker."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_metadata_for_a_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeakerUpdatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource",
          "speaker"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/speaker/{speaker_id}/similar-voices": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Search The Elevenlabs Library For Voices Similar To A Speaker.",
        "description": "Fetch the top 10 similar voices to a speaker, including the voice IDs, names, descriptions, and, where possible, a sample audio recording.",
        "operationId": "Search_the_ElevenLabs_library_for_voices_similar_to_a_speaker__v1_dubbing_resource__dubbing_id__speaker__speaker_id__similar_voices_get",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "speaker_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the speaker.",
              "title": "Speaker Id"
            },
            "description": "ID of the speaker."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimilarVoicesForSpeakerResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource",
          "speaker"
        ],
        "x-fern-sdk-method-name": "find_similar_voices"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/render/{language}": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Render Audio Or Video For The Given Language",
        "description": "Regenerate the output media for a language using the latest Studio state. Please ensure all segments have been dubbed before rendering, otherwise they will be omitted. Renders are generated asynchronously, and to check the status of all renders please use the 'Get Dubbing Resource' endpoint.",
        "operationId": "Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "language",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Render this language",
              "title": "Language"
            },
            "description": "Render this language"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingRenderResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource"
        ],
        "x-fern-sdk-method-name": "render"
      }
    },
    "/v1/dubbing": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "List Dubs",
        "description": "List the dubs you have access to.",
        "operationId": "List_dubs_v1_dubbing_get",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "How many dubs to return at maximum. Can not exceed 200, defaults to 100.",
              "default": 100,
              "title": "Page Size"
            },
            "description": "How many dubs to return at maximum. Can not exceed 200, defaults to 100."
          },
          {
            "name": "dubbing_status",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "dubbing",
                "dubbed",
                "failed"
              ],
              "type": "string",
              "description": "What state the dub is currently in.",
              "embed": true,
              "title": "Dubbing Status"
            },
            "description": "What state the dub is currently in."
          },
          {
            "name": "filter_by_creator",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "personal",
                "others",
                "all"
              ],
              "type": "string",
              "description": "Filters who created the resources being listed, whether it was the user running the request or someone else that shared the resource with them.",
              "examples": [
                "all"
              ],
              "default": "all",
              "title": "Filter By Creator"
            },
            "description": "Filters who created the resources being listed, whether it was the user running the request or someone else that shared the resource with them."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingMetadataPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "list"
      },
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Dub A Video Or An Audio File",
        "description": "Dubs a provided audio or video file into given language.",
        "operationId": "Dub_a_video_or_an_audio_file_v1_dubbing_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dub_a_video_or_an_audio_file_v1_dubbing_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoDubbingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/dubbing/{dubbing_id}": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Get Dubbing",
        "description": "Returns metadata about a dubbing project, including whether it's still in progress or not",
        "operationId": "Get_dubbing_v1_dubbing__dubbing_id__get",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingMetadataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Delete Dubbing",
        "description": "Deletes a dubbing project.",
        "operationId": "Delete_dubbing_v1_dubbing__dubbing_id__delete",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDubbingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/dubbing/{dubbing_id}/audio/{language_code}": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Get Dubbed File",
        "description": "Returns dub as a streamed MP3 or MP4 file. If this dub has been edited using Dubbing Studio you need to use the resource render endpoint as this endpoint only returns the original automatic dub result.",
        "operationId": "Get_dubbed_file_v1_dubbing__dubbing_id__audio__language_code__get",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "language_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the language.",
              "title": "Language Code"
            },
            "description": "ID of the language."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "The dubbed audio or video file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "video/mp4": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "example": {
                  "error": "permission_denied",
                  "message": "User does not have required permissions"
                }
              }
            }
          },
          "404": {
            "description": "Dubbing not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "dubbing_not_found",
                  "message": "There is no dubbing for language {language_code}."
                }
              }
            }
          },
          "425": {
            "description": "Dubbing not ready",
            "content": {
              "application/json": {
                "example": {
                  "error": "dubbing_not_dubbed",
                  "message": "Dubbing has not finished yet."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "audio"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/dubbing/{dubbing_id}/transcript/{language_code}": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Get Dubbed Transcript",
        "description": "Returns transcript for the dub as an SRT or WEBVTT file.",
        "operationId": "Get_dubbed_transcript_v1_dubbing__dubbing_id__transcript__language_code__get",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "language_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the language.",
              "title": "Language Code"
            },
            "description": "ID of the language."
          },
          {
            "name": "format_type",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "srt",
                "webvtt"
              ],
              "type": "string",
              "description": "Format to use for the subtitle file, either 'srt' or 'webvtt'",
              "embed": true,
              "default": "srt",
              "title": "Format Type"
            },
            "description": "Format to use for the subtitle file, either 'srt' or 'webvtt'"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "1\n00:00:01,000 --\u003E 00:00:04,000\nHello, this is the first subtitle line\n\n2\n00:00:05,000 --\u003E 00:00:07,000\nAnd here's the second subtitle line"
              }
            }
          },
          "403": {
            "description": "Anonymous users cannot use this function",
            "content": {
              "application/json": {
                "example": {
                  "error": "anonymous_not_allowed",
                  "message": "Anonymous users cannot use this function"
                }
              }
            }
          },
          "404": {
            "description": "Dubbing or transcript not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "transcript_not_found",
                  "message": "No transcript was found for the dub."
                }
              }
            }
          },
          "425": {
            "description": "Dubbing not ready",
            "content": {
              "application/json": {
                "example": {
                  "error": "dubbing_not_dubbed",
                  "message": "Dubbing has not finished yet."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "transcript"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/models": {
      "get": {
        "tags": [
          "models"
        ],
        "summary": "Get Models",
        "description": "Gets a list of available models.",
        "operationId": "Get_Models_v1_models_get",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelResponseModel"
                  },
                  "title": "Response Get Models V1 Models Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "models",
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/audio-native": {
      "post": {
        "tags": [
          "audio-native"
        ],
        "summary": "Creates Audio Native Enabled Project.",
        "description": "Creates Audio Native enabled project, optionally starts conversion and returns project ID and embeddable HTML snippet.",
        "operationId": "create_audio_native_project",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Creates_Audio_Native_enabled_project__v1_audio_native_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeCreateProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "audio_native",
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/audio-native/{project_id}/settings": {
      "get": {
        "tags": [
          "audio-native"
        ],
        "summary": "Get Audio Native Project Settings",
        "description": "Get player settings for the specific project.",
        "operationId": "get_audio_native_project_settings_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAudioNativeProjectSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "audio_native",
        "x-fern-sdk-method-name": "get_settings"
      }
    },
    "/v1/audio-native/{project_id}/content": {
      "post": {
        "tags": [
          "audio-native"
        ],
        "summary": "Update Audio-Native Project Content",
        "description": "Updates content for the specific AudioNative Project.",
        "operationId": "audio_native_project_update_content_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeEditContentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "audio_native",
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/shared-voices": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get Voices",
        "description": "Retrieves a list of shared voices.",
        "operationId": "Get_voices_v1_shared_voices_get",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "How many shared voices to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many shared voices to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Voice category used for filtering",
              "examples": [
                "professional"
              ],
              "enum": [
                "professional",
                "famous",
                "high_quality"
              ],
              "title": "Category"
            },
            "description": "Voice category used for filtering"
          },
          {
            "name": "gender",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Gender used for filtering",
              "examples": [
                "male"
              ],
              "title": "Gender"
            },
            "description": "Gender used for filtering"
          },
          {
            "name": "age",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Age used for filtering",
              "examples": [
                "young"
              ],
              "title": "Age"
            },
            "description": "Age used for filtering"
          },
          {
            "name": "accent",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Accent used for filtering",
              "examples": [
                "american"
              ],
              "title": "Accent"
            },
            "description": "Accent used for filtering"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Language used for filtering",
              "examples": [
                "en"
              ],
              "title": "Language"
            },
            "description": "Language used for filtering"
          },
          {
            "name": "locale",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Locale used for filtering",
              "examples": [
                "en-US"
              ],
              "title": "Locale"
            },
            "description": "Locale used for filtering"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term used for filtering",
              "examples": [
                "tiktok"
              ],
              "title": "Search"
            },
            "description": "Search term used for filtering"
          },
          {
            "name": "use_cases",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Use-case used for filtering",
              "examples": [
                "audiobook"
              ],
              "title": "Use Cases"
            },
            "description": "Use-case used for filtering"
          },
          {
            "name": "descriptives",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term used for filtering",
              "examples": [
                "tiktok"
              ],
              "title": "Descriptives"
            },
            "description": "Search term used for filtering"
          },
          {
            "name": "featured",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Filter featured voices",
              "examples": [
                true
              ],
              "default": false,
              "title": "Featured"
            },
            "description": "Filter featured voices"
          },
          {
            "name": "min_notice_period_days",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter voices with a minimum notice period of the given number of days.",
              "examples": [
                30
              ],
              "title": "Min Notice Period Days"
            },
            "description": "Filter voices with a minimum notice period of the given number of days."
          },
          {
            "name": "include_custom_rates",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include/exclude voices with custom rates",
              "examples": [
                true
              ],
              "title": "Include Custom Rates"
            },
            "description": "Include/exclude voices with custom rates"
          },
          {
            "name": "include_live_moderated",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include/exclude voices that are live moderated",
              "examples": [
                true
              ],
              "title": "Include Live Moderated"
            },
            "description": "Include/exclude voices that are live moderated"
          },
          {
            "name": "reader_app_enabled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Filter voices that are enabled for the reader app",
              "examples": [
                true
              ],
              "default": false,
              "title": "Reader App Enabled"
            },
            "description": "Filter voices that are enabled for the reader app"
          },
          {
            "name": "owner_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter voices by public owner ID",
              "examples": [
                "7c9fab611d9a0e1fb2e7448a0c294a8804efc2bcc324b0a366a5d5232b7d1532"
              ],
              "title": "Owner Id"
            },
            "description": "Filter voices by public owner ID"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort criteria",
              "examples": [
                "created_date"
              ],
              "title": "Sort"
            },
            "description": "Sort criteria"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLibraryVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_shared"
      }
    },
    "/v1/similar-voices": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Get Similar Library Voices",
        "description": "Returns a list of shared voices similar to the provided audio sample. If neither similarity_threshold nor top_k is provided, we will apply default values.",
        "operationId": "Get_similar_library_voices_v1_similar_voices_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Get_similar_library_voices_v1_similar_voices_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLibraryVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "find_similar_voices"
      }
    },
    "/v1/usage/character-stats": {
      "get": {
        "tags": [
          "usage"
        ],
        "summary": "Get Characters Usage Metrics",
        "description": "Returns the usage metrics for the current user or the entire workspace they are part of. The response provides a time axis based on the specified aggregation interval (default: day), with usage values for each interval along that axis. Usage is broken down by the selected breakdown type. For example, breakdown type \"voice\" will return the usage of each voice for each interval along the time axis.",
        "operationId": "Get_characters_usage_metrics_v1_usage_character_stats_get",
        "parameters": [
          {
            "name": "start_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "UTC Unix timestamp for the start of the usage window, in milliseconds. To include the first day of the window, the timestamp should be at 00:00:00 of that day.",
              "examples": [
                "1685574000"
              ],
              "title": "Start Unix"
            },
            "description": "UTC Unix timestamp for the start of the usage window, in milliseconds. To include the first day of the window, the timestamp should be at 00:00:00 of that day."
          },
          {
            "name": "end_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "UTC Unix timestamp for the end of the usage window, in milliseconds. To include the last day of the window, the timestamp should be at 23:59:59 of that day.",
              "examples": [
                "1688165999"
              ],
              "title": "End Unix"
            },
            "description": "UTC Unix timestamp for the end of the usage window, in milliseconds. To include the last day of the window, the timestamp should be at 23:59:59 of that day."
          },
          {
            "name": "include_workspace_metrics",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether or not to include the statistics of the entire workspace.",
              "default": false,
              "title": "Include Workspace Metrics"
            },
            "description": "Whether or not to include the statistics of the entire workspace."
          },
          {
            "name": "breakdown_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BreakdownTypes",
              "description": "How to break down the information. Cannot be \"user\" if include_workspace_metrics is False.",
              "default": "none"
            },
            "description": "How to break down the information. Cannot be \"user\" if include_workspace_metrics is False."
          },
          {
            "name": "aggregation_interval",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UsageAggregationInterval",
              "description": "How to aggregate usage data over time. Can be \"hour\", \"day\", \"week\", \"month\", or \"cumulative\".",
              "default": "day"
            },
            "description": "How to aggregate usage data over time. Can be \"hour\", \"day\", \"week\", \"month\", or \"cumulative\"."
          },
          {
            "name": "aggregation_bucket_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Aggregation bucket size in seconds. Overrides the aggregation interval.",
              "title": "Aggregation Bucket Size"
            },
            "description": "Aggregation bucket size in seconds. Overrides the aggregation interval."
          },
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/MetricType",
              "description": "Which metric to aggregate.",
              "default": "credits"
            },
            "description": "Which metric to aggregate."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageCharactersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "usage",
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/pronunciation-dictionaries/add-from-file": {
      "post": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Add A Pronunciation Dictionary",
        "description": "Creates a new pronunciation dictionary from a lexicon .PLS file",
        "operationId": "Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPronunciationDictionaryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "pronunciation_dictionaries",
        "x-fern-sdk-method-name": "create_from_file"
      }
    },
    "/v1/pronunciation-dictionaries/add-from-rules": {
      "post": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Add A Pronunciation Dictionary",
        "description": "Creates a new pronunciation dictionary from provided rules.",
        "operationId": "Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPronunciationDictionaryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "pronunciation_dictionaries",
        "x-fern-sdk-method-name": "create_from_rules"
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/add-rules": {
      "post": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Add Rules To The Pronunciation Dictionary",
        "description": "Add rules to the pronunciation dictionary",
        "operationId": "Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the pronunciation dictionary",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            },
            "description": "The id of the pronunciation dictionary"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PronunciationDictionaryRulesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "pronunciation_dictionaries",
          "rules"
        ],
        "x-fern-sdk-method-name": "add"
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/remove-rules": {
      "post": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Remove Rules From The Pronunciation Dictionary",
        "description": "Remove rules from the pronunciation dictionary",
        "operationId": "Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the pronunciation dictionary",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            },
            "description": "The id of the pronunciation dictionary"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PronunciationDictionaryRulesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "pronunciation_dictionaries",
          "rules"
        ],
        "x-fern-sdk-method-name": "remove"
      }
    },
    "/v1/pronunciation-dictionaries/{dictionary_id}/{version_id}/download": {
      "get": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Get A Pls File With A Pronunciation Dictionary Version Rules",
        "description": "Get a PLS file with a pronunciation dictionary version rules",
        "operationId": "Get_a_PLS_file_with_a_pronunciation_dictionary_version_rules_v1_pronunciation_dictionaries__dictionary_id___version_id__download_get",
        "parameters": [
          {
            "name": "dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the pronunciation dictionary",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Dictionary Id"
            },
            "description": "The id of the pronunciation dictionary"
          },
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the version of the pronunciation dictionary",
              "examples": [
                "BdF0s0aZ3oFoKnDYdTox"
              ],
              "title": "Version Id"
            },
            "description": "The id of the version of the pronunciation dictionary"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "The PLS file containing pronunciation dictionary rules",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "Content-Disposition": {
                "description": "Attachment filename",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "pronunciation_dictionaries",
        "x-fern-sdk-method-name": "download"
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}": {
      "get": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Get Metadata For A Pronunciation Dictionary",
        "description": "Get metadata for a pronunciation dictionary",
        "operationId": "Get_metadata_for_a_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__get",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the pronunciation dictionary",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            },
            "description": "The id of the pronunciation dictionary"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPronunciationDictionaryMetadataResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "pronunciation_dictionaries",
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/pronunciation-dictionaries": {
      "get": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Get Pronunciation Dictionaries",
        "description": "Get a list of the pronunciation dictionaries you have access to and their metadata",
        "operationId": "Get_Pronunciation_Dictionaries_v1_pronunciation_dictionaries_get",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many pronunciation dictionaries to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many pronunciation dictionaries to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "creation_time_unix",
                    "name"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Which field to sort by, one of 'created_at_unix' or 'name'.",
              "examples": [
                "creation_time_unix"
              ],
              "default": "creation_time_unix",
              "title": "Sort"
            },
            "description": "Which field to sort by, one of 'created_at_unix' or 'name'."
          },
          {
            "name": "sort_direction",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Which direction to sort the voices in. 'ascending' or 'descending'.",
              "examples": [
                "descending"
              ],
              "default": "DESCENDING",
              "title": "Sort Direction"
            },
            "description": "Which direction to sort the voices in. 'ascending' or 'descending'."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPronunciationDictionariesMetadataResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "pronunciation_dictionaries",
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/service-accounts/{service_account_user_id}/api-keys": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Service Account Api Keys Route",
        "description": "Get all API keys for a service account",
        "operationId": "get_service_account_api_keys_route",
        "parameters": [
          {
            "name": "service_account_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Account User Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceApiKeyListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "service_accounts",
          "api_keys"
        ],
        "x-fern-sdk-method-name": "list"
      },
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Create Service Account Api Key",
        "description": "Create a new API key for a service account",
        "operationId": "create_service_account_api_key",
        "parameters": [
          {
            "name": "service_account_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Account User Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_service_account_api_key_v1_service_accounts__service_account_user_id__api_keys_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceCreateApiKeyResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "service_accounts",
          "api_keys"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/service-accounts/{service_account_user_id}/api-keys/{api_key_id}": {
      "patch": {
        "tags": [
          "workspace"
        ],
        "summary": "Edit Service Account Api Key",
        "description": "Update an existing API key for a service account",
        "operationId": "edit_service_account_api_key",
        "parameters": [
          {
            "name": "service_account_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Account User Id"
            }
          },
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Api Key Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_edit_service_account_api_key_v1_service_accounts__service_account_user_id__api_keys__api_key_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "service_accounts",
          "api_keys"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Service Account Api Key",
        "description": "Delete an existing API key for a service account",
        "operationId": "delete_service_account_api_key",
        "parameters": [
          {
            "name": "service_account_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Account User Id"
            }
          },
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Api Key Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "service_accounts",
          "api_keys"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/service-accounts": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Service Accounts",
        "description": "List all service accounts in the workspace",
        "operationId": "get_workspace_service_accounts",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceServiceAccountListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "service_accounts"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/workspace/groups/search": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Search User Groups",
        "description": "Searches for user groups in the workspace. Multiple or no groups may be returned.",
        "operationId": "search_groups",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the target group.",
              "title": "Name"
            },
            "description": "Name of the target group."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceGroupByNameResponseModel"
                  },
                  "title": "Response Search User Groups V1 Workspace Groups Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "groups"
        ],
        "x-fern-sdk-method-name": "search"
      }
    },
    "/v1/workspace/groups/{group_id}/members/remove": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Member From User Group",
        "description": "Removes a member from the specified group. This endpoint may only be called by workspace administrators.",
        "operationId": "remove_member",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target group.",
              "title": "Group Id"
            },
            "description": "The ID of the target group."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWorkspaceGroupMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "groups",
          "members"
        ],
        "x-fern-sdk-method-name": "remove"
      }
    },
    "/v1/workspace/groups/{group_id}/members": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Add Member To User Group",
        "description": "Adds a member of your workspace to the specified group. This endpoint may only be called by workspace administrators.",
        "operationId": "add_member",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target group.",
              "title": "Group Id"
            },
            "description": "The ID of the target group."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWorkspaceGroupMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "groups",
          "members"
        ],
        "x-fern-sdk-method-name": "add"
      }
    },
    "/v1/workspace/invites/add": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Invite User",
        "description": "Sends an email invitation to join your workspace to the provided email. If the user doesn't have an account they will be prompted to create one. If the user accepts this invite they will be added as a user to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators. If the user is already in the workspace a 400 error will be returned.",
        "operationId": "invite_user",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Invite_user_v1_workspace_invites_add_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWorkspaceInviteResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "invites"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/workspace/invites/add-bulk": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Invite Multiple Users",
        "description": "Sends email invitations to join your workspace to the provided emails. Requires all email addresses to be part of a verified domain. If the users don't have an account they will be prompted to create one. If the users accept these invites they will be added as users to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators.",
        "operationId": "invite_users_bulk",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWorkspaceInviteResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "invites"
        ],
        "x-fern-sdk-method-name": "create_batch"
      }
    },
    "/v1/workspace/invites": {
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Existing Invitation",
        "description": "Invalidates an existing email invitation. The invitation will still show up in the inbox it has been delivered to, but activating it to join the workspace won't work. This endpoint may only be called by workspace administrators.",
        "operationId": "delete_invite",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_existing_invitation_v1_workspace_invites_delete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWorkspaceInviteResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "invites"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/workspace/members": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Update Member",
        "description": "Updates attributes of a workspace member. Apart from the email identifier, all parameters will remain unchanged unless specified. This endpoint may only be called by workspace administrators.",
        "operationId": "update_workspace_member",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_member_v1_workspace_members_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWorkspaceMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "members"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Member",
        "description": "Deletes a workspace member. This endpoint may only be called by workspace administrators.",
        "operationId": "delete_workspace_member",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_member_v1_workspace_members_delete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWorkspaceMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "members"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/workspace/resources/{resource_id}": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Resource",
        "description": "Gets the metadata of a resource by ID.",
        "operationId": "get_resource_metadata",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target resource.",
              "title": "Resource Id"
            },
            "description": "The ID of the target resource."
          },
          {
            "name": "resource_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/WorkspaceResourceType",
              "description": "Resource type of the target resource."
            },
            "description": "Resource type of the target resource."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceMetadataResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "resources"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/workspace/resources/{resource_id}/share": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Share Workspace Resource",
        "description": "Grants a role on a workspace resource to a user or a group. It overrides any existing role this user/service account/group/workspace api key has on the resource. To target a user or service account, pass only the user email. The user must be in your workspace. To target a group, pass only the group id. To target a workspace api key, pass the api key id. The resource will be shared with the service account associated with the api key. You must have admin access to the resource to share it.",
        "operationId": "share_resource_endpoint",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target resource.",
              "title": "Resource Id"
            },
            "description": "The ID of the target resource."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Share_workspace_resource_v1_workspace_resources__resource_id__share_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "resources"
        ],
        "x-fern-sdk-method-name": "share"
      }
    },
    "/v1/workspace/resources/{resource_id}/unshare": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Unshare Workspace Resource",
        "description": "Removes any existing role on a workspace resource from a user, service account, group or workspace api key. To target a user or service account, pass only the user email. The user must be in your workspace. To target a group, pass only the group id. To target a workspace api key, pass the api key id. The resource will be unshared from the service account associated with the api key. You must have admin access to the resource to unshare it. You cannot remove permissions from the user who created the resource.",
        "operationId": "unshare_resource_endpoint",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target resource.",
              "title": "Resource Id"
            },
            "description": "The ID of the target resource."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "resources"
        ],
        "x-fern-sdk-method-name": "unshare"
      }
    },
    "/v1/workspace/webhooks": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "List Workspace Webhooks",
        "description": "List all webhooks for a workspace",
        "operationId": "get_workspace_webhooks_route",
        "parameters": [
          {
            "name": "include_usages",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include active usages of the webhook, only usable by admins",
              "examples": [
                false
              ],
              "default": false,
              "title": "Include Usages"
            },
            "description": "Whether to include active usages of the webhook, only usable by admins"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceWebhookListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "webhooks",
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/speech-to-text": {
      "post": {
        "tags": [
          "speech-to-text"
        ],
        "summary": "Speech To Text",
        "description": "Transcribe an audio or video file. If webhook is set to true, the request will be processed asynchronously and results sent to configured webhooks. When use_multi_channel is true and the provided audio has multiple channels, a 'transcripts' object with separate transcripts for each channel is returned. Otherwise, returns a single transcript. The optional webhook_metadata parameter allows you to attach custom data that will be included in webhook responses for request correlation and tracking.",
        "operationId": "Speech_to_Text_v1_speech_to_text_post",
        "parameters": [
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Text_v1_speech_to_text_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Synchronous transcription result",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SpeechToTextChunkResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/MultichannelSpeechToTextResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/SpeechToTextWebhookResponseModel"
                    }
                  ],
                  "title": "Response Speech To Text V1 Speech To Text Post",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/SpeechToTextChunkResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/MultichannelSpeechToTextResponseModel"
                    }
                  ]
                },
                "examples": {
                  "single_channel": {
                    "summary": "Single channel response",
                    "value": {
                      "language_code": "en",
                      "language_probability": 0.98,
                      "text": "Hello world!",
                      "words": [
                        {
                          "text": "Hello",
                          "start": 0,
                          "end": 0.5,
                          "type": "word",
                          "speaker_id": "speaker_1",
                          "logprob": -0.124
                        }
                      ]
                    }
                  },
                  "multichannel": {
                    "summary": "Multichannel response",
                    "value": {
                      "transcripts": [
                        {
                          "language_code": "en",
                          "language_probability": 0.98,
                          "text": "Hello from channel one.",
                          "words": [
                            {
                              "text": "Hello",
                              "start": 0,
                              "end": 0.5,
                              "type": "word",
                              "speaker_id": "speaker_0",
                              "channel_index": 0,
                              "logprob": -0.124
                            }
                          ]
                        },
                        {
                          "language_code": "en",
                          "language_probability": 0.97,
                          "text": "Greetings from channel two.",
                          "words": [
                            {
                              "text": "Greetings",
                              "start": 0.1,
                              "end": 0.7,
                              "type": "word",
                              "speaker_id": "speaker_1",
                              "channel_index": 1,
                              "logprob": -0.156
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Asynchronous request accepted",
            "content": {
              "application/json": {
                "example": {
                  "message": "Request accepted. Transcription result will be sent to the webhook.",
                  "request_id": "abc123"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "speech_to_text",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/forced-alignment": {
      "post": {
        "tags": [
          "forced-alignment"
        ],
        "summary": "Create Forced Alignment",
        "description": "Force align an audio file to text. Use this endpoint to get the timing information for each character and word in an audio file based on a provided text transcript.",
        "operationId": "Create_forced_alignment_v1_forced_alignment_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_forced_alignment_v1_forced_alignment_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForcedAlignmentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "forced_alignment",
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/convai/conversation/get-signed-url": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Signed Url",
        "description": "Get a signed url to start a conversation with an agent with an agent that requires authorization",
        "operationId": "get_conversation_signed_link",
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the agent you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            },
            "description": "The id of the agent you're taking the action on."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationSignedUrlResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations"
        ],
        "x-fern-sdk-method-name": "get_signed_url"
      }
    },
    "/v1/convai/conversation/get_signed_url": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Signed Url",
        "description": "Get a signed url to start a conversation with an agent with an agent that requires authorization",
        "operationId": "get_signed_url_deprecated",
        "deprecated": true,
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the agent you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            },
            "description": "The id of the agent you're taking the action on."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationSignedUrlResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-skip-spec": true
      }
    },
    "/v1/convai/conversation/token": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Webrtc Token",
        "description": "Get a WebRTC session token for real-time communication.",
        "operationId": "get_livekit_token",
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the agent you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            },
            "description": "The id of the agent you're taking the action on."
          },
          {
            "name": "participant_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional custom participant name. If not provided, user ID will be used",
              "title": "Participant Name"
            },
            "description": "Optional custom participant name. If not provided, user ID will be used"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations"
        ],
        "x-fern-sdk-method-name": "get_webrtc_token"
      }
    },
    "/v1/convai/twilio/outbound-call": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Handle An Outbound Call Via Twilio",
        "description": "Handle an outbound call via Twilio",
        "operationId": "handle_twilio_outbound_call",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwilioOutboundCallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "twilio"
        ],
        "x-fern-sdk-method-name": "outbound_call"
      }
    },
    "/v1/convai/agents/create": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Agent",
        "description": "Create an agent from a config object",
        "operationId": "create_agent_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_Agent_v1_convai_agents_create_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/convai/agents/{agent_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Agent",
        "description": "Retrieve config for an agent",
        "operationId": "get_agent_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Patches An Agent Settings",
        "description": "Patches an Agent settings",
        "operationId": "patch_agent_settings_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Agent",
        "description": "Delete an agent",
        "operationId": "delete_agent_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "204": {
            "description": "Agent successfully deleted"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/convai/agents/{agent_id}/widget": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Agent Widget Config",
        "description": "Retrieve the widget configuration for an agent",
        "operationId": "get_agent_widget_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "conversation_signature",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "An expiring token that enables a websocket conversation to start. These can be generated for an agent using the /v1/convai/conversation/get-signed-url endpoint",
              "title": "Conversation Signature"
            },
            "description": "An expiring token that enables a websocket conversation to start. These can be generated for an agent using the /v1/convai/conversation/get-signed-url endpoint"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentEmbedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents",
          "widget"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/convai/agents/{agent_id}/link": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Shareable Agent Link",
        "description": "Get the current link used to share the agent with others",
        "operationId": "get_agent_link_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentLinkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents",
          "link"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/convai/agents/{agent_id}/avatar": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Post Agent Avatar",
        "description": "Sets the avatar for an agent displayed in the widget",
        "operationId": "post_agent_avatar_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostAgentAvatarResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents",
          "widget",
          "avatar"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/convai/agents": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "List Agents",
        "description": "Returns a list of your agents and their metadata.",
        "operationId": "get_agents_route",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many Agents to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many Agents to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by agents name.",
              "title": "Search"
            },
            "description": "Search by agents name."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentsPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/agent/{agent_id}/knowledge-base/size": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Returns The Size Of The Agent'S Knowledge Base",
        "description": "Returns the number of pages in the agent's knowledge base.",
        "operationId": "get_agent_knowledge_base_size",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentKnowledgebaseSizeResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents",
          "knowledge_base"
        ],
        "x-fern-sdk-method-name": "size"
      }
    },
    "/v1/convai/agent/{agent_id}/llm-usage/calculate": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Calculate Expected Llm Usage For An Agent",
        "description": "Calculates expected number of LLM tokens needed for the specified agent.",
        "operationId": "get_agent_llm_expected_cost_calculation",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LLMUsageCalculatorRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMUsageCalculatorResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents",
          "llm_usage"
        ],
        "x-fern-sdk-method-name": "calculate"
      }
    },
    "/v1/convai/agents/{agent_id}/duplicate": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Duplicate Agent",
        "description": "Create a new agent by duplicating an existing one",
        "operationId": "duplicate_agent_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Duplicate_Agent_v1_convai_agents__agent_id__duplicate_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "duplicate"
      }
    },
    "/v1/convai/agents/{agent_id}/simulate-conversation": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Simulates A Conversation",
        "description": "Run a conversation between the agent and a simulated user.",
        "operationId": "run_conversation_simulation_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Simulates_a_conversation_v1_convai_agents__agent_id__simulate_conversation_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentSimulatedChatTestResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "simulate_conversation"
      }
    },
    "/v1/convai/agents/{agent_id}/simulate-conversation/stream": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Simulates A Conversation (Stream)",
        "description": "Run a conversation between the agent and a simulated user and stream back the response. Response is streamed back as partial lists of messages that should be concatenated and once the conversation has complete a single final message with the conversation analysis will be sent.",
        "operationId": "run_conversation_simulation_route_stream",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Simulates_a_conversation__Stream__v1_convai_agents__agent_id__simulate_conversation_stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "simulate_conversation_stream"
      }
    },
    "/v1/convai/conversations": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Conversations",
        "description": "Get all conversations of agents that user owns. With option to restrict to a specific agent.",
        "operationId": "get_conversation_histories_route",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The id of the agent you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            },
            "description": "The id of the agent you're taking the action on."
          },
          {
            "name": "call_successful",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EvaluationSuccessResult"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The result of the success evaluation",
              "examples": [
                "success"
              ],
              "title": "Call Successful"
            },
            "description": "The result of the success evaluation"
          },
          {
            "name": "call_start_before_unix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Unix timestamp (in seconds) to filter conversations up to this start date.",
              "title": "Call Start Before Unix"
            },
            "description": "Unix timestamp (in seconds) to filter conversations up to this start date."
          },
          {
            "name": "call_start_after_unix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Unix timestamp (in seconds) to filter conversations after to this start date.",
              "title": "Call Start After Unix"
            },
            "description": "Unix timestamp (in seconds) to filter conversations after to this start date."
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter conversations by the user ID who initiated them.",
              "title": "User Id"
            },
            "description": "Filter conversations by the user ID who initiated them."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many conversations to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many conversations to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "summary_mode",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "exclude",
                "include"
              ],
              "type": "string",
              "description": "Whether to include transcript summaries in the response.",
              "default": "exclude",
              "title": "Summary Mode"
            },
            "description": "Whether to include transcript summaries in the response."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConversationsPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/conversations/{conversation_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Conversation Details",
        "description": "Get the details of a particular conversation",
        "operationId": "get_conversation_history_route",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the conversation you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Conversation Id"
            },
            "description": "The id of the conversation you're taking the action on."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConversationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Conversation",
        "description": "Delete a particular conversation",
        "operationId": "delete_conversation_route",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the conversation you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Conversation Id"
            },
            "description": "The id of the conversation you're taking the action on."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/convai/conversations/{conversation_id}/audio": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Conversation Audio",
        "description": "Get the audio recording of a particular conversation",
        "operationId": "get_conversation_audio_route",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the conversation you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Conversation Id"
            },
            "description": "The id of the conversation you're taking the action on."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations",
          "audio"
        ],
        "x-fern-sdk-method-name": "get",
        "x-fern-streaming": true
      }
    },
    "/v1/convai/conversations/{conversation_id}/feedback": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Send Conversation Feedback",
        "description": "Send the feedback for the given conversation",
        "operationId": "post_conversation_feedback_route",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the conversation you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Conversation Id"
            },
            "description": "The id of the conversation you're taking the action on."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations",
          "feedback"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/convai/phone-numbers": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Import Phone Number",
        "description": "Import Phone Number from provider configuration (Twilio or SIP trunk)",
        "operationId": "create_phone_number_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/CreateTwilioPhoneNumberRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CreateSIPTrunkPhoneNumberRequestV2"
                  }
                ],
                "description": "Create Phone Request Information",
                "title": "Phone Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePhoneNumberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "phone_numbers"
        ],
        "x-fern-sdk-method-name": "create"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "List Phone Numbers",
        "description": "Retrieve all Phone Numbers",
        "operationId": "list_phone_numbers_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/GetPhoneNumberTwilioResponseModel"
                      },
                      {
                        "$ref": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "provider",
                      "mapping": {
                        "twilio": "#/components/schemas/GetPhoneNumberTwilioResponseModel",
                        "sip_trunk": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                      }
                    }
                  },
                  "title": "Response List Phone Numbers V1 Convai Phone Numbers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "phone_numbers"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/phone-numbers/{phone_number_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Phone Number",
        "description": "Retrieve Phone Number details by ID",
        "operationId": "get_phone_number_route",
        "parameters": [
          {
            "name": "phone_number_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "embed": true,
              "title": "Phone Number Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetPhoneNumberTwilioResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "provider",
                    "mapping": {
                      "twilio": "#/components/schemas/GetPhoneNumberTwilioResponseModel",
                      "sip_trunk": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                    }
                  },
                  "title": "Response Get Phone Number V1 Convai Phone Numbers  Phone Number Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "phone_numbers"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Phone Number",
        "description": "Delete Phone Number by ID",
        "operationId": "delete_phone_number_route",
        "parameters": [
          {
            "name": "phone_number_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "embed": true,
              "title": "Phone Number Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "phone_numbers"
        ],
        "x-fern-sdk-method-name": "delete"
      },
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Phone Number",
        "description": "Update Phone Number details by ID",
        "operationId": "update_phone_number_route",
        "parameters": [
          {
            "name": "phone_number_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "embed": true,
              "title": "Phone Number Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePhoneNumberRequest",
                "description": "Patch Phone Request Information"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetPhoneNumberTwilioResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "provider",
                    "mapping": {
                      "twilio": "#/components/schemas/GetPhoneNumberTwilioResponseModel",
                      "sip_trunk": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                    }
                  },
                  "title": "Response Update Phone Number V1 Convai Phone Numbers  Phone Number Id  Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "phone_numbers"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/convai/llm-usage/calculate": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Calculate Expected Llm Usage",
        "description": "Returns a list of LLM models and the expected cost for using them based on the provided values.",
        "operationId": "get_public_llm_expected_cost_calculation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LLMUsageCalculatorPublicRequestModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMUsageCalculatorResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "llm_usage"
        ],
        "x-fern-sdk-method-name": "calculate"
      }
    },
    "/v1/convai/knowledge-base": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Add To Knowledge Base",
        "description": "Uploads a file or reference a webpage to use as part of the shared knowledge base",
        "operationId": "add_documentation_to_knowledge_base",
        "deprecated": true,
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_to_knowledge_base_v1_convai_knowledge_base_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "add_to_knowledge_base"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Knowledge Base List",
        "description": "Get a list of available knowledge base documents",
        "operationId": "get_knowledge_base_list_route",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If specified, the endpoint returns only such knowledge base documents whose names start with this string.",
              "title": "Search"
            },
            "description": "If specified, the endpoint returns only such knowledge base documents whose names start with this string."
          },
          {
            "name": "show_only_owned_documents",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set to true, the endpoint will return only documents owned by you (and not shared from somebody else).",
              "default": false,
              "title": "Show Only Owned Documents"
            },
            "description": "If set to true, the endpoint will return only documents owned by you (and not shared from somebody else)."
          },
          {
            "name": "types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KnowledgeBaseDocumentType"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "If present, the endpoint will return only documents of the given types.",
              "title": "Types"
            },
            "description": "If present, the endpoint will return only documents of the given types."
          },
          {
            "name": "use_typesense",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set to true, the endpoint will use typesense DB to search for the documents).",
              "default": false,
              "title": "Use Typesense"
            },
            "description": "If set to true, the endpoint will use typesense DB to search for the documents)."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKnowledgeBaseListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/knowledge-base/url": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Url Document",
        "description": "Create a knowledge base document generated by scraping the given webpage.",
        "operationId": "create_url_document_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_URL_document_v1_convai_knowledge_base_url_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "create_from_url"
      }
    },
    "/v1/convai/knowledge-base/file": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create File Document",
        "description": "Create a knowledge base document generated form the uploaded file.",
        "operationId": "create_file_document_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_file_document_v1_convai_knowledge_base_file_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "create_from_file"
      }
    },
    "/v1/convai/knowledge-base/text": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Text Document",
        "description": "Create a knowledge base document containing the provided text.",
        "operationId": "create_text_document_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_text_document_v1_convai_knowledge_base_text_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "create_from_text"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}": {
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Document",
        "description": "Update the name of a document",
        "operationId": "update_document_route",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_document_v1_convai_knowledge_base__documentation_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseURLResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseFileResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseTextResponseModel"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "url": "#/components/schemas/GetKnowledgeBaseURLResponseModel",
                      "file": "#/components/schemas/GetKnowledgeBaseFileResponseModel",
                      "text": "#/components/schemas/GetKnowledgeBaseTextResponseModel"
                    }
                  },
                  "title": "Response Update Document V1 Convai Knowledge Base  Documentation Id  Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Documentation From Knowledge Base",
        "description": "Get details about a specific documentation making up the agent's knowledge base",
        "operationId": "get_documentation_from_knowledge_base",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseURLResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseFileResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseTextResponseModel"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "url": "#/components/schemas/GetKnowledgeBaseURLResponseModel",
                      "file": "#/components/schemas/GetKnowledgeBaseFileResponseModel",
                      "text": "#/components/schemas/GetKnowledgeBaseTextResponseModel"
                    }
                  },
                  "title": "Response Get Documentation From Knowledge Base V1 Convai Knowledge Base  Documentation Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Knowledge Base Document",
        "description": "Delete a document from the knowledge base",
        "operationId": "delete_knowledge_base_document",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set to true, the document will be deleted regardless of whether it is used by any agents and it will be deleted from the dependent agents.",
              "default": false,
              "title": "Force"
            },
            "description": "If set to true, the document will be deleted regardless of whether it is used by any agents and it will be deleted from the dependent agents."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/rag-index": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Compute Rag Index.",
        "description": "In case the document is not RAG indexed, it triggers rag indexing task, otherwise it just returns the current status.",
        "operationId": "rag_index_status",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RAGIndexRequestModel",
                "description": "Payload for RAG index status endpoint."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RAGDocumentIndexResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "document"
        ],
        "x-fern-sdk-method-name": "compute_rag_index"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Rag Indexes Of The Specified Knowledgebase Document.",
        "description": "Provides information about all RAG indexes of the specified knowledgebase document.",
        "operationId": "get_rag_indexes",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RAGDocumentIndexesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_document_rag_indexes"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/rag-index/{rag_index_id}": {
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Rag Index.",
        "description": "Delete RAG index for the knowledgebase document.",
        "operationId": "delete_rag_index",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "rag_index_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of RAG index of document from the knowledge base.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Rag Index Id"
            },
            "description": "The id of RAG index of document from the knowledge base."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RAGDocumentIndexResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "delete_document_rag_index"
      }
    },
    "/v1/convai/knowledge-base/rag-index": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Rag Index Overview.",
        "description": "Provides total size and other information of RAG indexes used by knowledgebase documents",
        "operationId": "get_rag_index_overview",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RAGIndexOverviewResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "rag_index_overview"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/dependent-agents": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Dependent Agents List",
        "description": "Get a list of agents depending on this knowledge base document",
        "operationId": "get_knowledge_base_dependent_agents",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKnowledgeBaseDependentAgentsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "get_agents"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/content": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Document Content",
        "description": "Get the entire content of a document from the knowledge base",
        "operationId": "get_knowledge_base_content",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Streaming document content",
            "content": {
              "text/html": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "get_content",
        "x-fern-sdk-streaming": true
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/chunk/{chunk_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Documentation Chunk From Knowledge Base",
        "description": "Get details about a specific documentation part used by RAG.",
        "operationId": "get_documentation_chunk_from_knowledge_base",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "chunk_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document RAG chunk from the knowledge base.",
              "examples": [
                1
              ],
              "embed": true,
              "title": "Chunk Id"
            },
            "description": "The id of a document RAG chunk from the knowledge base."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseDocumentChunkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents",
          "chunk"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/convai/tools": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Add Tool",
        "description": "Add a new tool to the available tools in the workspace.",
        "operationId": "add_tool_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolRequestModel",
                "description": "A tool that an agent can provide to LLM."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "tools"
        ],
        "x-fern-sdk-method-name": "create"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Tools",
        "description": "Get all available tools available in the workspace.",
        "operationId": "get_tools_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "tools"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/tools/{tool_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Tool",
        "description": "Get tool that is available in the workspace.",
        "operationId": "get_tool_route",
        "parameters": [
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the requested tool.",
              "title": "Tool Id"
            },
            "description": "ID of the requested tool."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "tools"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Tool",
        "description": "Update tool that is available in the workspace.",
        "operationId": "update_tool_route",
        "parameters": [
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the requested tool.",
              "title": "Tool Id"
            },
            "description": "ID of the requested tool."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolRequestModel",
                "description": "A tool that an agent can provide to LLM."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "tools"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Tool",
        "description": "Delete tool from the workspace.",
        "operationId": "delete_tool_route",
        "parameters": [
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the requested tool.",
              "title": "Tool Id"
            },
            "description": "ID of the requested tool."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "tools"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/convai/tools/{tool_id}/dependent-agents": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Dependent Agents List",
        "description": "Get a list of agents depending on this tool",
        "operationId": "get_tool_dependent_agents_route",
        "parameters": [
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the requested tool.",
              "title": "Tool Id"
            },
            "description": "ID of the requested tool."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetToolDependentAgentsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "tools"
        ],
        "x-fern-sdk-method-name": "get_dependent_agents"
      }
    },
    "/v1/convai/settings": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Convai Settings",
        "description": "Retrieve Convai settings for the workspace",
        "operationId": "get_settings_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAISettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "settings"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Convai Settings",
        "description": "Update Convai settings for the workspace",
        "operationId": "update_settings_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchConvAISettingsRequest",
                "description": "Convai settings to update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAISettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "settings"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/convai/settings/dashboard": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Convai Dashboard Settings",
        "description": "Retrieve Convai dashboard settings for the workspace",
        "operationId": "get_dashboard_settings_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAIDashboardSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "dashboard",
          "settings"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Convai Dashboard Settings",
        "description": "Update Convai dashboard settings for the workspace",
        "operationId": "update_dashboard_settings_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchConvAIDashboardSettingsRequest",
                "description": "Convai dashboard settings to update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAIDashboardSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "dashboard",
          "settings"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/convai/secrets": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Convai Workspace Secret",
        "description": "Create a new secret for the workspace",
        "operationId": "create_secret_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostWorkspaceSecretRequest",
                "description": "Secret to create"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostWorkspaceSecretResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "secrets"
        ],
        "x-fern-sdk-method-name": "create"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Convai Workspace Secrets",
        "description": "Get all workspace secrets for the user",
        "operationId": "get_secrets_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkspaceSecretsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "secrets"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/secrets/{secret_id}": {
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Convai Workspace Secret",
        "description": "Delete a workspace secret if it's not in use",
        "operationId": "delete_secret_route",
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Secret Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "secrets"
        ],
        "x-fern-sdk-method-name": "delete"
      },
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Convai Workspace Secret",
        "description": "Update an existing secret for the workspace",
        "operationId": "update_secret_route",
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Secret Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchWorkspaceSecretRequest",
                "description": "Secret data to update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostWorkspaceSecretResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "update_secret"
      }
    },
    "/v1/convai/batch-calling/submit": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Submit A Batch Call Request.",
        "description": "Submit a batch call request to schedule calls for multiple recipients.",
        "operationId": "create_batch_call",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Submit_a_batch_call_request__v1_convai_batch_calling_submit_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchCallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "batch_calls"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/convai/batch-calling/workspace": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get All Batch Calls For A Workspace.",
        "description": "Get all batch calls for the current workspace.",
        "operationId": "get_workspace_batch_calls",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "last_doc",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Last Doc"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceBatchCallsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "batch_calls"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/batch-calling/{batch_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get A Batch Call By Id.",
        "description": "Get detailed information about a batch call including all recipients.",
        "operationId": "get_batch_call",
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Batch Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchCallDetailedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "batch_calls"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/convai/batch-calling/{batch_id}/cancel": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Cancel A Batch Call.",
        "description": "Cancel a running batch call and set all recipients to cancelled status.",
        "operationId": "cancel_batch_call",
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Batch Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchCallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "batch_calls"
        ],
        "x-fern-sdk-method-name": "cancel"
      }
    },
    "/v1/convai/batch-calling/{batch_id}/retry": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Retry A Batch Call.",
        "description": "Retry a batch call, calling failed and no-response recipients again.",
        "operationId": "retry_batch_call",
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Batch Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchCallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "batch_calls"
        ],
        "x-fern-sdk-method-name": "retry"
      }
    },
    "/v1/convai/sip-trunk/outbound-call": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Handle An Outbound Call Via Sip Trunk",
        "description": "Handle an outbound call via SIP trunk",
        "operationId": "handle_sip_trunk_outbound_call",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Handle_an_outbound_call_via_SIP_trunk_v1_convai_sip_trunk_outbound_call_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SIPTrunkOutboundCallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "sip_trunk"
        ],
        "x-fern-sdk-method-name": "outbound_call"
      }
    },
    "/v1/convai/mcp-servers": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Mcp Server",
        "description": "Create a new MCP server configuration in the workspace.",
        "operationId": "create_mcp_server_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCPServerRequestModel",
                "description": "Configuration for an MCP Server."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPServerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers"
        ],
        "x-fern-sdk-method-name": "create"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "List Mcp Servers",
        "description": "Retrieve all MCP server configurations available in the workspace.",
        "operationId": "list_mcp_servers_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPServersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/mcp-servers/{mcp_server_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Mcp Server",
        "description": "Retrieve a specific MCP server configuration from the workspace.",
        "operationId": "get_mcp_route",
        "parameters": [
          {
            "name": "mcp_server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the MCP Server.",
              "title": "Mcp Server Id"
            },
            "description": "ID of the MCP Server."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPServerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/convai/mcp-servers/{mcp_server_id}/tools": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "List Mcp Server Tools",
        "description": "Retrieve all tools available for a specific MCP server configuration.",
        "operationId": "list_mcp_server_tools_route",
        "parameters": [
          {
            "name": "mcp_server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the MCP Server.",
              "title": "Mcp Server Id"
            },
            "description": "ID of the MCP Server."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMCPToolsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers",
          "tools"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/mcp-servers/{mcp_server_id}/approval-policy": {
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Mcp Server Approval Policy",
        "description": "Update the approval policy configuration for an MCP server.",
        "operationId": "update_mcp_server_approval_policy_route",
        "parameters": [
          {
            "name": "mcp_server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the MCP Server.",
              "title": "Mcp Server Id"
            },
            "description": "ID of the MCP Server."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCPApprovalPolicyUpdateRequestModel",
                "description": "Approval policy update for an MCP Server."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPServerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers",
          "approval_policy"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/convai/mcp-servers/{mcp_server_id}/tool-approvals": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Mcp Server Tool Approval",
        "description": "Add approval for a specific MCP tool when using per-tool approval mode.",
        "operationId": "add_mcp_server_tool_approval_route",
        "parameters": [
          {
            "name": "mcp_server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the MCP Server.",
              "title": "Mcp Server Id"
            },
            "description": "ID of the MCP Server."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCPToolAddApprovalRequestModel",
                "description": "Tool approval details to add for an MCP Server."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPServerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers",
          "tool_approvals"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/convai/mcp-servers/{mcp_server_id}/tool-approvals/{tool_name}": {
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Mcp Server Tool Approval",
        "description": "Remove approval for a specific MCP tool when using per-tool approval mode.",
        "operationId": "remove_mcp_server_tool_approval_route",
        "parameters": [
          {
            "name": "mcp_server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the MCP Server.",
              "title": "Mcp Server Id"
            },
            "description": "ID of the MCP Server."
          },
          {
            "name": "tool_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the MCP tool to remove approval for.",
              "title": "Tool Name"
            },
            "description": "Name of the MCP tool to remove approval for."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPServerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers",
          "tool_approvals"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/music/plan": {
      "post": {
        "tags": [
          "music-generation"
        ],
        "summary": "Generate Composition Plan",
        "description": "Generate a composition plan from a prompt.",
        "operationId": "Generate_composition_plan_v1_music_plan_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_composition_plan_v1_music_plan_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MusicPrompt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "music",
          "composition_plan"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/music": {
      "post": {
        "tags": [
          "music-generation"
        ],
        "summary": "Compose Music",
        "description": "Compose a song from a prompt or a composition plan.",
        "operationId": "Compose_music_v1_music_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Compose_music_v1_music_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated audio file in the format specified",
            "content": {
              "audio/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "song-id": {
                "description": "Unique identifier for the generated song",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "music",
        "x-fern-sdk-method-name": "compose"
      }
    },
    "/v1/music/detailed": {
      "post": {
        "tags": [
          "music-generation"
        ],
        "summary": "Compose Music With A Detailed Response",
        "description": "Compose a song from a prompt or a composition plan.",
        "operationId": "Compose_Music_with_a_detailed_response_v1_music_detailed_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Compose_Music_with_a_detailed_response_v1_music_detailed_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Multipart/mixed response with JSON metadata and binary audio file",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": "Raw multipart/mixed response data that clients must parse. Contains two parts separated by boundary: 1) application/json part with composition_plan and song_metadata 2) audio/* part with binary audio data and Content-Disposition header"
                }
              }
            },
            "headers": {
              "song-id": {
                "description": "Unique identifier for the generated song",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "music",
        "x-fern-sdk-method-name": "compose_detailed"
      }
    },
    "/v1/music/stream": {
      "post": {
        "tags": [
          "music-generation"
        ],
        "summary": "Stream Composed Music",
        "description": "Stream a composed song from a prompt or a composition plan.",
        "operationId": "Stream_composed_music_v1_music_stream_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_composed_music_v1_music_stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data in the format specified",
            "content": {
              "audio/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "song-id": {
                "description": "Unique identifier for the generated song",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "music",
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/voices/pvc": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Create Pvc Voice",
        "description": "Creates a new PVC voice with metadata but no samples",
        "operationId": "Create_PVC_voice_v1_voices_pvc_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_PVC_voice_v1_voices_pvc_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/voices/pvc/{voice_id}": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Edit Pvc Voice",
        "description": "Edit PVC voice metadata",
        "operationId": "Edit_PVC_voice_v1_voices_pvc__voice_id__post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_PVC_voice_v1_voices_pvc__voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Add Samples To Pvc Voice",
        "description": "Add audio samples to a PVC voice",
        "operationId": "Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SampleResponseModel"
                  },
                  "title": "Response Add Samples To Pvc Voice V1 Voices Pvc  Voice Id  Samples Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Update Pvc Voice Sample",
        "description": "Update a PVC voice sample - apply noise removal, or select speaker.",
        "operationId": "Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "delete": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Delete Pvc Voice Sample",
        "description": "Delete a sample from a PVC voice.",
        "operationId": "Delete_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__delete",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteVoiceSampleResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/audio": {
      "get": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Retrieve Voice Sample Audio",
        "description": "Retrieve the first 30 seconds of voice sample audio with or without noise removal.",
        "operationId": "Retrieve_voice_sample_audio_v1_voices_pvc__voice_id__samples__sample_id__audio_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "remove_background_noise",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
              "examples": [
                true
              ],
              "embed": true,
              "default": false,
              "title": "Remove Background Noise"
            },
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSamplePreviewResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "audio"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/waveform": {
      "get": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Retrieve Voice Sample Visual Waveform",
        "description": "Retrieve the visual waveform of a voice sample.",
        "operationId": "Retrieve_voice_sample_visual_waveform_v1_voices_pvc__voice_id__samples__sample_id__waveform_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSampleVisualWaveformResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "waveform"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/speakers": {
      "get": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Retrieve Speaker Separation Status",
        "description": "Retrieve the status of the speaker separation process and the list of detected speakers if complete.",
        "operationId": "Retrieve_speaker_separation_status_v1_voices_pvc__voice_id__samples__sample_id__speakers_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeakerSeparationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "speakers"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/separate-speakers": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Start Speaker Separation",
        "description": "Start speaker separation process for a sample",
        "operationId": "Start_speaker_separation_v1_voices_pvc__voice_id__samples__sample_id__separate_speakers_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartSpeakerSeparationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "speakers"
        ],
        "x-fern-sdk-method-name": "separate"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/speakers/{speaker_id}/audio": {
      "get": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Retrieve Separated Speaker Audio",
        "description": "Retrieve the separated audio for a specific speaker.",
        "operationId": "Retrieve_separated_speaker_audio_v1_voices_pvc__voice_id__samples__sample_id__speakers__speaker_id__audio_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "speaker_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Speaker ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id}/samples/{sample_id}/speakers to list all the available speakers for a sample.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Speaker Id"
            },
            "description": "Speaker ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id}/samples/{sample_id}/speakers to list all the available speakers for a sample."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeakerAudioResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "speakers",
          "audio"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/pvc/{voice_id}/captcha": {
      "get": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Get Pvc Voice Captcha",
        "description": "Get captcha for PVC voice verification.",
        "operationId": "Get_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "verification",
          "captcha"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Verify Pvc Voice Captcha",
        "description": "Submit captcha verification for PVC voice.",
        "operationId": "Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyPVCVoiceCaptchaResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "verification",
          "captcha"
        ],
        "x-fern-sdk-method-name": "verify"
      }
    },
    "/v1/voices/pvc/{voice_id}/train": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Run Pvc Training",
        "description": "Start PVC training process for a voice.",
        "operationId": "Run_PVC_training_v1_voices_pvc__voice_id__train_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Run_PVC_training_v1_voices_pvc__voice_id__train_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartPVCVoiceTrainingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc"
        ],
        "x-fern-sdk-method-name": "train"
      }
    },
    "/v1/voices/pvc/{voice_id}/verification": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Request Manual Verification",
        "description": "Request manual verification for a PVC voice.",
        "operationId": "Request_manual_verification_v1_voices_pvc__voice_id__verification_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Request_manual_verification_v1_voices_pvc__voice_id__verification_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestPVCManualVerificationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "verification"
        ],
        "x-fern-sdk-method-name": "request"
      }
    }
  },
  "components": {
    "schemas": {
      "ASRConversationalConfig": {
        "properties": {
          "quality": {
            "$ref": "#/components/schemas/ASRQuality",
            "description": "The quality of the transcription",
            "default": "high"
          },
          "provider": {
            "$ref": "#/components/schemas/ASRProvider",
            "description": "The provider of the transcription service",
            "default": "elevenlabs"
          },
          "user_input_audio_format": {
            "$ref": "#/components/schemas/ASRInputFormat",
            "description": "The format of the audio to be transcribed",
            "default": "pcm_16000"
          },
          "keywords": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Keywords",
            "description": "Keywords to boost prediction probability for"
          }
        },
        "type": "object",
        "title": "ASRConversationalConfig",
        "example": {
          "keywords": [
            "hello",
            "world"
          ],
          "provider": "elevenlabs",
          "quality": "high",
          "user_input_audio_format": "pcm_16000"
        }
      },
      "ASRInputFormat": {
        "type": "string",
        "enum": [
          "pcm_8000",
          "pcm_16000",
          "pcm_22050",
          "pcm_24000",
          "pcm_44100",
          "pcm_48000",
          "ulaw_8000"
        ],
        "title": "ASRInputFormat"
      },
      "ASRProvider": {
        "type": "string",
        "enum": [
          "elevenlabs",
          "realtime_scribe_v1"
        ],
        "title": "ASRProvider"
      },
      "ASRQuality": {
        "type": "string",
        "enum": [
          "high"
        ],
        "title": "ASRQuality"
      },
      "AddChapterResponseModel": {
        "properties": {
          "chapter": {
            "$ref": "#/components/schemas/ChapterWithContentResponseModel"
          }
        },
        "type": "object",
        "required": [
          "chapter"
        ],
        "title": "AddChapterResponseModel"
      },
      "AddKnowledgeBaseResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "AddKnowledgeBaseResponseModel"
      },
      "AddProjectResponseModel": {
        "properties": {
          "project": {
            "$ref": "#/components/schemas/ProjectResponseModel"
          }
        },
        "type": "object",
        "required": [
          "project"
        ],
        "title": "AddProjectResponseModel"
      },
      "AddPronunciationDictionaryResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the created pronunciation dictionary."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the created pronunciation dictionary."
          },
          "created_by": {
            "type": "string",
            "title": "Created By",
            "description": "The user ID of the creator of the pronunciation dictionary."
          },
          "creation_time_unix": {
            "type": "integer",
            "title": "Creation Time Unix",
            "description": "The creation time of the pronunciation dictionary in Unix timestamp."
          },
          "version_id": {
            "type": "string",
            "title": "Version Id",
            "description": "The ID of the created pronunciation dictionary version."
          },
          "version_rules_num": {
            "type": "integer",
            "title": "Version Rules Num",
            "description": "The number of rules in the version of the pronunciation dictionary."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the pronunciation dictionary."
          },
          "permission_on_resource": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission On Resource",
            "description": "The permission on the resource of the pronunciation dictionary."
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_by",
          "creation_time_unix",
          "version_id",
          "version_rules_num",
          "permission_on_resource"
        ],
        "title": "AddPronunciationDictionaryResponseModel",
        "example": {
          "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
          "creation_time_unix": 1714156800,
          "description": "This is a test dictionary",
          "id": "5xM3yVvZQKV0EfqQpLrJ",
          "name": "My Dictionary",
          "permission_on_resource": "admin",
          "version_id": "5xM3yVvZQKV0EfqQpLrJ",
          "version_rules_num": 5
        }
      },
      "AddVoiceIVCResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the newly created voice."
          },
          "requires_verification": {
            "type": "boolean",
            "title": "Requires Verification",
            "description": "Whether the voice requires verification"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "requires_verification"
        ],
        "title": "AddVoiceIVCResponseModel",
        "example": {
          "requires_verification": false,
          "voice_id": "c38kUX8pkfYO2kHyqfFy"
        }
      },
      "AddVoiceResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the voice."
          }
        },
        "type": "object",
        "required": [
          "voice_id"
        ],
        "title": "AddVoiceResponseModel",
        "example": {
          "voice_id": "b38kUX8pkfYO2kHyqfFy"
        }
      },
      "AddWorkspaceGroupMemberResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the workspace group member addition request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "AddWorkspaceGroupMemberResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "AddWorkspaceInviteResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the workspace invite request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "AddWorkspaceInviteResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "AdditionalFormatResponseModel": {
        "properties": {
          "requested_format": {
            "type": "string",
            "title": "Requested Format",
            "description": "The requested format."
          },
          "file_extension": {
            "type": "string",
            "title": "File Extension",
            "description": "The file extension of the additional format."
          },
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "The content type of the additional format."
          },
          "is_base64_encoded": {
            "type": "boolean",
            "title": "Is Base64 Encoded",
            "description": "Whether the content is base64 encoded."
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "The content of the additional format."
          }
        },
        "type": "object",
        "required": [
          "requested_format",
          "file_extension",
          "content_type",
          "is_base64_encoded",
          "content"
        ],
        "title": "AdditionalFormatResponseModel"
      },
      "AdditionalFormats": {
        "items": {
          "$ref": "#/components/schemas/ExportOptions"
        },
        "type": "array",
        "maxItems": 10,
        "title": "AdditionalFormats"
      },
      "AgentBan": {
        "properties": {
          "at_unix": {
            "type": "integer",
            "title": "At Unix"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "reason_type": {
            "$ref": "#/components/schemas/BanReasonType"
          }
        },
        "type": "object",
        "required": [
          "at_unix",
          "reason_type"
        ],
        "title": "AgentBan",
        "x-fern-ignore": "True"
      },
      "AgentCallLimits": {
        "properties": {
          "agent_concurrency_limit": {
            "type": "integer",
            "title": "Agent Concurrency Limit",
            "description": "The maximum number of concurrent conversations. -1 indicates that there is no maximum",
            "default": -1
          },
          "daily_limit": {
            "type": "integer",
            "title": "Daily Limit",
            "description": "The maximum number of conversations per day",
            "default": 100000
          },
          "bursting_enabled": {
            "type": "boolean",
            "title": "Bursting Enabled",
            "description": "Whether to enable bursting. If true, exceeding workspace concurrency limit will be allowed up to 3 times the limit. Calls will be charged at double rate when exceeding the limit.",
            "default": true
          }
        },
        "type": "object",
        "title": "AgentCallLimits",
        "example": {
          "agent_concurrency_limit": -1,
          "bursting_enabled": true,
          "daily_limit": 100000
        }
      },
      "AgentConfigAPIModel-Input": {
        "properties": {
          "first_message": {
            "type": "string",
            "title": "First Message",
            "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
            "default": "",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "Language of the agent - used for ASR and TTS",
            "default": "en",
            "x-convai-client-override": true
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig",
            "description": "Configuration for dynamic variables"
          },
          "prompt": {
            "$ref": "#/components/schemas/PromptAgentAPIModel-Input",
            "description": "The prompt for the agent"
          }
        },
        "type": "object",
        "title": "AgentConfigAPIModel",
        "example": {
          "first_message": "Hello, how can I help you today?",
          "language": "en"
        }
      },
      "AgentConfigAPIModel-Output": {
        "properties": {
          "first_message": {
            "type": "string",
            "title": "First Message",
            "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
            "default": "",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "Language of the agent - used for ASR and TTS",
            "default": "en",
            "x-convai-client-override": true
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig",
            "description": "Configuration for dynamic variables"
          },
          "prompt": {
            "$ref": "#/components/schemas/PromptAgentAPIModel-Output",
            "description": "The prompt for the agent"
          }
        },
        "type": "object",
        "title": "AgentConfigAPIModel",
        "example": {
          "first_message": "Hello, how can I help you today?",
          "language": "en"
        }
      },
      "AgentConfigOverride": {
        "properties": {
          "first_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Message",
            "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Language of the agent - used for ASR and TTS",
            "x-convai-client-override": true
          },
          "prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptAgentAPIModelOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "The prompt for the agent"
          }
        },
        "type": "object",
        "title": "AgentConfigOverride",
        "example": {
          "first_message": "Hello, how can I help you today?",
          "language": "en",
          "prompt": {
            "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation."
          }
        }
      },
      "AgentConfigOverrideConfig": {
        "properties": {
          "first_message": {
            "type": "boolean",
            "title": "First Message",
            "description": "Whether to allow overriding the first_message field.",
            "default": false
          },
          "language": {
            "type": "boolean",
            "title": "Language",
            "description": "Whether to allow overriding the language field.",
            "default": false
          },
          "prompt": {
            "$ref": "#/components/schemas/PromptAgentAPIModelOverrideConfig",
            "description": "Configures overrides for nested fields."
          }
        },
        "type": "object",
        "title": "AgentConfigOverrideConfig"
      },
      "AgentMetadataResponseModel": {
        "properties": {
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs",
            "description": "The creation time of the agent in unix seconds"
          }
        },
        "type": "object",
        "required": [
          "created_at_unix_secs"
        ],
        "title": "AgentMetadataResponseModel"
      },
      "AgentPlatformSettingsRequestModel": {
        "properties": {
          "auth": {
            "$ref": "#/components/schemas/AuthSettings",
            "description": "Settings for authentication"
          },
          "evaluation": {
            "$ref": "#/components/schemas/EvaluationSettings",
            "description": "Settings for evaluation"
          },
          "widget": {
            "$ref": "#/components/schemas/WidgetConfig-Input",
            "description": "Configuration for the widget"
          },
          "data_collection": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "type": "object",
            "title": "Data Collection",
            "description": "Data collection settings"
          },
          "overrides": {
            "$ref": "#/components/schemas/ConversationInitiationClientDataConfig-Input",
            "description": "Additional overrides for the agent during conversation initiation"
          },
          "call_limits": {
            "$ref": "#/components/schemas/AgentCallLimits",
            "description": "Call limits for the agent"
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyConfig",
            "description": "Privacy settings for the agent"
          },
          "workspace_overrides": {
            "$ref": "#/components/schemas/AgentWorkspaceOverrides-Input",
            "description": "Workspace overrides for the agent"
          },
          "testing": {
            "$ref": "#/components/schemas/AgentTestingSettings",
            "description": "Testing configuration for the agent",
            "x-fern-ignore": "True"
          }
        },
        "type": "object",
        "title": "AgentPlatformSettingsRequestModel"
      },
      "AgentPlatformSettingsResponseModel": {
        "properties": {
          "auth": {
            "$ref": "#/components/schemas/AuthSettings",
            "description": "Settings for authentication"
          },
          "evaluation": {
            "$ref": "#/components/schemas/EvaluationSettings",
            "description": "Settings for evaluation"
          },
          "widget": {
            "$ref": "#/components/schemas/WidgetConfig-Output",
            "description": "Configuration for the widget"
          },
          "data_collection": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "type": "object",
            "title": "Data Collection",
            "description": "Data collection settings"
          },
          "overrides": {
            "$ref": "#/components/schemas/ConversationInitiationClientDataConfig-Output",
            "description": "Additional overrides for the agent during conversation initiation"
          },
          "call_limits": {
            "$ref": "#/components/schemas/AgentCallLimits",
            "description": "Call limits for the agent"
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyConfig",
            "description": "Privacy settings for the agent"
          },
          "workspace_overrides": {
            "$ref": "#/components/schemas/AgentWorkspaceOverrides-Output",
            "description": "Workspace overrides for the agent"
          },
          "testing": {
            "$ref": "#/components/schemas/AgentTestingSettings",
            "description": "Testing configuration for the agent",
            "x-fern-ignore": "True"
          },
          "safety": {
            "$ref": "#/components/schemas/SafetyResponseModel"
          }
        },
        "type": "object",
        "title": "AgentPlatformSettingsResponseModel"
      },
      "AgentSimulatedChatTestResponseModel": {
        "properties": {
          "simulated_conversation": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel-Output"
            },
            "type": "array",
            "title": "Simulated Conversation"
          },
          "analysis": {
            "$ref": "#/components/schemas/ConversationHistoryAnalysisCommonModel"
          }
        },
        "type": "object",
        "required": [
          "simulated_conversation",
          "analysis"
        ],
        "title": "AgentSimulatedChatTestResponseModel"
      },
      "AgentSummaryResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id",
            "description": "The ID of the agent"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the agent"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Agent tags used to categorize the agent"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs",
            "description": "The creation time of the agent in unix seconds"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo",
            "description": "The access information of the agent"
          },
          "last_call_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Call Time Unix Secs",
            "description": "The time of the most recent call in unix seconds, null if no calls have been made"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "name",
          "tags",
          "created_at_unix_secs",
          "access_info"
        ],
        "title": "AgentSummaryResponseModel",
        "example": {
          "access_info": {
            "creator_email": "john@example.com",
            "creator_name": "John Doe",
            "is_creator": true,
            "role": "admin"
          },
          "agent_id": "J3Pbu5gP6NNKBscdCdwB",
          "created_at_unix_secs": 1716153600,
          "last_call_time_unix_secs": 1716240000,
          "name": "My Agent",
          "tags": [
            "Customer Support",
            "Technical Help",
            "Eleven"
          ]
        }
      },
      "AgentTestingSettings": {
        "properties": {
          "test_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 20,
            "minItems": 0,
            "title": "Test Ids",
            "description": "List of test IDs that should be run for this agent"
          }
        },
        "type": "object",
        "title": "AgentTestingSettings",
        "description": "Settings for agent testing configuration.",
        "example": {
          "test_ids": [
            "test_123",
            "test_456"
          ]
        }
      },
      "AgentTransfer": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          },
          "delay_ms": {
            "type": "integer",
            "title": "Delay Ms",
            "default": 0
          },
          "transfer_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transfer Message"
          },
          "enable_transferred_agent_first_message": {
            "type": "boolean",
            "title": "Enable Transferred Agent First Message",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "condition"
        ],
        "title": "AgentTransfer"
      },
      "AgentWorkspaceOverrides-Input": {
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "The webhook to send conversation initiation client data to"
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          }
        },
        "type": "object",
        "title": "AgentWorkspaceOverrides"
      },
      "AgentWorkspaceOverrides-Output": {
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "The webhook to send conversation initiation client data to"
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          }
        },
        "type": "object",
        "title": "AgentWorkspaceOverrides"
      },
      "AllowlistItem": {
        "properties": {
          "hostname": {
            "type": "string",
            "title": "Hostname",
            "description": "The hostname of the allowed origin"
          }
        },
        "type": "object",
        "required": [
          "hostname"
        ],
        "title": "AllowlistItem"
      },
      "ArrayJsonSchemaProperty-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "array",
            "title": "Type",
            "default": "array"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
              },
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
              },
              {
                "$ref": "#/components/schemas/ArrayJsonSchemaProperty-Input"
              }
            ],
            "title": "Items"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ArrayJsonSchemaProperty"
      },
      "ArrayJsonSchemaProperty-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "array",
            "title": "Type",
            "default": "array"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
              },
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
              },
              {
                "$ref": "#/components/schemas/ArrayJsonSchemaProperty-Output"
              }
            ],
            "title": "Items"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ArrayJsonSchemaProperty"
      },
      "AudioNativeCreateProjectResponseModel": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the created Audio Native project."
          },
          "converting": {
            "type": "boolean",
            "title": "Converting",
            "description": "Whether the project is currently being converted."
          },
          "html_snippet": {
            "type": "string",
            "title": "Html Snippet",
            "description": "The HTML snippet to embed the Audio Native player."
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "converting",
          "html_snippet"
        ],
        "title": "AudioNativeCreateProjectResponseModel",
        "example": {
          "converting": false,
          "html_snippet": "\u003Cdiv id='audio-native-player'\u003E\u003C/div\u003E",
          "project_id": "JBFqnCBsd6RMkjVDRZzb"
        }
      },
      "AudioNativeEditContentResponseModel": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "converting": {
            "type": "boolean",
            "title": "Converting",
            "description": "Whether the project is currently being converted."
          },
          "publishing": {
            "type": "boolean",
            "title": "Publishing",
            "description": "Whether the project is currently being published."
          },
          "html_snippet": {
            "type": "string",
            "title": "Html Snippet",
            "description": "The HTML snippet to embed the Audio Native player."
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "converting",
          "publishing",
          "html_snippet"
        ],
        "title": "AudioNativeEditContentResponseModel",
        "example": {
          "converting": false,
          "html_snippet": "\u003Cdiv id='audio-native-player'\u003E\u003C/div\u003E",
          "project_id": "JBFqnCBsd6RMkjVDRZzb",
          "publishing": false
        }
      },
      "AudioNativeProjectSettingsResponseModel": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "description": "The title of the project."
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "The image of the project."
          },
          "author": {
            "type": "string",
            "title": "Author",
            "description": "The author of the project."
          },
          "small": {
            "type": "boolean",
            "title": "Small",
            "description": "Whether the project is small."
          },
          "text_color": {
            "type": "string",
            "title": "Text Color",
            "description": "The text color of the project."
          },
          "background_color": {
            "type": "string",
            "title": "Background Color",
            "description": "The background color of the project."
          },
          "sessionization": {
            "type": "integer",
            "title": "Sessionization",
            "description": "The sessionization of the project. Specifies for how many minutes to persist the session across page reloads."
          },
          "audio_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Path",
            "description": "The path of the audio file."
          },
          "audio_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Url",
            "description": "The URL of the audio file."
          },
          "status": {
            "type": "string",
            "enum": [
              "processing",
              "ready"
            ],
            "title": "Status",
            "description": "Current state of the project",
            "default": "ready"
          }
        },
        "type": "object",
        "required": [
          "title",
          "image",
          "author",
          "small",
          "text_color",
          "background_color",
          "sessionization"
        ],
        "title": "AudioNativeProjectSettingsResponseModel",
        "example": {
          "audio_path": "audio/my_project.mp3",
          "audio_url": "https://example.com/audio/my_project.mp3",
          "author": "John Doe",
          "background_color": "#FFFFFF",
          "image": "https://example.com/image.jpg",
          "sessionization": 1,
          "small": false,
          "status": "ready",
          "text_color": "#000000",
          "title": "My Project"
        }
      },
      "AudioWithTimestampsResponseModel": {
        "properties": {
          "audio_base64": {
            "type": "string",
            "title": "Audio Base64",
            "description": "Base64 encoded audio data"
          },
          "alignment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp information for each character in the original text"
          },
          "normalized_alignment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp information for each character in the normalized text"
          }
        },
        "type": "object",
        "required": [
          "audio_base64"
        ],
        "title": "AudioWithTimestampsResponseModel",
        "example": {
          "alignment": {
            "character_end_times_seconds": [
              0.1,
              0.2,
              0.3,
              0.4,
              0.5
            ],
            "character_start_times_seconds": [
              0,
              0.1,
              0.2,
              0.3,
              0.4
            ],
            "characters": [
              "H",
              "e",
              "l",
              "l",
              "o"
            ]
          },
          "audio_base64": "base64_encoded_audio_string",
          "normalized_alignment": {
            "character_end_times_seconds": [
              0.1,
              0.2,
              0.3,
              0.4,
              0.5
            ],
            "character_start_times_seconds": [
              0,
              0.1,
              0.2,
              0.3,
              0.4
            ],
            "characters": [
              "H",
              "e",
              "l",
              "l",
              "o"
            ]
          }
        }
      },
      "AuthConnectionLocator": {
        "properties": {
          "auth_connection_id": {
            "type": "string",
            "title": "Auth Connection Id"
          }
        },
        "type": "object",
        "required": [
          "auth_connection_id"
        ],
        "title": "AuthConnectionLocator",
        "description": "Used to reference an auth connection from the workspace's auth connection store."
      },
      "AuthSettings": {
        "properties": {
          "enable_auth": {
            "type": "boolean",
            "title": "Enable Auth",
            "description": "If set to true, starting a conversation with an agent will require a signed token",
            "default": false
          },
          "allowlist": {
            "items": {
              "$ref": "#/components/schemas/AllowlistItem"
            },
            "type": "array",
            "title": "Allowlist",
            "description": "A list of hosts that are allowed to start conversations with the agent"
          },
          "shareable_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shareable Token",
            "description": "A shareable token that can be used to start a conversation with the agent"
          }
        },
        "type": "object",
        "title": "AuthSettings",
        "example": {
          "allowlist": [
            {
              "hostname": "https://example.com"
            }
          ],
          "enable_auth": true,
          "shareable_token": "1234567890"
        }
      },
      "AuthorizationMethod": {
        "type": "string",
        "enum": [
          "invalid",
          "public",
          "authorization_header",
          "signed_url",
          "shareable_link",
          "livekit_token",
          "livekit_token_website",
          "genesys_api_key"
        ],
        "title": "AuthorizationMethod"
      },
      "BanReasonType": {
        "type": "string",
        "enum": [
          "safety",
          "manual"
        ],
        "title": "BanReasonType"
      },
      "BatchCallDetailedResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "phone_provider": {
            "$ref": "#/components/schemas/TelephonyProvider",
            "default": "twilio"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "scheduled_time_unix": {
            "type": "integer",
            "title": "Scheduled Time Unix"
          },
          "total_calls_dispatched": {
            "type": "integer",
            "title": "Total Calls Dispatched"
          },
          "total_calls_scheduled": {
            "type": "integer",
            "title": "Total Calls Scheduled"
          },
          "last_updated_at_unix": {
            "type": "integer",
            "title": "Last Updated At Unix"
          },
          "status": {
            "$ref": "#/components/schemas/BatchCallStatus"
          },
          "agent_name": {
            "type": "string",
            "title": "Agent Name"
          },
          "recipients": {
            "items": {
              "$ref": "#/components/schemas/OutboundCallRecipientResponseModel"
            },
            "type": "array",
            "title": "Recipients"
          }
        },
        "type": "object",
        "required": [
          "id",
          "phone_number_id",
          "name",
          "agent_id",
          "created_at_unix",
          "scheduled_time_unix",
          "total_calls_dispatched",
          "total_calls_scheduled",
          "last_updated_at_unix",
          "status",
          "agent_name",
          "recipients"
        ],
        "title": "BatchCallDetailedResponse",
        "description": "Detailed response model for a batch call including all recipients."
      },
      "BatchCallRecipientStatus": {
        "type": "string",
        "enum": [
          "pending",
          "initiated",
          "in_progress",
          "completed",
          "failed",
          "cancelled",
          "voicemail"
        ],
        "title": "BatchCallRecipientStatus"
      },
      "BatchCallResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "phone_provider": {
            "$ref": "#/components/schemas/TelephonyProvider",
            "default": "twilio"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "scheduled_time_unix": {
            "type": "integer",
            "title": "Scheduled Time Unix"
          },
          "total_calls_dispatched": {
            "type": "integer",
            "title": "Total Calls Dispatched"
          },
          "total_calls_scheduled": {
            "type": "integer",
            "title": "Total Calls Scheduled"
          },
          "last_updated_at_unix": {
            "type": "integer",
            "title": "Last Updated At Unix"
          },
          "status": {
            "$ref": "#/components/schemas/BatchCallStatus"
          },
          "agent_name": {
            "type": "string",
            "title": "Agent Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "phone_number_id",
          "name",
          "agent_id",
          "created_at_unix",
          "scheduled_time_unix",
          "total_calls_dispatched",
          "total_calls_scheduled",
          "last_updated_at_unix",
          "status",
          "agent_name"
        ],
        "title": "BatchCallResponse"
      },
      "BatchCallStatus": {
        "type": "string",
        "enum": [
          "pending",
          "in_progress",
          "completed",
          "failed",
          "cancelled"
        ],
        "title": "BatchCallStatus"
      },
      "Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post": {
        "properties": {
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The Target language."
          }
        },
        "type": "object",
        "required": [
          "language"
        ],
        "title": "Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post"
      },
      "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the pronunciation dictionary, used for identification only.",
            "examples": [
              "My Dictionary"
            ]
          },
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File",
            "description": "A lexicon .pls file which we will use to initialize the project with."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A description of the pronunciation dictionary, used for identification only.",
            "examples": [
              "Contains pronunciation's of our character names"
            ]
          },
          "workspace_access": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Access",
            "description": "Should be one of 'admin', 'editor' or 'viewer'. If not provided, defaults to no access.",
            "examples": [
              "viewer"
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post"
      },
      "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post": {
        "properties": {
          "rules": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryAliasRuleRequestModel"
                },
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryPhonemeRuleRequestModel"
                }
              ]
            },
            "type": "array",
            "title": "Rules",
            "description": "List of pronunciation rules. Rule can be either:\n    an alias rule: {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b', }\n    or a phoneme rule: {'string_to_replace': 'a', 'type': 'phoneme', 'phoneme': 'b', 'alphabet': 'ipa' }",
            "examples": [
              "\n    [\n        {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b' },\n        {'string_to_replace': 'c', 'type': 'phoneme', 'phoneme': 'd', 'alphabet': 'ipa' }\n    ]"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the pronunciation dictionary, used for identification only.",
            "examples": [
              "My Dictionary"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A description of the pronunciation dictionary, used for identification only.",
            "examples": [
              "Contains pronunciation's of our character names"
            ]
          },
          "workspace_access": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Access",
            "description": "Should be one of 'admin', 'editor' or 'viewer'. If not provided, defaults to no access.",
            "examples": [
              "viewer"
            ]
          }
        },
        "type": "object",
        "required": [
          "rules",
          "name"
        ],
        "title": "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post"
      },
      "Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the target workspace member."
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post"
      },
      "Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post": {
        "properties": {
          "rules": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryAliasRuleRequestModel"
                },
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryPhonemeRuleRequestModel"
                }
              ]
            },
            "type": "array",
            "title": "Rules",
            "description": "List of pronunciation rules. Rule can be either:\n    an alias rule: {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b', }\n    or a phoneme rule: {'string_to_replace': 'a', 'type': 'phoneme', 'phoneme': 'b', 'alphabet': 'ipa' }",
            "examples": [
              "\n    [\n        {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b' },\n        {'string_to_replace': 'c', 'type': 'phoneme', 'phoneme': 'd', 'alphabet': 'ipa' }\n    ]"
            ]
          }
        },
        "type": "object",
        "required": [
          "rules"
        ],
        "title": "Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post"
      },
      "Body_Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "Audio files used to create the voice."
          },
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "default": false,
            "examples": [
              true
            ]
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post"
      },
      "Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post": {
        "properties": {
          "new_name": {
            "type": "string",
            "title": "New Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "examples": [
              "John Smith"
            ]
          }
        },
        "type": "object",
        "required": [
          "new_name"
        ],
        "title": "Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post"
      },
      "Body_Add_to_knowledge_base_v1_convai_knowledge_base_post": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A custom, human-readable name for the document."
          },
          "url": {
            "type": "string",
            "title": "Url",
            "description": "URL to a page of documentation that the agent will have access to in order to interact with users."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Documentation that the agent will have access to in order to interact with users."
          }
        },
        "type": "object",
        "title": "Body_Add_to_knowledge_base_v1_convai_knowledge_base_post"
      },
      "Body_Add_voice_v1_voices_add_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "examples": [
              "John Smith"
            ]
          },
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "A list of file paths to audio recordings intended for voice cloning."
          },
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "default": false,
            "examples": [
              true
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A description of the voice.",
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ]
          },
          "labels": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Serialized labels dictionary for the voice."
          }
        },
        "type": "object",
        "required": [
          "name",
          "files"
        ],
        "title": "Body_Add_voice_v1_voices_add_post"
      },
      "Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file from which vocals/speech will be isolated from."
          },
          "file_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pcm_s16le_16",
                  "other"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "File Format",
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "examples": [
              "pcm_s16le_16",
              "other"
            ]
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post"
      },
      "Body_Audio_Isolation_v1_audio_isolation_post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file from which vocals/speech will be isolated from."
          },
          "file_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pcm_s16le_16",
                  "other"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "File Format",
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "examples": [
              "pcm_s16le_16",
              "other"
            ]
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "Body_Audio_Isolation_v1_audio_isolation_post"
      },
      "Body_Compose_Music_with_a_detailed_response_v1_music_detailed_post": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "A simple text prompt to generate a song from. Cannot be used in conjunction with `composition_plan`."
          },
          "music_prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A music prompt. Deprecated. Use `composition_plan` instead.",
            "deprecated": true,
            "x-fern-ignore": true
          },
          "composition_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A detailed composition plan to guide music generation. Cannot be used in conjunction with `prompt`."
          },
          "music_length_ms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300000,
                "minimum": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Length Ms",
            "description": "The length of the song to generate in milliseconds. Used only in conjunction with `prompt`. Must be between 10000ms and 300000ms. Optional - if not provided, the model will choose a length based on the prompt."
          },
          "model_id": {
            "type": "string",
            "enum": [
              "music_v1"
            ],
            "title": "Model Id",
            "description": "The model to use for the generation.",
            "default": "music_v1"
          }
        },
        "type": "object",
        "title": "Body_Compose_Music_with_a_detailed_response_v1_music_detailed_post"
      },
      "Body_Compose_music_v1_music_post": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "A simple text prompt to generate a song from. Cannot be used in conjunction with `composition_plan`."
          },
          "music_prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A music prompt. Deprecated. Use `composition_plan` instead.",
            "deprecated": true,
            "x-fern-ignore": true
          },
          "composition_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A detailed composition plan to guide music generation. Cannot be used in conjunction with `prompt`."
          },
          "music_length_ms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300000,
                "minimum": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Length Ms",
            "description": "The length of the song to generate in milliseconds. Used only in conjunction with `prompt`. Must be between 10000ms and 300000ms. Optional - if not provided, the model will choose a length based on the prompt."
          },
          "model_id": {
            "type": "string",
            "enum": [
              "music_v1"
            ],
            "title": "Model Id",
            "description": "The model to use for the generation.",
            "default": "music_v1"
          }
        },
        "type": "object",
        "title": "Body_Compose_music_v1_music_post"
      },
      "Body_Create_Agent_v1_convai_agents_create_post": {
        "properties": {
          "conversation_config": {
            "$ref": "#/components/schemas/ConversationalConfigAPIModel-Input",
            "description": "Conversation configuration for an agent"
          },
          "platform_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentPlatformSettingsRequestModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Platform settings for the agent are all settings that aren't related to the conversation orchestration and content."
          },
          "workflow": {
            "title": "Workflow",
            "description": "Workflow for the agent. This is used to define the flow of the conversation and how the agent interacts with tools.",
            "x-fern-ignore": true
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A name to make the agent easier to find",
            "examples": [
              "My agent"
            ],
            "optional": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags to help classify and filter the agent",
            "examples": [
              [
                "Customer Support",
                "Technical Help",
                "Eleven"
              ]
            ],
            "optional": true
          }
        },
        "type": "object",
        "required": [
          "conversation_config"
        ],
        "title": "Body_Create_Agent_v1_convai_agents_create_post"
      },
      "Body_Create_PVC_voice_v1_voices_pvc_post": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "examples": [
              "John Smith"
            ]
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "Language used in the samples.",
            "examples": [
              "en"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description to use for the created voice.",
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ]
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Serialized labels dictionary for the voice."
          }
        },
        "type": "object",
        "required": [
          "name",
          "language"
        ],
        "title": "Body_Create_PVC_voice_v1_voices_pvc_post"
      },
      "Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post": {
        "properties": {
          "pronunciation_dictionary_locators": {
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
            "examples": [
              [
                "{\"pronunciation_dictionary_id\": \"test\", \"version_id\": \"id2\"}"
              ]
            ]
          },
          "invalidate_affected_text": {
            "type": "boolean",
            "title": "Invalidate Affected Text",
            "description": "This will automatically mark text in this project for reconversion when the new dictionary applies or the old one no longer does.",
            "default": true,
            "examples": [
              false
            ]
          }
        },
        "type": "object",
        "required": [
          "pronunciation_dictionary_locators"
        ],
        "title": "Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post"
      },
      "Body_Create_Studio_project_v1_studio_projects_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the Studio project, used for identification only.",
            "examples": [
              "Project 1"
            ]
          },
          "default_title_voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Title Voice Id",
            "description": "The voice_id that corresponds to the default voice used for new titles.",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ]
          },
          "default_paragraph_voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Paragraph Voice Id",
            "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ]
          },
          "default_model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Model Id",
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "examples": [
              "eleven_multilingual_v2"
            ]
          },
          "from_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Url",
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ]
          },
          "from_document": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Document",
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank."
          },
          "from_content_json": {
            "type": "string",
            "title": "From Content Json",
            "description": "\n    An optional content to initialize the Studio project with. If this is set, 'from_url' and 'from_document' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.\n    \n    Example:\n    [{\"name\": \"Chapter A\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"A\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"B\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h1\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"C\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"D\", \"type\": \"tts_node\"}]}]}, {\"name\": \"Chapter B\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"E\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"F\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h2\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"G\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"H\", \"type\": \"tts_node\"}]}]}]\n    ",
            "examples": [
              "[{\"name\": \"Chapter A\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"A\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"B\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h1\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"C\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"D\", \"type\": \"tts_node\"}]}]}, {\"name\": \"Chapter B\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"E\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"F\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h2\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"G\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"H\", \"type\": \"tts_node\"}]}]}]"
            ]
          },
          "quality_preset": {
            "type": "string",
            "title": "Quality of the generated audio.",
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "default": "standard",
            "examples": [
              "standard"
            ]
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "Romeo and Juliet"
            ]
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author",
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "William Shakespeare"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "An optional description of the Studio project.",
            "examples": [
              "A tragic love story between two young lovers."
            ]
          },
          "genres": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Genres",
            "description": "An optional list of genres associated with the Studio project.",
            "examples": [
              [
                "Romance",
                "Drama"
              ]
            ]
          },
          "target_audience": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "children",
                  "young adult",
                  "adult",
                  "all ages"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience",
            "description": "An optional target audience of the Studio project.",
            "examples": [
              "adult"
            ]
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
            "examples": [
              "en"
            ]
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "An optional content type of the Studio project.",
            "examples": [
              "Book"
            ]
          },
          "original_publication_date": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^\\d{4}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Publication Date",
            "description": "An optional original publication date of the Studio project, in the format YYYY-MM-DD or YYYY.",
            "examples": [
              "1597-01-01"
            ]
          },
          "mature_content": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mature Content",
            "description": "An optional specification of whether this Studio project contains mature content.",
            "default": false,
            "examples": [
              false
            ]
          },
          "isbn_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn Number",
            "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "0-306-40615-2"
            ]
          },
          "acx_volume_normalization": {
            "type": "boolean",
            "title": "Acx Volume Normalization",
            "description": "[Deprecated] When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "default": false,
            "examples": [
              false
            ]
          },
          "volume_normalization": {
            "type": "boolean",
            "title": "Volume Normalization",
            "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "default": false,
            "examples": [
              false
            ]
          },
          "pronunciation_dictionary_locators": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
            "examples": [
              [
                "{\"pronunciation_dictionary_id\": \"test\", \"version_id\": \"id2\"}"
              ]
            ]
          },
          "callback_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Callback Url",
            "description": "\n    A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion\n    Messages:\n    1. When project was converted successfully:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"success\",\n        project_snapshot_id: \"22m00Tcm4TlvDq8ikMAT\",\n        error_details: None,\n      }\n    }\n    2. When project conversion failed:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"error\",\n        project_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n\n    3. When chapter was converted successfully:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"success\",\n        chapter_snapshot_id: \"23m00Tcm4TlvDq8ikMAV\",\n        error_details: None,\n      }\n    }\n    4. When chapter conversion failed:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"error\",\n        chapter_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n    ",
            "examples": [
              [
                "https://www.test.com/my-api/projects-status"
              ]
            ]
          },
          "fiction": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "fiction",
                  "non-fiction"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiction",
            "description": "An optional specification of whether the content of this Studio project is fiction.",
            "examples": [
              "fiction"
            ]
          },
          "apply_text_normalization": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "auto",
                  "on",
                  "off",
                  "apply_english"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Apply Text Normalization",
            "description": "\n    This parameter controls text normalization with four modes: 'auto', 'on', 'apply_english' and 'off'.\n    When set to 'auto', the system will automatically decide whether to apply text normalization\n    (e.g., spelling out numbers). With 'on', text normalization will always be applied, while\n    with 'off', it will be skipped. 'apply_english' is the same as 'on' but will assume that text is in English.\n    "
          },
          "auto_convert": {
            "type": "boolean",
            "title": "Auto Convert",
            "description": "Whether to auto convert the Studio project to audio or not.",
            "default": false
          },
          "auto_assign_voices": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Assign Voices",
            "description": "[Alpha Feature] Whether automatically assign voices to phrases in the create Project.",
            "default": false
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "blank",
                  "book",
                  "article",
                  "genfm",
                  "video"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "The type of Studio project to create.",
            "examples": [
              "book"
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Create_Studio_project_v1_studio_projects_post"
      },
      "Body_Create_URL_document_v1_convai_knowledge_base_url_post": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "URL to a page of documentation that the agent will have access to in order to interact with users."
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A custom, human-readable name for the document."
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "Body_Create_URL_document_v1_convai_knowledge_base_url_post"
      },
      "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_post": {
        "properties": {
          "voice_name": {
            "type": "string",
            "title": "Voice Name",
            "description": "Name to use for the created voice.",
            "examples": [
              "Sassy squeaky mouse"
            ]
          },
          "voice_description": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 20,
            "title": "Voice Description",
            "description": "Description to use for the created voice.",
            "examples": [
              "A sassy squeaky mouse"
            ]
          },
          "generated_voice_id": {
            "type": "string",
            "title": "Generated Voice Id",
            "description": "The generated_voice_id to create, call POST /v1/text-to-voice/create-previews and fetch the generated_voice_id from the response header if don't have one yet.",
            "examples": [
              "37HceQefKmEi3bGovXjL"
            ]
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Optional, metadata to add to the created voice. Defaults to None.",
            "examples": [
              {
                "language": "en"
              }
            ],
            "name": "Voice metadata"
          },
          "played_not_selected_voice_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Played Not Selected Voice Ids",
            "description": "List of voice ids that the user has played but not selected. Used for RLHF."
          }
        },
        "type": "object",
        "required": [
          "voice_name",
          "voice_description",
          "generated_voice_id"
        ],
        "title": "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_post"
      },
      "Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post": {
        "properties": {
          "voice_name": {
            "type": "string",
            "title": "Voice Name",
            "description": "Name to use for the created voice.",
            "examples": [
              "Sassy squeaky mouse"
            ]
          },
          "voice_description": {
            "type": "string",
            "title": "Voice Description",
            "description": "Description to use for the created voice.",
            "examples": [
              "A sassy squeaky mouse"
            ]
          },
          "generated_voice_id": {
            "type": "string",
            "title": "Generated Voice Id",
            "description": "The generated_voice_id to create, call POST /v1/text-to-voice/create-previews and fetch the generated_voice_id from the response header if don't have one yet.",
            "examples": [
              "37HceQefKmEi3bGovXjL"
            ]
          },
          "played_not_selected_voice_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Played Not Selected Voice Ids",
            "description": "List of voice ids that the user has played but not selected. Used for RLHF."
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Optional, metadata to add to the created voice. Defaults to None.",
            "examples": [
              {
                "language": "en"
              }
            ],
            "name": "Voice metadata"
          }
        },
        "type": "object",
        "required": [
          "voice_name",
          "voice_description",
          "generated_voice_id"
        ],
        "title": "Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post"
      },
      "Body_Create_chapter_v1_studio_projects__project_id__chapters_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the chapter, used for identification only.",
            "examples": [
              "Chapter 1"
            ]
          },
          "from_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Url",
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Create_chapter_v1_studio_projects__project_id__chapters_post"
      },
      "Body_Create_file_document_v1_convai_knowledge_base_file_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Documentation that the agent will have access to in order to interact with users."
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A custom, human-readable name for the document."
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_Create_file_document_v1_convai_knowledge_base_file_post"
      },
      "Body_Create_forced_alignment_v1_forced_alignment_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "The file to align. All major audio formats are supported. The file size must be less than 1GB."
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text to align with the audio. The input text can be in any format, however diarization is not supported at this time."
          },
          "enabled_spooled_file": {
            "type": "boolean",
            "title": "Enabled Spooled File",
            "description": "If true, the file will be streamed to the server and processed in chunks. This is useful for large files that cannot be loaded into memory. The default is false.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "file",
          "text"
        ],
        "title": "Body_Create_forced_alignment_v1_forced_alignment_post"
      },
      "Body_Create_podcast_v1_studio_podcasts_post": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "examples": [
              "eleven_multilingual_v2"
            ]
          },
          "mode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PodcastConversationMode"
              },
              {
                "$ref": "#/components/schemas/PodcastBulletinMode"
              }
            ],
            "title": "Mode",
            "description": "The type of podcast to generate. Can be 'conversation', an interaction between two voices, or 'bulletin', a monologue.",
            "examples": [
              {
                "conversation": {
                  "guest_voice_id": "bYTqZQo3Jz7LQtmGTgwi",
                  "host_voice_id": "6lCwbsX1yVjD49QmpkTR"
                },
                "type": "conversation"
              }
            ]
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PodcastTextSource"
              },
              {
                "$ref": "#/components/schemas/PodcastURLSource"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PodcastTextSource"
                    },
                    {
                      "$ref": "#/components/schemas/PodcastURLSource"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Source",
            "description": "The source content for the Podcast.",
            "examples": [
              {
                "type": "url",
                "url": "https://en.wikipedia.org/wiki/Cognitive_science"
              }
            ]
          },
          "quality_preset": {
            "type": "string",
            "enum": [
              "standard",
              "high",
              "highest",
              "ultra",
              "ultra_lossless"
            ],
            "title": "Quality of the generated audio.",
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "default": "standard",
            "examples": [
              "standard"
            ]
          },
          "duration_scale": {
            "type": "string",
            "enum": [
              "short",
              "default",
              "long"
            ],
            "title": "The duration of the generated podcast. This varies depending on the format, voice and language.",
            "description": "Duration of the generated podcast. Must be one of:\nshort - produces podcasts shorter than 3 minutes.\ndefault - produces podcasts roughly between 3-7 minutes.\nlong - produces podcasts longer than 7 minutes.\n",
            "default": "default",
            "examples": [
              "short"
            ]
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
            "examples": [
              "en"
            ]
          },
          "intro": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1500
              },
              {
                "type": "null"
              }
            ],
            "title": "Intro",
            "description": "The intro text that will always be added to the beginning of the podcast.",
            "examples": [
              "Welcome to the podcast."
            ]
          },
          "outro": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1500
              },
              {
                "type": "null"
              }
            ],
            "title": "Outro",
            "description": "The outro text that will always be added to the end of the podcast.",
            "examples": [
              "Thank you for listening!"
            ]
          },
          "instructions_prompt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3000
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions Prompt",
            "description": "Additional instructions prompt for the podcast generation used to adjust the podcast's style and tone.",
            "examples": [
              "Ensure the podcast remains factual, accurate and appropriate for all audiences."
            ]
          },
          "highlights": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 70,
                  "minLength": 10
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Highlights",
            "description": "A brief summary or highlights of the Studio project's content, providing key points or themes. This should be between 10 and 70 characters.",
            "examples": [
              [
                "Emphasize the importance of AI on education"
              ]
            ]
          },
          "callback_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Callback Url",
            "description": "\n    A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion\n    Messages:\n    1. When project was converted successfully:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"success\",\n        project_snapshot_id: \"22m00Tcm4TlvDq8ikMAT\",\n        error_details: None,\n      }\n    }\n    2. When project conversion failed:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"error\",\n        project_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n\n    3. When chapter was converted successfully:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"success\",\n        chapter_snapshot_id: \"23m00Tcm4TlvDq8ikMAV\",\n        error_details: None,\n      }\n    }\n    4. When chapter conversion failed:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"error\",\n        chapter_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n    ",
            "examples": [
              [
                "https://www.test.com/my-api/projects-status"
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "mode",
          "source"
        ],
        "title": "Body_Create_podcast_v1_studio_podcasts_post"
      },
      "Body_Create_text_document_v1_convai_knowledge_base_text_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Text content to be added to the knowledge base."
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A custom, human-readable name for the document."
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Create_text_document_v1_convai_knowledge_base_text_post"
      },
      "Body_Creates_Audio_Native_enabled_project__v1_audio_native_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Project name."
          },
          "image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image",
            "description": "(Deprecated) Image URL used in the player. If not provided, default image set in the Player settings is used.",
            "deprecated": true
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author",
            "description": "Author used in the player and inserted at the start of the uploaded article. If not provided, the default author set in the Player settings is used."
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title used in the player and inserted at the top of the uploaded article. If not provided, the default title set in the Player settings is used."
          },
          "small": {
            "type": "boolean",
            "title": "Small",
            "description": "(Deprecated) Whether to use small player or not. If not provided, default value set in the Player settings is used.",
            "default": false,
            "deprecated": true
          },
          "text_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Color",
            "description": "Text color used in the player. If not provided, default text color set in the Player settings is used."
          },
          "background_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Color",
            "description": "Background color used in the player. If not provided, default background color set in the Player settings is used."
          },
          "sessionization": {
            "type": "integer",
            "title": "Sessionization",
            "description": "(Deprecated) Specifies for how many minutes to persist the session across page reloads. If not provided, default sessionization set in the Player settings is used.",
            "default": 0,
            "deprecated": true
          },
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id",
            "description": "Voice ID used to voice the content. If not provided, default voice ID set in the Player settings is used."
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "TTS Model ID used in the player. If not provided, default model ID set in the Player settings is used."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Either txt or HTML input file containing the article content. HTML should be formatted as follows '&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;Your content&lt;/p&gt;&lt;h3&gt;More of your content&lt;/h3&gt;&lt;p&gt;Some more of your content&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'"
          },
          "auto_convert": {
            "type": "boolean",
            "title": "Auto Convert",
            "description": "Whether to auto convert the project to audio or not.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Creates_Audio_Native_enabled_project__v1_audio_native_post"
      },
      "Body_Delete_existing_invitation_v1_workspace_invites_delete": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the customer",
            "examples": [
              "john.doe@testmail.com"
            ]
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Delete_existing_invitation_v1_workspace_invites_delete"
      },
      "Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the target workspace member."
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post"
      },
      "Body_Delete_member_v1_workspace_members_delete": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "Email of the target user."
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Delete_member_v1_workspace_members_delete"
      },
      "Body_Download_history_items_v1_history_download_post": {
        "properties": {
          "history_item_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "History Item Ids",
            "description": "A list of history items to download, you can get IDs of history items and other metadata using the GET https://api.elevenlabs.io/v1/history endpoint."
          },
          "output_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Format",
            "description": "Output format to transcode the audio file, can be wav or default."
          }
        },
        "type": "object",
        "required": [
          "history_item_ids"
        ],
        "title": "Body_Download_history_items_v1_history_download_post"
      },
      "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post": {
        "properties": {
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File",
            "description": "A list of file paths to audio recordings intended for voice cloning"
          },
          "csv_file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Csv File",
            "description": "CSV file containing transcription/translation metadata"
          },
          "foreground_audio_file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Foreground Audio File",
            "description": "For use only with csv input"
          },
          "background_audio_file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Audio File",
            "description": "For use only with csv input"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the dubbing project."
          },
          "source_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Url",
            "description": "URL of the source video/audio file."
          },
          "source_lang": {
            "type": "string",
            "title": "Source Lang",
            "description": "Source language.",
            "default": "auto"
          },
          "target_lang": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Lang",
            "description": "The Target language to dub the content into."
          },
          "target_accent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Accent",
            "description": "[Experimental] An accent to apply when selecting voices from the library and to use to inform translation of the dialect to prefer."
          },
          "num_speakers": {
            "type": "integer",
            "title": "Num Speakers",
            "description": "Number of speakers to use for the dubbing. Set to 0 to automatically detect the number of speakers",
            "default": 0
          },
          "watermark": {
            "type": "boolean",
            "title": "Watermark",
            "description": "Whether to apply watermark to the output video.",
            "default": false
          },
          "start_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time",
            "description": "Start time of the source video/audio file."
          },
          "end_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time",
            "description": "End time of the source video/audio file."
          },
          "highest_resolution": {
            "type": "boolean",
            "title": "Highest Resolution",
            "description": "Whether to use the highest resolution available.",
            "default": false
          },
          "drop_background_audio": {
            "type": "boolean",
            "title": "Drop Background Audio",
            "description": "An advanced setting. Whether to drop background audio from the final dub. This can improve dub quality where it's known that audio shouldn't have a background track such as for speeches or monologues.",
            "default": false
          },
          "use_profanity_filter": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Profanity Filter",
            "description": "[BETA] Whether transcripts should have profanities censored with the words '[censored]'"
          },
          "dubbing_studio": {
            "type": "boolean",
            "title": "Dubbing Studio",
            "description": "Whether to prepare dub for edits in dubbing studio or edits as a dubbing resource.",
            "default": false
          },
          "disable_voice_cloning": {
            "type": "boolean",
            "title": "Disable Voice Cloning",
            "description": "[BETA] Instead of using a voice clone in dubbing, use a similar voice from the ElevenLabs Voice Library.",
            "default": false
          },
          "mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mode",
            "description": "automatic or manual. Manual mode is only supported when creating a dubbing studio project",
            "default": "automatic"
          },
          "csv_fps": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Csv Fps",
            "description": "Frames per second to use when parsing a CSV file for dubbing. If not provided, FPS will be inferred from timecodes."
          }
        },
        "type": "object",
        "title": "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post"
      },
      "Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post": {
        "properties": {
          "segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Segments",
            "description": "Dub only this list of segments."
          },
          "languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Languages",
            "description": "Dub only these languages for each segment."
          }
        },
        "type": "object",
        "required": [
          "segments",
          "languages"
        ],
        "title": "Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post"
      },
      "Body_Duplicate_Agent_v1_convai_agents__agent_id__duplicate_post": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A name to make the agent easier to find",
            "examples": [
              "My agent"
            ],
            "optional": true
          }
        },
        "type": "object",
        "title": "Body_Duplicate_Agent_v1_convai_agents__agent_id__duplicate_post"
      },
      "Body_Edit_PVC_voice_v1_voices_pvc__voice_id__post": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "examples": [
              "John Smith"
            ]
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "Language used in the samples.",
            "examples": [
              "en"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description to use for the created voice.",
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ]
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Serialized labels dictionary for the voice."
          }
        },
        "type": "object",
        "title": "Body_Edit_PVC_voice_v1_voices_pvc__voice_id__post"
      },
      "Body_Edit_voice_v1_voices__voice_id__edit_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "examples": [
              "John Smith"
            ]
          },
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "Audio files to add to the voice"
          },
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "default": false,
            "examples": [
              true
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A description of the voice.",
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ]
          },
          "labels": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Serialized labels dictionary for the voice."
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Edit_voice_v1_voices__voice_id__edit_post"
      },
      "Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post": {
        "properties": {
          "gender": {
            "type": "string",
            "enum": [
              "female",
              "male"
            ],
            "title": "Gender",
            "description": "Category code corresponding to the gender of the generated voice. Possible values: female, male.",
            "examples": [
              "female"
            ]
          },
          "accent": {
            "type": "string",
            "title": "Accent",
            "description": "Category code corresponding to the accent of the generated voice. Possible values: british, american, african, australian, indian.",
            "examples": [
              "british"
            ]
          },
          "age": {
            "type": "string",
            "enum": [
              "young",
              "middle_aged",
              "old"
            ],
            "title": "Age",
            "description": "Category code corresponding to the age of the generated voice. Possible values: young, middle_aged, old.",
            "examples": [
              "young"
            ]
          },
          "accent_strength": {
            "type": "number",
            "title": "Accent Strength",
            "description": "The strength of the accent of the generated voice. Has to be between 0.3 and 2.0."
          },
          "text": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 100,
            "title": "Text",
            "description": "Text to generate, text length has to be between 100 and 1000.",
            "examples": [
              "Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
            ]
          }
        },
        "type": "object",
        "required": [
          "gender",
          "accent",
          "age",
          "accent_strength",
          "text"
        ],
        "title": "Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post"
      },
      "Body_Generate_composition_plan_v1_music_plan_post": {
        "properties": {
          "prompt": {
            "type": "string",
            "maxLength": 2000,
            "title": "Prompt",
            "description": "A simple text prompt to compose a plan from."
          },
          "music_length_ms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300000,
                "minimum": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Length Ms",
            "description": "The length of the composition plan to generate in milliseconds. Must be between 10000ms and 300000ms. Optional - if not provided, the model will choose a length based on the prompt."
          },
          "source_composition_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "An optional composition plan to use as a source for the new composition plan."
          },
          "model_id": {
            "type": "string",
            "enum": [
              "music_v1"
            ],
            "title": "Model Id",
            "description": "The model to use for the generation.",
            "default": "music_v1"
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "Body_Generate_composition_plan_v1_music_plan_post"
      },
      "Body_Get_similar_library_voices_v1_similar_voices_post": {
        "properties": {
          "audio_file": {
            "type": "string",
            "format": "binary",
            "title": "Audio File"
          },
          "similarity_threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Threshold",
            "description": "Threshold for voice similarity between provided sample and library voices. Values range from 0 to 2. The smaller the value the more similar voices will be returned.",
            "examples": [
              0.5
            ]
          },
          "top_k": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top K",
            "description": "Number of most similar voices to return. If similarity_threshold is provided, less than this number of voices may be returned. Values range from 1 to 100.",
            "examples": [
              10
            ]
          }
        },
        "type": "object",
        "title": "Body_Get_similar_library_voices_v1_similar_voices_post"
      },
      "Body_Handle_an_outbound_call_via_SIP_trunk_v1_convai_sip_trunk_outbound_call_post": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_phone_number_id": {
            "type": "string",
            "title": "Agent Phone Number Id"
          },
          "to_number": {
            "type": "string",
            "title": "To Number"
          },
          "conversation_initiation_client_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataRequest-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "agent_phone_number_id",
          "to_number"
        ],
        "title": "Body_Handle_an_outbound_call_via_SIP_trunk_v1_convai_sip_trunk_outbound_call_post"
      },
      "Body_Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_phone_number_id": {
            "type": "string",
            "title": "Agent Phone Number Id"
          },
          "to_number": {
            "type": "string",
            "title": "To Number"
          },
          "conversation_initiation_client_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataRequest-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "agent_phone_number_id",
          "to_number"
        ],
        "title": "Body_Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post"
      },
      "Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post": {
        "properties": {
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Emails",
            "description": "The email of the customer",
            "examples": [
              "john.doe@testmail.com"
            ]
          },
          "group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Ids",
            "description": "The group ids of the user",
            "examples": [
              [
                "group_id_1",
                "group_id_2"
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "emails"
        ],
        "title": "Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post"
      },
      "Body_Invite_user_v1_workspace_invites_add_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the customer",
            "examples": [
              "john.doe@testmail.com"
            ]
          },
          "group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Ids",
            "description": "The group ids of the user",
            "examples": [
              [
                "group_id_1",
                "group_id_2"
              ]
            ]
          },
          "workspace_permission": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "external",
                  "admin",
                  "workspace_admin",
                  "workspace_member",
                  "support_l1",
                  "support_l2",
                  "moderator",
                  "sales",
                  "voice_mixer",
                  "voice_admin",
                  "convai_admin",
                  "enterprise_viewer",
                  "quality_check_admin",
                  "workspace_migration_admin",
                  "human_reviewer",
                  "productions_admin",
                  "support",
                  "internal"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Permission",
            "description": "The workspace permission of the user",
            "examples": [
              "workspace_member"
            ]
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Invite_user_v1_workspace_invites_add_post"
      },
      "Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch": {
        "properties": {
          "conversation_config": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Config",
            "description": "Conversation configuration for an agent"
          },
          "platform_settings": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Platform Settings",
            "description": "Platform settings for the agent are all settings that aren't related to the conversation orchestration and content."
          },
          "workflow": {
            "title": "Workflow",
            "description": "Workflow for the agent. This is used to define the flow of the conversation and how the agent interacts with tools.",
            "x-fern-ignore": true
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A name to make the agent easier to find",
            "examples": [
              "My agent"
            ],
            "optional": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags to help classify and filter the agent",
            "examples": [
              [
                "Customer Support",
                "Technical Help",
                "Eleven"
              ]
            ],
            "optional": true
          }
        },
        "type": "object",
        "title": "Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch"
      },
      "Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post": {
        "properties": {
          "avatar_file": {
            "type": "string",
            "format": "binary",
            "title": "Avatar File",
            "description": "An image file to be used as the agent's avatar."
          }
        },
        "type": "object",
        "required": [
          "avatar_file"
        ],
        "title": "Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post"
      },
      "Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post": {
        "properties": {
          "rule_strings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Rule Strings",
            "description": "List of strings to remove from the pronunciation dictionary.",
            "examples": [
              "['a', 'b']"
            ]
          }
        },
        "type": "object",
        "required": [
          "rule_strings"
        ],
        "title": "Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post"
      },
      "Body_Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post": {
        "properties": {
          "render_type": {
            "$ref": "#/components/schemas/RenderType",
            "description": "The type of the render. One of ['mp4', 'aac', 'mp3', 'wav', 'aaf', 'tracks_zip', 'clips_zip']"
          }
        },
        "type": "object",
        "required": [
          "render_type"
        ],
        "title": "Body_Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post"
      },
      "Body_Request_manual_verification_v1_voices_pvc__voice_id__verification_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "Verification documents"
          },
          "extra_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Text",
            "description": "Extra text to be used in the manual verification process."
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_Request_manual_verification_v1_voices_pvc__voice_id__verification_post"
      },
      "Body_Run_PVC_training_v1_voices_pvc__voice_id__train_post": {
        "properties": {
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The model ID to use for the conversion.",
            "examples": [
              "eleven_turbo_v2"
            ]
          }
        },
        "type": "object",
        "title": "Body_Run_PVC_training_v1_voices_pvc__voice_id__train_post"
      },
      "Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post": {
        "properties": {
          "feedback": {
            "$ref": "#/components/schemas/UserFeedbackScore",
            "description": "Either 'like' or 'dislike' to indicate the feedback for the conversation.",
            "examples": [
              "like"
            ]
          }
        },
        "type": "object",
        "required": [
          "feedback"
        ],
        "title": "Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post"
      },
      "Body_Share_workspace_resource_v1_workspace_resources__resource_id__share_post": {
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Role",
            "description": "Role to update the target principal with."
          },
          "resource_type": {
            "$ref": "#/components/schemas/WorkspaceResourceType",
            "description": "Resource type of the target resource."
          },
          "user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email",
            "description": "The email of the user or service account."
          },
          "group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id",
            "description": "The ID of the target group. To target the permissions principals have by default on this resource, use the value 'default'."
          },
          "workspace_api_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Api Key Id",
            "description": "The ID of the target workspace API key. This isn't the same as the key itself that would you pass in the header for authentication. Workspace admins can find this in the workspace settings UI."
          }
        },
        "type": "object",
        "required": [
          "role",
          "resource_type"
        ],
        "title": "Body_Share_workspace_resource_v1_workspace_resources__resource_id__share_post"
      },
      "Body_Simulates_a_conversation__Stream__v1_convai_agents__agent_id__simulate_conversation_stream_post": {
        "properties": {
          "simulation_specification": {
            "$ref": "#/components/schemas/ConversationSimulationSpecification",
            "description": "A specification detailing how the conversation should be simulated"
          },
          "extra_evaluation_criteria": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PromptEvaluationCriteria"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Evaluation Criteria",
            "description": "A list of evaluation criteria to test"
          },
          "new_turns_limit": {
            "type": "integer",
            "title": "New Turns Limit",
            "description": "Maximum number of new turns to generate in the conversation simulation",
            "default": 10000
          }
        },
        "type": "object",
        "required": [
          "simulation_specification"
        ],
        "title": "Body_Simulates_a_conversation__Stream__v1_convai_agents__agent_id__simulate_conversation_stream_post"
      },
      "Body_Simulates_a_conversation_v1_convai_agents__agent_id__simulate_conversation_post": {
        "properties": {
          "simulation_specification": {
            "$ref": "#/components/schemas/ConversationSimulationSpecification",
            "description": "A specification detailing how the conversation should be simulated"
          },
          "extra_evaluation_criteria": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PromptEvaluationCriteria"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Evaluation Criteria",
            "description": "A list of evaluation criteria to test"
          },
          "new_turns_limit": {
            "type": "integer",
            "title": "New Turns Limit",
            "description": "Maximum number of new turns to generate in the conversation simulation",
            "default": 10000
          }
        },
        "type": "object",
        "required": [
          "simulation_specification"
        ],
        "title": "Body_Simulates_a_conversation_v1_convai_agents__agent_id__simulate_conversation_post"
      },
      "Body_Sound_Generation_v1_sound_generation_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into a sound effect.",
            "examples": [
              "A large, ancient wooden door slowly opening in an eerie, abandoned castle.."
            ]
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "The duration of the sound which will be generated in seconds. Must be at least 0.5 and at most 22. If set to None we will guess the optimal duration using the prompt. Defaults to None."
          },
          "prompt_influence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Influence",
            "description": "A higher prompt influence makes your generation follow the prompt more closely while also making generations less variable. Must be a value between 0 and 1. Defaults to 0.3.",
            "default": 0.3
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Sound_Generation_v1_sound_generation_post"
      },
      "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file which holds the content and emotion that will control the generated speech."
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
            "default": "eleven_english_sts_v2"
          },
          "voice_settings": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Settings",
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string."
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [
              12345
            ]
          },
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set, will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
            "default": false,
            "examples": [
              true
            ]
          },
          "file_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pcm_s16le_16",
                  "other"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "File Format",
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "examples": [
              "pcm_s16le_16",
              "other"
            ]
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post"
      },
      "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file which holds the content and emotion that will control the generated speech."
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
            "default": "eleven_english_sts_v2"
          },
          "voice_settings": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Settings",
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string."
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [
              12345
            ]
          },
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set, will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
            "default": false,
            "examples": [
              true
            ]
          },
          "file_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pcm_s16le_16",
                  "other"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "File Format",
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "examples": [
              "pcm_s16le_16",
              "other"
            ]
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post"
      },
      "Body_Speech_to_Text_v1_speech_to_text_post": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The ID of the model to use for transcription, currently only 'scribe_v1' and 'scribe_v1_experimental' are available."
          },
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File",
            "description": "The file to transcribe. All major audio and video formats are supported. Exactly one of the file or cloud_storage_url parameters must be provided. The file size must be less than 3.0GB."
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "An ISO-639-1 or ISO-639-3 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. Defaults to null, in this case the language is predicted automatically."
          },
          "tag_audio_events": {
            "type": "boolean",
            "title": "Tag Audio Events",
            "description": "Whether to tag audio events like (laughter), (footsteps), etc. in the transcription.",
            "default": true
          },
          "num_speakers": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 32,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Speakers",
            "description": "The maximum amount of speakers talking in the uploaded file. Can help with predicting who speaks when. The maximum amount of speakers that can be predicted is 32. Defaults to null, in this case the amount of speakers is set to the maximum value the model supports."
          },
          "timestamps_granularity": {
            "type": "string",
            "enum": [
              "none",
              "word",
              "character"
            ],
            "title": "Timestamps Granularity",
            "description": "The granularity of the timestamps in the transcription. 'word' provides word-level timestamps and 'character' provides character-level timestamps per word.",
            "default": "word"
          },
          "diarize": {
            "type": "boolean",
            "title": "Diarize",
            "description": "Whether to annotate which speaker is currently talking in the uploaded file.",
            "default": false
          },
          "diarization_threshold": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 0.4,
                "minimum": 0.1
              },
              {
                "type": "null"
              }
            ],
            "title": "Diarization Threshold",
            "description": "Diarization threshold to apply during speaker diarization. A higher value means there will be a lower chance of one speaker being diarized as two different speakers but also a higher chance of two different speakers being diarized as one speaker (less total speakers predicted). A low value means there will be a higher chance of one speaker being diarized as two different speakers but also a lower chance of two different speakers being diarized as one speaker (more total speakers predicted). Can only be set when diarize=True and num_speakers=None. Defaults to None, in which case we will choose a threshold based on the model_id (0.22 usually)."
          },
          "additional_formats": {
            "$ref": "#/components/schemas/AdditionalFormats",
            "description": "A list of additional formats to export the transcript to.",
            "examples": [
              [
                {
                  "format": "srt",
                  "include_speakers": true,
                  "include_timestamps": true
                },
                {
                  "format": "txt",
                  "include_speakers": false
                }
              ]
            ]
          },
          "file_format": {
            "type": "string",
            "enum": [
              "pcm_s16le_16",
              "other"
            ],
            "title": "File Format",
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "examples": [
              "pcm_s16le_16",
              "other"
            ]
          },
          "cloud_storage_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cloud Storage Url",
            "description": "The valid AWS S3, Cloudflare R2 or Google Cloud Storage URL of the file to transcribe. Exactly one of the file or cloud_storage_url parameters must be provided. The file must be a valid publicly accessible cloud storage URL. The file size must be less than 2GB. URL can be pre-signed.",
            "examples": [
              "https://storage.googleapis.com/my-bucket/folder/audio.mp3",
              "https://my-bucket.s3.us-west-2.amazonaws.com/folder/audio.mp3",
              "https://account123.r2.cloudflarestorage.com/my-bucket/audio.mp3"
            ]
          },
          "webhook": {
            "type": "boolean",
            "title": "Webhook",
            "description": "Whether to send the transcription result to configured speech-to-text webhooks.  If set the request will return early without the transcription, which will be delivered later via webhook.",
            "default": false
          },
          "webhook_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Id",
            "description": "Optional specific webhook ID to send the transcription result to. Only valid when webhook is set to true. If not provided, transcription will be sent to all configured speech-to-text webhooks."
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 2,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature",
            "description": "Controls the randomness of the transcription output. Accepts values between 0.0 and 2.0, where higher values result in more diverse and less deterministic results. If omitted, we will use a temperature based on the model you selected which is usually 0."
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be an integer between 0 and 2147483647.",
            "examples": [
              12345
            ]
          },
          "use_multi_channel": {
            "type": "boolean",
            "title": "Use Multi Channel",
            "description": "Whether the audio file contains multiple channels where each channel contains a single speaker. When enabled, each channel will be transcribed independently and the results will be combined. Each word in the response will include a 'channel_index' field indicating which channel it was spoken on. A maximum of 5 channels is supported.",
            "default": false
          },
          "webhook_metadata": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Metadata",
            "description": "Optional metadata to be included in the webhook response. This should be a JSON string representing an object with a maximum depth of 2 levels and maximum size of 16KB. Useful for tracking internal IDs, job references, or other contextual information.",
            "examples": [
              "{\"user_id\": \"123\", \"session_id\": \"abc-def-ghi\"}",
              "{\"request_type\": \"interview\", \"participant_name\": \"John Doe\"}"
            ]
          }
        },
        "type": "object",
        "required": [
          "model_id"
        ],
        "title": "Body_Speech_to_Text_v1_speech_to_text_post"
      },
      "Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post": {
        "properties": {
          "convert_to_mpeg": {
            "type": "boolean",
            "title": "Convert To Mpeg",
            "description": "Whether to convert the audio to mpeg format.",
            "default": false
          }
        },
        "type": "object",
        "title": "Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post"
      },
      "Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post": {
        "properties": {
          "convert_to_mpeg": {
            "type": "boolean",
            "title": "Convert To Mpeg",
            "description": "Whether to convert the audio to mpeg format.",
            "default": false
          }
        },
        "type": "object",
        "title": "Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
      },
      "Body_Stream_composed_music_v1_music_stream_post": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "A simple text prompt to generate a song from. Cannot be used in conjunction with `composition_plan`."
          },
          "music_prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A music prompt. Deprecated. Use `composition_plan` instead.",
            "deprecated": true,
            "x-fern-ignore": true
          },
          "composition_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A detailed composition plan to guide music generation. Cannot be used in conjunction with `prompt`."
          },
          "music_length_ms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300000,
                "minimum": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Length Ms",
            "description": "The length of the song to generate in milliseconds. Used only in conjunction with `prompt`. Must be between 10000ms and 300000ms. Optional - if not provided, the model will choose a length based on the prompt."
          },
          "model_id": {
            "type": "string",
            "enum": [
              "music_v1"
            ],
            "title": "Model Id",
            "description": "The model to use for the generation.",
            "default": "music_v1"
          }
        },
        "type": "object",
        "title": "Body_Stream_composed_music_v1_music_stream_post"
      },
      "Body_Submit_a_batch_call_request__v1_convai_batch_calling_submit_post": {
        "properties": {
          "call_name": {
            "type": "string",
            "title": "Call Name"
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_phone_number_id": {
            "type": "string",
            "title": "Agent Phone Number Id"
          },
          "scheduled_time_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled Time Unix"
          },
          "recipients": {
            "items": {
              "$ref": "#/components/schemas/OutboundCallRecipient"
            },
            "type": "array",
            "maxItems": 10000,
            "title": "Recipients"
          }
        },
        "type": "object",
        "required": [
          "call_name",
          "agent_id",
          "agent_phone_number_id",
          "scheduled_time_unix",
          "recipients"
        ],
        "title": "Body_Submit_a_batch_call_request__v1_convai_batch_calling_submit_post"
      },
      "Body_Text_to_dialogue__multi_voice__streaming_v1_text_to_dialogue_stream_post": {
        "properties": {
          "inputs": {
            "items": {
              "$ref": "#/components/schemas/DialogueInput"
            },
            "type": "array",
            "title": "Inputs",
            "description": "A list of dialogue inputs, each containing text and a voice ID which will be converted into speech.",
            "examples": [
              [
                {
                  "text": "Hello, how are you?",
                  "voice_id": "bYTqZQo3Jz7LQtmGTgwi"
                },
                {
                  "text": "I'm doing well, thank you!",
                  "voice_id": "6lCwbsX1yVjD49QmpkTR"
                }
              ]
            ]
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_v3"
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ModelSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Settings controlling the dialogue generation.",
            "examples": [
              {
                "stability": 0.5,
                "use_speaker_boost": true
              }
            ]
          },
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorRequestModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [
              12345
            ]
          }
        },
        "type": "object",
        "required": [
          "inputs"
        ],
        "title": "Body_Text_to_dialogue__multi_voice__streaming_v1_text_to_dialogue_stream_post"
      },
      "Body_Text_to_dialogue__multi_voice__v1_text_to_dialogue_post": {
        "properties": {
          "inputs": {
            "items": {
              "$ref": "#/components/schemas/DialogueInput"
            },
            "type": "array",
            "title": "Inputs",
            "description": "A list of dialogue inputs, each containing text and a voice ID which will be converted into speech.",
            "examples": [
              [
                {
                  "text": "Hello, how are you?",
                  "voice_id": "bYTqZQo3Jz7LQtmGTgwi"
                },
                {
                  "text": "I'm doing well, thank you!",
                  "voice_id": "6lCwbsX1yVjD49QmpkTR"
                }
              ]
            ]
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_v3"
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ModelSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Settings controlling the dialogue generation.",
            "examples": [
              {
                "stability": 0.5,
                "use_speaker_boost": true
              }
            ]
          },
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorRequestModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [
              12345
            ]
          }
        },
        "type": "object",
        "required": [
          "inputs"
        ],
        "title": "Body_Text_to_dialogue__multi_voice__v1_text_to_dialogue_post"
      },
      "Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into speech.",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ]
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_multilingual_v2"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided."
          },
          "voice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request."
          },
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorRequestModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [
              12345
            ]
          },
          "previous_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Text",
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ]
          },
          "next_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Text",
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ]
          },
          "previous_request_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Request Ids",
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ]
          },
          "next_request_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Request Ids",
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ]
          },
          "use_pvc_as_ivc": {
            "type": "boolean",
            "title": "Use Pvc As Ivc",
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "default": false,
            "deprecated": true,
            "examples": [
              true
            ]
          },
          "apply_text_normalization": {
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "title": "Apply Text Normalization",
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. For 'eleven_turbo_v2_5' and 'eleven_flash_v2_5' models, text normalization can only be enabled with Enterprise plans.",
            "default": "auto",
            "examples": [
              true
            ]
          },
          "apply_language_text_normalization": {
            "type": "boolean",
            "title": "Apply Language Text Normalization",
            "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
            "default": false,
            "examples": [
              true
            ]
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post"
      },
      "Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into speech.",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ]
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_multilingual_v2"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided."
          },
          "voice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request."
          },
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorRequestModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [
              12345
            ]
          },
          "previous_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Text",
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ]
          },
          "next_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Text",
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ]
          },
          "previous_request_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Request Ids",
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ]
          },
          "next_request_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Request Ids",
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ]
          },
          "use_pvc_as_ivc": {
            "type": "boolean",
            "title": "Use Pvc As Ivc",
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "default": false,
            "deprecated": true,
            "examples": [
              true
            ]
          },
          "apply_text_normalization": {
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "title": "Apply Text Normalization",
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. For 'eleven_turbo_v2_5' and 'eleven_flash_v2_5' models, text normalization can only be enabled with Enterprise plans.",
            "default": "auto",
            "examples": [
              true
            ]
          },
          "apply_language_text_normalization": {
            "type": "boolean",
            "title": "Apply Language Text Normalization",
            "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
            "default": false,
            "examples": [
              true
            ]
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post"
      },
      "Body_Text_to_speech_v1_text_to_speech__voice_id__post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into speech.",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ]
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_multilingual_v2"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided."
          },
          "voice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request."
          },
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorRequestModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [
              12345
            ]
          },
          "previous_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Text",
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ]
          },
          "next_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Text",
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ]
          },
          "previous_request_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Request Ids",
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ]
          },
          "next_request_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Request Ids",
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ]
          },
          "use_pvc_as_ivc": {
            "type": "boolean",
            "title": "Use Pvc As Ivc",
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "default": false,
            "deprecated": true,
            "examples": [
              true
            ]
          },
          "apply_text_normalization": {
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "title": "Apply Text Normalization",
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. For 'eleven_turbo_v2_5' and 'eleven_flash_v2_5' models, text normalization can only be enabled with Enterprise plans.",
            "default": "auto",
            "examples": [
              true
            ]
          },
          "apply_language_text_normalization": {
            "type": "boolean",
            "title": "Apply Language Text Normalization",
            "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
            "default": false,
            "examples": [
              true
            ]
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_v1_text_to_speech__voice_id__post"
      },
      "Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into speech.",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ]
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_multilingual_v2"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided."
          },
          "voice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request."
          },
          "pronunciation_dictionary_locators": {
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorRequestModel"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [
              12345
            ]
          },
          "previous_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Text",
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ]
          },
          "next_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Text",
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ]
          },
          "previous_request_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Previous Request Ids",
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ]
          },
          "next_request_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Next Request Ids",
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ]
          },
          "use_pvc_as_ivc": {
            "type": "boolean",
            "title": "Use Pvc As Ivc",
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "default": false,
            "deprecated": true,
            "examples": [
              true
            ]
          },
          "apply_text_normalization": {
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "title": "Apply Text Normalization",
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. For 'eleven_turbo_v2_5' and 'eleven_flash_v2_5' models, text normalization can only be enabled with Enterprise plans.",
            "default": "auto",
            "examples": [
              true
            ]
          },
          "apply_language_text_normalization": {
            "type": "boolean",
            "title": "Apply Language Text Normalization",
            "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
            "default": false,
            "examples": [
              true
            ]
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post"
      },
      "Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post": {
        "properties": {
          "segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Segments",
            "description": "Transcribe this specific list of segments."
          }
        },
        "type": "object",
        "required": [
          "segments"
        ],
        "title": "Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post"
      },
      "Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post": {
        "properties": {
          "segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Segments",
            "description": "Translate only this list of segments."
          },
          "languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Languages",
            "description": "Translate only these languages for each segment."
          }
        },
        "type": "object",
        "required": [
          "segments",
          "languages"
        ],
        "title": "Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post"
      },
      "Body_Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post": {
        "properties": {
          "resource_type": {
            "$ref": "#/components/schemas/WorkspaceResourceType",
            "description": "Resource type of the target resource."
          },
          "user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email",
            "description": "The email of the user or service account."
          },
          "group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id",
            "description": "The ID of the target group. To target the permissions principals have by default on this resource, use the value 'default'."
          },
          "workspace_api_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Api Key Id",
            "description": "The ID of the target workspace API key. This isn't the same as the key itself that would you pass in the header for authentication. Workspace admins can find this in the workspace settings UI."
          }
        },
        "type": "object",
        "required": [
          "resource_type"
        ],
        "title": "Body_Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post"
      },
      "Body_Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post": {
        "properties": {
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "default": false,
            "examples": [
              true
            ]
          },
          "selected_speaker_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selected Speaker Ids",
            "description": "Speaker IDs to be used for PVC training. Make sure you send all the speaker IDs you want to use for PVC training in one request because the last request will override the previous ones.",
            "examples": [
              "speaker_0"
            ]
          },
          "trim_start_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim Start Time",
            "description": "The start time of the audio to be used for PVC training. Time should be in milliseconds",
            "examples": [
              0
            ]
          },
          "trim_end_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim End Time",
            "description": "The end time of the audio to be used for PVC training. Time should be in milliseconds",
            "examples": [
              10
            ]
          }
        },
        "type": "object",
        "title": "Body_Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post"
      },
      "Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post": {
        "properties": {
          "from_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Url",
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ]
          },
          "from_document": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Document",
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank."
          },
          "from_content_json": {
            "type": "string",
            "title": "From Content Json",
            "description": "\n    An optional content to initialize the Studio project with. If this is set, 'from_url' and 'from_document' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.\n    \n    Example:\n    [{\"name\": \"Chapter A\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"A\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"B\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h1\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"C\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"D\", \"type\": \"tts_node\"}]}]}, {\"name\": \"Chapter B\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"E\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"F\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h2\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"G\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"H\", \"type\": \"tts_node\"}]}]}]\n    ",
            "examples": [
              "[{\"name\": \"Chapter A\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"A\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"B\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h1\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"C\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"D\", \"type\": \"tts_node\"}]}]}, {\"name\": \"Chapter B\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"E\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"F\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h2\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"G\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"H\", \"type\": \"tts_node\"}]}]}]"
            ]
          },
          "auto_convert": {
            "type": "boolean",
            "title": "Auto Convert",
            "description": "Whether to auto convert the Studio project to audio or not.",
            "default": false
          }
        },
        "type": "object",
        "title": "Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post"
      },
      "Body_Update_Studio_project_v1_studio_projects__project_id__post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the Studio project, used for identification only.",
            "examples": [
              "Project 1"
            ]
          },
          "default_title_voice_id": {
            "type": "string",
            "title": "Default Title Voice Id",
            "description": "The voice_id that corresponds to the default voice used for new titles.",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ]
          },
          "default_paragraph_voice_id": {
            "type": "string",
            "title": "Default Paragraph Voice Id",
            "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ]
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "Romeo and Juliet"
            ]
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author",
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "William Shakespeare"
            ]
          },
          "isbn_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn Number",
            "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "0-306-40615-2"
            ]
          },
          "volume_normalization": {
            "type": "boolean",
            "title": "Volume Normalization",
            "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "default": false,
            "examples": [
              false
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "default_title_voice_id",
          "default_paragraph_voice_id"
        ],
        "title": "Body_Update_Studio_project_v1_studio_projects__project_id__post"
      },
      "Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Either txt or HTML input file containing the article content. HTML should be formatted as follows '&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;Your content&lt;/p&gt;&lt;h5&gt;More of your content&lt;/h5&gt;&lt;p&gt;Some more of your content&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'"
          },
          "auto_convert": {
            "type": "boolean",
            "title": "Auto Convert",
            "description": "Whether to auto convert the project to audio or not.",
            "default": false
          },
          "auto_publish": {
            "type": "boolean",
            "title": "Auto Publish",
            "description": "Whether to auto publish the new project snapshot after it's converted.",
            "default": false
          }
        },
        "type": "object",
        "title": "Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post"
      },
      "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the chapter, used for identification only.",
            "examples": [
              "Chapter 1"
            ]
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChapterContentInputModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The chapter content to use."
          }
        },
        "type": "object",
        "title": "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post"
      },
      "Body_Update_document_v1_convai_knowledge_base__documentation_id__patch": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name",
            "description": "A custom, human-readable name for the document."
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Update_document_v1_convai_knowledge_base__documentation_id__patch"
      },
      "Body_Update_member_v1_workspace_members_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "Email of the target user."
          },
          "is_locked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Locked",
            "description": "Whether to lock or unlock the user account."
          },
          "workspace_role": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "workspace_admin",
                  "workspace_member"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Role",
            "description": "Role dictating permissions in the workspace."
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Update_member_v1_workspace_members_post"
      },
      "Body_Update_metadata_for_a_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__patch": {
        "properties": {
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id",
            "description": "Either the identifier of a voice from the ElevenLabs voice library, or one of ['track-clone', 'clip-clone']."
          },
          "languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Languages",
            "description": "Languages to apply these changes to. If empty, will apply to all languages."
          }
        },
        "type": "object",
        "title": "Body_Update_metadata_for_a_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__patch"
      },
      "Body_Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post": {
        "properties": {
          "recording": {
            "type": "string",
            "format": "binary",
            "title": "Recording",
            "description": "Audio recording of the user"
          }
        },
        "type": "object",
        "required": [
          "recording"
        ],
        "title": "Body_Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post"
      },
      "Body_create_service_account_api_key_v1_service_accounts__service_account_user_id__api_keys_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "text_to_speech",
                    "speech_to_speech",
                    "speech_to_text",
                    "models_read",
                    "models_write",
                    "voices_read",
                    "voices_write",
                    "speech_history_read",
                    "speech_history_write",
                    "sound_generation",
                    "audio_isolation",
                    "voice_generation",
                    "dubbing_read",
                    "dubbing_write",
                    "pronunciation_dictionaries_read",
                    "pronunciation_dictionaries_write",
                    "user_read",
                    "user_write",
                    "projects_read",
                    "projects_write",
                    "audio_native_read",
                    "audio_native_write",
                    "workspace_read",
                    "workspace_write",
                    "forced_alignment"
                  ]
                },
                "type": "array"
              },
              {
                "type": "string",
                "const": "all"
              }
            ],
            "title": "Permissions",
            "description": "The permissions of the XI API."
          },
          "character_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Limit",
            "description": "The character limit of the XI API key. If provided this will limit the usage of this api key to n characters per month where n is the chosen value. Requests that incur charges will fail after reaching this monthly limit."
          }
        },
        "type": "object",
        "required": [
          "name",
          "permissions"
        ],
        "title": "Body_create_service_account_api_key_v1_service_accounts__service_account_user_id__api_keys_post"
      },
      "Body_edit_service_account_api_key_v1_service_accounts__service_account_user_id__api_keys__api_key_id__patch": {
        "properties": {
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "description": "Whether to enable or disable the API key."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the XI API key to use (used for identification purposes only).",
            "examples": [
              "Sneaky Fox"
            ]
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "text_to_speech",
                    "speech_to_speech",
                    "speech_to_text",
                    "models_read",
                    "models_write",
                    "voices_read",
                    "voices_write",
                    "speech_history_read",
                    "speech_history_write",
                    "sound_generation",
                    "audio_isolation",
                    "voice_generation",
                    "dubbing_read",
                    "dubbing_write",
                    "pronunciation_dictionaries_read",
                    "pronunciation_dictionaries_write",
                    "user_read",
                    "user_write",
                    "projects_read",
                    "projects_write",
                    "audio_native_read",
                    "audio_native_write",
                    "workspace_read",
                    "workspace_write",
                    "forced_alignment"
                  ]
                },
                "type": "array"
              },
              {
                "type": "string",
                "const": "all"
              }
            ],
            "title": "Permissions",
            "description": "The permissions of the XI API."
          },
          "character_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Limit",
            "description": "The character limit of the XI API key. If provided this will limit the usage of this api key to n characters per month where n is the chosen value. Requests that incur charges will fail after reaching this monthly limit."
          }
        },
        "type": "object",
        "required": [
          "is_enabled",
          "name",
          "permissions"
        ],
        "title": "Body_edit_service_account_api_key_v1_service_accounts__service_account_user_id__api_keys__api_key_id__patch"
      },
      "BreakdownTypes": {
        "type": "string",
        "enum": [
          "none",
          "voice",
          "voice_multiplier",
          "user",
          "groups",
          "api_keys",
          "all_api_keys",
          "product_type",
          "model",
          "resource",
          "request_queue",
          "region",
          "subresource_id",
          "reporting_workspace_id",
          "has_api_key"
        ],
        "title": "BreakdownTypes",
        "description": "How to break down the information. Cannot be \"user\" or \"api_key\" if include_workspace_metrics is False."
      },
      "BuiltInTools-Input": {
        "properties": {
          "end_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The end call tool"
          },
          "language_detection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The language detection tool"
          },
          "transfer_to_agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The transfer to agent tool"
          },
          "transfer_to_number": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The transfer to number tool"
          },
          "skip_turn": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The skip turn tool"
          },
          "play_keypad_touch_tone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The play DTMF tool"
          },
          "voicemail_detection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The voicemail detection tool"
          }
        },
        "type": "object",
        "title": "BuiltInTools"
      },
      "BuiltInTools-Output": {
        "properties": {
          "end_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The end call tool"
          },
          "language_detection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The language detection tool"
          },
          "transfer_to_agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The transfer to agent tool"
          },
          "transfer_to_number": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The transfer to number tool"
          },
          "skip_turn": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The skip turn tool"
          },
          "play_keypad_touch_tone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The play DTMF tool"
          },
          "voicemail_detection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The voicemail detection tool"
          }
        },
        "type": "object",
        "title": "BuiltInTools"
      },
      "CaptionStyleCharacterAnimationModel": {
        "properties": {
          "enter_type": {
            "type": "string",
            "enum": [
              "none",
              "fade"
            ],
            "title": "Enter Type"
          },
          "exit_type": {
            "type": "string",
            "enum": [
              "none",
              "fade"
            ],
            "title": "Exit Type"
          }
        },
        "type": "object",
        "required": [
          "enter_type",
          "exit_type"
        ],
        "title": "CaptionStyleCharacterAnimationModel"
      },
      "CaptionStyleHorizontalPlacementModel": {
        "properties": {
          "align": {
            "type": "string",
            "enum": [
              "left",
              "center",
              "right"
            ],
            "title": "Align"
          },
          "translate_pct": {
            "type": "number",
            "title": "Translate Pct"
          }
        },
        "type": "object",
        "required": [
          "align",
          "translate_pct"
        ],
        "title": "CaptionStyleHorizontalPlacementModel"
      },
      "CaptionStyleModel": {
        "properties": {
          "template": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleTemplateModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "text_font": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Font"
          },
          "text_scale": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Scale"
          },
          "text_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Color"
          },
          "text_align": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "start",
                  "center",
                  "end"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Align"
          },
          "text_style": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "normal",
                  "italic"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Style"
          },
          "text_weight": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "normal",
                  "bold"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Weight"
          },
          "background_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Enabled"
          },
          "background_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Color"
          },
          "background_opacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Opacity"
          },
          "word_highlights_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Word Highlights Enabled"
          },
          "word_highlights_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Word Highlights Color"
          },
          "word_highlights_background_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Word Highlights Background Color"
          },
          "word_highlights_opacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Word Highlights Opacity"
          },
          "section_animation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleSectionAnimationModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "word_animation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleWordAnimationModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "character_animation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleCharacterAnimationModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "width_pct": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Width Pct"
          },
          "horizontal_placement": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleHorizontalPlacementModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "vertical_placement": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleVerticalPlacementModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "auto_break_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Break Enabled"
          },
          "max_lines_per_section": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Lines Per Section"
          },
          "max_words_per_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Words Per Line"
          }
        },
        "type": "object",
        "title": "CaptionStyleModel"
      },
      "CaptionStyleSectionAnimationModel": {
        "properties": {
          "enter_type": {
            "type": "string",
            "enum": [
              "none",
              "fade",
              "scale"
            ],
            "title": "Enter Type"
          },
          "exit_type": {
            "type": "string",
            "enum": [
              "none",
              "fade",
              "scale"
            ],
            "title": "Exit Type"
          }
        },
        "type": "object",
        "required": [
          "enter_type",
          "exit_type"
        ],
        "title": "CaptionStyleSectionAnimationModel"
      },
      "CaptionStyleTemplateModel": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "label": {
            "type": "string",
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "key",
          "label"
        ],
        "title": "CaptionStyleTemplateModel"
      },
      "CaptionStyleVerticalPlacementModel": {
        "properties": {
          "align": {
            "type": "string",
            "enum": [
              "top",
              "center",
              "bottom"
            ],
            "title": "Align"
          },
          "translate_pct": {
            "type": "number",
            "title": "Translate Pct"
          }
        },
        "type": "object",
        "required": [
          "align",
          "translate_pct"
        ],
        "title": "CaptionStyleVerticalPlacementModel"
      },
      "CaptionStyleWordAnimationModel": {
        "properties": {
          "enter_type": {
            "type": "string",
            "enum": [
              "none",
              "fade",
              "scale"
            ],
            "title": "Enter Type"
          },
          "exit_type": {
            "type": "string",
            "enum": [
              "none",
              "fade",
              "scale"
            ],
            "title": "Exit Type"
          }
        },
        "type": "object",
        "required": [
          "enter_type",
          "exit_type"
        ],
        "title": "CaptionStyleWordAnimationModel"
      },
      "ChapterContentBlockExtendableNodeResponseModel": {
        "properties": {
          "type": {
            "type": "string",
            "const": "_other",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ChapterContentBlockExtendableNodeResponseModel",
        "description": "Not used. Make sure you anticipate new types in the future."
      },
      "ChapterContentBlockInputModel": {
        "properties": {
          "sub_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "p",
                  "h1",
                  "h2",
                  "h3"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub Type"
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/ChapterContentParagraphTtsNodeInputModel"
            },
            "type": "array",
            "title": "Nodes"
          },
          "block_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Id"
          }
        },
        "type": "object",
        "required": [
          "nodes"
        ],
        "title": "ChapterContentBlockInputModel"
      },
      "ChapterContentBlockResponseModel": {
        "properties": {
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "nodes": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ChapterContentBlockTtsNodeResponseModel"
                },
                {
                  "$ref": "#/components/schemas/ChapterContentBlockExtendableNodeResponseModel"
                }
              ]
            },
            "type": "array",
            "title": "Nodes"
          }
        },
        "type": "object",
        "required": [
          "block_id",
          "nodes"
        ],
        "title": "ChapterContentBlockResponseModel"
      },
      "ChapterContentBlockTtsNodeResponseModel": {
        "properties": {
          "type": {
            "type": "string",
            "const": "tts_node",
            "title": "Type"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "type",
          "voice_id",
          "text"
        ],
        "title": "ChapterContentBlockTtsNodeResponseModel"
      },
      "ChapterContentInputModel": {
        "properties": {
          "blocks": {
            "items": {
              "$ref": "#/components/schemas/ChapterContentBlockInputModel"
            },
            "type": "array",
            "title": "Blocks"
          }
        },
        "type": "object",
        "required": [
          "blocks"
        ],
        "title": "ChapterContentInputModel"
      },
      "ChapterContentParagraphTtsNodeInputModel": {
        "properties": {
          "type": {
            "type": "string",
            "const": "tts_node",
            "title": "Type"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "text",
          "voice_id"
        ],
        "title": "ChapterContentParagraphTtsNodeInputModel"
      },
      "ChapterContentResponseModel": {
        "properties": {
          "blocks": {
            "items": {
              "$ref": "#/components/schemas/ChapterContentBlockResponseModel"
            },
            "type": "array",
            "title": "Blocks"
          }
        },
        "type": "object",
        "required": [
          "blocks"
        ],
        "title": "ChapterContentResponseModel"
      },
      "ChapterResponseModel": {
        "properties": {
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id",
            "description": "The ID of the chapter."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the chapter."
          },
          "last_conversion_date_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix",
            "description": "The last conversion date of the chapter."
          },
          "conversion_progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversion Progress",
            "description": "The conversion progress of the chapter."
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded",
            "description": "Whether the chapter can be downloaded."
          },
          "state": {
            "type": "string",
            "enum": [
              "default",
              "converting"
            ],
            "title": "State",
            "description": "The state of the chapter."
          },
          "has_video": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Video",
            "description": "Whether the chapter has a video."
          },
          "statistics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChapterStatisticsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The statistics of the chapter."
          },
          "last_conversion_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Error",
            "description": "The last conversion error of the chapter."
          }
        },
        "type": "object",
        "required": [
          "chapter_id",
          "name",
          "can_be_downloaded",
          "state"
        ],
        "title": "ChapterResponseModel",
        "example": {
          "can_be_downloaded": true,
          "chapter_id": "aw1NgEzBg83R7vgmiJt6",
          "conversion_progress": 0.5,
          "last_conversion_date_unix": 1714204800,
          "last_conversion_error": "Error message",
          "name": "Chapter 1",
          "state": "converting",
          "statistics": {
            "characters_converted": 500,
            "characters_unconverted": 1000,
            "paragraphs_converted": 20,
            "paragraphs_unconverted": 10
          }
        }
      },
      "ChapterSnapshotExtendedResponseModel": {
        "properties": {
          "chapter_snapshot_id": {
            "type": "string",
            "title": "Chapter Snapshot Id",
            "description": "The ID of the chapter snapshot."
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id",
            "description": "The ID of the chapter."
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix",
            "description": "The creation date of the chapter snapshot."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the chapter snapshot."
          },
          "character_alignments": {
            "items": {
              "$ref": "#/components/schemas/CharacterAlignmentModel"
            },
            "type": "array",
            "title": "Character Alignments"
          }
        },
        "type": "object",
        "required": [
          "chapter_snapshot_id",
          "project_id",
          "chapter_id",
          "created_at_unix",
          "name",
          "character_alignments"
        ],
        "title": "ChapterSnapshotExtendedResponseModel",
        "example": {
          "chapter_id": "aw1NgEzBg83R7vgmiJt3",
          "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
          "character_alignments": [],
          "created_at_unix": 1714204800,
          "name": "My Chapter Snapshot",
          "project_id": "aw1NgEzBg83R7vgmiJt2"
        }
      },
      "ChapterSnapshotResponseModel": {
        "properties": {
          "chapter_snapshot_id": {
            "type": "string",
            "title": "Chapter Snapshot Id",
            "description": "The ID of the chapter snapshot."
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id",
            "description": "The ID of the chapter."
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix",
            "description": "The creation date of the chapter snapshot."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the chapter snapshot."
          }
        },
        "type": "object",
        "required": [
          "chapter_snapshot_id",
          "project_id",
          "chapter_id",
          "created_at_unix",
          "name"
        ],
        "title": "ChapterSnapshotResponseModel",
        "example": {
          "chapter_id": "aw1NgEzBg83R7vgmiJt3",
          "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
          "created_at_unix": 1714204800,
          "name": "My Chapter Snapshot",
          "project_id": "aw1NgEzBg83R7vgmiJt2"
        }
      },
      "ChapterSnapshotsResponseModel": {
        "properties": {
          "snapshots": {
            "items": {
              "$ref": "#/components/schemas/ChapterSnapshotResponseModel"
            },
            "type": "array",
            "title": "Snapshots",
            "description": "List of chapter snapshots."
          }
        },
        "type": "object",
        "required": [
          "snapshots"
        ],
        "title": "ChapterSnapshotsResponseModel",
        "example": {
          "snapshots": [
            {
              "chapter_id": "aw1NgEzBg83R7vgmiJt3",
              "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
              "created_at_unix": 1714204800,
              "name": "My Chapter Snapshot",
              "project_id": "aw1NgEzBg83R7vgmiJt2"
            }
          ]
        }
      },
      "ChapterStatisticsResponseModel": {
        "properties": {
          "characters_unconverted": {
            "type": "integer",
            "title": "Characters Unconverted",
            "description": "The number of unconverted characters."
          },
          "characters_converted": {
            "type": "integer",
            "title": "Characters Converted",
            "description": "The number of converted characters."
          },
          "paragraphs_converted": {
            "type": "integer",
            "title": "Paragraphs Converted",
            "description": "The number of converted paragraphs."
          },
          "paragraphs_unconverted": {
            "type": "integer",
            "title": "Paragraphs Unconverted",
            "description": "The number of unconverted paragraphs."
          }
        },
        "type": "object",
        "required": [
          "characters_unconverted",
          "characters_converted",
          "paragraphs_converted",
          "paragraphs_unconverted"
        ],
        "title": "ChapterStatisticsResponseModel",
        "example": {
          "characters_converted": 500,
          "characters_unconverted": 1000,
          "paragraphs_converted": 20,
          "paragraphs_unconverted": 10
        }
      },
      "ChapterWithContentResponseModel": {
        "properties": {
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id",
            "description": "The ID of the chapter."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the chapter."
          },
          "last_conversion_date_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix",
            "description": "The last conversion date of the chapter."
          },
          "conversion_progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversion Progress",
            "description": "The conversion progress of the chapter."
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded",
            "description": "Whether the chapter can be downloaded."
          },
          "state": {
            "type": "string",
            "enum": [
              "default",
              "converting"
            ],
            "title": "State",
            "description": "The state of the chapter."
          },
          "has_video": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Video",
            "description": "Whether the chapter has a video."
          },
          "statistics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChapterStatisticsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The statistics of the chapter."
          },
          "last_conversion_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Error",
            "description": "The last conversion error of the chapter."
          },
          "content": {
            "$ref": "#/components/schemas/ChapterContentResponseModel"
          }
        },
        "type": "object",
        "required": [
          "chapter_id",
          "name",
          "can_be_downloaded",
          "state",
          "content"
        ],
        "title": "ChapterWithContentResponseModel",
        "example": {
          "can_be_downloaded": true,
          "chapter_id": "aw1NgEzBg83R7vgmiJt6",
          "content": {
            "blocks": []
          },
          "conversion_progress": 0.5,
          "last_conversion_date_unix": 1714204800,
          "name": "Chapter 1",
          "state": "default",
          "statistics": {
            "characters_converted": 200,
            "characters_unconverted": 100,
            "paragraphs_converted": 5,
            "paragraphs_unconverted": 3
          }
        }
      },
      "CharacterAlignmentModel": {
        "properties": {
          "characters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Characters"
          },
          "character_start_times_seconds": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Character Start Times Seconds"
          },
          "character_end_times_seconds": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Character End Times Seconds"
          }
        },
        "type": "object",
        "required": [
          "characters",
          "character_start_times_seconds",
          "character_end_times_seconds"
        ],
        "title": "CharacterAlignmentModel"
      },
      "CharacterAlignmentResponseModel": {
        "properties": {
          "characters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Characters"
          },
          "character_start_times_seconds": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Character Start Times Seconds"
          },
          "character_end_times_seconds": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Character End Times Seconds"
          }
        },
        "type": "object",
        "required": [
          "characters",
          "character_start_times_seconds",
          "character_end_times_seconds"
        ],
        "title": "CharacterAlignmentResponseModel"
      },
      "ClientEvent": {
        "type": "string",
        "enum": [
          "conversation_initiation_metadata",
          "asr_initiation_metadata",
          "ping",
          "audio",
          "interruption",
          "user_transcript",
          "agent_response",
          "agent_response_correction",
          "client_tool_call",
          "mcp_tool_call",
          "mcp_connection_status",
          "agent_tool_response",
          "vad_score",
          "internal_turn_probability",
          "internal_tentative_agent_response"
        ],
        "title": "ClientEvent"
      },
      "ClientToolConfig-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "client",
            "title": "Type",
            "description": "The type of tool",
            "default": "client"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "maximum": 120,
            "minimum": 1,
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete. Must be between 1 and 120 seconds (inclusive).",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "parameters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for any parameters to pass to the client"
          },
          "expects_response": {
            "type": "boolean",
            "title": "Expects Response",
            "description": "If true, calling this tool should block the conversation until the client responds with some response which is passed to the llm. If false then we will continue the conversation without waiting for the client to respond, this is useful to show content to a user but not block the conversation",
            "default": false
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig",
            "description": "Configuration for dynamic variables"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "title": "ClientToolConfig",
        "description": "A client tool is one that sends an event to the user's client to trigger something client side",
        "example": {
          "expects_response": false,
          "type": "client"
        }
      },
      "ClientToolConfig-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "client",
            "title": "Type",
            "description": "The type of tool",
            "default": "client"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "maximum": 120,
            "minimum": 1,
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete. Must be between 1 and 120 seconds (inclusive).",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "parameters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for any parameters to pass to the client"
          },
          "expects_response": {
            "type": "boolean",
            "title": "Expects Response",
            "description": "If true, calling this tool should block the conversation until the client responds with some response which is passed to the llm. If false then we will continue the conversation without waiting for the client to respond, this is useful to show content to a user but not block the conversation",
            "default": false
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig",
            "description": "Configuration for dynamic variables"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "title": "ClientToolConfig",
        "description": "A client tool is one that sends an event to the user's client to trigger something client side",
        "example": {
          "expects_response": false,
          "type": "client"
        }
      },
      "ConvAIDynamicVariable": {
        "properties": {
          "variable_name": {
            "type": "string",
            "title": "Variable Name"
          }
        },
        "type": "object",
        "required": [
          "variable_name"
        ],
        "title": "ConvAIDynamicVariable",
        "description": "Used to reference a dynamic variable."
      },
      "ConvAISecretLocator": {
        "properties": {
          "secret_id": {
            "type": "string",
            "title": "Secret Id"
          }
        },
        "type": "object",
        "required": [
          "secret_id"
        ],
        "title": "ConvAISecretLocator",
        "description": "Used to reference a secret from the agent's secret store."
      },
      "ConvAIStoredSecretDependencies": {
        "properties": {
          "tools": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableToolIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownToolIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableToolIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownToolIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Tools"
          },
          "agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Agents"
          },
          "others": {
            "items": {
              "$ref": "#/components/schemas/SecretDependencyType"
            },
            "type": "array",
            "title": "Others"
          },
          "phone_numbers": {
            "items": {
              "$ref": "#/components/schemas/DependentPhoneNumberIdentifier"
            },
            "type": "array",
            "title": "Phone Numbers"
          }
        },
        "type": "object",
        "required": [
          "tools",
          "agents",
          "others"
        ],
        "title": "ConvAIStoredSecretDependencies"
      },
      "ConvAIUserSecretDBModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "encrypted_value": {
            "type": "string",
            "title": "Encrypted Value"
          },
          "nonce": {
            "type": "string",
            "title": "Nonce"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "encrypted_value",
          "nonce"
        ],
        "title": "ConvAIUserSecretDBModel",
        "description": "User-specific secret model that are not shared with other users in a workspace."
      },
      "ConvAIWebhooks": {
        "properties": {
          "post_call_webhook_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Post Call Webhook Id"
          },
          "send_audio": {
            "type": "boolean",
            "title": "Send Audio",
            "description": "Whether to send audio data with post-call webhooks for ConvAI conversations",
            "default": false
          }
        },
        "type": "object",
        "title": "ConvAIWebhooks"
      },
      "ConvAIWorkspaceStoredSecretConfig": {
        "properties": {
          "type": {
            "type": "string",
            "const": "stored",
            "title": "Type"
          },
          "secret_id": {
            "type": "string",
            "title": "Secret Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "used_by": {
            "$ref": "#/components/schemas/ConvAIStoredSecretDependencies"
          }
        },
        "type": "object",
        "required": [
          "type",
          "secret_id",
          "name",
          "used_by"
        ],
        "title": "ConvAIWorkspaceStoredSecretConfig"
      },
      "ConversationChargingCommonModel": {
        "properties": {
          "dev_discount": {
            "type": "boolean",
            "title": "Dev Discount",
            "default": false
          },
          "is_burst": {
            "type": "boolean",
            "title": "Is Burst",
            "default": false
          },
          "tier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tier"
          },
          "llm_usage": {
            "$ref": "#/components/schemas/LLMCategoryUsage"
          },
          "llm_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Price"
          },
          "llm_charge": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Charge"
          },
          "call_charge": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Call Charge"
          }
        },
        "type": "object",
        "title": "ConversationChargingCommonModel"
      },
      "ConversationConfig": {
        "properties": {
          "text_only": {
            "type": "boolean",
            "title": "Text Only",
            "description": "If enabled audio will not be processed and only text will be used, use to avoid audio pricing.",
            "default": false,
            "x-convai-client-override": true
          },
          "max_duration_seconds": {
            "type": "integer",
            "title": "Max Duration Seconds",
            "description": "The maximum duration of a conversation in seconds",
            "default": 600
          },
          "client_events": {
            "items": {
              "$ref": "#/components/schemas/ClientEvent"
            },
            "type": "array",
            "title": "Client Events",
            "description": "The events that will be sent to the client"
          }
        },
        "type": "object",
        "title": "ConversationConfig",
        "example": {
          "client_events": [
            "audio",
            "interruption"
          ],
          "max_duration_seconds": 600
        }
      },
      "ConversationConfigClientOverride-Input": {
        "properties": {
          "tts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSConversationalConfigOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational text to speech"
          },
          "conversation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationConfigOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational events"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentConfigOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Agent specific configuration"
          }
        },
        "type": "object",
        "title": "ConversationConfigClientOverride",
        "example": {
          "agent": {
            "first_message": "Hello, how can I help you today?",
            "language": "en",
            "prompt": {
              "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation."
            }
          },
          "tts": {
            "voice_id": "cjVigY5qzO86Huf0OWal"
          }
        }
      },
      "ConversationConfigClientOverride-Output": {
        "properties": {
          "tts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSConversationalConfigOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational text to speech"
          },
          "conversation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationConfigOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational events"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentConfigOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Agent specific configuration"
          }
        },
        "type": "object",
        "title": "ConversationConfigClientOverride",
        "example": {
          "agent": {
            "first_message": "Hello, how can I help you today?",
            "language": "en",
            "prompt": {
              "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation."
            }
          },
          "tts": {
            "voice_id": "cjVigY5qzO86Huf0OWal"
          }
        }
      },
      "ConversationConfigClientOverrideConfig-Input": {
        "properties": {
          "tts": {
            "$ref": "#/components/schemas/TTSConversationalConfigOverrideConfig",
            "description": "Configures overrides for nested fields."
          },
          "conversation": {
            "$ref": "#/components/schemas/ConversationConfigOverrideConfig",
            "description": "Configures overrides for nested fields."
          },
          "agent": {
            "$ref": "#/components/schemas/AgentConfigOverrideConfig",
            "description": "Configures overrides for nested fields."
          }
        },
        "type": "object",
        "title": "ConversationConfigClientOverrideConfig"
      },
      "ConversationConfigClientOverrideConfig-Output": {
        "properties": {
          "tts": {
            "$ref": "#/components/schemas/TTSConversationalConfigOverrideConfig",
            "description": "Configures overrides for nested fields."
          },
          "conversation": {
            "$ref": "#/components/schemas/ConversationConfigOverrideConfig",
            "description": "Configures overrides for nested fields."
          },
          "agent": {
            "$ref": "#/components/schemas/AgentConfigOverrideConfig",
            "description": "Configures overrides for nested fields."
          }
        },
        "type": "object",
        "title": "ConversationConfigClientOverrideConfig"
      },
      "ConversationConfigOverride": {
        "properties": {
          "text_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Only",
            "description": "If enabled audio will not be processed and only text will be used, use to avoid audio pricing.",
            "x-convai-client-override": true
          }
        },
        "type": "object",
        "title": "ConversationConfigOverride"
      },
      "ConversationConfigOverrideConfig": {
        "properties": {
          "text_only": {
            "type": "boolean",
            "title": "Text Only",
            "description": "Whether to allow overriding the text_only field.",
            "default": false
          }
        },
        "type": "object",
        "title": "ConversationConfigOverrideConfig"
      },
      "ConversationDeletionSettings": {
        "properties": {
          "deletion_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletion Time Unix Secs"
          },
          "deleted_logs_at_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Logs At Time Unix Secs"
          },
          "deleted_audio_at_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Audio At Time Unix Secs"
          },
          "deleted_transcript_at_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Transcript At Time Unix Secs"
          },
          "delete_transcript_and_pii": {
            "type": "boolean",
            "title": "Delete Transcript And Pii",
            "default": false
          },
          "delete_audio": {
            "type": "boolean",
            "title": "Delete Audio",
            "default": false
          }
        },
        "type": "object",
        "title": "ConversationDeletionSettings"
      },
      "ConversationHistoryAnalysisCommonModel": {
        "properties": {
          "evaluation_criteria_results": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ConversationHistoryEvaluationCriteriaResultCommonModel"
            },
            "type": "object",
            "title": "Evaluation Criteria Results"
          },
          "data_collection_results": {
            "additionalProperties": {
              "$ref": "#/components/schemas/DataCollectionResultCommonModel"
            },
            "type": "object",
            "title": "Data Collection Results"
          },
          "call_successful": {
            "$ref": "#/components/schemas/EvaluationSuccessResult"
          },
          "transcript_summary": {
            "type": "string",
            "title": "Transcript Summary"
          },
          "call_summary_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Call Summary Title"
          }
        },
        "type": "object",
        "required": [
          "call_successful",
          "transcript_summary"
        ],
        "title": "ConversationHistoryAnalysisCommonModel"
      },
      "ConversationHistoryBatchCallModel": {
        "properties": {
          "batch_call_id": {
            "type": "string",
            "title": "Batch Call Id"
          },
          "batch_call_recipient_id": {
            "type": "string",
            "title": "Batch Call Recipient Id"
          }
        },
        "type": "object",
        "required": [
          "batch_call_id",
          "batch_call_recipient_id"
        ],
        "title": "ConversationHistoryBatchCallModel"
      },
      "ConversationHistoryElevenAssistantCommonModel": {
        "properties": {
          "is_eleven_assistant": {
            "type": "boolean",
            "title": "Is Eleven Assistant",
            "default": false
          }
        },
        "type": "object",
        "title": "ConversationHistoryElevenAssistantCommonModel"
      },
      "ConversationHistoryErrorCommonModel": {
        "properties": {
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "ConversationHistoryErrorCommonModel"
      },
      "ConversationHistoryEvaluationCriteriaResultCommonModel": {
        "properties": {
          "criteria_id": {
            "type": "string",
            "title": "Criteria Id"
          },
          "result": {
            "$ref": "#/components/schemas/EvaluationSuccessResult"
          },
          "rationale": {
            "type": "string",
            "title": "Rationale"
          }
        },
        "type": "object",
        "required": [
          "criteria_id",
          "result",
          "rationale"
        ],
        "title": "ConversationHistoryEvaluationCriteriaResultCommonModel"
      },
      "ConversationHistoryFeedbackCommonModel": {
        "properties": {
          "overall_score": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserFeedbackScore"
              },
              {
                "type": "null"
              }
            ]
          },
          "likes": {
            "type": "integer",
            "title": "Likes",
            "default": 0
          },
          "dislikes": {
            "type": "integer",
            "title": "Dislikes",
            "default": 0
          }
        },
        "type": "object",
        "title": "ConversationHistoryFeedbackCommonModel"
      },
      "ConversationHistoryMetadataCommonModel": {
        "properties": {
          "start_time_unix_secs": {
            "type": "integer",
            "title": "Start Time Unix Secs"
          },
          "accepted_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accepted Time Unix Secs"
          },
          "call_duration_secs": {
            "type": "integer",
            "title": "Call Duration Secs"
          },
          "cost": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "deletion_settings": {
            "$ref": "#/components/schemas/ConversationDeletionSettings"
          },
          "feedback": {
            "$ref": "#/components/schemas/ConversationHistoryFeedbackCommonModel"
          },
          "authorization_method": {
            "$ref": "#/components/schemas/AuthorizationMethod",
            "default": "public"
          },
          "charging": {
            "$ref": "#/components/schemas/ConversationChargingCommonModel"
          },
          "phone_call": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ConversationHistoryTwilioPhoneCallModel"
                  },
                  {
                    "$ref": "#/components/schemas/ConversationHistorySIPTrunkingPhoneCallModel"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "sip_trunking": "#/components/schemas/ConversationHistorySIPTrunkingPhoneCallModel",
                    "twilio": "#/components/schemas/ConversationHistoryTwilioPhoneCallModel"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Call"
          },
          "batch_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationHistoryBatchCallModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "termination_reason": {
            "type": "string",
            "title": "Termination Reason",
            "default": ""
          },
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationHistoryErrorCommonModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "main_language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Main Language"
          },
          "rag_usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationHistoryRagUsageCommonModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "text_only": {
            "type": "boolean",
            "title": "Text Only",
            "default": false
          },
          "features_usage": {
            "$ref": "#/components/schemas/FeaturesUsageCommonModel"
          },
          "eleven_assistant": {
            "$ref": "#/components/schemas/ConversationHistoryElevenAssistantCommonModel"
          },
          "initiator_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initiator Id"
          },
          "conversation_initiation_source": {
            "$ref": "#/components/schemas/ConversationInitiationSource",
            "default": "unknown"
          },
          "conversation_initiation_source_version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+(-[a-zA-Z0-9.-]+)?$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Initiation Source Version"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          }
        },
        "type": "object",
        "required": [
          "start_time_unix_secs",
          "call_duration_secs"
        ],
        "title": "ConversationHistoryMetadataCommonModel"
      },
      "ConversationHistoryRagUsageCommonModel": {
        "properties": {
          "usage_count": {
            "type": "integer",
            "title": "Usage Count"
          },
          "embedding_model": {
            "type": "string",
            "title": "Embedding Model"
          }
        },
        "type": "object",
        "required": [
          "usage_count",
          "embedding_model"
        ],
        "title": "ConversationHistoryRagUsageCommonModel"
      },
      "ConversationHistorySIPTrunkingPhoneCallModel": {
        "properties": {
          "direction": {
            "type": "string",
            "enum": [
              "inbound",
              "outbound"
            ],
            "title": "Direction"
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "agent_number": {
            "type": "string",
            "title": "Agent Number"
          },
          "external_number": {
            "type": "string",
            "title": "External Number"
          },
          "type": {
            "type": "string",
            "const": "sip_trunking",
            "title": "Type"
          },
          "call_sid": {
            "type": "string",
            "title": "Call Sid"
          }
        },
        "type": "object",
        "required": [
          "direction",
          "phone_number_id",
          "agent_number",
          "external_number",
          "type",
          "call_sid"
        ],
        "title": "ConversationHistorySIPTrunkingPhoneCallModel"
      },
      "ConversationHistoryTranscriptCommonModel-Input": {
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "user",
              "agent"
            ],
            "title": "Role"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "tool_calls": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallCommonModel"
            },
            "type": "array",
            "title": "Tool Calls"
          },
          "tool_results": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptOtherToolsResultCommonModel"
                },
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptSystemToolResultCommonModel"
                },
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptWorkflowToolsResultCommonModel-Input"
                }
              ]
            },
            "type": "array",
            "title": "Tool Results"
          },
          "feedback": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserFeedback"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Override"
          },
          "time_in_call_secs": {
            "type": "integer",
            "title": "Time In Call Secs"
          },
          "conversation_turn_metrics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationTurnMetrics"
              },
              {
                "type": "null"
              }
            ]
          },
          "rag_retrieval_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RagRetrievalInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLMUsage-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "interrupted": {
            "type": "boolean",
            "title": "Interrupted",
            "default": false
          },
          "original_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Message"
          },
          "source_medium": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "audio",
                  "text"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Medium"
          }
        },
        "type": "object",
        "required": [
          "role",
          "time_in_call_secs"
        ],
        "title": "ConversationHistoryTranscriptCommonModel"
      },
      "ConversationHistoryTranscriptCommonModel-Output": {
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "user",
              "agent"
            ],
            "title": "Role"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "tool_calls": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallCommonModel"
            },
            "type": "array",
            "title": "Tool Calls"
          },
          "tool_results": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptOtherToolsResultCommonModel"
                },
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptSystemToolResultCommonModel"
                },
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptWorkflowToolsResultCommonModel-Output"
                }
              ]
            },
            "type": "array",
            "title": "Tool Results"
          },
          "feedback": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserFeedback"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Override"
          },
          "time_in_call_secs": {
            "type": "integer",
            "title": "Time In Call Secs"
          },
          "conversation_turn_metrics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationTurnMetrics"
              },
              {
                "type": "null"
              }
            ]
          },
          "rag_retrieval_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RagRetrievalInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLMUsage-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "interrupted": {
            "type": "boolean",
            "title": "Interrupted",
            "default": false
          },
          "original_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Message"
          },
          "source_medium": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "audio",
                  "text"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Medium"
          }
        },
        "type": "object",
        "required": [
          "role",
          "time_in_call_secs"
        ],
        "title": "ConversationHistoryTranscriptCommonModel"
      },
      "ConversationHistoryTranscriptOtherToolsResultCommonModel": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "result_value": {
            "type": "string",
            "title": "Result Value"
          },
          "is_error": {
            "type": "boolean",
            "title": "Is Error"
          },
          "tool_has_been_called": {
            "type": "boolean",
            "title": "Tool Has Been Called"
          },
          "tool_latency_secs": {
            "type": "number",
            "title": "Tool Latency Secs",
            "default": 0
          },
          "dynamic_variable_updates": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableUpdateCommonModel"
            },
            "type": "array",
            "title": "Dynamic Variable Updates"
          },
          "type": {
            "type": "string",
            "enum": [
              "client",
              "webhook",
              "mcp"
            ],
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "tool_name",
          "result_value",
          "is_error",
          "tool_has_been_called",
          "type"
        ],
        "title": "ConversationHistoryTranscriptOtherToolsResultCommonModel"
      },
      "ConversationHistoryTranscriptSystemToolResultCommonModel": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "result_value": {
            "type": "string",
            "title": "Result Value"
          },
          "is_error": {
            "type": "boolean",
            "title": "Is Error"
          },
          "tool_has_been_called": {
            "type": "boolean",
            "title": "Tool Has Been Called"
          },
          "tool_latency_secs": {
            "type": "number",
            "title": "Tool Latency Secs",
            "default": 0
          },
          "dynamic_variable_updates": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableUpdateCommonModel"
            },
            "type": "array",
            "title": "Dynamic Variable Updates"
          },
          "type": {
            "type": "string",
            "const": "system",
            "title": "Type"
          },
          "result": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EndCallToolResultModel"
                  },
                  {
                    "$ref": "#/components/schemas/LanguageDetectionToolResultModel"
                  },
                  {
                    "$ref": "#/components/schemas/TransferToAgentToolResultSuccessModel"
                  },
                  {
                    "$ref": "#/components/schemas/TransferToAgentToolResultErrorModel"
                  },
                  {
                    "$ref": "#/components/schemas/TransferToNumberResultTwilioSuccessModel"
                  },
                  {
                    "$ref": "#/components/schemas/TransferToNumberResultSipSuccessModel"
                  },
                  {
                    "$ref": "#/components/schemas/TransferToNumberResultErrorModel"
                  },
                  {
                    "$ref": "#/components/schemas/SkipTurnToolResponseModel"
                  },
                  {
                    "$ref": "#/components/schemas/PlayDTMFResultSuccessModel"
                  },
                  {
                    "$ref": "#/components/schemas/PlayDTMFResultErrorModel"
                  },
                  {
                    "$ref": "#/components/schemas/VoiceMailDetectionResultSuccessModel"
                  }
                ],
                "discriminator": {
                  "propertyName": "result_type",
                  "mapping": {
                    "end_call_success": "#/components/schemas/EndCallToolResultModel",
                    "language_detection_success": "#/components/schemas/LanguageDetectionToolResultModel",
                    "play_dtmf_error": "#/components/schemas/PlayDTMFResultErrorModel",
                    "play_dtmf_success": "#/components/schemas/PlayDTMFResultSuccessModel",
                    "skip_turn_success": "#/components/schemas/SkipTurnToolResponseModel",
                    "transfer_to_agent_error": "#/components/schemas/TransferToAgentToolResultErrorModel",
                    "transfer_to_agent_success": "#/components/schemas/TransferToAgentToolResultSuccessModel",
                    "transfer_to_number_error": "#/components/schemas/TransferToNumberResultErrorModel",
                    "transfer_to_number_sip_success": "#/components/schemas/TransferToNumberResultSipSuccessModel",
                    "transfer_to_number_twilio_success": "#/components/schemas/TransferToNumberResultTwilioSuccessModel",
                    "voicemail_detection_success": "#/components/schemas/VoiceMailDetectionResultSuccessModel"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Result"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "tool_name",
          "result_value",
          "is_error",
          "tool_has_been_called",
          "type"
        ],
        "title": "ConversationHistoryTranscriptSystemToolResultCommonModel"
      },
      "ConversationHistoryTranscriptToolCallClientDetails": {
        "properties": {
          "type": {
            "type": "string",
            "const": "client",
            "title": "Type",
            "default": "client"
          },
          "parameters": {
            "type": "string",
            "title": "Parameters"
          }
        },
        "type": "object",
        "required": [
          "parameters"
        ],
        "title": "ConversationHistoryTranscriptToolCallClientDetails"
      },
      "ConversationHistoryTranscriptToolCallCommonModel": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ToolType"
              },
              {
                "type": "null"
              }
            ]
          },
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "params_as_json": {
            "type": "string",
            "title": "Params As Json"
          },
          "tool_has_been_called": {
            "type": "boolean",
            "title": "Tool Has Been Called"
          },
          "tool_details": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallWebhookDetails"
                  },
                  {
                    "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallClientDetails"
                  },
                  {
                    "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallMCPDetails"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "client": "#/components/schemas/ConversationHistoryTranscriptToolCallClientDetails",
                    "mcp": "#/components/schemas/ConversationHistoryTranscriptToolCallMCPDetails",
                    "webhook": "#/components/schemas/ConversationHistoryTranscriptToolCallWebhookDetails"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Details"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "tool_name",
          "params_as_json",
          "tool_has_been_called"
        ],
        "title": "ConversationHistoryTranscriptToolCallCommonModel"
      },
      "ConversationHistoryTranscriptToolCallMCPDetails": {
        "properties": {
          "type": {
            "type": "string",
            "const": "mcp",
            "title": "Type",
            "default": "mcp"
          },
          "mcp_server_id": {
            "type": "string",
            "title": "Mcp Server Id"
          },
          "mcp_server_name": {
            "type": "string",
            "title": "Mcp Server Name"
          },
          "integration_type": {
            "type": "string",
            "title": "Integration Type"
          },
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Parameters"
          },
          "approval_policy": {
            "type": "string",
            "title": "Approval Policy"
          },
          "requires_approval": {
            "type": "boolean",
            "title": "Requires Approval",
            "default": false
          },
          "mcp_tool_name": {
            "type": "string",
            "title": "Mcp Tool Name",
            "default": ""
          },
          "mcp_tool_description": {
            "type": "string",
            "title": "Mcp Tool Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "mcp_server_id",
          "mcp_server_name",
          "integration_type",
          "approval_policy"
        ],
        "title": "ConversationHistoryTranscriptToolCallMCPDetails"
      },
      "ConversationHistoryTranscriptToolCallWebhookDetails": {
        "properties": {
          "type": {
            "type": "string",
            "const": "webhook",
            "title": "Type",
            "default": "webhook"
          },
          "method": {
            "type": "string",
            "title": "Method"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Headers"
          },
          "path_params": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Path Params"
          },
          "query_params": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Query Params"
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          }
        },
        "type": "object",
        "required": [
          "method",
          "url"
        ],
        "title": "ConversationHistoryTranscriptToolCallWebhookDetails"
      },
      "ConversationHistoryTranscriptWorkflowToolsResultCommonModel-Input": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "result_value": {
            "type": "string",
            "title": "Result Value"
          },
          "is_error": {
            "type": "boolean",
            "title": "Is Error"
          },
          "tool_has_been_called": {
            "type": "boolean",
            "title": "Tool Has Been Called"
          },
          "tool_latency_secs": {
            "type": "number",
            "title": "Tool Latency Secs",
            "default": 0
          },
          "dynamic_variable_updates": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableUpdateCommonModel"
            },
            "type": "array",
            "title": "Dynamic Variable Updates"
          },
          "type": {
            "type": "string",
            "const": "workflow",
            "title": "Type"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowToolResponseModel-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "tool_name",
          "result_value",
          "is_error",
          "tool_has_been_called",
          "type"
        ],
        "title": "ConversationHistoryTranscriptWorkflowToolsResultCommonModel"
      },
      "ConversationHistoryTranscriptWorkflowToolsResultCommonModel-Output": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "result_value": {
            "type": "string",
            "title": "Result Value"
          },
          "is_error": {
            "type": "boolean",
            "title": "Is Error"
          },
          "tool_has_been_called": {
            "type": "boolean",
            "title": "Tool Has Been Called"
          },
          "tool_latency_secs": {
            "type": "number",
            "title": "Tool Latency Secs",
            "default": 0
          },
          "dynamic_variable_updates": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableUpdateCommonModel"
            },
            "type": "array",
            "title": "Dynamic Variable Updates"
          },
          "type": {
            "type": "string",
            "const": "workflow",
            "title": "Type"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowToolResponseModel-Output"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "tool_name",
          "result_value",
          "is_error",
          "tool_has_been_called",
          "type"
        ],
        "title": "ConversationHistoryTranscriptWorkflowToolsResultCommonModel"
      },
      "ConversationHistoryTwilioPhoneCallModel": {
        "properties": {
          "direction": {
            "type": "string",
            "enum": [
              "inbound",
              "outbound"
            ],
            "title": "Direction"
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "agent_number": {
            "type": "string",
            "title": "Agent Number"
          },
          "external_number": {
            "type": "string",
            "title": "External Number"
          },
          "type": {
            "type": "string",
            "const": "twilio",
            "title": "Type"
          },
          "stream_sid": {
            "type": "string",
            "title": "Stream Sid"
          },
          "call_sid": {
            "type": "string",
            "title": "Call Sid"
          }
        },
        "type": "object",
        "required": [
          "direction",
          "phone_number_id",
          "agent_number",
          "external_number",
          "type",
          "stream_sid",
          "call_sid"
        ],
        "title": "ConversationHistoryTwilioPhoneCallModel"
      },
      "ConversationInitiationClientDataConfig-Input": {
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverrideConfig-Input",
            "description": "Overrides for the conversation configuration"
          },
          "custom_llm_extra_body": {
            "type": "boolean",
            "title": "Custom Llm Extra Body",
            "description": "Whether to include custom LLM extra body",
            "default": false
          },
          "enable_conversation_initiation_client_data_from_webhook": {
            "type": "boolean",
            "title": "Enable Conversation Initiation Client Data From Webhook",
            "description": "Whether to enable conversation initiation client data from webhooks",
            "default": false
          }
        },
        "type": "object",
        "title": "ConversationInitiationClientDataConfig",
        "example": {
          "custom_llm_extra_body": true,
          "enable_conversation_initiation_client_data_from_webhook": true
        }
      },
      "ConversationInitiationClientDataConfig-Output": {
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverrideConfig-Output",
            "description": "Overrides for the conversation configuration"
          },
          "custom_llm_extra_body": {
            "type": "boolean",
            "title": "Custom Llm Extra Body",
            "description": "Whether to include custom LLM extra body",
            "default": false
          },
          "enable_conversation_initiation_client_data_from_webhook": {
            "type": "boolean",
            "title": "Enable Conversation Initiation Client Data From Webhook",
            "description": "Whether to enable conversation initiation client data from webhooks",
            "default": false
          }
        },
        "type": "object",
        "title": "ConversationInitiationClientDataConfig",
        "example": {
          "custom_llm_extra_body": true,
          "enable_conversation_initiation_client_data_from_webhook": true
        }
      },
      "ConversationInitiationClientDataInternal": {
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Output"
          },
          "custom_llm_extra_body": {
            "type": "object",
            "title": "Custom Llm Extra Body"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "ID of the end user participating in this conversation (for agent owner's user identification)"
          },
          "source_info": {
            "$ref": "#/components/schemas/ConversationInitiationSourceInfo"
          },
          "dynamic_variables": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Dynamic Variables"
          }
        },
        "type": "object",
        "title": "ConversationInitiationClientDataInternal"
      },
      "ConversationInitiationClientDataRequest-Input": {
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Input"
          },
          "custom_llm_extra_body": {
            "type": "object",
            "title": "Custom Llm Extra Body"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "ID of the end user participating in this conversation (for agent owner's user identification)"
          },
          "source_info": {
            "$ref": "#/components/schemas/ConversationInitiationSourceInfo"
          },
          "dynamic_variables": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Dynamic Variables"
          }
        },
        "type": "object",
        "title": "ConversationInitiationClientDataRequest"
      },
      "ConversationInitiationClientDataRequest-Output": {
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Output"
          },
          "custom_llm_extra_body": {
            "type": "object",
            "title": "Custom Llm Extra Body"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "ID of the end user participating in this conversation (for agent owner's user identification)"
          },
          "source_info": {
            "$ref": "#/components/schemas/ConversationInitiationSourceInfo"
          },
          "dynamic_variables": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Dynamic Variables"
          }
        },
        "type": "object",
        "title": "ConversationInitiationClientDataRequest"
      },
      "ConversationInitiationClientDataWebhook": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL to send the webhook to"
          },
          "request_headers": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                }
              ]
            },
            "type": "object",
            "title": "Request Headers",
            "description": "The headers to send with the webhook request"
          }
        },
        "type": "object",
        "required": [
          "url",
          "request_headers"
        ],
        "title": "ConversationInitiationClientDataWebhook",
        "example": {
          "request_headers": {
            "Content-Type": "application/json"
          },
          "url": "https://example.com/webhook"
        }
      },
      "ConversationInitiationSource": {
        "type": "string",
        "enum": [
          "unknown",
          "android_sdk",
          "node_js_sdk",
          "react_native_sdk",
          "react_sdk",
          "js_sdk",
          "python_sdk",
          "widget",
          "sip_trunk",
          "twilio",
          "genesys",
          "swift_sdk"
        ],
        "title": "ConversationInitiationSource",
        "description": "Enum representing the possible sources for conversation initiation."
      },
      "ConversationInitiationSourceInfo": {
        "properties": {
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationSource"
              },
              {
                "type": "null"
              }
            ],
            "description": "Source of the conversation initiation"
          },
          "version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+(-[a-zA-Z0-9.-]+)?$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "The SDK version number"
          }
        },
        "type": "object",
        "title": "ConversationInitiationSourceInfo",
        "description": "Information about the source of conversation initiation"
      },
      "ConversationSignedUrlResponseModel": {
        "properties": {
          "signed_url": {
            "type": "string",
            "title": "Signed Url"
          }
        },
        "type": "object",
        "required": [
          "signed_url"
        ],
        "title": "ConversationSignedUrlResponseModel"
      },
      "ConversationSimulationSpecification": {
        "properties": {
          "simulated_user_config": {
            "$ref": "#/components/schemas/AgentConfigAPIModel-Input"
          },
          "tool_mock_config": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ToolMockConfig"
            },
            "type": "object",
            "title": "Tool Mock Config"
          },
          "partial_conversation_history": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel-Input"
            },
            "type": "array",
            "title": "Partial Conversation History",
            "description": "A partial conversation history to start the simulation from. If empty, simulation starts fresh."
          },
          "dynamic_variables": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Dynamic Variables"
          }
        },
        "type": "object",
        "required": [
          "simulated_user_config"
        ],
        "title": "ConversationSimulationSpecification",
        "description": "A specification that will be used to simulate a conversation between an agent and an AI user."
      },
      "ConversationSummaryResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Name"
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id"
          },
          "start_time_unix_secs": {
            "type": "integer",
            "title": "Start Time Unix Secs"
          },
          "call_duration_secs": {
            "type": "integer",
            "title": "Call Duration Secs"
          },
          "message_count": {
            "type": "integer",
            "title": "Message Count"
          },
          "status": {
            "type": "string",
            "enum": [
              "initiated",
              "in-progress",
              "processing",
              "done",
              "failed"
            ],
            "title": "Status"
          },
          "call_successful": {
            "$ref": "#/components/schemas/EvaluationSuccessResult"
          },
          "transcript_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transcript Summary"
          },
          "call_summary_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Call Summary Title"
          },
          "direction": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "inbound",
                  "outbound"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Direction"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "conversation_id",
          "start_time_unix_secs",
          "call_duration_secs",
          "message_count",
          "status",
          "call_successful"
        ],
        "title": "ConversationSummaryResponseModel"
      },
      "ConversationTokenDBModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id",
            "description": "The ID of the agent"
          },
          "conversation_token": {
            "type": "string",
            "title": "Conversation Token",
            "description": "The token for the agent"
          },
          "expiration_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Time Unix Secs",
            "description": "The expiration time of the token in unix seconds"
          },
          "conversation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Id",
            "description": "The ID of the conversation"
          },
          "purpose": {
            "$ref": "#/components/schemas/ConversationTokenPurpose",
            "description": "The purpose of the token",
            "default": "signed_url"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "conversation_token"
        ],
        "title": "ConversationTokenDBModel",
        "example": {
          "agent_id": "agent_J3Pbu5gP6NNKBscdCdwB",
          "conversation_id": "conv_J3Pbu5gP6NNKBscdCdwB",
          "conversation_token": "1234567890",
          "expiration_time_unix_secs": 1716153600,
          "purpose": "signed_url"
        }
      },
      "ConversationTokenPurpose": {
        "type": "string",
        "enum": [
          "signed_url",
          "shareable_link"
        ],
        "title": "ConversationTokenPurpose"
      },
      "ConversationTurnMetrics": {
        "properties": {
          "metrics": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricRecord"
            },
            "type": "object",
            "title": "Metrics"
          }
        },
        "type": "object",
        "title": "ConversationTurnMetrics"
      },
      "ConversationalConfigAPIModel-Input": {
        "properties": {
          "asr": {
            "$ref": "#/components/schemas/ASRConversationalConfig",
            "description": "Configuration for conversational transcription"
          },
          "turn": {
            "$ref": "#/components/schemas/TurnConfig",
            "description": "Configuration for turn detection"
          },
          "tts": {
            "$ref": "#/components/schemas/TTSConversationalConfig-Input",
            "description": "Configuration for conversational text to speech"
          },
          "conversation": {
            "$ref": "#/components/schemas/ConversationConfig",
            "description": "Configuration for conversational events"
          },
          "language_presets": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LanguagePreset-Input"
            },
            "type": "object",
            "title": "Language Presets",
            "description": "Language presets for conversations"
          },
          "agent": {
            "$ref": "#/components/schemas/AgentConfigAPIModel-Input",
            "description": "Agent specific configuration"
          }
        },
        "type": "object",
        "title": "ConversationalConfigAPIModel"
      },
      "ConversationalConfigAPIModel-Output": {
        "properties": {
          "asr": {
            "$ref": "#/components/schemas/ASRConversationalConfig",
            "description": "Configuration for conversational transcription"
          },
          "turn": {
            "$ref": "#/components/schemas/TurnConfig",
            "description": "Configuration for turn detection"
          },
          "tts": {
            "$ref": "#/components/schemas/TTSConversationalConfig-Output",
            "description": "Configuration for conversational text to speech"
          },
          "conversation": {
            "$ref": "#/components/schemas/ConversationConfig",
            "description": "Configuration for conversational events"
          },
          "language_presets": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LanguagePreset-Output"
            },
            "type": "object",
            "title": "Language Presets",
            "description": "Language presets for conversations"
          },
          "agent": {
            "$ref": "#/components/schemas/AgentConfigAPIModel-Output",
            "description": "Agent specific configuration"
          }
        },
        "type": "object",
        "title": "ConversationalConfigAPIModel"
      },
      "ConvertChapterResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the studio chapter conversion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "ConvertChapterResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "ConvertProjectResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the studio project conversion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "ConvertProjectResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "CreateAgentResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id",
            "description": "ID of the created agent"
          }
        },
        "type": "object",
        "required": [
          "agent_id"
        ],
        "title": "CreateAgentResponseModel",
        "example": {
          "agent_id": "J3Pbu5gP6NNKBscdCdwB"
        }
      },
      "CreatePhoneNumberResponseModel": {
        "properties": {
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id",
            "description": "Phone entity ID"
          }
        },
        "type": "object",
        "required": [
          "phone_number_id"
        ],
        "title": "CreatePhoneNumberResponseModel"
      },
      "CreatePronunciationDictionaryResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the create pronunciation dictionary request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "CreatePronunciationDictionaryResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "CreateSIPTrunkPhoneNumberRequestV2": {
        "properties": {
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Phone number"
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "Label for the phone number"
          },
          "supports_inbound": {
            "type": "boolean",
            "title": "Supports Inbound",
            "description": "Whether this phone number supports inbound calls",
            "default": true
          },
          "supports_outbound": {
            "type": "boolean",
            "title": "Supports Outbound",
            "description": "Whether this phone number supports outbound calls",
            "default": true
          },
          "provider": {
            "type": "string",
            "const": "sip_trunk",
            "title": "Provider",
            "default": "sip_trunk"
          },
          "inbound_trunk_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InboundSIPTrunkConfigRequestModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "outbound_trunk_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OutboundSIPTrunkConfigRequestModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "phone_number",
          "label"
        ],
        "title": "CreateSIPTrunkPhoneNumberRequestV2"
      },
      "CreateTwilioPhoneNumberRequest": {
        "properties": {
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Phone number"
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "Label for the phone number"
          },
          "supports_inbound": {
            "type": "boolean",
            "title": "Supports Inbound",
            "description": "Whether this phone number supports inbound calls",
            "default": true
          },
          "supports_outbound": {
            "type": "boolean",
            "title": "Supports Outbound",
            "description": "Whether this phone number supports outbound calls",
            "default": true
          },
          "provider": {
            "type": "string",
            "const": "twilio",
            "title": "Provider",
            "default": "twilio"
          },
          "sid": {
            "type": "string",
            "title": "Sid",
            "description": "Twilio Account SID"
          },
          "token": {
            "type": "string",
            "title": "Token",
            "description": "Twilio Auth Token"
          }
        },
        "type": "object",
        "required": [
          "phone_number",
          "label",
          "sid",
          "token"
        ],
        "title": "CreateTwilioPhoneNumberRequest"
      },
      "CustomLLM": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL of the Chat Completions compatible endpoint"
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The model ID to be used if URL serves multiple models"
          },
          "api_key": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConvAISecretLocator"
              },
              {
                "type": "null"
              }
            ],
            "description": "The API key for authentication"
          },
          "request_headers": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                },
                {
                  "$ref": "#/components/schemas/ConvAIDynamicVariable"
                }
              ]
            },
            "type": "object",
            "title": "Request Headers",
            "description": "Headers that should be included in the request"
          },
          "api_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Version",
            "description": "The API version to use for the request"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "CustomLLM"
      },
      "DashboardCallSuccessChartModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "const": "call_success",
            "title": "Type",
            "default": "call_success"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DashboardCallSuccessChartModel"
      },
      "DashboardCriteriaChartModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "const": "criteria",
            "title": "Type",
            "default": "criteria"
          },
          "criteria_id": {
            "type": "string",
            "title": "Criteria Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "criteria_id"
        ],
        "title": "DashboardCriteriaChartModel"
      },
      "DashboardDataCollectionChartModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "const": "data_collection",
            "title": "Type",
            "default": "data_collection"
          },
          "data_collection_id": {
            "type": "string",
            "title": "Data Collection Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "data_collection_id"
        ],
        "title": "DashboardDataCollectionChartModel"
      },
      "DataCollectionResultCommonModel": {
        "properties": {
          "data_collection_id": {
            "type": "string",
            "title": "Data Collection Id"
          },
          "value": {
            "title": "Value"
          },
          "json_schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
              },
              {
                "type": "null"
              }
            ]
          },
          "rationale": {
            "type": "string",
            "title": "Rationale"
          }
        },
        "type": "object",
        "required": [
          "data_collection_id",
          "rationale"
        ],
        "title": "DataCollectionResultCommonModel"
      },
      "DeleteChapterResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the studio chapter deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteChapterResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteDubbingResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the dubbing project. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteDubbingResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteHistoryItemResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with http code 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteHistoryItemResponse",
        "example": {
          "status": "ok"
        }
      },
      "DeleteProjectResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the studio project deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteProjectResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteSampleResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the sample deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteSampleResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteVoiceResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the voice deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteVoiceResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteVoiceSampleResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the voice sample deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteVoiceSampleResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteWorkspaceGroupMemberResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the workspace group member deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteWorkspaceGroupMemberResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteWorkspaceInviteResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the workspace invite deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteWorkspaceInviteResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteWorkspaceMemberResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the workspace member deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteWorkspaceMemberResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DependentAvailableAgentIdentifier": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "const": "available",
            "title": "Type",
            "default": "available"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at_unix_secs",
          "access_level"
        ],
        "title": "DependentAvailableAgentIdentifier"
      },
      "DependentAvailableToolIdentifier": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "const": "available",
            "title": "Type",
            "default": "available"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at_unix_secs",
          "access_level"
        ],
        "title": "DependentAvailableToolIdentifier"
      },
      "DependentPhoneNumberIdentifier": {
        "properties": {
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "provider": {
            "$ref": "#/components/schemas/TelephonyProvider"
          }
        },
        "type": "object",
        "required": [
          "phone_number_id",
          "phone_number",
          "label",
          "provider"
        ],
        "title": "DependentPhoneNumberIdentifier"
      },
      "DependentUnknownAgentIdentifier": {
        "properties": {
          "type": {
            "type": "string",
            "const": "unknown",
            "title": "Type",
            "default": "unknown"
          }
        },
        "type": "object",
        "title": "DependentUnknownAgentIdentifier",
        "description": "A model that represents an agent dependent on a knowledge base/tools\nto which the user has no direct access."
      },
      "DependentUnknownToolIdentifier": {
        "properties": {
          "type": {
            "type": "string",
            "const": "unknown",
            "title": "Type",
            "default": "unknown"
          }
        },
        "type": "object",
        "title": "DependentUnknownToolIdentifier",
        "description": "A model that represents an tool dependent on a knowledge base/tools\nto which the user has no direct access."
      },
      "DetailedMusicResponse": {
        "properties": {
          "composition_plan": {
            "$ref": "#/components/schemas/MusicPrompt",
            "description": "The composition plan used to generate the song"
          },
          "song_metadata": {
            "$ref": "#/components/schemas/SongMetadata",
            "description": "The metadata of the generated song"
          }
        },
        "type": "object",
        "required": [
          "composition_plan",
          "song_metadata"
        ],
        "title": "DetailedMusicResponse",
        "description": "Response model for structured music generation endpoint",
        "example": {
          "composition_plan": {
            "negative_global_styles": [
              "metal",
              "hip-hop",
              "country"
            ],
            "positive_global_styles": [
              "pop",
              "rock",
              "jazz"
            ],
            "sections": [
              {
                "duration_ms": 10000,
                "lines": [
                  "Verse 1 lyrics"
                ],
                "negative_local_styles": [
                  "metal",
                  "hip-hop",
                  "country"
                ],
                "positive_local_styles": [
                  "pop",
                  "rock",
                  "jazz"
                ],
                "section_name": "Verse 1"
              }
            ]
          },
          "song_metadata": {
            "description": "My Song Description",
            "genres": [
              "pop",
              "rock",
              "jazz"
            ],
            "is_explicit": false,
            "languages": [
              "en",
              "fr"
            ],
            "title": "My Song"
          }
        }
      },
      "DialogueInput": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text to be converted into speech."
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the voice to be used for the generation."
          }
        },
        "type": "object",
        "required": [
          "text",
          "voice_id"
        ],
        "title": "DialogueInput"
      },
      "DialogueInputResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text of the dialogue input line."
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the voice used for this dialogue input line."
          },
          "voice_name": {
            "type": "string",
            "title": "Voice Name",
            "description": "The name of the voice used for this dialogue input line."
          }
        },
        "type": "object",
        "required": [
          "text",
          "voice_id",
          "voice_name"
        ],
        "title": "DialogueInputResponseModel"
      },
      "DoDubbingResponseModel": {
        "properties": {
          "dubbing_id": {
            "type": "string",
            "title": "Dubbing Id",
            "description": "The ID of the dubbing project."
          },
          "expected_duration_sec": {
            "type": "number",
            "title": "Expected Duration Sec",
            "description": "The expected duration of the dubbing project in seconds."
          }
        },
        "type": "object",
        "required": [
          "dubbing_id",
          "expected_duration_sec"
        ],
        "title": "DoDubbingResponseModel",
        "example": {
          "dubbing_id": "21m00Tcm4TlvDq8ikWAM",
          "expected_duration_sec": 127.5
        }
      },
      "DocumentUsageModeEnum": {
        "type": "string",
        "enum": [
          "prompt",
          "auto"
        ],
        "title": "DocumentUsageModeEnum"
      },
      "DocxExportOptions": {
        "properties": {
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          },
          "format": {
            "type": "string",
            "const": "docx",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "type": "object",
        "required": [
          "format"
        ],
        "title": "DocxExportOptions"
      },
      "DubbedSegment": {
        "properties": {
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "subtitles": {
            "items": {
              "$ref": "#/components/schemas/SegmentSubtitleFrame"
            },
            "type": "array",
            "title": "Subtitles"
          },
          "audio_stale": {
            "type": "boolean",
            "title": "Audio Stale"
          },
          "media_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DubbingMediaReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time",
          "text",
          "subtitles",
          "audio_stale",
          "media_ref"
        ],
        "title": "DubbedSegment"
      },
      "DubbingMediaMetadata": {
        "properties": {
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "The content type of the media."
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the media in seconds."
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "duration"
        ],
        "title": "DubbingMediaMetadata"
      },
      "DubbingMediaReference": {
        "properties": {
          "src": {
            "type": "string",
            "title": "Src"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name"
          },
          "random_path_slug": {
            "type": "string",
            "title": "Random Path Slug"
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs"
          },
          "is_audio": {
            "type": "boolean",
            "title": "Is Audio"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "src",
          "content_type",
          "bucket_name",
          "random_path_slug",
          "duration_secs",
          "is_audio",
          "url"
        ],
        "title": "DubbingMediaReference"
      },
      "DubbingMetadataPageResponseModel": {
        "properties": {
          "dubs": {
            "items": {
              "$ref": "#/components/schemas/DubbingMetadataResponse"
            },
            "type": "array",
            "title": "Dubs"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "dubs",
          "next_cursor",
          "has_more"
        ],
        "title": "DubbingMetadataPageResponseModel"
      },
      "DubbingMetadataResponse": {
        "properties": {
          "dubbing_id": {
            "type": "string",
            "title": "Dubbing Id",
            "description": "The ID of the dubbing project."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the dubbing project."
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the dubbing project. Either 'dubbed', 'dubbing' or 'failed'."
          },
          "target_languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Target Languages",
            "description": "The target languages of the dubbing project."
          },
          "editable": {
            "type": "boolean",
            "title": "Editable",
            "description": "Whether this dubbing project is editable in Dubbing Studio.",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp this dub was created."
          },
          "media_metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DubbingMediaMetadata"
              },
              {
                "type": "null"
              }
            ],
            "description": "The media metadata of the dubbing project."
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Optional error message if the dubbing project failed."
          }
        },
        "type": "object",
        "required": [
          "dubbing_id",
          "name",
          "status",
          "target_languages",
          "created_at"
        ],
        "title": "DubbingMetadataResponse",
        "example": {
          "created_at": "2025-07-15T14:49:41.149000",
          "dubbing_id": "21m00Tcm4TlvDq8ikWAM",
          "editable": true,
          "media_metadata": {
            "content_type": "video/mp4",
            "duration": 127.5
          },
          "name": "My Dubbing Project",
          "status": "dubbed",
          "target_languages": [
            "es",
            "fr",
            "de"
          ]
        }
      },
      "DubbingRenderResponseModel": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "render_id": {
            "type": "string",
            "title": "Render Id"
          }
        },
        "type": "object",
        "required": [
          "version",
          "render_id"
        ],
        "title": "DubbingRenderResponseModel"
      },
      "DubbingResource": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "source_language": {
            "type": "string",
            "title": "Source Language"
          },
          "target_languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Target Languages"
          },
          "input": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "background": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "foreground": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "speaker_tracks": {
            "additionalProperties": {
              "$ref": "#/components/schemas/SpeakerTrack"
            },
            "type": "object",
            "title": "Speaker Tracks"
          },
          "speaker_segments": {
            "additionalProperties": {
              "$ref": "#/components/schemas/SpeakerSegment"
            },
            "type": "object",
            "title": "Speaker Segments"
          },
          "renders": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Render"
            },
            "type": "object",
            "title": "Renders"
          }
        },
        "type": "object",
        "required": [
          "id",
          "version",
          "source_language",
          "target_languages",
          "input",
          "background",
          "foreground",
          "speaker_tracks",
          "speaker_segments",
          "renders"
        ],
        "title": "DubbingResource"
      },
      "DynamicVariableAssignment": {
        "properties": {
          "source": {
            "type": "string",
            "const": "response",
            "title": "Source",
            "description": "The source to extract the value from. Currently only 'response' is supported.",
            "default": "response"
          },
          "dynamic_variable": {
            "type": "string",
            "title": "Dynamic Variable",
            "description": "The name of the dynamic variable to assign the extracted value to"
          },
          "value_path": {
            "type": "string",
            "title": "Value Path",
            "description": "Dot notation path to extract the value from the source (e.g., 'user.name' or 'data.0.id')"
          }
        },
        "type": "object",
        "required": [
          "dynamic_variable",
          "value_path"
        ],
        "title": "DynamicVariableAssignment",
        "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables.",
        "example": {
          "dynamic_variable": "user_name",
          "source": "response",
          "value_path": "user.name"
        }
      },
      "DynamicVariableUpdateCommonModel": {
        "properties": {
          "variable_name": {
            "type": "string",
            "title": "Variable Name"
          },
          "old_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Value"
          },
          "new_value": {
            "type": "string",
            "title": "New Value"
          },
          "updated_at": {
            "type": "number",
            "title": "Updated At"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "tool_request_id": {
            "type": "string",
            "title": "Tool Request Id"
          }
        },
        "type": "object",
        "required": [
          "variable_name",
          "old_value",
          "new_value",
          "updated_at",
          "tool_name",
          "tool_request_id"
        ],
        "title": "DynamicVariableUpdateCommonModel",
        "description": "Tracks a dynamic variable update that occurred during tool execution."
      },
      "DynamicVariablesConfig": {
        "properties": {
          "dynamic_variable_placeholders": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "type": "object",
            "title": "Dynamic Variable Placeholders",
            "description": "A dictionary of dynamic variable placeholders and their values"
          }
        },
        "type": "object",
        "title": "DynamicVariablesConfig",
        "example": {
          "dynamic_variable_placeholders": {
            "user_name": "John Doe"
          }
        }
      },
      "EditChapterResponseModel": {
        "properties": {
          "chapter": {
            "$ref": "#/components/schemas/ChapterWithContentResponseModel"
          }
        },
        "type": "object",
        "required": [
          "chapter"
        ],
        "title": "EditChapterResponseModel"
      },
      "EditProjectResponseModel": {
        "properties": {
          "project": {
            "$ref": "#/components/schemas/ProjectResponseModel"
          }
        },
        "type": "object",
        "required": [
          "project"
        ],
        "title": "EditProjectResponseModel"
      },
      "EditVoiceResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the voice edit request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "EditVoiceResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "EditVoiceSettingsResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the voice settings edit request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "EditVoiceSettingsResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "EmbedVariant": {
        "type": "string",
        "enum": [
          "tiny",
          "compact",
          "full",
          "expandable"
        ],
        "title": "EmbedVariant"
      },
      "EmbeddingModelEnum": {
        "type": "string",
        "enum": [
          "e5_mistral_7b_instruct",
          "multilingual_e5_large_instruct"
        ],
        "title": "EmbeddingModelEnum"
      },
      "EndCallToolConfig": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "end_call",
            "title": "System Tool Type",
            "default": "end_call"
          }
        },
        "type": "object",
        "title": "EndCallToolConfig"
      },
      "EndCallToolResultModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "end_call_success",
            "title": "Result Type",
            "default": "end_call_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          }
        },
        "type": "object",
        "title": "EndCallToolResultModel"
      },
      "EvaluationSettings": {
        "properties": {
          "criteria": {
            "items": {
              "$ref": "#/components/schemas/PromptEvaluationCriteria"
            },
            "type": "array",
            "title": "Criteria",
            "description": "Individual criteria that the agent should be evaluated against"
          }
        },
        "type": "object",
        "title": "EvaluationSettings",
        "description": "Settings to evaluate an agent's performance.\nAgents are evaluated against a set of criteria, with success being defined as meeting some combination of those criteria."
      },
      "EvaluationSuccessResult": {
        "type": "string",
        "enum": [
          "success",
          "failure",
          "unknown"
        ],
        "title": "EvaluationSuccessResult"
      },
      "ExportOptions": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/SegmentedJsonExportOptions"
          },
          {
            "$ref": "#/components/schemas/DocxExportOptions"
          },
          {
            "$ref": "#/components/schemas/PdfExportOptions"
          },
          {
            "$ref": "#/components/schemas/TxtExportOptions"
          },
          {
            "$ref": "#/components/schemas/HtmlExportOptions"
          },
          {
            "$ref": "#/components/schemas/SrtExportOptions"
          }
        ],
        "title": "ExportOptions",
        "discriminator": {
          "propertyName": "format",
          "mapping": {
            "docx": "#/components/schemas/DocxExportOptions",
            "html": "#/components/schemas/HtmlExportOptions",
            "pdf": "#/components/schemas/PdfExportOptions",
            "segmented_json": "#/components/schemas/SegmentedJsonExportOptions",
            "srt": "#/components/schemas/SrtExportOptions",
            "txt": "#/components/schemas/TxtExportOptions"
          }
        }
      },
      "ExtendedSubscriptionResponseModel": {
        "properties": {
          "tier": {
            "type": "string",
            "title": "Tier",
            "description": "The tier of the user's subscription."
          },
          "character_count": {
            "type": "integer",
            "title": "Character Count",
            "description": "The number of characters used by the user."
          },
          "character_limit": {
            "type": "integer",
            "title": "Character Limit",
            "description": "The maximum number of characters allowed in the current billing period."
          },
          "max_character_limit_extension": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Character Limit Extension",
            "description": "Maximum number of characters that the character limit can be exceeded by. Managed by the workspace admin."
          },
          "can_extend_character_limit": {
            "type": "boolean",
            "title": "Can Extend Character Limit",
            "description": "Whether the user can extend their character limit."
          },
          "allowed_to_extend_character_limit": {
            "type": "boolean",
            "title": "Allowed To Extend Character Limit",
            "description": "Whether the user is allowed to extend their character limit."
          },
          "next_character_count_reset_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Character Count Reset Unix",
            "description": "The Unix timestamp of the next character count reset."
          },
          "voice_slots_used": {
            "type": "integer",
            "title": "Voice Slots Used",
            "description": "The number of voice slots used by the user."
          },
          "professional_voice_slots_used": {
            "type": "integer",
            "title": "Professional Voice Slots Used",
            "description": "The number of professional voice slots used by the workspace/user if single seat."
          },
          "voice_limit": {
            "type": "integer",
            "title": "Voice Limit",
            "description": "The maximum number of voice slots allowed for the user."
          },
          "max_voice_add_edits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Voice Add Edits",
            "description": "The maximum number of voice add/edits allowed for the user."
          },
          "voice_add_edit_counter": {
            "type": "integer",
            "title": "Voice Add Edit Counter",
            "description": "The number of voice add/edits used by the user."
          },
          "professional_voice_limit": {
            "type": "integer",
            "title": "Professional Voice Limit",
            "description": "The maximum number of professional voices allowed for the user."
          },
          "can_extend_voice_limit": {
            "type": "boolean",
            "title": "Can Extend Voice Limit",
            "description": "Whether the user can extend their voice limit."
          },
          "can_use_instant_voice_cloning": {
            "type": "boolean",
            "title": "Can Use Instant Voice Cloning",
            "description": "Whether the user can use instant voice cloning."
          },
          "can_use_professional_voice_cloning": {
            "type": "boolean",
            "title": "Can Use Professional Voice Cloning",
            "description": "Whether the user can use professional voice cloning."
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "usd",
                  "eur"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "The currency of the user's subscription."
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatusType",
            "description": "The status of the user's subscription."
          },
          "billing_period": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "monthly_period",
                  "annual_period"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Billing Period",
            "description": "The billing period of the user's subscription."
          },
          "character_refresh_period": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "monthly_period",
                  "annual_period"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Refresh Period",
            "description": "The character refresh period of the user's subscription."
          },
          "next_invoice": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InvoiceResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The next invoice for the user."
          },
          "has_open_invoices": {
            "type": "boolean",
            "title": "Has Open Invoices",
            "description": "Whether the user has open invoices."
          }
        },
        "type": "object",
        "required": [
          "tier",
          "character_count",
          "character_limit",
          "max_character_limit_extension",
          "can_extend_character_limit",
          "allowed_to_extend_character_limit",
          "voice_slots_used",
          "professional_voice_slots_used",
          "voice_limit",
          "voice_add_edit_counter",
          "professional_voice_limit",
          "can_extend_voice_limit",
          "can_use_instant_voice_cloning",
          "can_use_professional_voice_cloning",
          "status",
          "has_open_invoices"
        ],
        "title": "ExtendedSubscriptionResponseModel",
        "example": {
          "allowed_to_extend_character_limit": true,
          "billing_period": "monthly_period",
          "can_extend_character_limit": true,
          "can_extend_voice_limit": true,
          "can_use_instant_voice_cloning": true,
          "can_use_professional_voice_cloning": true,
          "character_count": 1000,
          "character_limit": 10000,
          "character_refresh_period": "monthly_period",
          "currency": "usd",
          "has_open_invoices": false,
          "max_character_limit_extension": 10000,
          "next_character_count_reset_unix": 1738356858,
          "next_invoice": {
            "amount_due_cents": 1000,
            "next_payment_attempt_unix": 1738356858
          },
          "professional_voice_limit": 1,
          "professional_voice_slots_used": 0,
          "status": "active",
          "tier": "starter",
          "voice_add_edit_counter": 0,
          "voice_limit": 10,
          "voice_slots_used": 1
        }
      },
      "FeatureStatusCommonModel": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": false
          },
          "used": {
            "type": "boolean",
            "title": "Used",
            "default": false
          }
        },
        "type": "object",
        "title": "FeatureStatusCommonModel"
      },
      "FeaturesUsageCommonModel": {
        "properties": {
          "language_detection": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "transfer_to_agent": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "transfer_to_number": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "multivoice": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "dtmf_tones": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "external_mcp_servers": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "pii_zrm_workspace": {
            "type": "boolean",
            "title": "Pii Zrm Workspace",
            "default": false
          },
          "pii_zrm_agent": {
            "type": "boolean",
            "title": "Pii Zrm Agent",
            "default": false
          },
          "tool_dynamic_variable_updates": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "is_livekit": {
            "type": "boolean",
            "title": "Is Livekit",
            "default": false
          },
          "voicemail_detection": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          }
        },
        "type": "object",
        "title": "FeaturesUsageCommonModel"
      },
      "FeedbackResponseModel": {
        "properties": {
          "thumbs_up": {
            "type": "boolean",
            "title": "Thumbs Up",
            "description": "Whether the user liked the generated item."
          },
          "feedback": {
            "type": "string",
            "title": "Feedback",
            "description": "The feedback text provided by the user."
          },
          "emotions": {
            "type": "boolean",
            "title": "Emotions",
            "description": "Whether the user provided emotions."
          },
          "inaccurate_clone": {
            "type": "boolean",
            "title": "Inaccurate Clone",
            "description": "Whether the user thinks the clone is inaccurate."
          },
          "glitches": {
            "type": "boolean",
            "title": "Glitches",
            "description": "Whether the user thinks there are glitches in the audio."
          },
          "audio_quality": {
            "type": "boolean",
            "title": "Audio Quality",
            "description": "Whether the user thinks the audio quality is good."
          },
          "other": {
            "type": "boolean",
            "title": "Other",
            "description": "Whether the user provided other feedback."
          },
          "review_status": {
            "type": "string",
            "title": "Review Status",
            "description": "The review status of the item. Defaults to 'not_reviewed'.",
            "default": "not_reviewed"
          }
        },
        "type": "object",
        "required": [
          "thumbs_up",
          "feedback",
          "emotions",
          "inaccurate_clone",
          "glitches",
          "audio_quality",
          "other"
        ],
        "title": "FeedbackResponseModel",
        "example": {
          "audio_quality": true,
          "emotions": true,
          "feedback": "This is an example of test feedback.",
          "glitches": true,
          "inaccurate_clone": false,
          "other": false,
          "review_status": "not_reviewed",
          "thumbs_up": true
        }
      },
      "FineTuningResponseModel": {
        "properties": {
          "is_allowed_to_fine_tune": {
            "type": "boolean",
            "title": "Is Allowed To Fine Tune",
            "description": "Whether the user is allowed to fine-tune the voice."
          },
          "state": {
            "additionalProperties": {
              "type": "string",
              "enum": [
                "not_started",
                "queued",
                "fine_tuning",
                "fine_tuned",
                "failed",
                "delayed"
              ]
            },
            "type": "object",
            "title": "State",
            "description": "The state of the fine-tuning process for each model."
          },
          "verification_failures": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Verification Failures",
            "description": "List of verification failures in the fine-tuning process."
          },
          "verification_attempts_count": {
            "type": "integer",
            "title": "Verification Attempts Count",
            "description": "The number of verification attempts in the fine-tuning process."
          },
          "manual_verification_requested": {
            "type": "boolean",
            "title": "Manual Verification Requested",
            "description": "Whether a manual verification was requested for the fine-tuning process."
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The language of the fine-tuning process."
          },
          "progress": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress",
            "description": "The progress of the fine-tuning process."
          },
          "message": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "The message of the fine-tuning process."
          },
          "dataset_duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Duration Seconds",
            "description": "The duration of the dataset in seconds."
          },
          "verification_attempts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VerificationAttemptResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verification Attempts",
            "description": "The number of verification attempts."
          },
          "slice_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slice Ids",
            "description": "List of slice IDs."
          },
          "manual_verification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ManualVerificationResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The manual verification of the fine-tuning process."
          },
          "max_verification_attempts": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Verification Attempts",
            "description": "The maximum number of verification attempts."
          },
          "next_max_verification_attempts_reset_unix_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Max Verification Attempts Reset Unix Ms",
            "description": "The next maximum verification attempts reset time in Unix milliseconds."
          }
        },
        "type": "object",
        "required": [
          "is_allowed_to_fine_tune",
          "state",
          "verification_failures",
          "verification_attempts_count",
          "manual_verification_requested"
        ],
        "title": "FineTuningResponseModel",
        "example": {
          "is_allowed_to_fine_tune": true,
          "manual_verification_requested": false,
          "state": {
            "eleven_multilingual_v2": "fine_tuned"
          },
          "verification_attempts_count": 2,
          "verification_failures": []
        }
      },
      "ForcedAlignmentCharacterResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The character that was transcribed."
          },
          "start": {
            "type": "number",
            "title": "Start",
            "description": "The start time of the character in seconds."
          },
          "end": {
            "type": "number",
            "title": "End",
            "description": "The end time of the character in seconds."
          }
        },
        "type": "object",
        "required": [
          "text",
          "start",
          "end"
        ],
        "title": "ForcedAlignmentCharacterResponseModel",
        "description": "Model representing a single character with its timing information from the aligner.",
        "example": {
          "end": 0.02,
          "start": 0,
          "text": "H"
        }
      },
      "ForcedAlignmentResponseModel": {
        "properties": {
          "characters": {
            "items": {
              "$ref": "#/components/schemas/ForcedAlignmentCharacterResponseModel"
            },
            "type": "array",
            "title": "Characters",
            "description": "List of characters with their timing information."
          },
          "words": {
            "items": {
              "$ref": "#/components/schemas/ForcedAlignmentWordResponseModel"
            },
            "type": "array",
            "title": "Words",
            "description": "List of words with their timing information."
          },
          "loss": {
            "type": "number",
            "title": "Loss",
            "description": "The average alignment loss/confidence score for the entire transcript, calculated from all characters."
          }
        },
        "type": "object",
        "required": [
          "characters",
          "words",
          "loss"
        ],
        "title": "ForcedAlignmentResponseModel",
        "description": "Model representing the response from the aligner service."
      },
      "ForcedAlignmentWordResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The word that was transcribed."
          },
          "start": {
            "type": "number",
            "title": "Start",
            "description": "The start time of the word in seconds."
          },
          "end": {
            "type": "number",
            "title": "End",
            "description": "The end time of the word in seconds."
          },
          "loss": {
            "type": "number",
            "title": "Loss",
            "description": "The average alignment loss/confidence score for this word, calculated from its constituent characters."
          }
        },
        "type": "object",
        "required": [
          "text",
          "start",
          "end",
          "loss"
        ],
        "title": "ForcedAlignmentWordResponseModel",
        "description": "Model representing a single word with its timing information from the aligner.",
        "example": {
          "end": 1.02,
          "loss": 0.12,
          "start": 0,
          "text": "Hello"
        }
      },
      "GetAgentEmbedResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "widget_config": {
            "$ref": "#/components/schemas/WidgetConfigResponseModel"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "widget_config"
        ],
        "title": "GetAgentEmbedResponseModel"
      },
      "GetAgentKnowledgebaseSizeResponseModel": {
        "properties": {
          "number_of_pages": {
            "type": "number",
            "title": "Number Of Pages"
          }
        },
        "type": "object",
        "required": [
          "number_of_pages"
        ],
        "title": "GetAgentKnowledgebaseSizeResponseModel"
      },
      "GetAgentLinkResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id",
            "description": "The ID of the agent"
          },
          "token": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationTokenDBModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The token data for the agent"
          }
        },
        "type": "object",
        "required": [
          "agent_id"
        ],
        "title": "GetAgentLinkResponseModel",
        "example": {
          "agent_id": "J3Pbu5gP6NNKBscdCdwB"
        }
      },
      "GetAgentResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id",
            "description": "The ID of the agent"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the agent"
          },
          "conversation_config": {
            "$ref": "#/components/schemas/ConversationalConfigAPIModel-Output",
            "description": "The conversation configuration of the agent"
          },
          "metadata": {
            "$ref": "#/components/schemas/AgentMetadataResponseModel",
            "description": "The metadata of the agent"
          },
          "platform_settings": {
            "$ref": "#/components/schemas/AgentPlatformSettingsResponseModel",
            "description": "The platform settings of the agent"
          },
          "phone_numbers": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GetPhoneNumberTwilioResponseModel"
                },
                {
                  "$ref": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                }
              ],
              "discriminator": {
                "propertyName": "provider",
                "mapping": {
                  "sip_trunk": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel",
                  "twilio": "#/components/schemas/GetPhoneNumberTwilioResponseModel"
                }
              }
            },
            "type": "array",
            "title": "Phone Numbers",
            "description": "The phone numbers of the agent"
          },
          "workflow": {
            "title": "Workflow",
            "description": "The workflow of the agent"
          },
          "access_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceAccessInfo"
              },
              {
                "type": "null"
              }
            ],
            "description": "The access information of the agent for the user"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Agent tags used to categorize the agent"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "name",
          "conversation_config",
          "metadata"
        ],
        "title": "GetAgentResponseModel",
        "example": {
          "agent_id": "J3Pbu5gP6NNKBscdCdwB",
          "name": "My Agent"
        }
      },
      "GetAgentsPageResponseModel": {
        "properties": {
          "agents": {
            "items": {
              "$ref": "#/components/schemas/AgentSummaryResponseModel"
            },
            "type": "array",
            "title": "Agents",
            "description": "A list of agents and their metadata"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor",
            "description": "The next cursor to paginate through the agents"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more agents to paginate through"
          }
        },
        "type": "object",
        "required": [
          "agents",
          "has_more"
        ],
        "title": "GetAgentsPageResponseModel",
        "example": {
          "agents": [
            {
              "access_info": {
                "creator_email": "john@example.com",
                "creator_name": "John Doe",
                "is_creator": true,
                "role": "admin"
              },
              "agent_id": "J3Pbu5gP6NNKBscdCdwB",
              "created_at_unix_secs": 1716153600,
              "name": "My Agent",
              "tags": [
                "Customer Support",
                "Technical Help",
                "Eleven"
              ]
            }
          ],
          "has_more": false,
          "next_cursor": "123"
        }
      },
      "GetAudioNativeProjectSettingsResponseModel": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "Whether the project is enabled."
          },
          "snapshot_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Snapshot Id",
            "description": "The ID of the latest snapshot of the project."
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudioNativeProjectSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The settings of the project."
          }
        },
        "type": "object",
        "required": [
          "enabled"
        ],
        "title": "GetAudioNativeProjectSettingsResponseModel",
        "example": {
          "enabled": true,
          "settings": {
            "audio_path": "audio/my_project.mp3",
            "audio_url": "https://example.com/audio/my_project.mp3",
            "author": "John Doe",
            "background_color": "#FFFFFF",
            "image": "https://example.com/image.jpg",
            "sessionization": 1,
            "small": false,
            "status": "ready",
            "text_color": "#000000",
            "title": "My Project"
          },
          "snapshot_id": "JBFqnCBsd6RMkjVDRZzb"
        }
      },
      "GetChaptersResponseModel": {
        "properties": {
          "chapters": {
            "items": {
              "$ref": "#/components/schemas/ChapterResponseModel"
            },
            "type": "array",
            "title": "Chapters"
          }
        },
        "type": "object",
        "required": [
          "chapters"
        ],
        "title": "GetChaptersResponseModel"
      },
      "GetConvAIDashboardSettingsResponseModel": {
        "properties": {
          "charts": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardCallSuccessChartModel"
                },
                {
                  "$ref": "#/components/schemas/DashboardCriteriaChartModel"
                },
                {
                  "$ref": "#/components/schemas/DashboardDataCollectionChartModel"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "call_success": "#/components/schemas/DashboardCallSuccessChartModel",
                  "criteria": "#/components/schemas/DashboardCriteriaChartModel",
                  "data_collection": "#/components/schemas/DashboardDataCollectionChartModel"
                }
              }
            },
            "type": "array",
            "maxItems": 4,
            "title": "Charts"
          }
        },
        "type": "object",
        "title": "GetConvAIDashboardSettingsResponseModel"
      },
      "GetConvAISettingsResponseModel": {
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
              },
              {
                "type": "null"
              }
            ]
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          },
          "can_use_mcp_servers": {
            "type": "boolean",
            "title": "Can Use Mcp Servers",
            "description": "Whether the workspace can use MCP servers",
            "default": false
          },
          "rag_retention_period_days": {
            "type": "integer",
            "maximum": 30,
            "exclusiveMinimum": 0,
            "title": "Rag Retention Period Days",
            "default": 10
          }
        },
        "type": "object",
        "title": "GetConvAISettingsResponseModel"
      },
      "GetConversationResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id"
          },
          "status": {
            "type": "string",
            "enum": [
              "initiated",
              "in-progress",
              "processing",
              "done",
              "failed"
            ],
            "title": "Status"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "transcript": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel-Output"
            },
            "type": "array",
            "title": "Transcript"
          },
          "metadata": {
            "$ref": "#/components/schemas/ConversationHistoryMetadataCommonModel"
          },
          "analysis": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationHistoryAnalysisCommonModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "conversation_initiation_client_data": {
            "$ref": "#/components/schemas/ConversationInitiationClientDataRequest-Output"
          },
          "has_audio": {
            "type": "boolean",
            "title": "Has Audio"
          },
          "has_user_audio": {
            "type": "boolean",
            "title": "Has User Audio"
          },
          "has_response_audio": {
            "type": "boolean",
            "title": "Has Response Audio"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "conversation_id",
          "status",
          "transcript",
          "metadata",
          "has_audio",
          "has_user_audio",
          "has_response_audio"
        ],
        "title": "GetConversationResponseModel"
      },
      "GetConversationsPageResponseModel": {
        "properties": {
          "conversations": {
            "items": {
              "$ref": "#/components/schemas/ConversationSummaryResponseModel"
            },
            "type": "array",
            "title": "Conversations"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "conversations",
          "has_more"
        ],
        "title": "GetConversationsPageResponseModel"
      },
      "GetKnowledgeBaseDependentAgentsResponseModel": {
        "properties": {
          "agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Agents"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "agents",
          "has_more"
        ],
        "title": "GetKnowledgeBaseDependentAgentsResponseModel"
      },
      "GetKnowledgeBaseFileResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "supported_usages": {
            "items": {
              "$ref": "#/components/schemas/DocumentUsageModeEnum"
            },
            "type": "array",
            "title": "Supported Usages"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "extracted_inner_html": {
            "type": "string",
            "title": "Extracted Inner Html"
          },
          "type": {
            "type": "string",
            "const": "file",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "metadata",
          "supported_usages",
          "access_info",
          "extracted_inner_html",
          "type"
        ],
        "title": "GetKnowledgeBaseFileResponseModel"
      },
      "GetKnowledgeBaseListResponseModel": {
        "properties": {
          "documents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GetKnowledgeBaseSummaryURLResponseModel"
                },
                {
                  "$ref": "#/components/schemas/GetKnowledgeBaseSummaryFileResponseModel"
                },
                {
                  "$ref": "#/components/schemas/GetKnowledgeBaseSummaryTextResponseModel"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "file": "#/components/schemas/GetKnowledgeBaseSummaryFileResponseModel",
                  "text": "#/components/schemas/GetKnowledgeBaseSummaryTextResponseModel",
                  "url": "#/components/schemas/GetKnowledgeBaseSummaryURLResponseModel"
                }
              }
            },
            "type": "array",
            "title": "Documents"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "documents",
          "has_more"
        ],
        "title": "GetKnowledgeBaseListResponseModel"
      },
      "GetKnowledgeBaseSummaryFileResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "supported_usages": {
            "items": {
              "$ref": "#/components/schemas/DocumentUsageModeEnum"
            },
            "type": "array",
            "title": "Supported Usages"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "dependent_agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Dependent Agents"
          },
          "type": {
            "type": "string",
            "const": "file",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "metadata",
          "supported_usages",
          "access_info",
          "dependent_agents",
          "type"
        ],
        "title": "GetKnowledgeBaseSummaryFileResponseModel"
      },
      "GetKnowledgeBaseSummaryTextResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "supported_usages": {
            "items": {
              "$ref": "#/components/schemas/DocumentUsageModeEnum"
            },
            "type": "array",
            "title": "Supported Usages"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "dependent_agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Dependent Agents"
          },
          "type": {
            "type": "string",
            "const": "text",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "metadata",
          "supported_usages",
          "access_info",
          "dependent_agents",
          "type"
        ],
        "title": "GetKnowledgeBaseSummaryTextResponseModel"
      },
      "GetKnowledgeBaseSummaryURLResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "supported_usages": {
            "items": {
              "$ref": "#/components/schemas/DocumentUsageModeEnum"
            },
            "type": "array",
            "title": "Supported Usages"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "dependent_agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Dependent Agents"
          },
          "type": {
            "type": "string",
            "const": "url",
            "title": "Type"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "metadata",
          "supported_usages",
          "access_info",
          "dependent_agents",
          "type",
          "url"
        ],
        "title": "GetKnowledgeBaseSummaryURLResponseModel"
      },
      "GetKnowledgeBaseTextResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "supported_usages": {
            "items": {
              "$ref": "#/components/schemas/DocumentUsageModeEnum"
            },
            "type": "array",
            "title": "Supported Usages"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "extracted_inner_html": {
            "type": "string",
            "title": "Extracted Inner Html"
          },
          "type": {
            "type": "string",
            "const": "text",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "metadata",
          "supported_usages",
          "access_info",
          "extracted_inner_html",
          "type"
        ],
        "title": "GetKnowledgeBaseTextResponseModel"
      },
      "GetKnowledgeBaseURLResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "supported_usages": {
            "items": {
              "$ref": "#/components/schemas/DocumentUsageModeEnum"
            },
            "type": "array",
            "title": "Supported Usages"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "extracted_inner_html": {
            "type": "string",
            "title": "Extracted Inner Html"
          },
          "type": {
            "type": "string",
            "const": "url",
            "title": "Type"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "metadata",
          "supported_usages",
          "access_info",
          "extracted_inner_html",
          "type",
          "url"
        ],
        "title": "GetKnowledgeBaseURLResponseModel"
      },
      "GetLibraryVoicesResponseModel": {
        "properties": {
          "voices": {
            "items": {
              "$ref": "#/components/schemas/LibraryVoiceResponseModel"
            },
            "type": "array",
            "title": "Voices",
            "description": "The list of shared voices"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more shared voices in subsequent pages."
          },
          "last_sort_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sort Id"
          }
        },
        "type": "object",
        "required": [
          "voices",
          "has_more"
        ],
        "title": "GetLibraryVoicesResponseModel",
        "example": {
          "has_more": false,
          "voices": [
            {
              "accent": "american",
              "age": "young",
              "category": "professional",
              "cloned_by_count": 11,
              "date_unix": 1714423232,
              "description": "Perfectly calm, neutral and strong voice. Great for a young female protagonist.",
              "descriptive": "calm",
              "featured": false,
              "free_users_allowed": true,
              "gender": "Female",
              "language": "en",
              "live_moderation_enabled": false,
              "name": "Alita",
              "play_api_usage_character_count_1y": 12852,
              "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3",
              "public_owner_id": "63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f",
              "rate": 1,
              "usage_character_count_1y": 12852,
              "usage_character_count_7d": 12852,
              "use_case": "characters_animation",
              "verified_languages": [
                {
                  "accent": "american",
                  "language": "en",
                  "locale": "en-US",
                  "model_id": "eleven_multilingual_v2",
                  "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3"
                }
              ],
              "voice_id": "sB1b5zUrxQVAFl2PhZFp"
            }
          ]
        }
      },
      "GetPhoneNumberInboundSIPTrunkConfigResponseModel": {
        "properties": {
          "allowed_addresses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Allowed Addresses",
            "description": "List of IP addresses that are allowed to use the trunk. Each item in the list can be an individual IP address or a Classless Inter-Domain Routing notation representing a CIDR block."
          },
          "allowed_numbers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Numbers",
            "description": "List of phone numbers that are allowed to use the trunk."
          },
          "media_encryption": {
            "$ref": "#/components/schemas/SIPMediaEncryptionEnum"
          },
          "has_auth_credentials": {
            "type": "boolean",
            "title": "Has Auth Credentials",
            "description": "Whether authentication credentials are configured"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "SIP trunk username (if available)"
          }
        },
        "type": "object",
        "required": [
          "allowed_addresses",
          "allowed_numbers",
          "media_encryption",
          "has_auth_credentials"
        ],
        "title": "GetPhoneNumberInboundSIPTrunkConfigResponseModel"
      },
      "GetPhoneNumberOutboundSIPTrunkConfigResponseModel": {
        "properties": {
          "address": {
            "type": "string",
            "title": "Address",
            "description": "Hostname or IP the SIP INVITE is sent to"
          },
          "transport": {
            "$ref": "#/components/schemas/SIPTrunkTransportEnum",
            "description": "Protocol to use for SIP transport"
          },
          "media_encryption": {
            "$ref": "#/components/schemas/SIPMediaEncryptionEnum",
            "description": "Whether or not to encrypt media (data layer)."
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Headers",
            "description": "SIP headers for INVITE request"
          },
          "has_auth_credentials": {
            "type": "boolean",
            "title": "Has Auth Credentials",
            "description": "Whether authentication credentials are configured"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "SIP trunk username (if available)"
          },
          "has_outbound_trunk": {
            "type": "boolean",
            "title": "Has Outbound Trunk",
            "description": "Whether a LiveKit SIP outbound trunk is configured",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "address",
          "transport",
          "media_encryption",
          "has_auth_credentials"
        ],
        "title": "GetPhoneNumberOutboundSIPTrunkConfigResponseModel",
        "description": "SIP Trunk configuration details for a phone number"
      },
      "GetPhoneNumberSIPTrunkResponseModel": {
        "properties": {
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Phone number"
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "Label for the phone number"
          },
          "supports_inbound": {
            "type": "boolean",
            "title": "Supports Inbound",
            "description": "Whether this phone number supports inbound calls",
            "default": true
          },
          "supports_outbound": {
            "type": "boolean",
            "title": "Supports Outbound",
            "description": "Whether this phone number supports outbound calls",
            "default": true
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id",
            "description": "The ID of the phone number"
          },
          "assigned_agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberAgentInfo"
              },
              {
                "type": "null"
              }
            ],
            "description": "The agent that is assigned to the phone number"
          },
          "provider": {
            "type": "string",
            "const": "sip_trunk",
            "title": "Provider",
            "description": "Phone provider",
            "default": "sip_trunk"
          },
          "provider_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GetPhoneNumberOutboundSIPTrunkConfigResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "deprecated": true
          },
          "outbound_trunk": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GetPhoneNumberOutboundSIPTrunkConfigResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration of the Outbound SIP trunk - if configured."
          },
          "inbound_trunk": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GetPhoneNumberInboundSIPTrunkConfigResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration of the Inbound SIP trunk - if configured."
          }
        },
        "type": "object",
        "required": [
          "phone_number",
          "label",
          "phone_number_id"
        ],
        "title": "GetPhoneNumberSIPTrunkResponseModel",
        "example": {
          "label": "Sales Team",
          "phone_number": "+1987654321",
          "phone_number_id": "phone_456",
          "provider": "sip_trunk",
          "supports_inbound": true,
          "supports_outbound": true
        }
      },
      "GetPhoneNumberTwilioResponseModel": {
        "properties": {
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Phone number"
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "Label for the phone number"
          },
          "supports_inbound": {
            "type": "boolean",
            "title": "Supports Inbound",
            "description": "Whether this phone number supports inbound calls",
            "default": true
          },
          "supports_outbound": {
            "type": "boolean",
            "title": "Supports Outbound",
            "description": "Whether this phone number supports outbound calls",
            "default": true
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id",
            "description": "The ID of the phone number"
          },
          "assigned_agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberAgentInfo"
              },
              {
                "type": "null"
              }
            ],
            "description": "The agent that is assigned to the phone number"
          },
          "provider": {
            "type": "string",
            "const": "twilio",
            "title": "Provider",
            "description": "Phone provider",
            "default": "twilio"
          }
        },
        "type": "object",
        "required": [
          "phone_number",
          "label",
          "phone_number_id"
        ],
        "title": "GetPhoneNumberTwilioResponseModel",
        "example": {
          "label": "Customer Support",
          "phone_number": "+1234567890",
          "phone_number_id": "phone_123",
          "provider": "twilio",
          "supports_inbound": true,
          "supports_outbound": true
        }
      },
      "GetProjectsResponseModel": {
        "properties": {
          "projects": {
            "items": {
              "$ref": "#/components/schemas/ProjectResponseModel"
            },
            "type": "array",
            "title": "Projects",
            "description": "A list of projects with their metadata."
          }
        },
        "type": "object",
        "required": [
          "projects"
        ],
        "title": "GetProjectsResponseModel",
        "example": {
          "projects": [
            {
              "access_level": "viewer",
              "author": "John Doe",
              "can_be_downloaded": true,
              "content_type": "Novel",
              "cover_image_url": "https://example.com/cover.jpg",
              "create_date_unix": 1714204800,
              "creation_meta": {
                "creation_progress": 0.5,
                "status": "pending",
                "type": "blank"
              },
              "default_model_id": "eleven_multilingual_v2",
              "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
              "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
              "description": "This is a description of my project.",
              "fiction": "fiction",
              "genres": [
                "Novel",
                "Short Story"
              ],
              "isbn_number": "978-90-274-3964-2",
              "language": "en",
              "last_conversion_date_unix": 1714204800,
              "mature_content": false,
              "name": "My Project",
              "original_publication_date": "2025-01-01",
              "project_id": "aw1NgEzBg83R7vgmiJt6",
              "quality_check_on": false,
              "quality_check_on_when_bulk_convert": false,
              "state": "default",
              "target_audience": "young adult",
              "title": "My Project",
              "volume_normalization": true
            }
          ]
        }
      },
      "GetPronunciationDictionariesMetadataResponseModel": {
        "properties": {
          "pronunciation_dictionaries": {
            "items": {
              "$ref": "#/components/schemas/GetPronunciationDictionaryMetadataResponseModel"
            },
            "type": "array",
            "title": "Pronunciation Dictionaries",
            "description": "A list of pronunciation dictionaries and their metadata."
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor",
            "description": "The next cursor to use for pagination."
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more pronunciation dictionaries to fetch."
          }
        },
        "type": "object",
        "required": [
          "pronunciation_dictionaries",
          "has_more"
        ],
        "title": "GetPronunciationDictionariesMetadataResponseModel",
        "example": {
          "has_more": false,
          "next_cursor": "5xM3yVvZQKV0EfqQpLr2",
          "pronunciation_dictionaries": [
            {
              "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
              "creation_time_unix": 1714156800,
              "description": "This is a test dictionary",
              "id": "5xM3yVvZQKV0EfqQpLrJ",
              "latest_version_id": "5xM3yVvZQKV0EfqQpLr2",
              "latest_version_rules_num": 2,
              "name": "My Dictionary",
              "permission_on_resource": "admin"
            }
          ]
        }
      },
      "GetPronunciationDictionaryMetadataResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the pronunciation dictionary."
          },
          "latest_version_id": {
            "type": "string",
            "title": "Latest Version Id",
            "description": "The ID of the latest version of the pronunciation dictionary."
          },
          "latest_version_rules_num": {
            "type": "integer",
            "title": "Latest Version Rules Num",
            "description": "The number of rules in the latest version of the pronunciation dictionary."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the pronunciation dictionary."
          },
          "permission_on_resource": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission On Resource",
            "description": "The permission on the resource of the pronunciation dictionary."
          },
          "created_by": {
            "type": "string",
            "title": "Created By",
            "description": "The user ID of the creator of the pronunciation dictionary."
          },
          "creation_time_unix": {
            "type": "integer",
            "title": "Creation Time Unix",
            "description": "The creation time of the pronunciation dictionary in Unix timestamp."
          },
          "archived_time_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived Time Unix",
            "description": "The archive time of the pronunciation dictionary in Unix timestamp."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the pronunciation dictionary."
          }
        },
        "type": "object",
        "required": [
          "id",
          "latest_version_id",
          "latest_version_rules_num",
          "name",
          "permission_on_resource",
          "created_by",
          "creation_time_unix"
        ],
        "title": "GetPronunciationDictionaryMetadataResponseModel",
        "example": {
          "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
          "creation_time_unix": 1714156800,
          "description": "This is a test dictionary",
          "id": "5xM3yVvZQKV0EfqQpLrJ",
          "latest_version_id": "5xM3yVvZQKV0EfqQpLr2",
          "latest_version_rules_num": 2,
          "name": "My Dictionary",
          "permission_on_resource": "admin"
        }
      },
      "GetSpeechHistoryResponseModel": {
        "properties": {
          "history": {
            "items": {
              "$ref": "#/components/schemas/SpeechHistoryItemResponseModel"
            },
            "type": "array",
            "title": "History",
            "description": "A list of speech history items."
          },
          "last_history_item_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last History Item Id",
            "description": "The ID of the last history item."
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more history items to fetch."
          }
        },
        "type": "object",
        "required": [
          "history",
          "has_more"
        ],
        "title": "GetSpeechHistoryResponseModel",
        "example": {
          "has_more": true,
          "history": [
            {
              "character_count_change_from": 17189,
              "character_count_change_to": 17231,
              "content_type": "audio/mpeg",
              "date_unix": 1714650306,
              "history_item_id": "ja9xsmfGhxYcymxGcOGB",
              "model_id": "eleven_multilingual_v2",
              "request_id": "BF0BZg4IwLGBlaVjv9Im",
              "settings": {
                "similarity_boost": 0.5,
                "stability": 0.71,
                "style": 0,
                "use_speaker_boost": true
              },
              "source": "TTS",
              "state": "created",
              "text": "Hello, world!",
              "voice_category": "premade",
              "voice_id": "21m00Tcm4TlvDq8ikWAM",
              "voice_name": "Rachel"
            }
          ],
          "last_history_item_id": "ja9xsmfGhxYcymxGcOGB"
        }
      },
      "GetToolDependentAgentsResponseModel": {
        "properties": {
          "agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Agents"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "agents",
          "has_more"
        ],
        "title": "GetToolDependentAgentsResponseModel"
      },
      "GetVoicesResponseModel": {
        "properties": {
          "voices": {
            "items": {
              "$ref": "#/components/schemas/VoiceResponseModel"
            },
            "type": "array",
            "title": "Voices",
            "description": "A list of available voices."
          }
        },
        "type": "object",
        "required": [
          "voices"
        ],
        "title": "GetVoicesResponseModel",
        "example": {
          "voices": [
            {
              "available_for_tiers": [
                "creator",
                "enterprise"
              ],
              "category": "professional",
              "description": "A warm, expressive voice with a touch of humor.",
              "fine_tuning": {
                "is_allowed_to_fine_tune": true,
                "manual_verification_requested": false,
                "state": {
                  "eleven_multilingual_v2": "fine_tuned"
                },
                "verification_attempts_count": 2,
                "verification_failures": []
              },
              "high_quality_base_model_ids": [
                "eleven_v2_flash",
                "eleven_flash_v2",
                "eleven_turbo_v2_5",
                "eleven_multilingual_v2",
                "eleven_v2_5_flash",
                "eleven_flash_v2_5",
                "eleven_turbo_v2"
              ],
              "is_legacy": false,
              "is_mixed": false,
              "is_owner": false,
              "labels": {
                "accent": "American",
                "age": "middle-aged",
                "description": "expressive",
                "gender": "female",
                "use_case": "social media"
              },
              "name": "Rachel",
              "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
              "settings": {
                "similarity_boost": 1,
                "speed": 1,
                "stability": 1,
                "style": 0,
                "use_speaker_boost": true
              },
              "sharing": {
                "category": "professional",
                "cloned_by_count": 50,
                "date_unix": 1714204800,
                "description": "A female voice with a soft and friendly tone.",
                "disable_at_unix": 1714204800,
                "enabled_in_library": true,
                "featured": true,
                "financial_rewards_enabled": true,
                "free_users_allowed": true,
                "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                "labels": {
                  "accent": "American",
                  "gender": "female"
                },
                "liked_by_count": 100,
                "live_moderation_enabled": true,
                "moderation_check": {
                  "captcha_checks": [
                    0.95,
                    0.98
                  ],
                  "captcha_ids": [
                    "captcha1",
                    "captcha2"
                  ],
                  "date_checked_unix": 1714204800,
                  "description_check": true,
                  "description_value": "A female voice with a soft and friendly tone.",
                  "name_check": true,
                  "name_value": "Rachel",
                  "sample_checks": [
                    0.95,
                    0.98
                  ],
                  "sample_ids": [
                    "sample1",
                    "sample2"
                  ]
                },
                "name": "Rachel",
                "notice_period": 30,
                "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
                "rate": 0.05,
                "reader_app_enabled": true,
                "reader_restricted_on": [
                  {
                    "resource_id": "FCwhRBWXzGAHq8TQ4Fs18",
                    "resource_type": "read"
                  }
                ],
                "review_status": "allowed",
                "status": "enabled",
                "voice_mixing_allowed": false,
                "whitelisted_emails": [
                  "example@example.com"
                ]
              },
              "verified_languages": [
                {
                  "accent": "american",
                  "language": "en",
                  "locale": "en-US",
                  "model_id": "eleven_multilingual_v2",
                  "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3"
                }
              ],
              "voice_id": "21m00Tcm4TlvDq8ikWAM",
              "voice_verification": {
                "is_verified": true,
                "language": "en",
                "requires_verification": false,
                "verification_attempts": [
                  {
                    "accepted": true,
                    "date_unix": 1714204800,
                    "levenshtein_distance": 2,
                    "recording": {
                      "mime_type": "audio/mpeg",
                      "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                      "size_bytes": 1000000,
                      "transcription": "Hello, how are you?",
                      "upload_date_unix": 1714204800
                    },
                    "similarity": 0.95,
                    "text": "Hello, how are you?"
                  }
                ],
                "verification_attempts_count": 0,
                "verification_failures": []
              }
            }
          ]
        }
      },
      "GetVoicesV2ResponseModel": {
        "properties": {
          "voices": {
            "items": {
              "$ref": "#/components/schemas/VoiceResponseModel"
            },
            "type": "array",
            "title": "Voices"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "next_page_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page Token"
          }
        },
        "type": "object",
        "required": [
          "voices",
          "has_more",
          "total_count"
        ],
        "title": "GetVoicesV2ResponseModel"
      },
      "GetWorkspaceSecretsResponseModel": {
        "properties": {
          "secrets": {
            "items": {
              "$ref": "#/components/schemas/ConvAIWorkspaceStoredSecretConfig"
            },
            "type": "array",
            "title": "Secrets"
          }
        },
        "type": "object",
        "required": [
          "secrets"
        ],
        "title": "GetWorkspaceSecretsResponseModel"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HistoryAlignmentResponseModel": {
        "properties": {
          "characters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Characters",
            "description": "The characters in the alignment."
          },
          "character_start_times_seconds": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Character Start Times Seconds",
            "description": "The start times of the characters in seconds."
          },
          "character_end_times_seconds": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Character End Times Seconds",
            "description": "The end times of the characters in seconds."
          }
        },
        "type": "object",
        "required": [
          "characters",
          "character_start_times_seconds",
          "character_end_times_seconds"
        ],
        "title": "HistoryAlignmentResponseModel"
      },
      "HistoryAlignmentsResponseModel": {
        "properties": {
          "alignment": {
            "$ref": "#/components/schemas/HistoryAlignmentResponseModel",
            "description": "The alignment of the text."
          },
          "normalized_alignment": {
            "$ref": "#/components/schemas/HistoryAlignmentResponseModel",
            "description": "The normalized alignment of the text."
          }
        },
        "type": "object",
        "required": [
          "alignment",
          "normalized_alignment"
        ],
        "title": "HistoryAlignmentsResponseModel"
      },
      "HtmlExportOptions": {
        "properties": {
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          },
          "format": {
            "type": "string",
            "const": "html",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "type": "object",
        "required": [
          "format"
        ],
        "title": "HtmlExportOptions"
      },
      "ImageAvatar": {
        "properties": {
          "type": {
            "type": "string",
            "const": "image",
            "title": "Type",
            "description": "The type of the avatar",
            "default": "image"
          },
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL of the avatar",
            "default": ""
          }
        },
        "type": "object",
        "title": "ImageAvatar"
      },
      "InboundSIPTrunkConfigRequestModel": {
        "properties": {
          "allowed_addresses": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Addresses",
            "description": "List of IP addresses that are allowed to use the trunk. Each item in the list can be an individual IP address or a Classless Inter-Domain Routing notation representing a CIDR block."
          },
          "allowed_numbers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Numbers",
            "description": "List of phone numbers that are allowed to use the trunk."
          },
          "media_encryption": {
            "$ref": "#/components/schemas/SIPMediaEncryptionEnum",
            "description": "Whether or not to encrypt media (data layer).",
            "default": "allowed"
          },
          "credentials": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SIPTrunkCredentialsRequestModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional digest authentication credentials (username/password)."
          }
        },
        "type": "object",
        "title": "InboundSIPTrunkConfigRequestModel"
      },
      "IntegrationType": {
        "type": "string",
        "enum": [
          "mcp_server",
          "mcp_integration"
        ],
        "title": "IntegrationType"
      },
      "InvoiceResponseModel": {
        "properties": {
          "amount_due_cents": {
            "type": "integer",
            "title": "Amount Due Cents",
            "description": "The amount due in cents."
          },
          "discount_percent_off": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount Percent Off",
            "description": "The discount applied to the invoice. E.g. [20.0f] for 20% off."
          },
          "discount_amount_off": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount Amount Off",
            "description": "The discount applied to the invoice. E.g. [20.0f] for 20% off."
          },
          "next_payment_attempt_unix": {
            "type": "integer",
            "title": "Next Payment Attempt Unix",
            "description": "The Unix timestamp of the next payment attempt."
          }
        },
        "type": "object",
        "required": [
          "amount_due_cents",
          "next_payment_attempt_unix"
        ],
        "title": "InvoiceResponseModel",
        "example": {
          "amount_due_cents": 1000,
          "next_payment_attempt_unix": 1738356858
        }
      },
      "KnowledgeBaseDocumentChunkResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "content"
        ],
        "title": "KnowledgeBaseDocumentChunkResponseModel"
      },
      "KnowledgeBaseDocumentMetadataResponseModel": {
        "properties": {
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "last_updated_at_unix_secs": {
            "type": "integer",
            "title": "Last Updated At Unix Secs"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes"
          }
        },
        "type": "object",
        "required": [
          "created_at_unix_secs",
          "last_updated_at_unix_secs",
          "size_bytes"
        ],
        "title": "KnowledgeBaseDocumentMetadataResponseModel"
      },
      "KnowledgeBaseDocumentType": {
        "type": "string",
        "enum": [
          "file",
          "url",
          "text"
        ],
        "title": "KnowledgeBaseDocumentType"
      },
      "KnowledgeBaseLocator": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentType",
            "description": "The type of the knowledge base"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the knowledge base"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the knowledge base"
          },
          "usage_mode": {
            "$ref": "#/components/schemas/DocumentUsageModeEnum",
            "description": "The usage mode of the knowledge base",
            "default": "auto"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "id"
        ],
        "title": "KnowledgeBaseLocator",
        "example": {
          "id": "123",
          "name": "My Knowledge Base",
          "type": "file",
          "usage_mode": "auto"
        }
      },
      "LLM": {
        "type": "string",
        "enum": [
          "gpt-4o-mini",
          "gpt-4o",
          "gpt-4",
          "gpt-4-turbo",
          "gpt-4.1",
          "gpt-4.1-mini",
          "gpt-4.1-nano",
          "gpt-5",
          "gpt-5-mini",
          "gpt-5-nano",
          "gpt-3.5-turbo",
          "gemini-1.5-pro",
          "gemini-1.5-flash",
          "gemini-2.0-flash",
          "gemini-2.0-flash-lite",
          "gemini-2.5-flash-lite",
          "gemini-2.5-flash",
          "claude-sonnet-4",
          "claude-3-7-sonnet",
          "claude-3-5-sonnet",
          "claude-3-5-sonnet-v1",
          "claude-3-haiku",
          "grok-beta",
          "custom-llm",
          "qwen3-4b",
          "qwen3-30b-a3b",
          "watt-tool-8b",
          "watt-tool-70b",
          "gemini-2.5-flash-preview-05-20",
          "gemini-2.5-flash-preview-04-17",
          "gemini-2.5-flash-lite-preview-06-17",
          "gemini-2.0-flash-lite-001",
          "gemini-2.0-flash-001",
          "gemini-1.5-flash-002",
          "gemini-1.5-flash-001",
          "gemini-1.5-pro-002",
          "gemini-1.5-pro-001",
          "claude-sonnet-4@20250514",
          "claude-3-7-sonnet@20250219",
          "claude-3-5-sonnet@20240620",
          "claude-3-5-sonnet-v2@20241022",
          "claude-3-haiku@20240307",
          "gpt-5-2025-08-07",
          "gpt-5-mini-2025-08-07",
          "gpt-5-nano-2025-08-07",
          "gpt-4.1-2025-04-14",
          "gpt-4.1-mini-2025-04-14",
          "gpt-4.1-nano-2025-04-14",
          "gpt-4o-mini-2024-07-18",
          "gpt-4o-2024-11-20",
          "gpt-4o-2024-08-06",
          "gpt-4o-2024-05-13",
          "gpt-4-0613",
          "gpt-4-0314",
          "gpt-4-turbo-2024-04-09",
          "gpt-3.5-turbo-0125",
          "gpt-3.5-turbo-1106"
        ],
        "title": "LLM"
      },
      "LLMCategoryUsage": {
        "properties": {
          "irreversible_generation": {
            "$ref": "#/components/schemas/LLMUsage-Output"
          },
          "initiated_generation": {
            "$ref": "#/components/schemas/LLMUsage-Output"
          }
        },
        "type": "object",
        "title": "LLMCategoryUsage"
      },
      "LLMInputOutputTokensUsage": {
        "properties": {
          "input": {
            "$ref": "#/components/schemas/LLMTokensCategoryUsage"
          },
          "input_cache_read": {
            "$ref": "#/components/schemas/LLMTokensCategoryUsage"
          },
          "input_cache_write": {
            "$ref": "#/components/schemas/LLMTokensCategoryUsage"
          },
          "output_total": {
            "$ref": "#/components/schemas/LLMTokensCategoryUsage"
          }
        },
        "type": "object",
        "title": "LLMInputOutputTokensUsage"
      },
      "LLMTokensCategoryUsage": {
        "properties": {
          "tokens": {
            "type": "integer",
            "title": "Tokens",
            "default": 0
          },
          "price": {
            "type": "number",
            "title": "Price",
            "default": 0
          }
        },
        "type": "object",
        "title": "LLMTokensCategoryUsage"
      },
      "LLMUsage-Input": {
        "properties": {
          "model_usage": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LLMInputOutputTokensUsage"
            },
            "propertyNames": {
              "$ref": "#/components/schemas/LLM"
            },
            "type": "object",
            "title": "Model Usage"
          }
        },
        "type": "object",
        "title": "LLMUsage"
      },
      "LLMUsage-Output": {
        "properties": {
          "model_usage": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LLMInputOutputTokensUsage"
            },
            "propertyNames": {
              "$ref": "#/components/schemas/LLM"
            },
            "type": "object",
            "title": "Model Usage"
          }
        },
        "type": "object",
        "title": "LLMUsage"
      },
      "LLMUsageCalculatorLLMResponseModel": {
        "properties": {
          "llm": {
            "$ref": "#/components/schemas/LLM"
          },
          "price_per_minute": {
            "type": "number",
            "title": "Price Per Minute"
          }
        },
        "type": "object",
        "required": [
          "llm",
          "price_per_minute"
        ],
        "title": "LLMUsageCalculatorLLMResponseModel"
      },
      "LLMUsageCalculatorPublicRequestModel": {
        "properties": {
          "prompt_length": {
            "type": "integer",
            "title": "Prompt Length",
            "description": "Length of the prompt in characters."
          },
          "number_of_pages": {
            "type": "integer",
            "title": "Number Of Pages",
            "description": "Pages of content in PDF documents or URLs in the agent's knowledge base."
          },
          "rag_enabled": {
            "type": "boolean",
            "title": "Rag Enabled",
            "description": "Whether RAG is enabled."
          }
        },
        "type": "object",
        "required": [
          "prompt_length",
          "number_of_pages",
          "rag_enabled"
        ],
        "title": "LLMUsageCalculatorPublicRequestModel"
      },
      "LLMUsageCalculatorRequestModel": {
        "properties": {
          "prompt_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Length",
            "description": "Length of the prompt in characters."
          },
          "number_of_pages": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number Of Pages",
            "description": "Pages of content in pdf documents OR urls in agent's Knowledge Base."
          },
          "rag_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rag Enabled",
            "description": "Whether RAG is enabled."
          }
        },
        "type": "object",
        "title": "LLMUsageCalculatorRequestModel"
      },
      "LLMUsageCalculatorResponseModel": {
        "properties": {
          "llm_prices": {
            "items": {
              "$ref": "#/components/schemas/LLMUsageCalculatorLLMResponseModel"
            },
            "type": "array",
            "title": "Llm Prices"
          }
        },
        "type": "object",
        "required": [
          "llm_prices"
        ],
        "title": "LLMUsageCalculatorResponseModel"
      },
      "LanguageAddedResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "LanguageAddedResponse"
      },
      "LanguageDetectionToolConfig": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "language_detection",
            "title": "System Tool Type",
            "default": "language_detection"
          }
        },
        "type": "object",
        "title": "LanguageDetectionToolConfig"
      },
      "LanguageDetectionToolResultModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "language_detection_success",
            "title": "Result Type",
            "default": "language_detection_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          }
        },
        "type": "object",
        "title": "LanguageDetectionToolResultModel"
      },
      "LanguagePreset-Input": {
        "properties": {
          "overrides": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Input",
            "description": "The overrides for the language preset"
          },
          "first_message_translation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguagePresetTranslation"
              },
              {
                "type": "null"
              }
            ],
            "description": "The translation of the first message"
          }
        },
        "type": "object",
        "required": [
          "overrides"
        ],
        "title": "LanguagePreset"
      },
      "LanguagePreset-Output": {
        "properties": {
          "overrides": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Output",
            "description": "The overrides for the language preset"
          },
          "first_message_translation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguagePresetTranslation"
              },
              {
                "type": "null"
              }
            ],
            "description": "The translation of the first message"
          }
        },
        "type": "object",
        "required": [
          "overrides"
        ],
        "title": "LanguagePreset"
      },
      "LanguagePresetTranslation": {
        "properties": {
          "source_hash": {
            "type": "string",
            "title": "Source Hash"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "source_hash",
          "text"
        ],
        "title": "LanguagePresetTranslation"
      },
      "LanguageResponseModel": {
        "properties": {
          "language_id": {
            "type": "string",
            "title": "Language Id",
            "description": "The unique identifier of the language."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the language."
          }
        },
        "type": "object",
        "required": [
          "language_id",
          "name"
        ],
        "title": "LanguageResponseModel",
        "example": {
          "language_id": "en",
          "name": "English"
        }
      },
      "LibraryVoiceResponseModel": {
        "properties": {
          "public_owner_id": {
            "type": "string",
            "title": "Public Owner Id",
            "description": "The public owner id of the voice."
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The id of the voice."
          },
          "date_unix": {
            "type": "integer",
            "title": "Date Unix",
            "description": "The date the voice was added to the library in Unix time."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the voice."
          },
          "accent": {
            "type": "string",
            "title": "Accent",
            "description": "The accent of the voice."
          },
          "gender": {
            "type": "string",
            "title": "Gender",
            "description": "The gender of the voice."
          },
          "age": {
            "type": "string",
            "title": "Age",
            "description": "The age of the voice."
          },
          "descriptive": {
            "type": "string",
            "title": "Descriptive",
            "description": "The descriptive of the voice."
          },
          "use_case": {
            "type": "string",
            "title": "Use Case",
            "description": "The use case of the voice."
          },
          "category": {
            "type": "string",
            "enum": [
              "generated",
              "cloned",
              "premade",
              "professional",
              "famous",
              "high_quality"
            ],
            "title": "Category",
            "description": "The category of the voice."
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The language of the voice."
          },
          "locale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locale",
            "description": "The locale of the voice."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the voice."
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url",
            "description": "The preview URL of the voice."
          },
          "usage_character_count_1y": {
            "type": "integer",
            "title": "Usage Character Count 1Y",
            "description": "The usage character count of the voice in the last year."
          },
          "usage_character_count_7d": {
            "type": "integer",
            "title": "Usage Character Count 7D",
            "description": "The usage character count of the voice in the last 7 days."
          },
          "play_api_usage_character_count_1y": {
            "type": "integer",
            "title": "Play Api Usage Character Count 1Y",
            "description": "The play API usage character count of the voice in the last year."
          },
          "cloned_by_count": {
            "type": "integer",
            "title": "Cloned By Count",
            "description": "The number of times the voice has been cloned."
          },
          "rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate",
            "description": "The rate multiplier of the voice."
          },
          "fiat_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiat Rate",
            "description": "The rate of the voice in USD per 1000 credits. null if default"
          },
          "free_users_allowed": {
            "type": "boolean",
            "title": "Free Users Allowed",
            "description": "Whether free users are allowed to use the voice."
          },
          "live_moderation_enabled": {
            "type": "boolean",
            "title": "Live Moderation Enabled",
            "description": "Whether live moderation is enabled for the voice."
          },
          "featured": {
            "type": "boolean",
            "title": "Featured",
            "description": "Whether the voice is featured."
          },
          "verified_languages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VerifiedVoiceLanguageResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verified Languages",
            "description": "The verified languages of the voice."
          },
          "notice_period": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notice Period",
            "description": "The notice period of the voice."
          },
          "instagram_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram Username",
            "description": "The Instagram username of the voice."
          },
          "twitter_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Twitter Username",
            "description": "The Twitter username of the voice."
          },
          "youtube_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Youtube Username",
            "description": "The YouTube username of the voice."
          },
          "tiktok_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tiktok Username",
            "description": "The TikTok username of the voice."
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "description": "The image URL of the voice."
          },
          "is_added_by_user": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Added By User",
            "description": "Whether the voice was added by the user."
          }
        },
        "type": "object",
        "required": [
          "public_owner_id",
          "voice_id",
          "date_unix",
          "name",
          "accent",
          "gender",
          "age",
          "descriptive",
          "use_case",
          "category",
          "usage_character_count_1y",
          "usage_character_count_7d",
          "play_api_usage_character_count_1y",
          "cloned_by_count",
          "free_users_allowed",
          "live_moderation_enabled",
          "featured"
        ],
        "title": "LibraryVoiceResponseModel",
        "example": {
          "accent": "american",
          "age": "young",
          "category": "professional",
          "cloned_by_count": 11,
          "date_unix": 1714423232,
          "description": "Perfectly calm, neutral and strong voice. Great for a young female protagonist.",
          "descriptive": "calm",
          "featured": false,
          "free_users_allowed": true,
          "gender": "Female",
          "language": "en",
          "live_moderation_enabled": false,
          "name": "Alita",
          "play_api_usage_character_count_1y": 12852,
          "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3",
          "public_owner_id": "63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f",
          "rate": 1,
          "usage_character_count_1y": 12852,
          "usage_character_count_7d": 12852,
          "use_case": "characters_animation",
          "verified_languages": [
            {
              "accent": "american",
              "language": "en",
              "locale": "en-US",
              "model_id": "eleven_multilingual_v2",
              "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3"
            }
          ],
          "voice_id": "sB1b5zUrxQVAFl2PhZFp"
        }
      },
      "ListMCPToolsResponseModel": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the operation was successful."
          },
          "tools": {
            "items": {
              "$ref": "#/components/schemas/Tool"
            },
            "type": "array",
            "title": "Tools",
            "description": "A list of tools available on the MCP server."
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "Error message if the operation was not successful."
          }
        },
        "type": "object",
        "required": [
          "success",
          "tools"
        ],
        "title": "ListMCPToolsResponseModel",
        "description": "Response model for testing tools available on an MCP server.",
        "example": {
          "success": true,
          "tools": [
            {
              "description": "Gets current weather conditions for a location.",
              "inputSchema": {
                "properties": {
                  "latitude": {
                    "description": "Latitude",
                    "type": "string"
                  },
                  "longitude": {
                    "description": "Longitude",
                    "type": "string"
                  }
                },
                "required": [
                  "latitude",
                  "longitude"
                ],
                "type": "object"
              },
              "name": "weather_by_zapier_get_current"
            },
            {
              "description": "Description of tool2",
              "inputSchema": {
                "properties": {},
                "type": "object"
              },
              "name": "tool2"
            }
          ]
        }
      },
      "LiteralJsonSchemaProperty": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "boolean",
              "string",
              "integer",
              "number"
            ],
            "title": "Type"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "The description of the property",
            "default": ""
          },
          "dynamic_variable": {
            "type": "string",
            "title": "Dynamic Variable",
            "description": "The dynamic variable of the property",
            "default": ""
          },
          "constant_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ],
            "title": "Constant Value",
            "description": "The constant value of the property",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "LiteralJsonSchemaProperty",
        "example": {
          "constant_value": "Constant value",
          "description": "My property",
          "dynamic_variable": "Dynamic variable",
          "type": "string"
        }
      },
      "MCPApprovalPolicy": {
        "type": "string",
        "enum": [
          "auto_approve_all",
          "require_approval_all",
          "require_approval_per_tool"
        ],
        "title": "MCPApprovalPolicy",
        "description": "Defines the MCP server-level approval policy for tool execution."
      },
      "MCPApprovalPolicyUpdateRequestModel": {
        "properties": {
          "approval_policy": {
            "$ref": "#/components/schemas/MCPApprovalPolicy",
            "description": "The approval mode to set for the MCP server"
          }
        },
        "type": "object",
        "required": [
          "approval_policy"
        ],
        "title": "MCPApprovalPolicyUpdateRequestModel",
        "description": "Request model for updating MCP Server approval mode."
      },
      "MCPServerConfig-Input": {
        "properties": {
          "approval_policy": {
            "$ref": "#/components/schemas/MCPApprovalPolicy",
            "default": "require_approval_all"
          },
          "tool_approval_hashes": {
            "items": {
              "$ref": "#/components/schemas/MCPToolApprovalHash"
            },
            "type": "array",
            "title": "Tool Approval Hashes",
            "description": "List of tool approval hashes for per-tool approval when approval_policy is REQUIRE_APPROVAL_PER_TOOL"
          },
          "transport": {
            "$ref": "#/components/schemas/MCPServerTransport",
            "description": "The transport type used to connect to the MCP server",
            "default": "SSE"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ConvAISecretLocator"
              }
            ],
            "title": "Url",
            "description": "The URL of the MCP server, if this contains a secret please store as a workspace secret, otherwise store as a plain string. Must use https"
          },
          "secret_token": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConvAISecretLocator"
              },
              {
                "$ref": "#/components/schemas/ConvAIUserSecretDBModel"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Token",
            "description": "The secret token (Authorization header) stored as a workspace secret or in-place secret"
          },
          "request_headers": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                }
              ]
            },
            "type": "object",
            "title": "Request Headers",
            "description": "The headers included in the request"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "url",
          "name"
        ],
        "title": "MCPServerConfig"
      },
      "MCPServerConfig-Output": {
        "properties": {
          "approval_policy": {
            "$ref": "#/components/schemas/MCPApprovalPolicy",
            "default": "require_approval_all"
          },
          "tool_approval_hashes": {
            "items": {
              "$ref": "#/components/schemas/MCPToolApprovalHash"
            },
            "type": "array",
            "title": "Tool Approval Hashes",
            "description": "List of tool approval hashes for per-tool approval when approval_policy is REQUIRE_APPROVAL_PER_TOOL"
          },
          "transport": {
            "$ref": "#/components/schemas/MCPServerTransport",
            "description": "The transport type used to connect to the MCP server",
            "default": "SSE"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ConvAISecretLocator"
              }
            ],
            "title": "Url",
            "description": "The URL of the MCP server, if this contains a secret please store as a workspace secret, otherwise store as a plain string. Must use https"
          },
          "secret_token": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConvAISecretLocator"
              },
              {
                "$ref": "#/components/schemas/ConvAIUserSecretDBModel"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Token",
            "description": "The secret token (Authorization header) stored as a workspace secret or in-place secret"
          },
          "request_headers": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                }
              ]
            },
            "type": "object",
            "title": "Request Headers",
            "description": "The headers included in the request"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "url",
          "name"
        ],
        "title": "MCPServerConfig"
      },
      "MCPServerMetadataResponseModel": {
        "properties": {
          "created_at": {
            "type": "integer",
            "title": "Created At"
          },
          "owner_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner User Id"
          }
        },
        "type": "object",
        "required": [
          "created_at"
        ],
        "title": "MCPServerMetadataResponseModel"
      },
      "MCPServerRequestModel": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/MCPServerConfig-Input",
            "description": "Configuration details for the MCP Server."
          }
        },
        "type": "object",
        "required": [
          "config"
        ],
        "title": "MCPServerRequestModel",
        "description": "Request model for creating/updating an MCP Server configuration."
      },
      "MCPServerResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "config": {
            "$ref": "#/components/schemas/MCPServerConfig-Output"
          },
          "access_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceAccessInfo"
              },
              {
                "type": "null"
              }
            ],
            "description": "The access information of the MCP Server"
          },
          "dependent_agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Dependent Agents",
            "description": "List of agents that depend on this MCP Server."
          },
          "metadata": {
            "$ref": "#/components/schemas/MCPServerMetadataResponseModel",
            "description": "The metadata of the MCP Server"
          }
        },
        "type": "object",
        "required": [
          "id",
          "config",
          "metadata"
        ],
        "title": "MCPServerResponseModel",
        "description": "Response model representing an MCP Server configuration."
      },
      "MCPServerTransport": {
        "type": "string",
        "enum": [
          "SSE",
          "STREAMABLE_HTTP"
        ],
        "title": "MCPServerTransport",
        "description": "Supported MCP server transport types."
      },
      "MCPServersResponseModel": {
        "properties": {
          "mcp_servers": {
            "items": {
              "$ref": "#/components/schemas/MCPServerResponseModel"
            },
            "type": "array",
            "title": "Mcp Servers"
          }
        },
        "type": "object",
        "required": [
          "mcp_servers"
        ],
        "title": "MCPServersResponseModel",
        "description": "Response model for a list of MCP Server configurations."
      },
      "MCPToolAddApprovalRequestModel": {
        "properties": {
          "tool_name": {
            "type": "string",
            "title": "Tool Name",
            "description": "The name of the MCP tool"
          },
          "tool_description": {
            "type": "string",
            "title": "Tool Description",
            "description": "The description of the MCP tool"
          },
          "input_schema": {
            "type": "object",
            "title": "Input Schema",
            "description": "The input schema of the MCP tool (the schema defined on the MCP server before ElevenLabs does any extra processing)"
          },
          "approval_policy": {
            "$ref": "#/components/schemas/MCPToolApprovalPolicy",
            "description": "The tool-level approval policy",
            "default": "requires_approval"
          }
        },
        "type": "object",
        "required": [
          "tool_name",
          "tool_description"
        ],
        "title": "MCPToolAddApprovalRequestModel",
        "description": "Request model for adding approval for a single MCP tool."
      },
      "MCPToolApprovalHash": {
        "properties": {
          "tool_name": {
            "type": "string",
            "title": "Tool Name",
            "description": "The name of the MCP tool"
          },
          "tool_hash": {
            "type": "string",
            "title": "Tool Hash",
            "description": "SHA256 hash of the tool's parameters and description"
          },
          "approval_policy": {
            "$ref": "#/components/schemas/MCPToolApprovalPolicy",
            "description": "The approval policy for this tool",
            "default": "requires_approval"
          }
        },
        "type": "object",
        "required": [
          "tool_name",
          "tool_hash"
        ],
        "title": "MCPToolApprovalHash",
        "description": "Model for storing tool approval hashes for per-tool approval."
      },
      "MCPToolApprovalPolicy": {
        "type": "string",
        "enum": [
          "auto_approved",
          "requires_approval"
        ],
        "title": "MCPToolApprovalPolicy",
        "description": "Defines the tool-level approval policy."
      },
      "MCPToolConfig-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "mcp",
            "title": "Type",
            "default": "mcp"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete.",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType",
            "description": "The type of MCP tool"
          },
          "parameters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for any parameters the LLM needs to provide to the MCP tool."
          },
          "approval_policy": {
            "$ref": "#/components/schemas/MCPApprovalPolicy",
            "description": "The approval policy for the MCP tool",
            "default": "require_approval_all"
          },
          "mcp_tool_name": {
            "type": "string",
            "title": "Mcp Tool Name",
            "description": "The name of the MCP tool to call"
          },
          "mcp_tool_description": {
            "type": "string",
            "title": "Mcp Tool Description",
            "description": "The description of the MCP tool to call"
          },
          "mcp_server_id": {
            "type": "string",
            "title": "Mcp Server Id",
            "description": "The id of the MCP server to call"
          },
          "mcp_server_name": {
            "type": "string",
            "title": "Mcp Server Name",
            "description": "The name of the MCP server to call"
          },
          "mcp_input_schema": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mcp Input Schema",
            "description": "Original inputSchema dict for consistent hashing (pure MCP format)"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "integration_type",
          "mcp_tool_name",
          "mcp_tool_description",
          "mcp_server_id",
          "mcp_server_name"
        ],
        "title": "MCPToolConfig",
        "description": "An MCP tool configuration that can be used to call MCP servers",
        "x-fern-ignore": true
      },
      "MCPToolConfig-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "mcp",
            "title": "Type",
            "default": "mcp"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete.",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType",
            "description": "The type of MCP tool"
          },
          "parameters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for any parameters the LLM needs to provide to the MCP tool."
          },
          "approval_policy": {
            "$ref": "#/components/schemas/MCPApprovalPolicy",
            "description": "The approval policy for the MCP tool",
            "default": "require_approval_all"
          },
          "mcp_tool_name": {
            "type": "string",
            "title": "Mcp Tool Name",
            "description": "The name of the MCP tool to call"
          },
          "mcp_tool_description": {
            "type": "string",
            "title": "Mcp Tool Description",
            "description": "The description of the MCP tool to call"
          },
          "mcp_server_id": {
            "type": "string",
            "title": "Mcp Server Id",
            "description": "The id of the MCP server to call"
          },
          "mcp_server_name": {
            "type": "string",
            "title": "Mcp Server Name",
            "description": "The name of the MCP server to call"
          },
          "mcp_input_schema": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mcp Input Schema",
            "description": "Original inputSchema dict for consistent hashing (pure MCP format)"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "integration_type",
          "mcp_tool_name",
          "mcp_tool_description",
          "mcp_server_id",
          "mcp_server_name"
        ],
        "title": "MCPToolConfig",
        "description": "An MCP tool configuration that can be used to call MCP servers",
        "x-fern-ignore": true
      },
      "ManualVerificationFileResponseModel": {
        "properties": {
          "file_id": {
            "type": "string",
            "title": "File Id",
            "description": "The ID of the file."
          },
          "file_name": {
            "type": "string",
            "title": "File Name",
            "description": "The name of the file."
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type",
            "description": "The MIME type of the file."
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes",
            "description": "The size of the file in bytes."
          },
          "upload_date_unix": {
            "type": "integer",
            "title": "Upload Date Unix",
            "description": "The date of the file in Unix time."
          }
        },
        "type": "object",
        "required": [
          "file_id",
          "file_name",
          "mime_type",
          "size_bytes",
          "upload_date_unix"
        ],
        "title": "ManualVerificationFileResponseModel",
        "example": {
          "file_id": "CwhRBWXzGAHq8TQ4Fs18",
          "file_name": "file.mp3",
          "mime_type": "audio/mpeg",
          "size_bytes": 1000000,
          "upload_date_unix": 1714204800
        }
      },
      "ManualVerificationResponseModel": {
        "properties": {
          "extra_text": {
            "type": "string",
            "title": "Extra Text",
            "description": "The extra text of the manual verification."
          },
          "request_time_unix": {
            "type": "integer",
            "title": "Request Time Unix",
            "description": "The date of the manual verification in Unix time."
          },
          "files": {
            "items": {
              "$ref": "#/components/schemas/ManualVerificationFileResponseModel"
            },
            "type": "array",
            "title": "Files",
            "description": "The files of the manual verification."
          }
        },
        "type": "object",
        "required": [
          "extra_text",
          "request_time_unix",
          "files"
        ],
        "title": "ManualVerificationResponseModel",
        "example": {
          "extra_text": "Please verify the voice is that of a female.",
          "files": [
            {
              "file_id": "CwhRBWXzGAHq8TQ4Fs18",
              "file_name": "file.mp3",
              "mime_type": "audio/mpeg",
              "size_bytes": 1000000,
              "upload_date_unix": 1714204800
            }
          ],
          "request_time_unix": 1714204800
        }
      },
      "MetricRecord": {
        "properties": {
          "elapsed_time": {
            "type": "number",
            "title": "Elapsed Time"
          }
        },
        "type": "object",
        "required": [
          "elapsed_time"
        ],
        "title": "MetricRecord"
      },
      "MetricType": {
        "type": "string",
        "enum": [
          "credits",
          "minutes_used",
          "request_count",
          "ttfb_avg",
          "ttfb_p95",
          "fiat_units_spent",
          "concurrency",
          "concurrency_average"
        ],
        "title": "MetricType"
      },
      "ModelRatesResponseModel": {
        "properties": {
          "character_cost_multiplier": {
            "type": "number",
            "title": "Character Cost Multiplier",
            "description": "The cost multiplier for characters."
          }
        },
        "type": "object",
        "required": [
          "character_cost_multiplier"
        ],
        "title": "ModelRatesResponseModel",
        "example": {
          "character_cost_multiplier": 1
        }
      },
      "ModelResponseModel": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The unique identifier of the model."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the model."
          },
          "can_be_finetuned": {
            "type": "boolean",
            "title": "Can Be Finetuned",
            "description": "Whether the model can be finetuned."
          },
          "can_do_text_to_speech": {
            "type": "boolean",
            "title": "Can Do Text To Speech",
            "description": "Whether the model can do text-to-speech."
          },
          "can_do_voice_conversion": {
            "type": "boolean",
            "title": "Can Do Voice Conversion",
            "description": "Whether the model can do voice conversion."
          },
          "can_use_style": {
            "type": "boolean",
            "title": "Can Use Style",
            "description": "Whether the model can use style."
          },
          "can_use_speaker_boost": {
            "type": "boolean",
            "title": "Can Use Speaker Boost",
            "description": "Whether the model can use speaker boost."
          },
          "serves_pro_voices": {
            "type": "boolean",
            "title": "Serves Pro Voices",
            "description": "Whether the model serves pro voices."
          },
          "token_cost_factor": {
            "type": "number",
            "title": "Token Cost Factor",
            "description": "The cost factor for the model."
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "The description of the model."
          },
          "requires_alpha_access": {
            "type": "boolean",
            "title": "Requires Alpha Access",
            "description": "Whether the model requires alpha access."
          },
          "max_characters_request_free_user": {
            "type": "integer",
            "title": "Max Characters Request Free User",
            "description": "The maximum number of characters that can be requested by a free user."
          },
          "max_characters_request_subscribed_user": {
            "type": "integer",
            "title": "Max Characters Request Subscribed User",
            "description": "The maximum number of characters that can be requested by a subscribed user."
          },
          "maximum_text_length_per_request": {
            "type": "integer",
            "title": "Maximum Text Length Per Request",
            "description": "The maximum length of text that can be requested for this model."
          },
          "languages": {
            "items": {
              "$ref": "#/components/schemas/LanguageResponseModel"
            },
            "type": "array",
            "title": "Languages",
            "description": "The languages supported by the model."
          },
          "model_rates": {
            "$ref": "#/components/schemas/ModelRatesResponseModel",
            "description": "The rates for the model."
          },
          "concurrency_group": {
            "type": "string",
            "enum": [
              "standard",
              "turbo"
            ],
            "title": "Concurrency Group",
            "description": "The concurrency group for the model."
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "name",
          "can_be_finetuned",
          "can_do_text_to_speech",
          "can_do_voice_conversion",
          "can_use_style",
          "can_use_speaker_boost",
          "serves_pro_voices",
          "token_cost_factor",
          "description",
          "requires_alpha_access",
          "max_characters_request_free_user",
          "max_characters_request_subscribed_user",
          "maximum_text_length_per_request",
          "languages",
          "model_rates",
          "concurrency_group"
        ],
        "title": "ModelResponseModel",
        "example": {
          "can_be_finetuned": true,
          "can_do_text_to_speech": true,
          "can_do_voice_conversion": true,
          "can_use_speaker_boost": true,
          "can_use_style": true,
          "concurrency_group": "standard",
          "description": "Our state of the art multilingual speech synthesis model, able to generate life-like speech in 29 languages.",
          "languages": [
            {
              "language_id": "en",
              "name": "English"
            }
          ],
          "max_characters_request_free_user": 2500,
          "max_characters_request_subscribed_user": 5000,
          "maximum_text_length_per_request": 1000000,
          "model_id": "eleven_multilingual_v2",
          "model_rates": {
            "character_cost_multiplier": 1
          },
          "name": "Eleven Multilingual v2",
          "requires_alpha_access": false,
          "serves_pro_voices": false,
          "token_cost_factor": 1
        }
      },
      "ModelSettingsResponseModel": {
        "properties": {
          "stability": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability",
            "description": "Determines how stable the voice is and the randomness between each generation. Lower values introduce broader emotional range for the voice. Higher values can result in a monotonous voice with limited emotion."
          },
          "use_speaker_boost": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Speaker Boost",
            "description": "This setting boosts the similarity to the original speaker. Using this setting requires a slightly higher computational load, which in turn increases latency."
          }
        },
        "type": "object",
        "title": "ModelSettingsResponseModel",
        "example": {
          "similarity_boost": 1,
          "stability": 1
        }
      },
      "ModerationStatusResponseModel": {
        "properties": {
          "is_in_probation": {
            "type": "boolean",
            "title": "Is In Probation",
            "description": "Whether the user is in probation."
          },
          "enterprise_check_nogo_voice": {
            "type": "boolean",
            "title": "Enterprise Check Nogo Voice",
            "description": "Whether the user's enterprise check nogo voice is enabled."
          },
          "enterprise_check_block_nogo_voice": {
            "type": "boolean",
            "title": "Enterprise Check Block Nogo Voice",
            "description": "Whether the user's enterprise check block nogo voice is enabled."
          },
          "never_live_moderate": {
            "type": "boolean",
            "title": "Never Live Moderate",
            "description": "Whether the user's never live moderate is enabled."
          },
          "nogo_voice_similar_voice_upload_count": {
            "type": "integer",
            "title": "Nogo Voice Similar Voice Upload Count",
            "description": "The number of similar voice uploads that have been blocked."
          },
          "enterprise_background_moderation_enabled": {
            "type": "boolean",
            "title": "Enterprise Background Moderation Enabled",
            "description": "Whether the user's enterprise background moderation is enabled."
          },
          "safety_status": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "appeal_approved",
                  "appeal_denied",
                  "false_positive"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Status",
            "description": "The safety status of the user."
          },
          "warning_status": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "warning",
                  "warning_cleared"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Warning Status",
            "description": "The warning status of the user."
          },
          "on_watchlist": {
            "type": "boolean",
            "title": "On Watchlist",
            "description": "Whether the user is on the watchlist."
          }
        },
        "type": "object",
        "required": [
          "is_in_probation",
          "enterprise_check_nogo_voice",
          "enterprise_check_block_nogo_voice",
          "never_live_moderate",
          "nogo_voice_similar_voice_upload_count",
          "enterprise_background_moderation_enabled",
          "on_watchlist"
        ],
        "title": "ModerationStatusResponseModel",
        "example": {
          "enterprise_background_moderation_enabled": false,
          "enterprise_check_block_nogo_voice": false,
          "enterprise_check_nogo_voice": false,
          "is_in_probation": false,
          "never_live_moderate": false,
          "nogo_voice_similar_voice_upload_count": 0,
          "on_watchlist": false
        }
      },
      "MultichannelSpeechToTextResponseModel": {
        "properties": {
          "transcripts": {
            "items": {
              "$ref": "#/components/schemas/SpeechToTextChunkResponseModel"
            },
            "type": "array",
            "title": "Transcripts",
            "description": "List of transcripts, one for each audio channel. Each transcript contains the text and word-level details for its respective channel."
          }
        },
        "type": "object",
        "required": [
          "transcripts"
        ],
        "title": "MultichannelSpeechToTextResponseModel",
        "description": "Response model for multichannel speech-to-text transcription.",
        "example": {
          "transcripts": [
            {
              "language_code": "en",
              "language_probability": 0.98,
              "text": "Hello from channel one.",
              "words": [
                {
                  "end": 0.5,
                  "logprob": -0.124,
                  "speaker_id": "speaker_0",
                  "start": 0,
                  "text": "Hello",
                  "type": "word"
                },
                {
                  "end": 0.5,
                  "logprob": 0,
                  "speaker_id": "speaker_0",
                  "start": 0.5,
                  "text": " ",
                  "type": "spacing"
                },
                {
                  "end": 0.8,
                  "logprob": -0.089,
                  "speaker_id": "speaker_0",
                  "start": 0.5,
                  "text": "from",
                  "type": "word"
                }
              ]
            },
            {
              "language_code": "en",
              "language_probability": 0.97,
              "text": "Greetings from channel two.",
              "words": [
                {
                  "end": 0.7,
                  "logprob": -0.156,
                  "speaker_id": "speaker_1",
                  "start": 0.1,
                  "text": "Greetings",
                  "type": "word"
                },
                {
                  "end": 0.7,
                  "logprob": 0,
                  "speaker_id": "speaker_1",
                  "start": 0.7,
                  "text": " ",
                  "type": "spacing"
                },
                {
                  "end": 1,
                  "logprob": -0.078,
                  "speaker_id": "speaker_1",
                  "start": 0.7,
                  "text": "from",
                  "type": "word"
                }
              ]
            }
          ]
        }
      },
      "MultipartMusicResponse": {
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/DetailedMusicResponse",
            "description": "JSON metadata containing composition plan and song metadata"
          },
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "Binary audio data in the requested format"
          }
        },
        "type": "object",
        "required": [
          "metadata",
          "audio"
        ],
        "title": "MultipartMusicResponse",
        "description": "Multipart response structure with JSON metadata and binary audio",
        "example": {
          "audio": "[binary audio data]",
          "metadata": {
            "$defs": {
              "MusicPrompt": {
                "example": {
                  "negative_global_styles": [
                    "metal",
                    "hip-hop",
                    "country"
                  ],
                  "positive_global_styles": [
                    "pop",
                    "rock",
                    "jazz"
                  ],
                  "sections": [
                    {
                      "duration_ms": 10000,
                      "lines": [
                        "Verse 1 lyrics"
                      ],
                      "negative_local_styles": [
                        "metal",
                        "hip-hop",
                        "country"
                      ],
                      "positive_local_styles": [
                        "pop",
                        "rock",
                        "jazz"
                      ],
                      "section_name": "Verse 1"
                    }
                  ]
                },
                "properties": {
                  "positive_global_styles": {
                    "description": "The styles that should be present in the entire song.",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 50,
                    "title": "Positive Global Styles",
                    "type": "array"
                  },
                  "negative_global_styles": {
                    "description": "The styles that should not be present in the entire song.",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 50,
                    "title": "Negative Global Styles",
                    "type": "array"
                  },
                  "sections": {
                    "description": "The sections of the song.",
                    "items": {
                      "$ref": "#/$defs/SongSection"
                    },
                    "maxItems": 30,
                    "title": "Sections",
                    "type": "array"
                  }
                },
                "required": [
                  "positive_global_styles",
                  "negative_global_styles",
                  "sections"
                ],
                "title": "MusicPrompt",
                "type": "object"
              },
              "SongMetadata": {
                "example": {
                  "description": "My Song Description",
                  "genres": [
                    "pop",
                    "rock",
                    "jazz"
                  ],
                  "is_explicit": false,
                  "languages": [
                    "en",
                    "fr"
                  ],
                  "title": "My Song"
                },
                "properties": {
                  "title": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The title of the song",
                    "title": "Title"
                  },
                  "description": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The description of the song",
                    "title": "Description"
                  },
                  "genres": {
                    "description": "The genres of the song",
                    "items": {
                      "type": "string"
                    },
                    "title": "Genres",
                    "type": "array"
                  },
                  "languages": {
                    "description": "The languages of the song",
                    "items": {
                      "type": "string"
                    },
                    "title": "Languages",
                    "type": "array"
                  },
                  "is_explicit": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Whether the song is explicit",
                    "title": "Is Explicit"
                  }
                },
                "required": [
                  "title",
                  "description",
                  "genres",
                  "languages",
                  "is_explicit"
                ],
                "title": "SongMetadata",
                "type": "object"
              },
              "SongSection": {
                "properties": {
                  "section_name": {
                    "description": "The name of the section. Must be between 1 and 100 characters.",
                    "maxLength": 100,
                    "minLength": 1,
                    "title": "Section Name",
                    "type": "string"
                  },
                  "positive_local_styles": {
                    "description": "The styles that should be present in this section.",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 50,
                    "title": "Positive Local Styles",
                    "type": "array"
                  },
                  "negative_local_styles": {
                    "description": "The styles that should not be present in this section.",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 50,
                    "title": "Negative Local Styles",
                    "type": "array"
                  },
                  "duration_ms": {
                    "description": "The duration of the section in milliseconds. Must be between 3000ms and 120000ms.",
                    "maximum": 120000,
                    "minimum": 3000,
                    "title": "Duration Ms",
                    "type": "integer"
                  },
                  "lines": {
                    "description": "The lyrics of the section.",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 30,
                    "title": "Lines",
                    "type": "array"
                  }
                },
                "required": [
                  "section_name",
                  "positive_local_styles",
                  "negative_local_styles",
                  "duration_ms",
                  "lines"
                ],
                "title": "SongSection",
                "type": "object"
              }
            },
            "description": "Response model for structured music generation endpoint",
            "example": {
              "composition_plan": {
                "negative_global_styles": [
                  "metal",
                  "hip-hop",
                  "country"
                ],
                "positive_global_styles": [
                  "pop",
                  "rock",
                  "jazz"
                ],
                "sections": [
                  {
                    "duration_ms": 10000,
                    "lines": [
                      "Verse 1 lyrics"
                    ],
                    "negative_local_styles": [
                      "metal",
                      "hip-hop",
                      "country"
                    ],
                    "positive_local_styles": [
                      "pop",
                      "rock",
                      "jazz"
                    ],
                    "section_name": "Verse 1"
                  }
                ]
              },
              "song_metadata": {
                "description": "My Song Description",
                "genres": [
                  "pop",
                  "rock",
                  "jazz"
                ],
                "is_explicit": false,
                "languages": [
                  "en",
                  "fr"
                ],
                "title": "My Song"
              }
            },
            "properties": {
              "composition_plan": {
                "$ref": "#/$defs/MusicPrompt",
                "description": "The composition plan used to generate the song"
              },
              "song_metadata": {
                "$ref": "#/$defs/SongMetadata",
                "description": "The metadata of the generated song"
              }
            },
            "required": [
              "composition_plan",
              "song_metadata"
            ],
            "title": "DetailedMusicResponse",
            "type": "object"
          }
        }
      },
      "MusicPrompt": {
        "properties": {
          "positive_global_styles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 50,
            "title": "Positive Global Styles",
            "description": "The styles that should be present in the entire song."
          },
          "negative_global_styles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 50,
            "title": "Negative Global Styles",
            "description": "The styles that should not be present in the entire song."
          },
          "sections": {
            "items": {
              "$ref": "#/components/schemas/SongSection"
            },
            "type": "array",
            "maxItems": 30,
            "title": "Sections",
            "description": "The sections of the song."
          }
        },
        "type": "object",
        "required": [
          "positive_global_styles",
          "negative_global_styles",
          "sections"
        ],
        "title": "MusicPrompt",
        "example": {
          "negative_global_styles": [
            "metal",
            "hip-hop",
            "country"
          ],
          "positive_global_styles": [
            "pop",
            "rock",
            "jazz"
          ],
          "sections": [
            {
              "duration_ms": 10000,
              "lines": [
                "Verse 1 lyrics"
              ],
              "negative_local_styles": [
                "metal",
                "hip-hop",
                "country"
              ],
              "positive_local_styles": [
                "pop",
                "rock",
                "jazz"
              ],
              "section_name": "Verse 1"
            }
          ]
        }
      },
      "ObjectJsonSchemaProperty-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "object",
            "title": "Type",
            "default": "object"
          },
          "required": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Required"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "properties": {
            "additionalProperties": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
                },
                {
                  "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
                },
                {
                  "$ref": "#/components/schemas/ArrayJsonSchemaProperty-Input"
                }
              ]
            },
            "type": "object",
            "title": "Properties"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ObjectJsonSchemaProperty"
      },
      "ObjectJsonSchemaProperty-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "object",
            "title": "Type",
            "default": "object"
          },
          "required": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Required"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "properties": {
            "additionalProperties": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
                },
                {
                  "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
                },
                {
                  "$ref": "#/components/schemas/ArrayJsonSchemaProperty-Output"
                }
              ]
            },
            "type": "object",
            "title": "Properties"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ObjectJsonSchemaProperty"
      },
      "OrbAvatar": {
        "properties": {
          "type": {
            "type": "string",
            "const": "orb",
            "title": "Type",
            "description": "The type of the avatar",
            "default": "orb"
          },
          "color_1": {
            "type": "string",
            "title": "Color 1",
            "description": "The first color of the avatar",
            "default": "#2792dc"
          },
          "color_2": {
            "type": "string",
            "title": "Color 2",
            "description": "The second color of the avatar",
            "default": "#9ce6e6"
          }
        },
        "type": "object",
        "title": "OrbAvatar",
        "example": {
          "color_1": "#2792dc",
          "color_2": "#9ce6e6",
          "type": "orb"
        }
      },
      "OutboundCallRecipient": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "conversation_initiation_client_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataRequest-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "phone_number"
        ],
        "title": "OutboundCallRecipient"
      },
      "OutboundCallRecipientResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "status": {
            "$ref": "#/components/schemas/BatchCallRecipientStatus"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "updated_at_unix": {
            "type": "integer",
            "title": "Updated At Unix"
          },
          "conversation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Id"
          },
          "conversation_initiation_client_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataInternal"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "phone_number",
          "status",
          "created_at_unix",
          "updated_at_unix",
          "conversation_id"
        ],
        "title": "OutboundCallRecipientResponseModel"
      },
      "OutboundSIPTrunkConfigRequestModel": {
        "properties": {
          "address": {
            "type": "string",
            "title": "Address",
            "description": "Hostname or IP the SIP INVITE is sent to."
          },
          "transport": {
            "$ref": "#/components/schemas/SIPTrunkTransportEnum",
            "description": "Protocol to use for SIP transport (signalling layer).",
            "default": "auto"
          },
          "media_encryption": {
            "$ref": "#/components/schemas/SIPMediaEncryptionEnum",
            "description": "Whether or not to encrypt media (data layer).",
            "default": "allowed"
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Headers",
            "description": "SIP X-* headers for INVITE request. These headers are sent as-is and may help identify this call."
          },
          "credentials": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SIPTrunkCredentialsRequestModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional digest authentication credentials (username/password). If not provided, ACL authentication is assumed."
          }
        },
        "type": "object",
        "required": [
          "address"
        ],
        "title": "OutboundSIPTrunkConfigRequestModel"
      },
      "PatchConvAIDashboardSettingsRequest": {
        "properties": {
          "charts": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardCallSuccessChartModel"
                },
                {
                  "$ref": "#/components/schemas/DashboardCriteriaChartModel"
                },
                {
                  "$ref": "#/components/schemas/DashboardDataCollectionChartModel"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "call_success": "#/components/schemas/DashboardCallSuccessChartModel",
                  "criteria": "#/components/schemas/DashboardCriteriaChartModel",
                  "data_collection": "#/components/schemas/DashboardDataCollectionChartModel"
                }
              }
            },
            "type": "array",
            "maxItems": 4,
            "title": "Charts"
          }
        },
        "type": "object",
        "title": "PatchConvAIDashboardSettingsRequest"
      },
      "PatchConvAISettingsRequest": {
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
              },
              {
                "type": "null"
              }
            ]
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          },
          "can_use_mcp_servers": {
            "type": "boolean",
            "title": "Can Use Mcp Servers",
            "description": "Whether the workspace can use MCP servers",
            "default": false
          },
          "rag_retention_period_days": {
            "type": "integer",
            "maximum": 30,
            "exclusiveMinimum": 0,
            "title": "Rag Retention Period Days",
            "default": 10
          }
        },
        "type": "object",
        "title": "PatchConvAISettingsRequest"
      },
      "PatchWorkspaceSecretRequest": {
        "properties": {
          "type": {
            "type": "string",
            "const": "update",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "value"
        ],
        "title": "PatchWorkspaceSecretRequest"
      },
      "PdfExportOptions": {
        "properties": {
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          },
          "format": {
            "type": "string",
            "const": "pdf",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "type": "object",
        "required": [
          "format"
        ],
        "title": "PdfExportOptions"
      },
      "PhoneNumberAgentInfo": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id",
            "description": "The ID of the agent"
          },
          "agent_name": {
            "type": "string",
            "title": "Agent Name",
            "description": "The name of the agent"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "agent_name"
        ],
        "title": "PhoneNumberAgentInfo",
        "example": {
          "agent_id": "F3Pbu5gP6NNKBscdCdwB",
          "agent_name": "My Agent"
        }
      },
      "PhoneNumberTransfer": {
        "properties": {
          "transfer_destination": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PhoneNumberTransferDestination"
                  },
                  {
                    "$ref": "#/components/schemas/SIPUriTransferDestination"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "phone": "#/components/schemas/PhoneNumberTransferDestination",
                    "sip_uri": "#/components/schemas/SIPUriTransferDestination"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Transfer Destination"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number",
            "deprecated": true
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          },
          "transfer_type": {
            "$ref": "#/components/schemas/TransferTypeEnum",
            "default": "conference"
          }
        },
        "type": "object",
        "required": [
          "condition"
        ],
        "title": "PhoneNumberTransfer"
      },
      "PhoneNumberTransferDestination": {
        "properties": {
          "type": {
            "type": "string",
            "const": "phone",
            "title": "Type",
            "default": "phone"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          }
        },
        "type": "object",
        "required": [
          "phone_number"
        ],
        "title": "PhoneNumberTransferDestination"
      },
      "PlayDTMFResultErrorModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "play_dtmf_error",
            "title": "Result Type",
            "default": "play_dtmf_error"
          },
          "status": {
            "type": "string",
            "const": "error",
            "title": "Status",
            "default": "error"
          },
          "error": {
            "type": "string",
            "title": "Error"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "error"
        ],
        "title": "PlayDTMFResultErrorModel"
      },
      "PlayDTMFResultSuccessModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "play_dtmf_success",
            "title": "Result Type",
            "default": "play_dtmf_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "dtmf_tones": {
            "type": "string",
            "title": "Dtmf Tones"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "dtmf_tones"
        ],
        "title": "PlayDTMFResultSuccessModel"
      },
      "PlayDTMFToolConfig": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "play_keypad_touch_tone",
            "title": "System Tool Type",
            "default": "play_keypad_touch_tone"
          }
        },
        "type": "object",
        "title": "PlayDTMFToolConfig",
        "description": "Allows the agent to play DTMF tones during a phone call.\n\nThis tool can be used to interact with automated phone systems, such as\nnavigating phone menus, entering extensions, or inputting numeric codes."
      },
      "PodcastBulletinMode": {
        "properties": {
          "type": {
            "type": "string",
            "const": "bulletin",
            "title": "Type",
            "description": "The type of podcast to create."
          },
          "bulletin": {
            "$ref": "#/components/schemas/PodcastBulletinModeData",
            "description": "The voice settings for the bulletin."
          }
        },
        "type": "object",
        "required": [
          "type",
          "bulletin"
        ],
        "title": "PodcastBulletinMode",
        "example": {
          "bulletin": {
            "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
          },
          "type": "bulletin"
        }
      },
      "PodcastBulletinModeData": {
        "properties": {
          "host_voice_id": {
            "type": "string",
            "title": "Host Voice Id",
            "description": "The ID of the host voice."
          }
        },
        "type": "object",
        "required": [
          "host_voice_id"
        ],
        "title": "PodcastBulletinModeData",
        "example": {
          "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
        }
      },
      "PodcastConversationMode": {
        "properties": {
          "type": {
            "type": "string",
            "const": "conversation",
            "title": "Type",
            "description": "The type of podcast to create."
          },
          "conversation": {
            "$ref": "#/components/schemas/PodcastConversationModeData",
            "description": "The voice settings for the conversation."
          }
        },
        "type": "object",
        "required": [
          "type",
          "conversation"
        ],
        "title": "PodcastConversationMode",
        "example": {
          "conversation": {
            "guest_voice_id": "aw1NgEzBg83R7vgmiJt7",
            "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
          },
          "type": "conversation"
        }
      },
      "PodcastConversationModeData": {
        "properties": {
          "host_voice_id": {
            "type": "string",
            "title": "Host Voice Id",
            "description": "The ID of the host voice."
          },
          "guest_voice_id": {
            "type": "string",
            "title": "Guest Voice Id",
            "description": "The ID of the guest voice."
          }
        },
        "type": "object",
        "required": [
          "host_voice_id",
          "guest_voice_id"
        ],
        "title": "PodcastConversationModeData",
        "example": {
          "guest_voice_id": "aw1NgEzBg83R7vgmiJt7",
          "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
        }
      },
      "PodcastProjectResponseModel": {
        "properties": {
          "project": {
            "$ref": "#/components/schemas/ProjectResponseModel",
            "description": "The project associated with the created podcast."
          }
        },
        "type": "object",
        "required": [
          "project"
        ],
        "title": "PodcastProjectResponseModel"
      },
      "PodcastTextSource": {
        "properties": {
          "type": {
            "type": "string",
            "const": "text",
            "title": "Type",
            "description": "The type of source to create."
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text to create the podcast from."
          }
        },
        "type": "object",
        "required": [
          "type",
          "text"
        ],
        "title": "PodcastTextSource",
        "example": {
          "text": "This is a test podcast.",
          "type": "text"
        }
      },
      "PodcastURLSource": {
        "properties": {
          "type": {
            "type": "string",
            "const": "url",
            "title": "Type",
            "description": "The type of source to create."
          },
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL to create the podcast from."
          }
        },
        "type": "object",
        "required": [
          "type",
          "url"
        ],
        "title": "PodcastURLSource",
        "example": {
          "type": "url",
          "url": "https://www.example.com"
        }
      },
      "PostAgentAvatarResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          }
        },
        "type": "object",
        "required": [
          "agent_id"
        ],
        "title": "PostAgentAvatarResponseModel"
      },
      "PostWorkspaceSecretRequest": {
        "properties": {
          "type": {
            "type": "string",
            "const": "new",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "value"
        ],
        "title": "PostWorkspaceSecretRequest"
      },
      "PostWorkspaceSecretResponseModel": {
        "properties": {
          "type": {
            "type": "string",
            "const": "stored",
            "title": "Type"
          },
          "secret_id": {
            "type": "string",
            "title": "Secret Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "type",
          "secret_id",
          "name"
        ],
        "title": "PostWorkspaceSecretResponseModel"
      },
      "PrivacyConfig": {
        "properties": {
          "record_voice": {
            "type": "boolean",
            "title": "Record Voice",
            "description": "Whether to record the conversation",
            "default": true
          },
          "retention_days": {
            "type": "integer",
            "title": "Retention Days",
            "description": "The number of days to retain the conversation. -1 indicates there is no retention limit",
            "default": -1
          },
          "delete_transcript_and_pii": {
            "type": "boolean",
            "title": "Delete Transcript And Pii",
            "description": "Whether to delete the transcript and PII",
            "default": false
          },
          "delete_audio": {
            "type": "boolean",
            "title": "Delete Audio",
            "description": "Whether to delete the audio",
            "default": false
          },
          "apply_to_existing_conversations": {
            "type": "boolean",
            "title": "Apply To Existing Conversations",
            "description": "Whether to apply the privacy settings to existing conversations",
            "default": false
          },
          "zero_retention_mode": {
            "type": "boolean",
            "title": "Zero Retention Mode",
            "description": "Whether to enable zero retention mode - no PII data is stored",
            "default": false
          }
        },
        "type": "object",
        "title": "PrivacyConfig",
        "example": {
          "apply_to_existing_conversations": false,
          "delete_audio": false,
          "delete_transcript_and_pii": false,
          "record_voice": true,
          "retention_days": -1,
          "zero_retention_mode": false
        }
      },
      "ProjectCreationMetaResponseModel": {
        "properties": {
          "creation_progress": {
            "type": "number",
            "title": "Creation Progress",
            "description": "The progress of the project creation."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "creating",
              "finished",
              "failed"
            ],
            "title": "Status",
            "description": "The status of the project creation action."
          },
          "type": {
            "type": "string",
            "enum": [
              "blank",
              "generate_podcast",
              "auto_assign_voices"
            ],
            "title": "Type",
            "description": "The type of the project creation action."
          }
        },
        "type": "object",
        "required": [
          "creation_progress",
          "status",
          "type"
        ],
        "title": "ProjectCreationMetaResponseModel",
        "example": {
          "creation_progress": 0.5,
          "status": "pending",
          "type": "blank"
        }
      },
      "ProjectExtendedResponseModel": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the project."
          },
          "create_date_unix": {
            "type": "integer",
            "title": "Create Date Unix",
            "description": "The creation date of the project."
          },
          "default_title_voice_id": {
            "type": "string",
            "title": "Default Title Voice Id",
            "description": "The default title voice ID."
          },
          "default_paragraph_voice_id": {
            "type": "string",
            "title": "Default Paragraph Voice Id",
            "description": "The default paragraph voice ID."
          },
          "default_model_id": {
            "type": "string",
            "title": "Default Model Id",
            "description": "The default model ID."
          },
          "last_conversion_date_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix",
            "description": "The last conversion date of the project."
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded",
            "description": "Whether the project can be downloaded."
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "The title of the project."
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author",
            "description": "The author of the project."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the project."
          },
          "genres": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genres",
            "description": "List of genres of the project."
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url",
            "description": "The cover image URL of the project."
          },
          "target_audience": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "children",
                  "young adult",
                  "adult",
                  "all ages"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience",
            "description": "The target audience of the project."
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Two-letter language code (ISO 639-1) of the language of the project."
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "The content type of the project, e.g. 'Novel' or 'Short Story'"
          },
          "original_publication_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Publication Date",
            "description": "The original publication date of the project."
          },
          "mature_content": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mature Content",
            "description": "Whether the project contains mature content."
          },
          "isbn_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn Number",
            "description": "The ISBN number of the project."
          },
          "volume_normalization": {
            "type": "boolean",
            "title": "Volume Normalization",
            "description": "Whether the project uses volume normalization."
          },
          "state": {
            "type": "string",
            "enum": [
              "creating",
              "default",
              "converting",
              "in_queue"
            ],
            "title": "State",
            "description": "The state of the project."
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level",
            "description": "The access level of the project."
          },
          "fiction": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "fiction",
                  "non-fiction"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiction",
            "description": "Whether the project is fiction."
          },
          "quality_check_on": {
            "type": "boolean",
            "title": "Quality Check On",
            "description": "Whether quality check is enabled for this project.",
            "deprecated": true
          },
          "quality_check_on_when_bulk_convert": {
            "type": "boolean",
            "title": "Quality Check On When Bulk Convert",
            "description": "Whether quality check is enabled on the project when bulk converting.",
            "deprecated": true
          },
          "creation_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectCreationMetaResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The creation meta of the project."
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "blank",
                  "book",
                  "article",
                  "genfm",
                  "video"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "The source type of the project."
          },
          "chapters_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chapters Enabled",
            "description": "Whether chapters are enabled for the project.",
            "default": true
          },
          "captions_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captions Enabled",
            "description": "Whether captions are enabled for the project.",
            "default": true
          },
          "caption_style": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Global styling to be applied to all captions"
          },
          "quality_preset": {
            "type": "string",
            "enum": [
              "standard",
              "high",
              "highest",
              "ultra",
              "ultra_lossless"
            ],
            "title": "Quality Preset",
            "description": "The quality preset level of the project."
          },
          "chapters": {
            "items": {
              "$ref": "#/components/schemas/ChapterResponseModel"
            },
            "type": "array",
            "title": "Chapters",
            "description": "List of chapters of the project and their metadata."
          },
          "pronunciation_dictionary_versions": {
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionResponseModel"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Versions",
            "description": "List of pronunciation dictionary versions of the project and their metadata."
          },
          "pronunciation_dictionary_locators": {
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryLocatorResponseModel"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Locators",
            "description": "List of pronunciation dictionary locators."
          },
          "apply_text_normalization": {
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off",
              "apply_english"
            ],
            "title": "Apply Text Normalization",
            "description": "Whether text normalization is applied to the project."
          },
          "experimental": {
            "type": "object",
            "title": "Experimental",
            "description": "Experimental features for the project."
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "name",
          "create_date_unix",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id",
          "can_be_downloaded",
          "volume_normalization",
          "state",
          "access_level",
          "quality_check_on",
          "quality_check_on_when_bulk_convert",
          "quality_preset",
          "chapters",
          "pronunciation_dictionary_versions",
          "pronunciation_dictionary_locators",
          "apply_text_normalization"
        ],
        "title": "ProjectExtendedResponseModel",
        "example": {
          "access_level": "viewer",
          "apply_text_normalization": "auto",
          "author": "John Doe",
          "can_be_downloaded": true,
          "chapters": [
            {
              "can_be_downloaded": true,
              "chapter_id": "aw1NgEzBg83R7vgmiJt6",
              "conversion_progress": 0.5,
              "last_conversion_date_unix": 1714204800,
              "last_conversion_error": "Error message",
              "name": "Chapter 1",
              "state": "converting",
              "statistics": {
                "characters_converted": 500,
                "characters_unconverted": 1000,
                "paragraphs_converted": 20,
                "paragraphs_unconverted": 10
              }
            }
          ],
          "content_type": "Novel",
          "cover_image_url": "https://example.com/cover.jpg",
          "create_date_unix": 1714204800,
          "creation_meta": {
            "creation_progress": 0.5,
            "status": "pending",
            "type": "blank"
          },
          "default_model_id": "eleven_multilingual_v2",
          "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "description": "This is a description of my project.",
          "experimental": {},
          "fiction": "fiction",
          "genres": [
            "Novel",
            "Short Story"
          ],
          "isbn_number": "978-90-274-3964-2",
          "language": "en",
          "last_conversion_date_unix": 1714204800,
          "mature_content": false,
          "name": "My Project",
          "original_publication_date": "2025-01-01",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "pronunciation_dictionary_locators": [],
          "pronunciation_dictionary_versions": [],
          "quality_check_on": false,
          "quality_check_on_when_bulk_convert": false,
          "quality_preset": "standard",
          "state": "default",
          "target_audience": "young adult",
          "title": "My Project",
          "volume_normalization": true
        }
      },
      "ProjectResponseModel": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the project."
          },
          "create_date_unix": {
            "type": "integer",
            "title": "Create Date Unix",
            "description": "The creation date of the project."
          },
          "default_title_voice_id": {
            "type": "string",
            "title": "Default Title Voice Id",
            "description": "The default title voice ID."
          },
          "default_paragraph_voice_id": {
            "type": "string",
            "title": "Default Paragraph Voice Id",
            "description": "The default paragraph voice ID."
          },
          "default_model_id": {
            "type": "string",
            "title": "Default Model Id",
            "description": "The default model ID."
          },
          "last_conversion_date_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix",
            "description": "The last conversion date of the project."
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded",
            "description": "Whether the project can be downloaded."
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "The title of the project."
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author",
            "description": "The author of the project."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the project."
          },
          "genres": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genres",
            "description": "List of genres of the project."
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url",
            "description": "The cover image URL of the project."
          },
          "target_audience": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "children",
                  "young adult",
                  "adult",
                  "all ages"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience",
            "description": "The target audience of the project."
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Two-letter language code (ISO 639-1) of the language of the project."
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "The content type of the project, e.g. 'Novel' or 'Short Story'"
          },
          "original_publication_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Publication Date",
            "description": "The original publication date of the project."
          },
          "mature_content": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mature Content",
            "description": "Whether the project contains mature content."
          },
          "isbn_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn Number",
            "description": "The ISBN number of the project."
          },
          "volume_normalization": {
            "type": "boolean",
            "title": "Volume Normalization",
            "description": "Whether the project uses volume normalization."
          },
          "state": {
            "type": "string",
            "enum": [
              "creating",
              "default",
              "converting",
              "in_queue"
            ],
            "title": "State",
            "description": "The state of the project."
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level",
            "description": "The access level of the project."
          },
          "fiction": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "fiction",
                  "non-fiction"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiction",
            "description": "Whether the project is fiction."
          },
          "quality_check_on": {
            "type": "boolean",
            "title": "Quality Check On",
            "description": "Whether quality check is enabled for this project.",
            "deprecated": true
          },
          "quality_check_on_when_bulk_convert": {
            "type": "boolean",
            "title": "Quality Check On When Bulk Convert",
            "description": "Whether quality check is enabled on the project when bulk converting.",
            "deprecated": true
          },
          "creation_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectCreationMetaResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The creation meta of the project."
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "blank",
                  "book",
                  "article",
                  "genfm",
                  "video"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "The source type of the project."
          },
          "chapters_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chapters Enabled",
            "description": "Whether chapters are enabled for the project.",
            "default": true
          },
          "captions_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captions Enabled",
            "description": "Whether captions are enabled for the project.",
            "default": true
          },
          "caption_style": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Global styling to be applied to all captions"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "name",
          "create_date_unix",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id",
          "can_be_downloaded",
          "volume_normalization",
          "state",
          "access_level",
          "quality_check_on",
          "quality_check_on_when_bulk_convert"
        ],
        "title": "ProjectResponseModel",
        "example": {
          "access_level": "viewer",
          "author": "John Doe",
          "can_be_downloaded": true,
          "content_type": "Novel",
          "cover_image_url": "https://example.com/cover.jpg",
          "create_date_unix": 1714204800,
          "creation_meta": {
            "creation_progress": 0.5,
            "status": "pending",
            "type": "blank"
          },
          "default_model_id": "eleven_multilingual_v2",
          "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "description": "This is a description of my project.",
          "fiction": "fiction",
          "genres": [
            "Novel",
            "Short Story"
          ],
          "isbn_number": "978-90-274-3964-2",
          "language": "en",
          "last_conversion_date_unix": 1714204800,
          "mature_content": false,
          "name": "My Project",
          "original_publication_date": "2025-01-01",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "quality_check_on": false,
          "quality_check_on_when_bulk_convert": false,
          "state": "default",
          "target_audience": "young adult",
          "title": "My Project",
          "volume_normalization": true
        }
      },
      "ProjectSnapshotExtendedResponseModel": {
        "properties": {
          "project_snapshot_id": {
            "type": "string",
            "title": "Project Snapshot Id",
            "description": "The ID of the project snapshot."
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix",
            "description": "The creation date of the project snapshot."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the project snapshot."
          },
          "audio_upload": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Upload",
            "description": "(Deprecated)"
          },
          "zip_upload": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip Upload",
            "description": "(Deprecated)"
          },
          "character_alignments": {
            "items": {
              "$ref": "#/components/schemas/CharacterAlignmentModel"
            },
            "type": "array",
            "title": "Character Alignments"
          }
        },
        "type": "object",
        "required": [
          "project_snapshot_id",
          "project_id",
          "created_at_unix",
          "name",
          "character_alignments"
        ],
        "title": "ProjectSnapshotExtendedResponseModel",
        "example": {
          "character_alignments": [],
          "created_at_unix": 1714204800,
          "name": "My Project Snapshot",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6"
        }
      },
      "ProjectSnapshotResponseModel": {
        "properties": {
          "project_snapshot_id": {
            "type": "string",
            "title": "Project Snapshot Id",
            "description": "The ID of the project snapshot."
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix",
            "description": "The creation date of the project snapshot."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the project snapshot."
          },
          "audio_upload": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Upload",
            "description": "(Deprecated)"
          },
          "zip_upload": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip Upload",
            "description": "(Deprecated)"
          }
        },
        "type": "object",
        "required": [
          "project_snapshot_id",
          "project_id",
          "created_at_unix",
          "name"
        ],
        "title": "ProjectSnapshotResponseModel",
        "example": {
          "created_at_unix": 1714204800,
          "name": "My Project Snapshot",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6"
        }
      },
      "ProjectSnapshotsResponseModel": {
        "properties": {
          "snapshots": {
            "items": {
              "$ref": "#/components/schemas/ProjectSnapshotResponseModel"
            },
            "type": "array",
            "title": "Snapshots",
            "description": "List of project snapshots."
          }
        },
        "type": "object",
        "required": [
          "snapshots"
        ],
        "title": "ProjectSnapshotsResponseModel",
        "example": {
          "snapshots": [
            {
              "created_at_unix": 1714204800,
              "name": "My Project Snapshot",
              "project_id": "aw1NgEzBg83R7vgmiJt6",
              "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6"
            }
          ]
        }
      },
      "PromptAgentAPIModel-Input": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "The prompt for the agent",
            "default": "",
            "x-convai-client-override": true
          },
          "llm": {
            "$ref": "#/components/schemas/LLM",
            "description": "The LLM to query with the prompt and the chat history. If using data residency, the LLM must be supported in the data residency environment",
            "default": "gemini-2.0-flash"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "description": "The temperature for the LLM",
            "default": 0
          },
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens",
            "description": "If greater than 0, maximum number of tokens the LLM can predict",
            "default": -1
          },
          "tool_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tool Ids",
            "description": "A list of IDs of tools used by the agent"
          },
          "built_in_tools": {
            "$ref": "#/components/schemas/BuiltInTools-Input",
            "description": "Built-in system tools to be used by the agent"
          },
          "mcp_server_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Mcp Server Ids",
            "description": "A list of MCP server ids to be used by the agent"
          },
          "native_mcp_server_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Native Mcp Server Ids",
            "description": "A list of Native MCP server ids to be used by the agent",
            "x-convai-client-override": true
          },
          "knowledge_base": {
            "items": {
              "$ref": "#/components/schemas/KnowledgeBaseLocator"
            },
            "type": "array",
            "title": "Knowledge Base",
            "description": "A list of knowledge bases to be used by the agent"
          },
          "custom_llm": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomLLM"
              },
              {
                "type": "null"
              }
            ],
            "description": "Definition for a custom LLM if LLM field is set to 'CUSTOM_LLM'"
          },
          "ignore_default_personality": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ignore Default Personality",
            "description": "Whether to ignore the default personality",
            "default": false
          },
          "rag": {
            "$ref": "#/components/schemas/RagConfig",
            "description": "Configuration for RAG"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Timezone for displaying current time in system prompt. If set, the current time will be included in the system prompt using this timezone. Must be a valid timezone name (e.g., 'America/New_York', 'Europe/London', 'UTC')."
          },
          "tools": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WebhookToolConfig-Input"
                },
                {
                  "$ref": "#/components/schemas/ClientToolConfig-Input"
                },
                {
                  "$ref": "#/components/schemas/SystemToolConfig-Input"
                },
                {
                  "$ref": "#/components/schemas/MCPToolConfig-Input"
                }
              ],
              "description": "The type of tool",
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "client": "#/components/schemas/ClientToolConfig-Input",
                  "mcp": "#/components/schemas/MCPToolConfig-Input",
                  "system": "#/components/schemas/SystemToolConfig-Input",
                  "webhook": "#/components/schemas/WebhookToolConfig-Input"
                }
              }
            },
            "type": "array",
            "title": "Tools",
            "description": "A list of tools that the agent can use over the course of the conversation, use tool_ids instead",
            "deprecated": true
          }
        },
        "type": "object",
        "title": "PromptAgentAPIModel",
        "example": {
          "knowledge_base": [],
          "llm": "gemini-2.0-flash-001",
          "max_tokens": -1,
          "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
          "temperature": 0,
          "tool_ids": [],
          "tools": []
        }
      },
      "PromptAgentAPIModel-Output": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "The prompt for the agent",
            "default": "",
            "x-convai-client-override": true
          },
          "llm": {
            "$ref": "#/components/schemas/LLM",
            "description": "The LLM to query with the prompt and the chat history. If using data residency, the LLM must be supported in the data residency environment",
            "default": "gemini-2.0-flash"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "description": "The temperature for the LLM",
            "default": 0
          },
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens",
            "description": "If greater than 0, maximum number of tokens the LLM can predict",
            "default": -1
          },
          "tool_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tool Ids",
            "description": "A list of IDs of tools used by the agent"
          },
          "built_in_tools": {
            "$ref": "#/components/schemas/BuiltInTools-Output",
            "description": "Built-in system tools to be used by the agent"
          },
          "mcp_server_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Mcp Server Ids",
            "description": "A list of MCP server ids to be used by the agent"
          },
          "native_mcp_server_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Native Mcp Server Ids",
            "description": "A list of Native MCP server ids to be used by the agent",
            "x-convai-client-override": true
          },
          "knowledge_base": {
            "items": {
              "$ref": "#/components/schemas/KnowledgeBaseLocator"
            },
            "type": "array",
            "title": "Knowledge Base",
            "description": "A list of knowledge bases to be used by the agent"
          },
          "custom_llm": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomLLM"
              },
              {
                "type": "null"
              }
            ],
            "description": "Definition for a custom LLM if LLM field is set to 'CUSTOM_LLM'"
          },
          "ignore_default_personality": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ignore Default Personality",
            "description": "Whether to ignore the default personality",
            "default": false
          },
          "rag": {
            "$ref": "#/components/schemas/RagConfig",
            "description": "Configuration for RAG"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Timezone for displaying current time in system prompt. If set, the current time will be included in the system prompt using this timezone. Must be a valid timezone name (e.g., 'America/New_York', 'Europe/London', 'UTC')."
          },
          "tools": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WebhookToolConfig-Output"
                },
                {
                  "$ref": "#/components/schemas/ClientToolConfig-Output"
                },
                {
                  "$ref": "#/components/schemas/SystemToolConfig-Output"
                },
                {
                  "$ref": "#/components/schemas/MCPToolConfig-Output"
                }
              ],
              "description": "The type of tool",
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "client": "#/components/schemas/ClientToolConfig-Output",
                  "mcp": "#/components/schemas/MCPToolConfig-Output",
                  "system": "#/components/schemas/SystemToolConfig-Output",
                  "webhook": "#/components/schemas/WebhookToolConfig-Output"
                }
              }
            },
            "type": "array",
            "title": "Tools",
            "description": "A list of tools that the agent can use over the course of the conversation, use tool_ids instead",
            "deprecated": true
          }
        },
        "type": "object",
        "title": "PromptAgentAPIModel",
        "example": {
          "knowledge_base": [],
          "llm": "gemini-2.0-flash-001",
          "max_tokens": -1,
          "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
          "temperature": 0,
          "tool_ids": [],
          "tools": []
        }
      },
      "PromptAgentAPIModelOverride": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "The prompt for the agent",
            "x-convai-client-override": true
          },
          "native_mcp_server_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Native Mcp Server Ids",
            "description": "A list of Native MCP server ids to be used by the agent",
            "x-convai-client-override": true
          }
        },
        "type": "object",
        "title": "PromptAgentAPIModelOverride",
        "example": {
          "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation."
        }
      },
      "PromptAgentAPIModelOverrideConfig": {
        "properties": {
          "prompt": {
            "type": "boolean",
            "title": "Prompt",
            "description": "Whether to allow overriding the prompt field.",
            "default": false
          },
          "native_mcp_server_ids": {
            "type": "boolean",
            "title": "Native Mcp Server Ids",
            "description": "Whether to allow overriding the native_mcp_server_ids field.",
            "default": false
          }
        },
        "type": "object",
        "title": "PromptAgentAPIModelOverrideConfig"
      },
      "PromptEvaluationCriteria": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The unique identifier for the evaluation criteria"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "const": "prompt",
            "title": "Type",
            "description": "The type of evaluation criteria",
            "default": "prompt"
          },
          "conversation_goal_prompt": {
            "type": "string",
            "maxLength": 2000,
            "title": "Conversation Goal Prompt",
            "description": "The prompt that the agent should use to evaluate the conversation"
          },
          "use_knowledge_base": {
            "type": "boolean",
            "title": "Use Knowledge Base",
            "description": "When evaluating the prompt, should the agent's knowledge base be used.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "conversation_goal_prompt"
        ],
        "title": "PromptEvaluationCriteria",
        "description": "An evaluation using the transcript and a prompt for a yes/no achieved answer",
        "example": {
          "conversation_goal_prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
          "id": "1234567890",
          "name": "Customer satisfaction check",
          "use_knowledge_base": false
        }
      },
      "PronunciationDictionaryAliasRuleRequestModel": {
        "properties": {
          "string_to_replace": {
            "type": "string",
            "title": "String To Replace",
            "description": "The string to replace. Must be a non-empty string."
          },
          "type": {
            "type": "string",
            "const": "alias",
            "title": "Type",
            "description": "The type of the rule."
          },
          "alias": {
            "type": "string",
            "title": "Alias",
            "description": "The alias for the string to be replaced."
          }
        },
        "type": "object",
        "required": [
          "string_to_replace",
          "type",
          "alias"
        ],
        "title": "PronunciationDictionaryAliasRuleRequestModel",
        "example": {
          "alias": "tie-land",
          "string_to_replace": "Thailand",
          "type": "alias"
        }
      },
      "PronunciationDictionaryLocatorResponseModel": {
        "properties": {
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id"
          }
        },
        "type": "object",
        "required": [
          "pronunciation_dictionary_id",
          "version_id"
        ],
        "title": "PronunciationDictionaryLocatorResponseModel"
      },
      "PronunciationDictionaryPhonemeRuleRequestModel": {
        "properties": {
          "string_to_replace": {
            "type": "string",
            "title": "String To Replace",
            "description": "The string to replace. Must be a non-empty string."
          },
          "type": {
            "type": "string",
            "const": "phoneme",
            "title": "Type",
            "description": "The type of the rule."
          },
          "phoneme": {
            "type": "string",
            "title": "Phoneme",
            "description": "The phoneme rule."
          },
          "alphabet": {
            "type": "string",
            "title": "Alphabet",
            "description": "The alphabet to use with the phoneme rule."
          }
        },
        "type": "object",
        "required": [
          "string_to_replace",
          "type",
          "phoneme",
          "alphabet"
        ],
        "title": "PronunciationDictionaryPhonemeRuleRequestModel",
        "example": {
          "alphabet": "ipa",
          "phoneme": "/ˈtaɪ.lænd/",
          "string_to_replace": "Thailand",
          "type": "phoneme"
        }
      },
      "PronunciationDictionaryRulesResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the pronunciation dictionary."
          },
          "version_id": {
            "type": "string",
            "title": "Version Id",
            "description": "The version ID of the pronunciation dictionary."
          },
          "version_rules_num": {
            "type": "integer",
            "title": "Version Rules Num",
            "description": "The number of rules in the version of the pronunciation dictionary."
          }
        },
        "type": "object",
        "required": [
          "id",
          "version_id",
          "version_rules_num"
        ],
        "title": "PronunciationDictionaryRulesResponseModel",
        "example": {
          "id": "5xM3yVvZQKV0EfqQpLrJ",
          "version_id": "5xM3yVvZQKV0EfqQpLr2",
          "version_rules_num": 5
        }
      },
      "PronunciationDictionaryVersionLocatorDBModel": {
        "properties": {
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id"
          }
        },
        "type": "object",
        "required": [
          "pronunciation_dictionary_id",
          "version_id"
        ],
        "title": "PronunciationDictionaryVersionLocatorDBModel"
      },
      "PronunciationDictionaryVersionLocatorRequestModel": {
        "properties": {
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id",
            "description": "The ID of the pronunciation dictionary."
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id",
            "description": "The ID of the version of the pronunciation dictionary. If not provided, the latest version will be used."
          }
        },
        "type": "object",
        "required": [
          "pronunciation_dictionary_id"
        ],
        "title": "PronunciationDictionaryVersionLocatorRequestModel"
      },
      "PronunciationDictionaryVersionResponseModel": {
        "properties": {
          "version_id": {
            "type": "string",
            "title": "Version Id"
          },
          "version_rules_num": {
            "type": "integer",
            "title": "Version Rules Num"
          },
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "dictionary_name": {
            "type": "string",
            "title": "Dictionary Name"
          },
          "version_name": {
            "type": "string",
            "title": "Version Name"
          },
          "permission_on_resource": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission On Resource"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "creation_time_unix": {
            "type": "integer",
            "title": "Creation Time Unix"
          },
          "archived_time_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived Time Unix"
          }
        },
        "type": "object",
        "required": [
          "version_id",
          "version_rules_num",
          "pronunciation_dictionary_id",
          "dictionary_name",
          "version_name",
          "permission_on_resource",
          "created_by",
          "creation_time_unix"
        ],
        "title": "PronunciationDictionaryVersionResponseModel"
      },
      "PydanticPronunciationDictionaryVersionLocator": {
        "properties": {
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id",
            "description": "The ID of the pronunciation dictionary"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id",
            "description": "The ID of the version of the pronunciation dictionary"
          }
        },
        "type": "object",
        "required": [
          "pronunciation_dictionary_id",
          "version_id"
        ],
        "title": "PydanticPronunciationDictionaryVersionLocator",
        "description": "A locator for other documents to be able to reference a specific dictionary and it's version.\nThis is a pydantic version of PronunciationDictionaryVersionLocatorDBModel.\nRequired to ensure compat with the rest of the agent data models."
      },
      "QueryParamsJsonSchema": {
        "properties": {
          "properties": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "type": "object",
            "minProperties": 1,
            "title": "Properties"
          },
          "required": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Required"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "properties"
        ],
        "title": "QueryParamsJsonSchema"
      },
      "RAGDocumentIndexResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "model": {
            "$ref": "#/components/schemas/EmbeddingModelEnum"
          },
          "status": {
            "$ref": "#/components/schemas/RAGIndexStatus"
          },
          "progress_percentage": {
            "type": "number",
            "title": "Progress Percentage"
          },
          "document_model_index_usage": {
            "$ref": "#/components/schemas/RAGDocumentIndexUsage"
          }
        },
        "type": "object",
        "required": [
          "id",
          "model",
          "status",
          "progress_percentage",
          "document_model_index_usage"
        ],
        "title": "RAGDocumentIndexResponseModel"
      },
      "RAGDocumentIndexUsage": {
        "properties": {
          "used_bytes": {
            "type": "integer",
            "title": "Used Bytes"
          }
        },
        "type": "object",
        "required": [
          "used_bytes"
        ],
        "title": "RAGDocumentIndexUsage"
      },
      "RAGDocumentIndexesResponseModel": {
        "properties": {
          "indexes": {
            "items": {
              "$ref": "#/components/schemas/RAGDocumentIndexResponseModel"
            },
            "type": "array",
            "title": "Indexes"
          }
        },
        "type": "object",
        "required": [
          "indexes"
        ],
        "title": "RAGDocumentIndexesResponseModel"
      },
      "RAGIndexOverviewEmbeddingModelResponseModel": {
        "properties": {
          "model": {
            "$ref": "#/components/schemas/EmbeddingModelEnum"
          },
          "used_bytes": {
            "type": "integer",
            "title": "Used Bytes"
          }
        },
        "type": "object",
        "required": [
          "model",
          "used_bytes"
        ],
        "title": "RAGIndexOverviewEmbeddingModelResponseModel"
      },
      "RAGIndexOverviewResponseModel": {
        "properties": {
          "total_used_bytes": {
            "type": "integer",
            "title": "Total Used Bytes"
          },
          "total_max_bytes": {
            "type": "integer",
            "title": "Total Max Bytes"
          },
          "models": {
            "items": {
              "$ref": "#/components/schemas/RAGIndexOverviewEmbeddingModelResponseModel"
            },
            "type": "array",
            "title": "Models"
          }
        },
        "type": "object",
        "required": [
          "total_used_bytes",
          "total_max_bytes",
          "models"
        ],
        "title": "RAGIndexOverviewResponseModel"
      },
      "RAGIndexRequestModel": {
        "properties": {
          "model": {
            "$ref": "#/components/schemas/EmbeddingModelEnum"
          }
        },
        "type": "object",
        "required": [
          "model"
        ],
        "title": "RAGIndexRequestModel"
      },
      "RAGIndexStatus": {
        "type": "string",
        "enum": [
          "created",
          "processing",
          "failed",
          "succeeded",
          "rag_limit_exceeded",
          "document_too_small"
        ],
        "title": "RAGIndexStatus"
      },
      "RagChunkMetadata": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "chunk_id": {
            "type": "string",
            "title": "Chunk Id"
          },
          "vector_distance": {
            "type": "number",
            "title": "Vector Distance"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "chunk_id",
          "vector_distance"
        ],
        "title": "RagChunkMetadata"
      },
      "RagConfig": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": false
          },
          "embedding_model": {
            "$ref": "#/components/schemas/EmbeddingModelEnum",
            "default": "e5_mistral_7b_instruct"
          },
          "max_vector_distance": {
            "type": "number",
            "exclusiveMaximum": 1,
            "exclusiveMinimum": 0,
            "title": "Max Vector Distance",
            "description": "Maximum vector distance of retrieved chunks.",
            "default": 0.6,
            "examples": [
              0.5
            ]
          },
          "max_documents_length": {
            "type": "integer",
            "exclusiveMaximum": 10000000,
            "exclusiveMinimum": 0,
            "title": "Max Documents Length",
            "description": "Maximum total length of document chunks retrieved from RAG.",
            "default": 50000,
            "examples": [
              "50000"
            ]
          },
          "max_retrieved_rag_chunks_count": {
            "type": "integer",
            "maximum": 20,
            "exclusiveMinimum": 0,
            "title": "Max Retrieved Rag Chunks Count",
            "description": "Maximum number of RAG document chunks to initially retrieve from the vector store. These are then further filtered by vector distance and total length.",
            "default": 20,
            "examples": [
              5
            ]
          }
        },
        "type": "object",
        "title": "RagConfig"
      },
      "RagRetrievalInfo": {
        "properties": {
          "chunks": {
            "items": {
              "$ref": "#/components/schemas/RagChunkMetadata"
            },
            "type": "array",
            "title": "Chunks"
          },
          "embedding_model": {
            "$ref": "#/components/schemas/EmbeddingModelEnum"
          },
          "retrieval_query": {
            "type": "string",
            "title": "Retrieval Query"
          },
          "rag_latency_secs": {
            "type": "number",
            "title": "Rag Latency Secs"
          }
        },
        "type": "object",
        "required": [
          "chunks",
          "embedding_model",
          "retrieval_query",
          "rag_latency_secs"
        ],
        "title": "RagRetrievalInfo"
      },
      "ReaderResourceResponseModel": {
        "properties": {
          "resource_type": {
            "type": "string",
            "enum": [
              "read",
              "collection"
            ],
            "title": "Resource Type",
            "description": "The type of resource."
          },
          "resource_id": {
            "type": "string",
            "title": "Resource Id",
            "description": "The ID of the resource."
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "resource_id"
        ],
        "title": "ReaderResourceResponseModel",
        "example": {
          "resource_id": "FCwhRBWXzGAHq8TQ4Fs18",
          "resource_type": "read"
        }
      },
      "RecordingResponseModel": {
        "properties": {
          "recording_id": {
            "type": "string",
            "title": "Recording Id",
            "description": "The ID of the recording."
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type",
            "description": "The MIME type of the recording."
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes",
            "description": "The size of the recording in bytes."
          },
          "upload_date_unix": {
            "type": "integer",
            "title": "Upload Date Unix",
            "description": "The date of the recording in Unix time."
          },
          "transcription": {
            "type": "string",
            "title": "Transcription",
            "description": "The transcription of the recording."
          }
        },
        "type": "object",
        "required": [
          "recording_id",
          "mime_type",
          "size_bytes",
          "upload_date_unix",
          "transcription"
        ],
        "title": "RecordingResponseModel",
        "example": {
          "mime_type": "audio/mpeg",
          "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
          "size_bytes": 1000000,
          "transcription": "Hello, how are you?",
          "upload_date_unix": 1714204800
        }
      },
      "Render": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RenderType"
              },
              {
                "type": "null"
              }
            ]
          },
          "media_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DubbingMediaReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "complete",
              "processing",
              "failed"
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "id",
          "version",
          "language",
          "type",
          "media_ref",
          "status"
        ],
        "title": "Render"
      },
      "RenderType": {
        "type": "string",
        "enum": [
          "mp4",
          "aac",
          "mp3",
          "wav",
          "aaf",
          "tracks_zip",
          "clips_zip"
        ],
        "title": "RenderType"
      },
      "RequestPVCManualVerificationResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the request PVC manual verification request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "RequestPVCManualVerificationResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "ResourceAccessInfo": {
        "properties": {
          "is_creator": {
            "type": "boolean",
            "title": "Is Creator",
            "description": "Whether the user making the request is the creator of the agent"
          },
          "creator_name": {
            "type": "string",
            "title": "Creator Name",
            "description": "Name of the agent's creator"
          },
          "creator_email": {
            "type": "string",
            "title": "Creator Email",
            "description": "Email of the agent's creator"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Role",
            "description": "The role of the user making the request"
          }
        },
        "type": "object",
        "required": [
          "is_creator",
          "creator_name",
          "creator_email",
          "role"
        ],
        "title": "ResourceAccessInfo",
        "example": {
          "creator_email": "john.doe@example.com",
          "creator_name": "John Doe",
          "is_creator": true,
          "role": "admin"
        }
      },
      "ResourceMetadataResponseModel": {
        "properties": {
          "resource_id": {
            "type": "string",
            "title": "Resource Id",
            "description": "The ID of the resource."
          },
          "resource_type": {
            "$ref": "#/components/schemas/WorkspaceResourceType",
            "description": "The type of the resource."
          },
          "creator_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creator User Id",
            "description": "The ID of the user who created the resource."
          },
          "role_to_group_ids": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "propertyNames": {
              "enum": [
                "admin",
                "editor",
                "viewer"
              ]
            },
            "type": "object",
            "title": "Role To Group Ids",
            "description": "A mapping of roles to group IDs. When the resource is shared with a user, the group id is the user's id."
          },
          "share_options": {
            "items": {
              "$ref": "#/components/schemas/ShareOptionResponseModel"
            },
            "type": "array",
            "title": "Share Options",
            "description": "List of options for sharing the resource further in the workspace. These are users who don't have access to the resource yet."
          }
        },
        "type": "object",
        "required": [
          "resource_id",
          "resource_type",
          "creator_user_id",
          "role_to_group_ids",
          "share_options"
        ],
        "title": "ResourceMetadataResponseModel",
        "example": {
          "creator_user_id": "5zavrE1kZXv2lFw9BKgEkf0B5Wqo",
          "resource_id": "4ZUqyldxf71HqUbcP2Lc",
          "resource_type": "voice",
          "role_to_group_ids": {
            "admin": [
              "5zavrE1kZXv2lFw9BKgEkf0B5Wqo"
            ],
            "editor": [
              "8ruQDGM2R4w1mFbHI5aROCUjIpJZ"
            ],
            "viewer": []
          },
          "share_options": [
            {
              "id": "i2YYI6huwBmcgYydAXARmQJc3pmX",
              "name": "user@example.com",
              "type": "user"
            },
            {
              "id": "x1AfvYKAmiqxCnbvZeNXHqqthJaC",
              "name": "mygroup",
              "type": "group"
            }
          ]
        }
      },
      "SIPMediaEncryptionEnum": {
        "type": "string",
        "enum": [
          "disabled",
          "allowed",
          "required"
        ],
        "title": "SIPMediaEncryptionEnum"
      },
      "SIPTrunkCredentialsRequestModel": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "SIP trunk username"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "SIP trunk password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "SIPTrunkCredentialsRequestModel"
      },
      "SIPTrunkOutboundCallResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "conversation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Id"
          },
          "sip_call_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sip Call Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "conversation_id",
          "sip_call_id"
        ],
        "title": "SIPTrunkOutboundCallResponse"
      },
      "SIPTrunkTransportEnum": {
        "type": "string",
        "enum": [
          "auto",
          "udp",
          "tcp",
          "tls"
        ],
        "title": "SIPTrunkTransportEnum"
      },
      "SIPUriTransferDestination": {
        "properties": {
          "type": {
            "type": "string",
            "const": "sip_uri",
            "title": "Type",
            "default": "sip_uri"
          },
          "sip_uri": {
            "type": "string",
            "title": "Sip Uri"
          }
        },
        "type": "object",
        "required": [
          "sip_uri"
        ],
        "title": "SIPUriTransferDestination"
      },
      "SafetyCommonModel": {
        "properties": {
          "ivc": {
            "$ref": "#/components/schemas/SafetyEvaluation"
          },
          "non_ivc": {
            "$ref": "#/components/schemas/SafetyEvaluation"
          }
        },
        "type": "object",
        "title": "SafetyCommonModel",
        "description": "Safety object that has the information of safety evaluations based on used voice."
      },
      "SafetyEvaluation": {
        "properties": {
          "is_unsafe": {
            "type": "boolean",
            "title": "Is Unsafe",
            "default": false
          },
          "llm_reason": {
            "type": "string",
            "title": "Llm Reason",
            "default": ""
          },
          "safety_prompt_version": {
            "type": "integer",
            "title": "Safety Prompt Version",
            "default": 0
          },
          "matched_rule_id": {
            "items": {
              "$ref": "#/components/schemas/SafetyRule"
            },
            "type": "array",
            "title": "Matched Rule Id"
          }
        },
        "type": "object",
        "title": "SafetyEvaluation",
        "description": "Safety evaluation of the agent. Prompt and first message is taken into account.\nThe unsafe reason is provided from the evaluation"
      },
      "SafetyResponseModel": {
        "properties": {
          "is_blocked_ivc": {
            "type": "boolean",
            "title": "Is Blocked Ivc",
            "default": false
          },
          "is_blocked_non_ivc": {
            "type": "boolean",
            "title": "Is Blocked Non Ivc",
            "default": false
          },
          "ignore_safety_evaluation": {
            "type": "boolean",
            "title": "Ignore Safety Evaluation",
            "default": false
          }
        },
        "type": "object",
        "title": "SafetyResponseModel"
      },
      "SafetyRule": {
        "type": "string",
        "enum": [
          "sexual_minors",
          "forget_moderation",
          "extremism",
          "scam_fraud",
          "political",
          "self_harm",
          "illegal_distribution_medical",
          "sexual_adults",
          "unknown"
        ],
        "title": "SafetyRule"
      },
      "SampleResponseModel": {
        "properties": {
          "sample_id": {
            "type": "string",
            "title": "Sample Id",
            "description": "The ID of the sample."
          },
          "file_name": {
            "type": "string",
            "title": "File Name",
            "description": "The name of the sample file."
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type",
            "description": "The MIME type of the sample file."
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes",
            "description": "The size of the sample file in bytes."
          },
          "hash": {
            "type": "string",
            "title": "Hash",
            "description": "The hash of the sample file."
          },
          "duration_secs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Secs"
          },
          "remove_background_noise": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Background Noise"
          },
          "has_isolated_audio": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Isolated Audio"
          },
          "has_isolated_audio_preview": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Isolated Audio Preview"
          },
          "speaker_separation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SpeakerSeparationResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "trim_start": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim Start"
          },
          "trim_end": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim End"
          }
        },
        "type": "object",
        "required": [
          "sample_id",
          "file_name",
          "mime_type",
          "size_bytes",
          "hash"
        ],
        "title": "SampleResponseModel",
        "example": {
          "file_name": "sample.mp3",
          "hash": "1234567890",
          "mime_type": "audio/mpeg",
          "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "size_bytes": 1000000
        }
      },
      "SecretDependencyType": {
        "type": "string",
        "enum": [
          "conversation_initiation_webhook"
        ],
        "title": "SecretDependencyType"
      },
      "SegmentCreatePayload": {
        "properties": {
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "translations": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Translations"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time"
        ],
        "title": "SegmentCreatePayload"
      },
      "SegmentCreateResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "new_segment": {
            "type": "string",
            "title": "New Segment"
          }
        },
        "type": "object",
        "required": [
          "version",
          "new_segment"
        ],
        "title": "SegmentCreateResponse"
      },
      "SegmentDeleteResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "SegmentDeleteResponse"
      },
      "SegmentDubResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "SegmentDubResponse"
      },
      "SegmentSubtitleFrame": {
        "properties": {
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "lines": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Lines"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time",
          "lines"
        ],
        "title": "SegmentSubtitleFrame"
      },
      "SegmentTranscriptionResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "SegmentTranscriptionResponse"
      },
      "SegmentTranslationResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "SegmentTranslationResponse"
      },
      "SegmentUpdatePayload": {
        "properties": {
          "start_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          }
        },
        "type": "object",
        "title": "SegmentUpdatePayload"
      },
      "SegmentUpdateResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "SegmentUpdateResponse"
      },
      "SegmentedJsonExportOptions": {
        "properties": {
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          },
          "format": {
            "type": "string",
            "const": "segmented_json",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "type": "object",
        "required": [
          "format"
        ],
        "title": "SegmentedJsonExportOptions"
      },
      "ShareOptionResponseModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the principal."
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the principal."
          },
          "type": {
            "type": "string",
            "enum": [
              "user",
              "group",
              "key"
            ],
            "title": "Type",
            "description": "The type of the principal: user, group, or service account (under 'key')."
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "type"
        ],
        "title": "ShareOptionResponseModel"
      },
      "SimilarVoice": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "category": {
            "type": "string",
            "enum": [
              "premade",
              "cloned",
              "generated",
              "professional",
              "famous"
            ],
            "title": "Category"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "name",
          "category"
        ],
        "title": "SimilarVoice"
      },
      "SimilarVoicesForSpeakerResponse": {
        "properties": {
          "voices": {
            "items": {
              "$ref": "#/components/schemas/SimilarVoice"
            },
            "type": "array",
            "title": "Voices"
          }
        },
        "type": "object",
        "required": [
          "voices"
        ],
        "title": "SimilarVoicesForSpeakerResponse"
      },
      "SkipTurnToolConfig": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "skip_turn",
            "title": "System Tool Type",
            "default": "skip_turn"
          }
        },
        "type": "object",
        "title": "SkipTurnToolConfig",
        "description": "Allows the agent to explicitly skip its turn.\n\nThis tool should be invoked by the LLM when the user indicates they would like\nto think or take a short pause before continuing the conversation—e.g. when\nthey say: \"Give me a second\", \"Let me think\", or \"One moment please\".  After\ncalling this tool, the assistant should not speak until the user speaks\nagain, or another normal turn-taking condition is met.  The tool itself has\nno parameters and performs no side-effects other than informing the backend\nthat the current turn generation is complete."
      },
      "SkipTurnToolResponseModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "skip_turn_success",
            "title": "Result Type",
            "default": "skip_turn_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "title": "SkipTurnToolResponseModel"
      },
      "SongMetadata": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "The title of the song"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the song"
          },
          "genres": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Genres",
            "description": "The genres of the song"
          },
          "languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Languages",
            "description": "The languages of the song"
          },
          "is_explicit": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Explicit",
            "description": "Whether the song is explicit"
          }
        },
        "type": "object",
        "required": [
          "title",
          "description",
          "genres",
          "languages",
          "is_explicit"
        ],
        "title": "SongMetadata",
        "example": {
          "description": "My Song Description",
          "genres": [
            "pop",
            "rock",
            "jazz"
          ],
          "is_explicit": false,
          "languages": [
            "en",
            "fr"
          ],
          "title": "My Song"
        }
      },
      "SongSection": {
        "properties": {
          "section_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Section Name",
            "description": "The name of the section. Must be between 1 and 100 characters."
          },
          "positive_local_styles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 50,
            "title": "Positive Local Styles",
            "description": "The styles that should be present in this section."
          },
          "negative_local_styles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 50,
            "title": "Negative Local Styles",
            "description": "The styles that should not be present in this section."
          },
          "duration_ms": {
            "type": "integer",
            "maximum": 120000,
            "minimum": 3000,
            "title": "Duration Ms",
            "description": "The duration of the section in milliseconds. Must be between 3000ms and 120000ms."
          },
          "lines": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 30,
            "title": "Lines",
            "description": "The lyrics of the section."
          }
        },
        "type": "object",
        "required": [
          "section_name",
          "positive_local_styles",
          "negative_local_styles",
          "duration_ms",
          "lines"
        ],
        "title": "SongSection"
      },
      "SpeakerAudioResponseModel": {
        "properties": {
          "audio_base_64": {
            "type": "string",
            "title": "Audio Base 64",
            "description": "The base64 encoded audio."
          },
          "media_type": {
            "type": "string",
            "title": "Media Type",
            "description": "The media type of the audio."
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs",
            "description": "The duration of the audio in seconds."
          }
        },
        "type": "object",
        "required": [
          "audio_base_64",
          "media_type",
          "duration_secs"
        ],
        "title": "SpeakerAudioResponseModel",
        "example": {
          "audio_base_64": "audio_base_64",
          "duration_secs": 5,
          "media_type": "audio/mpeg"
        }
      },
      "SpeakerResponseModel": {
        "properties": {
          "speaker_id": {
            "type": "string",
            "title": "Speaker Id",
            "description": "The ID of the speaker."
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs",
            "description": "The duration of the speaker segment in seconds."
          },
          "utterances": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UtteranceResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utterances",
            "description": "The utterances of the speaker."
          }
        },
        "type": "object",
        "required": [
          "speaker_id",
          "duration_secs"
        ],
        "title": "SpeakerResponseModel",
        "example": {
          "duration_secs": 5,
          "speaker_id": "DCwhRBWXzGAHq8TQ4Fs18"
        }
      },
      "SpeakerSegment": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "subtitles": {
            "items": {
              "$ref": "#/components/schemas/SegmentSubtitleFrame"
            },
            "type": "array",
            "title": "Subtitles"
          },
          "dubs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/DubbedSegment"
            },
            "type": "object",
            "title": "Dubs"
          }
        },
        "type": "object",
        "required": [
          "id",
          "start_time",
          "end_time",
          "text",
          "subtitles",
          "dubs"
        ],
        "title": "SpeakerSegment"
      },
      "SpeakerSeparationResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the voice."
          },
          "sample_id": {
            "type": "string",
            "title": "Sample Id",
            "description": "The ID of the sample."
          },
          "status": {
            "type": "string",
            "enum": [
              "not_started",
              "pending",
              "completed",
              "failed"
            ],
            "title": "Status",
            "description": "The status of the speaker separation."
          },
          "speakers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/SpeakerResponseModel"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speakers",
            "description": "The speakers of the sample."
          },
          "selected_speaker_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selected Speaker Ids",
            "description": "The IDs of the selected speakers."
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "sample_id",
          "status"
        ],
        "title": "SpeakerSeparationResponseModel",
        "example": {
          "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "status": "not_started",
          "voice_id": "DCwhRBWXzGAHq8TQ4Fs18"
        }
      },
      "SpeakerTrack": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "media_ref": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "speaker_name": {
            "type": "string",
            "title": "Speaker Name"
          },
          "voices": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Voices"
          },
          "segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Segments"
          }
        },
        "type": "object",
        "required": [
          "id",
          "media_ref",
          "speaker_name",
          "voices",
          "segments"
        ],
        "title": "SpeakerTrack"
      },
      "SpeakerUpdatedResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "SpeakerUpdatedResponse"
      },
      "SpeechHistoryItemResponseModel": {
        "properties": {
          "history_item_id": {
            "type": "string",
            "title": "History Item Id",
            "description": "The ID of the history item."
          },
          "request_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id",
            "description": "The ID of the request."
          },
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id",
            "description": "The ID of the voice used."
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The ID of the model."
          },
          "voice_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Name",
            "description": "The name of the voice."
          },
          "voice_category": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "premade",
                  "cloned",
                  "generated",
                  "professional"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Category",
            "description": "The category of the voice. Either 'premade', 'cloned', 'generated' or 'professional'."
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "description": "The text used to generate the audio item."
          },
          "date_unix": {
            "type": "integer",
            "title": "Date Unix",
            "description": "Unix timestamp of when the item was created."
          },
          "character_count_change_from": {
            "type": "integer",
            "title": "Character Count Change From",
            "description": "The character count change from."
          },
          "character_count_change_to": {
            "type": "integer",
            "title": "Character Count Change To",
            "description": "The character count change to."
          },
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "The content type of the generated item."
          },
          "state": {
            "type": "string",
            "enum": [
              "created",
              "deleted",
              "processing"
            ],
            "title": "State",
            "description": "The state of the history item."
          },
          "settings": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings",
            "description": "The settings of the history item."
          },
          "feedback": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Feedback associated with the generated item. Returns null if no feedback has been provided."
          },
          "share_link_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Link Id",
            "description": "The ID of the share link."
          },
          "source": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "TTS",
                  "STS",
                  "Projects",
                  "PD",
                  "AN",
                  "Dubbing",
                  "PlayAPI",
                  "ConvAI"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "The source of the history item. Either TTS (text to speech), STS (speech to text), AN (audio native), Projects, Dubbing, PlayAPI, PD (pronunciation dictionary) or ConvAI (conversational AI)."
          },
          "alignments": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/HistoryAlignmentsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The alignments of the history item."
          },
          "dialogue": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DialogueInputResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dialogue",
            "description": "The dialogue (voice and text pairs) used to generate the audio item. If this is set then the top level `text` and `voice_id` fields will be empty."
          }
        },
        "type": "object",
        "required": [
          "history_item_id",
          "date_unix",
          "character_count_change_from",
          "character_count_change_to",
          "content_type",
          "state"
        ],
        "title": "SpeechHistoryItemResponseModel",
        "example": {
          "character_count_change_from": 17189,
          "character_count_change_to": 17231,
          "content_type": "audio/mpeg",
          "date_unix": 1714650306,
          "history_item_id": "ja9xsmfGhxYcymxGcOGB",
          "model_id": "eleven_multilingual_v2",
          "request_id": "BF0BZg4IwLGBlaVjv9Im",
          "settings": {
            "similarity_boost": 0.5,
            "stability": 0.71,
            "style": 0,
            "use_speaker_boost": true
          },
          "source": "TTS",
          "state": "created",
          "text": "Hello, world!",
          "voice_category": "premade",
          "voice_id": "21m00Tcm4TlvDq8ikWAM",
          "voice_name": "Rachel"
        }
      },
      "SpeechToTextCharacterResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The character that was transcribed."
          },
          "start": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start",
            "description": "The start time of the character in seconds."
          },
          "end": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End",
            "description": "The end time of the character in seconds."
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "SpeechToTextCharacterResponseModel",
        "example": {
          "end": 0.1,
          "start": 0,
          "text": "H"
        }
      },
      "SpeechToTextChunkResponseModel": {
        "properties": {
          "language_code": {
            "type": "string",
            "title": "Language Code",
            "description": "The detected language code (e.g. 'eng' for English)."
          },
          "language_probability": {
            "type": "number",
            "title": "Language Probability",
            "description": "The confidence score of the language detection (0 to 1)."
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The raw text of the transcription."
          },
          "words": {
            "items": {
              "$ref": "#/components/schemas/SpeechToTextWordResponseModel"
            },
            "type": "array",
            "title": "Words",
            "description": "List of words with their timing information."
          },
          "channel_index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Channel Index",
            "description": "The channel index this transcript belongs to (for multichannel audio)."
          },
          "additional_formats": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/AdditionalFormatResponseModel"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Formats",
            "description": "Requested additional formats of the transcript."
          }
        },
        "type": "object",
        "required": [
          "language_code",
          "language_probability",
          "text",
          "words"
        ],
        "title": "SpeechToTextChunkResponseModel",
        "description": "Chunk-level detail of the transcription with timing information.",
        "example": {
          "language_code": "en",
          "language_probability": 0.98,
          "text": "Hello world!",
          "words": [
            {
              "end": 0.5,
              "logprob": -0.124,
              "speaker_id": "speaker_1",
              "start": 0,
              "text": "Hello",
              "type": "word"
            },
            {
              "end": 0.5,
              "logprob": 0,
              "speaker_id": "speaker_1",
              "start": 0.5,
              "text": " ",
              "type": "spacing"
            },
            {
              "end": 1.2,
              "logprob": -0.089,
              "speaker_id": "speaker_1",
              "start": 0.5,
              "text": "world!",
              "type": "word"
            }
          ]
        }
      },
      "SpeechToTextWebhookResponseModel": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "The message of the webhook response."
          },
          "request_id": {
            "type": "string",
            "title": "Request Id",
            "description": "The request ID of the webhook response."
          }
        },
        "type": "object",
        "required": [
          "message",
          "request_id"
        ],
        "title": "SpeechToTextWebhookResponseModel",
        "example": {
          "message": "Request accepted. Transcription result will be sent to the webhook endpoint.",
          "request_id": "1234567890"
        }
      },
      "SpeechToTextWordResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The word or sound that was transcribed."
          },
          "start": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start",
            "description": "The start time of the word or sound in seconds."
          },
          "end": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End",
            "description": "The end time of the word or sound in seconds."
          },
          "type": {
            "type": "string",
            "enum": [
              "word",
              "spacing",
              "audio_event"
            ],
            "title": "Type",
            "description": "The type of the word or sound. 'audio_event' is used for non-word sounds like laughter or footsteps."
          },
          "speaker_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaker Id",
            "description": "Unique identifier for the speaker of this word."
          },
          "logprob": {
            "type": "number",
            "title": "Logprob",
            "description": "The log of the probability with which this word was predicted. Logprobs are in range [-infinity, 0], higher logprobs indicate a higher confidence the model has in its predictions."
          },
          "characters": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SpeechToTextCharacterResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Characters",
            "description": "The characters that make up the word and their timing information."
          }
        },
        "type": "object",
        "required": [
          "text",
          "type",
          "logprob"
        ],
        "title": "SpeechToTextWordResponseModel",
        "description": "Word-level detail of the transcription with timing information.",
        "example": {
          "characters": [
            {
              "end": 0.1,
              "start": 0,
              "text": "H"
            },
            {
              "end": 0.2,
              "start": 0.1,
              "text": "e"
            },
            {
              "end": 0.3,
              "start": 0.2,
              "text": "l"
            },
            {
              "end": 0.4,
              "start": 0.3,
              "text": "l"
            },
            {
              "end": 0.5,
              "start": 0.4,
              "text": "o"
            }
          ],
          "end": 0.5,
          "logprob": -0.124,
          "speaker_id": "speaker_1",
          "start": 0,
          "text": "Hello",
          "type": "word"
        }
      },
      "SrtExportOptions": {
        "properties": {
          "max_characters_per_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Characters Per Line",
            "default": 50
          },
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": false
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          },
          "format": {
            "type": "string",
            "const": "srt",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S",
            "default": 0.6
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S",
            "default": 5
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars",
            "default": 90
          }
        },
        "type": "object",
        "required": [
          "format"
        ],
        "title": "SrtExportOptions"
      },
      "StartPVCVoiceTrainingResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the start PVC voice training request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "StartPVCVoiceTrainingResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "StartSpeakerSeparationResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the start speaker seperation request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "StartSpeakerSeparationResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "StreamingAudioChunkWithTimestampsResponseModel": {
        "properties": {
          "audio_base64": {
            "type": "string",
            "title": "Audio Base64",
            "description": "Base64 encoded audio data"
          },
          "alignment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp information for each character in the original text"
          },
          "normalized_alignment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp information for each character in the normalized text"
          }
        },
        "type": "object",
        "required": [
          "audio_base64"
        ],
        "title": "StreamingAudioChunkWithTimestampsResponseModel",
        "example": {
          "alignment": {
            "character_end_times_seconds": [
              0.1,
              0.2
            ],
            "character_start_times_seconds": [
              0,
              0.1
            ],
            "characters": [
              "H",
              "e"
            ]
          },
          "audio_base64": "base64_encoded_audio_chunk",
          "normalized_alignment": {
            "character_end_times_seconds": [
              0.1,
              0.2
            ],
            "character_start_times_seconds": [
              0,
              0.1
            ],
            "characters": [
              "H",
              "e"
            ]
          }
        }
      },
      "SubscriptionExtrasResponseModel": {
        "properties": {
          "concurrency": {
            "type": "integer",
            "title": "Concurrency",
            "description": "The concurrency of the user."
          },
          "convai_concurrency": {
            "type": "integer",
            "title": "Convai Concurrency",
            "description": "The Convai concurrency of the user."
          },
          "convai_chars_per_minute": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Convai Chars Per Minute",
            "description": "The Convai characters per minute of the user. This field is deprecated and will always return None."
          },
          "convai_asr_chars_per_minute": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Convai Asr Chars Per Minute",
            "description": "The Convai ASR characters per minute of the user. This field is deprecated and will always return None."
          },
          "force_logging_disabled": {
            "type": "boolean",
            "title": "Force Logging Disabled",
            "description": "Whether the user's logging is disabled."
          },
          "can_request_manual_pro_voice_verification": {
            "type": "boolean",
            "title": "Can Request Manual Pro Voice Verification",
            "description": "Whether the user can request manual pro voice verification."
          },
          "can_bypass_voice_captcha": {
            "type": "boolean",
            "title": "Can Bypass Voice Captcha",
            "description": "Whether the user can bypass the voice captcha."
          },
          "moderation": {
            "$ref": "#/components/schemas/ModerationStatusResponseModel",
            "description": "The moderation status of the user."
          },
          "unused_characters_rolled_over_from_previous_period": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unused Characters Rolled Over From Previous Period",
            "description": "The unused characters rolled over from the previous period."
          },
          "overused_characters_rolled_over_from_previous_period": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Overused Characters Rolled Over From Previous Period",
            "description": "The overused characters rolled over from the previous period."
          },
          "usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubscriptionUsageResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Data on how the subscription is being used."
          }
        },
        "type": "object",
        "required": [
          "concurrency",
          "convai_concurrency",
          "force_logging_disabled",
          "can_request_manual_pro_voice_verification",
          "can_bypass_voice_captcha",
          "moderation"
        ],
        "title": "SubscriptionExtrasResponseModel",
        "example": {
          "can_bypass_voice_captcha": true,
          "can_request_manual_pro_voice_verification": true,
          "concurrency": 10,
          "convai_concurrency": 10,
          "force_logging_disabled": false,
          "moderation": {
            "enterprise_background_moderation_enabled": false,
            "enterprise_check_block_nogo_voice": false,
            "enterprise_check_nogo_voice": false,
            "is_in_probation": false,
            "never_live_moderate": false,
            "nogo_voice_similar_voice_upload_count": 0,
            "on_watchlist": false
          },
          "overused_characters_rolled_over_from_previous_period": 1000,
          "unused_characters_rolled_over_from_previous_period": 1000,
          "usage": {
            "actual_reported_credits": 1000,
            "manually_gifted_credits_quota": 1000,
            "manually_gifted_credits_used": 1000,
            "paid_usage_based_credits_used": 1000,
            "rollover_credits_quota": 1000,
            "rollover_credits_used": 1000,
            "subscription_cycle_credits_quota": 1000,
            "subscription_cycle_credits_used": 1000
          }
        }
      },
      "SubscriptionResponseModel": {
        "properties": {
          "tier": {
            "type": "string",
            "title": "Tier",
            "description": "The tier of the user's subscription."
          },
          "character_count": {
            "type": "integer",
            "title": "Character Count",
            "description": "The number of characters used by the user."
          },
          "character_limit": {
            "type": "integer",
            "title": "Character Limit",
            "description": "The maximum number of characters allowed in the current billing period."
          },
          "max_character_limit_extension": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Character Limit Extension",
            "description": "Maximum number of characters that the character limit can be exceeded by. Managed by the workspace admin."
          },
          "can_extend_character_limit": {
            "type": "boolean",
            "title": "Can Extend Character Limit",
            "description": "Whether the user can extend their character limit."
          },
          "allowed_to_extend_character_limit": {
            "type": "boolean",
            "title": "Allowed To Extend Character Limit",
            "description": "Whether the user is allowed to extend their character limit."
          },
          "next_character_count_reset_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Character Count Reset Unix",
            "description": "The Unix timestamp of the next character count reset."
          },
          "voice_slots_used": {
            "type": "integer",
            "title": "Voice Slots Used",
            "description": "The number of voice slots used by the user."
          },
          "professional_voice_slots_used": {
            "type": "integer",
            "title": "Professional Voice Slots Used",
            "description": "The number of professional voice slots used by the workspace/user if single seat."
          },
          "voice_limit": {
            "type": "integer",
            "title": "Voice Limit",
            "description": "The maximum number of voice slots allowed for the user."
          },
          "max_voice_add_edits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Voice Add Edits",
            "description": "The maximum number of voice add/edits allowed for the user."
          },
          "voice_add_edit_counter": {
            "type": "integer",
            "title": "Voice Add Edit Counter",
            "description": "The number of voice add/edits used by the user."
          },
          "professional_voice_limit": {
            "type": "integer",
            "title": "Professional Voice Limit",
            "description": "The maximum number of professional voices allowed for the user."
          },
          "can_extend_voice_limit": {
            "type": "boolean",
            "title": "Can Extend Voice Limit",
            "description": "Whether the user can extend their voice limit."
          },
          "can_use_instant_voice_cloning": {
            "type": "boolean",
            "title": "Can Use Instant Voice Cloning",
            "description": "Whether the user can use instant voice cloning."
          },
          "can_use_professional_voice_cloning": {
            "type": "boolean",
            "title": "Can Use Professional Voice Cloning",
            "description": "Whether the user can use professional voice cloning."
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "usd",
                  "eur"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "The currency of the user's subscription."
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatusType",
            "description": "The status of the user's subscription."
          },
          "billing_period": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "monthly_period",
                  "annual_period"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Billing Period",
            "description": "The billing period of the user's subscription."
          },
          "character_refresh_period": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "monthly_period",
                  "annual_period"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Refresh Period",
            "description": "The character refresh period of the user's subscription."
          }
        },
        "type": "object",
        "required": [
          "tier",
          "character_count",
          "character_limit",
          "max_character_limit_extension",
          "can_extend_character_limit",
          "allowed_to_extend_character_limit",
          "voice_slots_used",
          "professional_voice_slots_used",
          "voice_limit",
          "voice_add_edit_counter",
          "professional_voice_limit",
          "can_extend_voice_limit",
          "can_use_instant_voice_cloning",
          "can_use_professional_voice_cloning",
          "status"
        ],
        "title": "SubscriptionResponseModel",
        "example": {
          "allowed_to_extend_character_limit": false,
          "billing_period": "monthly_period",
          "can_extend_character_limit": false,
          "can_extend_voice_limit": false,
          "can_use_instant_voice_cloning": true,
          "can_use_professional_voice_cloning": true,
          "character_count": 17231,
          "character_limit": 100000,
          "character_refresh_period": "monthly_period",
          "currency": "usd",
          "max_character_limit_extension": 10000,
          "max_voice_add_edits": 230,
          "next_character_count_reset_unix": 1738356858,
          "professional_voice_limit": 1,
          "professional_voice_slots_used": 0,
          "status": "free",
          "tier": "trial",
          "voice_add_edit_counter": 212,
          "voice_limit": 120,
          "voice_slots_used": 1
        }
      },
      "SubscriptionStatusType": {
        "type": "string",
        "enum": [
          "trialing",
          "active",
          "incomplete",
          "past_due",
          "free",
          "free_disabled"
        ],
        "title": "SubscriptionStatusType"
      },
      "SubscriptionUsageResponseModel": {
        "properties": {
          "rollover_credits_quota": {
            "type": "integer",
            "title": "Rollover Credits Quota",
            "description": "The rollover credits quota."
          },
          "subscription_cycle_credits_quota": {
            "type": "integer",
            "title": "Subscription Cycle Credits Quota",
            "description": "The subscription cycle credits quota."
          },
          "manually_gifted_credits_quota": {
            "type": "integer",
            "title": "Manually Gifted Credits Quota",
            "description": "The manually gifted credits quota."
          },
          "rollover_credits_used": {
            "type": "integer",
            "title": "Rollover Credits Used",
            "description": "The rollover credits used."
          },
          "subscription_cycle_credits_used": {
            "type": "integer",
            "title": "Subscription Cycle Credits Used",
            "description": "The subscription cycle credits used."
          },
          "manually_gifted_credits_used": {
            "type": "integer",
            "title": "Manually Gifted Credits Used",
            "description": "The manually gifted credits used."
          },
          "paid_usage_based_credits_used": {
            "type": "integer",
            "title": "Paid Usage Based Credits Used",
            "description": "The paid usage based credits used."
          },
          "actual_reported_credits": {
            "type": "integer",
            "title": "Actual Reported Credits",
            "description": "The actual reported credits."
          }
        },
        "type": "object",
        "required": [
          "rollover_credits_quota",
          "subscription_cycle_credits_quota",
          "manually_gifted_credits_quota",
          "rollover_credits_used",
          "subscription_cycle_credits_used",
          "manually_gifted_credits_used",
          "paid_usage_based_credits_used",
          "actual_reported_credits"
        ],
        "title": "SubscriptionUsageResponseModel",
        "example": {
          "actual_reported_credits": 1000,
          "manually_gifted_credits_quota": 1000,
          "manually_gifted_credits_used": 1000,
          "paid_usage_based_credits_used": 1000,
          "rollover_credits_quota": 1000,
          "rollover_credits_used": 1000,
          "subscription_cycle_credits_quota": 1000,
          "subscription_cycle_credits_used": 1000
        }
      },
      "SupportedVoice": {
        "properties": {
          "label": {
            "type": "string",
            "minLength": 1,
            "title": "Label"
          },
          "voice_id": {
            "type": "string",
            "minLength": 1,
            "title": "Voice Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "model_family": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSModelFamily"
              },
              {
                "type": "null"
              }
            ]
          },
          "optimize_streaming_latency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSOptimizeStreamingLatency"
              },
              {
                "type": "null"
              }
            ]
          },
          "stability": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability"
          },
          "speed": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.2,
                "minimum": 0.7
              },
              {
                "type": "null"
              }
            ],
            "title": "Speed"
          },
          "similarity_boost": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Boost"
          }
        },
        "type": "object",
        "required": [
          "label",
          "voice_id"
        ],
        "title": "SupportedVoice"
      },
      "SystemToolConfig-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "system",
            "title": "Type",
            "description": "The type of tool",
            "default": "system"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete.",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "params": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EndCallToolConfig"
              },
              {
                "$ref": "#/components/schemas/LanguageDetectionToolConfig"
              },
              {
                "$ref": "#/components/schemas/TransferToAgentToolConfig"
              },
              {
                "$ref": "#/components/schemas/TransferToNumberToolConfig-Input"
              },
              {
                "$ref": "#/components/schemas/SkipTurnToolConfig"
              },
              {
                "$ref": "#/components/schemas/PlayDTMFToolConfig"
              },
              {
                "$ref": "#/components/schemas/VoicemailDetectionToolConfig"
              }
            ],
            "title": "Params",
            "discriminator": {
              "propertyName": "system_tool_type",
              "mapping": {
                "end_call": "#/components/schemas/EndCallToolConfig",
                "language_detection": "#/components/schemas/LanguageDetectionToolConfig",
                "play_keypad_touch_tone": "#/components/schemas/PlayDTMFToolConfig",
                "skip_turn": "#/components/schemas/SkipTurnToolConfig",
                "transfer_to_agent": "#/components/schemas/TransferToAgentToolConfig",
                "transfer_to_number": "#/components/schemas/TransferToNumberToolConfig-Input",
                "voicemail_detection": "#/components/schemas/VoicemailDetectionToolConfig"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "params"
        ],
        "title": "SystemToolConfig",
        "description": "A system tool is a tool that is used to call a system method in the server",
        "example": {
          "description": "Ends the current conversation",
          "name": "end_call",
          "params": {
            "system_tool_type": "end_call"
          },
          "type": "system"
        }
      },
      "SystemToolConfig-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "system",
            "title": "Type",
            "description": "The type of tool",
            "default": "system"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete.",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "params": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EndCallToolConfig"
              },
              {
                "$ref": "#/components/schemas/LanguageDetectionToolConfig"
              },
              {
                "$ref": "#/components/schemas/TransferToAgentToolConfig"
              },
              {
                "$ref": "#/components/schemas/TransferToNumberToolConfig-Output"
              },
              {
                "$ref": "#/components/schemas/SkipTurnToolConfig"
              },
              {
                "$ref": "#/components/schemas/PlayDTMFToolConfig"
              },
              {
                "$ref": "#/components/schemas/VoicemailDetectionToolConfig"
              }
            ],
            "title": "Params",
            "discriminator": {
              "propertyName": "system_tool_type",
              "mapping": {
                "end_call": "#/components/schemas/EndCallToolConfig",
                "language_detection": "#/components/schemas/LanguageDetectionToolConfig",
                "play_keypad_touch_tone": "#/components/schemas/PlayDTMFToolConfig",
                "skip_turn": "#/components/schemas/SkipTurnToolConfig",
                "transfer_to_agent": "#/components/schemas/TransferToAgentToolConfig",
                "transfer_to_number": "#/components/schemas/TransferToNumberToolConfig-Output",
                "voicemail_detection": "#/components/schemas/VoicemailDetectionToolConfig"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "params"
        ],
        "title": "SystemToolConfig",
        "description": "A system tool is a tool that is used to call a system method in the server",
        "example": {
          "description": "Ends the current conversation",
          "name": "end_call",
          "params": {
            "system_tool_type": "end_call"
          },
          "type": "system"
        }
      },
      "TTSConversationalConfig-Input": {
        "properties": {
          "model_id": {
            "$ref": "#/components/schemas/TTSConversationalModel",
            "description": "The model to use for TTS",
            "default": "eleven_turbo_v2"
          },
          "voice_id": {
            "type": "string",
            "minLength": 0,
            "title": "Voice Id",
            "description": "The voice ID to use for TTS",
            "default": "cjVigY5qzO86Huf0OWal",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "supported_voices": {
            "items": {
              "$ref": "#/components/schemas/SupportedVoice"
            },
            "type": "array",
            "title": "Supported Voices",
            "description": "Additional supported voices for the agent"
          },
          "agent_output_audio_format": {
            "$ref": "#/components/schemas/TTSOutputFormat",
            "description": "The audio format to use for TTS",
            "default": "pcm_16000"
          },
          "optimize_streaming_latency": {
            "$ref": "#/components/schemas/TTSOptimizeStreamingLatency",
            "description": "The optimization for streaming latency",
            "default": 3
          },
          "stability": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Stability",
            "description": "The stability of generated speech",
            "default": 0.5
          },
          "speed": {
            "type": "number",
            "maximum": 1.2,
            "minimum": 0.7,
            "title": "Speed",
            "description": "The speed of generated speech",
            "default": 1
          },
          "similarity_boost": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Boost",
            "description": "The similarity boost for generated speech",
            "default": 0.8
          },
          "pronunciation_dictionary_locators": {
            "items": {
              "$ref": "#/components/schemas/PydanticPronunciationDictionaryVersionLocator"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Locators",
            "description": "The pronunciation dictionary locators"
          }
        },
        "type": "object",
        "title": "TTSConversationalConfig",
        "example": {
          "agent_output_audio_format": "pcm_16000",
          "model_id": "eleven_turbo_v2",
          "optimize_streaming_latency": 3,
          "pronunciation_dictionary_locators": [],
          "similarity_boost": 0.8,
          "speed": 1,
          "stability": 0.5,
          "voice_id": "cjVigY5qzO86Huf0OWal"
        }
      },
      "TTSConversationalConfig-Output": {
        "properties": {
          "model_id": {
            "$ref": "#/components/schemas/TTSConversationalModel",
            "description": "The model to use for TTS",
            "default": "eleven_turbo_v2"
          },
          "voice_id": {
            "type": "string",
            "minLength": 0,
            "title": "Voice Id",
            "description": "The voice ID to use for TTS",
            "default": "cjVigY5qzO86Huf0OWal",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "supported_voices": {
            "items": {
              "$ref": "#/components/schemas/SupportedVoice"
            },
            "type": "array",
            "title": "Supported Voices",
            "description": "Additional supported voices for the agent"
          },
          "agent_output_audio_format": {
            "$ref": "#/components/schemas/TTSOutputFormat",
            "description": "The audio format to use for TTS",
            "default": "pcm_16000"
          },
          "optimize_streaming_latency": {
            "$ref": "#/components/schemas/TTSOptimizeStreamingLatency",
            "description": "The optimization for streaming latency",
            "default": 3
          },
          "stability": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Stability",
            "description": "The stability of generated speech",
            "default": 0.5
          },
          "speed": {
            "type": "number",
            "maximum": 1.2,
            "minimum": 0.7,
            "title": "Speed",
            "description": "The speed of generated speech",
            "default": 1
          },
          "similarity_boost": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Boost",
            "description": "The similarity boost for generated speech",
            "default": 0.8
          },
          "pronunciation_dictionary_locators": {
            "items": {
              "$ref": "#/components/schemas/PydanticPronunciationDictionaryVersionLocator"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Locators",
            "description": "The pronunciation dictionary locators"
          }
        },
        "type": "object",
        "title": "TTSConversationalConfig",
        "example": {
          "agent_output_audio_format": "pcm_16000",
          "model_id": "eleven_turbo_v2",
          "optimize_streaming_latency": 3,
          "pronunciation_dictionary_locators": [],
          "similarity_boost": 0.8,
          "speed": 1,
          "stability": 0.5,
          "voice_id": "cjVigY5qzO86Huf0OWal"
        }
      },
      "TTSConversationalConfigOverride": {
        "properties": {
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id",
            "description": "The voice ID to use for TTS",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          }
        },
        "type": "object",
        "title": "TTSConversationalConfigOverride",
        "example": {
          "voice_id": "cjVigY5qzO86Huf0OWal"
        }
      },
      "TTSConversationalConfigOverrideConfig": {
        "properties": {
          "voice_id": {
            "type": "boolean",
            "title": "Voice Id",
            "description": "Whether to allow overriding the voice_id field.",
            "default": false
          }
        },
        "type": "object",
        "title": "TTSConversationalConfigOverrideConfig"
      },
      "TTSConversationalModel": {
        "type": "string",
        "enum": [
          "eleven_turbo_v2",
          "eleven_turbo_v2_5",
          "eleven_flash_v2",
          "eleven_flash_v2_5"
        ],
        "title": "TTSConversationalModel"
      },
      "TTSModelFamily": {
        "type": "string",
        "enum": [
          "turbo",
          "flash",
          "multilingual"
        ],
        "title": "TTSModelFamily"
      },
      "TTSOptimizeStreamingLatency": {
        "type": "integer",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "title": "TTSOptimizeStreamingLatency"
      },
      "TTSOutputFormat": {
        "type": "string",
        "enum": [
          "pcm_8000",
          "pcm_16000",
          "pcm_22050",
          "pcm_24000",
          "pcm_44100",
          "pcm_48000",
          "ulaw_8000"
        ],
        "title": "TTSOutputFormat"
      },
      "TelephonyProvider": {
        "type": "string",
        "enum": [
          "twilio",
          "sip_trunk"
        ],
        "title": "TelephonyProvider"
      },
      "TokenResponseModel": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "TokenResponseModel"
      },
      "Tool": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "inputSchema": {
            "type": "object",
            "title": "Inputschema"
          },
          "outputSchema": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputschema"
          },
          "annotations": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ToolAnnotations"
              },
              {
                "type": "null"
              }
            ]
          },
          "_meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "name",
          "inputSchema"
        ],
        "title": "Tool",
        "description": "Definition for a tool the client can call."
      },
      "ToolAnnotations": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "readOnlyHint": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readonlyhint"
          },
          "destructiveHint": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Destructivehint"
          },
          "idempotentHint": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Idempotenthint"
          },
          "openWorldHint": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Openworldhint"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "ToolAnnotations",
        "description": "Additional properties describing a Tool to clients.\n\nNOTE: all properties in ToolAnnotations are **hints**.\nThey are not guaranteed to provide a faithful description of\ntool behavior (including descriptive properties like `title`).\n\nClients should never make tool use decisions based on ToolAnnotations\nreceived from untrusted servers."
      },
      "ToolMockConfig": {
        "properties": {
          "default_return_value": {
            "type": "string",
            "title": "Default Return Value",
            "default": "Tool Called."
          },
          "default_is_error": {
            "type": "boolean",
            "title": "Default Is Error",
            "default": false
          }
        },
        "type": "object",
        "title": "ToolMockConfig"
      },
      "ToolRequestModel": {
        "properties": {
          "tool_config": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/WebhookToolConfig-Input"
              },
              {
                "$ref": "#/components/schemas/ClientToolConfig-Input"
              },
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "$ref": "#/components/schemas/MCPToolConfig-Input"
              }
            ],
            "title": "Tool Config",
            "description": "Configuration for the tool",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "client": "#/components/schemas/ClientToolConfig-Input",
                "mcp": "#/components/schemas/MCPToolConfig-Input",
                "system": "#/components/schemas/SystemToolConfig-Input",
                "webhook": "#/components/schemas/WebhookToolConfig-Input"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "tool_config"
        ],
        "title": "ToolRequestModel"
      },
      "ToolResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "tool_config": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/WebhookToolConfig-Output"
              },
              {
                "$ref": "#/components/schemas/ClientToolConfig-Output"
              },
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "$ref": "#/components/schemas/MCPToolConfig-Output"
              }
            ],
            "title": "Tool Config",
            "description": "The type of tool",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "client": "#/components/schemas/ClientToolConfig-Output",
                "mcp": "#/components/schemas/MCPToolConfig-Output",
                "system": "#/components/schemas/SystemToolConfig-Output",
                "webhook": "#/components/schemas/WebhookToolConfig-Output"
              }
            }
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "usage_stats": {
            "$ref": "#/components/schemas/ToolUsageStatsResponseModel"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tool_config",
          "access_info",
          "usage_stats"
        ],
        "title": "ToolResponseModel"
      },
      "ToolType": {
        "type": "string",
        "enum": [
          "system",
          "webhook",
          "client",
          "mcp",
          "workflow"
        ],
        "title": "ToolType"
      },
      "ToolUsageStatsResponseModel": {
        "properties": {
          "total_calls": {
            "type": "integer",
            "title": "Total Calls",
            "description": "The total number of calls to the tool",
            "default": 0
          },
          "avg_latency_secs": {
            "type": "number",
            "title": "Avg Latency Secs"
          }
        },
        "type": "object",
        "required": [
          "avg_latency_secs"
        ],
        "title": "ToolUsageStatsResponseModel"
      },
      "ToolsResponseModel": {
        "properties": {
          "tools": {
            "items": {
              "$ref": "#/components/schemas/ToolResponseModel"
            },
            "type": "array",
            "title": "Tools"
          }
        },
        "type": "object",
        "required": [
          "tools"
        ],
        "title": "ToolsResponseModel"
      },
      "TransferToAgentToolConfig": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "transfer_to_agent",
            "title": "System Tool Type",
            "default": "transfer_to_agent"
          },
          "transfers": {
            "items": {
              "$ref": "#/components/schemas/AgentTransfer"
            },
            "type": "array",
            "title": "Transfers"
          }
        },
        "type": "object",
        "required": [
          "transfers"
        ],
        "title": "TransferToAgentToolConfig"
      },
      "TransferToAgentToolResultErrorModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "transfer_to_agent_error",
            "title": "Result Type",
            "default": "transfer_to_agent_error"
          },
          "status": {
            "type": "string",
            "const": "error",
            "title": "Status",
            "default": "error"
          },
          "from_agent": {
            "type": "string",
            "title": "From Agent"
          },
          "error": {
            "type": "string",
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "from_agent",
          "error"
        ],
        "title": "TransferToAgentToolResultErrorModel"
      },
      "TransferToAgentToolResultSuccessModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "transfer_to_agent_success",
            "title": "Result Type",
            "default": "transfer_to_agent_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "from_agent": {
            "type": "string",
            "title": "From Agent"
          },
          "to_agent": {
            "type": "string",
            "title": "To Agent"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          },
          "delay_ms": {
            "type": "integer",
            "title": "Delay Ms",
            "default": 0
          },
          "transfer_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transfer Message"
          },
          "enable_transferred_agent_first_message": {
            "type": "boolean",
            "title": "Enable Transferred Agent First Message",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "from_agent",
          "to_agent",
          "condition"
        ],
        "title": "TransferToAgentToolResultSuccessModel"
      },
      "TransferToNumberResultErrorModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "transfer_to_number_error",
            "title": "Result Type",
            "default": "transfer_to_number_error"
          },
          "status": {
            "type": "string",
            "const": "error",
            "title": "Status",
            "default": "error"
          },
          "error": {
            "type": "string",
            "title": "Error"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "error"
        ],
        "title": "TransferToNumberResultErrorModel"
      },
      "TransferToNumberResultSipSuccessModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "transfer_to_number_sip_success",
            "title": "Result Type",
            "default": "transfer_to_number_sip_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "transfer_number": {
            "type": "string",
            "title": "Transfer Number"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "type": "object",
        "required": [
          "transfer_number"
        ],
        "title": "TransferToNumberResultSipSuccessModel"
      },
      "TransferToNumberResultTwilioSuccessModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "transfer_to_number_twilio_success",
            "title": "Result Type",
            "default": "transfer_to_number_twilio_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "transfer_number": {
            "type": "string",
            "title": "Transfer Number"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "client_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Message"
          },
          "agent_message": {
            "type": "string",
            "title": "Agent Message"
          },
          "conference_name": {
            "type": "string",
            "title": "Conference Name"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "type": "object",
        "required": [
          "transfer_number",
          "agent_message",
          "conference_name"
        ],
        "title": "TransferToNumberResultTwilioSuccessModel"
      },
      "TransferToNumberToolConfig-Input": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "transfer_to_number",
            "title": "System Tool Type",
            "default": "transfer_to_number"
          },
          "transfers": {
            "items": {
              "$ref": "#/components/schemas/PhoneNumberTransfer"
            },
            "type": "array",
            "title": "Transfers"
          },
          "enable_client_message": {
            "type": "boolean",
            "title": "Enable Client Message",
            "description": "Whether to play a message to the client while they wait for transfer. Defaults to true for backward compatibility.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "transfers"
        ],
        "title": "TransferToNumberToolConfig"
      },
      "TransferToNumberToolConfig-Output": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "transfer_to_number",
            "title": "System Tool Type",
            "default": "transfer_to_number"
          },
          "transfers": {
            "items": {
              "$ref": "#/components/schemas/PhoneNumberTransfer"
            },
            "type": "array",
            "title": "Transfers"
          },
          "enable_client_message": {
            "type": "boolean",
            "title": "Enable Client Message",
            "description": "Whether to play a message to the client while they wait for transfer. Defaults to true for backward compatibility.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "transfers"
        ],
        "title": "TransferToNumberToolConfig"
      },
      "TransferTypeEnum": {
        "type": "string",
        "enum": [
          "conference",
          "sip_refer"
        ],
        "title": "TransferTypeEnum"
      },
      "TurnConfig": {
        "properties": {
          "turn_timeout": {
            "type": "number",
            "title": "Turn Timeout",
            "description": "Maximum wait time for the user's reply before re-engaging the user",
            "default": 7
          },
          "silence_end_call_timeout": {
            "type": "number",
            "title": "Silence End Call Timeout",
            "description": "Maximum wait time since the user last spoke before terminating the call",
            "default": -1
          },
          "mode": {
            "$ref": "#/components/schemas/TurnMode",
            "description": "The mode of turn detection",
            "default": "turn",
            "x-fern-ignore": "True"
          }
        },
        "type": "object",
        "title": "TurnConfig",
        "example": {
          "mode": "turn",
          "silence_end_call_timeout": -1,
          "turn_timeout": 7
        }
      },
      "TurnMode": {
        "type": "string",
        "enum": [
          "silence",
          "turn"
        ],
        "title": "TurnMode"
      },
      "TwilioOutboundCallResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "conversation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Id"
          },
          "callSid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Callsid"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "conversation_id",
          "callSid"
        ],
        "title": "TwilioOutboundCallResponse"
      },
      "TxtExportOptions": {
        "properties": {
          "max_characters_per_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Characters Per Line",
            "default": 100
          },
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          },
          "format": {
            "type": "string",
            "const": "txt",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "type": "object",
        "required": [
          "format"
        ],
        "title": "TxtExportOptions"
      },
      "URLAvatar": {
        "properties": {
          "type": {
            "type": "string",
            "const": "url",
            "title": "Type",
            "description": "The type of the avatar",
            "default": "url"
          },
          "custom_url": {
            "type": "string",
            "title": "Custom Url",
            "description": "The custom URL of the avatar",
            "default": ""
          }
        },
        "type": "object",
        "title": "URLAvatar"
      },
      "UpdatePhoneNumberRequest": {
        "properties": {
          "agent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id"
          }
        },
        "type": "object",
        "title": "UpdatePhoneNumberRequest"
      },
      "UpdateWorkspaceMemberResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the workspace member update request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "UpdateWorkspaceMemberResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "UsageAggregationInterval": {
        "type": "string",
        "enum": [
          "hour",
          "day",
          "week",
          "month",
          "cumulative"
        ],
        "title": "UsageAggregationInterval",
        "description": "The time interval over which to aggregate the usage data."
      },
      "UsageCharactersResponseModel": {
        "properties": {
          "time": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Time",
            "description": "The time axis with unix timestamps for each day."
          },
          "usage": {
            "additionalProperties": {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Usage",
            "description": "The usage of each breakdown type along the time axis."
          }
        },
        "type": "object",
        "required": [
          "time",
          "usage"
        ],
        "title": "UsageCharactersResponseModel",
        "example": {
          "time": [
            1738252091000,
            1739404800000
          ],
          "usage": {
            "All": [
              49,
              1053
            ]
          }
        }
      },
      "UserFeedback": {
        "properties": {
          "score": {
            "$ref": "#/components/schemas/UserFeedbackScore"
          },
          "time_in_call_secs": {
            "type": "integer",
            "title": "Time In Call Secs"
          }
        },
        "type": "object",
        "required": [
          "score",
          "time_in_call_secs"
        ],
        "title": "UserFeedback"
      },
      "UserFeedbackScore": {
        "type": "string",
        "enum": [
          "like",
          "dislike"
        ],
        "title": "UserFeedbackScore"
      },
      "UserResponseModel": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "The unique identifier of the user."
          },
          "subscription": {
            "$ref": "#/components/schemas/SubscriptionResponseModel",
            "description": "Details of the user's subscription."
          },
          "subscription_extras": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubscriptionExtrasResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional additional details about the user's subscription."
          },
          "is_new_user": {
            "type": "boolean",
            "title": "Is New User",
            "description": "Whether the user is new."
          },
          "xi_api_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xi Api Key",
            "description": "The API key of the user."
          },
          "can_use_delayed_payment_methods": {
            "type": "boolean",
            "title": "Can Use Delayed Payment Methods",
            "description": "This field is deprecated and will be removed in a future major version. Instead use subscription.trust_on_invoice_creation.",
            "deprecated": true
          },
          "is_onboarding_completed": {
            "type": "boolean",
            "title": "Is Onboarding Completed",
            "description": "Whether the user's onboarding is completed."
          },
          "is_onboarding_checklist_completed": {
            "type": "boolean",
            "title": "Is Onboarding Checklist Completed",
            "description": "Whether the user's onboarding checklist is completed."
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "First name of the user."
          },
          "is_api_key_hashed": {
            "type": "boolean",
            "title": "Is Api Key Hashed",
            "description": "Whether the user's API key is hashed.",
            "default": false
          },
          "xi_api_key_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xi Api Key Preview",
            "description": "The preview of the user's API key."
          },
          "referral_link_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Referral Link Code",
            "description": "The referral link code of the user."
          },
          "partnerstack_partner_default_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partnerstack Partner Default Link",
            "description": "The Partnerstack partner default link of the user."
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "subscription",
          "is_new_user",
          "can_use_delayed_payment_methods",
          "is_onboarding_completed",
          "is_onboarding_checklist_completed"
        ],
        "title": "UserResponseModel",
        "example": {
          "can_use_delayed_payment_methods": false,
          "first_name": "John",
          "is_api_key_hashed": false,
          "is_new_user": false,
          "is_onboarding_checklist_completed": true,
          "is_onboarding_completed": true,
          "subscription": {
            "allowed_to_extend_character_limit": false,
            "billing_period": "monthly_period",
            "can_extend_character_limit": false,
            "can_extend_voice_limit": false,
            "can_use_instant_voice_cloning": true,
            "can_use_professional_voice_cloning": true,
            "character_count": 17231,
            "character_limit": 100000,
            "character_refresh_period": "monthly_period",
            "currency": "usd",
            "max_character_limit_extension": 10000,
            "max_voice_add_edits": 230,
            "next_character_count_reset_unix": 1738356858,
            "professional_voice_limit": 1,
            "professional_voice_slots_used": 0,
            "status": "free",
            "tier": "trial",
            "voice_add_edit_counter": 212,
            "voice_limit": 120,
            "voice_slots_used": 1
          },
          "subscription_extras": {
            "can_bypass_voice_captcha": true,
            "can_request_manual_pro_voice_verification": true,
            "concurrency": 10,
            "convai_concurrency": 10,
            "force_logging_disabled": false,
            "moderation": {
              "enterprise_background_moderation_enabled": false,
              "enterprise_check_block_nogo_voice": false,
              "enterprise_check_nogo_voice": false,
              "is_in_probation": false,
              "never_live_moderate": false,
              "nogo_voice_similar_voice_upload_count": 0,
              "on_watchlist": false
            },
            "overused_characters_rolled_over_from_previous_period": 1000,
            "unused_characters_rolled_over_from_previous_period": 1000,
            "usage": {
              "actual_reported_credits": 1000,
              "manually_gifted_credits_quota": 1000,
              "manually_gifted_credits_used": 1000,
              "paid_usage_based_credits_used": 1000,
              "rollover_credits_quota": 1000,
              "rollover_credits_used": 1000,
              "subscription_cycle_credits_quota": 1000,
              "subscription_cycle_credits_used": 1000
            }
          },
          "user_id": "1234567890",
          "xi_api_key": "8so27l7327189x0h939ekx293380l920"
        }
      },
      "UtteranceResponseModel": {
        "properties": {
          "start": {
            "type": "number",
            "title": "Start",
            "description": "The start time of the utterance in seconds."
          },
          "end": {
            "type": "number",
            "title": "End",
            "description": "The end time of the utterance in seconds."
          }
        },
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "title": "UtteranceResponseModel",
        "example": {
          "end": 1,
          "start": 0
        }
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VerificationAttemptResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text of the verification attempt."
          },
          "date_unix": {
            "type": "integer",
            "title": "Date Unix",
            "description": "The date of the verification attempt in Unix time."
          },
          "accepted": {
            "type": "boolean",
            "title": "Accepted",
            "description": "Whether the verification attempt was accepted."
          },
          "similarity": {
            "type": "number",
            "title": "Similarity",
            "description": "The similarity of the verification attempt."
          },
          "levenshtein_distance": {
            "type": "number",
            "title": "Levenshtein Distance",
            "description": "The Levenshtein distance of the verification attempt."
          },
          "recording": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RecordingResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The recording of the verification attempt."
          }
        },
        "type": "object",
        "required": [
          "text",
          "date_unix",
          "accepted",
          "similarity",
          "levenshtein_distance"
        ],
        "title": "VerificationAttemptResponseModel",
        "example": {
          "accepted": true,
          "date_unix": 1714204800,
          "levenshtein_distance": 2,
          "recording": {
            "mime_type": "audio/mpeg",
            "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
            "size_bytes": 1000000,
            "transcription": "Hello, how are you?",
            "upload_date_unix": 1714204800
          },
          "similarity": 0.95,
          "text": "Hello, how are you?"
        }
      },
      "VerifiedVoiceLanguageResponseModel": {
        "properties": {
          "language": {
            "type": "string",
            "title": "Language",
            "description": "The language of the voice."
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The voice's model ID."
          },
          "accent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent",
            "description": "The voice's accent, if applicable."
          },
          "locale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locale",
            "description": "The voice's locale, if applicable."
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url",
            "description": "The voice's preview URL, if applicable."
          }
        },
        "type": "object",
        "required": [
          "language",
          "model_id"
        ],
        "title": "VerifiedVoiceLanguageResponseModel",
        "example": {
          "accent": "American",
          "language": "en",
          "model_id": "eleven_turbo_v2_5"
        }
      },
      "VerifyPVCVoiceCaptchaResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the verify PVC captcha request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "VerifyPVCVoiceCaptchaResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "VoiceDesignRequestModel": {
        "properties": {
          "voice_description": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 20,
            "title": "Voice Description",
            "description": "Description to use for the created voice.",
            "examples": [
              "A sassy squeaky mouse"
            ]
          },
          "model_id": {
            "type": "string",
            "enum": [
              "eleven_multilingual_ttv_v2",
              "eleven_ttv_v3"
            ],
            "title": "Model Id",
            "description": "Model to use for the voice generation. Possible values: eleven_multilingual_ttv_v2, eleven_ttv_v3.",
            "default": "eleven_multilingual_ttv_v2",
            "examples": [
              "eleven_multilingual_ttv_v2"
            ]
          },
          "text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "description": "Text to generate, text length has to be between 100 and 1000.",
            "examples": [
              "Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
            ]
          },
          "auto_generate_text": {
            "type": "boolean",
            "title": "Auto Generate Text",
            "description": "Whether to automatically generate a text suitable for the voice description.",
            "default": false
          },
          "loudness": {
            "type": "number",
            "maximum": 1,
            "minimum": -1,
            "title": "Loudness",
            "description": "Controls the volume level of the generated voice. -1 is quietest, 1 is loudest, 0 corresponds to roughly -24 LUFS.",
            "default": 0.5,
            "examples": [
              0.5
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Random number that controls the voice generation. Same seed with same inputs produces same voice.",
            "examples": [
              11
            ]
          },
          "guidance_scale": {
            "type": "number",
            "maximum": 100,
            "minimum": 0,
            "title": "Guidance Scale",
            "description": "Controls how closely the AI follows the prompt. Lower numbers give the AI more freedom to be creative, while higher numbers force it to stick more to the prompt. High numbers can cause voice to sound artificial or robotic. We recommend to use longer, more detailed prompts at lower Guidance Scale.",
            "default": 5,
            "examples": [
              5
            ]
          },
          "stream_previews": {
            "type": "boolean",
            "title": "Stream Previews",
            "description": "Determines whether the Text to Voice previews should be included in the response. If true, only the generated IDs will be returned which can then be streamed via the /v1/text-to-voice/:generated_voice_id/stream endpoint.",
            "default": false,
            "examples": [
              true
            ]
          },
          "remixing_session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remixing Session Id",
            "description": "The remixing session id.",
            "examples": [
              "123"
            ]
          },
          "remixing_session_iteration_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remixing Session Iteration Id",
            "description": "The id of the remixing session iteration where these generations should be attached to. If not provided, a new iteration will be created.",
            "examples": [
              "123"
            ]
          },
          "quality": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": -1
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality",
            "description": "Higher quality results in better voice output but less variety.",
            "examples": [
              0.9
            ]
          },
          "reference_audio_base64": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Audio Base64",
            "description": "Reference audio to use for the voice generation. The audio should be base64 encoded. Only supported when using the  eleven_ttv_v3 model."
          },
          "prompt_strength": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Strength",
            "description": "Controls the balance of prompt versus reference audio when generating voice samples. 0 means almost no prompt influence, 1 means almost no reference audio influence. Only supported when using the eleven_ttv_v3 model and providing reference audio.",
            "examples": [
              0.25
            ]
          }
        },
        "type": "object",
        "required": [
          "voice_description"
        ],
        "title": "VoiceDesignRequestModel"
      },
      "VoiceGenerationParameterOptionResponseModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "name",
          "code"
        ],
        "title": "VoiceGenerationParameterOptionResponseModel"
      },
      "VoiceGenerationParameterResponseModel": {
        "properties": {
          "genders": {
            "items": {
              "$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
            },
            "type": "array",
            "title": "Genders"
          },
          "accents": {
            "items": {
              "$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
            },
            "type": "array",
            "title": "Accents"
          },
          "ages": {
            "items": {
              "$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
            },
            "type": "array",
            "title": "Ages"
          },
          "minimum_characters": {
            "type": "integer",
            "title": "Minimum Characters"
          },
          "maximum_characters": {
            "type": "integer",
            "title": "Maximum Characters"
          },
          "minimum_accent_strength": {
            "type": "number",
            "title": "Minimum Accent Strength"
          },
          "maximum_accent_strength": {
            "type": "number",
            "title": "Maximum Accent Strength"
          }
        },
        "type": "object",
        "required": [
          "genders",
          "accents",
          "ages",
          "minimum_characters",
          "maximum_characters",
          "minimum_accent_strength",
          "maximum_accent_strength"
        ],
        "title": "VoiceGenerationParameterResponseModel"
      },
      "VoiceMailDetectionResultSuccessModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "voicemail_detection_success",
            "title": "Result Type",
            "default": "voicemail_detection_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "voicemail_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voicemail Message"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "title": "VoiceMailDetectionResultSuccessModel"
      },
      "VoicePreviewResponseModel": {
        "properties": {
          "audio_base_64": {
            "type": "string",
            "title": "Audio Base 64",
            "description": "The base64 encoded audio of the preview."
          },
          "generated_voice_id": {
            "type": "string",
            "title": "Generated Voice Id",
            "description": "The ID of the generated voice. Use it to create a voice from the preview."
          },
          "media_type": {
            "type": "string",
            "title": "Media Type",
            "description": "The media type of the preview."
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs",
            "description": "The duration of the preview in seconds."
          }
        },
        "type": "object",
        "required": [
          "audio_base_64",
          "generated_voice_id",
          "media_type",
          "duration_secs"
        ],
        "title": "VoicePreviewResponseModel"
      },
      "VoicePreviewsRequestModel": {
        "properties": {
          "voice_description": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 20,
            "title": "Voice Description",
            "description": "Description to use for the created voice.",
            "examples": [
              "A sassy squeaky mouse"
            ]
          },
          "text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "description": "Text to generate, text length has to be between 100 and 1000.",
            "examples": [
              "Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
            ]
          },
          "auto_generate_text": {
            "type": "boolean",
            "title": "Auto Generate Text",
            "description": "Whether to automatically generate a text suitable for the voice description.",
            "default": false
          },
          "loudness": {
            "type": "number",
            "maximum": 1,
            "minimum": -1,
            "title": "Loudness",
            "description": "Controls the volume level of the generated voice. -1 is quietest, 1 is loudest, 0 corresponds to roughly -24 LUFS.",
            "default": 0.5,
            "examples": [
              0.5
            ]
          },
          "quality": {
            "type": "number",
            "maximum": 1,
            "minimum": -1,
            "title": "Quality",
            "description": "Higher quality results in better voice output but less variety.",
            "default": 0.9,
            "examples": [
              0.9
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Random number that controls the voice generation. Same seed with same inputs produces same voice.",
            "examples": [
              11
            ]
          },
          "guidance_scale": {
            "type": "number",
            "maximum": 100,
            "minimum": 0,
            "title": "Guidance Scale",
            "description": "Controls how closely the AI follows the prompt. Lower numbers give the AI more freedom to be creative, while higher numbers force it to stick more to the prompt. High numbers can cause voice to sound artificial or robotic. We recommend to use longer, more detailed prompts at lower Guidance Scale.",
            "default": 5,
            "examples": [
              5
            ]
          }
        },
        "type": "object",
        "required": [
          "voice_description"
        ],
        "title": "VoicePreviewsRequestModel"
      },
      "VoicePreviewsResponseModel": {
        "properties": {
          "previews": {
            "items": {
              "$ref": "#/components/schemas/VoicePreviewResponseModel"
            },
            "type": "array",
            "title": "Previews",
            "description": "The previews of the generated voices."
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text used to preview the voices."
          }
        },
        "type": "object",
        "required": [
          "previews",
          "text"
        ],
        "title": "VoicePreviewsResponseModel"
      },
      "VoiceResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the voice."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the voice."
          },
          "samples": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SampleResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Samples",
            "description": "List of samples associated with the voice."
          },
          "category": {
            "type": "string",
            "enum": [
              "generated",
              "cloned",
              "premade",
              "professional",
              "famous",
              "high_quality"
            ],
            "title": "Category",
            "description": "The category of the voice."
          },
          "fine_tuning": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FineTuningResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Fine-tuning information for the voice."
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Labels",
            "description": "Labels associated with the voice."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the voice."
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url",
            "description": "The preview URL of the voice."
          },
          "available_for_tiers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available For Tiers",
            "description": "The tiers the voice is available for."
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The settings of the voice."
          },
          "sharing": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSharingResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The sharing information of the voice."
          },
          "high_quality_base_model_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "High Quality Base Model Ids",
            "description": "The base model IDs for high-quality voices."
          },
          "verified_languages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VerifiedVoiceLanguageResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verified Languages",
            "description": "The verified languages of the voice."
          },
          "safety_control": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "NONE",
                  "BAN",
                  "CAPTCHA",
                  "ENTERPRISE_BAN",
                  "ENTERPRISE_CAPTCHA"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Control",
            "description": "The safety controls of the voice."
          },
          "voice_verification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceVerificationResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The voice verification of the voice."
          },
          "permission_on_resource": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission On Resource",
            "description": "The permission on the resource of the voice."
          },
          "is_owner": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Owner",
            "description": "Whether the voice is owned by the user."
          },
          "is_legacy": {
            "type": "boolean",
            "title": "Is Legacy",
            "description": "Whether the voice is legacy.",
            "default": false
          },
          "is_mixed": {
            "type": "boolean",
            "title": "Is Mixed",
            "description": "Whether the voice is mixed.",
            "default": false
          },
          "created_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At Unix",
            "description": "The creation time of the voice in Unix time."
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "name",
          "category",
          "labels",
          "available_for_tiers",
          "high_quality_base_model_ids"
        ],
        "title": "VoiceResponseModel",
        "example": {
          "available_for_tiers": [
            "creator",
            "enterprise"
          ],
          "category": "professional",
          "description": "A warm, expressive voice with a touch of humor.",
          "fine_tuning": {
            "is_allowed_to_fine_tune": true,
            "manual_verification_requested": false,
            "state": {
              "eleven_multilingual_v2": "fine_tuned"
            },
            "verification_attempts_count": 2,
            "verification_failures": []
          },
          "high_quality_base_model_ids": [
            "eleven_v2_flash",
            "eleven_flash_v2",
            "eleven_turbo_v2_5",
            "eleven_multilingual_v2",
            "eleven_v2_5_flash",
            "eleven_flash_v2_5",
            "eleven_turbo_v2"
          ],
          "is_legacy": false,
          "is_mixed": false,
          "is_owner": false,
          "labels": {
            "accent": "American",
            "age": "middle-aged",
            "description": "expressive",
            "gender": "female",
            "use_case": "social media"
          },
          "name": "Rachel",
          "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
          "settings": {
            "similarity_boost": 1,
            "speed": 1,
            "stability": 1,
            "style": 0,
            "use_speaker_boost": true
          },
          "sharing": {
            "category": "professional",
            "cloned_by_count": 50,
            "date_unix": 1714204800,
            "description": "A female voice with a soft and friendly tone.",
            "disable_at_unix": 1714204800,
            "enabled_in_library": true,
            "featured": true,
            "financial_rewards_enabled": true,
            "free_users_allowed": true,
            "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
            "labels": {
              "accent": "American",
              "gender": "female"
            },
            "liked_by_count": 100,
            "live_moderation_enabled": true,
            "moderation_check": {
              "captcha_checks": [
                0.95,
                0.98
              ],
              "captcha_ids": [
                "captcha1",
                "captcha2"
              ],
              "date_checked_unix": 1714204800,
              "description_check": true,
              "description_value": "A female voice with a soft and friendly tone.",
              "name_check": true,
              "name_value": "Rachel",
              "sample_checks": [
                0.95,
                0.98
              ],
              "sample_ids": [
                "sample1",
                "sample2"
              ]
            },
            "name": "Rachel",
            "notice_period": 30,
            "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
            "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
            "rate": 0.05,
            "reader_app_enabled": true,
            "reader_restricted_on": [
              {
                "resource_id": "FCwhRBWXzGAHq8TQ4Fs18",
                "resource_type": "read"
              }
            ],
            "review_status": "allowed",
            "status": "enabled",
            "voice_mixing_allowed": false,
            "whitelisted_emails": [
              "example@example.com"
            ]
          },
          "verified_languages": [
            {
              "accent": "american",
              "language": "en",
              "locale": "en-US",
              "model_id": "eleven_multilingual_v2",
              "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3"
            }
          ],
          "voice_id": "21m00Tcm4TlvDq8ikWAM",
          "voice_verification": {
            "is_verified": true,
            "language": "en",
            "requires_verification": false,
            "verification_attempts": [
              {
                "accepted": true,
                "date_unix": 1714204800,
                "levenshtein_distance": 2,
                "recording": {
                  "mime_type": "audio/mpeg",
                  "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                  "size_bytes": 1000000,
                  "transcription": "Hello, how are you?",
                  "upload_date_unix": 1714204800
                },
                "similarity": 0.95,
                "text": "Hello, how are you?"
              }
            ],
            "verification_attempts_count": 0,
            "verification_failures": []
          }
        }
      },
      "VoiceSamplePreviewResponseModel": {
        "properties": {
          "audio_base_64": {
            "type": "string",
            "title": "Audio Base 64",
            "description": "The base64 encoded audio."
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the voice."
          },
          "sample_id": {
            "type": "string",
            "title": "Sample Id",
            "description": "The ID of the sample."
          },
          "media_type": {
            "type": "string",
            "title": "Media Type",
            "description": "The media type of the audio."
          },
          "duration_secs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Secs",
            "description": "The duration of the audio in seconds."
          }
        },
        "type": "object",
        "required": [
          "audio_base_64",
          "voice_id",
          "sample_id",
          "media_type"
        ],
        "title": "VoiceSamplePreviewResponseModel",
        "example": {
          "audio_base_64": "audio_base_64",
          "duration_secs": 5,
          "media_type": "audio/mpeg",
          "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "voice_id": "DCwhRBWXzGAHq8TQ4Fs18"
        }
      },
      "VoiceSampleVisualWaveformResponseModel": {
        "properties": {
          "sample_id": {
            "type": "string",
            "title": "Sample Id",
            "description": "The ID of the sample."
          },
          "visual_waveform": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Visual Waveform",
            "description": "The visual waveform of the sample, represented as a list of floats."
          }
        },
        "type": "object",
        "required": [
          "sample_id",
          "visual_waveform"
        ],
        "title": "VoiceSampleVisualWaveformResponseModel",
        "example": {
          "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "visual_waveform": [
            0.1,
            0.2,
            0.3,
            0.4,
            0.5
          ]
        }
      },
      "VoiceSettingsResponseModel": {
        "properties": {
          "stability": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability",
            "description": "Determines how stable the voice is and the randomness between each generation. Lower values introduce broader emotional range for the voice. Higher values can result in a monotonous voice with limited emotion."
          },
          "use_speaker_boost": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Speaker Boost",
            "description": "This setting boosts the similarity to the original speaker. Using this setting requires a slightly higher computational load, which in turn increases latency."
          },
          "similarity_boost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Boost",
            "description": "Determines how closely the AI should adhere to the original voice when attempting to replicate it."
          },
          "style": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Style",
            "description": "Determines the style exaggeration of the voice. This setting attempts to amplify the style of the original speaker. It does consume additional computational resources and might increase latency if set to anything other than 0."
          },
          "speed": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speed",
            "description": "Adjusts the speed of the voice. A value of 1.0 is the default speed, while values less than 1.0 slow down the speech, and values greater than 1.0 speed it up."
          }
        },
        "type": "object",
        "title": "VoiceSettingsResponseModel",
        "example": {
          "similarity_boost": 1,
          "speed": 1,
          "stability": 1,
          "style": 0,
          "use_speaker_boost": true
        }
      },
      "VoiceSharingModerationCheckResponseModel": {
        "properties": {
          "date_checked_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Checked Unix",
            "description": "The date the moderation check was made in Unix time."
          },
          "name_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Value",
            "description": "The name value of the voice."
          },
          "name_check": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Check",
            "description": "Whether the name check was successful."
          },
          "description_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Value",
            "description": "The description value of the voice."
          },
          "description_check": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Check",
            "description": "Whether the description check was successful."
          },
          "sample_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample Ids",
            "description": "A list of sample IDs."
          },
          "sample_checks": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample Checks",
            "description": "A list of sample checks."
          },
          "captcha_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captcha Ids",
            "description": "A list of captcha IDs."
          },
          "captcha_checks": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captcha Checks",
            "description": "A list of CAPTCHA check values."
          }
        },
        "type": "object",
        "title": "VoiceSharingModerationCheckResponseModel",
        "example": {
          "captcha_checks": [
            0.95,
            0.98
          ],
          "captcha_ids": [
            "captcha1",
            "captcha2"
          ],
          "date_checked_unix": 1714204800,
          "description_check": true,
          "description_value": "A female voice with a soft and friendly tone.",
          "name_check": true,
          "name_value": "Rachel",
          "sample_checks": [
            0.95,
            0.98
          ],
          "sample_ids": [
            "sample1",
            "sample2"
          ]
        }
      },
      "VoiceSharingResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled",
              "copied",
              "copied_disabled"
            ],
            "title": "Status",
            "description": "The status of the voice sharing."
          },
          "history_item_sample_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "History Item Sample Id",
            "description": "The sample ID of the history item."
          },
          "date_unix": {
            "type": "integer",
            "title": "Date Unix",
            "description": "The date of the voice sharing in Unix time."
          },
          "whitelisted_emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Whitelisted Emails",
            "description": "A list of whitelisted emails."
          },
          "public_owner_id": {
            "type": "string",
            "title": "Public Owner Id",
            "description": "The ID of the public owner."
          },
          "original_voice_id": {
            "type": "string",
            "title": "Original Voice Id",
            "description": "The ID of the original voice."
          },
          "financial_rewards_enabled": {
            "type": "boolean",
            "title": "Financial Rewards Enabled",
            "description": "Whether financial rewards are enabled."
          },
          "free_users_allowed": {
            "type": "boolean",
            "title": "Free Users Allowed",
            "description": "Whether free users are allowed."
          },
          "live_moderation_enabled": {
            "type": "boolean",
            "title": "Live Moderation Enabled",
            "description": "Whether live moderation is enabled."
          },
          "rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate",
            "description": "The rate of the voice sharing."
          },
          "fiat_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiat Rate",
            "description": "The rate of the voice sharing in USD per 1000 credits."
          },
          "notice_period": {
            "type": "integer",
            "title": "Notice Period",
            "description": "The notice period of the voice sharing."
          },
          "disable_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disable At Unix",
            "description": "The date of the voice sharing in Unix time."
          },
          "voice_mixing_allowed": {
            "type": "boolean",
            "title": "Voice Mixing Allowed",
            "description": "Whether voice mixing is allowed."
          },
          "featured": {
            "type": "boolean",
            "title": "Featured",
            "description": "Whether the voice is featured."
          },
          "category": {
            "type": "string",
            "enum": [
              "generated",
              "cloned",
              "premade",
              "professional",
              "famous",
              "high_quality"
            ],
            "title": "Category",
            "description": "The category of the voice."
          },
          "reader_app_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reader App Enabled",
            "description": "Whether the reader app is enabled."
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "description": "The image URL of the voice."
          },
          "ban_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ban Reason",
            "description": "The ban reason of the voice."
          },
          "liked_by_count": {
            "type": "integer",
            "title": "Liked By Count",
            "description": "The number of likes on the voice."
          },
          "cloned_by_count": {
            "type": "integer",
            "title": "Cloned By Count",
            "description": "The number of clones on the voice."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the voice."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the voice."
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Labels",
            "description": "The labels of the voice."
          },
          "review_status": {
            "type": "string",
            "enum": [
              "not_requested",
              "pending",
              "declined",
              "allowed",
              "allowed_with_changes"
            ],
            "title": "Review Status",
            "description": "The review status of the voice."
          },
          "review_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Message",
            "description": "The review message of the voice."
          },
          "enabled_in_library": {
            "type": "boolean",
            "title": "Enabled In Library",
            "description": "Whether the voice is enabled in the library."
          },
          "instagram_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram Username",
            "description": "The Instagram username of the voice."
          },
          "twitter_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Twitter Username",
            "description": "The Twitter/X username of the voice."
          },
          "youtube_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Youtube Username",
            "description": "The YouTube username of the voice."
          },
          "tiktok_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tiktok Username",
            "description": "The TikTok username of the voice."
          },
          "moderation_check": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSharingModerationCheckResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The moderation check of the voice."
          },
          "reader_restricted_on": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ReaderResourceResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reader Restricted On",
            "description": "The reader restricted on of the voice."
          }
        },
        "type": "object",
        "required": [
          "status",
          "date_unix",
          "whitelisted_emails",
          "public_owner_id",
          "original_voice_id",
          "financial_rewards_enabled",
          "free_users_allowed",
          "live_moderation_enabled",
          "notice_period",
          "voice_mixing_allowed",
          "featured",
          "category",
          "liked_by_count",
          "cloned_by_count",
          "name",
          "labels",
          "review_status",
          "enabled_in_library"
        ],
        "title": "VoiceSharingResponseModel",
        "example": {
          "category": "professional",
          "cloned_by_count": 50,
          "date_unix": 1714204800,
          "description": "A female voice with a soft and friendly tone.",
          "disable_at_unix": 1714204800,
          "enabled_in_library": true,
          "featured": true,
          "financial_rewards_enabled": true,
          "free_users_allowed": true,
          "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "labels": {
            "accent": "American",
            "gender": "female"
          },
          "liked_by_count": 100,
          "live_moderation_enabled": true,
          "moderation_check": {
            "captcha_checks": [
              0.95,
              0.98
            ],
            "captcha_ids": [
              "captcha1",
              "captcha2"
            ],
            "date_checked_unix": 1714204800,
            "description_check": true,
            "description_value": "A female voice with a soft and friendly tone.",
            "name_check": true,
            "name_value": "Rachel",
            "sample_checks": [
              0.95,
              0.98
            ],
            "sample_ids": [
              "sample1",
              "sample2"
            ]
          },
          "name": "Rachel",
          "notice_period": 30,
          "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "rate": 0.05,
          "reader_app_enabled": true,
          "reader_restricted_on": [
            {
              "resource_id": "FCwhRBWXzGAHq8TQ4Fs18",
              "resource_type": "read"
            }
          ],
          "review_status": "allowed",
          "status": "enabled",
          "voice_mixing_allowed": false,
          "whitelisted_emails": [
            "example@example.com"
          ]
        }
      },
      "VoiceVerificationResponseModel": {
        "properties": {
          "requires_verification": {
            "type": "boolean",
            "title": "Requires Verification",
            "description": "Whether the voice requires verification."
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "description": "Whether the voice has been verified."
          },
          "verification_failures": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Verification Failures",
            "description": "List of verification failures."
          },
          "verification_attempts_count": {
            "type": "integer",
            "title": "Verification Attempts Count",
            "description": "The number of verification attempts."
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The language of the voice."
          },
          "verification_attempts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VerificationAttemptResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verification Attempts",
            "description": "Number of times a verification was attempted."
          }
        },
        "type": "object",
        "required": [
          "requires_verification",
          "is_verified",
          "verification_failures",
          "verification_attempts_count"
        ],
        "title": "VoiceVerificationResponseModel",
        "example": {
          "is_verified": true,
          "language": "en",
          "requires_verification": false,
          "verification_attempts": [
            {
              "accepted": true,
              "date_unix": 1714204800,
              "levenshtein_distance": 2,
              "recording": {
                "mime_type": "audio/mpeg",
                "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                "size_bytes": 1000000,
                "transcription": "Hello, how are you?",
                "upload_date_unix": 1714204800
              },
              "similarity": 0.95,
              "text": "Hello, how are you?"
            }
          ],
          "verification_attempts_count": 0,
          "verification_failures": []
        }
      },
      "VoicemailDetectionToolConfig": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "voicemail_detection",
            "title": "System Tool Type",
            "default": "voicemail_detection"
          },
          "voicemail_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voicemail Message",
            "description": "Optional message to leave on voicemail when detected. If not provided, the call will end immediately when voicemail is detected."
          }
        },
        "type": "object",
        "title": "VoicemailDetectionToolConfig",
        "description": "Allows the agent to detect when a voicemail system is encountered.\n\nThis tool should be invoked by the LLM when it detects that the call has been\nanswered by a voicemail system rather than a human. If a voicemail message\nis configured, it will be played; otherwise the call will end immediately."
      },
      "WebhookAuthMethodType": {
        "type": "string",
        "enum": [
          "hmac",
          "oauth2"
        ],
        "title": "WebhookAuthMethodType"
      },
      "WebhookToolApiSchemaConfig-Input": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL that the webhook will be sent to. May include path parameters, e.g. https://example.com/agents/{agent_id}"
          },
          "method": {
            "type": "string",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "title": "Method",
            "description": "The HTTP method to use for the webhook",
            "default": "GET"
          },
          "path_params_schema": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "type": "object",
            "title": "Path Params Schema",
            "description": "Schema for path parameters, if any. The keys should match the placeholders in the URL."
          },
          "query_params_schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QueryParamsJsonSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for any query params, if any. These will be added to end of the URL as query params. Note: properties in a query param must all be literal types"
          },
          "request_body_schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for the body parameters, if any. Used for POST/PATCH/PUT requests. The schema should be an object which will be sent as the json body"
          },
          "request_headers": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                },
                {
                  "$ref": "#/components/schemas/ConvAIDynamicVariable"
                }
              ]
            },
            "type": "object",
            "title": "Request Headers",
            "description": "Headers that should be included in the request"
          },
          "auth_connection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthConnectionLocator"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional auth connection to use for authentication with this webhook"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "WebhookToolApiSchemaConfig",
        "description": "Configuration for a webhook that will be called by an LLM tool.",
        "example": {
          "method": "GET",
          "path_params_schema": {
            "agent_id": {
              "type": "string"
            }
          },
          "query_params_schema": {
            "param1": {
              "type": "string"
            }
          },
          "request_body_schema": {
            "param1": {
              "type": "string"
            }
          },
          "request_headers": {
            "Authorization": "Bearer {api_key}"
          },
          "url": "https://example.com/agents/{agent_id}"
        }
      },
      "WebhookToolApiSchemaConfig-Output": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL that the webhook will be sent to. May include path parameters, e.g. https://example.com/agents/{agent_id}"
          },
          "method": {
            "type": "string",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "title": "Method",
            "description": "The HTTP method to use for the webhook",
            "default": "GET"
          },
          "path_params_schema": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "type": "object",
            "title": "Path Params Schema",
            "description": "Schema for path parameters, if any. The keys should match the placeholders in the URL."
          },
          "query_params_schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QueryParamsJsonSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for any query params, if any. These will be added to end of the URL as query params. Note: properties in a query param must all be literal types"
          },
          "request_body_schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for the body parameters, if any. Used for POST/PATCH/PUT requests. The schema should be an object which will be sent as the json body"
          },
          "request_headers": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                },
                {
                  "$ref": "#/components/schemas/ConvAIDynamicVariable"
                }
              ]
            },
            "type": "object",
            "title": "Request Headers",
            "description": "Headers that should be included in the request"
          },
          "auth_connection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthConnectionLocator"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional auth connection to use for authentication with this webhook"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "WebhookToolApiSchemaConfig",
        "description": "Configuration for a webhook that will be called by an LLM tool.",
        "example": {
          "method": "GET",
          "path_params_schema": {
            "agent_id": {
              "type": "string"
            }
          },
          "query_params_schema": {
            "param1": {
              "type": "string"
            }
          },
          "request_body_schema": {
            "param1": {
              "type": "string"
            }
          },
          "request_headers": {
            "Authorization": "Bearer {api_key}"
          },
          "url": "https://example.com/agents/{agent_id}"
        }
      },
      "WebhookToolConfig-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "webhook",
            "title": "Type",
            "description": "The type of tool",
            "default": "webhook"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "maximum": 120,
            "minimum": 5,
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete. Must be between 5 and 120 seconds (inclusive).",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "api_schema": {
            "$ref": "#/components/schemas/WebhookToolApiSchemaConfig-Input",
            "description": "The schema for the outgoing webhoook, including parameters and URL specification"
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig",
            "description": "Configuration for dynamic variables"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "api_schema"
        ],
        "title": "WebhookToolConfig",
        "description": "A webhook tool is a tool that calls an external webhook from our server",
        "example": {
          "response_timeout_secs": 20,
          "type": "webhook"
        }
      },
      "WebhookToolConfig-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "webhook",
            "title": "Type",
            "description": "The type of tool",
            "default": "webhook"
          },
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "maximum": 120,
            "minimum": 5,
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete. Must be between 5 and 120 seconds (inclusive).",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "api_schema": {
            "$ref": "#/components/schemas/WebhookToolApiSchemaConfig-Output",
            "description": "The schema for the outgoing webhoook, including parameters and URL specification"
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig",
            "description": "Configuration for dynamic variables"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "api_schema"
        ],
        "title": "WebhookToolConfig",
        "description": "A webhook tool is a tool that calls an external webhook from our server",
        "example": {
          "response_timeout_secs": 20,
          "type": "webhook"
        }
      },
      "WebhookUsageType": {
        "type": "string",
        "enum": [
          "ConvAI Agent Settings",
          "ConvAI Settings",
          "Voice Library Removal Notices",
          "Speech to Text"
        ],
        "title": "WebhookUsageType"
      },
      "WidgetConfig-Input": {
        "properties": {
          "variant": {
            "$ref": "#/components/schemas/EmbedVariant",
            "description": "The variant of the widget",
            "default": "full"
          },
          "placement": {
            "$ref": "#/components/schemas/WidgetPlacement",
            "description": "The placement of the widget on the screen",
            "default": "bottom-right"
          },
          "expandable": {
            "$ref": "#/components/schemas/WidgetExpandable",
            "description": "Whether the widget is expandable",
            "default": "never"
          },
          "avatar": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrbAvatar"
              },
              {
                "$ref": "#/components/schemas/URLAvatar"
              },
              {
                "$ref": "#/components/schemas/ImageAvatar"
              }
            ],
            "title": "Avatar",
            "description": "The avatar of the widget"
          },
          "feedback_mode": {
            "$ref": "#/components/schemas/WidgetFeedbackMode",
            "description": "The feedback mode of the widget",
            "default": "none"
          },
          "bg_color": {
            "type": "string",
            "title": "Bg Color",
            "description": "The background color of the widget",
            "default": "#ffffff"
          },
          "text_color": {
            "type": "string",
            "title": "Text Color",
            "description": "The text color of the widget",
            "default": "#000000"
          },
          "btn_color": {
            "type": "string",
            "title": "Btn Color",
            "description": "The button color of the widget",
            "default": "#000000"
          },
          "btn_text_color": {
            "type": "string",
            "title": "Btn Text Color",
            "description": "The button text color of the widget",
            "default": "#ffffff"
          },
          "border_color": {
            "type": "string",
            "title": "Border Color",
            "description": "The border color of the widget",
            "default": "#e1e1e1"
          },
          "focus_color": {
            "type": "string",
            "title": "Focus Color",
            "description": "The focus color of the widget",
            "default": "#000000"
          },
          "border_radius": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Border Radius",
            "description": "The border radius of the widget"
          },
          "btn_radius": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Btn Radius",
            "description": "The button radius of the widget"
          },
          "action_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Text",
            "description": "The action text of the widget"
          },
          "start_call_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Call Text",
            "description": "The start call text of the widget"
          },
          "end_call_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Call Text",
            "description": "The end call text of the widget"
          },
          "expand_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expand Text",
            "description": "The expand text of the widget"
          },
          "listening_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listening Text",
            "description": "The text to display when the agent is listening"
          },
          "speaking_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaking Text",
            "description": "The text to display when the agent is speaking"
          },
          "shareable_page_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shareable Page Text",
            "description": "The text to display when sharing"
          },
          "shareable_page_show_terms": {
            "type": "boolean",
            "title": "Shareable Page Show Terms",
            "description": "Whether to show terms and conditions on the shareable page",
            "default": true
          },
          "terms_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Text",
            "description": "The text to display for terms and conditions"
          },
          "terms_html": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Html",
            "description": "The HTML to display for terms and conditions"
          },
          "terms_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Key",
            "description": "The key to display for terms and conditions"
          },
          "show_avatar_when_collapsed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Show Avatar When Collapsed",
            "description": "Whether to show the avatar when the widget is collapsed",
            "default": false
          },
          "disable_banner": {
            "type": "boolean",
            "title": "Disable Banner",
            "description": "Whether to disable the banner",
            "default": false
          },
          "override_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Override Link",
            "description": "The override link for the widget"
          },
          "mic_muting_enabled": {
            "type": "boolean",
            "title": "Mic Muting Enabled",
            "description": "Whether to enable mic muting",
            "default": false
          },
          "transcript_enabled": {
            "type": "boolean",
            "title": "Transcript Enabled",
            "description": "Whether the widget should show the conversation transcript as it goes on",
            "default": false
          },
          "text_input_enabled": {
            "type": "boolean",
            "title": "Text Input Enabled",
            "description": "Whether the user should be able to send text messages",
            "default": true
          },
          "default_expanded": {
            "type": "boolean",
            "title": "Default Expanded",
            "description": "Whether the widget should be expanded by default",
            "default": false
          },
          "always_expanded": {
            "type": "boolean",
            "title": "Always Expanded",
            "description": "Whether the widget should always be expanded",
            "default": false
          },
          "text_contents": {
            "$ref": "#/components/schemas/WidgetTextContents",
            "description": "Text contents of the widget"
          },
          "styles": {
            "$ref": "#/components/schemas/WidgetStyles",
            "description": "Styles for the widget"
          },
          "language_selector": {
            "type": "boolean",
            "title": "Language Selector",
            "description": "Whether to show the language selector",
            "default": false
          },
          "supports_text_only": {
            "type": "boolean",
            "title": "Supports Text Only",
            "description": "Whether the widget can switch to text only mode",
            "default": true
          },
          "custom_avatar_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Avatar Path",
            "description": "The custom avatar path"
          },
          "language_presets": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WidgetLanguagePreset"
            },
            "type": "object",
            "title": "Language Presets",
            "description": "Language presets for the widget"
          }
        },
        "type": "object",
        "title": "WidgetConfig",
        "example": {
          "custom_avatar_path": "https://example.com/avatar.png",
          "language_selector": false
        }
      },
      "WidgetConfig-Output": {
        "properties": {
          "variant": {
            "$ref": "#/components/schemas/EmbedVariant",
            "description": "The variant of the widget",
            "default": "full"
          },
          "placement": {
            "$ref": "#/components/schemas/WidgetPlacement",
            "description": "The placement of the widget on the screen",
            "default": "bottom-right"
          },
          "expandable": {
            "$ref": "#/components/schemas/WidgetExpandable",
            "description": "Whether the widget is expandable",
            "default": "never"
          },
          "avatar": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrbAvatar"
              },
              {
                "$ref": "#/components/schemas/URLAvatar"
              },
              {
                "$ref": "#/components/schemas/ImageAvatar"
              }
            ],
            "title": "Avatar",
            "description": "The avatar of the widget"
          },
          "feedback_mode": {
            "$ref": "#/components/schemas/WidgetFeedbackMode",
            "description": "The feedback mode of the widget",
            "default": "none"
          },
          "bg_color": {
            "type": "string",
            "title": "Bg Color",
            "description": "The background color of the widget",
            "default": "#ffffff"
          },
          "text_color": {
            "type": "string",
            "title": "Text Color",
            "description": "The text color of the widget",
            "default": "#000000"
          },
          "btn_color": {
            "type": "string",
            "title": "Btn Color",
            "description": "The button color of the widget",
            "default": "#000000"
          },
          "btn_text_color": {
            "type": "string",
            "title": "Btn Text Color",
            "description": "The button text color of the widget",
            "default": "#ffffff"
          },
          "border_color": {
            "type": "string",
            "title": "Border Color",
            "description": "The border color of the widget",
            "default": "#e1e1e1"
          },
          "focus_color": {
            "type": "string",
            "title": "Focus Color",
            "description": "The focus color of the widget",
            "default": "#000000"
          },
          "border_radius": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Border Radius",
            "description": "The border radius of the widget"
          },
          "btn_radius": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Btn Radius",
            "description": "The button radius of the widget"
          },
          "action_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Text",
            "description": "The action text of the widget"
          },
          "start_call_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Call Text",
            "description": "The start call text of the widget"
          },
          "end_call_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Call Text",
            "description": "The end call text of the widget"
          },
          "expand_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expand Text",
            "description": "The expand text of the widget"
          },
          "listening_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listening Text",
            "description": "The text to display when the agent is listening"
          },
          "speaking_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaking Text",
            "description": "The text to display when the agent is speaking"
          },
          "shareable_page_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shareable Page Text",
            "description": "The text to display when sharing"
          },
          "shareable_page_show_terms": {
            "type": "boolean",
            "title": "Shareable Page Show Terms",
            "description": "Whether to show terms and conditions on the shareable page",
            "default": true
          },
          "terms_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Text",
            "description": "The text to display for terms and conditions"
          },
          "terms_html": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Html",
            "description": "The HTML to display for terms and conditions"
          },
          "terms_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Key",
            "description": "The key to display for terms and conditions"
          },
          "show_avatar_when_collapsed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Show Avatar When Collapsed",
            "description": "Whether to show the avatar when the widget is collapsed",
            "default": false
          },
          "disable_banner": {
            "type": "boolean",
            "title": "Disable Banner",
            "description": "Whether to disable the banner",
            "default": false
          },
          "override_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Override Link",
            "description": "The override link for the widget"
          },
          "mic_muting_enabled": {
            "type": "boolean",
            "title": "Mic Muting Enabled",
            "description": "Whether to enable mic muting",
            "default": false
          },
          "transcript_enabled": {
            "type": "boolean",
            "title": "Transcript Enabled",
            "description": "Whether the widget should show the conversation transcript as it goes on",
            "default": false
          },
          "text_input_enabled": {
            "type": "boolean",
            "title": "Text Input Enabled",
            "description": "Whether the user should be able to send text messages",
            "default": true
          },
          "default_expanded": {
            "type": "boolean",
            "title": "Default Expanded",
            "description": "Whether the widget should be expanded by default",
            "default": false
          },
          "always_expanded": {
            "type": "boolean",
            "title": "Always Expanded",
            "description": "Whether the widget should always be expanded",
            "default": false
          },
          "text_contents": {
            "$ref": "#/components/schemas/WidgetTextContents",
            "description": "Text contents of the widget"
          },
          "styles": {
            "$ref": "#/components/schemas/WidgetStyles",
            "description": "Styles for the widget"
          },
          "language_selector": {
            "type": "boolean",
            "title": "Language Selector",
            "description": "Whether to show the language selector",
            "default": false
          },
          "supports_text_only": {
            "type": "boolean",
            "title": "Supports Text Only",
            "description": "Whether the widget can switch to text only mode",
            "default": true
          },
          "custom_avatar_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Avatar Path",
            "description": "The custom avatar path"
          },
          "language_presets": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WidgetLanguagePreset"
            },
            "type": "object",
            "title": "Language Presets",
            "description": "Language presets for the widget"
          }
        },
        "type": "object",
        "title": "WidgetConfig",
        "example": {
          "custom_avatar_path": "https://example.com/avatar.png",
          "language_selector": false
        }
      },
      "WidgetConfigResponseModel": {
        "properties": {
          "variant": {
            "$ref": "#/components/schemas/EmbedVariant",
            "description": "The variant of the widget",
            "default": "full"
          },
          "placement": {
            "$ref": "#/components/schemas/WidgetPlacement",
            "description": "The placement of the widget on the screen",
            "default": "bottom-right"
          },
          "expandable": {
            "$ref": "#/components/schemas/WidgetExpandable",
            "description": "Whether the widget is expandable",
            "default": "never"
          },
          "avatar": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrbAvatar"
              },
              {
                "$ref": "#/components/schemas/URLAvatar"
              },
              {
                "$ref": "#/components/schemas/ImageAvatar"
              }
            ],
            "title": "Avatar",
            "description": "The avatar of the widget"
          },
          "feedback_mode": {
            "$ref": "#/components/schemas/WidgetFeedbackMode",
            "description": "The feedback mode of the widget",
            "default": "none"
          },
          "bg_color": {
            "type": "string",
            "title": "Bg Color",
            "description": "The background color of the widget",
            "default": "#ffffff"
          },
          "text_color": {
            "type": "string",
            "title": "Text Color",
            "description": "The text color of the widget",
            "default": "#000000"
          },
          "btn_color": {
            "type": "string",
            "title": "Btn Color",
            "description": "The button color of the widget",
            "default": "#000000"
          },
          "btn_text_color": {
            "type": "string",
            "title": "Btn Text Color",
            "description": "The button text color of the widget",
            "default": "#ffffff"
          },
          "border_color": {
            "type": "string",
            "title": "Border Color",
            "description": "The border color of the widget",
            "default": "#e1e1e1"
          },
          "focus_color": {
            "type": "string",
            "title": "Focus Color",
            "description": "The focus color of the widget",
            "default": "#000000"
          },
          "border_radius": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Border Radius",
            "description": "The border radius of the widget"
          },
          "btn_radius": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Btn Radius",
            "description": "The button radius of the widget"
          },
          "action_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Text",
            "description": "The action text of the widget"
          },
          "start_call_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Call Text",
            "description": "The start call text of the widget"
          },
          "end_call_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Call Text",
            "description": "The end call text of the widget"
          },
          "expand_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expand Text",
            "description": "The expand text of the widget"
          },
          "listening_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listening Text",
            "description": "The text to display when the agent is listening"
          },
          "speaking_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaking Text",
            "description": "The text to display when the agent is speaking"
          },
          "shareable_page_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shareable Page Text",
            "description": "The text to display when sharing"
          },
          "shareable_page_show_terms": {
            "type": "boolean",
            "title": "Shareable Page Show Terms",
            "description": "Whether to show terms and conditions on the shareable page",
            "default": true
          },
          "terms_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Text",
            "description": "The text to display for terms and conditions"
          },
          "terms_html": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Html",
            "description": "The HTML to display for terms and conditions"
          },
          "terms_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Key",
            "description": "The key to display for terms and conditions"
          },
          "show_avatar_when_collapsed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Show Avatar When Collapsed",
            "description": "Whether to show the avatar when the widget is collapsed",
            "default": false
          },
          "disable_banner": {
            "type": "boolean",
            "title": "Disable Banner",
            "description": "Whether to disable the banner",
            "default": false
          },
          "override_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Override Link",
            "description": "The override link for the widget"
          },
          "mic_muting_enabled": {
            "type": "boolean",
            "title": "Mic Muting Enabled",
            "description": "Whether to enable mic muting",
            "default": false
          },
          "transcript_enabled": {
            "type": "boolean",
            "title": "Transcript Enabled",
            "description": "Whether the widget should show the conversation transcript as it goes on",
            "default": false
          },
          "text_input_enabled": {
            "type": "boolean",
            "title": "Text Input Enabled",
            "description": "Whether the user should be able to send text messages",
            "default": true
          },
          "default_expanded": {
            "type": "boolean",
            "title": "Default Expanded",
            "description": "Whether the widget should be expanded by default",
            "default": false
          },
          "always_expanded": {
            "type": "boolean",
            "title": "Always Expanded",
            "description": "Whether the widget should always be expanded",
            "default": false
          },
          "text_contents": {
            "$ref": "#/components/schemas/WidgetTextContents",
            "description": "Text contents of the widget"
          },
          "styles": {
            "$ref": "#/components/schemas/WidgetStyles",
            "description": "Styles for the widget"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "supported_language_overrides": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supported Language Overrides"
          },
          "language_presets": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WidgetLanguagePresetResponse"
            },
            "type": "object",
            "title": "Language Presets",
            "description": "Language presets for the widget"
          },
          "text_only": {
            "type": "boolean",
            "title": "Text Only",
            "description": "Whether the agent uses text-only mode",
            "default": false
          },
          "supports_text_only": {
            "type": "boolean",
            "title": "Supports Text Only",
            "description": "Whether the agent can be switched to text-only mode",
            "default": false
          },
          "first_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Message"
          },
          "use_rtc": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Rtc",
            "description": "Whether to use WebRTC for conversation connections"
          }
        },
        "type": "object",
        "required": [
          "language"
        ],
        "title": "WidgetConfigResponseModel",
        "example": {
          "first_message": "Hello! How can I help you today?",
          "language": "en",
          "language_presets": {},
          "supported_language_overrides": [
            "es",
            "fr"
          ],
          "supports_text_only": true,
          "text_only": false,
          "use_rtc": false
        }
      },
      "WidgetExpandable": {
        "type": "string",
        "enum": [
          "never",
          "mobile",
          "desktop",
          "always"
        ],
        "title": "WidgetExpandable"
      },
      "WidgetFeedbackMode": {
        "type": "string",
        "enum": [
          "none",
          "during",
          "end"
        ],
        "title": "WidgetFeedbackMode"
      },
      "WidgetLanguagePreset": {
        "properties": {
          "text_contents": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WidgetTextContents"
              },
              {
                "type": "null"
              }
            ],
            "description": "The text contents for the selected language"
          }
        },
        "type": "object",
        "title": "WidgetLanguagePreset"
      },
      "WidgetLanguagePresetResponse": {
        "properties": {
          "first_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Message"
          },
          "text_contents": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WidgetTextContents"
              },
              {
                "type": "null"
              }
            ],
            "description": "The text contents for the selected language"
          }
        },
        "type": "object",
        "title": "WidgetLanguagePresetResponse"
      },
      "WidgetPlacement": {
        "type": "string",
        "enum": [
          "top-left",
          "top",
          "top-right",
          "bottom-left",
          "bottom",
          "bottom-right"
        ],
        "title": "WidgetPlacement"
      },
      "WidgetStyles": {
        "properties": {
          "base": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base",
            "description": "The base background color."
          },
          "base_hover": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Hover",
            "description": "The color of the base background when hovered."
          },
          "base_active": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Active",
            "description": "The color of the base background when active (clicked)."
          },
          "base_border": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Border",
            "description": "The color of the border against the base background."
          },
          "base_subtle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Subtle",
            "description": "The color of subtle text against the base background."
          },
          "base_primary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Primary",
            "description": "The color of primary text against the base background."
          },
          "base_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Error",
            "description": "The color of error text against the base background."
          },
          "accent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent",
            "description": "The accent background color."
          },
          "accent_hover": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent Hover",
            "description": "The color of the accent background when hovered."
          },
          "accent_active": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent Active",
            "description": "The color of the accent background when active (clicked)."
          },
          "accent_border": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent Border",
            "description": "The color of the border against the accent background."
          },
          "accent_subtle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent Subtle",
            "description": "The color of subtle text against the accent background."
          },
          "accent_primary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent Primary",
            "description": "The color of primary text against the accent background."
          },
          "overlay_padding": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Overlay Padding",
            "description": "The padding around the edges of the viewport."
          },
          "button_radius": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Button Radius",
            "description": "The radius of the buttons."
          },
          "input_radius": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Radius",
            "description": "The radius of the input fields."
          },
          "bubble_radius": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bubble Radius",
            "description": "The radius of the chat bubbles."
          },
          "sheet_radius": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sheet Radius",
            "description": "The default radius of sheets."
          },
          "compact_sheet_radius": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compact Sheet Radius",
            "description": "The radius of the sheet in compact mode."
          },
          "dropdown_sheet_radius": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dropdown Sheet Radius",
            "description": "The radius of the dropdown sheet."
          }
        },
        "type": "object",
        "title": "WidgetStyles"
      },
      "WidgetTextContents": {
        "properties": {
          "main_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Main Label",
            "description": "Call to action displayed inside the compact and full variants."
          },
          "start_call": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Call",
            "description": "Text and ARIA label for the start call button."
          },
          "start_chat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Chat",
            "description": "Text and ARIA label for the start chat button (text only)"
          },
          "new_call": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Call",
            "description": "Text and ARIA label for the new call button. Displayed when the caller already finished at least one call in order ot start the next one."
          },
          "end_call": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Call",
            "description": "Text and ARIA label for the end call button."
          },
          "mute_microphone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mute Microphone",
            "description": "ARIA label for the mute microphone button."
          },
          "change_language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Change Language",
            "description": "ARIA label for the change language dropdown."
          },
          "collapse": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collapse",
            "description": "ARIA label for the collapse button."
          },
          "expand": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expand",
            "description": "ARIA label for the expand button."
          },
          "copied": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Copied",
            "description": "Text displayed when the user copies a value using the copy button."
          },
          "accept_terms": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accept Terms",
            "description": "Text and ARIA label for the accept terms button."
          },
          "dismiss_terms": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dismiss Terms",
            "description": "Text and ARIA label for the cancel terms button."
          },
          "listening_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listening Status",
            "description": "Status displayed when the agent is listening."
          },
          "speaking_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaking Status",
            "description": "Status displayed when the agent is speaking."
          },
          "connecting_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connecting Status",
            "description": "Status displayed when the agent is connecting."
          },
          "chatting_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chatting Status",
            "description": "Status displayed when the agent is chatting (text only)"
          },
          "input_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Label",
            "description": "ARIA label for the text message input."
          },
          "input_placeholder": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Placeholder",
            "description": "Placeholder text for the text message input."
          },
          "input_placeholder_text_only": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Placeholder Text Only",
            "description": "Placeholder text for the text message input (text only)"
          },
          "input_placeholder_new_conversation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Placeholder New Conversation",
            "description": "Placeholder text for the text message input when starting a new conversation (text only)"
          },
          "user_ended_conversation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Ended Conversation",
            "description": "Information message displayed when the user ends the conversation."
          },
          "agent_ended_conversation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Ended Conversation",
            "description": "Information message displayed when the agent ends the conversation."
          },
          "conversation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Id",
            "description": "Text label used next to the conversation ID."
          },
          "error_occurred": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Occurred",
            "description": "Text label used when an error occurs."
          },
          "copy_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Copy Id",
            "description": "Text and ARIA label used for the copy ID button."
          }
        },
        "type": "object",
        "title": "WidgetTextContents"
      },
      "WorkflowToolEdgeStepModel": {
        "properties": {
          "step_latency_secs": {
            "type": "number",
            "title": "Step Latency Secs"
          },
          "type": {
            "type": "string",
            "const": "edge",
            "title": "Type",
            "default": "edge"
          },
          "edge_id": {
            "type": "string",
            "title": "Edge Id"
          },
          "target_node_id": {
            "type": "string",
            "title": "Target Node Id"
          }
        },
        "type": "object",
        "required": [
          "step_latency_secs",
          "edge_id",
          "target_node_id"
        ],
        "title": "WorkflowToolEdgeStepModel"
      },
      "WorkflowToolMaxIterationsExceededStepModel": {
        "properties": {
          "step_latency_secs": {
            "type": "number",
            "title": "Step Latency Secs"
          },
          "type": {
            "type": "string",
            "const": "max_iterations_exceeded",
            "title": "Type",
            "default": "max_iterations_exceeded"
          },
          "max_iterations": {
            "type": "integer",
            "title": "Max Iterations"
          }
        },
        "type": "object",
        "required": [
          "step_latency_secs",
          "max_iterations"
        ],
        "title": "WorkflowToolMaxIterationsExceededStepModel"
      },
      "WorkflowToolNestedToolsStepModel-Input": {
        "properties": {
          "step_latency_secs": {
            "type": "number",
            "title": "Step Latency Secs"
          },
          "type": {
            "type": "string",
            "const": "nested_tools",
            "title": "Type",
            "default": "nested_tools"
          },
          "node_id": {
            "type": "string",
            "title": "Node Id"
          },
          "requests": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallCommonModel"
            },
            "type": "array",
            "title": "Requests"
          },
          "results": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptOtherToolsResultCommonModel"
                },
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptSystemToolResultCommonModel"
                },
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptWorkflowToolsResultCommonModel-Input"
                }
              ]
            },
            "type": "array",
            "title": "Results"
          },
          "is_successful": {
            "type": "boolean",
            "title": "Is Successful"
          }
        },
        "type": "object",
        "required": [
          "step_latency_secs",
          "node_id",
          "requests",
          "results",
          "is_successful"
        ],
        "title": "WorkflowToolNestedToolsStepModel"
      },
      "WorkflowToolNestedToolsStepModel-Output": {
        "properties": {
          "step_latency_secs": {
            "type": "number",
            "title": "Step Latency Secs"
          },
          "type": {
            "type": "string",
            "const": "nested_tools",
            "title": "Type",
            "default": "nested_tools"
          },
          "node_id": {
            "type": "string",
            "title": "Node Id"
          },
          "requests": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallCommonModel"
            },
            "type": "array",
            "title": "Requests"
          },
          "results": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptOtherToolsResultCommonModel"
                },
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptSystemToolResultCommonModel"
                },
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptWorkflowToolsResultCommonModel-Output"
                }
              ]
            },
            "type": "array",
            "title": "Results"
          },
          "is_successful": {
            "type": "boolean",
            "title": "Is Successful"
          }
        },
        "type": "object",
        "required": [
          "step_latency_secs",
          "node_id",
          "requests",
          "results",
          "is_successful"
        ],
        "title": "WorkflowToolNestedToolsStepModel"
      },
      "WorkflowToolResponseModel-Input": {
        "properties": {
          "final_transfer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransferToAgentToolResultSuccessModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "steps": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowToolEdgeStepModel"
                },
                {
                  "$ref": "#/components/schemas/WorkflowToolNestedToolsStepModel-Input"
                },
                {
                  "$ref": "#/components/schemas/WorkflowToolMaxIterationsExceededStepModel"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "edge": "#/components/schemas/WorkflowToolEdgeStepModel",
                  "max_iterations_exceeded": "#/components/schemas/WorkflowToolMaxIterationsExceededStepModel",
                  "nested_tools": "#/components/schemas/WorkflowToolNestedToolsStepModel-Input"
                }
              }
            },
            "type": "array",
            "title": "Steps"
          }
        },
        "type": "object",
        "title": "WorkflowToolResponseModel",
        "description": "A common model for workflow tool responses."
      },
      "WorkflowToolResponseModel-Output": {
        "properties": {
          "final_transfer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TransferToAgentToolResultSuccessModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "steps": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowToolEdgeStepModel"
                },
                {
                  "$ref": "#/components/schemas/WorkflowToolNestedToolsStepModel-Output"
                },
                {
                  "$ref": "#/components/schemas/WorkflowToolMaxIterationsExceededStepModel"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "edge": "#/components/schemas/WorkflowToolEdgeStepModel",
                  "max_iterations_exceeded": "#/components/schemas/WorkflowToolMaxIterationsExceededStepModel",
                  "nested_tools": "#/components/schemas/WorkflowToolNestedToolsStepModel-Output"
                }
              }
            },
            "type": "array",
            "title": "Steps"
          }
        },
        "type": "object",
        "title": "WorkflowToolResponseModel",
        "description": "A common model for workflow tool responses."
      },
      "WorkspaceApiKeyListResponseModel": {
        "properties": {
          "api-keys": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceApiKeyResponseModel"
            },
            "type": "array",
            "title": "Api-Keys"
          }
        },
        "type": "object",
        "required": [
          "api-keys"
        ],
        "title": "WorkspaceApiKeyListResponseModel"
      },
      "WorkspaceApiKeyResponseModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "hint": {
            "type": "string",
            "title": "Hint"
          },
          "key_id": {
            "type": "string",
            "title": "Key Id"
          },
          "service_account_user_id": {
            "type": "string",
            "title": "Service Account User Id"
          },
          "created_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At Unix"
          },
          "is_disabled": {
            "type": "boolean",
            "title": "Is Disabled",
            "default": false
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "text_to_speech",
                    "speech_to_speech",
                    "speech_to_text",
                    "models_read",
                    "models_write",
                    "voices_read",
                    "voices_write",
                    "speech_history_read",
                    "speech_history_write",
                    "sound_generation",
                    "audio_isolation",
                    "voice_generation",
                    "dubbing_read",
                    "dubbing_write",
                    "pronunciation_dictionaries_read",
                    "pronunciation_dictionaries_write",
                    "user_read",
                    "user_write",
                    "projects_read",
                    "projects_write",
                    "audio_native_read",
                    "audio_native_write",
                    "workspace_read",
                    "workspace_write",
                    "forced_alignment"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions"
          },
          "character_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Limit"
          },
          "character_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Count"
          }
        },
        "type": "object",
        "required": [
          "name",
          "hint",
          "key_id",
          "service_account_user_id"
        ],
        "title": "WorkspaceApiKeyResponseModel"
      },
      "WorkspaceBatchCallsResponse": {
        "properties": {
          "batch_calls": {
            "items": {
              "$ref": "#/components/schemas/BatchCallResponse"
            },
            "type": "array",
            "title": "Batch Calls"
          },
          "next_doc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Doc",
            "description": "The next document, used to paginate through the batch calls"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more batch calls to paginate through",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "batch_calls"
        ],
        "title": "WorkspaceBatchCallsResponse"
      },
      "WorkspaceCreateApiKeyResponseModel": {
        "properties": {
          "xi-api-key": {
            "type": "string",
            "title": "Xi-Api-Key"
          }
        },
        "type": "object",
        "required": [
          "xi-api-key"
        ],
        "title": "WorkspaceCreateApiKeyResponseModel"
      },
      "WorkspaceGroupByNameResponseModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the workspace group."
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the workspace group."
          },
          "members_emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Members Emails",
            "description": "The emails of the members of the workspace group."
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "members_emails"
        ],
        "title": "WorkspaceGroupByNameResponseModel",
        "example": {
          "id": "1234567890",
          "members_emails": [
            "john.doe@example.com",
            "jane.smith@example.com"
          ],
          "name": "My Workspace Group"
        }
      },
      "WorkspaceResourceType": {
        "type": "string",
        "enum": [
          "voice",
          "voice_collection",
          "pronunciation_dictionary",
          "dubbing",
          "project",
          "convai_agents",
          "convai_knowledge_base_documents",
          "convai_tools",
          "convai_settings",
          "convai_secrets",
          "workspace_auth_connections",
          "music_latent",
          "convai_phone_numbers",
          "convai_mcp_servers",
          "convai_batch_calls",
          "convai_agent_response_tests",
          "convai_test_suite_invocations"
        ],
        "title": "WorkspaceResourceType",
        "description": "Resource types that can be shared in the workspace. The name always need to match the collection names"
      },
      "WorkspaceServiceAccountListResponseModel": {
        "properties": {
          "service-accounts": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceServiceAccountResponseModel"
            },
            "type": "array",
            "title": "Service-Accounts"
          }
        },
        "type": "object",
        "required": [
          "service-accounts"
        ],
        "title": "WorkspaceServiceAccountListResponseModel"
      },
      "WorkspaceServiceAccountResponseModel": {
        "properties": {
          "service_account_user_id": {
            "type": "string",
            "title": "Service Account User Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "created_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At Unix"
          },
          "api-keys": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceApiKeyResponseModel"
            },
            "type": "array",
            "title": "Api-Keys"
          }
        },
        "type": "object",
        "required": [
          "service_account_user_id",
          "name",
          "api-keys"
        ],
        "title": "WorkspaceServiceAccountResponseModel"
      },
      "WorkspaceWebhookListResponseModel": {
        "properties": {
          "webhooks": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceWebhookResponseModel"
            },
            "type": "array",
            "title": "Webhooks",
            "description": "List of webhooks currently configured for the workspace"
          }
        },
        "type": "object",
        "required": [
          "webhooks"
        ],
        "title": "WorkspaceWebhookListResponseModel",
        "example": {
          "webhooks": [
            {
              "auth_type": "hmac",
              "created_at_unix": 123456789,
              "is_auto_disabled": false,
              "is_disabled": false,
              "most_recent_failure_error_code": 404,
              "most_recent_failure_timestamp": 123456799,
              "name": "My Webhook",
              "usage": [
                {
                  "usage_type": "ConvAI Settings"
                }
              ],
              "webhook_id": "123",
              "webhook_url": "https://elevenlabs.io/example-callback-url"
            }
          ]
        }
      },
      "WorkspaceWebhookResponseModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The display name for this webhook."
          },
          "webhook_id": {
            "type": "string",
            "title": "Webhook Id",
            "description": "The unique ID for this webhook."
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "The HTTPS callback URL that is called when this webhook is triggered in the platform."
          },
          "is_disabled": {
            "type": "boolean",
            "title": "Is Disabled",
            "description": "Whether the webhook has been manually disabled by a user."
          },
          "is_auto_disabled": {
            "type": "boolean",
            "title": "Is Auto Disabled",
            "description": "Whether the webhook has been automatically disabled due to repeated consecutive failures over a long period of time."
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix",
            "description": "Original creation time of the webhook."
          },
          "auth_type": {
            "$ref": "#/components/schemas/WebhookAuthMethodType",
            "description": "The authentication mode used to secure the webhook."
          },
          "usage": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/WorkspaceWebhookUsageResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage",
            "description": "The list of products that are currently configured to trigger this webhook."
          },
          "most_recent_failure_error_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Most Recent Failure Error Code",
            "description": "The most recent error code returned from the callback URL."
          },
          "most_recent_failure_timestamp": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Most Recent Failure Timestamp",
            "description": "The most recent time the webhook failed, failures are any non-200 codes returned by the callback URL."
          }
        },
        "type": "object",
        "required": [
          "name",
          "webhook_id",
          "webhook_url",
          "is_disabled",
          "is_auto_disabled",
          "created_at_unix",
          "auth_type"
        ],
        "title": "WorkspaceWebhookResponseModel"
      },
      "WorkspaceWebhookUsageResponseModel": {
        "properties": {
          "usage_type": {
            "$ref": "#/components/schemas/WebhookUsageType"
          }
        },
        "type": "object",
        "required": [
          "usage_type"
        ],
        "title": "WorkspaceWebhookUsageResponseModel"
      }
    }
  },
  "tags": [
    {
      "name": "text-to-speech",
      "description": "Convert text into lifelike speech using a voice of your choice."
    },
    {
      "name": "speech-to-speech",
      "description": "Create speech by combining the style and content of an audio file you upload with a voice of your choice."
    },
    {
      "name": "speech-to-text",
      "description": "Transcribe your audio files with detailed speaker annotations and precise timestamps using our cutting-edge model."
    },
    {
      "name": "forced-alignment",
      "description": "Force align an audio file to a text transcript to get precise word-level and character level timing information. Response is a list of characters with their start and end times as milliseconds elapsed from the start of the recording."
    },
    {
      "name": "models",
      "description": "Access the different models of the platform."
    },
    {
      "name": "voices",
      "description": "Access to voices created either by you or ElevenLabs."
    },
    {
      "name": "samples",
      "description": "Access to your samples. A sample is any audio file you attached to a voice. A voice can have one or more samples."
    },
    {
      "name": "speech-history",
      "description": "Accesses your speech history. Your speech history is a list of all your created audio including its metadata using our text-to-speech and speech-to-speech models."
    },
    {
      "name": "studios",
      "description": "Access, create and convert Studio Projects programmatically, only specifically whitelisted accounts can access the Studio API. If you need access please contact our sales team."
    },
    {
      "name": "workspace",
      "description": "Access to workspace related endpoints."
    }
  ]
}