{
  "openapi": "3.1.0",
  "info": {
    "title": "ElevenLabs API Documentation",
    "description": "This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your API key. You can find your API key in the dashboard at https://elevenlabs.io/app/settings/api-keys.",
    "version": "1.0"
  },
  "paths": {
    "/v1/history": {
      "get": {
        "tags": [
          "speech-history"
        ],
        "summary": "List Generated Items",
        "description": "Returns a list of your generated audio.",
        "operationId": "List_generated_items_v1_history_get",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "How many history items to return at maximum. Can not exceed 1000, defaults to 100.",
              "default": 100,
              "title": "Page Size"
            },
            "description": "How many history items to return at maximum. Can not exceed 1000, defaults to 100."
          },
          {
            "name": "start_after_history_item_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "After which ID to start fetching, use this parameter to paginate across a large collection of history items. In case this parameter is not provided history items will be fetched starting from the most recently created one ordered descending by their creation date.",
              "title": "Start After History Item Id"
            },
            "description": "After which ID to start fetching, use this parameter to paginate across a large collection of history items. In case this parameter is not provided history items will be fetched starting from the most recently created one ordered descending by their creation date."
          },
          {
            "name": "voice_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Voice ID to be filtered for, you can use GET https://api.elevenlabs.io/v1/voices to receive a list of voices and their IDs.",
              "title": "Voice Id"
            },
            "description": "Voice ID to be filtered for, you can use GET https://api.elevenlabs.io/v1/voices to receive a list of voices and their IDs."
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "search term used for filtering",
              "examples": [
                "In the land far far away"
              ],
              "title": "Search"
            },
            "description": "search term used for filtering"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "TTS",
                    "STS"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Source of the generated history item",
              "examples": [
                "TTS"
              ],
              "title": "Source"
            },
            "description": "Source of the generated history item"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSpeechHistoryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/history/{history_item_id}": {
      "get": {
        "tags": [
          "speech-history"
        ],
        "summary": "Get History Item",
        "description": "Retrieves a history item.",
        "operationId": "Get_history_item_v1_history__history_item_id__get",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            },
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeechHistoryItemResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "speech-history"
        ],
        "summary": "Delete History Item",
        "description": "Delete a history item by its ID",
        "operationId": "Delete_history_item_v1_history__history_item_id__delete",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            },
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteHistoryItemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/history/{history_item_id}/audio": {
      "get": {
        "tags": [
          "speech-history"
        ],
        "summary": "Get Audio From History Item",
        "description": "Returns the audio of an history item.",
        "operationId": "Get_audio_from_history_item_v1_history__history_item_id__audio_get",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            },
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "The audio file of the history item.",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "get_audio"
      }
    },
    "/v1/history/{history_item_id}/generate-video": {
      "post": {
        "tags": [
          "speech-history"
        ],
        "summary": "Generate Video From History Item",
        "description": "Generate a video from a text-to-speech history item.",
        "operationId": "Generate_Video_From_History_Item_v1_history__history_item_id__generate_video_post",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            },
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
          },
          {
            "name": "theme",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "light",
                    "dark",
                    "colour"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Theme of the video",
              "examples": [
                "light",
                "dark"
              ],
              "default": "light",
              "title": "Theme"
            },
            "description": "Theme of the video"
          },
          {
            "name": "strip_v3_tags",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to strip V3 tags from the text",
              "default": false,
              "title": "Strip V3 Tags"
            },
            "description": "Whether to strip V3 tags from the text"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeechHistoryVideoResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/history/{history_item_id}/generate-video-preview-image": {
      "post": {
        "tags": [
          "speech-history"
        ],
        "summary": "Generate Video Preview Image From History Item",
        "description": "Generate a video preview image from a text-to-speech history item.",
        "operationId": "Generate_Video_Preview_Image_From_History_Item_v1_history__history_item_id__generate_video_preview_image_post",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            },
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
          },
          {
            "name": "theme",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "light",
                    "dark",
                    "colour"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Theme of the video",
              "examples": [
                "light",
                "dark"
              ],
              "default": "light",
              "title": "Theme"
            },
            "description": "Theme of the video"
          },
          {
            "name": "strip_v3_tags",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to strip V3 tags from the text",
              "default": false,
              "title": "Strip V3 Tags"
            },
            "description": "Whether to strip V3 tags from the text"
          }
        ],
        "responses": {
          "200": {
            "description": "The video preview image of the history item.",
            "content": {
              "application/json": {
                "schema": {

                }
              },
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/history/{history_item_id}/share-link": {
      "get": {
        "tags": [
          "speech-history"
        ],
        "summary": "Get The Share Link Of An History Item",
        "description": "Returns the share link of an history item.",
        "operationId": "Get_the_share_link_of_an_history_item_v1_history__history_item_id__share_link_get",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            },
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHistoryShareLinkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/history/download": {
      "post": {
        "tags": [
          "speech-history"
        ],
        "summary": "Download History Items",
        "description": "Download one or more history items. If one history item ID is provided, we will return a single audio file. If more than one history item IDs are provided, we will provide the history items packed into a .zip file.",
        "operationId": "Download_history_items_v1_history_download_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Download_history_items_v1_history_download_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The requested audio file, or a zip file containing multiple audio files when multiple history items are requested.",
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "invalid_output_format",
                  "message": "output_format must be wav or none"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "download"
      }
    },
    "/sound-generation": {
      "post": {
        "tags": [
          "sound-generation"
        ],
        "summary": "Sound Generation (Website Users Only)",
        "description": "Converts a text of your choice into sound",
        "operationId": "Sound_Generation__website_users_only__sound_generation_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Sound_Generation__website_users_only__sound_generation_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateSoundsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sound-generation": {
      "post": {
        "tags": [
          "sound-generation"
        ],
        "summary": "Sound Generation",
        "description": "Turn text into sound effects for your videos, voice-overs or video games using the most advanced sound effects model in the world.",
        "operationId": "Sound_Generation_v1_sound_generation_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Sound_Generation_v1_sound_generation_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated sound effect as an MP3 file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "character-cost": {
                "description": "The number of characters used for billing",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_sound_effects",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/audio-isolation": {
      "post": {
        "tags": [
          "audio-isolation"
        ],
        "summary": "Audio Isolation",
        "description": "Removes background noise from audio",
        "operationId": "Audio_Isolation_v1_audio_isolation_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Audio_Isolation_v1_audio_isolation_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "audio_isolation",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/audio-isolation/stream": {
      "post": {
        "tags": [
          "audio-isolation"
        ],
        "summary": "Audio Isolation Stream",
        "description": "Removes background noise from audio and streams the result",
        "operationId": "Audio_Isolation_Stream_v1_audio_isolation_stream_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "audio_isolation",
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/sound-generation/history/{sound_generation_history_item_id}/save": {
      "post": {
        "tags": [
          "sound-generation-history"
        ],
        "summary": "Save Sound Generation History Item",
        "description": "Save a sound generation history item to the user's saved collection",
        "operationId": "Save_sound_generation_history_item_v1_sound_generation_history__sound_generation_history_item_id__save_post",
        "parameters": [
          {
            "name": "sound_generation_history_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "sound_generation_history_item_id to be used, you can use GET https://api.elevenlabs.io/v1/sound-generation/history to receive a list of history items and their IDs.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sound Generation History Item Id"
            },
            "description": "sound_generation_history_item_id to be used, you can use GET https://api.elevenlabs.io/v1/sound-generation/history to receive a list of history items and their IDs."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Save_sound_generation_history_item_v1_sound_generation_history__sound_generation_history_item_id__save_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoundGenerationHistoryItemResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/sound-generation/history/{sound_effect_history_item_id}/share": {
      "post": {
        "tags": [
          "sound-effects-explore"
        ],
        "summary": "Share History Item.",
        "description": "Share a history item.",
        "operationId": "Share_history_item__v1_sound_generation_history__sound_effect_history_item_id__share_post",
        "parameters": [
          {
            "name": "sound_effect_history_item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "sound_effect_history_item_id to be used, you can use GET https://api.elevenlabs.io/v1/sound-effects-history to receive a list of history items and their IDs.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sound Effect History Item Id"
            },
            "description": "sound_effect_history_item_id to be used, you can use GET https://api.elevenlabs.io/v1/sound-effects-history to receive a list of history items and their IDs."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Share_history_item__v1_sound_generation_history__sound_effect_history_item_id__share_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/recompute-shared-sound-generations": {
      "post": {
        "summary": "Recompute Shared Sound Generations",
        "description": "This function will be called on an interval by a cloud function.",
        "operationId": "recompute_shared_sound_generations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_recompute_shared_sound_generations_c185a1ff66f4a1feaeb19931d4be4175_recompute_shared_sound_generations_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shared-sound-generations": {
      "get": {
        "tags": [
          "sound-effects-explore"
        ],
        "summary": "Get Shared Sound Effects",
        "description": "Returns a list of shared sound effects.",
        "operationId": "Get_shared_sound_effects_v1_shared_sound_generations_get",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "How many sound effects to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many sound effects to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "last_sort_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "This Sort ID is returned from the previou fetch. Use this parameter to load more. In case this parameter is not provided sound effects will be fetched starting from the first one according to sorting criteria",
              "title": "Last Sort Id"
            },
            "description": "This Sort ID is returned from the previou fetch. Use this parameter to load more. In case this parameter is not provided sound effects will be fetched starting from the first one according to sorting criteria"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "restaurant",
                    "park",
                    "industrial",
                    "school",
                    "office",
                    "urban",
                    "ocean",
                    "nature",
                    "weather",
                    "foley",
                    "fantasy",
                    "human",
                    "device",
                    "sci-fi",
                    "horror",
                    "animal",
                    "boom",
                    "braam",
                    "riser",
                    "whoosh",
                    "drone",
                    "impact",
                    "weapon",
                    "transport",
                    "household",
                    "percussion",
                    "cymbal",
                    "synth",
                    "bass",
                    "guitar",
                    "key",
                    "string",
                    "brass",
                    "woodwind",
                    "ui element",
                    "sport",
                    "vehicle",
                    "misc"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sound effect category used for filtering.",
              "examples": [
                "Nature"
              ],
              "title": "Category"
            },
            "description": "Sound effect category used for filtering."
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term used for filtering",
              "examples": [
                "Cold water"
              ],
              "title": "Search"
            },
            "description": "Search term used for filtering"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "sharing_date_unix",
                    "purchased_count",
                    "like_count",
                    "trending_score"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort criteria. Can be one of: created_date, download_count, like_count, trending_score. Defaults to trending_score.",
              "examples": [
                "trending_score"
              ],
              "default": "trending_score",
              "title": "Sort"
            },
            "description": "Sort criteria. Can be one of: created_date, download_count, like_count, trending_score. Defaults to trending_score."
          },
          {
            "name": "featured",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Filter featured sound effects.",
              "examples": [true],
              "default": false,
              "title": "Featured"
            },
            "description": "Filter featured sound effects."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSharedSoundGenerationsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shared-sound-generations/{sound_effect_generation_id}/purchase": {
      "post": {
        "tags": [
          "sound-effects-explore"
        ],
        "summary": "Purchases Shared Sound Effect",
        "description": "Purchases shared sound effect and charges user for the purchase.",
        "operationId": "Purchases_shared_sound_effect_v1_shared_sound_generations__sound_effect_generation_id__purchase_post",
        "parameters": [
          {
            "name": "sound_effect_generation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "sound_effect_generation_id to be used, you can use GET https://api.elevenlabs.io/v1/sound-effects-history to receive a list of history items and their sound_effect_generation_ids.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sound Effect Generation Id"
            },
            "description": "sound_effect_generation_id to be used, you can use GET https://api.elevenlabs.io/v1/sound-effects-history to receive a list of history items and their sound_effect_generation_ids."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/purchased-sound-generations": {
      "get": {
        "tags": [
          "sound-effects-explore"
        ],
        "summary": "Get Purchased Sound Generations",
        "description": "Returns a list of purchased sound generations.",
        "operationId": "Get_purchased_sound_generations_v1_purchased_sound_generations_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPurchasedSharedSoundGenerationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shared-sound-generations/{sound_effect_generation_id}/audio": {
      "get": {
        "tags": [
          "sound-effects-explore"
        ],
        "summary": "Get Audio For Shared Sound Effect",
        "description": "Get audio for shared sound effect",
        "operationId": "Get_audio_for_shared_sound_effect_v1_shared_sound_generations__sound_effect_generation_id__audio_get",
        "parameters": [
          {
            "name": "sound_effect_generation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "sound_effect_generation_id to be used, you can use GET https://api.elevenlabs.io/v1/sound-effects-history to receive a list of history items and their sound_effect_generation_ids.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sound Effect Generation Id"
            },
            "description": "sound_effect_generation_id to be used, you can use GET https://api.elevenlabs.io/v1/sound-effects-history to receive a list of history items and their sound_effect_generation_ids."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/samples/{sample_id}": {
      "delete": {
        "tags": [
          "samples"
        ],
        "summary": "Delete Sample",
        "description": "Removes a sample by its ID.",
        "operationId": "Delete_sample_v1_voices__voice_id__samples__sample_id__delete",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSampleResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "samples",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/voices/{voice_id}/samples/{sample_id}/audio": {
      "get": {
        "tags": [
          "samples"
        ],
        "summary": "Get Audio From Sample",
        "description": "Returns the audio corresponding to a sample attached to a voice.",
        "operationId": "Get_audio_from_sample_v1_voices__voice_id__samples__sample_id__audio_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/*": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "samples",
          "audio"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/{voice_id}/samples/{sample_id}/audio/signed-url": {
      "get": {
        "tags": [
          "samples"
        ],
        "summary": "Get Signed Url For Sample Audio",
        "description": "Returns the signed url for the audio corresponding to a sample attached to a voice.",
        "operationId": "Get_signed_url_for_sample_audio_v1_voices__voice_id__samples__sample_id__audio_signed_url_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SampleSignedUrlResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/text-to-speech/{voice_id}": {
      "post": {
        "tags": [
          "text-to-speech"
        ],
        "summary": "Text To Speech",
        "description": "Converts text into speech using a voice of your choice and returns audio.",
        "operationId": "Text_to_speech_v1_text_to_speech__voice_id__post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "deprecated": true
            },
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_v1_text_to_speech__voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated audio file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/text-to-speech/{voice_id}/with-timestamps": {
      "post": {
        "tags": [
          "text-to-speech"
        ],
        "summary": "Text To Speech With Timestamps",
        "description": "Generate speech from text with precise character-level timing information for audio-text synchronization.",
        "operationId": "Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "deprecated": true
            },
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioWithTimestampsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "convert_with_timestamps"
      }
    },
    "/v1/text-to-speech/{voice_id}/stream": {
      "post": {
        "tags": [
          "text-to-speech"
        ],
        "summary": "Text To Speech Streaming",
        "description": "Converts text into speech using a voice of your choice and returns audio as an audio stream.",
        "operationId": "Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "deprecated": true
            },
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/text-to-speech/{voice_id}/stream/with-timestamps": {
      "post": {
        "tags": [
          "text-to-speech"
        ],
        "summary": "Text To Speech Streaming With Timestamps",
        "description": "Converts text into speech using a voice of your choice and returns a stream of JSONs containing audio as a base64 encoded string together with information on when which character was spoken.",
        "operationId": "Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "deprecated": true
            },
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stream of transcription chunks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingAudioChunkWithTimestampsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "stream_with_timestamps",
        "x-fern-streaming": true
      }
    },
    "/v1/text-to-dialogue": {
      "post": {
        "tags": [
          "text-to-dialogue"
        ],
        "summary": "Text To Dialogue (Multi-Voice)",
        "description": "Converts a list of text and voice ID pairs into speech (dialogue) and returns audio.",
        "operationId": "Text_to_dialogue__multi_voice__v1_text_to_dialogue_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_dialogue__multi_voice__v1_text_to_dialogue_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated audio file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_dialogue",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/text-to-dialogue/stream": {
      "post": {
        "tags": [
          "text-to-dialogue"
        ],
        "summary": "Text To Dialogue (Multi-Voice) Streaming",
        "description": "Converts a list of text and voice ID pairs into speech (dialogue) and returns an audio stream.",
        "operationId": "Text_to_dialogue__multi_voice__streaming_v1_text_to_dialogue_stream_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_dialogue__multi_voice__streaming_v1_text_to_dialogue_stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_dialogue",
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/enhance-dialogue": {
      "post": {
        "tags": [
          "text-to-dialogue"
        ],
        "summary": "Enhance Dialogue Blocks",
        "description": "Enhances dialogue text blocks using AI to make them more dynamic and suitable for speech generation with special actions and varied emotions.",
        "operationId": "Enhance_dialogue_blocks_v1_enhance_dialogue_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Enhance_dialogue_blocks_v1_enhance_dialogue_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DialogueEnhancementResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_dialogue",
        "x-fern-sdk-method-name": "enhance"
      }
    },
    "/v1/speech-to-speech/{voice_id}": {
      "post": {
        "tags": [
          "speech-to-speech"
        ],
        "summary": "Speech To Speech",
        "description": "Transform audio from one voice to another. Maintain full control over emotion, timing and delivery.",
        "operationId": "Speech_to_Speech_v1_speech_to_speech__voice_id__post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "deprecated": true
            },
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated audio file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "speech_to_speech",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/speech-to-speech/{voice_id}/stream": {
      "post": {
        "tags": [
          "speech-to-speech"
        ],
        "summary": "Speech To Speech Streaming",
        "description": "Stream audio from one voice to another. Maintain full control over emotion, timing and delivery.",
        "operationId": "Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "deprecated": true
            },
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "speech_to_speech",
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/voice-generation/generate-voice/parameters": {
      "get": {
        "tags": [
          "voice-generation"
        ],
        "summary": "Voice Generation Parameters",
        "description": "Get possible parameters for the /v1/voice-generation/generate-voice endpoint.",
        "operationId": "Voice_Generation_Parameters_v1_voice_generation_generate_voice_parameters_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceGenerationParameterResponseModel"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voice_generation",
        "x-fern-sdk-method-name": "generate_parameters"
      }
    },
    "/v1/voice-generation/generate-voice": {
      "post": {
        "tags": [
          "voice-generation"
        ],
        "summary": "Generate A Random Voice",
        "description": "Generate a random voice based on parameters. This method returns a generated_voice_id in the response header, and a sample of the voice in the body. If you like the generated voice call /v1/voice-generation/create-voice with the generated_voice_id to create the voice.",
        "operationId": "Generate_a_random_voice_v1_voice_generation_generate_voice_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voice_generation",
        "x-fern-sdk-method-name": "generate"
      }
    },
    "/v1/text-to-voice/generate-sample-text": {
      "post": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Generate A Sample Text For A Voice Description",
        "description": "Generate a sample text typical for a given voice description which can be later used to create a voice preview.",
        "operationId": "Generate_a_sample_text_for_a_voice_description_v1_text_to_voice_generate_sample_text_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_a_sample_text_for_a_voice_description_v1_text_to_voice_generate_sample_text_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SampleVoiceTextResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/text-to-voice/create-previews": {
      "post": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Generate A Voice Preview From Description",
        "description": "Generate a custom voice based on voice description. This method returns a list of voice previews. Each preview has a generated_voice_id and a sample of the voice as base64 encoded mp3 audio. If you like the a voice previewand want to create the voice call /v1/text-to-voice/create-voice-from-preview with the generated_voice_id to create the voice.",
        "operationId": "Generate_a_voice_preview_from_description_v1_text_to_voice_create_previews_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_192"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoicePreviewsRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoicePreviewsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_voice",
        "x-fern-sdk-method-name": "create_previews"
      }
    },
    "/v1/voice-generation/create-voice": {
      "post": {
        "tags": [
          "voice-generation"
        ],
        "summary": "Create A Previously Generated Voice",
        "description": "Create a previously generated voice. This endpoint should be called after you fetched a generated_voice_id using /v1/voice-generation/generate-voice.",
        "operationId": "Create_a_previously_generated_voice_v1_voice_generation_create_voice_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voice_generation",
        "x-fern-sdk-method-name": "create_a_previously_generated_voice"
      }
    },
    "/v1/text-to-voice": {
      "post": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Create A New Voice From Voice Preview",
        "description": "Create a voice from previously generated voice preview. This endpoint should be called after you fetched a generated_voice_id using POST /v1/text-to-voice/design or POST /v1/text-to-voice/:voice_id/remix.",
        "operationId": "Create_a_new_voice_from_voice_preview_v1_text_to_voice_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_voice",
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/internal/text-to-voice/design": {
      "post": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Design A Voice (Internal).",
        "description": "Design a voice via a prompt and include the generations in a remixing session. This method returns a list of voice previews. Each preview has a generated_voice_id and a sample of the voice as base64 encoded mp3 audio. To create a voice use the generated_voice_id of the preferred preview with the /v1/text-to-voice endpoint.",
        "operationId": "Design_a_voice__internal___v1_internal_text_to_voice_design_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_192"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoiceDesignRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoicePreviewsInternalResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/text-to-voice/design": {
      "post": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Design A Voice.",
        "description": "Design a voice via a prompt. This method returns a list of voice previews. Each preview has a generated_voice_id and a sample of the voice as base64 encoded mp3 audio. To create a voice use the generated_voice_id of the preferred preview with the /v1/text-to-voice endpoint.",
        "operationId": "Design_a_voice__v1_text_to_voice_design_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_192"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoiceDesignRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoicePreviewsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_voice",
        "x-fern-sdk-method-name": "design"
      }
    },
    "/v1/internal/text-to-voice/{voice_id}/remix": {
      "post": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Remix A Voice (Internal).",
        "description": "Remix an existing voice via a prompt and include the generations in a remixing session. This method returns a list of voice previews. Each preview has a generated_voice_id and a sample of the voice as base64 encoded mp3 audio. To create a voice use the generated_voice_id of the preferred preview with the /v1/text-to-voice endpoint.",
        "operationId": "Remix_a_voice__internal___v1_internal_text_to_voice__voice_id__remix_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_192"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoiceRemixRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoicePreviewsInternalResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/text-to-voice/{voice_id}/remix": {
      "post": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Remix A Voice.",
        "description": "Remix an existing voice via a prompt. This method returns a list of voice previews. Each preview has a generated_voice_id and a sample of the voice as base64 encoded mp3 audio. To create a voice use the generated_voice_id of the preferred preview with the /v1/text-to-voice endpoint.",
        "operationId": "Remix_a_voice__v1_text_to_voice__voice_id__remix_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_192"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoiceRemixRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoicePreviewsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "text_to_voice",
        "x-fern-sdk-method-name": "remix"
      }
    },
    "/v1/text-to-voice/{generated_voice_id}/stream": {
      "get": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Text To Voice Preview Streaming",
        "description": "Stream a voice preview that was created via the /v1/text-to-voice/design endpoint.",
        "operationId": "Text_to_voice_preview_streaming_v1_text_to_voice__generated_voice_id__stream_get",
        "parameters": [
          {
            "name": "generated_voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The generated_voice_id to stream.",
              "examples": [
                "37HceQefKmEi3bGovXjL"
              ],
              "embed": true,
              "title": "Generated Voice Id"
            },
            "description": "The generated_voice_id to stream."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "text_to_voice",
          "preview"
        ],
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/text-to-voice/remixing-sessions": {
      "get": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Get All Voice Remixing Sessions",
        "description": "Get all voice remixing sessions. They will not include preview audios. To get the preview audios, use /v1/text-to-voice/remixing-sessions/{remixing_session_id}.",
        "operationId": "Get_all_voice_remixing_sessions_v1_text_to_voice_remixing_sessions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllVoiceRemixingSessionsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Create Voice Remixing Session",
        "description": "Create voice remixing session",
        "operationId": "Create_voice_remixing_session_v1_text_to_voice_remixing_sessions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_voice_remixing_session_v1_text_to_voice_remixing_sessions_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceRemixingSessionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/text-to-voice/remixing-sessions/{remixing_session_id}": {
      "get": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Get Voice Remixing Session By Id",
        "description": "Get voice remixing session by id",
        "operationId": "Get_voice_remixing_session_by_id_v1_text_to_voice_remixing_sessions__remixing_session_id__get",
        "parameters": [
          {
            "name": "remixing_session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The remixing session id.",
              "examples": [
                "123"
              ],
              "embed": true,
              "title": "Remixing Session Id"
            },
            "description": "The remixing session id."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceRemixingSessionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Delete Voice Remixing Session",
        "description": "Delete voice remixing session",
        "operationId": "Delete_voice_remixing_session_v1_text_to_voice_remixing_sessions__remixing_session_id__delete",
        "parameters": [
          {
            "name": "remixing_session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The remixing session id.",
              "examples": [
                "123"
              ],
              "embed": true,
              "title": "Remixing Session Id"
            },
            "description": "The remixing session id."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteVoiceRemixingSessionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/subscription": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Subscription Info",
        "description": "Gets extended information about the users subscription",
        "operationId": "Get_user_subscription_info_v1_user_subscription_get",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedSubscriptionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "user",
          "subscription"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get User Info",
        "description": "Gets information about the user",
        "operationId": "Get_user_info_v1_user_get",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "user",
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/user/record-device-fingerprint": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Record Device Fingerprint",
        "description": "Record the device fingerprint of the user",
        "operationId": "Record_device_fingerprint_v1_user_record_device_fingerprint_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Record_device_fingerprint_v1_user_record_device_fingerprint_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/send-verification-email": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Send Verification Email",
        "description": "Send a new verification email",
        "operationId": "Send_verification_email_v1_user_send_verification_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Send_verification_email_v1_user_send_verification_email_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/verify-sensitive-action-code": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Verify Sensitive Action Code",
        "description": "Verify a sensitive action code",
        "operationId": "Verify_sensitive_action_code_v1_user_verify_sensitive_action_code_post",
        "parameters": [
          {
            "name": "verification_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Verification Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/send-password-reset-email": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Send Password Reset Email",
        "description": "Send a new password password reset email",
        "operationId": "Send_password_reset_email_v1_user_send_password_reset_email_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Send_password_reset_email_v1_user_send_password_reset_email_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/{url_prefix_secret}/urge-reset-password": {
      "post": {
        "summary": "Send Email To Urge Password Reset",
        "description": "Urge the user to reset their password",
        "operationId": "reset_password",
        "parameters": [
          {
            "name": "url_prefix_secret",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Secret prefix for the URL",
              "title": "Url Prefix Secret"
            },
            "description": "Secret prefix for the URL"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Send_email_to_urge_password_reset__url_prefix_secret__urge_reset_password_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/edit": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Edit User",
        "description": "Edit user information",
        "operationId": "Edit_user_v1_user_edit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_user_v1_user_edit_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/delete": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete User",
        "description": "Delete user from the platform.",
        "operationId": "Delete_user_v1_user_delete_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/create-user": {
      "post": {
        "summary": "Create User",
        "operationId": "create_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_user_c185a1ff66f4a1feaeb19931d4be4175_create_user_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/update-mfa-factors": {
      "post": {
        "summary": "Update Mfa Factors",
        "operationId": "update_mfa_factors",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/prepare-internal-verification": {
      "post": {
        "summary": "Prepare Internal Verification",
        "operationId": "prepare_internal_verification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_prepare_internal_verification_v1_user_prepare_internal_verification_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/post-registration-user-setup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "External Provider User Setup",
        "description": "Should be called to setup a user following their registration via an external-provider",
        "operationId": "External_Provider_user_setup_v1_user_post_registration_user_setup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_External_Provider_user_setup_v1_user_post_registration_user_setup_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/pre-sign-up": {
      "post": {
        "summary": "Set Account Registration Metadata",
        "description": "Called before a user signs up with email and password",
        "operationId": "set_account_registration_metadata",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_set_account_registration_metadata_v1_user_pre_sign_up_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/opt-out-of-updates": {
      "post": {
        "summary": "Opt Out Of Updates",
        "operationId": "opt_out_of_updates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_opt_out_of_updates_v1_user_opt_out_of_updates_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/has-alpha-access": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Can Access Alpha",
        "description": "Returns information about whether a user has access to our alpha.",
        "operationId": "Can_access_alpha_v1_user_has_alpha_access_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHasAlphaAccessResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/terms-agreed/add": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Update Terms That User Has Agreed To",
        "description": "Updates the terms that the user has agreed to",
        "operationId": "Update_terms_that_user_has_agreed_to_v1_user_terms_agreed_add_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_terms_that_user_has_agreed_to_v1_user_terms_agreed_add_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/terms_agreed/add": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Update Terms That User Has Agreed To",
        "description": "Updates the terms that the user has agreed to",
        "operationId": "update_user_terms_deprecated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_user_terms_deprecated"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-skip-spec": true
      }
    },
    "/v1/user/send-email-change-verification": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Send Verification For Email Change",
        "description": "Send verification for email change",
        "operationId": "Send_verification_for_email_change_v1_user_send_email_change_verification_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Send_verification_for_email_change_v1_user_send_email_change_verification_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/onboarding-survey-complete": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Onboarding Survey Complete",
        "description": "Called after the user completes the onboarding survey",
        "operationId": "Onboarding_survey_complete_v1_user_onboarding_survey_complete_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Onboarding_survey_complete_v1_user_onboarding_survey_complete_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/update-public-user-name": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Update User'S Public Name",
        "description": "Update the user's public name",
        "operationId": "Update_user_s_public_name_v1_user_update_public_user_name_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_user_s_public_name_v1_user_update_public_user_name_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/onboarding-checklist/initiate": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create And Store User'S Onboarding Checklist",
        "description": "Called if the user is new and hasn't been assigned a checklist",
        "operationId": "Create_and_store_user_s_onboarding_checklist_v1_user_onboarding_checklist_initiate_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/generate-name": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Generate Name",
        "description": "Generates a random name",
        "operationId": "Generate_name_v1_user_generate_name_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateNameResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/onboarding-checklist/mark-complete": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Update User'S Onboarding Checklist Status To Complete",
        "description": "Mark checklist as complete for users not in the experiment test group so users outside the test group don't see the checklist",
        "operationId": "Update_user_s_onboarding_checklist_status_to_complete_v1_user_onboarding_checklist_mark_complete_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/onboarding-checklist/update": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Update User'S Onboarding Checklist Progress",
        "description": "Called after the user completes an action on the checklist",
        "operationId": "Update_user_s_onboarding_checklist_progress_v1_user_onboarding_checklist_update_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_user_s_onboarding_checklist_progress_v1_user_onboarding_checklist_update_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/onboarding-checklist/hide": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Hide The Onboarding Checklist",
        "description": "Called after the user clicks 'do not show again'",
        "operationId": "Hide_the_onboarding_checklist_v1_user_onboarding_checklist_hide_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/accept-bipa-terms": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Accept Bipa Terms",
        "description": "Accept BIPA terms",
        "operationId": "Accept_BIPA_terms_v1_user_accept_bipa_terms_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/rand": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get The User'S Ltv Estimate",
        "description": "Returns the LTV estimate",
        "operationId": "Get_the_user_s_LTV_estimate_v1_user_rand_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRandomnessResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/conversion": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Send Conversion Event",
        "description": "Send conversion event",
        "operationId": "Send_conversion_event_v1_user_conversion_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Send_conversion_event_v1_user_conversion_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/backup-code": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create Backup Codes",
        "description": "Create backup codes for the user",
        "operationId": "Create_backup_codes_v1_user_backup_code_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupCodeResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/backup-code/{code}/remove-mfa": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Remove Mfa",
        "description": "Remove MFA from a user.",
        "operationId": "Remove_MFA_v1_user_backup_code__code__remove_mfa_post",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/api-keys": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get Api Key Information",
        "description": "Gets information about the users API keys",
        "operationId": "Get_API_key_information_v1_user_api_keys_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAPIKeysResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/create-api-key": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create Api Key",
        "description": "Creates an API key",
        "operationId": "Create_API_key_v1_user_create_api_key_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_API_key_v1_user_create_api_key_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAPIKeyResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/delete-api-key": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete Xi-Api-Key",
        "description": "Deletes a xi-api-key",
        "operationId": "Delete_xi_api_key_v1_user_delete_api_key_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_xi_api_key_v1_user_delete_api_key_delete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/edit-api-key": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Edit Xi-Api-Key",
        "description": "Edits a xi-api-key",
        "operationId": "Edit_xi_api_key_v1_user_edit_api_key_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_xi_api_key_v1_user_edit_api_key_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/sign-in-requests/verify": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Verify Sign-In Request",
        "description": "Verifies a sign in request send by a member of the support team. This is an action initiated by the customer.",
        "operationId": "Verify_sign_in_request_v1_user_sign_in_requests_verify_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Verify_sign_in_request_v1_user_sign_in_requests_verify_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/sync-admin-roles-to-isolated": {
      "post": {
        "summary": "Sync Admin Roles To Isolated",
        "operationId": "sync_admin_roles_to_isolated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_sync_admin_roles_to_isolated_c185a1ff66f4a1feaeb19931d4be4175_sync_admin_roles_to_isolated_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/signup-hcaptcha-risk-score": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Insert Hcaptcha Risk Score To Bigquery",
        "description": "Insert email and hcaptcha risk score to BigQuery hcaptcha_risk_score table",
        "operationId": "Insert_hcaptcha_risk_score_to_BigQuery_c185a1ff66f4a1feaeb19931d4be4175_signup_hcaptcha_risk_score_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Insert_hcaptcha_risk_score_to_BigQuery_c185a1ff66f4a1feaeb19931d4be4175_signup_hcaptcha_risk_score_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices/collections": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get User Voice Collections",
        "description": "Returns all the voice collections for the user.",
        "operationId": "Get_user_voice_collections_v1_voices_collections_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserVoiceCollectionsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Create Or Update User Voice Collection",
        "description": "Creates a new voice collection or updates an existing one.",
        "operationId": "Create_or_update_user_voice_collection_v1_voices_collections_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_or_update_user_voice_collection_v1_voices_collections_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoiceCollectionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices/collections/{collection_id}": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get User Voice Collection",
        "description": "Returns a voice collection for the user.",
        "operationId": "Get_user_voice_collection_v1_voices_collections__collection_id__get",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Collection ID.",
              "title": "Collection Id"
            },
            "description": "Collection ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserVoiceCollectionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "voices"
        ],
        "summary": "Delete User Voice Collection",
        "description": "Deletes a voice collection.",
        "operationId": "Delete_user_voice_collection_v1_voices_collections__collection_id__delete",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Collection ID.",
              "title": "Collection Id"
            },
            "description": "Collection ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteUserVoiceCollectionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices/collections/{collection_id}/voice/{voice_id}": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Add Voice To User Voice Collection",
        "description": "Adds a voice to a voice collection.",
        "operationId": "Add_voice_to_user_voice_collection_v1_voices_collections__collection_id__voice__voice_id__post",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Collection ID.",
              "title": "Collection Id"
            },
            "description": "Collection ID."
          },
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceToUserVoiceCollectionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "voices"
        ],
        "summary": "Remove Voice From User Voice Collection",
        "description": "Removes a voice from a voice collection.",
        "operationId": "Remove_voice_from_user_voice_collection_v1_voices_collections__collection_id__voice__voice_id__delete",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Collection ID.",
              "title": "Collection Id"
            },
            "description": "Collection ID."
          },
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveVoiceFromUserVoiceCollectionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "List Voices",
        "description": "Returns a list of all available voices for a user.",
        "operationId": "List_voices_v1_voices_get",
        "parameters": [
          {
            "name": "show_legacy",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If set to true, legacy premade voices will be included in responses from /v1/voices",
              "examples": [true],
              "default": false,
              "title": "Show Legacy"
            },
            "description": "If set to true, legacy premade voices will be included in responses from /v1/voices"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_all"
      }
    },
    "/v2/voices": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get Voices V2",
        "description": "Gets a list of all available voices for a user with search, filtering and pagination.",
        "operationId": "Get_voices_v2_v2_voices_get",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The next page token to use for pagination. Returned from the previous request.",
              "examples": [
                "0"
              ],
              "title": "Next Page Token"
            },
            "description": "The next page token to use for pagination. Returned from the previous request."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "How many voices to return at maximum. Can not exceed 100, defaults to 10. Page 0 may include more voices due to default voices being included.",
              "default": 10,
              "title": "Page Size"
            },
            "description": "How many voices to return at maximum. Can not exceed 100, defaults to 10. Page 0 may include more voices due to default voices being included."
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term to filter voices by. Searches in name, description, labels, category.",
              "title": "Search"
            },
            "description": "Search term to filter voices by. Searches in name, description, labels, category."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Which field to sort by, one of 'created_at_unix' or 'name'. 'created_at_unix' may not be available for older voices.",
              "examples": [
                "created_at_unix"
              ],
              "title": "Sort"
            },
            "description": "Which field to sort by, one of 'created_at_unix' or 'name'. 'created_at_unix' may not be available for older voices."
          },
          {
            "name": "sort_direction",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Which direction to sort the voices in. 'asc' or 'desc'.",
              "examples": [
                "desc"
              ],
              "title": "Sort Direction"
            },
            "description": "Which direction to sort the voices in. 'asc' or 'desc'."
          },
          {
            "name": "voice_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Type of the voice to filter by. One of 'personal', 'community', 'default', 'workspace', 'non-default'. 'non-default' is equal to all but 'default'.",
              "title": "Voice Type"
            },
            "description": "Type of the voice to filter by. One of 'personal', 'community', 'default', 'workspace', 'non-default'. 'non-default' is equal to all but 'default'."
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Category of the voice to filter by. One of 'premade', 'cloned', 'generated', 'professional'",
              "title": "Category"
            },
            "description": "Category of the voice to filter by. One of 'premade', 'cloned', 'generated', 'professional'"
          },
          {
            "name": "fine_tuning_state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "State of the voice's fine tuning to filter by. Applicable only to professional voices clones. One of 'draft', 'not_verified', 'not_started', 'queued', 'fine_tuning', 'fine_tuned', 'failed', 'delayed'",
              "title": "Fine Tuning State"
            },
            "description": "State of the voice's fine tuning to filter by. Applicable only to professional voices clones. One of 'draft', 'not_verified', 'not_started', 'queued', 'fine_tuning', 'fine_tuned', 'failed', 'delayed'"
          },
          {
            "name": "collection_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Collection ID to filter voices by.",
              "title": "Collection Id"
            },
            "description": "Collection ID to filter voices by."
          },
          {
            "name": "include_total_count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include the total count of voices found in the response. Incurs a performance cost.",
              "examples": [true],
              "default": true,
              "title": "Include Total Count"
            },
            "description": "Whether to include the total count of voices found in the response. Incurs a performance cost."
          },
          {
            "name": "voice_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Voice IDs to lookup by. Maximum 100 voice IDs.",
              "title": "Voice Ids"
            },
            "description": "Voice IDs to lookup by. Maximum 100 voice IDs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoicesV2ResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "search"
      }
    },
    "/v2/voices/create-preview-from-samples": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Generate A Voice Preview From From Uploaded Samples",
        "description": "Generate a custom voice based on voice samples. This method returns a voice preview. The preview has a cloned_voice_preview_id and a sample of the created voice as base64 encoded mp3 audio. If you like the a voice preview and want to create the voice call /v2/voices/create-voice-from-preview with the cloned_voice_preview_id to create the voice.",
        "operationId": "Generate_a_voice_preview_from_from_uploaded_samples_v2_voices_create_preview_from_samples_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_a_voice_preview_from_from_uploaded_samples_v2_voices_create_preview_from_samples_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoicePreviewResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/voices/create-preview-for-edit/{voice_id}": {
      "post": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Create A Voice Preview For Editing",
        "description": "Create a voice preview for editing. To edit voice use /v1/voices/voice_id/edit and DELETE /v1/voices/voice_id/samples/sample_id endpoints",
        "operationId": "Create_a_voice_preview_for_editing_v2_voices_create_preview_for_edit__voice_id__post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_a_voice_preview_for_editing_v2_voices_create_preview_for_edit__voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoicePreviewResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/voices/create-voice-from-preview": {
      "post": {
        "tags": [
          "text-to-voice"
        ],
        "summary": "Create A New Voice From Voice Preview",
        "description": "Create a voice from previously generated voice preview. This endpoint should be called after you fetched a generated_voice_id using /v1/text-to-voice/create-previews.",
        "operationId": "Create_a_new_voice_from_voice_preview_v2_voices_create_voice_from_preview_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_a_new_voice_from_voice_preview_v2_voices_create_voice_from_preview_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices/settings/default": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get Default Voice Settings.",
        "description": "Gets the default settings for voices. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "operationId": "Get_default_voice_settings__v1_voices_settings_default_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSettingsResponseModel"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "settings"
        ],
        "x-fern-sdk-method-name": "get_default"
      }
    },
    "/v1/voices/{voice_id}/settings": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get Voice Settings",
        "description": "Returns the settings for a specific voice. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "operationId": "Get_voice_settings_v1_voices__voice_id__settings_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "settings"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/{voice_id}": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get Voice",
        "description": "Returns metadata about a specific voice.",
        "operationId": "Get_voice_v1_voices__voice_id__get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "with_settings",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "This parameter is now deprecated. It is ignored and will be removed in a future version.",
              "deprecated": true,
              "default": true,
              "title": "With Settings"
            },
            "description": "This parameter is now deprecated. It is ignored and will be removed in a future version.",
            "deprecated": true
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "voices"
        ],
        "summary": "Delete Voice",
        "description": "Deletes a voice by its ID.",
        "operationId": "Delete_voice_v1_voices__voice_id__delete",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/voices/{voice_id}/settings/edit": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Edit Voice Settings",
        "description": "Edit your settings for a specific voice. \"similarity_boost\" corresponds to \"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "operationId": "Edit_voice_settings_v1_voices__voice_id__settings_edit_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel",
                "description": "The settings for a specific voice."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditVoiceSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "settings"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/voices/add": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Add Voice",
        "description": "Add a new voice to your collection of voices in VoiceLab.",
        "operationId": "Add_voice_v1_voices_add_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_voice_v1_voices_add_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceIVCResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "ivc"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/voices/{voice_id}/edit": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Edit Voice",
        "description": "Edit a voice created by you.",
        "operationId": "Edit_voice_v1_voices__voice_id__edit_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_voice_v1_voices__voice_id__edit_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/voices/{voice_id}/run-pvc-training": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Runs Pvc Training For The Given Voice",
        "description": "Runs PVC training for the given voice",
        "operationId": "Runs_PVC_training_for_the_given_voice_v1_voices__voice_id__run_pvc_training_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Runs_PVC_training_for_the_given_voice_v1_voices__voice_id__run_pvc_training_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/manual-verification": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Manual Verification Request",
        "description": "Sends request for manual verification",
        "operationId": "Manual_verification_request_v1_voices__voice_id__manual_verification_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Manual_verification_request_v1_voices__voice_id__manual_verification_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/verification": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Trigger Verification For A Voice",
        "description": "Triggers voice captcha for given voice.",
        "operationId": "Trigger_verification_for_a_voice_v1_voices__voice_id__verification_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/share-library": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Voice Library Share",
        "description": "Enable sharing in voice library",
        "operationId": "Voice_Library_Share_v1_voices__voice_id__share_library_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Voice_Library_Share_v1_voices__voice_id__share_library_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{voice_id}/share": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Share Voice",
        "description": "Shares a voice via url.",
        "operationId": "Share_voice_v1_voices__voice_id__share_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Share_voice_v1_voices__voice_id__share_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices/{public_user_id}/{voice_id}": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get Sharing Voice",
        "description": "Returns metadata about a sharing voice.",
        "operationId": "Get_sharing_voice_v1_voices__public_user_id___voice_id__get",
        "parameters": [
          {
            "name": "public_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Public user ID used to publicly identify ElevenLabs users.",
              "examples": [
                "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca"
              ],
              "title": "Public User Id"
            },
            "description": "Public user ID used to publicly identify ElevenLabs users."
          },
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LibraryVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices/add/{public_user_id}/{voice_id}": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Add Shared Voice",
        "description": "Add a shared voice to your collection of voices.",
        "operationId": "Add_shared_voice_v1_voices_add__public_user_id___voice_id__post",
        "parameters": [
          {
            "name": "public_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Public user ID used to publicly identify ElevenLabs users.",
              "examples": [
                "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca"
              ],
              "title": "Public User Id"
            },
            "description": "Public user ID used to publicly identify ElevenLabs users."
          },
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "share"
      }
    },
    "/v1/voices/{voice_id}/share/stats": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Voice Sharing Stats",
        "description": "Returns the stats for the voice that is being shared with other users.",
        "operationId": "Voice_sharing_stats_v1_voices__voice_id__share_stats_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "range",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Range of the sharing stats.",
              "embed": true,
              "default": "30d",
              "title": "Range"
            },
            "description": "Range of the sharing stats."
          },
          {
            "name": "reader_app",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to show stats for the Reader App.",
              "embed": true,
              "default": false,
              "title": "Reader App"
            },
            "description": "Whether to show stats for the Reader App."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSharingStatsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/disable-ref-voices-if-notice-period-expired": {
      "post": {
        "summary": "Disable Ref Voices If Notice Period Expired",
        "operationId": "disable_ref_voices_if_notice_period_expired",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_disable_ref_voices_if_notice_period_expired_c185a1ff66f4a1feaeb19931d4be4175_disable_ref_voices_if_notice_period_expired_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/podcast": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Add Podcast",
        "description": "Make podcast from scratch",
        "operationId": "add_podcast",
        "parameters": [
          {
            "name": "max_tokens",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Max number of tokens",
              "default": 8000,
              "title": "Max Tokens"
            },
            "description": "Max number of tokens"
          },
          {
            "name": "mock",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Mock podcast generation",
              "title": "Mock"
            },
            "description": "Mock podcast generation"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_podcast_v1_projects_podcast_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/podcasts": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Create Podcast",
        "description": "Create and auto-convert a podcast project. Currently, the LLM cost is covered by us but you will still be charged for the audio generation. In the future, you will be charged for both the LLM and audio generation costs.",
        "operationId": "create_podcast",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_podcast_v1_studio_podcasts_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PodcastProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "studio",
        "x-fern-sdk-method-name": "create_podcast"
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/projects-creation-queue/tick": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create Projects Endpoint",
        "operationId": "create_projects_endpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_projects_endpoint_c185a1ff66f4a1feaeb19931d4be4175_projects_creation_queue_tick_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/projects-creation-queue/restart-idle": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Restart Killed Project Creations Endpoint",
        "operationId": "restart_killed_project_creations_endpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_restart_killed_project_creations_endpoint_c185a1ff66f4a1feaeb19931d4be4175_projects_creation_queue_restart_idle_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/projects-creation-queue/create-project/{project_id}": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create Project Endpoint",
        "operationId": "create_project_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_project_endpoint_c185a1ff66f4a1feaeb19931d4be4175_projects_creation_queue_create_project__project_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/exports": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create Project Export Endpoint",
        "description": "Create an export",
        "operationId": "create_project_export_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_project_export_endpoint_v1_projects__project_id__exports_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectExportResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Project Exports Endpoint",
        "description": "Create an export",
        "operationId": "get_project_exports_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectExportsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/exports/{export_id}": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Project Export With Metadata Endpoint",
        "description": "Get an export with metadata",
        "operationId": "get_project_export_with_metadata_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "export_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Export Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectExportResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/exports/{export_id}/signed-url": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Generate Project Export Signed Url Endpoint",
        "description": "Get project export signed url",
        "operationId": "generate_project_export_signed_url_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "export_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Export Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectExportLinkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/exports/{export_id}/reader-redirect-info": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Generate Project Export Reader Redirect Info Endpoint",
        "description": "Get project export reader redirect info",
        "operationId": "generate_project_export_reader_redirect_info_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "export_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Export Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectExportReadPublishRedirectInfoResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/exports/{export_id}/move-to-queue": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Move Project Export To Queue Endpoint",
        "description": "[local env only] Move an export to queue",
        "operationId": "move_project_export_to_queue_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "export_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Export Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveProjectExportToQueueResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/reset-projects": {
      "post": {
        "summary": "Reset Projects",
        "description": "This function will be called on an interval by a cloud function. Only 1 function can be running at a time due to GlobalLock.",
        "operationId": "reset_projects",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_projects_c185a1ff66f4a1feaeb19931d4be4175_reset_projects_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/convert-projects": {
      "post": {
        "summary": "Convert Projects Endpoint",
        "operationId": "convert_projects_endpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_convert_projects_endpoint_c185a1ff66f4a1feaeb19931d4be4175_convert_projects_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/check-speech-quality": {
      "post": {
        "summary": "Quality Check Endpoint",
        "operationId": "quality_check_endpoint",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_quality_check_endpoint_c185a1ff66f4a1feaeb19931d4be4175_check_speech_quality_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/fake-endpoint-ws-types": {
      "get": {
        "summary": "Fake Endpoint Ws Types",
        "operationId": "fake_endpoint_ws_types",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ProjectWsUpdateChapterMessage"
                    },
                    {
                      "$ref": "#/components/schemas/ProjectWsHeartbeatMessage"
                    },
                    {
                      "$ref": "#/components/schemas/ProjectWsAuthMessage"
                    },
                    {
                      "$ref": "#/components/schemas/ProjectWsResponseBlockConversionUpdateMessage"
                    },
                    {
                      "$ref": "#/components/schemas/ProjectWsResponseValidationErrorMessage"
                    },
                    {
                      "$ref": "#/components/schemas/ProjectWsResponseUpdateProjectConversionMessage"
                    },
                    {
                      "$ref": "#/components/schemas/ProjectWsResponseUpdateProjectExportMessage"
                    },
                    {
                      "$ref": "#/components/schemas/ProjectWsResponseUpdateChapterConversionMessage"
                    },
                    {
                      "$ref": "#/components/schemas/ProjectWsResponseUpdateChapterContentMessage"
                    },
                    {
                      "$ref": "#/components/schemas/ProjectWsResponseAckMessage"
                    },
                    {
                      "$ref": "#/components/schemas/ProjectWsResponseCriticalErrorMessage"
                    }
                  ],
                  "title": "Response Fake Endpoint Ws Types V1 Projects Fake Endpoint Ws Types Get"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/export-as-read": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Exports Project To Reader App",
        "description": "Exports project to Reader App",
        "operationId": "projects_export_as_read",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Exports_project_to_Reader_App_v1_projects__project_id__export_as_read_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/reader-read": {
      "delete": {
        "tags": [
          "projects"
        ],
        "summary": "Deletes Exported Read For Project",
        "description": "Deletes exported read for project",
        "operationId": "projects_delete_reader_read",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Exported Read For Project",
        "description": "If the project has previously been exported to the reader app, this endpoint will return the read metadata.",
        "operationId": "projects_get_reader_read",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ReadMetadataResponseModel"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Exported Read For Project V1 Projects  Project Id  Reader Read Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "projects"
        ],
        "summary": "Update Exported Read For Project",
        "description": "Update exported read for project",
        "operationId": "projects_update_reader_read",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_exported_read_for_project_v1_projects__project_id__reader_read_put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/reader-read-published-changes-status": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Check If The Project Has Changed Since Last Synced To The Read",
        "description": "If the project has previously been exported to the reader app, this endpoint will return whether the content in the project has changed since the last time the read was updated from the project.",
        "operationId": "projects_reader_read_published_status",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectsReadPublishedStatusResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/speech-to-speech": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Speech To Speech (Full)",
        "description": "Create speech by combining the content and emotion of the uploaded audio with a voice of your choice and returns an audio stream.",
        "operationId": "element_speech_to_speech_v2_full",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Speech__Full__v2_projects__project_id__chapters__chapter_id__blocks__block_id__speech_to_speech_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/speech-to-speech/stream": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Speech To Speech (Streaming)",
        "description": "Create speech by combining the content and emotion of the uploaded audio with a voice of your choice and returns an audio stream.",
        "operationId": "element_speech_to_speech_v2_stream",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Speech__Streaming__v2_projects__project_id__chapters__chapter_id__blocks__block_id__speech_to_speech_stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/speech-to-speech/regenerate-fragment": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Element Text To Speech Stream",
        "description": "Converts an element in project into an audio stream.",
        "operationId": "element_speech_to_speech_regenerate_part_endpoint_with_alignments",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_Element_text_to_speech_stream_v2_projects__project_id__chapters__chapter_id__blocks__block_id__speech_to_speech_regenerate_fragment_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/speech-to-speech/unit-cost": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Speech To Speech (Unit Cost)",
        "description": "Get the unit cost for speech to speech.",
        "operationId": "get_speech_to_speech_unit_cost",
        "parameters": [
          {
            "name": "voice_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "duration_seconds",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "description": "Duration of input audio in seconds",
              "title": "Duration Seconds"
            },
            "description": "Duration of input audio in seconds"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeechToSpeechUnitCostResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/sound-effect/generate": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Studio Generate Sound Effect For Block",
        "description": "Turn text into sound effects",
        "operationId": "generate_sound_effect",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Studio_Generate_Sound_Effect_for_Block_v1_studio_projects__project_id__chapters__chapter_id__sound_effect_generate_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockSoundEffectGenerationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/sound-effect/{block_sound_effect_id}/details": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "Studio Get Sound Effect Details",
        "description": "Get details of a sound effect",
        "operationId": "get_sound_effect_details",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_sound_effect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block sound effect ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Sound Effect Id"
            },
            "description": "Block sound effect ID to be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockSoundEffectDetailsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/sound-effect/{block_sound_effect_id}/edit": {
      "put": {
        "tags": [
          "studio"
        ],
        "summary": "Studio Edit Block Sound Effect",
        "description": "Turn text into sound effects",
        "operationId": "edit_block_sound_effect",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_sound_effect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block sound effect ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Sound Effect Id"
            },
            "description": "Block sound effect ID to be used."
          },
          {
            "name": "selected_history_item_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Selected history item ID to be used.",
              "title": "Selected History Item Id"
            },
            "description": "Selected history item ID to be used."
          },
          {
            "name": "volume_gain_db",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Volume gain in decibels.",
              "title": "Volume Gain Db"
            },
            "description": "Volume gain in decibels."
          },
          {
            "name": "blocking",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Whether the sound effect block the speech audio while playing. (default: false)",
              "title": "Blocking"
            },
            "description": "Whether the sound effect block the speech audio while playing. (default: false)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/sound-effect/{block_sound_effect_id}/play": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "Studio Play Sound Effect",
        "description": "Play a sound effect from a block",
        "operationId": "play_sound_effect",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_sound_effect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block sound effect ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Sound Effect Id"
            },
            "description": "Block sound effect ID to be used."
          },
          {
            "name": "history_item_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "History item ID to be used. If not provided, the selected history item will be used.",
              "title": "History Item Id"
            },
            "description": "History item ID to be used. If not provided, the selected history item will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "404": {
            "content": {
              "application/json": {

              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/sound-effects": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "Studio Chapter Sound Effects",
        "description": "Turn text into sound effects",
        "operationId": "get_chapter_block_sound_effects",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChapterSoundEffectsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/sound-effect/{block_sound_effect_id}/offset": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "Studio Get Sound Effect Offset",
        "description": "Get offset of a sound effect",
        "operationId": "get_sound_effect_offset",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_sound_effect_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block sound effect ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Sound Effect Id"
            },
            "description": "Block sound effect ID to be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockSoundEffectOffsetResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/nodes/{node_id}/audio": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Element Text To Speech",
        "description": "Converts an element in project into audio.",
        "operationId": "element_text_to_speech_full",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          },
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Node ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Node Id"
            },
            "description": "Node ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Element_text_to_speech_v1_projects__project_id__chapters__chapter_id__blocks__block_id__nodes__node_id__audio_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/videos": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Add Video",
        "description": "Add a video to a chapter.",
        "operationId": "add_video",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_video_v1_studio_projects__project_id__chapters__chapter_id__videos_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectVideoResponseModel"
                }
              },
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/videos/{video_id}/audio": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Stream Video Audio",
        "description": "Stream video audio.",
        "operationId": "stream_video_audio",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Id"
            }
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Video Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              },
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/videos/{video_id}/pending-blocks": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Video Pending Blocks",
        "description": "Get video pending blocks.",
        "operationId": "get_video_pending_blocks",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Id"
            }
          },
          {
            "name": "video_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Video Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlocksResponseModel"
                }
              },
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/imports": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Import Speech History Item To Studio",
        "description": "Import speech history item to Studio project.",
        "operationId": "import_speech_history_item",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Import_Speech_History_Item_to_Studio_v1_studio_projects__project_id__chapters__chapter_id__imports_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportSpeechHistoryItemBlocksResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/sfx-imports": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Import Sound Generation History Item To Studio",
        "description": "Import sound generation history item to Studio project.",
        "operationId": "import_sound_history_item",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Import_Sound_generation_History_Item_to_Studio_v1_studio_projects__project_id__chapters__chapter_id__sfx_imports_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportSoundEffectHistoryItemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/music-imports": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Import Music Item To Studio",
        "description": "Import music item to Studio project.",
        "operationId": "import_music_item",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Import_Music_Item_to_Studio_v1_studio_projects__project_id__chapters__chapter_id__music_imports_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportSoundEffectHistoryItemResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/nodes/{node_id}/voice-isolation": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Element Text To Speech",
        "description": "Converts an element in project into audio.",
        "operationId": "element_text_to_speech_full_voice_isolation",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          },
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Node ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Node Id"
            },
            "description": "Node ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Element_text_to_speech_v1_projects__project_id__chapters__chapter_id__blocks__block_id__nodes__node_id__voice_isolation_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/nodes/{node_id}/voice-changer": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Element Text To Speech",
        "description": "Converts an element in project into audio.",
        "operationId": "element_text_to_speech_full_voice_changer",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          },
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Node ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Node Id"
            },
            "description": "Node ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Element_text_to_speech_v1_projects__project_id__chapters__chapter_id__blocks__block_id__nodes__node_id__voice_changer_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/video/describe-frames": {
      "post": {
        "tags": [
          "video-to-music"
        ],
        "summary": "Describe Video Frames",
        "description": "Analyze video frames and generate a description for music generation",
        "operationId": "Describe_Video_Frames_v1_video_describe_frames_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoFramesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoDescriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/external_audio": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Add External Audio",
        "description": "Add a external audio to a chapter.",
        "operationId": "add_external_audio",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_external_audio_v1_studio_projects__project_id__chapters__chapter_id__external_audio_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectExternalAudioResponseModel"
                }
              },
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/external_audios/{external_audio_id}/audio": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Stream External Audio",
        "description": "Stream external audio.",
        "operationId": "stream_external_audio",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Chapter Id"
            }
          },
          {
            "name": "external_audio_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "External Audio Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              },
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "List Studio Projects",
        "description": "Returns a list of your Studio projects with metadata.",
        "operationId": "get_projects",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "list"
      },
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Create Studio Project",
        "description": "Creates a new Studio project, it can be either initialized as blank, from a document or from a URL.",
        "operationId": "add_project",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_Studio_project_v1_studio_projects_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/projects/search": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Projects Page",
        "description": "Returns a page of your projects and their metadata.",
        "operationId": "get_projects_search",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by projects name and url.",
              "title": "Search"
            },
            "description": "Search by projects name and url."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many AudioNative projects to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many AudioNative projects to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "filter_by_creator",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "personal",
                "others",
                "all"
              ],
              "type": "string",
              "description": "Filters who created the resources being listed, whether it was the user running the request or someone else that shared the resource with them.",
              "examples": [
                "all"
              ],
              "default": "all",
              "title": "Filter By Creator"
            },
            "description": "Filters who created the resources being listed, whether it was the user running the request or someone else that shared the resource with them."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectsPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Update Studio Project",
        "description": "Updates the specified Studio project by setting the values of the parameters passed.",
        "operationId": "edit_project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_Studio_project_v1_studio_projects__project_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "Get Studio Project",
        "description": "Returns information about a specific Studio project. This endpoint returns more detailed information about a project than `GET /v1/studio`.",
        "operationId": "get_project_by_id",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "studio"
        ],
        "summary": "Delete Studio Project",
        "description": "Deletes a Studio project.",
        "operationId": "delete_project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/studio/projects/{project_id}/content": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Update Studio Project Content",
        "description": "Updates Studio project content.",
        "operationId": "edit_project_content",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "content"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/projects/{project_id}": {
      "patch": {
        "tags": [
          "projects"
        ],
        "summary": "Edit Project Details",
        "description": "Edits project details. Differs from the POST method in that it allows partial updates.",
        "operationId": "edit_project_details",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_project_details_v1_projects__project_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/update-cover-image": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Update Project Cover Image",
        "description": "Uploads a new cover image for a project.",
        "operationId": "update_project_image",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_project_cover_image_v1_projects__project_id__update_cover_image_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/duplicate": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Duplicate Studio Project",
        "description": "Duplicates existing Studio project",
        "operationId": "duplicate_project_route",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DuplicateProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "duplicate"
      }
    },
    "/v1/projects/{project_id}/conversion-status": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Project Conversion Status By Id",
        "description": "Returns information about a specific project's conversion status.",
        "operationId": "get_project_conversion_info_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectConversionStatusResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/convert": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Convert Studio Project",
        "description": "Starts conversion of a Studio project and all of its chapters.",
        "operationId": "convert_project_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConvertProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/studio/projects/{project_id}/snapshots": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "List Studio Project Snapshots",
        "description": "Retrieves a list of snapshots for a Studio project.",
        "operationId": "get_project_snapshots",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/projects/{project_id}/snapshots-internal": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Project Snapshots",
        "description": "Gets the snapshots of a project.",
        "operationId": "get_project_snapshots_internal",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/snapshots_internal": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Project Snapshots",
        "description": "Gets the snapshots of a project.",
        "operationId": "get_project_snapshots_internal_deprecated",
        "deprecated": true,
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-skip-spec": true
      }
    },
    "/v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "Get Project Snapshot",
        "description": "Returns the project snapshot.",
        "operationId": "get_project_snapshot_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project snapshot.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            },
            "description": "The ID of the Studio project snapshot."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSnapshotExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/stream": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Stream Studio Project Audio",
        "description": "Stream the audio from a Studio project snapshot.",
        "operationId": "stream_project_snapshot_audio_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project snapshot.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            },
            "description": "The ID of the Studio project snapshot."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/archive": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Stream Archive With Studio Project Audio",
        "description": "Returns a compressed archive of the Studio project's audio.",
        "operationId": "stream_project_snapshot_archive_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project snapshot.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            },
            "description": "The ID of the Studio project snapshot."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Streaming archive data",
            "content": {
              "application/x-zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "stream_archive"
      }
    },
    "/v1/studio/projects/{project_id}/chapters": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "List Chapters",
        "description": "Returns a list of a Studio project's chapters.",
        "operationId": "get_chapters",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChaptersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters"
        ],
        "x-fern-sdk-method-name": "list"
      },
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Create Chapter",
        "description": "Creates a new chapter either as blank or from a URL.",
        "operationId": "add_chapter",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_chapter_v1_studio_projects__project_id__chapters_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "Get Chapter",
        "description": "Returns information about a specific chapter.",
        "operationId": "get_chapter_by_id_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterWithContentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Update Chapter",
        "description": "Updates a chapter.",
        "operationId": "edit_chapter",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "delete": {
        "tags": [
          "studio"
        ],
        "summary": "Delete Chapter",
        "description": "Deletes a chapter.",
        "operationId": "delete_chapter_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/import": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Update Chapter",
        "description": "Updates a chapter.",
        "operationId": "upsert_chapter",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__import_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters"
        ],
        "x-fern-sdk-method-name": "import"
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/convert": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Convert Chapter",
        "description": "Starts conversion of a specific chapter.",
        "operationId": "convert_chapter_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConvertChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters"
        ],
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/extended": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Extended Chapter",
        "description": "Get extended information about a specific chapter",
        "operationId": "get_chapter_extended_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/blocks": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Chapter Blocks",
        "description": "Get chapter blocks with their content.",
        "operationId": "get_chapter_blocks_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChapterBlocksResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Block",
        "description": "Get block with its history.",
        "operationId": "get_block_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChapterBlockResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/snapshots/{block_snapshot_id}/restore": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Restore Block From Snapshot",
        "description": "Restore block from snapshot.",
        "operationId": "restore_block_snapshot_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          },
          {
            "name": "block_snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Snapshot Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestoreBlockSnapshotResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/snapshots/{block_snapshot_id}/stream": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Restore Block From Snapshot",
        "description": "Restore block from snapshot.",
        "operationId": "stream_block_snapshot_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          },
          {
            "name": "block_snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Snapshot Id"
            },
            "description": "Block ID to be used."
          },
          {
            "name": "convert_to_mpeg",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to convert the audio to mpeg format.",
              "default": false,
              "title": "Convert To Mpeg"
            },
            "description": "Whether to convert the audio to mpeg format."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/snapshots/{block_snapshot_id}": {
      "delete": {
        "tags": [
          "projects"
        ],
        "summary": "Remove Block Snapshot",
        "description": "Remove block snapshot. Must be different to the current block snapshot.",
        "operationId": "remove_block_snapshot_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          },
          {
            "name": "block_snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Snapshot Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/text-to-speech/stream": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Element Text To Speech Stream (Legacy)",
        "description": "Converts an element in project into an audio stream.",
        "operationId": "element_text_to_speech_stream",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Element_text_to_speech_stream__Legacy__v1_projects__project_id__chapters__chapter_id__blocks__block_id__text_to_speech_stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/text-to-speech/stream": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Element Text To Speech Stream",
        "description": "Converts an element in project into an audio stream.",
        "operationId": "element_text_to_speech_stream_with_audio_alignments",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Element_text_to_speech_stream_v2_projects__project_id__chapters__chapter_id__blocks__block_id__text_to_speech_stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/text-to-speech": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Element Text To Speech (Legacy)",
        "description": "Converts an element in project into audio.",
        "operationId": "element_text_to_speech_full_legacy",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Element_text_to_speech__Legacy__v1_projects__project_id__chapters__chapter_id__blocks__block_id__text_to_speech_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/text-to-speech": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Element Text To Speech",
        "description": "Converts an element in project into audio.",
        "operationId": "element_text_to_speech_full_with_audio_alignments",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Element_text_to_speech_v2_projects__project_id__chapters__chapter_id__blocks__block_id__text_to_speech_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/quality-observation": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Create Quality Observation",
        "description": "Create a quality observation related to the block's audio for that sake of improving our quality check.",
        "operationId": "create_block_audio_quality_observation",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          },
          {
            "name": "observation",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "good",
                "bad"
              ],
              "type": "string",
              "description": "'bad' or 'good'",
              "title": "Observation"
            },
            "description": "'bad' or 'good'"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Quality Observation",
        "description": "Gets the corresponding quality observation for a given block",
        "operationId": "get_block_audio_quality_observation",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQualityObservationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "List Chapter Snapshots",
        "description": "Gets information about all the snapshots of a chapter. Each snapshot can be downloaded as audio. Whenever a chapter is converted a snapshot will automatically be created.",
        "operationId": "get_chapter_snapshots",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}": {
      "get": {
        "tags": [
          "studio"
        ],
        "summary": "Get Chapter Snapshot",
        "description": "Returns the chapter snapshot.",
        "operationId": "get_chapter_snapshot_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "chapter_snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter snapshot.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Snapshot Id"
            },
            "description": "The ID of the chapter snapshot."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterSnapshotExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}/stream": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Stream Chapter Audio",
        "description": "Stream the audio from a chapter snapshot. Use `GET /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots` to return the snapshots of a chapter.",
        "operationId": "stream_chapter_snapshot_audio",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "chapter_snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter snapshot.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Snapshot Id"
            },
            "description": "The ID of the chapter snapshot."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "chapters",
          "snapshots"
        ],
        "x-fern-sdk-method-name": "stream",
        "x-fern-streaming": true
      }
    },
    "/v1/studio/projects/{project_id}/pronunciation-dictionaries": {
      "post": {
        "tags": [
          "studio"
        ],
        "summary": "Create Pronunciation Dictionaries",
        "description": "Create a set of pronunciation dictionaries acting on a project. This will automatically mark text within this project as requiring reconverting where the new dictionary would apply or the old one no longer does.",
        "operationId": "update_pronunciation_dictionaries",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePronunciationDictionaryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "studio",
          "projects",
          "pronunciation_dictionaries"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/projects/{project_id}/download-html": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Downloads The Project Content As An Html File",
        "description": "Downloads the project content as an html file",
        "operationId": "projects_download_as_html",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/regenerate-fragment": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Element Text To Speech Stream (Legacy)",
        "description": "Converts an element in project into an audio stream.",
        "operationId": "element_text_to_speech_regenerate_part_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Element_text_to_speech_stream__Legacy__v1_projects__project_id__chapters__chapter_id__blocks__block_id__regenerate_fragment_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/regenerate-fragment": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Element Text To Speech Stream",
        "description": "Converts an element in project into an audio stream.",
        "operationId": "element_text_to_speech_regenerate_part_endpoint_with_alignments",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Element_text_to_speech_stream_v2_projects__project_id__chapters__chapter_id__blocks__block_id__regenerate_fragment_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/play-fragment": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Element Text To Speech Stream (Legacy)",
        "description": "Converts an element in project into an audio stream.",
        "operationId": "element_text_to_speech_play_part_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Element_text_to_speech_stream__Legacy__v1_projects__project_id__chapters__chapter_id__blocks__block_id__play_fragment_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v2/projects/{project_id}/chapters/{chapter_id}/blocks/{block_id}/play-fragment": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Element Text To Speech Stream",
        "description": "Converts an element in project into an audio stream.",
        "operationId": "element_text_to_speech_play_part_endpoint_with_alignments",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "chapter_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chapter.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            },
            "description": "The ID of the chapter."
          },
          {
            "name": "block_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Block ID to be used.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Block Id"
            },
            "description": "Block ID to be used."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Element_text_to_speech_stream_v2_projects__project_id__chapters__chapter_id__blocks__block_id__play_fragment_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/used-voices": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Used Voices",
        "description": "Returns a list of all used voices in a project.",
        "operationId": "get_used_voices_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "skip_empty_nodes",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Skip Empty Nodes"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsedVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/voices/{voice_id}/edit/affected-nodes": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Nodes Affected By Voice Edit",
        "description": "Returns all tts nodes that will be affected by an edit to a voice.",
        "operationId": "get_nodes_affected_by_voice_edit",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The voice_id of the voice you want to use or change.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "The voice_id of the voice you want to use or change."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceEditAffectedNodesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/voices/{voice_id}/edit/affected_nodes": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Nodes Affected By Voice Edit",
        "description": "Returns all tts nodes that will be affected by an edit to a voice.",
        "operationId": "get_nodes_affected_by_voice_edit_deprecated",
        "deprecated": true,
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The voice_id of the voice you want to use or change.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "The voice_id of the voice you want to use or change."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceEditAffectedNodesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-skip-spec": true
      }
    },
    "/v1/projects/{project_id}/voices/{voice_id}/edit": {
      "post": {
        "tags": [
          "projects"
        ],
        "summary": "Edit Voice Used In Project",
        "description": "Edit the voice for all tts nodes in the project using that voice",
        "operationId": "edit_voice_used_in_project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The voice_id of the voice you want to use or change.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "The voice_id of the voice you want to use or change."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_voice_used_in_project_v1_projects__project_id__voices__voice_id__edit_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsedVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/projects/{project_id}/voices/{voice_id}": {
      "get": {
        "tags": [
          "projects"
        ],
        "summary": "Get Voice Used In Project",
        "description": "Get the voice with project scoped settings",
        "operationId": "get_voice_used_in_project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The voice_id of the voice you want to use or change.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "The voice_id of the voice you want to use or change."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectVoiceSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/detect-languages": {
      "post": {
        "summary": "Detect Text Languages",
        "description": "Gets a list of languages used in a text",
        "operationId": "detect_languages",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Detect_text_languages_v1_detect_languages_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetectLanguagesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/feedback": {
      "post": {
        "summary": "Submit User Feedback",
        "description": "Analyzes, categorizes and submits user feedback",
        "operationId": "feedback",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Submit_user_feedback_v1_feedback_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFeedbackResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/resource/{dubbing_id}": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Get The Dubbing Resource For An Id.",
        "description": "Given a dubbing ID generated from the '/v1/dubbing' endpoint with studio enabled, returns the dubbing resource.",
        "operationId": "Get_the_dubbing_resource_for_an_ID__v1_dubbing_resource__dubbing_id__get",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingResource"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/language": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Add A Language To The Resource",
        "description": "Adds the given ElevenLab Turbo V2/V2.5 language code to the resource. Does not automatically generate transcripts/translations/audio.",
        "operationId": "Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageAddedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource",
          "language"
        ],
        "x-fern-sdk-method-name": "add"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/speaker/{speaker_id}/segment": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Create A Segment For The Speaker",
        "description": "Creates a new segment in dubbing resource with a start and end time for the speaker in every available language. Does not automatically generate transcripts/translations/audio.",
        "operationId": "Create_a_segment_for_the_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__segment_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "speaker_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the speaker.",
              "title": "Speaker Id"
            },
            "description": "ID of the speaker."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentCreatePayload",
                "description": "The text, and start and end times of a segment."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource",
          "speaker",
          "segment"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/segment/{segment_id}/{language}": {
      "patch": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Modify A Single Segment",
        "description": "Modifies a single segment with new text and/or start/end times. Will update the values for only a specific language of a segment. Does not automatically regenerate the dub.",
        "operationId": "Modify_a_single_segment_v1_dubbing_resource__dubbing_id__segment__segment_id___language__patch",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "segment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the segment",
              "title": "Segment Id"
            },
            "description": "ID of the segment"
          },
          {
            "name": "language",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the language.",
              "title": "Language"
            },
            "description": "ID of the language."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SegmentUpdatePayload",
                "description": "The text, and start and end times of a segment."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/segment/{segment_id}": {
      "delete": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Deletes A Single Segment",
        "description": "Deletes a single segment from the dubbing.",
        "operationId": "Deletes_a_single_segment_v1_dubbing_resource__dubbing_id__segment__segment_id__delete",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "segment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the segment",
              "title": "Segment Id"
            },
            "description": "ID of the segment"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentDeleteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/transcribe": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Transcribes Segments",
        "description": "Regenerate the transcriptions for the specified segments. Does not automatically regenerate translations or dubs.",
        "operationId": "Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentTranscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource"
        ],
        "x-fern-sdk-method-name": "transcribe"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/translate": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Translates All Or Some Segments And Languages",
        "description": "Regenerate the translations for either the entire resource or the specified segments/languages. Will automatically transcribe missing transcriptions. Will not automatically regenerate the dubs.",
        "operationId": "Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentTranslationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource"
        ],
        "x-fern-sdk-method-name": "translate"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/dub": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Dubs All Or Some Segments And Languages",
        "description": "Regenerate the dubs for either the entire resource or the specified segments/languages. Will automatically transcribe and translate any missing transcriptions and translations.",
        "operationId": "Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentDubResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource"
        ],
        "x-fern-sdk-method-name": "dub"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/speaker/{speaker_id}": {
      "patch": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Update Metadata For A Speaker",
        "description": "Amend the metadata associated with a speaker, such as their voice. Both voice cloning and using voices from the ElevenLabs library are supported.",
        "operationId": "Update_metadata_for_a_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__patch",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "speaker_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the speaker.",
              "title": "Speaker Id"
            },
            "description": "ID of the speaker."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_metadata_for_a_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeakerUpdatedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource",
          "speaker"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/speaker/{speaker_id}/similar-voices": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Search The Elevenlabs Library For Voices Similar To A Speaker.",
        "description": "Fetch the top 10 similar voices to a speaker, including the voice IDs, names, descriptions, and, where possible, a sample audio recording.",
        "operationId": "Search_the_ElevenLabs_library_for_voices_similar_to_a_speaker__v1_dubbing_resource__dubbing_id__speaker__speaker_id__similar_voices_get",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "speaker_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the speaker.",
              "title": "Speaker Id"
            },
            "description": "ID of the speaker."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimilarVoicesForSpeakerResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource",
          "speaker"
        ],
        "x-fern-sdk-method-name": "find_similar_voices"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/render/{language}": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "resource",
          "segment",
          "enterprise"
        ],
        "summary": "Render Audio Or Video For The Given Language",
        "description": "Regenerate the output media for a language using the latest Studio state. Please ensure all segments have been dubbed before rendering, otherwise they will be omitted. Renders are generated asynchronously, and to check the status of all renders please use the 'Get Dubbing Resource' endpoint.",
        "operationId": "Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "language",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Render this language",
              "title": "Language"
            },
            "description": "Render this language"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingRenderResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "resource"
        ],
        "x-fern-sdk-method-name": "render"
      }
    },
    "/v1/dubbing/metadata": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Get Dubbing Metadata For Url.",
        "description": "Get dubbing metadata for url.",
        "operationId": "Get_dubbing_metadata_for_url__v1_dubbing_metadata_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Get_dubbing_metadata_for_url__v1_dubbing_metadata_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingInputResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing-internal": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Dub A Video Or An Audio File",
        "description": "Dubs provided audio or video file into given language. For the external facing API, look at /v1/dubbing.",
        "operationId": "Dub_a_video_or_an_audio_file_v1_dubbing_internal_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dub_a_video_or_an_audio_file_v1_dubbing_internal_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoDubbingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "List Dubs",
        "description": "List the dubs you have access to.",
        "operationId": "List_dubs_v1_dubbing_get",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "How many dubs to return at maximum. Can not exceed 200, defaults to 100.",
              "default": 100,
              "title": "Page Size"
            },
            "description": "How many dubs to return at maximum. Can not exceed 200, defaults to 100."
          },
          {
            "name": "dubbing_status",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "dubbing",
                "dubbed",
                "failed"
              ],
              "type": "string",
              "description": "What state the dub is currently in.",
              "embed": true,
              "title": "Dubbing Status"
            },
            "description": "What state the dub is currently in."
          },
          {
            "name": "filter_by_creator",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "personal",
                "others",
                "all"
              ],
              "type": "string",
              "description": "Filters who created the resources being listed, whether it was the user running the request or someone else that shared the resource with them.",
              "examples": [
                "all"
              ],
              "default": "all",
              "title": "Filter By Creator"
            },
            "description": "Filters who created the resources being listed, whether it was the user running the request or someone else that shared the resource with them."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingMetadataPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "list"
      },
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Dub A Video Or An Audio File",
        "description": "Dubs a provided audio or video file into given language.",
        "operationId": "Dub_a_video_or_an_audio_file_v1_dubbing_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dub_a_video_or_an_audio_file_v1_dubbing_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoDubbingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/dubbing/{dubbing_id}/duplicate": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Duplicate Dub",
        "description": "Duplicates an existing dub.",
        "operationId": "Duplicate_dub_v1_dubbing__dubbing_id__duplicate_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingMetadataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/update/{job_id}": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing"
        ],
        "summary": "Update Dubbing",
        "operationId": "update_dubbing_v1_dubbing__dubbing_id__update__job_id__post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing job.",
              "title": "Job Id"
            },
            "description": "ID of the dubbing job."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_dubbing_v1_dubbing__dubbing_id__update__job_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/update-child/{child_dubbing_id}/{job_id}": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing"
        ],
        "summary": "Update Dubbing For Nested",
        "operationId": "update_dubbing_for_nested_v1_dubbing__dubbing_id__update_child__child_dubbing_id___job_id__post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "child_dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Child Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing job.",
              "title": "Job Id"
            },
            "description": "ID of the dubbing job."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_dubbing_for_nested_v1_dubbing__dubbing_id__update_child__child_dubbing_id___job_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/export-render/update": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing"
        ],
        "summary": "Update Dubbing Render",
        "operationId": "update_dubbing_render_v1_dubbing__dubbing_id__export_render_update_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_dubbing_render_v1_dubbing__dubbing_id__export_render_update_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/fix-killed-dubbings": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing"
        ],
        "summary": "Fix Killed Dubbings",
        "description": "This function will be called on an interval by a cloud function. Only 1 function can be running at a time due to GlobalLock.",
        "operationId": "fix_killed_dubbings_c185a1ff66f4a1feaeb19931d4be4175_fix_killed_dubbings_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_fix_killed_dubbings_c185a1ff66f4a1feaeb19931d4be4175_fix_killed_dubbings_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/internal-metadata": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Get All Dubbing Projects Metadata",
        "description": "Returns metadata about all dubbing projects a user has access to, paginated.",
        "operationId": "Get_all_dubbing_projects_metadata_v1_dubbing_internal_metadata_get",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "How many dubs to return at maximum. Can not exceed 200, defaults to 100.",
              "default": 100,
              "title": "Page Size"
            },
            "description": "How many dubs to return at maximum. Can not exceed 200, defaults to 100."
          },
          {
            "name": "dubbing_status",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "dubbing",
                "dubbed",
                "failed"
              ],
              "type": "string",
              "description": "What state the dub is currently in.",
              "embed": true,
              "title": "Dubbing Status"
            },
            "description": "What state the dub is currently in."
          },
          {
            "name": "filter_by_creator",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "personal",
                "others",
                "all"
              ],
              "type": "string",
              "description": "Filters who created the resources being listed, whether it was the user running the request or someone else that shared the resource with them.",
              "examples": [
                "all"
              ],
              "default": "all",
              "title": "Filter By Creator"
            },
            "description": "Filters who created the resources being listed, whether it was the user running the request or someone else that shared the resource with them."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingInternalMetadataPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/internal-metadata": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Get Dubbing Project Metadata, For Internal Use Only",
        "description": "Returns the complete data for a dubbing project",
        "operationId": "Get_dubbing_project_metadata__for_internal_use_only_v1_dubbing__dubbing_id__internal_metadata_get",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingInternalMetadataResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Get Dubbing",
        "description": "Returns metadata about a dubbing project, including whether it's still in progress or not",
        "operationId": "Get_dubbing_v1_dubbing__dubbing_id__get",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingMetadataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Delete Dubbing",
        "description": "Deletes a dubbing project.",
        "operationId": "Delete_dubbing_v1_dubbing__dubbing_id__delete",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDubbingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/dubbing/{parent_dubbing_id}/{child_dubbing_id}": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Get Dubbing Project Metadata",
        "description": "Returns metadata about a dubbing project, including whether it's still in progress or not",
        "operationId": "Get_dubbing_project_metadata_v1_dubbing__parent_dubbing_id___child_dubbing_id__get",
        "parameters": [
          {
            "name": "parent_dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Parent Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "child_dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Child Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingMetadataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/audio/{language_code}": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Get Dubbed File",
        "description": "Returns dub as a streamed MP3 or MP4 file. If this dub has been edited using Dubbing Studio you need to use the resource render endpoint as this endpoint only returns the original automatic dub result.",
        "operationId": "Get_dubbed_file_v1_dubbing__dubbing_id__audio__language_code__get",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "language_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the language.",
              "title": "Language Code"
            },
            "description": "ID of the language."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "The dubbed audio or video file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "video/mp4": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "example": {
                  "error": "permission_denied",
                  "message": "User does not have required permissions"
                }
              }
            }
          },
          "404": {
            "description": "Dubbing not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "dubbing_not_found",
                  "message": "There is no dubbing for language {language_code}."
                }
              }
            }
          },
          "425": {
            "description": "Dubbing not ready",
            "content": {
              "application/json": {
                "example": {
                  "error": "dubbing_not_dubbed",
                  "message": "Dubbing has not finished yet."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "audio"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/dubbing/{dubbing_id}/transcript/{language_code}": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Get Dubbed Transcript",
        "description": "Returns transcript for the dub as an SRT or WEBVTT file.",
        "operationId": "Get_dubbed_transcript_v1_dubbing__dubbing_id__transcript__language_code__get",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "language_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the language.",
              "title": "Language Code"
            },
            "description": "ID of the language."
          },
          {
            "name": "format_type",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "srt",
                "webvtt"
              ],
              "type": "string",
              "description": "Format to use for the subtitle file, either 'srt' or 'webvtt'",
              "embed": true,
              "default": "srt",
              "title": "Format Type"
            },
            "description": "Format to use for the subtitle file, either 'srt' or 'webvtt'"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "example": "1\n00:00:01,000 --\u003E 00:00:04,000\nHello, this is the first subtitle line\n\n2\n00:00:05,000 --\u003E 00:00:07,000\nAnd here's the second subtitle line"
              }
            }
          },
          "403": {
            "description": "Anonymous users cannot use this function",
            "content": {
              "application/json": {
                "example": {
                  "error": "anonymous_not_allowed",
                  "message": "Anonymous users cannot use this function"
                }
              }
            }
          },
          "404": {
            "description": "Dubbing or transcript not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "transcript_not_found",
                  "message": "No transcript was found for the dub."
                }
              }
            }
          },
          "425": {
            "description": "Dubbing not ready",
            "content": {
              "application/json": {
                "example": {
                  "error": "dubbing_not_dubbed",
                  "message": "Dubbing has not finished yet."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "dubbing",
          "transcript"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/dubbing/{dubbing_id}/editor/{version_id}": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Returns Dubbing Editor Metadata.",
        "description": "Returns dubbing editor metadata.",
        "operationId": "Returns_dubbing_editor_metadata__v1_dubbing__dubbing_id__editor__version_id__get",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing version. 'latest' for the latest version.",
              "title": "Version Id"
            },
            "description": "ID of the dubbing version. 'latest' for the latest version."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{parent_dubbing_id}/{child_dubbing_id}/editor/{version_id}": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Returns Dubbing Editor Metadata.",
        "description": "Returns dubbing editor metadata.",
        "operationId": "Returns_dubbing_editor_metadata__v1_dubbing__parent_dubbing_id___child_dubbing_id__editor__version_id__get",
        "parameters": [
          {
            "name": "parent_dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Parent Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "child_dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Child Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing version. 'latest' for the latest version.",
              "title": "Version Id"
            },
            "description": "ID of the dubbing version. 'latest' for the latest version."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/editor": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Updates Latest Version Of Editor Data.",
        "description": "Updates latest version of editor data for the given dubbing project.",
        "operationId": "Updates_latest_version_of_editor_data__v1_dubbing__dubbing_id__editor_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Editor Data",
                "title": "Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/translate": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Translates Text.",
        "description": "Translates provided text in source language to the target language. Tries to preserve the length for dubbing.\n    Note: the translation is not deterministic!",
        "operationId": "Translates_text__v1_dubbing__dubbing_id__translate_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Translates_text__v1_dubbing__dubbing_id__translate_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingTranslateResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/transcribe": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Transcribes Audio.",
        "description": "Transcribes the provided audio with the given language code.\n    Note: the transcription is not deterministic!",
        "operationId": "Transcribes_audio__v1_dubbing__dubbing_id__transcribe_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Transcribes_audio__v1_dubbing__dubbing_id__transcribe_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingTranscribeResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/voices/{voice_id}/similar": {
      "get": {
        "tags": [
          "dubbing",
          "dubbing",
          "voices"
        ],
        "summary": "Get Similar Voices",
        "description": "Gets a list of similar voices given a voice ID.",
        "operationId": "Get_similar_voices_v1_dubbing__dubbing_id__voices__voice_id__similar_get",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingGetSimilarVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/create-voice": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Creates Voice From The Provided Samples And Returns Voice Uid.",
        "description": "Creates a new voice uid that can be used for dubbing, based on the provided input samples.\n    The process is deterministic - same samples will result in the same underlying embedding, but this function does not do caching.",
        "operationId": "Creates_voice_from_the_provided_samples_and_returns_voice_uid__v1_dubbing__dubbing_id__create_voice_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Creates_voice_from_the_provided_samples_and_returns_voice_uid__v1_dubbing__dubbing_id__create_voice_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingCreateVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/dub-using-tts-and-sts": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Dub Using Text To Speech And Speech To Speech",
        "description": "Peforms dubbing and passes the resulting audio to speech-to-speech",
        "operationId": "Dub_using_Text_to_Speech_and_Speech_To_Speech_v1_dubbing__dubbing_id__dub_using_tts_and_sts_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dub_using_Text_to_Speech_and_Speech_To_Speech_v1_dubbing__dubbing_id__dub_using_tts_and_sts_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicMediaReferenceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/dub": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Dubs Provided Text With Provided Voice And Settings.",
        "description": "Performs actual dubbing, based on the input settings, and returns the audio uid.",
        "operationId": "Dubs_provided_text_with_provided_voice_and_settings__v1_dubbing__dubbing_id__dub_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dubs_provided_text_with_provided_voice_and_settings__v1_dubbing__dubbing_id__dub_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicMediaReferenceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/sfx": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Generate Sfx",
        "description": "Creates a SFX media clip for dubbing from a text prompt",
        "operationId": "Generate_SFX_v1_dubbing__dubbing_id__sfx_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_SFX_v1_dubbing__dubbing_id__sfx_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicMediaReferenceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/import-audio": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Import Audio",
        "description": "Import an audio file into a dubbing studio editor",
        "operationId": "Import_Audio_v1_dubbing__dubbing_id__import_audio_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Import_Audio_v1_dubbing__dubbing_id__import_audio_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicMediaReferenceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/import-audio-speaker-stem": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Import Audio",
        "description": "Import an audio file that contains speech and should be transcribed/translated into a dubbing studio editor",
        "operationId": "Import_Audio_v1_dubbing__dubbing_id__import_audio_speaker_stem_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Import_Audio_v1_dubbing__dubbing_id__import_audio_speaker_stem_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoDubbingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/dub-using-sts": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Dub A Clip Using Speech To Speech",
        "description": "Use speech-to-speech to dub a clip",
        "operationId": "Dub_a_clip_using_Speech_To_Speech_v1_dubbing__dubbing_id__dub_using_sts_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dub_a_clip_using_Speech_To_Speech_v1_dubbing__dubbing_id__dub_using_sts_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicMediaReferenceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/editor/new-version": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Creates A New Version Of The Dubbing Editor State.",
        "description": "Creates a new version of the dubbing editor state.",
        "operationId": "Creates_a_new_version_of_the_dubbing_editor_state__v1_dubbing__dubbing_id__editor_new_version_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Editor Data",
                "title": "Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorSnapshotResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/editor/{version_id}/restore": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Restores The Dubbing Editor State To The Given Version.",
        "description": "Restores the dubbing editor state to the given version and creates new (latest) version out of it.",
        "operationId": "Restores_the_dubbing_editor_state_to_the_given_version__v1_dubbing__dubbing_id__editor__version_id__restore_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          },
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing version. 'latest' for the latest version.",
              "title": "Version Id"
            },
            "description": "ID of the dubbing version. 'latest' for the latest version."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorSnapshotResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/render": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Render A Video For A Dub",
        "description": "Render a video for a dub",
        "operationId": "Render_a_video_for_a_dub_v1_dubbing__dubbing_id__render_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Render_a_video_for_a_dub_v1_dubbing__dubbing_id__render_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingRenderResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/metadata": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Updates Metadata For Dubbing.",
        "description": "Updates metadata for dubbing (for example you can update dubbing project name via this).",
        "operationId": "Updates_metadata_for_dubbing__v1_dubbing__dubbing_id__metadata_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the dubbing project.",
              "title": "Dubbing Id"
            },
            "description": "ID of the dubbing project."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Updates_metadata_for_dubbing__v1_dubbing__dubbing_id__metadata_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/find-replacement-voices": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Find Replacement Voices",
        "description": "Take an embedding and search against the voice library for suitable replacement voices.",
        "operationId": "find_replacement_voices_v1_dubbing__dubbing_id__find_replacement_voices_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_find_replacement_voices_v1_dubbing__dubbing_id__find_replacement_voices_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingGetReplacementVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/dubbing/{dubbing_id}/get-voice-embedding": {
      "post": {
        "tags": [
          "dubbing",
          "dubbing",
          "dubbing"
        ],
        "summary": "Get Voice Embedding",
        "description": "Fetch an embedding for a library model.",
        "operationId": "get_voice_embedding_v1_dubbing__dubbing_id__get_voice_embedding_post",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dubbing Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_voice_embedding_v1_dubbing__dubbing_id__get_voice_embedding_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/octet-stream": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/report-usage": {
      "post": {
        "summary": "Report Usage To Payment Provider",
        "operationId": "report_usage_to_payment_provider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_report_usage_to_payment_provider_c185a1ff66f4a1feaeb19931d4be4175_report_usage_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/refresh-character-count": {
      "post": {
        "summary": "Refresh Character Count For Free Users",
        "description": "This function will be called on an interval by a cloud function.",
        "operationId": "refresh_character_count_for_free_users",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_refresh_character_count_for_free_users_c185a1ff66f4a1feaeb19931d4be4175_refresh_character_count_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/refresh-annual-character-count": {
      "post": {
        "summary": "Refresh Annual Character Count For Stripe Plans",
        "description": "This function will be called on an interval by a cloud function.\nThis function refreshes the character count for annual plans with monthly refresh period.\nThis is required as stripe does not have a way to give monthly character limits on an annual subscription plans.",
        "operationId": "refresh_annual_character_count_for_stripe_plans",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_refresh_annual_character_count_for_stripe_plans_c185a1ff66f4a1feaeb19931d4be4175_refresh_annual_character_count_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/snapshot-llm-prices": {
      "post": {
        "summary": "Snapshot Llm Prices",
        "description": "This function will be called on an interval by a cloud function. It writes all LLM prices to BigQuery.",
        "operationId": "snapshot_llm_prices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_snapshot_llm_prices_c185a1ff66f4a1feaeb19931d4be4175_snapshot_llm_prices_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/transfer-workspace-balances": {
      "post": {
        "summary": "Transfer Workspace Balances",
        "operationId": "transfer_workspace_balances",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_transfer_workspace_balances_c185a1ff66f4a1feaeb19931d4be4175_transfer_workspace_balances_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/payout-workspaces": {
      "post": {
        "summary": "Payout Workspaces",
        "operationId": "payout_workspaces",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_payout_workspaces_c185a1ff66f4a1feaeb19931d4be4175_payout_workspaces_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/stripe-webhook": {
      "post": {
        "summary": "Stripe Webhook",
        "operationId": "stripe_webhook",
        "parameters": [
          {
            "name": "stripe-signature",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Stripe-Signature"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/stripe-connect-webhook": {
      "post": {
        "summary": "Stripe Connect Webhook",
        "operationId": "stripe_connect_webhook",
        "parameters": [
          {
            "name": "stripe-signature",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Stripe-Signature"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/create-connect-account": {
      "post": {
        "summary": "Create Connect Account",
        "operationId": "create_connect_account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_connect_account_create_connect_account_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateConnectAccountResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/create-connect-account-management-link": {
      "post": {
        "summary": "Create Account Management Link",
        "operationId": "create_account_management_link",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_account_management_link_create_connect_account_management_link_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateConnectAccountManagementLinkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/create-checkout-session": {
      "post": {
        "summary": "Create Checkout Session Url",
        "description": "Creates a url linking a user to a checkout session for their payment provider",
        "operationId": "create_checkout_session_url",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_checkout_session_url_create_checkout_session_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/create-update-payment-methods-session": {
      "post": {
        "summary": "Create Update Payment Methods Session",
        "description": "Create an update payment methods session for a subscribed user with their payment processor, returning a link to the session that the user should be redirected to.",
        "operationId": "create_update_payment_methods_session",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/create-grant-acceptance-session": {
      "post": {
        "summary": "Create Grant Acceptance Session",
        "operationId": "create_grant_acceptance_session",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckoutSession"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/convert-paying-workspace-to-grant": {
      "post": {
        "summary": "Convert Paying To Grant",
        "operationId": "convert_paying_to_grant",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/set-post-grant-subscription": {
      "post": {
        "summary": "Set Post Grant Subscription",
        "operationId": "set_post_grant_subscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GrantEndPaidSubscription"
                  },
                  {
                    "$ref": "#/components/schemas/GrantEndCancellation"
                  }
                ],
                "title": "Grant End Subscription Settings",
                "discriminator": {
                  "propertyName": "kind",
                  "mapping": {
                    "paid_subscription": "#/components/schemas/GrantEndPaidSubscription",
                    "cancellation": "#/components/schemas/GrantEndCancellation"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/grant-end-subscription-settings": {
      "get": {
        "summary": "Get Grant End Subscription Settings",
        "operationId": "get_grant_end_subscription_settings",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GrantEndPaidSubscription"
                    },
                    {
                      "$ref": "#/components/schemas/GrantEndCancellation"
                    }
                  ],
                  "title": "Response Get Grant End Subscription Settings Grant End Subscription Settings Get",
                  "discriminator": {
                    "propertyName": "kind",
                    "mapping": {
                      "paid_subscription": "#/components/schemas/GrantEndPaidSubscription",
                      "cancellation": "#/components/schemas/GrantEndCancellation"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/change-subscription": {
      "post": {
        "summary": "Change Subscription",
        "operationId": "change_subscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_change_subscription_change_subscription_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/renew-subscription": {
      "post": {
        "summary": "Renew Subscription",
        "operationId": "renew_subscription",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cancel-subscription": {
      "post": {
        "summary": "Cancel Subscription",
        "operationId": "cancel_subscription",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cancel-downgrade": {
      "post": {
        "summary": "Cancel Downgrade",
        "operationId": "cancel_downgrade",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/apply-discount": {
      "post": {
        "summary": "Apply Discount",
        "description": "Apply a discount code to the current subscription. Overriding the current discount if any.\n\nOld discounts are stored in the workspace object, under the key \"subscription.past_discounts\" to be able\nto track when discounts have been applied.\n\nUpdating the workspace with the new discount object is done in the subscription change webhook.\n\nCurrently, we only support one discount at a time.",
        "operationId": "apply_discount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_apply_discount_apply_discount_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/create-portal-session": {
      "post": {
        "summary": "Create Portal Session",
        "operationId": "create_portal_session",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/validate-promocode": {
      "post": {
        "summary": "Validate Promocode",
        "operationId": "validate_promocode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_validate_promocode_validate_promocode_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/verify-card": {
      "post": {
        "summary": "Verify Card",
        "operationId": "verify_card",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyCardResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/gcp-marketplace-pubsub-webhook": {
      "post": {
        "summary": "Gcp Marketplace Pubsub Webhook",
        "operationId": "gcp_marketplace_pubsub_webhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_gcp_marketplace_pubsub_webhook_v1_gcp_marketplace_pubsub_webhook_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/send-subscription-expiry-notifications": {
      "post": {
        "summary": "Send Subscription Expiry Notifications For All",
        "description": "Send subscription expiry notifications to workspaces that are within their notification period.\n\nThis function will be called by a cloud function to notify workspaces about their subscription expiry.\nIt finds all workspaces that are:\n1. Within their notification period before subscription expiry\n2. Have notification settings configured\n\nFor each workspace, it sends emails to:\n- All workspace admins\n- Any internal emails specified in the subscription configuration",
        "operationId": "send_subscription_expiry_notifications_for_all",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_send_subscription_expiry_notifications_for_all_c185a1ff66f4a1feaeb19931d4be4175_send_subscription_expiry_notifications_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/zendesk-webhook": {
      "post": {
        "summary": "Zendesk Webhook",
        "operationId": "zendesk_webhook",
        "parameters": [
          {
            "name": "x-zendesk-webhook-signature",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Zendesk-Webhook-Signature"
            }
          },
          {
            "name": "x-zendesk-webhook-signature-timestamp",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Zendesk-Webhook-Signature-Timestamp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/google-ads-visit": {
      "post": {
        "summary": "Google Ads Visit",
        "operationId": "google_ads_visit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_google_ads_visit_v1_google_ads_visit_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/detect-ip-abuse": {
      "post": {
        "summary": "Detect Ip Abuse",
        "description": "This function will be called on an interval by a cloud function.\n\nIt goes over all tts requests and groups them by ip. It counts number of entirely free accounts in each IP.\n\nIf the number of entirely free accounts per given IP exceeds MAX_ACCOUNTS_PER_IP_ALLOWED then the ip is \"banned\".\n\n\"Ban\" effectively means that any free TTS call from this IP results in error saying that the user triggered abuse\ndetectors and need to purchase a paid plan to continue. Such ban is permanent. Anonymous calls from banned IP are\nstill allowed.",
        "operationId": "detect_ip_abuse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_detect_ip_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_ip_abuse_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/detect-dubbing-ip-abuse": {
      "post": {
        "summary": "Detect Dubbing Ip Abuse",
        "description": "Same as detect_abuse but for dubbing",
        "operationId": "detect_dubbing_ip_abuse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_detect_dubbing_ip_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_dubbing_ip_abuse_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/detect-sfx-ip-abuse": {
      "post": {
        "summary": "Detect Sfx Ip Abuse",
        "description": "Same as detect_abuse but for SFX",
        "operationId": "detect_sfx_ip_abuse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_detect_sfx_ip_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_sfx_ip_abuse_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/ip-usage-ban": {
      "post": {
        "summary": "Ip Usage Ban",
        "description": "This function will be called on an interval by a cloud function.",
        "operationId": "ip_usage_ban",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_ip_usage_ban_c185a1ff66f4a1feaeb19931d4be4175_ip_usage_ban_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/detect-email-abuse": {
      "post": {
        "summary": "Detect Email Abuse",
        "description": "This function will be called on an interval by a cloud function.\n\nIt goes over all tts requests and groups them by email domain. For each email domain, if the fraction of free text generated over all text generated (for the past X time) is over some threshold, and there are more than Y users created using this domain, we ban the domain.\n\n\"Ban\" effectively means that any free TTS call from this email domain results in error saying that the user triggered abuse\ndetectors and need to purchase a paid plan to continue. Such ban is permanent.",
        "operationId": "detect_email_abuse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_detect_email_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_email_abuse_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/models": {
      "get": {
        "tags": [
          "models"
        ],
        "summary": "Get Models",
        "description": "Gets a list of available models.",
        "operationId": "Get_Models_v1_models_get",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelResponseModel"
                  },
                  "title": "Response Get Models V1 Models Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "models",
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/audio-native/settings": {
      "get": {
        "tags": [
          "audio-native"
        ],
        "summary": "Audionative Config",
        "description": "Returns audio native config like url triggers and global settings.",
        "operationId": "get_audio_native_settings",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "audio-native"
        ],
        "summary": "Audionative Config Update",
        "description": "Updates audio native config like triggers, global and per trigger group settings etc.",
        "operationId": "update_audio_native",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_AudioNative_config_update_v1_audio_native_settings_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "audio-native"
        ],
        "summary": "Patches An Audionative Settings",
        "description": "Patches an AudioNative settings",
        "operationId": "patch_audio_native_settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Patches_an_AudioNative_settings_v1_audio_native_settings_patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/settings/triggers": {
      "post": {
        "tags": [
          "audio-native"
        ],
        "summary": "Create New Audionative Trigger",
        "description": "Create new AudioNative trigger",
        "operationId": "create_audio_native_trigger",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_new_AudioNative_trigger_v1_audio_native_settings_triggers_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeURLTriggerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/settings/triggers/{trigger_id}": {
      "patch": {
        "tags": [
          "audio-native"
        ],
        "summary": "Patches An Audionative Trigger Settings",
        "description": "Patches an AudioNative trigger settings",
        "operationId": "patch_audio_native_trigger",
        "parameters": [
          {
            "name": "trigger_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Trigger ID.",
              "title": "Trigger Id"
            },
            "description": "Trigger ID."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Patches_an_AudioNative_trigger_settings_v1_audio_native_settings_triggers__trigger_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeURLTriggerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "audio-native"
        ],
        "summary": "Deletes The Audionative Trigger",
        "description": "Deletes the AudioNative trigger",
        "operationId": "delete_audio_native_trigger",
        "parameters": [
          {
            "name": "trigger_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Trigger ID.",
              "title": "Trigger Id"
            },
            "description": "Trigger ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeURLTriggerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/get-embed-code": {
      "get": {
        "tags": [
          "audio-native"
        ],
        "summary": "Get Audionative Embed Code",
        "description": "Get the HTML snippet to embed the AudioNative player into a webpage.",
        "operationId": "get_embed_code",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeGetEmbedCodeResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{public_user_id}/{project_id}/settings": {
      "get": {
        "tags": [
          "audio-native"
        ],
        "summary": "Audionative Settings",
        "description": "Returns the settings for the audio player.",
        "operationId": "audio_native_settings",
        "parameters": [
          {
            "name": "public_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Public user ID used to publicly identify ElevenLabs users.",
              "examples": [
                "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca"
              ],
              "title": "Public User Id"
            },
            "description": "Public user ID used to publicly identify ElevenLabs users."
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{public_user_id}/{project_id}/metrics": {
      "post": {
        "tags": [
          "audio-native"
        ],
        "summary": "Audionative Metrics",
        "description": "Collects metrics from the audio player.",
        "operationId": "audio_native_metrics",
        "parameters": [
          {
            "name": "public_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Public user ID used to publicly identify ElevenLabs users.",
              "examples": [
                "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca"
              ],
              "title": "Public User Id"
            },
            "description": "Public user ID used to publicly identify ElevenLabs users."
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_AudioNative_metrics_v1_audio_native__public_user_id___project_id__metrics_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{public_user_id}/{project_id}/convert": {
      "post": {
        "tags": [
          "audio-native"
        ],
        "summary": "Starts Conversion For The Audionative Enabled Project.",
        "description": "Starts conversion for the AudioNative enabled project.",
        "operationId": "convert_audio_native_project",
        "parameters": [
          {
            "name": "public_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Public user ID used to publicly identify ElevenLabs users.",
              "examples": [
                "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca"
              ],
              "title": "Public User Id"
            },
            "description": "Public user ID used to publicly identify ElevenLabs users."
          },
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Starts_conversion_for_the_AudioNative_enabled_project__v1_audio_native__public_user_id___project_id__convert_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeConvertResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{public_user_id}/convert": {
      "post": {
        "tags": [
          "audio-native"
        ],
        "summary": "Converts Provided Url To Project.",
        "description": "Converts provided url to project and returns project id.",
        "operationId": "convert_url_to_project",
        "parameters": [
          {
            "name": "public_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Public user ID used to publicly identify ElevenLabs users.",
              "examples": [
                "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca"
              ],
              "title": "Public User Id"
            },
            "description": "Public user ID used to publicly identify ElevenLabs users."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Converts_provided_url_to_project__v1_audio_native__public_user_id__convert_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeConvertResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{project_id}/general-stats": {
      "get": {
        "tags": [
          "audio-native"
        ],
        "summary": "Audionative General Stats",
        "description": "Returns engagement, listens, views, unique listeners and played duration. Use project_ids query param for aggregated stats.",
        "operationId": "audio_native_general_stats",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "window",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Aggregate window. One of 1h, 3h, 12h, 1d, 7d, 30d.",
              "examples": [
                "1d"
              ],
              "default": "1d",
              "title": "Window"
            },
            "description": "Aggregate window. One of 1h, 3h, 12h, 1d, 7d, 30d."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Start time. One of 1d, 7d, 30d, 90d, 365d.",
              "examples": [
                "7d"
              ],
              "default": "7d",
              "title": "Start"
            },
            "description": "Start time. One of 1d, 7d, 30d, 90d, 365d."
          },
          {
            "name": "project_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of project IDs to aggregate. If provided, project_id path param is ignored.",
              "title": "Project Ids"
            },
            "description": "List of project IDs to aggregate. If provided, project_id path param is ignored."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeGeneralStatsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{project_id}/player-stats": {
      "get": {
        "tags": [
          "audio-native"
        ],
        "summary": "Audionative Player Stats",
        "description": "Returns player heat map and retention. Use project_ids query param for aggregated stats (without heatmap).",
        "operationId": "audio_native_player_stats",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "window",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Aggregate window. One of 1h, 3h, 12h, 1d, 7d, 30d.",
              "examples": [
                "1d"
              ],
              "default": "1d",
              "title": "Window"
            },
            "description": "Aggregate window. One of 1h, 3h, 12h, 1d, 7d, 30d."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Start time. One of 1d, 7d, 30d, 90d, 365d.",
              "examples": [
                "7d"
              ],
              "default": "7d",
              "title": "Start"
            },
            "description": "Start time. One of 1d, 7d, 30d, 90d, 365d."
          },
          {
            "name": "project_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of project IDs to aggregate. If provided, project_id path param is ignored and heatmap is not returned.",
              "title": "Project Ids"
            },
            "description": "List of project IDs to aggregate. If provided, project_id path param is ignored and heatmap is not returned."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativePlayerStatsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{project_id}/device-stats": {
      "get": {
        "tags": [
          "audio-native"
        ],
        "summary": "Audionative Device Stats",
        "description": "Returns device breakdown. Use project_ids query param for aggregated stats.",
        "operationId": "audio_native_device_stats",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "window",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Aggregate window. One of 1h, 3h, 12h, 1d, 7d, 30d.",
              "examples": [
                "1d"
              ],
              "default": "1d",
              "title": "Window"
            },
            "description": "Aggregate window. One of 1h, 3h, 12h, 1d, 7d, 30d."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Start time. One of 1d, 7d, 30d, 90d, 365d.",
              "examples": [
                "7d"
              ],
              "default": "7d",
              "title": "Start"
            },
            "description": "Start time. One of 1d, 7d, 30d, 90d, 365d."
          },
          {
            "name": "project_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of project IDs to aggregate. If provided, project_id path param is ignored.",
              "title": "Project Ids"
            },
            "description": "List of project IDs to aggregate. If provided, project_id path param is ignored."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeDeviceStatsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/top-projects": {
      "get": {
        "tags": [
          "audio-native"
        ],
        "summary": "Audionative Top Projects",
        "description": "Returns top 10 projects by metric for the current user.",
        "operationId": "audio_native_top_projects",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Start time. One of 1d, 7d, 30d, 90d, 365d.",
              "examples": [
                "7d"
              ],
              "default": "7d",
              "title": "Start"
            },
            "description": "Start time. One of 1d, 7d, 30d, 90d, 365d."
          },
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Metric to rank projects by.",
              "examples": [
                "loads",
                "listens",
                "unique_listeners",
                "playback_time"
              ],
              "default": "listens",
              "title": "Metric"
            },
            "description": "Metric to rank projects by."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response Audionative Top Projects V1 Audio Native Top Projects Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native": {
      "get": {
        "tags": [
          "audio-native"
        ],
        "summary": "Get Audio Native Projects.",
        "description": "Get a list of the Audio Native enabled projects.",
        "operationId": "get_audio_native_projects",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by projects name and url.",
              "title": "Search"
            },
            "description": "Search by projects name and url."
          },
          {
            "name": "filter_by_url_trigger_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by projects url trigger id.",
              "title": "Filter By Url Trigger Id"
            },
            "description": "Filter by projects url trigger id."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many AudioNative projects to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many AudioNative projects to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeProjectsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "audio-native"
        ],
        "summary": "Creates Audio Native Enabled Project.",
        "description": "Creates Audio Native enabled project, optionally starts conversion and returns project ID and embeddable HTML snippet.",
        "operationId": "create_audio_native_project",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Creates_Audio_Native_enabled_project__v1_audio_native_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeCreateProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "audio_native",
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/audio-native/{project_id}/publish/{snapshot_id}": {
      "post": {
        "tags": [
          "audio-native"
        ],
        "summary": "Audionative Publish",
        "description": "Publishes specific version of the audio for a project.",
        "operationId": "audio_native_publish",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "snapshot_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project snapshot.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Snapshot Id"
            },
            "description": "The ID of the Studio project snapshot."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{project_id}/settings": {
      "get": {
        "tags": [
          "audio-native"
        ],
        "summary": "Get Audio Native Project Settings",
        "description": "Get player settings for the specific project.",
        "operationId": "get_audio_native_project_settings_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAudioNativeProjectSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "audio_native",
        "x-fern-sdk-method-name": "get_settings"
      },
      "post": {
        "tags": [
          "audio-native"
        ],
        "summary": "Audionative Settings",
        "description": "Updates player settings for the specific project.",
        "operationId": "audio_native_project_settings",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_AudioNative_settings_v1_audio_native__project_id__settings_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{project_id}/get-embed-code": {
      "get": {
        "tags": [
          "audio-native"
        ],
        "summary": "Get Audionative Embed Code For A Project",
        "description": "Get the HTML snippet to embed the AudioNative player into a webpage. The embedded player will not convert content from the webpage but instead play the specified project",
        "operationId": "get_embed_code_project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeGetEmbedCodeResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/audio-native/{project_id}/content": {
      "post": {
        "tags": [
          "audio-native"
        ],
        "summary": "Update Audio-Native Project Content",
        "description": "Updates content for the specific AudioNative Project.",
        "operationId": "audio_native_project_update_content_endpoint",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the Studio project.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            },
            "description": "The ID of the Studio project."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeEditContentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "audio_native",
        "x-fern-sdk-method-name": "update"
      }
    },
    "/get-random-quote/{language}": {
      "get": {
        "summary": "Get Random Quote By Lang",
        "operationId": "get_random_quote_by_lang",
        "parameters": [
          {
            "name": "language",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Language",
              "description": "The language to return the quote in, supported languages are: ['en', 'de', 'pl', 'es', 'it', 'fr'', 'pt', 'hi']."
            },
            "description": "The language to return the quote in, supported languages are: ['en', 'de', 'pl', 'es', 'it', 'fr'', 'pt', 'hi']."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/reset-audio-documents": {
      "post": {
        "summary": "Reset Audio Documents",
        "description": "This function will be called on an interval by a cloud function. Only 1 function can be running at a time due to GlobalLock.",
        "operationId": "reset_audio_documents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_audio_documents_c185a1ff66f4a1feaeb19931d4be4175_reset_audio_documents_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/moderation/ai-speech-classification": {
      "post": {
        "tags": [
          "moderation"
        ],
        "summary": "Ai Speech Classification",
        "description": "Classify whether an audio file was synthesized using ElevenLabs.",
        "operationId": "AI_Speech_Classification_v1_moderation_ai_speech_classification_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_AI_Speech_Classification_v1_moderation_ai_speech_classification_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AISpeechClassifierResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shared-voices": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get Voices",
        "description": "Retrieves a list of shared voices.",
        "operationId": "Get_voices_v1_shared_voices_get",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "How many shared voices to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many shared voices to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "last_sort_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "[Deprecated] This Sort ID is returned from the previous fetch. Use this parameter to load more. In case this parameter is not provided voice items will be fetched starting from the first one according to sorting criteria",
              "title": "Last Sort Id"
            },
            "description": "[Deprecated] This Sort ID is returned from the previous fetch. Use this parameter to load more. In case this parameter is not provided voice items will be fetched starting from the first one according to sorting criteria"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Voice category used for filtering",
              "examples": [
                "professional"
              ],
              "enum": [
                "professional",
                "famous",
                "high_quality"
              ],
              "title": "Category"
            },
            "description": "Voice category used for filtering"
          },
          {
            "name": "gender",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Gender used for filtering",
              "examples": [
                "male"
              ],
              "title": "Gender"
            },
            "description": "Gender used for filtering"
          },
          {
            "name": "age",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Age used for filtering",
              "examples": [
                "young"
              ],
              "title": "Age"
            },
            "description": "Age used for filtering"
          },
          {
            "name": "accent",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Accent used for filtering",
              "examples": [
                "american"
              ],
              "title": "Accent"
            },
            "description": "Accent used for filtering"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Language used for filtering",
              "examples": [
                "en"
              ],
              "title": "Language"
            },
            "description": "Language used for filtering"
          },
          {
            "name": "locale",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Locale used for filtering",
              "examples": [
                "en-US"
              ],
              "title": "Locale"
            },
            "description": "Locale used for filtering"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term used for filtering",
              "examples": [
                "tiktok"
              ],
              "title": "Search"
            },
            "description": "Search term used for filtering"
          },
          {
            "name": "use_cases",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Use-case used for filtering",
              "examples": [
                "audiobook"
              ],
              "title": "Use Cases"
            },
            "description": "Use-case used for filtering"
          },
          {
            "name": "descriptives",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term used for filtering",
              "examples": [
                "tiktok"
              ],
              "title": "Descriptives"
            },
            "description": "Search term used for filtering"
          },
          {
            "name": "featured",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Filter featured voices",
              "examples": [true],
              "default": false,
              "title": "Featured"
            },
            "description": "Filter featured voices"
          },
          {
            "name": "min_notice_period_days",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter voices with a minimum notice period of the given number of days.",
              "examples": [30],
              "title": "Min Notice Period Days"
            },
            "description": "Filter voices with a minimum notice period of the given number of days."
          },
          {
            "name": "include_custom_rates",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include/exclude voices with custom rates",
              "examples": [true],
              "title": "Include Custom Rates"
            },
            "description": "Include/exclude voices with custom rates"
          },
          {
            "name": "include_live_moderated",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include/exclude voices that are live moderated",
              "examples": [true],
              "title": "Include Live Moderated"
            },
            "description": "Include/exclude voices that are live moderated"
          },
          {
            "name": "reader_app_enabled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Filter voices that are enabled for the reader app",
              "examples": [true],
              "default": false,
              "title": "Reader App Enabled"
            },
            "description": "Filter voices that are enabled for the reader app"
          },
          {
            "name": "owner_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter voices by public owner ID",
              "examples": [
                "7c9fab611d9a0e1fb2e7448a0c294a8804efc2bcc324b0a366a5d5232b7d1532"
              ],
              "title": "Owner Id"
            },
            "description": "Filter voices by public owner ID"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort criteria",
              "examples": [
                "created_date"
              ],
              "title": "Sort"
            },
            "description": "Sort criteria"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLibraryVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_shared"
      }
    },
    "/v1/similar-voices": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Get Similar Library Voices",
        "description": "Returns a list of shared voices similar to the provided audio sample. If neither similarity_threshold nor top_k is provided, we will apply default values.",
        "operationId": "Get_similar_library_voices_v1_similar_voices_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Get_similar_library_voices_v1_similar_voices_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLibraryVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "find_similar_voices"
      }
    },
    "/v1/similar-voices-by-id": {
      "post": {
        "tags": [
          "voices"
        ],
        "summary": "Get Similar Library Voices For Provided Voice Id",
        "description": "Returns a list of shared voices similar to the provided audio sample. If neither similarity_threshold nor top_k is provided, we will apply default values.",
        "operationId": "Get_similar_library_voices_for_provided_voice_id_v1_similar_voices_by_id_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Get_similar_library_voices_for_provided_voice_id_v1_similar_voices_by_id_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLibraryVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/recompute-shared-voices": {
      "post": {
        "summary": "Recompute Shared Voices",
        "description": "This function will be called on an interval by a cloud function.",
        "operationId": "recompute_shared_voices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_recompute_shared_voices_c185a1ff66f4a1feaeb19931d4be4175_recompute_shared_voices_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/export-shared-voice-settings": {
      "post": {
        "summary": "Export Shared Voice Settings",
        "description": "This function will be called on an interval by a cloud function.",
        "operationId": "export_shared_voice_settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_export_shared_voice_settings_c185a1ff66f4a1feaeb19931d4be4175_export_shared_voice_settings_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shared-voices/collections": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get Voice Collections",
        "description": "Retrieves all voice collections without voice metadata",
        "operationId": "Get_voice_collections_v1_shared_voices_collections_get",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "language",
                    "use_case",
                    "special"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The type of the voice collection",
              "title": "Category"
            },
            "description": "The type of the voice collection"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The language code of the voice collection",
              "title": "Language"
            },
            "description": "The language code of the voice collection"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSharedVoiceCollectionsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/shared-voices/collections/{collection_id}": {
      "get": {
        "tags": [
          "voices"
        ],
        "summary": "Get Voice Collection",
        "description": "Retrieves a single voice collection with all voice metadata",
        "operationId": "Get_voice_collection_v1_shared_voices_collections__collection_id__get",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the voice collection",
              "title": "Collection Id"
            },
            "description": "The ID of the voice collection"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedVoiceCollectionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/detect-workspace-payout-anomalies": {
      "post": {
        "summary": "Detect Payout Anomalies",
        "description": "This function will be called on an interval by a cloud function.",
        "operationId": "detect_payout_anomalies",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_detect_payout_anomalies_c185a1ff66f4a1feaeb19931d4be4175_detect_workspace_payout_anomalies_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/usage/character-stats": {
      "get": {
        "tags": [
          "usage"
        ],
        "summary": "Get Characters Usage Metrics",
        "description": "Returns the usage metrics for the current user or the entire workspace they are part of. The response provides a time axis based on the specified aggregation interval (default: day), with usage values for each interval along that axis. Usage is broken down by the selected breakdown type. For example, breakdown type \"voice\" will return the usage of each voice for each interval along the time axis.",
        "operationId": "Get_characters_usage_metrics_v1_usage_character_stats_get",
        "parameters": [
          {
            "name": "start_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "UTC Unix timestamp for the start of the usage window, in milliseconds. To include the first day of the window, the timestamp should be at 00:00:00 of that day.",
              "examples": [
                "1685574000"
              ],
              "title": "Start Unix"
            },
            "description": "UTC Unix timestamp for the start of the usage window, in milliseconds. To include the first day of the window, the timestamp should be at 00:00:00 of that day."
          },
          {
            "name": "end_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "UTC Unix timestamp for the end of the usage window, in milliseconds. To include the last day of the window, the timestamp should be at 23:59:59 of that day.",
              "examples": [
                "1688165999"
              ],
              "title": "End Unix"
            },
            "description": "UTC Unix timestamp for the end of the usage window, in milliseconds. To include the last day of the window, the timestamp should be at 23:59:59 of that day."
          },
          {
            "name": "include_workspace_metrics",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether or not to include the statistics of the entire workspace.",
              "default": false,
              "title": "Include Workspace Metrics"
            },
            "description": "Whether or not to include the statistics of the entire workspace."
          },
          {
            "name": "breakdown_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BreakdownTypes",
              "description": "How to break down the information. Cannot be \"user\" if include_workspace_metrics is False.",
              "default": "none"
            },
            "description": "How to break down the information. Cannot be \"user\" if include_workspace_metrics is False."
          },
          {
            "name": "aggregation_interval",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/UsageAggregationInterval",
              "description": "How to aggregate usage data over time. Can be \"hour\", \"day\", \"week\", \"month\", or \"cumulative\".",
              "default": "day"
            },
            "description": "How to aggregate usage data over time. Can be \"hour\", \"day\", \"week\", \"month\", or \"cumulative\"."
          },
          {
            "name": "voice_id_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter to apply to the usage metrics.",
              "title": "Voice Id Filter"
            },
            "description": "Filter to apply to the usage metrics."
          },
          {
            "name": "user_id_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter to apply to the usage metrics.",
              "title": "User Id Filter"
            },
            "description": "Filter to apply to the usage metrics."
          },
          {
            "name": "product_type_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter to apply to the usage metrics.",
              "title": "Product Type Filter"
            },
            "description": "Filter to apply to the usage metrics."
          },
          {
            "name": "model_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter to apply to the usage metrics.",
              "title": "Model Filter"
            },
            "description": "Filter to apply to the usage metrics."
          },
          {
            "name": "api_key_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter to apply to the usage metrics.",
              "title": "Api Key Filter"
            },
            "description": "Filter to apply to the usage metrics."
          },
          {
            "name": "request_queue_type_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter to apply to the usage metrics.",
              "title": "Request Queue Type Filter"
            },
            "description": "Filter to apply to the usage metrics."
          },
          {
            "name": "region_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter to apply to the usage metrics.",
              "title": "Region Filter"
            },
            "description": "Filter to apply to the usage metrics."
          },
          {
            "name": "reporting_workspace_id_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter to apply to the usage metrics.",
              "title": "Reporting Workspace Id Filter"
            },
            "description": "Filter to apply to the usage metrics."
          },
          {
            "name": "subresource_id_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter to apply to the usage metrics.",
              "title": "Subresource Id Filter"
            },
            "description": "Filter to apply to the usage metrics."
          },
          {
            "name": "metric",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/MetricType",
              "description": "Which metric to aggregate.",
              "default": "credits"
            },
            "description": "Which metric to aggregate."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageCharactersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "usage",
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/usage/breakdown-values": {
      "get": {
        "tags": [
          "usage"
        ],
        "summary": "Get Usage Breakdown Values",
        "description": "Returns the breakdown values for a given breakdown type that occur within a given timeframe, mapped to their display names. Useful for filtering the usage metrics.",
        "operationId": "Get_usage_breakdown_values_v1_usage_breakdown_values_get",
        "parameters": [
          {
            "name": "start_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "UTC Unix timestamp for the start of the usage window, in milliseconds. To include the first day of the window, the timestamp should be at 00:00:00 of that day.",
              "examples": [
                "1685574000"
              ],
              "title": "Start Unix"
            },
            "description": "UTC Unix timestamp for the start of the usage window, in milliseconds. To include the first day of the window, the timestamp should be at 00:00:00 of that day."
          },
          {
            "name": "end_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "UTC Unix timestamp for the end of the usage window, in milliseconds. To include the last day of the window, the timestamp should be at 23:59:59 of that day.",
              "examples": [
                "1688165999"
              ],
              "title": "End Unix"
            },
            "description": "UTC Unix timestamp for the end of the usage window, in milliseconds. To include the last day of the window, the timestamp should be at 23:59:59 of that day."
          },
          {
            "name": "include_workspace_metrics",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether or not to include the statistics of the entire workspace.",
              "default": false,
              "title": "Include Workspace Metrics"
            },
            "description": "Whether or not to include the statistics of the entire workspace."
          },
          {
            "name": "breakdown_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BreakdownTypes",
              "description": "How to break down the information. Cannot be \"user\" if include_workspace_metrics is False.",
              "default": "none"
            },
            "description": "How to break down the information. Cannot be \"user\" if include_workspace_metrics is False."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "title": "Response Get Usage Breakdown Values V1 Usage Breakdown Values Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/usage/request-stats": {
      "get": {
        "tags": [
          "usage"
        ],
        "summary": "Usage General Metrics",
        "description": "Returns the usage metrics for a user or workspace.",
        "operationId": "Usage_general_metrics_v1_usage_request_stats_get",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "1h",
                "1d",
                "7d",
                "30d",
                "90d",
                "365d"
              ],
              "type": "string",
              "description": "Aggregate window. One of 1h, 1d, 7d, 30d, 90d, 365d.",
              "examples": [
                "1h"
              ],
              "default": "1h",
              "title": "Start"
            },
            "description": "Aggregate window. One of 1h, 1d, 7d, 30d, 90d, 365d."
          },
          {
            "name": "window",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "1m",
                "5m",
                "1h",
                "3h",
                "12h",
                "1d",
                "7d",
                "30d"
              ],
              "type": "string",
              "description": "Aggregate window. One of 1m, 5m, 1h, 3h, 12h, 1d, 7d, 30d.",
              "examples": [
                "1h"
              ],
              "default": "1h",
              "title": "Window"
            },
            "description": "Aggregate window. One of 1m, 5m, 1h, 3h, 12h, 1d, 7d, 30d."
          },
          {
            "name": "model",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Model to filter by.",
              "default": "all",
              "title": "Model"
            },
            "description": "Model to filter by."
          },
          {
            "name": "include_workspace_metrics",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether or not to include the statistics of the entire workspace.",
              "default": false,
              "title": "Include Workspace Metrics"
            },
            "description": "Whether or not to include the statistics of the entire workspace."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageRequestsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/play/{voice_id}/create": {
      "post": {
        "summary": "Create",
        "operationId": "create",
        "deprecated": true,
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi_app_check_token",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your app check token.",
              "convert_underscores": true,
              "title": "Xi App Check Token"
            },
            "description": "Your app check token."
          },
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_v1_play__voice_id__create_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePlayDocumentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reader/c185a1ff66f4a1feaeb19931d4be4175/convert-play-documents": {
      "post": {
        "summary": "Convert Play Documents Endpoint",
        "operationId": "convert_play_documents_endpoint",
        "parameters": [
          {
            "name": "test_convert_document_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Test Convert Document Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_convert_play_documents_endpoint_v1_reader_c185a1ff66f4a1feaeb19931d4be4175_convert_play_documents_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reader/c185a1ff66f4a1feaeb19931d4be4175/convert-play-document/{document_id}": {
      "post": {
        "summary": "Convert Play Document Endpoint",
        "operationId": "convert_play_document_endpoint",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Document ID to play from.",
              "examples": [
                "G007vmtq9uWYl7SUW9zGS8GZZa1K"
              ],
              "title": "Document Id"
            },
            "description": "Document ID to play from."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_convert_play_document_endpoint_v1_reader_c185a1ff66f4a1feaeb19931d4be4175_convert_play_document__document_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pronunciation-dictionaries/add-from-file": {
      "post": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Add A Pronunciation Dictionary",
        "description": "Creates a new pronunciation dictionary from a lexicon .PLS file",
        "operationId": "Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPronunciationDictionaryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "pronunciation_dictionaries",
        "x-fern-sdk-method-name": "create_from_file"
      }
    },
    "/v1/pronunciation-dictionaries/add-from-rules": {
      "post": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Add A Pronunciation Dictionary",
        "description": "Creates a new pronunciation dictionary from provided rules.",
        "operationId": "Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPronunciationDictionaryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "pronunciation_dictionaries",
        "x-fern-sdk-method-name": "create_from_rules"
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}": {
      "patch": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Update Pronunciation Dictionary",
        "description": "Partially update the pronunciation dictionary without changing the version",
        "operationId": "Update_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__patch",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the pronunciation dictionary",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            },
            "description": "The id of the pronunciation dictionary"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPronunciationDictionaryMetadataResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Get Metadata For A Pronunciation Dictionary",
        "description": "Get metadata for a pronunciation dictionary",
        "operationId": "Get_metadata_for_a_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__get",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the pronunciation dictionary",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            },
            "description": "The id of the pronunciation dictionary"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPronunciationDictionaryMetadataResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "pronunciation_dictionaries",
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/text-to-speech": {
      "post": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Pronunciation Text To Speech",
        "description": "Converts the pronunciation rule into speech and returns audio",
        "operationId": "Pronunciation_text_to_speech_v1_pronunciation_dictionaries__pronunciation_dictionary_id__text_to_speech_post",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the pronunciation dictionary",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            },
            "description": "The id of the pronunciation dictionary"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Pronunciation_text_to_speech_v1_pronunciation_dictionaries__pronunciation_dictionary_id__text_to_speech_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated audio file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/set-rules": {
      "post": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Set Rules On The Pronunciation Dictionary",
        "description": "Set rules on the pronunciation dictionary",
        "operationId": "Set_rules_on_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__set_rules_post",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the pronunciation dictionary",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            },
            "description": "The id of the pronunciation dictionary"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Set_rules_on_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__set_rules_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PronunciationDictionaryRulesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/add-rules": {
      "post": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Add Rules To The Pronunciation Dictionary",
        "description": "Add rules to the pronunciation dictionary",
        "operationId": "Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the pronunciation dictionary",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            },
            "description": "The id of the pronunciation dictionary"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PronunciationDictionaryRulesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "pronunciation_dictionaries",
          "rules"
        ],
        "x-fern-sdk-method-name": "add"
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/remove-rules": {
      "post": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Remove Rules From The Pronunciation Dictionary",
        "description": "Remove rules from the pronunciation dictionary",
        "operationId": "Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the pronunciation dictionary",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            },
            "description": "The id of the pronunciation dictionary"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PronunciationDictionaryRulesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "pronunciation_dictionaries",
          "rules"
        ],
        "x-fern-sdk-method-name": "remove"
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/versions/{version_id}": {
      "get": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Get A Pronunciation Dictionary Version",
        "description": "Get a pronunciation dictionary version including all of its rules",
        "operationId": "Get_a_pronunciation_dictionary_version_v1_pronunciation_dictionaries__pronunciation_dictionary_id__versions__version_id__get",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the pronunciation dictionary",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            },
            "description": "The id of the pronunciation dictionary"
          },
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the version of the pronunciation dictionary",
              "examples": [
                "BdF0s0aZ3oFoKnDYdTox"
              ],
              "title": "Version Id"
            },
            "description": "The id of the version of the pronunciation dictionary"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pronunciation-dictionaries/{dictionary_id}/{version_id}/download": {
      "get": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Get A Pls File With A Pronunciation Dictionary Version Rules",
        "description": "Get a PLS file with a pronunciation dictionary version rules",
        "operationId": "Get_a_PLS_file_with_a_pronunciation_dictionary_version_rules_v1_pronunciation_dictionaries__dictionary_id___version_id__download_get",
        "parameters": [
          {
            "name": "dictionary_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the pronunciation dictionary",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Dictionary Id"
            },
            "description": "The id of the pronunciation dictionary"
          },
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the version of the pronunciation dictionary",
              "examples": [
                "BdF0s0aZ3oFoKnDYdTox"
              ],
              "title": "Version Id"
            },
            "description": "The id of the version of the pronunciation dictionary"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "The PLS file containing pronunciation dictionary rules",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "Content-Disposition": {
                "description": "Attachment filename",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "pronunciation_dictionaries",
        "x-fern-sdk-method-name": "download"
      }
    },
    "/v1/pronunciation-dictionaries": {
      "get": {
        "tags": [
          "Pronunciation Dictionary"
        ],
        "summary": "Get Pronunciation Dictionaries",
        "description": "Get a list of the pronunciation dictionaries you have access to and their metadata",
        "operationId": "Get_Pronunciation_Dictionaries_v1_pronunciation_dictionaries_get",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many pronunciation dictionaries to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many pronunciation dictionaries to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "creation_time_unix",
                    "name"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Which field to sort by, one of 'created_at_unix' or 'name'.",
              "examples": [
                "creation_time_unix"
              ],
              "default": "creation_time_unix",
              "title": "Sort"
            },
            "description": "Which field to sort by, one of 'created_at_unix' or 'name'."
          },
          {
            "name": "sort_direction",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Which direction to sort the voices in. 'ascending' or 'descending'.",
              "examples": [
                "descending"
              ],
              "default": "DESCENDING",
              "title": "Sort Direction"
            },
            "description": "Which direction to sort the voices in. 'ascending' or 'descending'."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPronunciationDictionariesMetadataResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "pronunciation_dictionaries",
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/service-accounts/{service_account_user_id}/api-keys": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Service Account Api Keys Route",
        "description": "Get all API keys for a service account",
        "operationId": "get_service_account_api_keys_route",
        "parameters": [
          {
            "name": "service_account_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Account User Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceApiKeyListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "service_accounts",
          "api_keys"
        ],
        "x-fern-sdk-method-name": "list"
      },
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Create Service Account Api Key",
        "description": "Create a new API key for a service account",
        "operationId": "create_service_account_api_key",
        "parameters": [
          {
            "name": "service_account_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Account User Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_service_account_api_key_v1_service_accounts__service_account_user_id__api_keys_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceCreateApiKeyResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "service_accounts",
          "api_keys"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/service-accounts/{service_account_user_id}/api-keys/{api_key_id}": {
      "patch": {
        "tags": [
          "workspace"
        ],
        "summary": "Edit Service Account Api Key",
        "description": "Update an existing API key for a service account",
        "operationId": "edit_service_account_api_key",
        "parameters": [
          {
            "name": "service_account_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Account User Id"
            }
          },
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Api Key Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_edit_service_account_api_key_v1_service_accounts__service_account_user_id__api_keys__api_key_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "service_accounts",
          "api_keys"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Service Account Api Key",
        "description": "Delete an existing API key for a service account",
        "operationId": "delete_service_account_api_key",
        "parameters": [
          {
            "name": "service_account_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Account User Id"
            }
          },
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Api Key Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "service_accounts",
          "api_keys"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/workspace/auth-connections": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Create Workspace Auth Connection",
        "description": "Create a new OAuth2 auth connection for the workspace",
        "operationId": "create_auth_connection",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/CreateOAuth2ClientCredsRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CreateBasicAuthRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CreateOAuth2JWTRequest"
                  }
                ],
                "description": "Auth connection to create",
                "title": "Request Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/OAuth2ClientCredsResponse"
                    },
                    {
                      "$ref": "#/components/schemas/BasicAuthResponse"
                    },
                    {
                      "$ref": "#/components/schemas/OAuth2JWTResponse"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "auth_type",
                    "mapping": {
                      "oauth2_client_credentials": "#/components/schemas/OAuth2ClientCredsResponse",
                      "basic_auth": "#/components/schemas/BasicAuthResponse",
                      "oauth2_jwt": "#/components/schemas/OAuth2JWTResponse"
                    }
                  },
                  "description": "The type of auth connection config",
                  "title": "Response Create Workspace Auth Connection V1 Workspace Auth Connections Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "auth_connections"
        ],
        "x-fern-sdk-method-name": "create"
      },
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Auth Connections",
        "description": "Get all auth connections for the workspace",
        "operationId": "list_auth_connections",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAuthConnectionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "auth_connections"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/workspace/auth-connections/{auth_connection_id}": {
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Workspace Auth Connection",
        "description": "Delete an auth connection",
        "operationId": "delete_auth_connection",
        "parameters": [
          {
            "name": "auth_connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Auth Connection Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "auth_connections"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/workspace/user-auto-provisioning": {
      "post": {
        "tags": [
          "workspace",
          "workspace"
        ],
        "summary": "Update User Auto Provisioning",
        "description": "Update user auto provisioning settings for the workspace.",
        "operationId": "update_user_auto_provisioning",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_user_auto_provisioning_v1_workspace_user_auto_provisioning_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/service-accounts": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Service Accounts",
        "description": "List all service accounts in the workspace",
        "operationId": "get_workspace_service_accounts",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceServiceAccountListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "service_accounts"
        ],
        "x-fern-sdk-method-name": "list"
      },
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Create Service Account",
        "description": "Create a new service account in the workspace",
        "operationId": "create_service_account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_service_account_v1_service_accounts_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceCreateServiceAccountResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/service-accounts/{service_account_user_id}": {
      "patch": {
        "tags": [
          "workspace"
        ],
        "summary": "Edit Workspace Service Account",
        "description": "Edit the name of a service account in the workspace",
        "operationId": "edit_workspace_service_account",
        "parameters": [
          {
            "name": "service_account_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Account User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_edit_workspace_service_account_v1_service_accounts__service_account_user_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Workspace Service Account",
        "description": "Delete a service account in the workspace",
        "operationId": "delete_workspace_service_account",
        "parameters": [
          {
            "name": "service_account_user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Service Account User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/domain-verifications": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Domain Verifications",
        "description": "Get the domain verifications for the workspace",
        "operationId": "get_domain_verifications",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DomainVerificationDBModel"
                  },
                  "type": "array",
                  "title": "Response Get Domain Verifications V1 Workspace Domain Verifications Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Add Domain Verification",
        "description": "Add a domain verification for the workspace",
        "operationId": "add_domain_verification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_domain_verification_v1_workspace_domain_verifications_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainVerificationDBModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Domain Verification",
        "description": "Delete a domain verification for the workspace",
        "operationId": "delete_domain_verification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_delete_domain_verification_v1_workspace_domain_verifications_delete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/domain-verifications-bulk": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Add Domain Verification Bulk",
        "description": "Add multiple domain verifications for the workspace",
        "operationId": "add_domain_verification_bulk",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_domain_verification_bulk_v1_workspace_domain_verifications_bulk_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Add Domain Verification Bulk V1 Workspace Domain Verifications Bulk Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/domain-verifications/update-status": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Update Status Domain Verification",
        "description": "Update the status of a domain verification for the workspace",
        "operationId": "update_status_domain_verification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_status_domain_verification_v1_workspace_domain_verifications_update_status_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainVerificationDBModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/domain-verifications/update-status-bulk": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Update Status Domain Verification Bulk",
        "description": "Update the status of multiple domain verifications for the workspace",
        "operationId": "update_status_domain_verification_bulk",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_status_domain_verification_bulk_v1_workspace_domain_verifications_update_status_bulk_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DomainVerificationDBModel"
                  },
                  "type": "array",
                  "title": "Response Update Status Domain Verification Bulk V1 Workspace Domain Verifications Update Status Bulk Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/groups": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Groups Endpoint",
        "description": "Get all groups in the workspace",
        "operationId": "get_groups_endpoint",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/WorkspaceGroupResponseModel"
                  },
                  "title": "Response Get Groups Endpoint V1 Workspace Groups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Create A Group",
        "description": "Creates a new group in the workspace.",
        "operationId": "create_group_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_a_group_v1_workspace_groups_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/groups/{group_id}": {
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete A Group",
        "description": "Deletes a group from the workspace.",
        "operationId": "delete_group_route",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target group.",
              "title": "Group Id"
            },
            "description": "The ID of the target group."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "workspace"
        ],
        "summary": "Update Group",
        "description": "Updates a group.",
        "operationId": "update_workspace_group_name",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target group.",
              "title": "Group Id"
            },
            "description": "The ID of the target group."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_group_v1_workspace_groups__group_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/groups/search": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Search User Groups",
        "description": "Searches for user groups in the workspace. Multiple or no groups may be returned.",
        "operationId": "search_groups",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the target group.",
              "title": "Name"
            },
            "description": "Name of the target group."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceGroupByNameResponseModel"
                  },
                  "title": "Response Search User Groups V1 Workspace Groups Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "groups"
        ],
        "x-fern-sdk-method-name": "search"
      }
    },
    "/v1/workspace/groups/{group_id}/permissions": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Update Group Permissions",
        "description": "Updates the permissions of a group.",
        "operationId": "update_workspace_group_permissions",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target group.",
              "title": "Group Id"
            },
            "description": "The ID of the target group."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_group_permissions_v1_workspace_groups__group_id__permissions_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/groups/user-permissions": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Combined Group Permissions",
        "description": "Returns the combined group permissions of the current user, including the permissions of the groups they are in.",
        "operationId": "get_user_combined_group_permissions",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/WorkspaceGroupPermission"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Combined Group Permissions V1 Workspace Groups User Permissions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/groups/{group_id}/members/remove": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Member From User Group",
        "description": "Removes a member from the specified group. This endpoint may only be called by workspace administrators.",
        "operationId": "remove_member",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target group.",
              "title": "Group Id"
            },
            "description": "The ID of the target group."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWorkspaceGroupMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "groups",
          "members"
        ],
        "x-fern-sdk-method-name": "remove"
      }
    },
    "/v1/workspace/groups/{group_id}/members": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Add Member To User Group",
        "description": "Adds a member of your workspace to the specified group. This endpoint may only be called by workspace administrators.",
        "operationId": "add_member",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target group.",
              "title": "Group Id"
            },
            "description": "The ID of the target group."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWorkspaceGroupMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "groups",
          "members"
        ],
        "x-fern-sdk-method-name": "add"
      }
    },
    "/v1/workspace/groups/{group_id}/members/{member_id}": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "[Internal] Add Member To Group",
        "description": "[Internal] Add member to group",
        "operationId": "add_member_internal",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target group.",
              "title": "Group Id"
            },
            "description": "The ID of the target group."
          },
          {
            "name": "member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Member Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "[Internal] Delete Member From Group",
        "description": "[Internal] Delete member from group",
        "operationId": "remove_member_internal",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target group.",
              "title": "Group Id"
            },
            "description": "The ID of the target group."
          },
          {
            "name": "member_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Member Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/identity-providers": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Identity Providers",
        "description": "Get the identity providers and whether they are enabled for the workspace",
        "operationId": "get_identity_providers",
        "parameters": [
          {
            "name": "invite_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Invite Code"
            }
          },
          {
            "name": "email",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "boolean"
                  },
                  "title": "Response Get Identity Providers V1 Workspace Identity Providers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Set Identity Providers",
        "description": "Set enabled/disabled status for identity providers for the workspace",
        "operationId": "set_identity_providers",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_set_identity_providers_v1_workspace_identity_providers_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/find-sso-provider": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Find Sso Provider",
        "description": "Find the SSO provider for a given email and invite code",
        "operationId": "find_sso_provider",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          },
          {
            "name": "invite_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invite Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/sso-provider-config": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Sso Provider Config",
        "description": "Get the SSO provider config for the workspace",
        "operationId": "get_sso_provider_config",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSOConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Set Sso Provider",
        "description": "Set the SSO provider for the workspace",
        "operationId": "set_sso_provider",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_set_sso_provider_v1_workspace_sso_provider_config_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Remove Sso Provider",
        "description": "Remove the SSO provider for the workspace",
        "operationId": "remove_sso_provider",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/v1/workspace/identity-providers-allowed": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Is Provider Domain Allowed Internal",
        "description": "Check if a provider domain is allowed for a workspace",
        "operationId": "is_provider_domain_allowed_internal",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_is_provider_domain_allowed_internal_c185a1ff66f4a1feaeb19931d4be4175_v1_workspace_identity_providers_allowed_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/v1/workspace/can-link-email-to-sso": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Admin Can Link Email To Sso",
        "description": "Check if an email can be linked to an SSO provider",
        "operationId": "admin_can_link_email_to_sso",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_admin_can_link_email_to_sso_c185a1ff66f4a1feaeb19931d4be4175_v1_workspace_can_link_email_to_sso_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/v1/workspace/snapshot-subscriptions": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Snapshot Subscriptions",
        "operationId": "snapshot_subscriptions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_snapshot_subscriptions_c185a1ff66f4a1feaeb19931d4be4175_v1_workspace_snapshot_subscriptions_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/seats-status": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Seats Status",
        "description": "Get the workspace seats status",
        "operationId": "get_workspace_seats_status",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeatsStatusResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/invites/add": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Invite User",
        "description": "Sends an email invitation to join your workspace to the provided email. If the user doesn't have an account they will be prompted to create one. If the user accepts this invite they will be added as a user to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators. If the user is already in the workspace a 400 error will be returned.",
        "operationId": "invite_user",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Invite_user_v1_workspace_invites_add_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWorkspaceInviteResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "invites"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/workspace/invites/add-bulk": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Invite Multiple Users",
        "description": "Sends email invitations to join your workspace to the provided emails. Requires all email addresses to be part of a verified domain. If the users don't have an account they will be prompted to create one. If the users accept these invites they will be added as users to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators.",
        "operationId": "invite_users_bulk",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWorkspaceInviteResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "invites"
        ],
        "x-fern-sdk-method-name": "create_batch"
      }
    },
    "/v1/workspace/invites": {
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Existing Invitation",
        "description": "Invalidates an existing email invitation. The invitation will still show up in the inbox it has been delivered to, but activating it to join the workspace won't work. This endpoint may only be called by workspace administrators.",
        "operationId": "delete_invite",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_existing_invitation_v1_workspace_invites_delete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWorkspaceInviteResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "invites"
        ],
        "x-fern-sdk-method-name": "delete"
      },
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Invites",
        "description": "Get all pending invites for the workspace",
        "operationId": "get_workspace_invites",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceInviteDBModel"
                  },
                  "title": "Response Get Workspace Invites V1 Workspace Invites Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/invites/user": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Invites For User",
        "description": "Retrieves all workspace invites for the user making the request.",
        "operationId": "get_invites_for_user",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceInviteResponseModel"
                  },
                  "type": "array",
                  "title": "Response Get Invites For User V1 Workspace Invites User Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/invites/{invite_code}/accept": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Accept Invite Post Signup",
        "description": "Accept an invite to join a workspace",
        "operationId": "accept_invite_post_signup",
        "parameters": [
          {
            "name": "invite_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invite Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/invites/{invite_code}/decline": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Decline Invite",
        "description": "Decline an invite to join a workspace",
        "operationId": "decline_invite",
        "parameters": [
          {
            "name": "invite_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invite Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/members": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Members",
        "description": "Get all members of the workspace including locked users",
        "operationId": "get_workspace_members",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceUserResponseModel"
                  },
                  "title": "Response Get Workspace Members V1 Workspace Members Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Update Member",
        "description": "Updates attributes of a workspace member. Apart from the email identifier, all parameters will remain unchanged unless specified. This endpoint may only be called by workspace administrators.",
        "operationId": "update_workspace_member",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_member_v1_workspace_members_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWorkspaceMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "members"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Member",
        "description": "Deletes a workspace member. This endpoint may only be called by workspace administrators.",
        "operationId": "delete_workspace_member",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_member_v1_workspace_members_delete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWorkspaceMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "members"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/workspace/members-with-service-accounts": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Members With Service Accounts",
        "description": "Get all members of the workspace including service accounts",
        "operationId": "get_workspace_members_with_service_accounts",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceUserResponseModel"
                  },
                  "type": "array",
                  "title": "Response Get Workspace Members With Service Accounts V1 Workspace Members With Service Accounts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/notification-preferences": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Create Notification",
        "description": "Creates a new notification in the workspace",
        "operationId": "create_notification",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_notification_v1_workspace_notification_preferences_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Notification Preferences",
        "description": "Gets all notification preferences for the workspace",
        "operationId": "get_notifications",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UsageNotificationResponseModel"
                  },
                  "title": "Response Get Notification Preferences V1 Workspace Notification Preferences Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/notification-preferences/{notification_id}": {
      "put": {
        "tags": [
          "workspace"
        ],
        "summary": "Update Notification Preferences",
        "description": "Updates an existing notification",
        "operationId": "update_notification",
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the notification",
              "title": "Notification Id"
            },
            "description": "The ID of the notification"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_notification_preferences_v1_workspace_notification_preferences__notification_id__put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Notification Preferences",
        "description": "Deletes a notification",
        "operationId": "delete_notification",
        "parameters": [
          {
            "name": "notification_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the notification",
              "title": "Notification Id"
            },
            "description": "The ID of the notification"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/resources/{resource_id}": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Resource",
        "description": "Gets the metadata of a resource by ID.",
        "operationId": "get_resource_metadata",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target resource.",
              "title": "Resource Id"
            },
            "description": "The ID of the target resource."
          },
          {
            "name": "resource_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/WorkspaceResourceType",
              "description": "Resource type of the target resource."
            },
            "description": "Resource type of the target resource."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceMetadataResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "resources"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/workspace/resources/{resource_id}/share": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Share Workspace Resource",
        "description": "Grants a role on a workspace resource to a user or a group. It overrides any existing role this user/service account/group/workspace api key has on the resource. To target a user or service account, pass only the user email. The user must be in your workspace. To target a group, pass only the group id. To target a workspace api key, pass the api key id. The resource will be shared with the service account associated with the api key. You must have admin access to the resource to share it.",
        "operationId": "share_resource_endpoint",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target resource.",
              "title": "Resource Id"
            },
            "description": "The ID of the target resource."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Share_workspace_resource_v1_workspace_resources__resource_id__share_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "resources"
        ],
        "x-fern-sdk-method-name": "share"
      }
    },
    "/v1/workspace/resources/{resource_id}/bulk-share": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Bulk Share Workspace Resource",
        "description": "Grants roles on a workspace resource to multiple users, groups, or workspace API keys in a single operation. This is more efficient than making multiple individual share requests. It overrides any existing roles the targets have on the resource. You must have admin access to the resource to share it.",
        "operationId": "bulk_share_resource_endpoint",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target resource.",
              "title": "Resource Id"
            },
            "description": "The ID of the target resource."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkShareRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkShareResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "resources"
        ],
        "x-fern-sdk-method-name": "bulkShare"
      }
    },
    "/v1/workspace/resources/{resource_id}/unshare": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Unshare Workspace Resource",
        "description": "Removes any existing role on a workspace resource from a user, service account, group or workspace api key. To target a user or service account, pass only the user email. The user must be in your workspace. To target a group, pass only the group id. To target a workspace api key, pass the api key id. The resource will be unshared from the service account associated with the api key. You must have admin access to the resource to unshare it. You cannot remove permissions from the user who created the resource.",
        "operationId": "unshare_resource_endpoint",
        "parameters": [
          {
            "name": "resource_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the target resource.",
              "title": "Resource Id"
            },
            "description": "The ID of the target resource."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace",
          "resources"
        ],
        "x-fern-sdk-method-name": "unshare"
      }
    },
    "/v1/workspace/default-sharing-preferences": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Default Sharing Preferences",
        "description": "Get the user's default sharing preferences.",
        "operationId": "get_default_sharing_preferences",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultSharingPreferencesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Update Default Sharing Preferences",
        "description": "Update the user's default sharing preferences.",
        "operationId": "update_default_sharing_preferences",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_default_sharing_preferences_v1_workspace_default_sharing_preferences_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/share-options": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Share Options",
        "description": "Get the share options for a workspace.",
        "operationId": "get_share_options",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ShareOptionResponseModel"
                  },
                  "type": "array",
                  "title": "Response Get Share Options V1 Workspace Share Options Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Info",
        "description": "Gets information about the workspace",
        "operationId": "get_workspace",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/can-access-workspace-settings": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Can Access Workspace Settings",
        "description": "Check if the user can access the workspace settings",
        "operationId": "can_access_workspace_settings",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Can Access Workspace Settings V1 Workspace Can Access Workspace Settings Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/is-admin": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Is Workspace Admin",
        "description": "Check if the user is a workspace admin",
        "operationId": "get_is_workspace_admin",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Get Is Workspace Admin V1 Workspace Is Admin Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/join-info": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Workspace Joining Info",
        "description": "Get the workspace joining info for a given email and invite code",
        "operationId": "get_workspace_joining_info",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          },
          {
            "name": "invite_code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Invite Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkspaceJoinInfoResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/update-workspace": {
      "put": {
        "tags": [
          "workspace"
        ],
        "summary": "Update Workspace Metadata",
        "description": "Update the workspace metadata",
        "operationId": "update_workspace_metadata",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "training_opt_out",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Training Opt Out"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_workspace_metadata_v1_workspace_update_workspace_put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/transfer-ownership": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Transfer Ownership",
        "description": "Transfer the ownership of the workspace to a new user",
        "operationId": "transfer_ownership",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_transfer_ownership_v1_workspace_transfer_ownership_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/fiat-rates": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Fiat Rates",
        "operationId": "get_fiat_rates",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionFiatPricesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/webhooks": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "List Workspace Webhooks",
        "description": "List all webhooks for a workspace",
        "operationId": "get_workspace_webhooks_route",
        "parameters": [
          {
            "name": "include_usages",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Whether to include active usages of the webhook, only usable by admins",
              "examples": [false],
              "default": false,
              "title": "Include Usages"
            },
            "description": "Whether to include active usages of the webhook, only usable by admins"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceWebhookListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "webhooks",
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/workspace/webhooks/add/hmac": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Create Workspace Webhook Hmac Route",
        "operationId": "create_workspace_webhook_hmac_route",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_workspace_webhook_hmac_route_v1_workspace_webhooks_add_hmac_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceCreateWebhookResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/webhooks/add/oauth2": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Create Workspace Webhook Oauth2 Route",
        "operationId": "create_workspace_webhook_oauth2_route",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_workspace_webhook_oauth2_route_v1_workspace_webhooks_add_oauth2_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceCreateWebhookResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/webhooks/{webhook_id}/edit": {
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Edit Workspace Webhook Route",
        "operationId": "edit_workspace_webhook_route",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique ID for the webhook",
              "examples": [
                "G007vmtq9uWYl7SUW9zGS8GZZa1K"
              ],
              "title": "Webhook Id"
            },
            "description": "The unique ID for the webhook"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_edit_workspace_webhook_route_v1_workspace_webhooks__webhook_id__edit_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/webhooks/{webhook_id}": {
      "delete": {
        "tags": [
          "workspace"
        ],
        "summary": "Delete Workspace Webhook Route",
        "operationId": "delete_workspace_webhook_route",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique ID for the webhook",
              "examples": [
                "G007vmtq9uWYl7SUW9zGS8GZZa1K"
              ],
              "title": "Webhook Id"
            },
            "description": "The unique ID for the webhook"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/workspace/voice-library-settings": {
      "get": {
        "tags": [
          "workspace"
        ],
        "summary": "Get Voice Library Settings",
        "operationId": "get_voice_library_settings",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceLibrarySettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "workspace"
        ],
        "summary": "Update Voice Library Settings",
        "operationId": "update_voice_library_settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_voice_library_settings_v1_workspace_voice_library_settings_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceLibrarySettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/share-link/{share_link_id}": {
      "get": {
        "tags": [
          "speech-history"
        ],
        "summary": "Get The Share Link Details",
        "description": "Returns the share link details",
        "operationId": "Get_the_share_link_details_v1_share_link__share_link_id__get",
        "parameters": [
          {
            "name": "share_link_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Share link ID",
              "description": "The ID of the share link"
            },
            "description": "The ID of the share link"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetShareLinkDetailsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/careers": {
      "get": {
        "summary": "Get The Job Lists",
        "description": "Returns the job lists",
        "operationId": "careers",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/v1/pvc/c185a1ff66f4a1feaeb19931d4be4175/run-training": {
      "post": {
        "summary": "Run Training",
        "operationId": "run_training",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_run_training_v1_pvc_c185a1ff66f4a1feaeb19931d4be4175_run_training_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pvc/c185a1ff66f4a1feaeb19931d4be4175/update-progress": {
      "post": {
        "summary": "Update Progress",
        "operationId": "update_progress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PVCStatusUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/fix-killed-pvcs": {
      "post": {
        "summary": "Fix Killed Pvcs",
        "description": "This function will be called on an interval by a cloud function. Only 1 function can be running at a time due to GlobalLock.",
        "operationId": "fix_killed_pvcs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_fix_killed_pvcs_c185a1ff66f4a1feaeb19931d4be4175_fix_killed_pvcs_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vercel/callback": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Handle The Vercel Callback Code",
        "description": "Gets the access token from Vercel, saves it, and returns the projects",
        "operationId": "Handle_the_Vercel_callback_code_v1_vercel_callback_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Handle_the_Vercel_callback_code_v1_vercel_callback_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vercel/projects": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get Vercel Projects",
        "description": "Gets the projects from Vercel",
        "operationId": "Get_Vercel_projects_v1_vercel_projects_get",
        "parameters": [
          {
            "name": "configuration_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Configuration ID",
              "description": "The configuration ID from Vercel.",
              "embed": true
            },
            "description": "The configuration ID from Vercel."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vercel/add-env-token": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add Env Token To Vercel",
        "description": "Adds the env token to Vercel",
        "operationId": "Add_env_token_to_Vercel_v1_vercel_add_env_token_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_env_token_to_Vercel_v1_vercel_add_env_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vercel/add_env_token": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Add Env Token To Vercel",
        "description": "Adds the env token to Vercel",
        "operationId": "add_env_token_to_vercel_deprecated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_env_token_to_vercel_deprecated"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-skip-spec": true
      }
    },
    "/v1/vercel/remove-env-token": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Remove Env Token To Vercel",
        "description": "Removes the env token to Vercel",
        "operationId": "Remove_env_token_to_Vercel_v1_vercel_remove_env_token_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Remove_env_token_to_Vercel_v1_vercel_remove_env_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voiceover-studio": {
      "post": {
        "tags": [
          "Voiceover-Studio"
        ],
        "summary": "Create A Voiceover Studio Editor",
        "description": "Create a voiceover studio with either a blank state or an existing video in the background",
        "operationId": "Create_a_voiceover_studio_editor_v1_voiceover_studio_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_a_voiceover_studio_editor_v1_voiceover_studio_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVoiceoverStudioResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voiceover-studio/parse-script": {
      "post": {
        "tags": [
          "Voiceover-Studio"
        ],
        "summary": "Parse A Voiceover Script",
        "description": "Create a set of tracks for voiceover studio based on an uploaded script",
        "operationId": "Parse_a_Voiceover_script_v1_voiceover_studio_parse_script_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Parse_a_Voiceover_script_v1_voiceover_studio_parse_script_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParseVoiceoverStudioScriptResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text": {
      "post": {
        "tags": [
          "speech-to-text"
        ],
        "summary": "Speech To Text",
        "description": "Transcribe an audio or video file. If webhook is set to true, the request will be processed asynchronously and results sent to configured webhooks. When use_multi_channel is true and the provided audio has multiple channels, a 'transcripts' object with separate transcripts for each channel is returned. Otherwise, returns a single transcript.",
        "operationId": "Speech_to_Text_v1_speech_to_text_post",
        "parameters": [
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Text_v1_speech_to_text_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Synchronous transcription result",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SpeechToTextChunkResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/MultichannelSpeechToTextResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/SpeechToTextWebhookResponseModel"
                    }
                  ],
                  "title": "Response Speech To Text V1 Speech To Text Post",
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/SpeechToTextChunkResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/MultichannelSpeechToTextResponseModel"
                    }
                  ]
                },
                "examples": {
                  "single_channel": {
                    "summary": "Single channel response",
                    "value": {
                      "language_code": "en",
                      "language_probability": 0.98,
                      "text": "Hello world!",
                      "words": [
                        {
                          "text": "Hello",
                          "start": 0,
                          "end": 0.5,
                          "type": "word",
                          "speaker_id": "speaker_1",
                          "logprob": -0.124
                        }
                      ]
                    }
                  },
                  "multichannel": {
                    "summary": "Multichannel response",
                    "value": {
                      "transcripts": [
                        {
                          "language_code": "en",
                          "language_probability": 0.98,
                          "text": "Hello from channel one.",
                          "words": [
                            {
                              "text": "Hello",
                              "start": 0,
                              "end": 0.5,
                              "type": "word",
                              "speaker_id": "speaker_0",
                              "channel_index": 0,
                              "logprob": -0.124
                            }
                          ]
                        },
                        {
                          "language_code": "en",
                          "language_probability": 0.97,
                          "text": "Greetings from channel two.",
                          "words": [
                            {
                              "text": "Greetings",
                              "start": 0.1,
                              "end": 0.7,
                              "type": "word",
                              "speaker_id": "speaker_1",
                              "channel_index": 1,
                              "logprob": -0.156
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Asynchronous request accepted",
            "content": {
              "application/json": {
                "example": {
                  "message": "Request accepted. Transcription result will be sent to the webhook.",
                  "request_id": "abc123"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "speech_to_text",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/speech-to-text/internal": {
      "post": {
        "summary": "Speech To Text Internal",
        "description": "Transcribe an audio or video file (internal use only).",
        "operationId": "speech_to_text_internal",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Text_Internal_v1_speech_to_text_internal_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeechToTextChunkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/internal/gcptoken": {
      "post": {
        "summary": "Speech To Text Internal Using A Gcp Token For Authentication",
        "operationId": "speech_to_text_internal_gcp_token",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Text_Internal_using_a_GCP_token_for_authentication_v1_speech_to_text_internal_gcptoken_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeechToTextChunkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/cost": {
      "get": {
        "tags": [
          "speech-to-text"
        ],
        "summary": "Calculate Speech To Text Cost",
        "description": "Calculate the number of credits required for speech to text based on duration.",
        "operationId": "Calculate_Speech_to_Text_Cost_v1_speech_to_text_cost_get",
        "parameters": [
          {
            "name": "duration",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "description": "Duration in seconds",
              "title": "Duration"
            },
            "description": "Duration in seconds"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/STTCostResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/music": {
      "post": {
        "tags": [
          "speech-to-text"
        ],
        "summary": "Speech To Text Music",
        "description": "Transcribe an audio or video file. This endpoint uses models tailored towards the transcription of music.",
        "operationId": "Speech_to_Text_Music_v1_speech_to_text_music_post",
        "parameters": [
          {
            "name": "enable_logging",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Enable request logging.",
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "default": true
            },
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Text_Music_v1_speech_to_text_music_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeechToTextMusicResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "speech_to_text",
        "x-fern-sdk-method-name": "convert music"
      }
    },
    "/v1/speech-to-text/tasks": {
      "get": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "List Speech To Text Tasks",
        "description": "Get a list of transcription tasks for the authenticated user, ordered by creation time.",
        "operationId": "List_speech_to_text_tasks_v1_speech_to_text_tasks_get",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 10,
              "description": "The number of tasks to return per page.",
              "default": 20,
              "title": "Page Size"
            },
            "description": "The number of tasks to return per page."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination, using the cursor from the previous page.",
              "title": "Cursor"
            },
            "description": "Cursor for pagination, using the cursor from the previous page."
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search transcription tasks by name. Case-insensitive partial matching.",
              "title": "Search"
            },
            "description": "Search transcription tasks by name. Case-insensitive partial matching."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListedTranscriptionTaskResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Create Speech To Text Task",
        "description": "Transcribe a file of your choice which can be accessed in the editor.",
        "operationId": "Create_speech_to_text_task_v1_speech_to_text_tasks_post",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_speech_to_text_task_v1_speech_to_text_tasks_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedTranscriptionTaskResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}": {
      "get": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Get Speech To Text Task",
        "description": "Get details about a specific transcription task.",
        "operationId": "Get_speech_to_text_task_v1_speech_to_text_tasks__transcription_task_id__get",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedTranscriptionTaskResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Delete A Transcription Task",
        "description": "Delete a transcription task. Only tasks with 'processed' status can be deleted.",
        "operationId": "Delete_a_transcription_task_v1_speech_to_text_tasks__transcription_task_id__delete",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/export": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Export Transcription Task Result",
        "description": "Export the transcription result of a specific transcription task to a particular file format.",
        "operationId": "Export_transcription_task_result_v1_speech_to_text_tasks__transcription_task_id__export_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Export_transcription_task_result_v1_speech_to_text_tasks__transcription_task_id__export_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/speech-to-text/tasks/start-conversions": {
      "post": {
        "summary": "Convert Transcription Tasks",
        "operationId": "convert_transcription_tasks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_convert_transcription_tasks_c185a1ff66f4a1feaeb19931d4be4175_speech_to_text_tasks_start_conversions_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/speech-to-text/tasks/reset-conversions": {
      "post": {
        "summary": "Reset Transcription Tasks",
        "description": "This function will be called on an interval by a cloud function. Only 1 function can be running at a time due to GlobalLock.",
        "operationId": "reset_transcription_tasks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_transcription_tasks_c185a1ff66f4a1feaeb19931d4be4175_speech_to_text_tasks_reset_conversions_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/name": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Update Transcription Task Name",
        "description": "Update the name of a specific transcription task.",
        "operationId": "Update_transcription_task_name_v1_speech_to_text_tasks__transcription_task_id__name_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_transcription_task_name_v1_speech_to_text_tasks__transcription_task_id__name_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedTranscriptionTaskResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/project": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Upsert Transcription Task Project",
        "description": "Update or insert project for a specific transcription task.",
        "operationId": "Upsert_transcription_task_project_v1_speech_to_text_tasks__transcription_task_id__project_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertTranscriptionTaskProjectPayload",
                "description": "Project data containing schema version and content."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptionTaskProject"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Get Transcription Task Project",
        "description": "Retrieve project for a specific transcription task.",
        "operationId": "Get_transcription_task_project_v1_speech_to_text_tasks__transcription_task_id__project_get",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/TranscriptionTaskProject"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Transcription Task Project V1 Speech To Text Tasks  Transcription Task Id  Project Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/project/export": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Export Transcription Task Project",
        "description": "Export a transcription task projec to a particular file format.",
        "operationId": "Export_transcription_task_project_v1_speech_to_text_tasks__transcription_task_id__project_export_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Export_transcription_task_project_v1_speech_to_text_tasks__transcription_task_id__project_export_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/project/align": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Align Text With Audio",
        "description": "Perform forced alignment of audio with provided text in a specific time range.",
        "operationId": "Align_text_with_audio_v1_speech_to_text_tasks__transcription_task_id__project_align_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlignmentRequest",
                "description": "Alignment request data containing start time, end time, and text."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlignmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/editor/snapshot": {
      "get": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Get Transcription Task V2 Editor Snapshot (V2 Editor)",
        "description": "Retrieve v2 editor data for a specific transcription task.",
        "operationId": "Get_transcription_task_v2_editor_snapshot__v2_editor__v1_speech_to_text_tasks__transcription_task_id__editor_snapshot_get",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditorSnapshot"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Save Transcription Task V2 Editor Snapshot (V2 Editor)",
        "description": "Save v2 editor data for a specific transcription task.",
        "operationId": "Save_transcription_task_v2_editor_snapshot__v2_editor__v1_speech_to_text_tasks__transcription_task_id__editor_snapshot_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditorSnapshot"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Save Transcription Task V2 Editor Snapshot  V2 Editor  V1 Speech To Text Tasks  Transcription Task Id  Editor Snapshot Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/generate-cues": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Generate Subtitle Cues From Transcription Task (V2 Editor)",
        "description": "Generate subtitle cues for a specific transcription task using provided constraints.",
        "operationId": "Generate_subtitle_cues_from_transcription_task__v2_editor__v1_speech_to_text_tasks__transcription_task_id__generate_cues_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubtitleConstraints"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CueResult"
                  },
                  "title": "Response Generate Subtitle Cues From Transcription Task  V2 Editor  V1 Speech To Text Tasks  Transcription Task Id  Generate Cues Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/file/waveform": {
      "get": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Get Transcription Task Audio Waveform",
        "description": "Get waveform data for a transcription task's audio file.",
        "operationId": "Get_transcription_task_audio_waveform_v1_speech_to_text_tasks__transcription_task_id__file_waveform_get",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          },
          {
            "name": "sample_rate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of samples per second for the waveform",
              "default": 40,
              "title": "Sample Rate"
            },
            "description": "Number of samples per second for the waveform"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WaveformSample"
                  },
                  "title": "Response Get Transcription Task Audio Waveform V1 Speech To Text Tasks  Transcription Task Id  File Waveform Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/editor/align": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Align Text With Audio",
        "description": "Perform forced alignment of audio with provided text in a specific time range.",
        "operationId": "Align_text_with_audio_v1_speech_to_text_tasks__transcription_task_id__editor_align_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlignmentRequest",
                "description": "Alignment request data containing start time, end time, and text."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlignmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/editor/preview-file": {
      "get": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Get Transcription Task Preview File",
        "description": "Get the preview file for a transcription task as a blob.",
        "operationId": "Get_transcription_task_preview_file_v1_speech_to_text_tasks__transcription_task_id__editor_preview_file_get",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/editor/export/txt": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Export Transcription Task As Txt",
        "description": "Export transcription task data as plain text with optional speakers and timestamps.",
        "operationId": "Export_transcription_task_as_TXT_v1_speech_to_text_tasks__transcription_task_id__editor_export_txt_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TxtExportRequest",
                "default": {
                  "include_speakers": true,
                  "include_timestamps": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/editor/export/html": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Export Transcription Task As Html",
        "description": "Export transcription task data as HTML with optional speakers and timestamps.",
        "operationId": "Export_transcription_task_as_HTML_v1_speech_to_text_tasks__transcription_task_id__editor_export_html_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HtmlExportRequest",
                "default": {
                  "include_speakers": true,
                  "include_timestamps": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/editor/export/json": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Export Transcription Task As Json",
        "description": "Export transcription task data as JSON with optional speakers and timestamps.",
        "operationId": "Export_transcription_task_as_JSON_v1_speech_to_text_tasks__transcription_task_id__editor_export_json_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonExportRequest",
                "default": {
                  "include_speakers": true,
                  "include_timestamps": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/editor/export/srt": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Export Transcription Task As Srt",
        "description": "Export transcription task data as SRT subtitle format.",
        "operationId": "Export_transcription_task_as_SRT_v1_speech_to_text_tasks__transcription_task_id__editor_export_srt_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SrtExportRequest",
                "default": {

                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/editor/export/vtt": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Export Transcription Task As Vtt",
        "description": "Export transcription task data as WebVTT subtitle format.",
        "operationId": "Export_transcription_task_as_VTT_v1_speech_to_text_tasks__transcription_task_id__editor_export_vtt_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VttExportRequest",
                "default": {

                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/editor/export/pdf": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Export Transcription Task As Pdf",
        "description": "Export transcription task data as PDF with optional speakers and timestamps.",
        "operationId": "Export_transcription_task_as_PDF_v1_speech_to_text_tasks__transcription_task_id__editor_export_pdf_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PdfExportRequest",
                "default": {
                  "include_speakers": true,
                  "include_timestamps": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/speech-to-text/tasks/{transcription_task_id}/editor/export/docx": {
      "post": {
        "tags": [
          "speech-to-text-tasks"
        ],
        "summary": "Export Transcription Task As Docx",
        "description": "Export transcription task data as DOCX with optional speakers and timestamps.",
        "operationId": "Export_transcription_task_as_DOCX_v1_speech_to_text_tasks__transcription_task_id__editor_export_docx_post",
        "parameters": [
          {
            "name": "transcription_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the transcription task to retrieve.",
              "title": "Transcription Task Id"
            },
            "description": "The ID of the transcription task to retrieve."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocxExportRequest",
                "default": {
                  "include_speakers": true,
                  "include_timestamps": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/forced-alignment": {
      "post": {
        "tags": [
          "forced-alignment"
        ],
        "summary": "Create Forced Alignment",
        "description": "Force align an audio file to text. Use this endpoint to get the timing information for each character and word in an audio file based on a provided text transcript.",
        "operationId": "Create_forced_alignment_v1_forced_alignment_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_forced_alignment_v1_forced_alignment_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForcedAlignmentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "forced_alignment",
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/forced-alignment/internal": {
      "post": {
        "summary": "Forced Alignment Internal",
        "description": "Force align an audio file (internal use only).",
        "operationId": "forced_alignment_internal",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Forced_Alignment_Internal_v1_forced_alignment_internal_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForcedAlignmentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/lead/show-calendly": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Whether To Show The Calendly For The Lead",
        "operationId": "Whether_to_show_the_calendly_for_the_lead_v1_lead_show_calendly_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Whether_to_show_the_calendly_for_the_lead_v1_lead_show_calendly_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShowCalendlyResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/conversation/get-signed-url": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Signed Url",
        "description": "Get a signed url to start a conversation with an agent with an agent that requires authorization",
        "operationId": "get_conversation_signed_link",
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the agent you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            },
            "description": "The id of the agent you're taking the action on."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationSignedUrlResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations"
        ],
        "x-fern-sdk-method-name": "get_signed_url"
      }
    },
    "/v1/convai/conversation/get_signed_url": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Signed Url",
        "description": "Get a signed url to start a conversation with an agent with an agent that requires authorization",
        "operationId": "get_signed_url_deprecated",
        "deprecated": true,
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the agent you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            },
            "description": "The id of the agent you're taking the action on."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationSignedUrlResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-skip-spec": true
      }
    },
    "/v1/convai/conversation/token": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Webrtc Token",
        "description": "Get a WebRTC session token for real-time communication.",
        "operationId": "get_livekit_token",
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the agent you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            },
            "description": "The id of the agent you're taking the action on."
          },
          {
            "name": "participant_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Optional custom participant name. If not provided, user ID will be used",
              "title": "Participant Name"
            },
            "description": "Optional custom participant name. If not provided, user ID will be used"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations"
        ],
        "x-fern-sdk-method-name": "get_webrtc_token"
      }
    },
    "/v1/convai/twilio/outbound-call": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Handle An Outbound Call Via Twilio",
        "description": "Handle an outbound call via Twilio",
        "operationId": "handle_twilio_outbound_call",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TwilioOutboundCallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "twilio"
        ],
        "x-fern-sdk-method-name": "outbound_call"
      }
    },
    "/v1/convai/agents/create": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Agent",
        "description": "Create an agent from a config object",
        "operationId": "create_agent_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_Agent_v1_convai_agents_create_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/convai/agents/{agent_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Agent",
        "description": "Retrieve config for an agent",
        "operationId": "get_agent_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Patches An Agent Settings",
        "description": "Patches an Agent settings",
        "operationId": "patch_agent_settings_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Agent",
        "description": "Delete an agent",
        "operationId": "delete_agent_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "204": {
            "description": "Agent successfully deleted"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/convai/agents/{agent_id}/widget": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Agent Widget Config",
        "description": "Retrieve the widget configuration for an agent",
        "operationId": "get_agent_widget_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "conversation_signature",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "An expiring token that enables a websocket conversation to start. These can be generated for an agent using the /v1/convai/conversation/get-signed-url endpoint",
              "title": "Conversation Signature"
            },
            "description": "An expiring token that enables a websocket conversation to start. These can be generated for an agent using the /v1/convai/conversation/get-signed-url endpoint"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentEmbedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents",
          "widget"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/convai/agents/workflow-schemas": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Workflow Schema",
        "description": "Internal endpoint for generating workflow schema",
        "operationId": "get_agent_workflow_schemas_route",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentWorkflowRequestModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentWorkflowResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/agents/{agent_id}/dynamic-variable-placeholders": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Dynamic Variable Placeholders",
        "description": "Get the placeholders for dynamic variables used by this agent",
        "operationId": "get_agent_dynamic_variable_placeholders_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "boolean"
                      }
                    ]
                  },
                  "title": "Response Get Dynamic Variable Placeholders V1 Convai Agents  Agent Id  Dynamic Variable Placeholders Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/agents/{agent_id}/link": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Shareable Agent Link",
        "description": "Get the current link used to share the agent with others",
        "operationId": "get_agent_link_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentLinkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents",
          "link"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Shareable Agent Link",
        "description": "Create a link used to share the agent with others",
        "operationId": "post_agent_link_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_shareable_agent_link_v1_convai_agents__agent_id__link_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostAgentLinkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents",
          "link"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/convai/agents/{agent_id}/avatar": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Post Agent Avatar",
        "description": "Sets the avatar for an agent displayed in the widget",
        "operationId": "post_agent_avatar_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostAgentAvatarResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents",
          "widget",
          "avatar"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/convai/agents": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "List Agents",
        "description": "Returns a list of your agents and their metadata.",
        "operationId": "get_agents_route",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many Agents to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many Agents to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by agents name.",
              "title": "Search"
            },
            "description": "Search by agents name."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentsPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/agent-count": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Agent Count",
        "description": "Returns the number of agents the user has read access to.",
        "operationId": "get_agent_count_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentCountResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "count"
      }
    },
    "/v1/convai/agent/{agent_id}/knowledge-base/size": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Returns The Size Of The Agent'S Knowledge Base",
        "description": "Returns the number of pages in the agent's knowledge base.",
        "operationId": "get_agent_knowledge_base_size",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentKnowledgebaseSizeResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents",
          "knowledge_base"
        ],
        "x-fern-sdk-method-name": "size"
      }
    },
    "/v1/convai/agent/{agent_id}/llm-usage/calculate": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Calculate Expected Llm Usage For An Agent",
        "description": "Calculates expected number of LLM tokens needed for the specified agent.",
        "operationId": "get_agent_llm_expected_cost_calculation",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LLMUsageCalculatorRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMUsageCalculatorResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents",
          "llm_usage"
        ],
        "x-fern-sdk-method-name": "calculate"
      }
    },
    "/v1/convai/prompts/generate-system-prompt": {
      "post": {
        "tags": [
          "Conversational AI",
          "Prompt Engineering"
        ],
        "summary": "Generate Agent System Prompt",
        "description": "Generates a refined system prompt based on an input prompt using an LLM",
        "operationId": "generate_system_prompt_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateSystemPromptRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateSystemPromptResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "generate_system_prompt"
      }
    },
    "/v1/convai/agents/generate": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Agent From Onboarding",
        "description": "Create an agent from onboarding flow data using LLM-generated configuration",
        "operationId": "generate_agent_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAgentRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "generate"
      }
    },
    "/v1/convai/agents/{agent_id}/duplicate": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Duplicate Agent",
        "description": "Create a new agent by duplicating an existing one",
        "operationId": "duplicate_agent_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Duplicate_Agent_v1_convai_agents__agent_id__duplicate_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "duplicate"
      }
    },
    "/v1/convai/agents/{agent_id}/zendesk-webhook": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Process Zendesk Webhook And Respond To Ticket",
        "description": "Receive webhook from Zendesk, process with agent, and update the ticket",
        "operationId": "respond_to_zendesk_ticket",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Process_Zendesk_webhook_and_respond_to_ticket_v1_convai_agents__agent_id__zendesk_webhook_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/agents/{agent_id}/simulate-conversation": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Simulates A Conversation",
        "description": "Run a conversation between the agent and a simulated user.",
        "operationId": "run_conversation_simulation_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Simulates_a_conversation_v1_convai_agents__agent_id__simulate_conversation_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentSimulatedChatTestResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "simulate_conversation"
      }
    },
    "/v1/convai/agents/{agent_id}/simulate-conversation/stream": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Simulates A Conversation (Stream)",
        "description": "Run a conversation between the agent and a simulated user and stream back the response. Response is streamed back as partial lists of messages that should be concatenated and once the conversation has complete a single final message with the conversation analysis will be sent.",
        "operationId": "run_conversation_simulation_route_stream",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Simulates_a_conversation__Stream__v1_convai_agents__agent_id__simulate_conversation_stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "agents"
        ],
        "x-fern-sdk-method-name": "simulate_conversation_stream"
      }
    },
    "/v1/convai/test-evaluation-criteria": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Test Evaluation Criteria",
        "description": "Evaluate the given criteria on a conversation",
        "operationId": "test_evaluation_criteria_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Test_evaluation_criteria_v1_convai_test_evaluation_criteria_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/ConversationHistoryEvaluationCriteriaResultCommonModel"
                  },
                  "title": "Response Test Evaluation Criteria V1 Convai Test Evaluation Criteria Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/agent-testing/create": {
      "post": {
        "summary": "Create Agent Response Test",
        "description": "Creates a new agent response test.",
        "operationId": "create_agent_response_test_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUnitTestRequest",
                "description": "Create Chat Response Test Request Information"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUnitTestResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/agent-testing/{test_id}": {
      "get": {
        "summary": "Get Agent Response Test By Id",
        "description": "Gets an agent response test by ID.",
        "operationId": "get_agent_response_test_route",
        "parameters": [
          {
            "name": "test_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a chat response test. This is returned on test creation.",
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "embed": true,
              "title": "Test Id"
            },
            "description": "The id of a chat response test. This is returned on test creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitTestResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Agent Response Test",
        "description": "Updates an agent response test by ID.",
        "operationId": "update_agent_response_test_route",
        "parameters": [
          {
            "name": "test_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a chat response test. This is returned on test creation.",
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "embed": true,
              "title": "Test Id"
            },
            "description": "The id of a chat response test. This is returned on test creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUnitTestRequest",
                "description": "Agent test to update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnitTestResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Agent Response Test",
        "description": "Deletes an agent response test by ID.",
        "operationId": "delete_chat_response_test_route",
        "parameters": [
          {
            "name": "test_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a chat response test. This is returned on test creation.",
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "embed": true,
              "title": "Test Id"
            },
            "description": "The id of a chat response test. This is returned on test creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/agent-testing/summaries": {
      "post": {
        "summary": "Get Agent Response Test Summaries By Ids",
        "description": "Gets multiple agent response tests by their IDs. Returns a dictionary mapping test IDs to test summaries.",
        "operationId": "get_agent_response_tests_summaries_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListTestsByIdsRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTestsSummariesByIdsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/agent-testing": {
      "get": {
        "summary": "List Agent Response Tests",
        "description": "Lists all agent response tests with pagination support and optional search filtering.",
        "operationId": "list_chat_response_tests_route",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many Tests to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many Tests to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search query to filter tests by name.",
              "title": "Search"
            },
            "description": "Search query to filter tests by name."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTestsPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/agents/{agent_id}/run-tests": {
      "post": {
        "summary": "Run Tests On The Agent",
        "description": "Run selected tests on the agent with provided configuration. If the agent configuration is provided, it will be used to override default agent configuration.",
        "operationId": "run_agent_test_suite_route",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Agent Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunAgentTestsRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTestSuiteInvocationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/test-invocations/{test_invocation_id}": {
      "get": {
        "summary": "Get Test Invocation",
        "description": "Gets a test invocation by ID.",
        "operationId": "get_test_invocation_route",
        "parameters": [
          {
            "name": "test_invocation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a test invocation. This is returned when tests are run.",
              "embed": true,
              "title": "Test Invocation Id"
            },
            "description": "The id of a test invocation. This is returned when tests are run."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTestSuiteInvocationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/test-invocations/{test_invocation_id}/resubmit": {
      "post": {
        "summary": "Resubmit Tests",
        "description": "Resubmits specific test runs from a test invocation.",
        "operationId": "resubmit_tests_route",
        "parameters": [
          {
            "name": "test_invocation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a test invocation. This is returned when tests are run.",
              "embed": true,
              "title": "Test Invocation Id"
            },
            "description": "The id of a test invocation. This is returned when tests are run."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResubmitTestsRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/conversations": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Conversations",
        "description": "Get all conversations of agents that user owns. With option to restrict to a specific agent.",
        "operationId": "get_conversation_histories_route",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The id of the agent you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            },
            "description": "The id of the agent you're taking the action on."
          },
          {
            "name": "call_successful",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/EvaluationSuccessResult"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The result of the success evaluation",
              "examples": [
                "success"
              ],
              "title": "Call Successful"
            },
            "description": "The result of the success evaluation"
          },
          {
            "name": "call_start_before_unix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Unix timestamp (in seconds) to filter conversations up to this start date.",
              "title": "Call Start Before Unix"
            },
            "description": "Unix timestamp (in seconds) to filter conversations up to this start date."
          },
          {
            "name": "call_start_after_unix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Unix timestamp (in seconds) to filter conversations after to this start date.",
              "title": "Call Start After Unix"
            },
            "description": "Unix timestamp (in seconds) to filter conversations after to this start date."
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter conversations by the user ID who initiated them.",
              "title": "User Id"
            },
            "description": "Filter conversations by the user ID who initiated them."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many conversations to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many conversations to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "summary_mode",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "exclude",
                "include"
              ],
              "type": "string",
              "description": "Whether to include transcript summaries in the response.",
              "default": "exclude",
              "title": "Summary Mode"
            },
            "description": "Whether to include transcript summaries in the response."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConversationsPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/conversations/{conversation_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Conversation Details",
        "description": "Get the details of a particular conversation",
        "operationId": "get_conversation_history_route",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the conversation you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Conversation Id"
            },
            "description": "The id of the conversation you're taking the action on."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConversationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Conversation",
        "description": "Delete a particular conversation",
        "operationId": "delete_conversation_route",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the conversation you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Conversation Id"
            },
            "description": "The id of the conversation you're taking the action on."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/convai/conversations/{conversation_id}/audio": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Conversation Audio",
        "description": "Get the audio recording of a particular conversation",
        "operationId": "get_conversation_audio_route",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the conversation you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Conversation Id"
            },
            "description": "The id of the conversation you're taking the action on."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations",
          "audio"
        ],
        "x-fern-sdk-method-name": "get",
        "x-fern-streaming": true
      }
    },
    "/v1/convai/conversations/{conversation_id}/user-audio": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Conversation User Audio",
        "description": "Get the user audio recording of a particular conversation",
        "operationId": "get_conversation_user_audio_route",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the conversation you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Conversation Id"
            },
            "description": "The id of the conversation you're taking the action on."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations",
          "audio"
        ],
        "x-fern-sdk-method-name": "get_user_audio",
        "x-fern-streaming": true
      }
    },
    "/v1/convai/conversations/{conversation_id}/response-audio": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Conversation Response Audio",
        "description": "Get the response audio recording of a particular conversation",
        "operationId": "get_conversation_response_audio_route",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the conversation you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Conversation Id"
            },
            "description": "The id of the conversation you're taking the action on."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations",
          "audio"
        ],
        "x-fern-sdk-method-name": "get_response_audio",
        "x-fern-streaming": true
      }
    },
    "/v1/convai/conversations/{conversation_id}/feedback": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Send Conversation Feedback",
        "description": "Send the feedback for the given conversation",
        "operationId": "post_conversation_feedback_route",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the conversation you're taking the action on.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Conversation Id"
            },
            "description": "The id of the conversation you're taking the action on."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations",
          "feedback"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/convai/conversations/ask-ai": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Ask Ai About Conversations",
        "description": "Ask AI to analyze conversation history and answer questions about it",
        "operationId": "ask_ai_about_conversations_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AskAIRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AskAIResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "conversations"
        ],
        "x-fern-sdk-method-name": "ask_ai"
      }
    },
    "/v1/convai/phone-numbers": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Import Phone Number",
        "description": "Import Phone Number from provider configuration (Twilio or SIP trunk)",
        "operationId": "create_phone_number_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/CreateTwilioPhoneNumberRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CreateSIPTrunkPhoneNumberRequestV2"
                  }
                ],
                "description": "Create Phone Request Information",
                "title": "Phone Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePhoneNumberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "phone_numbers"
        ],
        "x-fern-sdk-method-name": "create"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "List Phone Numbers",
        "description": "Retrieve all Phone Numbers",
        "operationId": "list_phone_numbers_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/GetPhoneNumberTwilioResponseModel"
                      },
                      {
                        "$ref": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "provider",
                      "mapping": {
                        "twilio": "#/components/schemas/GetPhoneNumberTwilioResponseModel",
                        "sip_trunk": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                      }
                    }
                  },
                  "title": "Response List Phone Numbers V1 Convai Phone Numbers Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "phone_numbers"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/phone-numbers/{phone_number_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Phone Number",
        "description": "Retrieve Phone Number details by ID",
        "operationId": "get_phone_number_route",
        "parameters": [
          {
            "name": "phone_number_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "embed": true,
              "title": "Phone Number Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetPhoneNumberTwilioResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "provider",
                    "mapping": {
                      "twilio": "#/components/schemas/GetPhoneNumberTwilioResponseModel",
                      "sip_trunk": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                    }
                  },
                  "title": "Response Get Phone Number V1 Convai Phone Numbers  Phone Number Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "phone_numbers"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Phone Number",
        "description": "Delete Phone Number by ID",
        "operationId": "delete_phone_number_route",
        "parameters": [
          {
            "name": "phone_number_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "embed": true,
              "title": "Phone Number Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "phone_numbers"
        ],
        "x-fern-sdk-method-name": "delete"
      },
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Phone Number",
        "description": "Update Phone Number details by ID",
        "operationId": "update_phone_number_route",
        "parameters": [
          {
            "name": "phone_number_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of an agent. This is returned on agent creation.",
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "embed": true,
              "title": "Phone Number Id"
            },
            "description": "The id of an agent. This is returned on agent creation."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePhoneNumberRequest",
                "description": "Patch Phone Request Information"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetPhoneNumberTwilioResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "provider",
                    "mapping": {
                      "twilio": "#/components/schemas/GetPhoneNumberTwilioResponseModel",
                      "sip_trunk": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                    }
                  },
                  "title": "Response Update Phone Number V1 Convai Phone Numbers  Phone Number Id  Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "phone_numbers"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/convai/util/translate": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Translate Text",
        "description": "Use OpenAI to translate text from one language to multiple other languages.",
        "operationId": "generate_translations_route",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Translate_text_v1_convai_util_translate_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Translate Text V1 Convai Util Translate Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/llm-usage/calculate": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Calculate Expected Llm Usage",
        "description": "Returns a list of LLM models and the expected cost for using them based on the provided values.",
        "operationId": "get_public_llm_expected_cost_calculation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LLMUsageCalculatorPublicRequestModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LLMUsageCalculatorResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "llm_usage"
        ],
        "x-fern-sdk-method-name": "calculate"
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/v1/convai/cleanup/remove-conversation-data": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Remove Conversation Data After Retention Date",
        "operationId": "remove_conversation_data_after_retention_date",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_remove_conversation_data_after_retention_date_c185a1ff66f4a1feaeb19931d4be4175_v1_convai_cleanup_remove_conversation_data_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/v1/convai/cleanup/remove-conversation-internal-logs": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Remove Conversation Internal Logs",
        "operationId": "remove_conversation_internal_logs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_remove_conversation_internal_logs_c185a1ff66f4a1feaeb19931d4be4175_v1_convai_cleanup_remove_conversation_internal_logs_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/analytics/calls": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Call Analytics",
        "description": "Get the calls for a given period.",
        "operationId": "get_call_analytics",
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The id of an agent to restrict the analytics to.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            },
            "description": "The id of an agent to restrict the analytics to."
          },
          {
            "name": "date_range",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DateRange",
              "description": "The date range to restrict the analytics to.",
              "examples": [
                "month"
              ],
              "default": "day"
            },
            "description": "The date range to restrict the analytics to."
          },
          {
            "name": "time_zone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The IANA Time Zone Identifier to use for the analytics.",
              "examples": [
                "Europe/Berlin"
              ],
              "default": "UTC",
              "title": "Time Zone"
            },
            "description": "The IANA Time Zone Identifier to use for the analytics."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallAnalyticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/analytics/language": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Language Analytics",
        "description": "Get the language analytics for a given period.",
        "operationId": "get_language_analytics",
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The id of an agent to restrict the analytics to.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            },
            "description": "The id of an agent to restrict the analytics to."
          },
          {
            "name": "date_range",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DateRange",
              "description": "The date range to restrict the analytics to.",
              "examples": [
                "month"
              ],
              "default": "day"
            },
            "description": "The date range to restrict the analytics to."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLanguageAnalyticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/analytics/criteria": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Evaluation Analytics",
        "description": "Get the analytics for a given evaluation criteria.",
        "operationId": "get_criteria_analytics",
        "parameters": [
          {
            "name": "criteria_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Evaluation id as configured in the agent settings.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Criteria Id"
            },
            "description": "Evaluation id as configured in the agent settings."
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The id of an agent to restrict the analytics to.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            },
            "description": "The id of an agent to restrict the analytics to."
          },
          {
            "name": "date_range",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DateRange",
              "description": "The date range to restrict the analytics to.",
              "examples": [
                "month"
              ],
              "default": "day"
            },
            "description": "The date range to restrict the analytics to."
          },
          {
            "name": "time_zone",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The IANA Time Zone Identifier to use for the analytics.",
              "examples": [
                "Europe/Berlin"
              ],
              "default": "UTC",
              "title": "Time Zone"
            },
            "description": "The IANA Time Zone Identifier to use for the analytics."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCriteriaAnalyticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/analytics/data-collection": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Data Collection Analytics",
        "description": "Get the analytics for a given data collection.",
        "operationId": "get_data_collection_analytics",
        "parameters": [
          {
            "name": "data_collection_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Evaluation id as configured in the agent settings.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Data Collection Id"
            },
            "description": "Evaluation id as configured in the agent settings."
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The id of an agent to restrict the analytics to.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            },
            "description": "The id of an agent to restrict the analytics to."
          },
          {
            "name": "date_range",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DateRange",
              "description": "The date range to restrict the analytics to.",
              "examples": [
                "month"
              ],
              "default": "day"
            },
            "description": "The date range to restrict the analytics to."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDataCollectionAnalyticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/analytics/agents": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Agents Analytics",
        "description": "Get the top 3 agent analytics for a given period.",
        "operationId": "get_agents_analytics",
        "parameters": [
          {
            "name": "date_range",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DateRange",
              "description": "The date range to restrict the analytics to.",
              "examples": [
                "month"
              ],
              "default": "day"
            },
            "description": "The date range to restrict the analytics to."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentsAnalyticsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/analytics/live-count": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Live Count",
        "description": "Get the live count of the ongoing conversations.",
        "operationId": "get_live_count",
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The id of an agent to restrict the analytics to.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            },
            "description": "The id of an agent to restrict the analytics to."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLiveCountResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/analytics/criteria/options": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Available Evaluation Criteria",
        "description": "Get all evaluation criteria used in the given period.",
        "operationId": "get_criteria",
        "parameters": [
          {
            "name": "date_range",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DateRange",
              "description": "The date range to restrict the analytics to.",
              "examples": [
                "month"
              ],
              "default": "day"
            },
            "description": "The date range to restrict the analytics to."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Get Available Evaluation Criteria V1 Convai Analytics Criteria Options Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/analytics/data-collection/options": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Available Data Collection",
        "description": "Get all data collection used in the given period.",
        "operationId": "get_data_collection",
        "parameters": [
          {
            "name": "date_range",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DateRange",
              "description": "The date range to restrict the analytics to.",
              "examples": [
                "month"
              ],
              "default": "day"
            },
            "description": "The date range to restrict the analytics to."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Get Available Data Collection V1 Convai Analytics Data Collection Options Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/knowledge-base": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Add To Knowledge Base",
        "description": "Uploads a file or reference a webpage to use as part of the shared knowledge base",
        "operationId": "add_documentation_to_knowledge_base",
        "deprecated": true,
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_to_knowledge_base_v1_convai_knowledge_base_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "add_to_knowledge_base"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Knowledge Base List",
        "description": "Get a list of available knowledge base documents",
        "operationId": "get_knowledge_base_list_route",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If specified, the endpoint returns only such knowledge base documents whose names start with this string.",
              "title": "Search"
            },
            "description": "If specified, the endpoint returns only such knowledge base documents whose names start with this string."
          },
          {
            "name": "show_only_owned_documents",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set to true, the endpoint will return only documents owned by you (and not shared from somebody else).",
              "default": false,
              "title": "Show Only Owned Documents"
            },
            "description": "If set to true, the endpoint will return only documents owned by you (and not shared from somebody else)."
          },
          {
            "name": "types",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KnowledgeBaseDocumentType"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "If present, the endpoint will return only documents of the given types.",
              "title": "Types"
            },
            "description": "If present, the endpoint will return only documents of the given types."
          },
          {
            "name": "use_typesense",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set to true, the endpoint will use typesense DB to search for the documents).",
              "default": false,
              "title": "Use Typesense"
            },
            "description": "If set to true, the endpoint will use typesense DB to search for the documents)."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKnowledgeBaseListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/knowledge-base/url": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Url Document",
        "description": "Create a knowledge base document generated by scraping the given webpage.",
        "operationId": "create_url_document_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_URL_document_v1_convai_knowledge_base_url_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "create_from_url"
      }
    },
    "/v1/convai/knowledge-base/file": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create File Document",
        "description": "Create a knowledge base document generated form the uploaded file.",
        "operationId": "create_file_document_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_file_document_v1_convai_knowledge_base_file_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "create_from_file"
      }
    },
    "/v1/convai/knowledge-base/text": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Text Document",
        "description": "Create a knowledge base document containing the provided text.",
        "operationId": "create_text_document_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_text_document_v1_convai_knowledge_base_text_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "create_from_text"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}": {
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Document",
        "description": "Update the name of a document",
        "operationId": "update_document_route",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_document_v1_convai_knowledge_base__documentation_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseURLResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseFileResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseTextResponseModel"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "url": "#/components/schemas/GetKnowledgeBaseURLResponseModel",
                      "file": "#/components/schemas/GetKnowledgeBaseFileResponseModel",
                      "text": "#/components/schemas/GetKnowledgeBaseTextResponseModel"
                    }
                  },
                  "title": "Response Update Document V1 Convai Knowledge Base  Documentation Id  Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Documentation From Knowledge Base",
        "description": "Get details about a specific documentation making up the agent's knowledge base",
        "operationId": "get_documentation_from_knowledge_base",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "agent_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "",
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseURLResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseFileResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/GetKnowledgeBaseTextResponseModel"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "url": "#/components/schemas/GetKnowledgeBaseURLResponseModel",
                      "file": "#/components/schemas/GetKnowledgeBaseFileResponseModel",
                      "text": "#/components/schemas/GetKnowledgeBaseTextResponseModel"
                    }
                  },
                  "title": "Response Get Documentation From Knowledge Base V1 Convai Knowledge Base  Documentation Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Knowledge Base Document",
        "description": "Delete a document from the knowledge base",
        "operationId": "delete_knowledge_base_document",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set to true, the document will be deleted regardless of whether it is used by any agents and it will be deleted from the dependent agents.",
              "default": false,
              "title": "Force"
            },
            "description": "If set to true, the document will be deleted regardless of whether it is used by any agents and it will be deleted from the dependent agents."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/rag-index": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Compute Rag Index.",
        "description": "In case the document is not RAG indexed, it triggers rag indexing task, otherwise it just returns the current status.",
        "operationId": "rag_index_status",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RAGIndexRequestModel",
                "description": "Payload for RAG index status endpoint."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RAGDocumentIndexResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "document"
        ],
        "x-fern-sdk-method-name": "compute_rag_index"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Rag Indexes Of The Specified Knowledgebase Document.",
        "description": "Provides information about all RAG indexes of the specified knowledgebase document.",
        "operationId": "get_rag_indexes",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RAGDocumentIndexesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_document_rag_indexes"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/rag-index/{rag_index_id}": {
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Rag Index.",
        "description": "Delete RAG index for the knowledgebase document.",
        "operationId": "delete_rag_index",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "rag_index_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of RAG index of document from the knowledge base.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Rag Index Id"
            },
            "description": "The id of RAG index of document from the knowledge base."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RAGDocumentIndexResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "delete_document_rag_index"
      }
    },
    "/v1/convai/knowledge-base/rag-index": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Rag Index Overview.",
        "description": "Provides total size and other information of RAG indexes used by knowledgebase documents",
        "operationId": "get_rag_index_overview",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RAGIndexOverviewResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "rag_index_overview"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/dependent-agents": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Dependent Agents List",
        "description": "Get a list of agents depending on this knowledge base document",
        "operationId": "get_knowledge_base_dependent_agents",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKnowledgeBaseDependentAgentsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "get_agents"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/content": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Document Content",
        "description": "Get the entire content of a document from the knowledge base",
        "operationId": "get_knowledge_base_content",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Streaming document content",
            "content": {
              "text/html": {

              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents"
        ],
        "x-fern-sdk-method-name": "get_content",
        "x-fern-sdk-streaming": true
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/chunk/{chunk_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Documentation Chunk From Knowledge Base",
        "description": "Get details about a specific documentation part used by RAG.",
        "operationId": "get_documentation_chunk_from_knowledge_base",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "embed": true,
              "title": "Documentation Id"
            },
            "description": "The id of a document from the knowledge base. This is returned on document addition."
          },
          {
            "name": "chunk_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of a document RAG chunk from the knowledge base.",
              "examples": [1],
              "embed": true,
              "title": "Chunk Id"
            },
            "description": "The id of a document RAG chunk from the knowledge base."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KnowledgeBaseDocumentChunkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "knowledge_base",
          "documents",
          "chunk"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/convai/tools": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Add Tool",
        "description": "Add a new tool to the available tools in the workspace.",
        "operationId": "add_tool_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolRequestModel",
                "description": "A tool that an agent can provide to LLM."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "tools"
        ],
        "x-fern-sdk-method-name": "create"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Tools",
        "description": "Get all available tools available in the workspace.",
        "operationId": "get_tools_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "tools"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/tools/{tool_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Tool",
        "description": "Get tool that is available in the workspace.",
        "operationId": "get_tool_route",
        "parameters": [
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the requested tool.",
              "title": "Tool Id"
            },
            "description": "ID of the requested tool."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "tools"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Tool",
        "description": "Update tool that is available in the workspace.",
        "operationId": "update_tool_route",
        "parameters": [
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the requested tool.",
              "title": "Tool Id"
            },
            "description": "ID of the requested tool."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToolRequestModel",
                "description": "A tool that an agent can provide to LLM."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToolResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "tools"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Tool",
        "description": "Delete tool from the workspace.",
        "operationId": "delete_tool_route",
        "parameters": [
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the requested tool.",
              "title": "Tool Id"
            },
            "description": "ID of the requested tool."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "tools"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/convai/tools/{tool_id}/dependent-agents": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Dependent Agents List",
        "description": "Get a list of agents depending on this tool",
        "operationId": "get_tool_dependent_agents_route",
        "parameters": [
          {
            "name": "tool_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the requested tool.",
              "title": "Tool Id"
            },
            "description": "ID of the requested tool."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetToolDependentAgentsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "tools"
        ],
        "x-fern-sdk-method-name": "get_dependent_agents"
      }
    },
    "/v1/convai/settings": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Convai Settings",
        "description": "Retrieve Convai settings for the workspace",
        "operationId": "get_settings_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAISettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "settings"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Convai Settings",
        "description": "Update Convai settings for the workspace",
        "operationId": "update_settings_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchConvAISettingsRequest",
                "description": "Convai settings to update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAISettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "settings"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/convai/settings/dashboard": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Convai Dashboard Settings",
        "description": "Retrieve Convai dashboard settings for the workspace",
        "operationId": "get_dashboard_settings_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAIDashboardSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "dashboard",
          "settings"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Convai Dashboard Settings",
        "description": "Update Convai dashboard settings for the workspace",
        "operationId": "update_dashboard_settings_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchConvAIDashboardSettingsRequest",
                "description": "Convai dashboard settings to update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAIDashboardSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "dashboard",
          "settings"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/convai/secrets": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Convai Workspace Secret",
        "description": "Create a new secret for the workspace",
        "operationId": "create_secret_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostWorkspaceSecretRequest",
                "description": "Secret to create"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostWorkspaceSecretResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "secrets"
        ],
        "x-fern-sdk-method-name": "create"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Convai Workspace Secrets",
        "description": "Get all workspace secrets for the user",
        "operationId": "get_secrets_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkspaceSecretsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "secrets"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/secrets/{secret_id}": {
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Convai Workspace Secret",
        "description": "Delete a workspace secret if it's not in use",
        "operationId": "delete_secret_route",
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Secret Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "secrets"
        ],
        "x-fern-sdk-method-name": "delete"
      },
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Convai Workspace Secret",
        "description": "Update an existing secret for the workspace",
        "operationId": "update_secret_route",
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Secret Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchWorkspaceSecretRequest",
                "description": "Secret data to update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostWorkspaceSecretResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "update_secret"
      }
    },
    "/v1/convai/batch-calling/submit": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Submit A Batch Call Request.",
        "description": "Submit a batch call request to schedule calls for multiple recipients.",
        "operationId": "create_batch_call",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Submit_a_batch_call_request__v1_convai_batch_calling_submit_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchCallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "batch_calls"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/c185a1ff66f4a1feaeb19931d4be4175/convai/batch-calling/scheduler": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Trigger The Batch Calling Scheduler.",
        "description": "Trigger the batch calling scheduler to process pending batch calls.",
        "operationId": "trigger_batch_calling_scheduler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Trigger_the_batch_calling_scheduler__v1_c185a1ff66f4a1feaeb19931d4be4175_convai_batch_calling_scheduler_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/batch-calling/workspace": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get All Batch Calls For A Workspace.",
        "description": "Get all batch calls for the current workspace.",
        "operationId": "get_workspace_batch_calls",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "last_doc",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Last Doc"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceBatchCallsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "batch_calls"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/batch-calling/{batch_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get A Batch Call By Id.",
        "description": "Get detailed information about a batch call including all recipients.",
        "operationId": "get_batch_call",
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Batch Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchCallDetailedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "batch_calls"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/convai/batch-calling/{batch_id}/cancel": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Cancel A Batch Call.",
        "description": "Cancel a running batch call and set all recipients to cancelled status.",
        "operationId": "cancel_batch_call",
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Batch Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchCallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "batch_calls"
        ],
        "x-fern-sdk-method-name": "cancel"
      }
    },
    "/v1/convai/batch-calling/{batch_id}/retry": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Retry A Batch Call.",
        "description": "Retry a batch call, calling failed and no-response recipients again.",
        "operationId": "retry_batch_call",
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Batch Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchCallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "batch_calls"
        ],
        "x-fern-sdk-method-name": "retry"
      }
    },
    "/v1/convai/sip-trunk/outbound-call": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Handle An Outbound Call Via Sip Trunk",
        "description": "Handle an outbound call via SIP trunk",
        "operationId": "handle_sip_trunk_outbound_call",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Handle_an_outbound_call_via_SIP_trunk_v1_convai_sip_trunk_outbound_call_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SIPTrunkOutboundCallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "sip_trunk"
        ],
        "x-fern-sdk-method-name": "outbound_call"
      }
    },
    "/v1/convai/mcp-servers": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Mcp Server",
        "description": "Create a new MCP server configuration in the workspace.",
        "operationId": "create_mcp_server_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCPServerRequestModel",
                "description": "Configuration for an MCP Server."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPServerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers"
        ],
        "x-fern-sdk-method-name": "create"
      },
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "List Mcp Servers",
        "description": "Retrieve all MCP server configurations available in the workspace.",
        "operationId": "list_mcp_servers_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPServersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/mcp-servers/{mcp_server_id}": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Get Mcp Server",
        "description": "Retrieve a specific MCP server configuration from the workspace.",
        "operationId": "get_mcp_route",
        "parameters": [
          {
            "name": "mcp_server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the MCP Server.",
              "title": "Mcp Server Id"
            },
            "description": "ID of the MCP Server."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPServerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Mcp Server",
        "description": "Delete a specific MCP server configuration from the workspace.",
        "operationId": "delete_mcp_server_route",
        "parameters": [
          {
            "name": "mcp_server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the MCP Server.",
              "title": "Mcp Server Id"
            },
            "description": "ID of the MCP Server."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/convai/mcp-servers/{mcp_server_id}/tools": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "List Mcp Server Tools",
        "description": "Retrieve all tools available for a specific MCP server configuration.",
        "operationId": "list_mcp_server_tools_route",
        "parameters": [
          {
            "name": "mcp_server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the MCP Server.",
              "title": "Mcp Server Id"
            },
            "description": "ID of the MCP Server."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMCPToolsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers",
          "tools"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/mcp-servers/{mcp_server_id}/approval-policy": {
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Mcp Server Approval Policy",
        "description": "Update the approval policy configuration for an MCP server.",
        "operationId": "update_mcp_server_approval_policy_route",
        "parameters": [
          {
            "name": "mcp_server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the MCP Server.",
              "title": "Mcp Server Id"
            },
            "description": "ID of the MCP Server."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCPApprovalPolicyUpdateRequestModel",
                "description": "Approval policy update for an MCP Server."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPServerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers",
          "approval_policy"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/convai/mcp-servers/{mcp_server_id}/tool-approvals": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Mcp Server Tool Approval",
        "description": "Add approval for a specific MCP tool when using per-tool approval mode.",
        "operationId": "add_mcp_server_tool_approval_route",
        "parameters": [
          {
            "name": "mcp_server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the MCP Server.",
              "title": "Mcp Server Id"
            },
            "description": "ID of the MCP Server."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCPToolAddApprovalRequestModel",
                "description": "Tool approval details to add for an MCP Server."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPServerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers",
          "tool_approvals"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/convai/mcp-servers/{mcp_server_id}/tool-approvals/{tool_name}": {
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Mcp Server Tool Approval",
        "description": "Remove approval for a specific MCP tool when using per-tool approval mode.",
        "operationId": "remove_mcp_server_tool_approval_route",
        "parameters": [
          {
            "name": "mcp_server_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the MCP Server.",
              "title": "Mcp Server Id"
            },
            "description": "ID of the MCP Server."
          },
          {
            "name": "tool_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the MCP tool to remove approval for.",
              "title": "Tool Name"
            },
            "description": "Name of the MCP tool to remove approval for."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MCPServerResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "mcp_servers",
          "tool_approvals"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/convai/integrations": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "List Integrations",
        "description": "Retrieve all available integrations and their connection status.",
        "operationId": "list_integration_connections_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationConnectionResponseModel"
                  },
                  "title": "Response List Integrations V1 Convai Integrations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "integrations"
        ],
        "x-fern-sdk-method-name": "list"
      },
      "delete": {
        "summary": "Disconnect All Integrations",
        "description": "Disconnect all integration connections for the current user.",
        "operationId": "disconnect_all_integration_connections_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "integrations"
        ],
        "x-fern-sdk-method-name": "disconnect_all"
      },
      "post": {
        "summary": "Connect Integration",
        "description": "Connect a new integration to the user's account.",
        "operationId": "connect_integration_route",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Connect_integration_v1_convai_integrations_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ConnectIntegrationResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/ConnectIntegrationOAuthResponseModel"
                    }
                  ],
                  "title": "Response Connect Integration V1 Convai Integrations Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "integrations"
        ],
        "x-fern-sdk-method-name": "connect"
      }
    },
    "/v1/convai/integrations/{integration_library_service}/tools": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "List Integration Tools",
        "description": "List tools available for a specific integration.",
        "operationId": "list_integration_tools_route",
        "parameters": [
          {
            "name": "integration_library_service",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IntegrationLibraryServices",
              "description": "The unique identifier of the integration library service.",
              "examples": [
                "gcalendar",
                "gmail",
                "elevenlabs"
              ]
            },
            "description": "The unique identifier of the integration library service."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMCPToolsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "integrations",
          "tools"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/integrations/{integration_library_service}/prompts": {
      "get": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "List Integration Prompts",
        "description": "List the prompts available in an integration.",
        "operationId": "list_integration_prompts_route",
        "parameters": [
          {
            "name": "integration_library_service",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IntegrationLibraryServices",
              "description": "The unique identifier of the integration library service.",
              "examples": [
                "gcalendar",
                "gmail",
                "elevenlabs"
              ]
            },
            "description": "The unique identifier of the integration library service."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMCPPromptsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "integrations",
          "prompts"
        ],
        "x-fern-sdk-method-name": "list"
      }
    },
    "/v1/convai/integrations/{integration_library_service}/prompts/{prompt_name}/build": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Build An Integration Prompt",
        "description": "Build a prompt from an integration with optional inputs.",
        "operationId": "build_integration_prompt_route",
        "parameters": [
          {
            "name": "integration_library_service",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IntegrationLibraryServices",
              "description": "The unique identifier of the integration library service.",
              "examples": [
                "gcalendar",
                "gmail",
                "elevenlabs"
              ]
            },
            "description": "The unique identifier of the integration library service."
          },
          {
            "name": "prompt_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The name of the prompt to execute",
              "examples": [
                "summarize_email",
                "generate_response"
              ],
              "title": "Prompt Name"
            },
            "description": "The name of the prompt to execute"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Input parameters for the prompt",
                "examples": [
                  {
                    "email_content": "Hello world",
                    "tone": "professional"
                  }
                ],
                "title": "Inputs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildMCPPromptResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "integrations",
          "prompts"
        ],
        "x-fern-sdk-method-name": "build"
      }
    },
    "/v1/convai/integrations/{integration_library_service}": {
      "delete": {
        "summary": "Disconnect Integration",
        "description": "Disconnect an integration from the account.",
        "operationId": "disconnect_integration_connection_route",
        "parameters": [
          {
            "name": "integration_library_service",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IntegrationLibraryServices",
              "description": "The unique identifier of the integration library service.",
              "examples": [
                "gcalendar",
                "gmail",
                "elevenlabs"
              ]
            },
            "description": "The unique identifier of the integration library service."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "integrations"
        ],
        "x-fern-sdk-method-name": "disconnect"
      }
    },
    "/v1/convai/integrations/oauth/exchange/{oauth_provider}": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Complete Oauth Exchange",
        "description": "Complete the OAuth authorization flow for an integration.",
        "operationId": "integration_library_service_oauth_exchange_route",
        "parameters": [
          {
            "name": "oauth_provider",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/IntegrationLibraryOAuthProviders"
                },
                {
                  "$ref": "#/components/schemas/IntegrationLibraryExternalMCPAuthorizationProviders"
                }
              ],
              "description": "The OAuth provider, e.g., 'google', 'linear'.",
              "title": "Oauth Provider"
            },
            "description": "The OAuth provider, e.g., 'google', 'linear'."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OAuthExchangeRequestModel",
                "description": "The OAuth exchange request body."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuthExchangeResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/convai/integrations/{integration_library_service}/approval-policy": {
      "patch": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Update Integration Approval Policy",
        "description": "Update the approval policy configuration for an integration.",
        "operationId": "update_integration_approval_policy_route",
        "parameters": [
          {
            "name": "integration_library_service",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IntegrationLibraryServices",
              "description": "The unique identifier of the integration library service.",
              "examples": [
                "gcalendar",
                "gmail",
                "elevenlabs"
              ]
            },
            "description": "The unique identifier of the integration library service."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCPApprovalPolicyUpdateRequestModel",
                "description": "Approval policy update for an integration."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationConnectionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "integrations",
          "approval_policy"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/convai/integrations/{integration_library_service}/tool-approvals": {
      "post": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Create Integration Tool Approval",
        "description": "Add approval for a specific integration tool when using per-tool approval mode.",
        "operationId": "add_integration_tool_approval_route",
        "parameters": [
          {
            "name": "integration_library_service",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IntegrationLibraryServices",
              "description": "The unique identifier of the integration library service.",
              "examples": [
                "gcalendar",
                "gmail",
                "elevenlabs"
              ]
            },
            "description": "The unique identifier of the integration library service."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MCPToolAddApprovalRequestModel",
                "description": "Tool approval details to add for an integration."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationConnectionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "integrations",
          "tool_approvals"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/convai/integrations/{integration_library_service}/tool-approvals/{tool_name}": {
      "delete": {
        "tags": [
          "Conversational AI"
        ],
        "summary": "Delete Integration Tool Approval",
        "description": "Remove approval for a specific integration tool when using per-tool approval mode.",
        "operationId": "remove_integration_tool_approval_route",
        "parameters": [
          {
            "name": "integration_library_service",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IntegrationLibraryServices",
              "description": "The unique identifier of the integration library service.",
              "examples": [
                "gcalendar",
                "gmail",
                "elevenlabs"
              ]
            },
            "description": "The unique identifier of the integration library service."
          },
          {
            "name": "tool_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the tool to remove approval for.",
              "title": "Tool Name"
            },
            "description": "Name of the tool to remove approval for."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationConnectionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "conversational_ai",
          "integrations",
          "tool_approvals"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/voice-challenges/submissions": {
      "get": {
        "tags": [
          "voice-challenges"
        ],
        "summary": "Get User'S Voice Challenge Submissions",
        "description": "Retrieves all voice challenge submissions for the authenticated user.",
        "operationId": "Get_user_s_voice_challenge_submissions_v1_voice_challenges_submissions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/VoiceChallengeSubmissionResponseModel"
                  },
                  "type": "array",
                  "title": "Response Get User S Voice Challenge Submissions V1 Voice Challenges Submissions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "voice-challenges"
        ],
        "summary": "Submit A Voice Challenge",
        "description": "Submit a voice challenge",
        "operationId": "Submit_a_voice_challenge_v1_voice_challenges_submissions_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Submit_a_voice_challenge_v1_voice_challenges_submissions_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceChallengeSubmissionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/songs/{song_id}": {
      "get": {
        "tags": [
          "songs"
        ],
        "summary": "Get Song",
        "description": "Returns a song object by ID",
        "operationId": "Get_Song_v1_music_songs__song_id__get",
        "parameters": [
          {
            "name": "song_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The song_id of the song to get, delete, or get status updates for.",
              "title": "Song Id"
            },
            "description": "The song_id of the song to get, delete, or get status updates for."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SongResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "songs"
        ],
        "summary": "Delete Song",
        "description": "Deletes a song by ID",
        "operationId": "Delete_Song_v1_music_songs__song_id__delete",
        "parameters": [
          {
            "name": "song_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The song_id of the song to get, delete, or get status updates for.",
              "title": "Song Id"
            },
            "description": "The song_id of the song to get, delete, or get status updates for."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/songs": {
      "get": {
        "tags": [
          "songs"
        ],
        "summary": "Get User Songs",
        "description": "Returns all songs for a user with pagination",
        "operationId": "Get_User_Songs_v1_music_songs_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 9,
              "minimum": 0,
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Per Page"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SongLibraryPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/songs/{song_id}/status": {
      "get": {
        "tags": [
          "music-generation"
        ],
        "summary": "Get Music Generation Status (Sse)",
        "description": "Streams the status updates for a music generation task using Server-Sent Events (SSE).",
        "operationId": "Get_Music_Generation_Status__SSE__v1_music_songs__song_id__status_get",
        "parameters": [
          {
            "name": "song_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The song_id of the song to get, delete, or get status updates for.",
              "title": "Song Id"
            },
            "description": "The song_id of the song to get, delete, or get status updates for."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Stream of music generation status updates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SongStatusUpdateResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/songs/{song_id}/retry": {
      "put": {
        "tags": [
          "music-generation"
        ],
        "summary": "Retry Failed Song Generation",
        "description": "Retries a failed song generation",
        "operationId": "Retry_Failed_Song_Generation_v1_music_songs__song_id__retry_put",
        "parameters": [
          {
            "name": "song_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The song_id of the song to get, delete, or get status updates for.",
              "title": "Song Id"
            },
            "description": "The song_id of the song to get, delete, or get status updates for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/songs/{song_id}/sharing": {
      "patch": {
        "tags": [
          "songs"
        ],
        "summary": "Update Song Sharing",
        "description": "Updates the sharing configuration for a song",
        "operationId": "Update_Song_Sharing_v1_music_songs__song_id__sharing_patch",
        "parameters": [
          {
            "name": "song_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The song_id of the song to get, delete, or get status updates for.",
              "title": "Song Id"
            },
            "description": "The song_id of the song to get, delete, or get status updates for."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSongSharingRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SongResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/chats": {
      "post": {
        "tags": [
          "music-generation"
        ],
        "summary": "Create Music Chat",
        "description": "Start a new chat using a prompt.",
        "operationId": "Create_Music_Chat_v1_music_chats_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_Music_Chat_v1_music_chats_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "music-generation"
        ],
        "summary": "Get User Chats",
        "description": "Returns all music chats for a user with pagination",
        "operationId": "Get_User_Chats_v1_music_chats_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 9,
              "minimum": 0,
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Per Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatLibraryPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/chats/{chat_id}/turn": {
      "post": {
        "tags": [
          "music-generation"
        ],
        "summary": "Add New Turn To A Chat",
        "description": "Add a new turn to a chat.",
        "operationId": "Add_new_turn_to_a_chat_v1_music_chats__chat_id__turn_post",
        "parameters": [
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chat",
              "title": "Chat Id"
            },
            "description": "The ID of the chat"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_new_turn_to_a_chat_v1_music_chats__chat_id__turn_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTurnToChatResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/chats/{chat_id}": {
      "get": {
        "tags": [
          "music-generation"
        ],
        "summary": "Get Music Chat",
        "description": "Gets a music chat by ID",
        "operationId": "Get_Music_Chat_v1_music_chats__chat_id__get",
        "parameters": [
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chat to get",
              "title": "Chat Id"
            },
            "description": "The ID of the chat to get"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "music-generation"
        ],
        "summary": "Delete Music Chat",
        "description": "Deletes a music chat by ID",
        "operationId": "Delete_Music_Chat_v1_music_chats__chat_id__delete",
        "parameters": [
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The chat_id of the chat.",
              "title": "Chat Id"
            },
            "description": "The chat_id of the chat."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "music-generation"
        ],
        "summary": "Update Music Chat Metadata",
        "description": "Updates the metadata (title, cover art) of a music chat.",
        "operationId": "Update_Music_Chat_Metadata_v1_music_chats__chat_id__patch",
        "parameters": [
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The chat_id of the chat.",
              "title": "Chat Id"
            },
            "description": "The chat_id of the chat."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChatMetadataRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListedChatResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/chats/{chat_id}/switch-branch": {
      "patch": {
        "tags": [
          "music-generation"
        ],
        "summary": "Switch Branch",
        "description": "Switches the selected branch of a music chat",
        "operationId": "Switch_Branch_v1_music_chats__chat_id__switch_branch_patch",
        "parameters": [
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the chat to switch the branch of",
              "title": "Chat Id"
            },
            "description": "The ID of the chat to switch the branch of"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Switch_Branch_v1_music_chats__chat_id__switch_branch_patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwitchChatBranchResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/shared/songs/{song_id}": {
      "get": {
        "tags": [
          "songs"
        ],
        "summary": "Get Shared Song",
        "description": "Returns a publicly shared song by ID without authentication",
        "operationId": "Get_Shared_Song_v1_music_shared_songs__song_id__get",
        "parameters": [
          {
            "name": "song_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The song_id of the song to get, delete, or get status updates for.",
              "title": "Song Id"
            },
            "description": "The song_id of the song to get, delete, or get status updates for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedSongResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/compose-plan": {
      "post": {
        "tags": [
          "music-generation"
        ],
        "summary": "Generate Composition Plan",
        "description": "Generate a composition plan from a prompt.",
        "operationId": "Generate_Composition_Plan_v1_music_compose_plan_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_Composition_Plan_v1_music_compose_plan_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MusicPrompt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/generate-music-prompt": {
      "post": {
        "tags": [
          "music-generation"
        ],
        "summary": "Generate Music Prompt",
        "description": "Generate a music prompt from a prompt.",
        "operationId": "Generate_Music_Prompt_v1_music_generate_music_prompt_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_Music_Prompt_v1_music_generate_music_prompt_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MusicPrompt"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/compose": {
      "post": {
        "tags": [
          "music-generation"
        ],
        "summary": "Compose Music",
        "description": "Compose a song from a prompt or a composition plan.",
        "operationId": "Compose_Music_v1_music_compose_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Compose_Music_v1_music_compose_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/compose/stream": {
      "post": {
        "tags": [
          "music-generation"
        ],
        "summary": "Stream Composed Music",
        "description": "Stream a composed song from a prompt or a composition plan.",
        "operationId": "Stream_Composed_Music_v1_music_compose_stream_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_Composed_Music_v1_music_compose_stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/generate": {
      "post": {
        "tags": [
          "music-generation"
        ],
        "summary": "Generate Music",
        "description": "Generate a song from a prompt.",
        "operationId": "Generate_Music_v1_music_generate_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_Music_v1_music_generate_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/generate-async": {
      "post": {
        "tags": [
          "music-generation"
        ],
        "summary": "Generate Music Async",
        "description": "Starts a music generation task based on the given parameters. The song is saved to the database, and its initial state is returned. Use the GET /v1/music/songs/{song_id}/status endpoint to track progress.",
        "operationId": "Generate_Music_Async_v1_music_generate_async_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_Music_Async_v1_music_generate_async_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SongResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/music/internal/remix": {
      "post": {
        "tags": [
          "music-generation"
        ],
        "summary": "Remix A Song",
        "description": "Remix a song.",
        "operationId": "Remix_a_song_v1_music_internal_remix_post",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "pcm_48000",
                "ulaw_8000",
                "alaw_8000",
                "opus_48000_32",
                "opus_48000_64",
                "opus_48000_96",
                "opus_48000_128",
                "opus_48000_192"
              ],
              "type": "string",
              "title": "Output format of the generated audio.",
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "default": "mp3_44100_128"
            },
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Remix_a_song_v1_music_internal_remix_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/c185a1ff66f4a1feaeb19931d4be4175/queue/tick": {
      "post": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Process Items Endpoint",
        "operationId": "process_items_endpoint_v1_direct_publishing_c185a1ff66f4a1feaeb19931d4be4175_queue_tick_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_process_items_endpoint_v1_direct_publishing_c185a1ff66f4a1feaeb19931d4be4175_queue_tick_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/c185a1ff66f4a1feaeb19931d4be4175/queue/process-item/{item_id}": {
      "post": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Process Item Endpoint",
        "operationId": "process_item_endpoint_v1_direct_publishing_c185a1ff66f4a1feaeb19931d4be4175_queue_process_item__item_id__post",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Item Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_process_item_endpoint_v1_direct_publishing_c185a1ff66f4a1feaeb19931d4be4175_queue_process_item__item_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/c185a1ff66f4a1feaeb19931d4be4175/queue/restart-killed-items": {
      "post": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Restart Killed Items Endpoint",
        "operationId": "restart_killed_items_endpoint_v1_direct_publishing_c185a1ff66f4a1feaeb19931d4be4175_queue_restart_killed_items_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_restart_killed_items_endpoint_v1_direct_publishing_c185a1ff66f4a1feaeb19931d4be4175_queue_restart_killed_items_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/publisher-profiles/{publisher_profile_id}": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get A Publisher Profile By Id",
        "operationId": "Get_a_publisher_profile_by_ID_v1_direct_publishing_publisher_profiles__publisher_profile_id__get",
        "parameters": [
          {
            "name": "publisher_profile_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the publisher profile to get",
              "title": "Publisher Profile Id"
            },
            "description": "The ID of the publisher profile to get"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReaderPublisherProfileResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Update A Publisher Profile",
        "operationId": "Update_a_publisher_profile_v1_direct_publishing_publisher_profiles__publisher_profile_id__post",
        "parameters": [
          {
            "name": "publisher_profile_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the publisher profile to update",
              "title": "Publisher Profile Id"
            },
            "description": "The ID of the publisher profile to update"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_a_publisher_profile_v1_direct_publishing_publisher_profiles__publisher_profile_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReaderPublisherProfileResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/publisher-profiles": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get All Publisher Profiles By The Workspace",
        "operationId": "Get_all_publisher_profiles_by_the_workspace_v1_direct_publishing_publisher_profiles_get",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "en",
                    "zh",
                    "es",
                    "hi",
                    "pt",
                    "fr",
                    "de",
                    "ja",
                    "ar",
                    "ru",
                    "ko",
                    "id",
                    "it",
                    "nl",
                    "tr",
                    "pl",
                    "sv",
                    "fil",
                    "ms",
                    "ro",
                    "uk",
                    "el",
                    "cs",
                    "da",
                    "fi",
                    "bg",
                    "hr",
                    "sk",
                    "ta",
                    "hu",
                    "no",
                    "vi"
                  ],
                  "type": "string"
                },
                {
                  "const": "all",
                  "type": "string"
                }
              ],
              "description": "The language of the publisher profile",
              "examples": [
                "en"
              ],
              "default": "all",
              "title": "Language"
            },
            "description": "The language of the publisher profile"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetReaderPublisherProfilesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Create An Publisher Profile",
        "operationId": "Create_an_publisher_profile_v1_direct_publishing_publisher_profiles_post",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_an_publisher_profile_v1_direct_publishing_publisher_profiles_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReaderPublisherProfileResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/publisher-profiles/read/{read_id}": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get A Publisher Profile By Read Id",
        "operationId": "Get_a_publisher_profile_by_read_ID_v1_direct_publishing_publisher_profiles_read__read_id__get",
        "parameters": [
          {
            "name": "read_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Read ID",
              "title": "Read Id"
            },
            "description": "Read ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ReaderPublisherProfileResponseModel"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get A Publisher Profile By Read Id V1 Direct Publishing Publisher Profiles Read  Read Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/collections": {
      "post": {
        "tags": [
          "reader-direct-publishing",
          "reader-direct-publishing"
        ],
        "summary": "Create Collection",
        "description": "Create a new collection",
        "operationId": "create_collection_v1_direct_publishing_collections_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_collection_v1_direct_publishing_collections_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectPublishingCollectionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "reader-direct-publishing",
          "reader-direct-publishing"
        ],
        "summary": "Get Collections",
        "description": "Get all collections",
        "operationId": "get_collections_v1_direct_publishing_collections_get",
        "parameters": [
          {
            "name": "collection_category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "blog",
                    "curated",
                    "dynamic",
                    "newsletter",
                    "feed",
                    "series"
                  ],
                  "type": "string",
                  "minLength": 1
                },
                {
                  "type": "null"
                }
              ],
              "description": "The category of the collection.",
              "examples": [
                "series",
                "bundle"
              ],
              "title": "Collection Category"
            },
            "description": "The category of the collection."
          },
          {
            "name": "publisher_profile_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "const": "all",
                  "type": "string"
                }
              ],
              "description": "An optional publisher profile id of the read.",
              "examples": [
                "123"
              ],
              "default": "all",
              "title": "Publisher Profile Id"
            },
            "description": "An optional publisher profile id of the read."
          },
          {
            "name": "title_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "An optional title query to filter the reads or series by.",
              "examples": [
                "Romeo and Juliet"
              ],
              "title": "Title Query"
            },
            "description": "An optional title query to filter the reads or series by."
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "en",
                    "zh",
                    "es",
                    "hi",
                    "pt",
                    "fr",
                    "de",
                    "ja",
                    "ar",
                    "ru",
                    "ko",
                    "id",
                    "it",
                    "nl",
                    "tr",
                    "pl",
                    "sv",
                    "fil",
                    "ms",
                    "ro",
                    "uk",
                    "el",
                    "cs",
                    "da",
                    "fi",
                    "bg",
                    "hr",
                    "sk",
                    "ta",
                    "hu",
                    "no",
                    "vi"
                  ],
                  "type": "string"
                },
                {
                  "const": "all",
                  "type": "string"
                }
              ],
              "description": "An optional language query to filter the collections by.",
              "examples": [
                "en"
              ],
              "default": "all",
              "title": "Language"
            },
            "description": "An optional language query to filter the collections by."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectPublishingCollectionsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/collections/{collection_id}": {
      "patch": {
        "tags": [
          "reader-direct-publishing",
          "reader-direct-publishing"
        ],
        "summary": "Update Collection",
        "description": "Update a collection",
        "operationId": "update_collection_v1_direct_publishing_collections__collection_id__patch",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the collection.",
              "title": "Collection Id"
            },
            "description": "The id of the collection."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_collection_v1_direct_publishing_collections__collection_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectPublishingCollectionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "reader-direct-publishing",
          "reader-direct-publishing"
        ],
        "summary": "Delete Collection",
        "description": "Delete a collection",
        "operationId": "delete_collection_v1_direct_publishing_collections__collection_id__delete",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the collection.",
              "title": "Collection Id"
            },
            "description": "The id of the collection."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "reader-direct-publishing",
          "reader-direct-publishing"
        ],
        "summary": "Get Collection",
        "description": "Get a collection by id",
        "operationId": "get_collection_v1_direct_publishing_collections__collection_id__get",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the collection.",
              "title": "Collection Id"
            },
            "description": "The id of the collection."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectPublishingCollectionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/collections/{collection_id}/items": {
      "post": {
        "tags": [
          "reader-direct-publishing",
          "reader-direct-publishing"
        ],
        "summary": "Add Item To Collection",
        "description": "Add an item to a collection",
        "operationId": "add_item_to_collection_v1_direct_publishing_collections__collection_id__items_post",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the collection.",
              "title": "Collection Id"
            },
            "description": "The id of the collection."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_item_to_collection_v1_direct_publishing_collections__collection_id__items_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/collections/{collection_id}/items/{read_id}": {
      "delete": {
        "tags": [
          "reader-direct-publishing",
          "reader-direct-publishing"
        ],
        "summary": "Remove Item From Collection",
        "description": "Remove an item from a collection",
        "operationId": "remove_item_from_collection_v1_direct_publishing_collections__collection_id__items__read_id__delete",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the collection.",
              "title": "Collection Id"
            },
            "description": "The id of the collection."
          },
          {
            "name": "read_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the read.",
              "title": "Read Id"
            },
            "description": "The id of the read."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "reader-direct-publishing",
          "reader-direct-publishing"
        ],
        "summary": "Update Item Order",
        "description": "Update the order of an item in a collection",
        "operationId": "update_item_order_v1_direct_publishing_collections__collection_id__items__read_id__patch",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the collection.",
              "title": "Collection Id"
            },
            "description": "The id of the collection."
          },
          {
            "name": "read_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the read.",
              "title": "Read Id"
            },
            "description": "The id of the read."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_item_order_v1_direct_publishing_collections__collection_id__items__read_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/collections/{collection_id}/generate-cover": {
      "post": {
        "tags": [
          "reader-direct-publishing",
          "reader-direct-publishing"
        ],
        "summary": "Generate Collection Cover",
        "description": "Generate or regenerate a fan cover for a collection",
        "operationId": "generate_collection_cover_v1_direct_publishing_collections__collection_id__generate_cover_post",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The id of the collection.",
              "title": "Collection Id"
            },
            "description": "The id of the collection."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/reads": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get Direct Publishing Reads",
        "description": "Returns a list of the direct-publishing reads created by the authenticated user",
        "operationId": "Get_Direct_publishing_reads_v1_direct_publishing_reads_get",
        "parameters": [
          {
            "name": "states",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublishingState"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "An optional list of states to filter the reads by.",
              "examples": [
                [
                  "published",
                  "published_quarantined",
                  "unlisted"
                ]
              ],
              "title": "States"
            },
            "description": "An optional list of states to filter the reads by."
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "publisher_profile_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "const": "all",
                  "type": "string"
                }
              ],
              "default": "all",
              "title": "Publisher Profile Id"
            }
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "en",
                    "zh",
                    "es",
                    "hi",
                    "pt",
                    "fr",
                    "de",
                    "ja",
                    "ar",
                    "ru",
                    "ko",
                    "id",
                    "it",
                    "nl",
                    "tr",
                    "pl",
                    "sv",
                    "fil",
                    "ms",
                    "ro",
                    "uk",
                    "el",
                    "cs",
                    "da",
                    "fi",
                    "bg",
                    "hr",
                    "sk",
                    "ta",
                    "hu",
                    "no",
                    "vi"
                  ],
                  "type": "string"
                },
                {
                  "const": "all",
                  "type": "string"
                }
              ],
              "description": "An optional language query to filter the collections by.",
              "examples": [
                "en"
              ],
              "default": "all",
              "title": "Language"
            },
            "description": "An optional language query to filter the collections by."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "default": 1,
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many reads to return at maximum. Can not exceed 100, defaults to 15.",
              "default": 10,
              "title": "Page Size"
            },
            "description": "How many reads to return at maximum. Can not exceed 100, defaults to 15."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectPublishingReadsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/reads/{read_id}": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get Direct Publishing Read",
        "description": "Get a single direct publishing read.",
        "operationId": "Get_direct_publishing_read_v1_direct_publishing_reads__read_id__get",
        "parameters": [
          {
            "name": "read_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "read id",
              "title": "Read Id"
            },
            "description": "read id"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectPublishingReadResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Update Direct Publishing Read",
        "description": "Update the metadata of a reader direct published read. Only metadata properties can be updated.",
        "operationId": "Update_direct_publishing_read_v1_direct_publishing_reads__read_id__patch",
        "parameters": [
          {
            "name": "read_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "read id",
              "title": "Read Id"
            },
            "description": "read id"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_direct_publishing_read_v1_direct_publishing_reads__read_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectPublishingReadResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/reads/add": {
      "post": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Create Direct Publishing Read",
        "description": "Creates a new project and a cooresponding read for direct publishing. The read is in a draft state",
        "operationId": "Create_direct_publishing_read_v1_direct_publishing_reads_add_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_direct_publishing_read_v1_direct_publishing_reads_add_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectPublishingReadResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/reads/{read_id}/state": {
      "patch": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Update Direct Publishing Read State",
        "description": "Update the state of a direct publishing read.",
        "operationId": "Update_direct_publishing_read_state_v1_direct_publishing_reads__read_id__state_patch",
        "parameters": [
          {
            "name": "read_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "read id",
              "title": "Read Id"
            },
            "description": "read id"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_direct_publishing_read_state_v1_direct_publishing_reads__read_id__state_patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectPublishingReadResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/reads/{read_id}/regenerate-html": {
      "post": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Regenerate Html",
        "operationId": "Regenerate_HTML_v1_direct_publishing_reads__read_id__regenerate_html_post",
        "parameters": [
          {
            "name": "read_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "read id",
              "title": "Read Id"
            },
            "description": "read id"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectPublishingReadResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/reads/{read_id}/book-cover-prompt": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get Prompt To Generate Book Cover",
        "operationId": "Get_prompt_to_generate_book_cover_v1_direct_publishing_reads__read_id__book_cover_prompt_get",
        "parameters": [
          {
            "name": "read_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "read id",
              "title": "Read Id"
            },
            "description": "read id"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get Prompt To Generate Book Cover V1 Direct Publishing Reads  Read Id  Book Cover Prompt Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/reads/{read_id}/chapters": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get Chapters",
        "operationId": "Get_chapters_v1_direct_publishing_reads__read_id__chapters_get",
        "parameters": [
          {
            "name": "read_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "read id",
              "title": "Read Id"
            },
            "description": "read id"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DirectPublishingChapterResponseModel"
                  },
                  "title": "Response Get Chapters V1 Direct Publishing Reads  Read Id  Chapters Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/voices": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get Voices For Direct Publishing",
        "description": "Lists globally available voices for direct publishing",
        "operationId": "get_voices_for_direct_publishing_v1_direct_publishing_voices_get",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DirectPublishingVoicesResponseModel"
                  },
                  "title": "Response Get Voices For Direct Publishing V1 Direct Publishing Voices Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/reads/{read_id}/generate-preview-audio": {
      "post": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Generate Preview Audio",
        "operationId": "Generate_preview_audio_v1_direct_publishing_reads__read_id__generate_preview_audio_post",
        "parameters": [
          {
            "name": "read_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "read id",
              "title": "Read Id"
            },
            "description": "read id"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_preview_audio_v1_direct_publishing_reads__read_id__generate_preview_audio_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/metrics/lifetime": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get Workspace Lifetime Metrics",
        "operationId": "Get_workspace_lifetime_metrics_v1_direct_publishing_metrics_lifetime_get",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LifetimeReadsMetricsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/metrics/date-range": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get Metrics For A Date Range And A List Of Read Ids",
        "description": "Get user, engaged users, listened duration and retention metrics for a date range and a list of read ids",
        "operationId": "Get_metrics_for_a_date_range_and_a_list_of_read_ids_v1_direct_publishing_metrics_date_range_get",
        "parameters": [
          {
            "name": "start_at_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Start datetime in unix timestamp in seconds. Only the date part is considered, inclusive.",
              "title": "Start At Unix"
            },
            "description": "Start datetime in unix timestamp in seconds. Only the date part is considered, inclusive."
          },
          {
            "name": "end_at_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End datetime in unix timestamp in seconds. Only the date part is considered, inclusive.",
              "title": "End At Unix"
            },
            "description": "End datetime in unix timestamp in seconds. Only the date part is considered, inclusive."
          },
          {
            "name": "read_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of read ids. Maximum 5 read ids. Special value 'all' to fetch all reads. Read ids size must be 1 if 'all' is provided.",
              "title": "Read Ids"
            },
            "description": "List of read ids. Maximum 5 read ids. Special value 'all' to fetch all reads. Read ids size must be 1 if 'all' is provided."
          },
          {
            "name": "publisher_profile_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Publisher profile id.",
              "title": "Publisher Profile Id"
            },
            "description": "Publisher profile id."
          },
          {
            "name": "granularity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(day|week|month)$",
              "description": "Granularity of the data.",
              "default": "day",
              "title": "Granularity"
            },
            "description": "Granularity of the data."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MainReadsDateRangeMetricsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/metrics/date-range/{read_id}": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get Date Range Metrics For A Read",
        "operationId": "Get_date_range_metrics_for_a_read_v1_direct_publishing_metrics_date_range__read_id__get",
        "parameters": [
          {
            "name": "read_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Read ID",
              "title": "Read Id"
            },
            "description": "Read ID"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LifetimeReadMetricsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/metrics/date-range/direct-sales": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get Direct Sales History",
        "operationId": "Get_direct_sales_history_v1_direct_publishing_metrics_date_range_direct_sales_get",
        "parameters": [
          {
            "name": "read_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of read ids. Maximum 5 read ids. Special value 'all' to fetch all reads. Read ids size must be 1 if 'all' is provided.",
              "title": "Read Ids"
            },
            "description": "List of read ids. Maximum 5 read ids. Special value 'all' to fetch all reads. Read ids size must be 1 if 'all' is provided."
          },
          {
            "name": "start_at_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Start datetime in unix timestamp in seconds. Only the date part is considered, inclusive.",
              "title": "Start At Unix"
            },
            "description": "Start datetime in unix timestamp in seconds. Only the date part is considered, inclusive."
          },
          {
            "name": "end_at_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End datetime in unix timestamp in seconds. Only the date part is considered, inclusive.",
              "title": "End At Unix"
            },
            "description": "End datetime in unix timestamp in seconds. Only the date part is considered, inclusive."
          },
          {
            "name": "publisher_profile_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Publisher profile id.",
              "title": "Publisher Profile Id"
            },
            "description": "Publisher profile id."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many reads to return at maximum. Can not exceed 100, defaults to 15.",
              "default": 100,
              "title": "Page Size"
            },
            "description": "How many reads to return at maximum. Can not exceed 100, defaults to 15."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadDirectSalesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/metrics/v2/date-range": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get Metrics For A Date Range And A List Of Read Ids",
        "description": "Get user, engaged users, listened duration and retention metrics for a date range and a list of read ids",
        "operationId": "Get_metrics_for_a_date_range_and_a_list_of_read_ids_v1_direct_publishing_metrics_v2_date_range_get",
        "parameters": [
          {
            "name": "start_at_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Start datetime in unix timestamp in seconds. Only the date part is considered, inclusive.",
              "title": "Start At Unix"
            },
            "description": "Start datetime in unix timestamp in seconds. Only the date part is considered, inclusive."
          },
          {
            "name": "end_at_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End datetime in unix timestamp in seconds. Only the date part is considered, inclusive.",
              "title": "End At Unix"
            },
            "description": "End datetime in unix timestamp in seconds. Only the date part is considered, inclusive."
          },
          {
            "name": "read_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of read ids. Maximum 5 read ids. Special value 'all' to fetch all reads. Read ids size must be 1 if 'all' is provided.",
              "title": "Read Ids"
            },
            "description": "List of read ids. Maximum 5 read ids. Special value 'all' to fetch all reads. Read ids size must be 1 if 'all' is provided."
          },
          {
            "name": "publisher_profile_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of publisher profile ids.",
              "title": "Publisher Profile Ids"
            },
            "description": "List of publisher profile ids."
          },
          {
            "name": "granularity",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "day",
                "week",
                "month"
              ],
              "type": "string",
              "description": "Granularity of the data.",
              "default": "day",
              "title": "Granularity"
            },
            "description": "Granularity of the data."
          },
          {
            "name": "read_type",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "all",
                "free",
                "paid"
              ],
              "type": "string",
              "description": "Type of the reads.",
              "default": "all",
              "title": "Read Type"
            },
            "description": "Type of the reads."
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "en",
                    "zh",
                    "es",
                    "hi",
                    "pt",
                    "fr",
                    "de",
                    "ja",
                    "ar",
                    "ru",
                    "ko",
                    "id",
                    "it",
                    "nl",
                    "tr",
                    "pl",
                    "sv",
                    "fil",
                    "ms",
                    "ro",
                    "uk",
                    "el",
                    "cs",
                    "da",
                    "fi",
                    "bg",
                    "hr",
                    "sk",
                    "ta",
                    "hu",
                    "no",
                    "vi"
                  ],
                  "type": "string"
                },
                {
                  "const": "all",
                  "type": "string"
                }
              ],
              "description": "Language of the reads.",
              "default": "all",
              "title": "Language"
            },
            "description": "Language of the reads."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadsDateRangeMetricsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/metrics/v2/date-range/breakdown": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get Breakdown Metrics For A Date Range And A List Of Read Ids",
        "description": "Get breakdown metrics for a date range and a list of read ids",
        "operationId": "Get_breakdown_metrics_for_a_date_range_and_a_list_of_read_ids_v1_direct_publishing_metrics_v2_date_range_breakdown_get",
        "parameters": [
          {
            "name": "start_at_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Start datetime in unix timestamp in seconds. Only the date part is considered, inclusive.",
              "title": "Start At Unix"
            },
            "description": "Start datetime in unix timestamp in seconds. Only the date part is considered, inclusive."
          },
          {
            "name": "end_at_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End datetime in unix timestamp in seconds. Only the date part is considered, inclusive.",
              "title": "End At Unix"
            },
            "description": "End datetime in unix timestamp in seconds. Only the date part is considered, inclusive."
          },
          {
            "name": "read_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of read ids. Maximum 5 read ids. Special value 'all' to fetch all reads. Read ids size must be 1 if 'all' is provided.",
              "title": "Read Ids"
            },
            "description": "List of read ids. Maximum 5 read ids. Special value 'all' to fetch all reads. Read ids size must be 1 if 'all' is provided."
          },
          {
            "name": "publisher_profile_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of publisher profile ids.",
              "title": "Publisher Profile Ids"
            },
            "description": "List of publisher profile ids."
          },
          {
            "name": "read_type",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "all",
                "free",
                "paid"
              ],
              "type": "string",
              "description": "Type of the reads.",
              "default": "all",
              "title": "Read Type"
            },
            "description": "Type of the reads."
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "en",
                    "zh",
                    "es",
                    "hi",
                    "pt",
                    "fr",
                    "de",
                    "ja",
                    "ar",
                    "ru",
                    "ko",
                    "id",
                    "it",
                    "nl",
                    "tr",
                    "pl",
                    "sv",
                    "fil",
                    "ms",
                    "ro",
                    "uk",
                    "el",
                    "cs",
                    "da",
                    "fi",
                    "bg",
                    "hr",
                    "sk",
                    "ta",
                    "hu",
                    "no",
                    "vi"
                  ],
                  "type": "string"
                },
                {
                  "const": "all",
                  "type": "string"
                }
              ],
              "description": "Language of the reads.",
              "default": "all",
              "title": "Language"
            },
            "description": "Language of the reads."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "How many reads to return at maximum. Can not exceed 100, defaults to 15.",
              "default": 15,
              "title": "Page Size"
            },
            "description": "How many reads to return at maximum. Can not exceed 100, defaults to 15."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "title": "Cursor"
            },
            "description": "Used for fetching next page. Cursor is returned in the response."
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Field to sort by. Options: title, listeners, sales_revenue_usd, engagement_revenue_usd, completion_rate, units_sold, payouts",
              "examples": [
                "sales_revenue_usd"
              ],
              "default": "revenue_usd",
              "title": "Sort By"
            },
            "description": "Field to sort by. Options: title, listeners, sales_revenue_usd, engagement_revenue_usd, completion_rate, units_sold, payouts"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(asc|desc)$",
              "description": "Sort order",
              "default": "desc",
              "title": "Sort Order"
            },
            "description": "Sort order"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadsDateRangeBreakdownMetricsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/metrics/v2/date-range/breakdown/download": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Download Breakdown Metrics As Csv",
        "description": "Download breakdown metrics for a date range and a list of read ids as CSV file",
        "operationId": "Download_breakdown_metrics_as_CSV_v1_direct_publishing_metrics_v2_date_range_breakdown_download_get",
        "parameters": [
          {
            "name": "start_at_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Start datetime in unix timestamp in seconds. Only the date part is considered, inclusive.",
              "title": "Start At Unix"
            },
            "description": "Start datetime in unix timestamp in seconds. Only the date part is considered, inclusive."
          },
          {
            "name": "end_at_unix",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End datetime in unix timestamp in seconds. Only the date part is considered, inclusive.",
              "title": "End At Unix"
            },
            "description": "End datetime in unix timestamp in seconds. Only the date part is considered, inclusive."
          },
          {
            "name": "read_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of read ids. Maximum 5 read ids. Special value 'all' to fetch all reads. Read ids size must be 1 if 'all' is provided.",
              "title": "Read Ids"
            },
            "description": "List of read ids. Maximum 5 read ids. Special value 'all' to fetch all reads. Read ids size must be 1 if 'all' is provided."
          },
          {
            "name": "publisher_profile_ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of publisher profile ids.",
              "title": "Publisher Profile Ids"
            },
            "description": "List of publisher profile ids."
          },
          {
            "name": "read_type",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "all",
                "free",
                "paid"
              ],
              "type": "string",
              "description": "Type of the reads.",
              "default": "all",
              "title": "Read Type"
            },
            "description": "Type of the reads."
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "en",
                    "zh",
                    "es",
                    "hi",
                    "pt",
                    "fr",
                    "de",
                    "ja",
                    "ar",
                    "ru",
                    "ko",
                    "id",
                    "it",
                    "nl",
                    "tr",
                    "pl",
                    "sv",
                    "fil",
                    "ms",
                    "ro",
                    "uk",
                    "el",
                    "cs",
                    "da",
                    "fi",
                    "bg",
                    "hr",
                    "sk",
                    "ta",
                    "hu",
                    "no",
                    "vi"
                  ],
                  "type": "string"
                },
                {
                  "const": "all",
                  "type": "string"
                }
              ],
              "description": "Language of the reads.",
              "default": "all",
              "title": "Language"
            },
            "description": "Language of the reads."
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Field to sort by. Options: title, listeners, sales_revenue_usd, engagement_revenue_usd, completion_rate, units_sold, payouts",
              "examples": [
                "sales_revenue_usd"
              ],
              "default": "title",
              "title": "Sort By"
            },
            "description": "Field to sort by. Options: title, listeners, sales_revenue_usd, engagement_revenue_usd, completion_rate, units_sold, payouts"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(asc|desc)$",
              "description": "Sort order",
              "default": "asc",
              "title": "Sort Order"
            },
            "description": "Sort order"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/direct-publishing/metrics/v2/lifetime": {
      "get": {
        "tags": [
          "reader-direct-publishing"
        ],
        "summary": "Get Lifetime Metrics",
        "description": "Get lifetime metrics for a workspace",
        "operationId": "Get_lifetime_metrics_v1_direct_publishing_metrics_v2_lifetime_get",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadsLifetimeMetricsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/c185a1ff66f4a1feaeb19931d4be4175/export-voice-qc-labels": {
      "post": {
        "summary": "Export Voice Qc Labels",
        "description": "This function will be called on an interval by a cloud function.",
        "operationId": "export_voice_qc_labels",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_export_voice_qc_labels_c185a1ff66f4a1feaeb19931d4be4175_export_voice_qc_labels_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/labelbox-webhook": {
      "post": {
        "summary": "Labelbox Webhook",
        "operationId": "labelbox_webhook",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/capacity": {
      "get": {
        "summary": "Get Capacity Stats",
        "operationId": "capacity_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapacityResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/tasks/{task_id}/claim": {
      "post": {
        "summary": "Claim A Task",
        "operationId": "claim_task_description_post",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The ID task to claim.",
              "title": "Task Id"
            },
            "description": "The ID task to claim."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/claims/{claim_id}": {
      "get": {
        "summary": "Retrieve Status For Specific Claim.",
        "operationId": "procucer_claims_get",
        "parameters": [
          {
            "name": "claim_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Claim Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/claims": {
      "get": {
        "summary": "Retrieve A List Of Pending Claim Ids For The User",
        "operationId": "procucer_claims_list_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimIdListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/assign/{unclaimed_instance_id}": {
      "post": {
        "summary": "Manually Assign Task To User",
        "operationId": "assign_unclaimed_task_post",
        "parameters": [
          {
            "name": "unclaimed_instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Unclaimed Instance Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaimResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/contracts/register": {
      "post": {
        "summary": "Submit A Contract For Moderation",
        "operationId": "create_contract_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterContractRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateContractResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/contracts": {
      "get": {
        "summary": "List Contracts Creation Requests",
        "operationId": "list_contract_requests_for_user_get",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ContractCreationState"
                },
                {
                  "type": "null"
                }
              ],
              "title": "State"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "After"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractCreationRequestList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/submit-request": {
      "post": {
        "summary": "Submit Request For Workspace",
        "operationId": "workspace_submit_request",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitRequestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitRequestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/collections": {
      "post": {
        "summary": "Create A Productions Collection",
        "operationId": "create_productions_collection_post",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCollectionRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Productions Collections",
        "operationId": "list_productions_collections_get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "top_level",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Top Level"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "description": "The number of collections to return per page.",
              "default": 10,
              "title": "Page Size"
            },
            "description": "The number of collections to return per page."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "offset in the collection list",
              "default": 0,
              "title": "Offset"
            },
            "description": "offset in the collection list"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionsListModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/collections/{collection_id}/rename": {
      "put": {
        "summary": "Rename Productions Collection",
        "operationId": "rename_productions_collection_put",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameProjectRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/collections/{collection_id}": {
      "get": {
        "summary": "Get Productions Collection By Id",
        "operationId": "productions_collection_get",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Collection",
        "operationId": "destroy_collection_delete",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/collections/{collection_id}/add/productions/{description_id}": {
      "put": {
        "summary": "Add A Production To A Collection",
        "operationId": "add_description_to_collection_put",
        "parameters": [
          {
            "name": "description_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Description Id"
            }
          },
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/collections/{collection_id}/add/collection/{nested_collection_id}": {
      "put": {
        "summary": "Add A Nested Collection To A Collection",
        "operationId": "add_nested_collection_to_collection_put",
        "parameters": [
          {
            "name": "nested_collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Nested Collection Id"
            }
          },
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/collections/{collection_id}/{item_id}": {
      "delete": {
        "summary": "Remove Item From A Collection",
        "operationId": "remove_item_from_collection_delete",
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Item Id"
            }
          },
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/collections/{collection_id}/move/{destination_collection_id}": {
      "put": {
        "summary": "Bulk Move Items Between Collections",
        "operationId": "bulk_move_between_collections_put",
        "parameters": [
          {
            "name": "destination_collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Destination Collection Id"
            }
          },
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Collection Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkMoveItemsRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/subtitles/transform": {
      "post": {
        "summary": "Perform Llm Based Transform On Transcript",
        "operationId": "transcription_transform_text_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubtitlesTransformRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubtitlesTransformResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}/waveform": {
      "get": {
        "summary": "Get Task Instance Audio Waveform",
        "description": "Get waveform data for a task instance's audio file.",
        "operationId": "get_task_instance_waveform",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "sample_rate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of samples per second for the waveform",
              "default": 40,
              "title": "Sample Rate"
            },
            "description": "Number of samples per second for the waveform"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WaveformSample"
                  },
                  "title": "Response Get Task Instance Audio Waveform V1 Productions Producers  User Id  Tasks  Task Id  Waveform Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/orders": {
      "get": {
        "summary": "List A Workspace'S Productions Orders",
        "operationId": "list_productions_orders_get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "completed_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Completed Only"
            }
          },
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search Query"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "description": "The number of tasks to return per page.",
              "default": 20,
              "title": "Page Size"
            },
            "description": "The number of tasks to return per page."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "offset in the task list",
              "default": 0,
              "title": "Offset"
            },
            "description": "offset in the task list"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionsOrderListModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/tasks/register/subtitles": {
      "post": {
        "summary": "Register A New Subtitles Task",
        "operationId": "register_subtitles_description_post",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Register_a_new_subtitles_task_v1_productions_workspace__workspace_id__tasks_register_subtitles_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDescriptionCreation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/tasks/register/captions": {
      "post": {
        "summary": "Register A New Captions Task",
        "operationId": "register_captions_description_post",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Register_a_new_captions_task_v1_productions_workspace__workspace_id__tasks_register_captions_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDescriptionCreation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/tasks/register/dub": {
      "post": {
        "summary": "Register A New Dubbing Task",
        "operationId": "register_dub_description_post",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Register_a_new_dubbing_task_v1_productions_workspace__workspace_id__tasks_register_dub_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDescriptionCreation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/tasks/register": {
      "post": {
        "summary": "Register A Production Task",
        "operationId": "register_task_description_post",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Register_a_production_task_v1_productions_workspace__workspace_id__tasks_register_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDescriptionCreation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/tasks/transcription-from-stt": {
      "post": {
        "summary": "Register A Production Task From Stt Task",
        "operationId": "transcription_task_from_stt_post",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranscriptionFromSttRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDescriptionCreation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/tasks/{description_id}/enterprise-quote-decision": {
      "post": {
        "summary": "Enterprise Production Payment Confirmation",
        "operationId": "enterprise_payment_confirmation_post",
        "parameters": [
          {
            "name": "description_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Description Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnterpriseQuoteDecisionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/quote": {
      "post": {
        "summary": "Get Quote For Productions Order",
        "operationId": "quote_estimate_get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/TranscriptionQuoteRequest"
                  },
                  {
                    "$ref": "#/components/schemas/CaptionsQuoteRequest"
                  },
                  {
                    "$ref": "#/components/schemas/SubtitlesQuoteRequest"
                  },
                  {
                    "$ref": "#/components/schemas/DubsQuoteRequest"
                  }
                ],
                "title": "Req"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteEstimateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/enterprise-credits-cost-estimate": {
      "get": {
        "summary": "Get Credit For Usd Enterprise",
        "operationId": "credit_cost_estimate_get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "amount_usd",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number",
              "title": "Amount Usd"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCostEstimateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/tasks/{description_id}": {
      "get": {
        "summary": "Get Task Info For Workspace",
        "operationId": "workspace_task_info",
        "parameters": [
          {
            "name": "description_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Description Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceTaskInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/speech-to-text/tasks/{stt_task_id}": {
      "get": {
        "summary": "Get Productions Task Info From Stt Task",
        "operationId": "get_productions_task_info_from_stt",
        "parameters": [
          {
            "name": "stt_task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Stt Task Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceTaskInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/tasks/{description_id}/rename": {
      "put": {
        "summary": "Rename Task",
        "operationId": "workspace_task_rename",
        "parameters": [
          {
            "name": "description_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Description Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceTaskRenameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceTaskRenameResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/tasks/{description_id}/deliverable/{deliverable_id}": {
      "get": {
        "summary": "Get Deliverables For Task",
        "operationId": "description_deliverable_by_id_get",
        "parameters": [
          {
            "name": "description_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Description Id"
            }
          },
          {
            "name": "deliverable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deliverable Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TranscriptionV2Deliverable"
                    },
                    {
                      "$ref": "#/components/schemas/SubtitlesDeliverable"
                    },
                    {
                      "$ref": "#/components/schemas/DubsDeliverable"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "kind",
                    "mapping": {
                      "transcription_v2_transcript": "#/components/schemas/TranscriptionV2Deliverable",
                      "subtitles_project": "#/components/schemas/SubtitlesDeliverable",
                      "dubs": "#/components/schemas/DubsDeliverable"
                    }
                  },
                  "title": "Response Get Deliverables For Task V1 Productions Workspace  Workspace Id  Tasks  Description Id  Deliverable  Deliverable Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/tasks/{description_id}/deliverable/{deliverable_id}/transcription/export": {
      "get": {
        "summary": "Export Transcription",
        "operationId": "export_transcription_get",
        "parameters": [
          {
            "name": "description_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Description Id"
            }
          },
          {
            "name": "deliverable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deliverable Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TranscriptExportFormat"
            }
          },
          {
            "name": "include_timestamps",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Include Timestamps"
            }
          },
          {
            "name": "include_speakers",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Include Speakers"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/tasks/{description_id}/media": {
      "get": {
        "summary": "Get Task Media For Workspace",
        "operationId": "workspace_task_media",
        "parameters": [
          {
            "name": "description_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Description Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceTaskMediaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/tasks/{description_id}/deliverable/{deliverable_id}/subtitles/export": {
      "get": {
        "summary": "Export Transcription",
        "operationId": "export_subtitles_get",
        "parameters": [
          {
            "name": "description_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Description Id"
            }
          },
          {
            "name": "deliverable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deliverable Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SubtitlesFormat"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TranscriptionV2Deliverable"
                    },
                    {
                      "$ref": "#/components/schemas/SubtitlesDeliverable"
                    },
                    {
                      "$ref": "#/components/schemas/DubsDeliverable"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "kind",
                    "mapping": {
                      "transcription_v2_transcript": "#/components/schemas/TranscriptionV2Deliverable",
                      "subtitles_project": "#/components/schemas/SubtitlesDeliverable",
                      "dubs": "#/components/schemas/DubsDeliverable"
                    }
                  },
                  "title": "Response Export Transcription V1 Productions Workspace  Workspace Id  Tasks  Description Id  Deliverable  Deliverable Id  Subtitles Export Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/workspace/{workspace_id}/tasks/description/{description_id}/waveform": {
      "get": {
        "summary": "Get Task Description Audio Waveform",
        "description": "Get waveform data for a task description's audio file.",
        "operationId": "get_task_description_waveform",
        "parameters": [
          {
            "name": "description_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Description Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "sample_rate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of samples per second for the waveform",
              "default": 40,
              "title": "Sample Rate"
            },
            "description": "Number of samples per second for the waveform"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WaveformSample"
                  },
                  "title": "Response Get Task Description Audio Waveform V1 Productions Workspace  Workspace Id  Tasks Description  Description Id  Waveform Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/{workspace_id}/feedback/{description_id}/deliverable/{deliverable_id}": {
      "post": {
        "summary": "Submit Feedback On A Completed Production",
        "description": "Analyzes, categorizes and submits user feedback on a completed Production",
        "operationId": "productions_feedback_post",
        "parameters": [
          {
            "name": "description_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Description Id"
            }
          },
          {
            "name": "deliverable_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Deliverable Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Submit_feedback_on_a_completed_Production_v1_productions__workspace_id__feedback__description_id__deliverable__deliverable_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductionsFeedbackResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/labeling/questionnaires/{questionnaire_id}": {
      "get": {
        "summary": "Get Task Labeling Questionnaire",
        "operationId": "get_labeling_questionnaire_by_id_get",
        "parameters": [
          {
            "name": "questionnaire_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Questionnaire Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LabelingQuestionnaireResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/metrics/teams": {
      "get": {
        "summary": "Get Team Metrics",
        "operationId": "teams_stats_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Date"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/metrics/user": {
      "get": {
        "summary": "Get Team Metrics",
        "operationId": "user_stats_get",
        "parameters": [
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "Start Date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "title": "End Date"
            }
          },
          {
            "name": "team_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetricList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers": {
      "post": {
        "summary": "Retrieve All Producer Profiles Matching The Given Tags",
        "operationId": "get_all_producer_profiles_post",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "description": "The number of tasks to return per page.",
              "default": 20,
              "title": "Page Size"
            },
            "description": "The number of tasks to return per page."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "offset in the task list",
              "default": 0,
              "title": "Offset"
            },
            "description": "offset in the task list"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListProducersRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducerProfileListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}": {
      "get": {
        "summary": "Retrieve Producer Profile",
        "operationId": "producer_profile_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "include_details",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Details"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ProducerProfileResponse"
                    },
                    {
                      "$ref": "#/components/schemas/DetailedProducerProfileResponse"
                    }
                  ],
                  "title": "Response Retrieve Producer Profile V1 Productions Producers  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/stats": {
      "get": {
        "summary": "Retrieve Producer Stats",
        "operationId": "producer_stats_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducerStatsModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/qualifications": {
      "put": {
        "summary": "Update Producer Qualification",
        "operationId": "update_producer_qualifications_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProducerQualificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/qualifications": {
      "get": {
        "summary": "Retrieve All Qualification Options",
        "operationId": "get_qualification_options",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProducerQualificationOptionsResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks": {
      "get": {
        "summary": "List Tasks Instances For A User",
        "operationId": "list_task_instances_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "state_filters",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskInstanceState"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "State Filters"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "description": "The number of tasks to return per page.",
              "default": 20,
              "title": "Page Size"
            },
            "description": "The number of tasks to return per page."
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination, using the cursor from the previous page.",
              "title": "After"
            },
            "description": "Cursor for pagination, using the cursor from the previous page."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskInstanceListModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/qualifications/all": {
      "get": {
        "summary": "Get All Qualifications",
        "operationId": "qualifications_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/tasks/unclaimed": {
      "get": {
        "summary": "List Unclaimed Task Descriptions",
        "operationId": "list_unclaimed_tasks_post",
        "parameters": [
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Lang"
            }
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskKind"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Kind"
            }
          },
          {
            "name": "extra",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Extra"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnclaimedTasksList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}/submit": {
      "put": {
        "summary": "Submit A Completed Task",
        "operationId": "submit_review_task_put",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}/content": {
      "put": {
        "summary": "Update Task Content",
        "operationId": "update_task_content_put",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The ID task review to claim.",
              "title": "Task Id"
            },
            "description": "The ID task review to claim."
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "submit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Submit"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskContentUpdateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskInstanceModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Task Content",
        "operationId": "task_content_get",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "id of the task to claim",
              "title": "Task Id"
            },
            "description": "id of the task to claim"
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}/review-extras": {
      "get": {
        "summary": "Review Extras",
        "operationId": "review_extras_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "id of the task to claim",
              "title": "Task Id"
            },
            "description": "id of the task to claim"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewExtras"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}": {
      "get": {
        "summary": "Get Task By Id",
        "operationId": "task_instance_by_id_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskInstanceWithDescriptionModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}/revoke": {
      "put": {
        "summary": "Revoke A Task From A User Manually",
        "operationId": "revoke_task_put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Reason"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskInstanceModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}/feedback": {
      "get": {
        "summary": "Get Feedback For Task",
        "operationId": "task_feedback_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TranscriptionTaskFeedback"
                    },
                    {
                      "$ref": "#/components/schemas/CaptionsTaskFeedback"
                    },
                    {
                      "$ref": "#/components/schemas/SubtitlesTaskFeedback"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "kind",
                    "mapping": {
                      "transcription_v2": "#/components/schemas/TranscriptionTaskFeedback",
                      "captions": "#/components/schemas/CaptionsTaskFeedback",
                      "subtitles": "#/components/schemas/SubtitlesTaskFeedback"
                    }
                  },
                  "title": "Response Get Feedback For Task V1 Productions Producers  User Id  Tasks  Task Id  Feedback Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}/feedback/ack": {
      "put": {
        "summary": "Ack Task Feedback",
        "operationId": "task_feedback_ack_put",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/TranscriptionTaskFeedback"
                    },
                    {
                      "$ref": "#/components/schemas/CaptionsTaskFeedback"
                    },
                    {
                      "$ref": "#/components/schemas/SubtitlesTaskFeedback"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "kind",
                    "mapping": {
                      "transcription_v2": "#/components/schemas/TranscriptionTaskFeedback",
                      "captions": "#/components/schemas/CaptionsTaskFeedback",
                      "subtitles": "#/components/schemas/SubtitlesTaskFeedback"
                    }
                  },
                  "title": "Response Ack Task Feedback V1 Productions Producers  User Id  Tasks  Task Id  Feedback Ack Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}/extend-deadline": {
      "put": {
        "summary": "Extend The Submission Deadline Of A Task",
        "operationId": "extend_deadline_put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskInstanceModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/tasks/{description_id}/priority": {
      "put": {
        "summary": "Update Task Description Priority",
        "operationId": "update_task_priority_put",
        "parameters": [
          {
            "name": "description_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Description Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePriorityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/teams/{team_id}": {
      "get": {
        "summary": "Get Team Infos",
        "operationId": "get_team_by_id_get",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Team Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/teams/{team_id}/tasks": {
      "get": {
        "summary": "Get Team Tasks",
        "operationId": "get_team_tasks_get",
        "parameters": [
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Team Id"
            }
          },
          {
            "name": "state_filters",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskInstanceState"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "State Filters"
            }
          },
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search Query"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Lang"
            }
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskKind"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Kind"
            }
          },
          {
            "name": "extra",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Extra"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "description": "The number of tasks to return per page.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "The number of tasks to return per page."
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination, using the cursor from the previous page.",
              "title": "After"
            },
            "description": "Cursor for pagination, using the cursor from the previous page."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamTasksResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/tasks/all": {
      "get": {
        "summary": "Get All Tasks Across Teams",
        "description": "Get all tasks from all teams the user has access to",
        "operationId": "get_all_tasks_get",
        "parameters": [
          {
            "name": "state_filters",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskInstanceState"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "State Filters"
            }
          },
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search Query"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Lang"
            }
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskKind"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Kind"
            }
          },
          {
            "name": "extra",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Extra"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "description": "The number of tasks to return per page.",
              "default": 50,
              "title": "Page Size"
            },
            "description": "The number of tasks to return per page."
          },
          {
            "name": "after",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Cursor for pagination, using the cursor from the previous page.",
              "title": "After"
            },
            "description": "Cursor for pagination, using the cursor from the previous page."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamTasksResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}/transcription/align": {
      "post": {
        "summary": "Perform Alignment Of The Passed Text To The Audio",
        "operationId": "transcription_align_text_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlignmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlignmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}/transcription/retranscribe-segment": {
      "post": {
        "summary": "Retranscribe Segment",
        "operationId": "transcription_regen_segment_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetranscribeSegmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AlignmentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}/transcription/translate": {
      "post": {
        "summary": "Translate Text",
        "operationId": "transcription_translate_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslateCueRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranslateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}/transcription/diff": {
      "get": {
        "summary": "Get Transcription Diff",
        "operationId": "transcription_diff_get",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TranscriptDiffResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/productions/producers/{user_id}/tasks/{task_id}/transcription/resegment": {
      "post": {
        "summary": "Resegment Transcript",
        "operationId": "resegment_transcript_post",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResegmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transcript"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/voices/pvc": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Create Pvc Voice",
        "description": "Creates a new PVC voice with metadata but no samples",
        "operationId": "Create_PVC_voice_v1_voices_pvc_post",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_PVC_voice_v1_voices_pvc_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/voices/pvc/{voice_id}": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Edit Pvc Voice",
        "description": "Edit PVC voice metadata",
        "operationId": "Edit_PVC_voice_v1_voices_pvc__voice_id__post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_PVC_voice_v1_voices_pvc__voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc"
        ],
        "x-fern-sdk-method-name": "update"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Add Samples To Pvc Voice",
        "description": "Add audio samples to a PVC voice",
        "operationId": "Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SampleResponseModel"
                  },
                  "title": "Response Add Samples To Pvc Voice V1 Voices Pvc  Voice Id  Samples Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Update Pvc Voice Sample",
        "description": "Update a PVC voice sample - apply noise removal, or select speaker.",
        "operationId": "Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples"
        ],
        "x-fern-sdk-method-name": "update"
      },
      "delete": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Delete Pvc Voice Sample",
        "description": "Delete a sample from a PVC voice.",
        "operationId": "Delete_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__delete",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteVoiceSampleResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/audio": {
      "get": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Retrieve Voice Sample Audio",
        "description": "Retrieve the first 30 seconds of voice sample audio with or without noise removal.",
        "operationId": "Retrieve_voice_sample_audio_v1_voices_pvc__voice_id__samples__sample_id__audio_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "remove_background_noise",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
              "examples": [true],
              "embed": true,
              "default": false,
              "title": "Remove Background Noise"
            },
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSamplePreviewResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "audio"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/waveform": {
      "get": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Retrieve Voice Sample Visual Waveform",
        "description": "Retrieve the visual waveform of a voice sample.",
        "operationId": "Retrieve_voice_sample_visual_waveform_v1_voices_pvc__voice_id__samples__sample_id__waveform_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSampleVisualWaveformResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "waveform"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/speakers": {
      "get": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Retrieve Speaker Separation Status",
        "description": "Retrieve the status of the speaker separation process and the list of detected speakers if complete.",
        "operationId": "Retrieve_speaker_separation_status_v1_voices_pvc__voice_id__samples__sample_id__speakers_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeakerSeparationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "speakers"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/separate-speakers": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Start Speaker Separation",
        "description": "Start speaker separation process for a sample",
        "operationId": "Start_speaker_separation_v1_voices_pvc__voice_id__samples__sample_id__separate_speakers_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartSpeakerSeparationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "speakers"
        ],
        "x-fern-sdk-method-name": "separate"
      }
    },
    "/v1/voices/pvc/{voice_id}/samples/{sample_id}/speakers/{speaker_id}/audio": {
      "get": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Retrieve Separated Speaker Audio",
        "description": "Retrieve the separated audio for a specific speaker.",
        "operationId": "Retrieve_separated_speaker_audio_v1_voices_pvc__voice_id__samples__sample_id__speakers__speaker_id__audio_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "sample_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Sample ID to be used",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            },
            "description": "Sample ID to be used"
          },
          {
            "name": "speaker_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Speaker ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id}/samples/{sample_id}/speakers to list all the available speakers for a sample.",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Speaker Id"
            },
            "description": "Speaker ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id}/samples/{sample_id}/speakers to list all the available speakers for a sample."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeakerAudioResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "samples",
          "speakers",
          "audio"
        ],
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices/pvc/{voice_id}/captcha": {
      "get": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Get Pvc Voice Captcha",
        "description": "Get captcha for PVC voice verification.",
        "operationId": "Get_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "verification",
          "captcha"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Verify Pvc Voice Captcha",
        "description": "Submit captcha verification for PVC voice.",
        "operationId": "Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyPVCVoiceCaptchaResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "verification",
          "captcha"
        ],
        "x-fern-sdk-method-name": "verify"
      }
    },
    "/v1/voices/pvc/{voice_id}/train": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Run Pvc Training",
        "description": "Start PVC training process for a voice.",
        "operationId": "Run_PVC_training_v1_voices_pvc__voice_id__train_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Run_PVC_training_v1_voices_pvc__voice_id__train_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartPVCVoiceTrainingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc"
        ],
        "x-fern-sdk-method-name": "train"
      }
    },
    "/v1/voices/pvc/{voice_id}/verification": {
      "post": {
        "tags": [
          "pvc-voices"
        ],
        "summary": "Request Manual Verification",
        "description": "Request manual verification for a PVC voice.",
        "operationId": "Request_manual_verification_v1_voices_pvc__voice_id__verification_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            },
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Request_manual_verification_v1_voices_pvc__voice_id__verification_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestPVCManualVerificationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "voices",
          "pvc",
          "verification"
        ],
        "x-fern-sdk-method-name": "request"
      }
    },
    "/v1/workspace/mfa/disabled-users": {
      "get": {
        "summary": "Get Users Without Mfa Enabled.",
        "description": "Get users without multi-factor authentication (MFA) enabled. Only workspace admins can call this endpoint.",
        "operationId": "get_disabled_users",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "title": "Xi-Api-Key"
            },
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceUserResponseModel"
                  },
                  "title": "Response Get Users Without Mfa Enabled  V1 Workspace Mfa Disabled Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": [
          "workspace"
        ],
        "x-fern-sdk-method-name": "get_users_without_mfa_enabled"
      }
    },
    "/cross-environment/voices/clear-remote-voice-redis": {
      "post": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Clear Remote Voices Redis Route",
        "operationId": "clear_remote_voices_redis_route_cross_environment_voices_clear_remote_voice_redis_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_clear_remote_voices_redis_route_cross_environment_voices_clear_remote_voice_redis_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateClonedVoicesRefCrossEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/nogo-voices/invalidate-cache": {
      "post": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Invalidate No-Go Voice Redis Cache",
        "description": "Clears the no-go voice Redis cache from isolated envs.",
        "operationId": "Invalidate_no_go_voice_Redis_cache_cross_environment_nogo_voices_invalidate_cache_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Invalidate No Go Voice Redis Cache Cross Environment Nogo Voices Invalidate Cache Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/voices/update-cloned-voices-ref": {
      "post": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Update Cloned Voices Ref",
        "operationId": "update_cloned_voices_ref_cross_environment_voices_update_cloned_voices_ref_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_cloned_voices_ref_cross_environment_voices_update_cloned_voices_ref_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateClonedVoicesRefCrossEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/voices/notify-user-on-voice-withdrawal": {
      "post": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Notify User On Voice Withdrawal Route",
        "operationId": "notify_user_on_voice_withdrawal_route_cross_environment_voices_notify_user_on_voice_withdrawal_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_notify_user_on_voice_withdrawal_route_cross_environment_voices_notify_user_on_voice_withdrawal_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/voices/notify-user-on-voice-withdrawal-revert": {
      "post": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Notify User On Voice Withdrawal Revert Route",
        "operationId": "notify_user_on_voice_withdrawal_revert_route_cross_environment_voices_notify_user_on_voice_withdrawal_revert_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_notify_user_on_voice_withdrawal_revert_route_cross_environment_voices_notify_user_on_voice_withdrawal_revert_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/voices/copy-voice": {
      "post": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Create Voice Copy Cross Env",
        "operationId": "create_voice_copy_cross_env_cross_environment_voices_copy_voice_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyVoiceToIsolatedEnvRequestModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopyVoiceToIsolatedEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/user": {
      "get": {
        "tags": [
          "cross-environment",
          "user"
        ],
        "summary": "Get The User Info For A User On A Remote Environment",
        "description": "Get the user info from one production environment to another e.g. from EU prod to US prod.",
        "operationId": "Get_the_user_info_for_a_user_on_a_remote_environment_cross_environment_user_get",
        "parameters": [
          {
            "name": "public_user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Public User Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserCrossEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/user/{user_id}/voices/{voice_id}": {
      "get": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Get Voice Cross Env",
        "operationId": "get_voice_cross_env_cross_environment_user__user_id__voices__voice_id__get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "load_without_permissions",
                "admin",
                "editor",
                "viewer"
              ],
              "type": "string",
              "title": "Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceCrossEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/user/{user_id}/voices/{voice_id}/cloned-by/{document_id}": {
      "get": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Get Cloned By Document Cross Env",
        "operationId": "get_cloned_by_document_cross_env_cross_environment_user__user_id__voices__voice_id__cloned_by__document_id__get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetClonedByDocumentCrossEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Set Cloned By Document Cross Env",
        "operationId": "set_cloned_by_document_cross_env_cross_environment_user__user_id__voices__voice_id__cloned_by__document_id__post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_set_cloned_by_document_cross_env_cross_environment_user__user_id__voices__voice_id__cloned_by__document_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Delete Cloned By Document Cross Env",
        "operationId": "delete_cloned_by_document_cross_env_cross_environment_user__user_id__voices__voice_id__cloned_by__document_id__delete",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          },
          {
            "name": "trigger_recompute",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Trigger Recompute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/user/{user_id}/voices/{voice_id}/speaker-embedding-from-cloud": {
      "get": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Get Speaker Embedding From Cloud Cross Env",
        "operationId": "get_speaker_embedding_from_cloud_cross_env_cross_environment_user__user_id__voices__voice_id__speaker_embedding_from_cloud_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "instance_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSpeakerEmbeddingFromCloudCrossEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/nogo-voices/{nogo_voice_id}/ecapa-embedding": {
      "get": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Get A No-Go Voice Embedding From Xi-Central",
        "description": "Get a no-go voice embedding from xi-central",
        "operationId": "Get_a_no_go_voice_embedding_from_xi_central_cross_environment_nogo_voices__nogo_voice_id__ecapa_embedding_get",
        "parameters": [
          {
            "name": "nogo_voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Nogo Voice Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoGoVoiceEmbeddingFromCloudCrossEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/user/{user_id}/voices/{voice_id}/speaker-embedding/compute": {
      "post": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Compute Speaker Embedding Cross Env",
        "operationId": "compute_speaker_embedding_cross_env_cross_environment_user__user_id__voices__voice_id__speaker_embedding_compute_post",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_compute_speaker_embedding_cross_env_cross_environment_user__user_id__voices__voice_id__speaker_embedding_compute_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputeSpeakerEmbeddingCrossEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/user/{user_id}/voices/{voice_id}/ecapa-embedding": {
      "get": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Get Ecapa Embedding Cross Env",
        "operationId": "get_ecapa_embedding_cross_env_cross_environment_user__user_id__voices__voice_id__ecapa_embedding_get",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Voice Id"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEcapaEmbeddingCrossEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/shared-voices": {
      "get": {
        "tags": [
          "cross-environment",
          "voices"
        ],
        "summary": "Get Shared Voices Cross Environment",
        "description": "Gets a list of shared voices across environments (mirrors /v1/shared-voices)",
        "operationId": "Get_shared_voices_cross_environment_cross_environment_shared_voices_get",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "How many shared voices to return at maximum. Can not exceed 100, defaults to 30.",
              "default": 30,
              "title": "Page Size"
            },
            "description": "How many shared voices to return at maximum. Can not exceed 100, defaults to 30."
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Voice category used for filtering",
              "enum": [
                "professional",
                "famous",
                "high_quality"
              ],
              "title": "Category"
            },
            "description": "Voice category used for filtering"
          },
          {
            "name": "gender",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Gender used for filtering",
              "title": "Gender"
            },
            "description": "Gender used for filtering"
          },
          {
            "name": "age",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Age used for filtering",
              "title": "Age"
            },
            "description": "Age used for filtering"
          },
          {
            "name": "accent",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Accent used for filtering",
              "title": "Accent"
            },
            "description": "Accent used for filtering"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Language used for filtering",
              "title": "Language"
            },
            "description": "Language used for filtering"
          },
          {
            "name": "locale",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Locale used for filtering",
              "title": "Locale"
            },
            "description": "Locale used for filtering"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term used for filtering",
              "title": "Search"
            },
            "description": "Search term used for filtering"
          },
          {
            "name": "use_cases",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Use-case used for filtering",
              "title": "Use Cases"
            },
            "description": "Use-case used for filtering"
          },
          {
            "name": "descriptives",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Descriptive used for filtering",
              "title": "Descriptives"
            },
            "description": "Descriptive used for filtering"
          },
          {
            "name": "featured",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Filter featured voices",
              "default": false,
              "title": "Featured"
            },
            "description": "Filter featured voices"
          },
          {
            "name": "min_notice_period_days",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter voices with a minimum notice period of the given number of days.",
              "title": "Min Notice Period Days"
            },
            "description": "Filter voices with a minimum notice period of the given number of days."
          },
          {
            "name": "include_custom_rates",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include/exclude voices with custom rates",
              "title": "Include Custom Rates"
            },
            "description": "Include/exclude voices with custom rates"
          },
          {
            "name": "include_live_moderated",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include/exclude voices that are live moderated",
              "title": "Include Live Moderated"
            },
            "description": "Include/exclude voices that are live moderated"
          },
          {
            "name": "reader_app_enabled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Filter voices that are enabled for the reader app",
              "default": false,
              "title": "Reader App Enabled"
            },
            "description": "Filter voices that are enabled for the reader app"
          },
          {
            "name": "owner_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter voices by public owner ID",
              "title": "Owner Id"
            },
            "description": "Filter voices by public owner ID"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Sort criteria",
              "title": "Sort"
            },
            "description": "Sort criteria"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSharedVoicesProcessedCrossEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/payouts/reward-delayed-rewards": {
      "post": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Reward Delayed Rewards Route",
        "operationId": "reward_delayed_rewards_route_cross_environment_payouts_reward_delayed_rewards_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RewardsFromRemoteCrossEnvRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardFromRemoteResultsCrossEnvResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/shared-voices/collections": {
      "get": {
        "tags": [
          "cross-environment",
          "voices"
        ],
        "summary": "Get Voice Collections Cross Environment",
        "description": "Gets a list of voice collections across environments (mirrors /v1/shared-voices/collections)",
        "operationId": "Get_voice_collections_cross_environment_cross_environment_shared_voices_collections_get",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "language",
                    "use_case",
                    "special"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The type of the voice collection",
              "title": "Category"
            },
            "description": "The type of the voice collection"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "The language code of the voice collection",
              "title": "Language"
            },
            "description": "The language code of the voice collection"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceCollectionsRawCrossEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/shared-voices/collections/{collection_id}": {
      "get": {
        "tags": [
          "cross-environment",
          "voices"
        ],
        "summary": "Get Voice Collection Cross Environment",
        "description": "Gets a specific voice collection across environments (mirrors /v1/shared-voices/collections/{collection_id})",
        "operationId": "Get_voice_collection_cross_environment_cross_environment_shared_voices_collections__collection_id__get",
        "parameters": [
          {
            "name": "collection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The ID of the voice collection",
              "title": "Collection Id"
            },
            "description": "The ID of the voice collection"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoiceCollectionProcessedCrossEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/nogo-voices": {
      "get": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Get All No-Go Voice Names And Ids From Xi-Central",
        "description": "Get all restricted voices from xi-central (mirrors /admin/{admin_url_prefix}/nogo-voices)",
        "operationId": "Get_all_no_go_voice_names_and_ids_from_xi_central_cross_environment_nogo_voices_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNoGoVoicesCrossEnvResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/consolidated-billing/enable": {
      "post": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Enable Consolidated Billing (Called By Remote Env)",
        "description": "Enable consolidated billing for a workspace by linking it to a main billing workspace. This is called by the remote env to trigger changes in the main billing workspace.",
        "operationId": "Enable_Consolidated_Billing__Called_By_Remote_Env__cross_environment_consolidated_billing_enable_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Enable_Consolidated_Billing__Called_By_Remote_Env__cross_environment_consolidated_billing_enable_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/consolidated-billing/disable": {
      "post": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Disable Consolidated Billing (Called By Remote Env)",
        "description": "Disable consolidated billing for a workspace by unlinking it from a main billing workspace. This is called by the remote env to trigger changes in the main billing workspace.",
        "operationId": "Disable_Consolidated_Billing__Called_By_Remote_Env__cross_environment_consolidated_billing_disable_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Disable_Consolidated_Billing__Called_By_Remote_Env__cross_environment_consolidated_billing_disable_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/consolidated-billing/workspace/{workspace_id}": {
      "get": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Enable Consolidated Billing (Called By Remote Env)",
        "description": "Enable consolidated billing for a workspace by linking it to a main billing workspace. This is called by the remote env to trigger changes in the main billing workspace.",
        "operationId": "Enable_Consolidated_Billing__Called_By_Remote_Env__cross_environment_consolidated_billing_workspace__workspace_id__get",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsolidatedBillingSubscriptionSyncCrossEnvResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/admin/lookup-user-workspace": {
      "get": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Lookup User Or Workspace On A Remote Environment",
        "description": "Look up a user or workspace by ID, public user ID, email, or billing ID on a remote environment",
        "operationId": "Lookup_User_or_Workspace_on_a_remote_environment_cross_environment_admin_lookup_user_workspace_get",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A lookup value that will be matched against multiple fields.",
              "embed": true,
              "title": "Search"
            },
            "description": "A lookup value that will be matched against multiple fields."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResultResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/cross-environment/admin/lookup-resource": {
      "get": {
        "tags": [
          "cross-environment"
        ],
        "summary": "Lookup Resource On A Remote Environment",
        "description": "Look up a resource by resource ID on a remote environment",
        "operationId": "Lookup_Resource_on_a_remote_environment_cross_environment_admin_lookup_resource_get",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "A lookup value that will be matched against multiple fields.",
              "embed": true,
              "title": "Search"
            },
            "description": "A lookup value that will be matched against multiple fields."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResultResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/impact-program/partners": {
      "get": {
        "tags": [
          "impact-program"
        ],
        "summary": "Get Available Impact Program Partners",
        "description": "Fetch available Impact Program partners for application dropdown",
        "operationId": "Get_Available_Impact_Program_Partners_v1_impact_program_partners_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactProgramPartnerSimpleListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/impact-program/apply": {
      "post": {
        "tags": [
          "impact-program"
        ],
        "summary": "Apply For Impact Program",
        "description": "Submit an application for the Impact Program",
        "operationId": "Apply_for_Impact_Program_v1_impact_program_apply_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpactProgramApplicationRequestModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactProgramApplicationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/impact-program/user-applications": {
      "get": {
        "tags": [
          "impact-program"
        ],
        "summary": "Get User Impact Program Applications",
        "description": "Fetch impact program applications for the authenticated user",
        "operationId": "Get_User_Impact_Program_Applications_v1_impact_program_user_applications_get",
        "parameters": [
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "pending",
                    "approved",
                    "rejected",
                    "under_review"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter applications by status (pending, approved, rejected, under_review)",
              "title": "Status Filter"
            },
            "description": "Filter applications by status (pending, approved, rejected, under_review)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactProgramApplicationListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/impact-program/partner-applications": {
      "get": {
        "tags": [
          "impact-program"
        ],
        "summary": "Get Partner Impact Program Applications",
        "description": "Fetch impact program applications for the authenticated partner's workspace",
        "operationId": "Get_Partner_Impact_Program_Applications_v1_impact_program_partner_applications_get",
        "parameters": [
          {
            "name": "status_filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "pending",
                    "approved",
                    "rejected",
                    "under_review"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter applications by status (pending, approved, rejected, under_review)",
              "title": "Status Filter"
            },
            "description": "Filter applications by status (pending, approved, rejected, under_review)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactProgramApplicationListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/impact-program/applications/{application_id}/review": {
      "post": {
        "tags": [
          "impact-program"
        ],
        "summary": "Review Impact Program Application",
        "description": "Approve or reject an impact program application",
        "operationId": "Review_Impact_Program_Application_v1_impact_program_applications__application_id__review_post",
        "parameters": [
          {
            "name": "application_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Application Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpactProgramApplicationReviewRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImpactProgramApplicationReviewResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AISpeechClassifierResponseModel": {
        "properties": {
          "probability": {
            "type": "number",
            "title": "Probability"
          }
        },
        "type": "object",
        "required": [
          "probability"
        ],
        "title": "AISpeechClassifierResponseModel"
      },
      "ASRConversationalConfig": {
        "properties": {
          "quality": {
            "$ref": "#/components/schemas/ASRQuality",
            "description": "The quality of the transcription",
            "default": "high"
          },
          "provider": {
            "$ref": "#/components/schemas/ASRProvider",
            "description": "The provider of the transcription service",
            "default": "elevenlabs"
          },
          "user_input_audio_format": {
            "$ref": "#/components/schemas/ASRInputFormat",
            "description": "The format of the audio to be transcribed",
            "default": "pcm_16000"
          },
          "keywords": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Keywords",
            "description": "Keywords to boost prediction probability for"
          }
        },
        "type": "object",
        "title": "ASRConversationalConfig",
        "example": {
          "keywords": [
            "hello",
            "world"
          ],
          "provider": "elevenlabs",
          "quality": "high",
          "user_input_audio_format": "pcm_16000"
        }
      },
      "ASRConversationalConfigWorkflowOverride": {
        "properties": {
          "quality": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ASRQuality"
              },
              {
                "type": "null"
              }
            ],
            "description": "The quality of the transcription"
          },
          "provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ASRProvider"
              },
              {
                "type": "null"
              }
            ],
            "description": "The provider of the transcription service"
          },
          "user_input_audio_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ASRInputFormat"
              },
              {
                "type": "null"
              }
            ],
            "description": "The format of the audio to be transcribed"
          },
          "keywords": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keywords",
            "description": "Keywords to boost prediction probability for"
          }
        },
        "type": "object",
        "title": "ASRConversationalConfigWorkflowOverride",
        "example": {
          "keywords": [
            "hello",
            "world"
          ],
          "provider": "elevenlabs",
          "quality": "high",
          "user_input_audio_format": "pcm_16000"
        }
      },
      "ASRInputFormat": {
        "type": "string",
        "enum": [
          "pcm_8000",
          "pcm_16000",
          "pcm_22050",
          "pcm_24000",
          "pcm_44100",
          "pcm_48000",
          "ulaw_8000"
        ],
        "title": "ASRInputFormat"
      },
      "ASRProvider": {
        "type": "string",
        "enum": [
          "elevenlabs",
          "realtime_scribe_v1"
        ],
        "title": "ASRProvider"
      },
      "ASRQuality": {
        "type": "string",
        "enum": [
          "high"
        ],
        "title": "ASRQuality"
      },
      "AccountMetadataResponseModel": {
        "properties": {
          "agrees_to_product_updates": {
            "type": "boolean",
            "title": "Agrees To Product Updates"
          },
          "geo_location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GeoLocationResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "agrees_to_product_updates"
        ],
        "title": "AccountMetadataResponseModel"
      },
      "AddChapterResponseModel": {
        "properties": {
          "chapter": {
            "$ref": "#/components/schemas/ChapterWithContentResponseModel"
          }
        },
        "type": "object",
        "required": [
          "chapter"
        ],
        "title": "AddChapterResponseModel"
      },
      "AddKnowledgeBaseResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "AddKnowledgeBaseResponseModel"
      },
      "AddPatch": {
        "properties": {
          "path": {
            "type": "string",
            "title": "Path"
          },
          "op": {
            "type": "string",
            "const": "add",
            "title": "Op"
          },
          "value": {
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "path",
          "op",
          "value"
        ],
        "title": "AddPatch"
      },
      "AddProjectResponseModel": {
        "properties": {
          "project": {
            "$ref": "#/components/schemas/ProjectResponseModel"
          }
        },
        "type": "object",
        "required": [
          "project"
        ],
        "title": "AddProjectResponseModel"
      },
      "AddPronunciationDictionaryResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the created pronunciation dictionary."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the created pronunciation dictionary."
          },
          "created_by": {
            "type": "string",
            "title": "Created By",
            "description": "The user ID of the creator of the pronunciation dictionary."
          },
          "creation_time_unix": {
            "type": "integer",
            "title": "Creation Time Unix",
            "description": "The creation time of the pronunciation dictionary in Unix timestamp."
          },
          "version_id": {
            "type": "string",
            "title": "Version Id",
            "description": "The ID of the created pronunciation dictionary version."
          },
          "version_rules_num": {
            "type": "integer",
            "title": "Version Rules Num",
            "description": "The number of rules in the version of the pronunciation dictionary."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the pronunciation dictionary."
          },
          "permission_on_resource": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission On Resource",
            "description": "The permission on the resource of the pronunciation dictionary."
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_by",
          "creation_time_unix",
          "version_id",
          "version_rules_num",
          "permission_on_resource"
        ],
        "title": "AddPronunciationDictionaryResponseModel",
        "example": {
          "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
          "creation_time_unix": 1714156800,
          "description": "This is a test dictionary",
          "id": "5xM3yVvZQKV0EfqQpLrJ",
          "name": "My Dictionary",
          "permission_on_resource": "admin",
          "version_id": "5xM3yVvZQKV0EfqQpLrJ",
          "version_rules_num": 5
        }
      },
      "AddTurnToChatResponseModel": {
        "properties": {
          "songs_updates": {
            "items": {
              "$ref": "#/components/schemas/SongResponseModel"
            },
            "type": "array",
            "title": "Songs Updates"
          },
          "messages_updates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ChatMessage"
            },
            "type": "object",
            "title": "Messages Updates"
          },
          "graph_updates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/SelectionGroup"
            },
            "type": "object",
            "title": "Graph Updates"
          }
        },
        "type": "object",
        "required": [
          "songs_updates",
          "messages_updates",
          "graph_updates"
        ],
        "title": "AddTurnToChatResponseModel"
      },
      "AddVoiceIVCResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the newly created voice."
          },
          "requires_verification": {
            "type": "boolean",
            "title": "Requires Verification",
            "description": "Whether the voice requires verification"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "requires_verification"
        ],
        "title": "AddVoiceIVCResponseModel",
        "example": {
          "requires_verification": false,
          "voice_id": "c38kUX8pkfYO2kHyqfFy"
        }
      },
      "AddVoiceResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the voice."
          }
        },
        "type": "object",
        "required": [
          "voice_id"
        ],
        "title": "AddVoiceResponseModel",
        "example": {
          "voice_id": "b38kUX8pkfYO2kHyqfFy"
        }
      },
      "AddVoiceToUserVoiceCollectionResponseModel": {
        "properties": {
          "collection_id": {
            "type": "string",
            "title": "Collection Id"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          }
        },
        "type": "object",
        "required": [
          "collection_id",
          "voice_id"
        ],
        "title": "AddVoiceToUserVoiceCollectionResponseModel"
      },
      "AddWorkspaceGroupMemberResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the workspace group member addition request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "AddWorkspaceGroupMemberResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "AddWorkspaceInviteResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the workspace invite request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "AddWorkspaceInviteResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "AdditionalFormatResponseModel": {
        "properties": {
          "requested_format": {
            "type": "string",
            "title": "Requested Format",
            "description": "The requested format."
          },
          "file_extension": {
            "type": "string",
            "title": "File Extension",
            "description": "The file extension of the additional format."
          },
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "The content type of the additional format."
          },
          "is_base64_encoded": {
            "type": "boolean",
            "title": "Is Base64 Encoded",
            "description": "Whether the content is base64 encoded."
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "The content of the additional format."
          }
        },
        "type": "object",
        "required": [
          "requested_format",
          "file_extension",
          "content_type",
          "is_base64_encoded",
          "content"
        ],
        "title": "AdditionalFormatResponseModel"
      },
      "AdditionalFormats": {
        "items": {
          "$ref": "#/components/schemas/ExportOptions"
        },
        "type": "array",
        "maxItems": 10,
        "title": "AdditionalFormats"
      },
      "AgentBan": {
        "properties": {
          "at_unix": {
            "type": "integer",
            "title": "At Unix"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "reason_type": {
            "$ref": "#/components/schemas/BanReasonType"
          }
        },
        "type": "object",
        "required": [
          "at_unix",
          "reason_type"
        ],
        "title": "AgentBan",
        "x-fern-ignore": "True"
      },
      "AgentCallLimits": {
        "properties": {
          "agent_concurrency_limit": {
            "type": "integer",
            "title": "Agent Concurrency Limit",
            "description": "The maximum number of concurrent conversations. -1 indicates that there is no maximum",
            "default": -1
          },
          "daily_limit": {
            "type": "integer",
            "title": "Daily Limit",
            "description": "The maximum number of conversations per day",
            "default": 100000
          },
          "bursting_enabled": {
            "type": "boolean",
            "title": "Bursting Enabled",
            "description": "Whether to enable bursting. If true, exceeding workspace concurrency limit will be allowed up to 3 times the limit. Calls will be charged at double rate when exceeding the limit.",
            "default": true
          }
        },
        "type": "object",
        "title": "AgentCallLimits",
        "example": {
          "agent_concurrency_limit": -1,
          "bursting_enabled": true,
          "daily_limit": 100000
        }
      },
      "AgentConfigAPIModel-Input": {
        "properties": {
          "first_message": {
            "type": "string",
            "title": "First Message",
            "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
            "default": "",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "Language of the agent - used for ASR and TTS",
            "default": "en",
            "x-convai-client-override": true
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig",
            "description": "Configuration for dynamic variables"
          },
          "prompt": {
            "$ref": "#/components/schemas/PromptAgentAPIModel-Input",
            "description": "The prompt for the agent"
          }
        },
        "type": "object",
        "title": "AgentConfigAPIModel",
        "example": {
          "first_message": "Hello, how can I help you today?",
          "language": "en"
        }
      },
      "AgentConfigAPIModel-Output": {
        "properties": {
          "first_message": {
            "type": "string",
            "title": "First Message",
            "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
            "default": "",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "Language of the agent - used for ASR and TTS",
            "default": "en",
            "x-convai-client-override": true
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig",
            "description": "Configuration for dynamic variables"
          },
          "prompt": {
            "$ref": "#/components/schemas/PromptAgentAPIModel-Output",
            "description": "The prompt for the agent"
          }
        },
        "type": "object",
        "title": "AgentConfigAPIModel",
        "example": {
          "first_message": "Hello, how can I help you today?",
          "language": "en"
        }
      },
      "AgentConfigAPIModelWorkflowOverride-Input": {
        "properties": {
          "first_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Message",
            "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Language of the agent - used for ASR and TTS",
            "x-convai-client-override": true
          },
          "dynamic_variables": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DynamicVariablesConfigWorkflowOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for dynamic variables"
          },
          "prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptAgentAPIModelWorkflowOverride-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The prompt for the agent"
          }
        },
        "type": "object",
        "title": "AgentConfigAPIModelWorkflowOverride",
        "example": {
          "dynamic_variables": {
            "dynamic_variable_placeholders": {
              "user_name": "John Doe"
            }
          },
          "first_message": "Hello, how can I help you today?",
          "language": "en",
          "prompt": {
            "knowledge_base": [],
            "llm": "gemini-2.0-flash-001",
            "max_tokens": -1,
            "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
            "temperature": 0,
            "tool_ids": [],
            "tools": []
          }
        }
      },
      "AgentConfigAPIModelWorkflowOverride-Output": {
        "properties": {
          "first_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Message",
            "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Language of the agent - used for ASR and TTS",
            "x-convai-client-override": true
          },
          "dynamic_variables": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DynamicVariablesConfigWorkflowOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for dynamic variables"
          },
          "prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptAgentAPIModelWorkflowOverride-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The prompt for the agent"
          }
        },
        "type": "object",
        "title": "AgentConfigAPIModelWorkflowOverride",
        "example": {
          "dynamic_variables": {
            "dynamic_variable_placeholders": {
              "user_name": "John Doe"
            }
          },
          "first_message": "Hello, how can I help you today?",
          "language": "en",
          "prompt": {
            "knowledge_base": [],
            "llm": "gemini-2.0-flash-001",
            "max_tokens": -1,
            "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
            "temperature": 0,
            "tool_ids": [],
            "tools": []
          }
        }
      },
      "AgentConfigOverride": {
        "properties": {
          "first_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Message",
            "description": "If non-empty, the first message the agent will say. If empty, the agent waits for the user to start the discussion.",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Language of the agent - used for ASR and TTS",
            "x-convai-client-override": true
          },
          "prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PromptAgentAPIModelOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "The prompt for the agent"
          }
        },
        "type": "object",
        "title": "AgentConfigOverride",
        "example": {
          "first_message": "Hello, how can I help you today?",
          "language": "en",
          "prompt": {
            "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation."
          }
        }
      },
      "AgentConfigOverrideConfig": {
        "properties": {
          "first_message": {
            "type": "boolean",
            "title": "First Message",
            "description": "Whether to allow overriding the first_message field.",
            "default": false
          },
          "language": {
            "type": "boolean",
            "title": "Language",
            "description": "Whether to allow overriding the language field.",
            "default": false
          },
          "prompt": {
            "$ref": "#/components/schemas/PromptAgentAPIModelOverrideConfig",
            "description": "Configures overrides for nested fields."
          }
        },
        "type": "object",
        "title": "AgentConfigOverrideConfig"
      },
      "AgentFailureResponseExample": {
        "properties": {
          "response": {
            "type": "string",
            "title": "Response"
          },
          "type": {
            "type": "string",
            "const": "failure",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "response",
          "type"
        ],
        "title": "AgentFailureResponseExample"
      },
      "AgentMetadataResponseModel": {
        "properties": {
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs",
            "description": "The creation time of the agent in unix seconds"
          }
        },
        "type": "object",
        "required": [
          "created_at_unix_secs"
        ],
        "title": "AgentMetadataResponseModel"
      },
      "AgentMetricResponse": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_name": {
            "type": "string",
            "title": "Agent Name"
          },
          "agent_avatar": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrbAvatar"
              },
              {
                "$ref": "#/components/schemas/ImageAvatar"
              },
              {
                "$ref": "#/components/schemas/URLAvatar"
              }
            ],
            "title": "Agent Avatar"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "cost": {
            "type": "integer",
            "title": "Cost"
          },
          "llm_cost": {
            "type": "number",
            "title": "Llm Cost"
          },
          "duration": {
            "type": "integer",
            "title": "Duration"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "agent_name",
          "agent_avatar",
          "count",
          "cost",
          "llm_cost",
          "duration"
        ],
        "title": "AgentMetricResponse"
      },
      "AgentPlatformSettingsRequestModel": {
        "properties": {
          "auth": {
            "$ref": "#/components/schemas/AuthSettings",
            "description": "Settings for authentication"
          },
          "evaluation": {
            "$ref": "#/components/schemas/EvaluationSettings",
            "description": "Settings for evaluation"
          },
          "widget": {
            "$ref": "#/components/schemas/WidgetConfig-Input",
            "description": "Configuration for the widget"
          },
          "data_collection": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "type": "object",
            "title": "Data Collection",
            "description": "Data collection settings"
          },
          "overrides": {
            "$ref": "#/components/schemas/ConversationInitiationClientDataConfig-Input",
            "description": "Additional overrides for the agent during conversation initiation"
          },
          "call_limits": {
            "$ref": "#/components/schemas/AgentCallLimits",
            "description": "Call limits for the agent"
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyConfig",
            "description": "Privacy settings for the agent"
          },
          "workspace_overrides": {
            "$ref": "#/components/schemas/AgentWorkspaceOverrides-Input",
            "description": "Workspace overrides for the agent"
          },
          "testing": {
            "$ref": "#/components/schemas/AgentTestingSettings",
            "description": "Testing configuration for the agent",
            "x-fern-ignore": "True"
          }
        },
        "type": "object",
        "title": "AgentPlatformSettingsRequestModel"
      },
      "AgentPlatformSettingsResponseModel": {
        "properties": {
          "auth": {
            "$ref": "#/components/schemas/AuthSettings",
            "description": "Settings for authentication"
          },
          "evaluation": {
            "$ref": "#/components/schemas/EvaluationSettings",
            "description": "Settings for evaluation"
          },
          "widget": {
            "$ref": "#/components/schemas/WidgetConfig-Output",
            "description": "Configuration for the widget"
          },
          "data_collection": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "type": "object",
            "title": "Data Collection",
            "description": "Data collection settings"
          },
          "overrides": {
            "$ref": "#/components/schemas/ConversationInitiationClientDataConfig-Output",
            "description": "Additional overrides for the agent during conversation initiation"
          },
          "call_limits": {
            "$ref": "#/components/schemas/AgentCallLimits",
            "description": "Call limits for the agent"
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyConfig",
            "description": "Privacy settings for the agent"
          },
          "workspace_overrides": {
            "$ref": "#/components/schemas/AgentWorkspaceOverrides-Output",
            "description": "Workspace overrides for the agent"
          },
          "testing": {
            "$ref": "#/components/schemas/AgentTestingSettings",
            "description": "Testing configuration for the agent",
            "x-fern-ignore": "True"
          },
          "safety": {
            "$ref": "#/components/schemas/SafetyResponseModel"
          }
        },
        "type": "object",
        "title": "AgentPlatformSettingsResponseModel"
      },
      "AgentSimulatedChatTestResponseModel": {
        "properties": {
          "simulated_conversation": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel-Output"
            },
            "type": "array",
            "title": "Simulated Conversation"
          },
          "analysis": {
            "$ref": "#/components/schemas/ConversationHistoryAnalysisCommonModel"
          }
        },
        "type": "object",
        "required": [
          "simulated_conversation",
          "analysis"
        ],
        "title": "AgentSimulatedChatTestResponseModel"
      },
      "AgentSuccessfulResponseExample": {
        "properties": {
          "response": {
            "type": "string",
            "title": "Response"
          },
          "type": {
            "type": "string",
            "const": "success",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "response",
          "type"
        ],
        "title": "AgentSuccessfulResponseExample"
      },
      "AgentSummaryResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id",
            "description": "The ID of the agent"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the agent"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Agent tags used to categorize the agent"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs",
            "description": "The creation time of the agent in unix seconds"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo",
            "description": "The access information of the agent"
          },
          "last_call_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Call Time Unix Secs",
            "description": "The time of the most recent call in unix seconds, null if no calls have been made"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "name",
          "tags",
          "created_at_unix_secs",
          "access_info"
        ],
        "title": "AgentSummaryResponseModel",
        "example": {
          "access_info": {
            "creator_email": "john@example.com",
            "creator_name": "John Doe",
            "is_creator": true,
            "role": "admin"
          },
          "agent_id": "J3Pbu5gP6NNKBscdCdwB",
          "created_at_unix_secs": 1716153600,
          "last_call_time_unix_secs": 1716240000,
          "name": "My Agent",
          "tags": [
            "Customer Support",
            "Technical Help",
            "Eleven"
          ]
        }
      },
      "AgentTestingSettings": {
        "properties": {
          "test_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 20,
            "minItems": 0,
            "title": "Test Ids",
            "description": "List of test IDs that should be run for this agent"
          }
        },
        "type": "object",
        "title": "AgentTestingSettings",
        "description": "Settings for agent testing configuration.",
        "example": {
          "test_ids": [
            "test_123",
            "test_456"
          ]
        }
      },
      "AgentTransfer": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          },
          "delay_ms": {
            "type": "integer",
            "title": "Delay Ms",
            "default": 0
          },
          "transfer_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transfer Message"
          },
          "enable_transferred_agent_first_message": {
            "type": "boolean",
            "title": "Enable Transferred Agent First Message",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "condition"
        ],
        "title": "AgentTransfer"
      },
      "AgentWorkflowRequestModel": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "Whether the workflow is enabled.",
            "default": false
          },
          "edges": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkflowEdgeModel-Input"
            },
            "type": "object",
            "title": "Edges"
          },
          "nodes": {
            "additionalProperties": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowStartNodeModel-Input"
                },
                {
                  "$ref": "#/components/schemas/WorkflowEndNodeModel-Input"
                },
                {
                  "$ref": "#/components/schemas/WorkflowPhoneNumberNodeModel-Input"
                },
                {
                  "$ref": "#/components/schemas/WorkflowOverrideAgentNodeModel-Input"
                },
                {
                  "$ref": "#/components/schemas/WorkflowStandaloneAgentNodeModel-Input"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "end": "#/components/schemas/WorkflowEndNodeModel-Input",
                  "override_agent": "#/components/schemas/WorkflowOverrideAgentNodeModel-Input",
                  "phone_number": "#/components/schemas/WorkflowPhoneNumberNodeModel-Input",
                  "standalone_agent": "#/components/schemas/WorkflowStandaloneAgentNodeModel-Input",
                  "start": "#/components/schemas/WorkflowStartNodeModel-Input"
                }
              }
            },
            "type": "object",
            "minProperties": 1,
            "title": "Nodes"
          }
        },
        "type": "object",
        "title": "AgentWorkflowRequestModel"
      },
      "AgentWorkflowResponseModel": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "Whether the workflow is enabled.",
            "default": false
          },
          "edges": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkflowEdgeModel-Output"
            },
            "type": "object",
            "title": "Edges"
          },
          "nodes": {
            "additionalProperties": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WorkflowStartNodeModel-Output"
                },
                {
                  "$ref": "#/components/schemas/WorkflowEndNodeModel-Output"
                },
                {
                  "$ref": "#/components/schemas/WorkflowPhoneNumberNodeModel-Output"
                },
                {
                  "$ref": "#/components/schemas/WorkflowOverrideAgentNodeModel-Output"
                },
                {
                  "$ref": "#/components/schemas/WorkflowStandaloneAgentNodeModel-Output"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "end": "#/components/schemas/WorkflowEndNodeModel-Output",
                  "override_agent": "#/components/schemas/WorkflowOverrideAgentNodeModel-Output",
                  "phone_number": "#/components/schemas/WorkflowPhoneNumberNodeModel-Output",
                  "standalone_agent": "#/components/schemas/WorkflowStandaloneAgentNodeModel-Output",
                  "start": "#/components/schemas/WorkflowStartNodeModel-Output"
                }
              }
            },
            "type": "object",
            "minProperties": 1,
            "title": "Nodes"
          }
        },
        "type": "object",
        "required": [
          "enabled",
          "edges",
          "nodes"
        ],
        "title": "AgentWorkflowResponseModel"
      },
      "AgentWorkspaceOverrides-Input": {
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "The webhook to send conversation initiation client data to"
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          }
        },
        "type": "object",
        "title": "AgentWorkspaceOverrides"
      },
      "AgentWorkspaceOverrides-Output": {
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
              },
              {
                "type": "null"
              }
            ],
            "description": "The webhook to send conversation initiation client data to"
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          }
        },
        "type": "object",
        "title": "AgentWorkspaceOverrides"
      },
      "AlignmentRequest": {
        "properties": {
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time",
          "text"
        ],
        "title": "AlignmentRequest",
        "description": "Request payload for forced alignment of audio with text."
      },
      "AlignmentResponse": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "words": {
            "items": {
              "$ref": "#/components/schemas/WordTiming"
            },
            "type": "array",
            "title": "Words"
          }
        },
        "type": "object",
        "required": [
          "text",
          "words"
        ],
        "title": "AlignmentResponse",
        "description": "Response payload for forced alignment of audio with text."
      },
      "AllowlistItem": {
        "properties": {
          "hostname": {
            "type": "string",
            "title": "Hostname",
            "description": "The hostname of the allowed origin"
          }
        },
        "type": "object",
        "required": [
          "hostname"
        ],
        "title": "AllowlistItem"
      },
      "Annotations": {
        "properties": {
          "audience": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "user",
                    "assistant"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audience"
          },
          "priority": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "Annotations"
      },
      "ArrayJsonSchemaProperty-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "array",
            "title": "Type",
            "default": "array"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
              },
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
              },
              {
                "$ref": "#/components/schemas/ArrayJsonSchemaProperty-Input"
              }
            ],
            "title": "Items"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ArrayJsonSchemaProperty"
      },
      "ArrayJsonSchemaProperty-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "array",
            "title": "Type",
            "default": "array"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
              },
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
              },
              {
                "$ref": "#/components/schemas/ArrayJsonSchemaProperty-Output"
              }
            ],
            "title": "Items"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "items"
        ],
        "title": "ArrayJsonSchemaProperty"
      },
      "AskAIRequestModel": {
        "properties": {
          "question": {
            "type": "string",
            "maxLength": 1000,
            "title": "Question",
            "description": "The user's question about the conversation history"
          },
          "agent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id",
            "description": "Filter by specific agent ID"
          },
          "call_successful": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EvaluationSuccessResult"
              },
              {
                "type": "null"
              }
            ],
            "description": "Filter by call success status"
          },
          "call_start_after_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Call Start After Unix",
            "description": "Filter conversations after this timestamp"
          },
          "call_start_before_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Call Start Before Unix",
            "description": "Filter conversations before this timestamp"
          },
          "page_size": {
            "type": "integer",
            "maximum": 20,
            "title": "Page Size",
            "description": "Number of conversations to analyze",
            "default": 20
          }
        },
        "type": "object",
        "required": [
          "question"
        ],
        "title": "AskAIRequestModel"
      },
      "AskAIResponseModel": {
        "properties": {
          "answer": {
            "type": "string",
            "title": "Answer",
            "description": "The AI's response to the user's question about conversation history"
          },
          "analyzed_conversations_count": {
            "type": "integer",
            "title": "Analyzed Conversations Count",
            "description": "Number of conversations analyzed"
          },
          "conversation_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Conversation Ids",
            "description": "List of conversation IDs that were analyzed"
          }
        },
        "type": "object",
        "required": [
          "answer",
          "analyzed_conversations_count",
          "conversation_ids"
        ],
        "title": "AskAIResponseModel",
        "example": {
          "analyzed_conversations_count": 15,
          "answer": "Based on the conversation history, I can see that most calls have been successful with an average duration of 3.2 minutes. The primary issues users face are related to product pricing inquiries [CONV_ID: abc123].",
          "conversation_ids": [
            "abc123",
            "def456",
            "ghi789"
          ]
        }
      },
      "AudioContent": {
        "properties": {
          "type": {
            "type": "string",
            "const": "audio",
            "title": "Type"
          },
          "data": {
            "type": "string",
            "title": "Data"
          },
          "mimeType": {
            "type": "string",
            "title": "Mimetype"
          },
          "annotations": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Annotations"
              },
              {
                "type": "null"
              }
            ]
          },
          "_meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "type",
          "data",
          "mimeType"
        ],
        "title": "AudioContent",
        "description": "Audio content for a message."
      },
      "AudioNativeConvertResponseModel": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "audio_is_or_will_be_available": {
            "type": "boolean",
            "title": "Audio Is Or Will Be Available"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "audio_is_or_will_be_available"
        ],
        "title": "AudioNativeConvertResponseModel"
      },
      "AudioNativeCreateProjectResponseModel": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the created Audio Native project."
          },
          "converting": {
            "type": "boolean",
            "title": "Converting",
            "description": "Whether the project is currently being converted."
          },
          "html_snippet": {
            "type": "string",
            "title": "Html Snippet",
            "description": "The HTML snippet to embed the Audio Native player."
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "converting",
          "html_snippet"
        ],
        "title": "AudioNativeCreateProjectResponseModel",
        "example": {
          "converting": false,
          "html_snippet": "\u003Cdiv id='audio-native-player'\u003E\u003C/div\u003E",
          "project_id": "JBFqnCBsd6RMkjVDRZzb"
        }
      },
      "AudioNativeDeviceStatsResponseModel": {
        "properties": {
          "device_breakdown": {
            "items": {
              "$ref": "#/components/schemas/DeviceResponseModel"
            },
            "type": "array",
            "title": "Device Breakdown"
          }
        },
        "type": "object",
        "required": [
          "device_breakdown"
        ],
        "title": "AudioNativeDeviceStatsResponseModel"
      },
      "AudioNativeEditContentResponseModel": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "converting": {
            "type": "boolean",
            "title": "Converting",
            "description": "Whether the project is currently being converted."
          },
          "publishing": {
            "type": "boolean",
            "title": "Publishing",
            "description": "Whether the project is currently being published."
          },
          "html_snippet": {
            "type": "string",
            "title": "Html Snippet",
            "description": "The HTML snippet to embed the Audio Native player."
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "converting",
          "publishing",
          "html_snippet"
        ],
        "title": "AudioNativeEditContentResponseModel",
        "example": {
          "converting": false,
          "html_snippet": "\u003Cdiv id='audio-native-player'\u003E\u003C/div\u003E",
          "project_id": "JBFqnCBsd6RMkjVDRZzb",
          "publishing": false
        }
      },
      "AudioNativeGeneralStatsResponseModel": {
        "properties": {
          "time": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Time"
          },
          "loads": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Loads"
          },
          "listens": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Listens"
          },
          "unique_listeners": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Unique Listeners"
          },
          "listen_duration_cumsum": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Listen Duration Cumsum"
          },
          "listen_duration_rate": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Listen Duration Rate"
          },
          "hype": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Hype"
          }
        },
        "type": "object",
        "required": [
          "time",
          "loads",
          "listens",
          "unique_listeners",
          "listen_duration_cumsum",
          "listen_duration_rate",
          "hype"
        ],
        "title": "AudioNativeGeneralStatsResponseModel"
      },
      "AudioNativeGetEmbedCodeResponseModel": {
        "properties": {
          "html_snippet": {
            "type": "string",
            "title": "Html Snippet"
          }
        },
        "type": "object",
        "required": [
          "html_snippet"
        ],
        "title": "AudioNativeGetEmbedCodeResponseModel"
      },
      "AudioNativePlayerStatsResponseModel": {
        "properties": {
          "heat_map": {
            "additionalProperties": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Heat Map"
          },
          "durations_map": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Durations Map"
          }
        },
        "type": "object",
        "required": [
          "heat_map",
          "durations_map"
        ],
        "title": "AudioNativePlayerStatsResponseModel"
      },
      "AudioNativeProjectResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "state": {
            "type": "string",
            "enum": [
              "default",
              "in_queue",
              "converting",
              "failed"
            ],
            "title": "State"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "latest_snapshot_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Snapshot Id"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "created_at_unix",
          "state",
          "url",
          "latest_snapshot_id",
          "access_level"
        ],
        "title": "AudioNativeProjectResponseModel"
      },
      "AudioNativeProjectSettingsDBModel": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "image": {
            "type": "string",
            "title": "Image"
          },
          "author": {
            "type": "string",
            "title": "Author"
          },
          "small": {
            "type": "boolean",
            "title": "Small"
          },
          "text_color": {
            "type": "string",
            "title": "Text Color"
          },
          "background_color": {
            "type": "string",
            "title": "Background Color"
          },
          "sessionization": {
            "type": "integer",
            "title": "Sessionization"
          }
        },
        "type": "object",
        "required": [
          "title",
          "image",
          "author",
          "small",
          "text_color",
          "background_color",
          "sessionization"
        ],
        "title": "AudioNativeProjectSettingsDBModel"
      },
      "AudioNativeProjectSettingsResponseModel": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "description": "The title of the project."
          },
          "image": {
            "type": "string",
            "title": "Image",
            "description": "The image of the project."
          },
          "author": {
            "type": "string",
            "title": "Author",
            "description": "The author of the project."
          },
          "small": {
            "type": "boolean",
            "title": "Small",
            "description": "Whether the project is small."
          },
          "text_color": {
            "type": "string",
            "title": "Text Color",
            "description": "The text color of the project."
          },
          "background_color": {
            "type": "string",
            "title": "Background Color",
            "description": "The background color of the project."
          },
          "sessionization": {
            "type": "integer",
            "title": "Sessionization",
            "description": "The sessionization of the project. Specifies for how many minutes to persist the session across page reloads."
          },
          "audio_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Path",
            "description": "The path of the audio file."
          },
          "audio_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Url",
            "description": "The URL of the audio file."
          },
          "status": {
            "type": "string",
            "enum": [
              "processing",
              "ready"
            ],
            "title": "Status",
            "description": "Current state of the project",
            "default": "ready"
          }
        },
        "type": "object",
        "required": [
          "title",
          "image",
          "author",
          "small",
          "text_color",
          "background_color",
          "sessionization"
        ],
        "title": "AudioNativeProjectSettingsResponseModel",
        "example": {
          "audio_path": "audio/my_project.mp3",
          "audio_url": "https://example.com/audio/my_project.mp3",
          "author": "John Doe",
          "background_color": "#FFFFFF",
          "image": "https://example.com/image.jpg",
          "sessionization": 1,
          "small": false,
          "status": "ready",
          "text_color": "#000000",
          "title": "My Project"
        }
      },
      "AudioNativeProjectsResponseModel": {
        "properties": {
          "projects": {
            "items": {
              "$ref": "#/components/schemas/AudioNativeProjectResponseModel"
            },
            "type": "array",
            "title": "Projects"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "projects",
          "next_cursor",
          "has_more"
        ],
        "title": "AudioNativeProjectsResponseModel"
      },
      "AudioNativeResponseModel": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "global_settings": {
            "$ref": "#/components/schemas/AudioNativeSettingsResponseModel"
          },
          "url_triggers": {
            "items": {
              "$ref": "#/components/schemas/AudioNativeURLTriggerResponseModel"
            },
            "type": "array",
            "title": "Url Triggers"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "enabled",
          "global_settings",
          "url_triggers"
        ],
        "title": "AudioNativeResponseModel"
      },
      "AudioNativeSettingsDBModel": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "image": {
            "type": "string",
            "title": "Image"
          },
          "author": {
            "type": "string",
            "title": "Author"
          },
          "small": {
            "type": "boolean",
            "title": "Small"
          },
          "text_color": {
            "type": "string",
            "title": "Text Color"
          },
          "background_color": {
            "type": "string",
            "title": "Background Color"
          },
          "sessionization": {
            "type": "integer",
            "title": "Sessionization"
          },
          "autoselect_authors_voice": {
            "type": "boolean",
            "title": "Autoselect Authors Voice"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id"
          },
          "auto_convert": {
            "type": "boolean",
            "title": "Auto Convert",
            "default": true
          },
          "pronunciation_dictionaries": {
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
            },
            "type": "array",
            "title": "Pronunciation Dictionaries"
          },
          "content_selectors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Selectors"
          },
          "blocked_selectors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked Selectors"
          },
          "always_set_default_author": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Always Set Default Author"
          },
          "always_set_default_title": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Always Set Default Title"
          },
          "header_section": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Header Section",
            "default": "@title"
          },
          "intro_section": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Intro Section",
            "default": "@author"
          },
          "outro_section": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outro Section",
            "default": ""
          },
          "apply_text_normalization": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "apply_english"
            ],
            "title": "Apply Text Normalization",
            "default": "off"
          }
        },
        "type": "object",
        "required": [
          "title",
          "image",
          "author",
          "small",
          "text_color",
          "background_color",
          "sessionization",
          "autoselect_authors_voice",
          "voice_id",
          "model_id"
        ],
        "title": "AudioNativeSettingsDBModel"
      },
      "AudioNativeSettingsResponseModel": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "author": {
            "type": "string",
            "title": "Author"
          },
          "text_color": {
            "type": "string",
            "title": "Text Color"
          },
          "background_color": {
            "type": "string",
            "title": "Background Color"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id"
          },
          "header_section": {
            "type": "string",
            "title": "Header Section"
          },
          "intro_section": {
            "type": "string",
            "title": "Intro Section"
          },
          "outro_section": {
            "type": "string",
            "title": "Outro Section"
          },
          "pronunciation_dictionaries": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionaries"
          },
          "content_selectors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Selectors"
          },
          "blocked_selectors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked Selectors"
          },
          "always_set_default_author": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Always Set Default Author"
          },
          "always_set_default_title": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Always Set Default Title"
          },
          "apply_text_normalization": {
            "type": "string",
            "enum": [
              "on",
              "off",
              "apply_english"
            ],
            "title": "Apply Text Normalization",
            "default": "off"
          }
        },
        "type": "object",
        "required": [
          "title",
          "author",
          "text_color",
          "background_color",
          "voice_id",
          "model_id",
          "header_section",
          "intro_section",
          "outro_section"
        ],
        "title": "AudioNativeSettingsResponseModel"
      },
      "AudioNativeURLTriggerResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudioNativeSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "url"
        ],
        "title": "AudioNativeURLTriggerResponseModel"
      },
      "AudioWithTimestampsResponseModel": {
        "properties": {
          "audio_base64": {
            "type": "string",
            "title": "Audio Base64",
            "description": "Base64 encoded audio data"
          },
          "alignment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp information for each character in the original text"
          },
          "normalized_alignment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp information for each character in the normalized text"
          }
        },
        "type": "object",
        "required": [
          "audio_base64"
        ],
        "title": "AudioWithTimestampsResponseModel",
        "example": {
          "alignment": {
            "character_end_times_seconds": [0.1, 0.2, 0.3, 0.4, 0.5],
            "character_start_times_seconds": [0, 0.1, 0.2, 0.3, 0.4],
            "characters": [
              "H",
              "e",
              "l",
              "l",
              "o"
            ]
          },
          "audio_base64": "base64_encoded_audio_string",
          "normalized_alignment": {
            "character_end_times_seconds": [0.1, 0.2, 0.3, 0.4, 0.5],
            "character_start_times_seconds": [0, 0.1, 0.2, 0.3, 0.4],
            "characters": [
              "H",
              "e",
              "l",
              "l",
              "o"
            ]
          }
        }
      },
      "AuthConnectionDependencies": {
        "properties": {
          "tools": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableToolIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownToolIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableToolIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownToolIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Tools",
            "default": []
          }
        },
        "type": "object",
        "title": "AuthConnectionDependencies",
        "description": "Dependencies that use an auth connection"
      },
      "AuthConnectionLocator": {
        "properties": {
          "auth_connection_id": {
            "type": "string",
            "title": "Auth Connection Id"
          }
        },
        "type": "object",
        "required": [
          "auth_connection_id"
        ],
        "title": "AuthConnectionLocator",
        "description": "Used to reference an auth connection from the workspace's auth connection store."
      },
      "AuthSettings": {
        "properties": {
          "enable_auth": {
            "type": "boolean",
            "title": "Enable Auth",
            "description": "If set to true, starting a conversation with an agent will require a signed token",
            "default": false
          },
          "allowlist": {
            "items": {
              "$ref": "#/components/schemas/AllowlistItem"
            },
            "type": "array",
            "title": "Allowlist",
            "description": "A list of hosts that are allowed to start conversations with the agent"
          },
          "shareable_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shareable Token",
            "description": "A shareable token that can be used to start a conversation with the agent"
          }
        },
        "type": "object",
        "title": "AuthSettings",
        "example": {
          "allowlist": [
            {
              "hostname": "https://example.com"
            }
          ],
          "enable_auth": true,
          "shareable_token": "1234567890"
        }
      },
      "AuthorizationMethod": {
        "type": "string",
        "enum": [
          "invalid",
          "public",
          "authorization_header",
          "signed_url",
          "shareable_link",
          "livekit_token",
          "livekit_token_website",
          "genesys_api_key"
        ],
        "title": "AuthorizationMethod"
      },
      "BackupCodeResponseModel": {
        "properties": {
          "backup_code": {
            "type": "string",
            "title": "Backup Code"
          }
        },
        "type": "object",
        "required": [
          "backup_code"
        ],
        "title": "BackupCodeResponseModel"
      },
      "BanReasonType": {
        "type": "string",
        "enum": [
          "safety",
          "manual"
        ],
        "title": "BanReasonType"
      },
      "BasicAuthResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "auth_type": {
            "type": "string",
            "const": "basic_auth",
            "title": "Auth Type",
            "default": "basic_auth"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "used_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthConnectionDependencies"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider",
          "username",
          "id"
        ],
        "title": "BasicAuthResponse",
        "description": "Response model for basic auth"
      },
      "BatchCallDetailedResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "phone_provider": {
            "$ref": "#/components/schemas/TelephonyProvider",
            "default": "twilio"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "scheduled_time_unix": {
            "type": "integer",
            "title": "Scheduled Time Unix"
          },
          "total_calls_dispatched": {
            "type": "integer",
            "title": "Total Calls Dispatched"
          },
          "total_calls_scheduled": {
            "type": "integer",
            "title": "Total Calls Scheduled"
          },
          "last_updated_at_unix": {
            "type": "integer",
            "title": "Last Updated At Unix"
          },
          "status": {
            "$ref": "#/components/schemas/BatchCallStatus"
          },
          "agent_name": {
            "type": "string",
            "title": "Agent Name"
          },
          "recipients": {
            "items": {
              "$ref": "#/components/schemas/OutboundCallRecipientResponseModel"
            },
            "type": "array",
            "title": "Recipients"
          }
        },
        "type": "object",
        "required": [
          "id",
          "phone_number_id",
          "name",
          "agent_id",
          "created_at_unix",
          "scheduled_time_unix",
          "total_calls_dispatched",
          "total_calls_scheduled",
          "last_updated_at_unix",
          "status",
          "agent_name",
          "recipients"
        ],
        "title": "BatchCallDetailedResponse",
        "description": "Detailed response model for a batch call including all recipients."
      },
      "BatchCallRecipientStatus": {
        "type": "string",
        "enum": [
          "pending",
          "initiated",
          "in_progress",
          "completed",
          "failed",
          "cancelled",
          "voicemail"
        ],
        "title": "BatchCallRecipientStatus"
      },
      "BatchCallResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "phone_provider": {
            "$ref": "#/components/schemas/TelephonyProvider",
            "default": "twilio"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "scheduled_time_unix": {
            "type": "integer",
            "title": "Scheduled Time Unix"
          },
          "total_calls_dispatched": {
            "type": "integer",
            "title": "Total Calls Dispatched"
          },
          "total_calls_scheduled": {
            "type": "integer",
            "title": "Total Calls Scheduled"
          },
          "last_updated_at_unix": {
            "type": "integer",
            "title": "Last Updated At Unix"
          },
          "status": {
            "$ref": "#/components/schemas/BatchCallStatus"
          },
          "agent_name": {
            "type": "string",
            "title": "Agent Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "phone_number_id",
          "name",
          "agent_id",
          "created_at_unix",
          "scheduled_time_unix",
          "total_calls_dispatched",
          "total_calls_scheduled",
          "last_updated_at_unix",
          "status",
          "agent_name"
        ],
        "title": "BatchCallResponse"
      },
      "BatchCallStatus": {
        "type": "string",
        "enum": [
          "pending",
          "in_progress",
          "completed",
          "failed",
          "cancelled"
        ],
        "title": "BatchCallStatus"
      },
      "BiasedKeywordDbModel": {
        "properties": {
          "keyword": {
            "type": "string",
            "title": "Keyword"
          },
          "bias": {
            "type": "number",
            "title": "Bias"
          }
        },
        "type": "object",
        "required": [
          "keyword",
          "bias"
        ],
        "title": "BiasedKeywordDbModel"
      },
      "BinnedMetrics": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "string"
              }
            ],
            "title": "Id"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date-time",
            "title": "End Date"
          },
          "count_completed": {
            "type": "integer",
            "title": "Count Completed",
            "default": 0
          },
          "count_submitted": {
            "type": "integer",
            "title": "Count Submitted",
            "default": 0
          },
          "count_awaiting_review": {
            "type": "integer",
            "title": "Count Awaiting Review",
            "default": 0
          },
          "count_rejected": {
            "type": "integer",
            "title": "Count Rejected",
            "default": 0
          },
          "count_in_progress": {
            "type": "integer",
            "title": "Count In Progress",
            "default": 0
          },
          "approval_rate": {
            "type": "number",
            "title": "Approval Rate",
            "default": 0
          },
          "bounties_settled": {
            "type": "number",
            "title": "Bounties Settled",
            "default": 0
          },
          "revenue": {
            "type": "number",
            "title": "Revenue",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "id",
          "start_date",
          "end_date"
        ],
        "title": "BinnedMetrics"
      },
      "BlobResourceContents": {
        "properties": {
          "uri": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Uri"
          },
          "mimeType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mimetype"
          },
          "_meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          },
          "blob": {
            "type": "string",
            "title": "Blob"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "uri",
          "blob"
        ],
        "title": "BlobResourceContents",
        "description": "Binary contents of a resource."
      },
      "BlockDBModel": {
        "properties": {
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "children": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TTSNodeDBModel"
                },
                {
                  "$ref": "#/components/schemas/DividerNodeDBModel"
                },
                {
                  "$ref": "#/components/schemas/ImageNodeDBModel"
                }
              ]
            },
            "type": "array",
            "title": "Children"
          },
          "is_converted": {
            "type": "boolean",
            "title": "Is Converted"
          },
          "last_change_unix_ms": {
            "type": "integer",
            "title": "Last Change Unix Ms"
          },
          "sub_type": {
            "type": "string",
            "enum": [
              "p",
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "h6"
            ],
            "title": "Sub Type"
          },
          "type": {
            "type": "string",
            "const": "block",
            "title": "Type",
            "default": "block"
          },
          "current_block_snapshot_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Block Snapshot Id"
          },
          "last_block_snapshot_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Block Snapshot Id"
          },
          "last_converted_at_unix_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Converted At Unix Ms"
          },
          "last_charged_units_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Charged Units Cost"
          },
          "element_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Element Ids"
          },
          "element_id_to_tts_node_overrides": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Element Id To Tts Node Overrides"
          },
          "locked_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BlockDBModelLocked"
              },
              {
                "$ref": "#/components/schemas/BlockDBModelUnlocked"
              }
            ],
            "title": "Locked State"
          },
          "converted_using_quality_check": {
            "type": "boolean",
            "title": "Converted Using Quality Check",
            "default": false
          },
          "latest_generation_snapshot": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GenerationSnapshotDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "has_sts_elements": {
            "type": "boolean",
            "title": "Has Sts Elements",
            "default": false
          },
          "has_external_audio": {
            "type": "boolean",
            "title": "Has External Audio",
            "default": false
          },
          "generation_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BlockGenerationMetaDBModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "block_id",
          "children",
          "is_converted",
          "last_change_unix_ms",
          "sub_type"
        ],
        "title": "BlockDBModel"
      },
      "BlockDBModelLocked": {
        "properties": {
          "locked_at_unix_ms": {
            "type": "integer",
            "title": "Locked At Unix Ms"
          },
          "locked_by_user_id": {
            "type": "string",
            "title": "Locked By User Id"
          },
          "locked": {
            "type": "boolean",
            "const": true,
            "title": "Locked"
          }
        },
        "type": "object",
        "required": [
          "locked_at_unix_ms",
          "locked_by_user_id",
          "locked"
        ],
        "title": "BlockDBModelLocked"
      },
      "BlockDBModelUnlocked": {
        "properties": {
          "locked": {
            "type": "boolean",
            "const": false,
            "title": "Locked"
          }
        },
        "type": "object",
        "required": [
          "locked"
        ],
        "title": "BlockDBModelUnlocked"
      },
      "BlockGenerationMetaDBModel": {
        "properties": {
          "generation_id": {
            "type": "string",
            "title": "Generation Id"
          },
          "started_at_ms": {
            "type": "integer",
            "title": "Started At Ms"
          },
          "last_update_at_ms": {
            "type": "integer",
            "title": "Last Update At Ms"
          }
        },
        "type": "object",
        "required": [
          "generation_id",
          "started_at_ms",
          "last_update_at_ms"
        ],
        "title": "BlockGenerationMetaDBModel"
      },
      "BlockResponseModel": {
        "properties": {
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "children": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TTSNodeResponseModel"
                },
                {
                  "$ref": "#/components/schemas/ImageNodeResponseModel"
                }
              ]
            },
            "type": "array",
            "title": "Children"
          },
          "last_change_unix_ms": {
            "type": "integer",
            "title": "Last Change Unix Ms"
          },
          "is_converted": {
            "type": "boolean",
            "title": "Is Converted"
          },
          "type": {
            "type": "string",
            "const": "block",
            "title": "Type"
          },
          "sub_type": {
            "type": "string",
            "enum": [
              "p",
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "h6"
            ],
            "title": "Sub Type"
          },
          "locked_state": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LockedStateResponseModel"
              },
              {
                "$ref": "#/components/schemas/UnlockedStateResponseModel"
              }
            ],
            "title": "Locked State"
          },
          "current_block_snapshot_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Block Snapshot Id"
          },
          "last_block_snapshot_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Block Snapshot Id"
          },
          "last_converted_at_unix_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Converted At Unix Ms"
          },
          "regeneration_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Regeneration Count"
          },
          "has_sts_elements": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Sts Elements",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "block_id",
          "children",
          "last_change_unix_ms",
          "is_converted",
          "type",
          "sub_type",
          "locked_state"
        ],
        "title": "BlockResponseModel"
      },
      "BlockSnapshotResponseModel": {
        "properties": {
          "block_snapshot_id": {
            "type": "string",
            "title": "Block Snapshot Id"
          },
          "children": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TTSNodeResponseModel"
                },
                {
                  "$ref": "#/components/schemas/ImageNodeResponseModel"
                }
              ]
            },
            "type": "array",
            "title": "Children"
          },
          "created_at_unix_ms": {
            "type": "integer",
            "title": "Created At Unix Ms"
          },
          "created_by_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By User Id"
          }
        },
        "type": "object",
        "required": [
          "block_snapshot_id",
          "children",
          "created_at_unix_ms"
        ],
        "title": "BlockSnapshotResponseModel"
      },
      "BlockSoundEffectDetailsResponseModel": {
        "properties": {
          "duration_in_characters": {
            "type": "integer",
            "title": "Duration In Characters"
          },
          "tts_node_offset_ms": {
            "type": "integer",
            "title": "Tts Node Offset Ms"
          },
          "duration_ms": {
            "type": "integer",
            "title": "Duration Ms"
          }
        },
        "type": "object",
        "required": [
          "duration_in_characters",
          "tts_node_offset_ms",
          "duration_ms"
        ],
        "title": "BlockSoundEffectDetailsResponseModel"
      },
      "BlockSoundEffectGenerationResponseModel": {
        "properties": {
          "block_sound_effect_id": {
            "type": "string",
            "title": "Block Sound Effect Id"
          },
          "history_items": {
            "items": {
              "$ref": "#/components/schemas/GenerationHistoryItem"
            },
            "type": "array",
            "title": "History Items"
          }
        },
        "type": "object",
        "required": [
          "block_sound_effect_id",
          "history_items"
        ],
        "title": "BlockSoundEffectGenerationResponseModel"
      },
      "BlockSoundEffectHistoryItemResponseModel": {
        "properties": {
          "history_item_id": {
            "type": "string",
            "title": "History Item Id"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          }
        },
        "type": "object",
        "required": [
          "history_item_id",
          "created_at_unix"
        ],
        "title": "BlockSoundEffectHistoryItemResponseModel"
      },
      "BlockSoundEffectOffsetResponseModel": {
        "properties": {
          "tts_node_offset_ms": {
            "type": "integer",
            "title": "Tts Node Offset Ms"
          }
        },
        "type": "object",
        "required": [
          "tts_node_offset_ms"
        ],
        "title": "BlockSoundEffectOffsetResponseModel"
      },
      "BlockSoundEffectResponseModel": {
        "properties": {
          "block_sound_effect_id": {
            "type": "string",
            "title": "Block Sound Effect Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "volume_gain_db": {
            "type": "number",
            "title": "Volume Gain Db"
          },
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "node_id": {
            "type": "string",
            "title": "Node Id"
          },
          "start_pos": {
            "type": "integer",
            "title": "Start Pos"
          },
          "pos_order": {
            "type": "integer",
            "title": "Pos Order"
          },
          "duration_in_characters": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration In Characters"
          },
          "tts_node_offset_ms": {
            "type": "integer",
            "title": "Tts Node Offset Ms"
          },
          "duration_ms": {
            "type": "integer",
            "title": "Duration Ms"
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          },
          "blocking": {
            "type": "boolean",
            "title": "Blocking"
          },
          "history_items": {
            "items": {
              "$ref": "#/components/schemas/BlockSoundEffectHistoryItemResponseModel"
            },
            "type": "array",
            "title": "History Items"
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id"
          }
        },
        "type": "object",
        "required": [
          "block_sound_effect_id",
          "text",
          "volume_gain_db",
          "block_id",
          "node_id",
          "start_pos",
          "pos_order",
          "duration_in_characters",
          "tts_node_offset_ms",
          "duration_ms",
          "active",
          "blocking",
          "history_items",
          "chapter_id"
        ],
        "title": "BlockSoundEffectResponseModel"
      },
      "BlocksResponseModel": {
        "properties": {
          "blocks": {
            "items": {
              "$ref": "#/components/schemas/BlockResponseModel"
            },
            "type": "array",
            "title": "Blocks"
          }
        },
        "type": "object",
        "required": [
          "blocks"
        ],
        "title": "BlocksResponseModel"
      },
      "Body_AI_Speech_Classification_v1_moderation_ai_speech_classification_post": {
        "properties": {
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File",
            "description": "One audio files to verify"
          }
        },
        "type": "object",
        "title": "Body_AI_Speech_Classification_v1_moderation_ai_speech_classification_post"
      },
      "Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post": {
        "properties": {
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The Target language."
          }
        },
        "type": "object",
        "required": [
          "language"
        ],
        "title": "Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post"
      },
      "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the pronunciation dictionary, used for identification only.",
            "examples": [
              "My Dictionary"
            ]
          },
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File",
            "description": "A lexicon .pls file which we will use to initialize the project with."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A description of the pronunciation dictionary, used for identification only.",
            "examples": [
              "Contains pronunciation's of our character names"
            ]
          },
          "workspace_access": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Access",
            "description": "Should be one of 'admin', 'editor' or 'viewer'. If not provided, defaults to no access.",
            "examples": [
              "viewer"
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post"
      },
      "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post": {
        "properties": {
          "rules": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryAliasRuleRequestModel"
                },
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryPhonemeRuleRequestModel"
                }
              ]
            },
            "type": "array",
            "title": "Rules",
            "description": "List of pronunciation rules. Rule can be either:\n    an alias rule: {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b', }\n    or a phoneme rule: {'string_to_replace': 'a', 'type': 'phoneme', 'phoneme': 'b', 'alphabet': 'ipa' }",
            "examples": [
              "\n    [\n        {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b' },\n        {'string_to_replace': 'c', 'type': 'phoneme', 'phoneme': 'd', 'alphabet': 'ipa' }\n    ]"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the pronunciation dictionary, used for identification only.",
            "examples": [
              "My Dictionary"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A description of the pronunciation dictionary, used for identification only.",
            "examples": [
              "Contains pronunciation's of our character names"
            ]
          },
          "workspace_access": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Access",
            "description": "Should be one of 'admin', 'editor' or 'viewer'. If not provided, defaults to no access.",
            "examples": [
              "viewer"
            ]
          }
        },
        "type": "object",
        "required": [
          "rules",
          "name"
        ],
        "title": "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_rules_post"
      },
      "Body_Add_env_token_to_Vercel_v1_vercel_add_env_token_post": {
        "properties": {
          "projects": {
            "items": {
              "$ref": "#/components/schemas/VercelProjectType"
            },
            "type": "array",
            "title": "Projects to add env token to",
            "description": "The projects to add the env token to."
          }
        },
        "type": "object",
        "required": [
          "projects"
        ],
        "title": "Body_Add_env_token_to_Vercel_v1_vercel_add_env_token_post"
      },
      "Body_Add_external_audio_v1_studio_projects__project_id__chapters__chapter_id__external_audio_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "External Audio to upload to a chapter."
          },
          "order": {
            "type": "string",
            "title": "Order",
            "description": "The ordering of the audio in the track",
            "examples": [
              "a0"
            ]
          }
        },
        "type": "object",
        "required": [
          "file",
          "order"
        ],
        "title": "Body_Add_external_audio_v1_studio_projects__project_id__chapters__chapter_id__external_audio_post"
      },
      "Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the target workspace member."
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post"
      },
      "Body_Add_new_turn_to_a_chat_v1_music_chats__chat_id__turn_post": {
        "properties": {
          "source_message_id": {
            "type": "string",
            "title": "Source Message Id",
            "description": "The ID of the source message from which the turn is generated"
          },
          "n_variants": {
            "type": "integer",
            "maximum": 4,
            "minimum": 1,
            "title": "N Variants",
            "description": "The number of variants to generate"
          },
          "switch_branch": {
            "type": "boolean",
            "title": "Switch Branch",
            "description": "Whether to switch to the new branch after adding the turn",
            "default": true
          },
          "mask_regions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TimeRange"
                },
                "type": "array",
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Mask Regions",
            "description": "The mask to apply to the song"
          },
          "prompt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "A simple text prompt to generate a song from. Cannot be used in conjunction with `composition_plan`."
          },
          "music_prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A music prompt. Deprecated. Use `composition_plan` instead."
          },
          "composition_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A detailed composition plan to guide music generation. Cannot be used in conjunction with `prompt`."
          },
          "music_length_ms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300000,
                "minimum": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Length Ms",
            "description": "The length of the song to generate in milliseconds. Used only in conjunction with `prompt`. Must be between 10000ms and 300000ms"
          },
          "model": {
            "$ref": "#/components/schemas/MusicModelID",
            "description": "The model to use for the generation.",
            "default": "v1"
          }
        },
        "type": "object",
        "required": [
          "source_message_id",
          "n_variants"
        ],
        "title": "Body_Add_new_turn_to_a_chat_v1_music_chats__chat_id__turn_post"
      },
      "Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post": {
        "properties": {
          "rules": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryAliasRuleRequestModel"
                },
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryPhonemeRuleRequestModel"
                }
              ]
            },
            "type": "array",
            "title": "Rules",
            "description": "List of pronunciation rules. Rule can be either:\n    an alias rule: {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b', }\n    or a phoneme rule: {'string_to_replace': 'a', 'type': 'phoneme', 'phoneme': 'b', 'alphabet': 'ipa' }",
            "examples": [
              "\n    [\n        {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b' },\n        {'string_to_replace': 'c', 'type': 'phoneme', 'phoneme': 'd', 'alphabet': 'ipa' }\n    ]"
            ]
          }
        },
        "type": "object",
        "required": [
          "rules"
        ],
        "title": "Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post"
      },
      "Body_Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "Audio files used to create the voice."
          },
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "default": false,
            "examples": [true]
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_Add_samples_to_PVC_voice_v1_voices_pvc__voice_id__samples_post"
      },
      "Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post": {
        "properties": {
          "new_name": {
            "type": "string",
            "title": "New Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "examples": [
              "John Smith"
            ]
          }
        },
        "type": "object",
        "required": [
          "new_name"
        ],
        "title": "Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post"
      },
      "Body_Add_to_knowledge_base_v1_convai_knowledge_base_post": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A custom, human-readable name for the document."
          },
          "url": {
            "type": "string",
            "title": "Url",
            "description": "URL to a page of documentation that the agent will have access to in order to interact with users."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Documentation that the agent will have access to in order to interact with users."
          }
        },
        "type": "object",
        "title": "Body_Add_to_knowledge_base_v1_convai_knowledge_base_post"
      },
      "Body_Add_video_v1_studio_projects__project_id__chapters__chapter_id__videos_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Video (mp4) to upload to a chapter."
          },
          "order": {
            "type": "string",
            "title": "Order",
            "description": "The ordering of the video in the track",
            "examples": [
              "a0"
            ]
          },
          "import_speech_to_editor": {
            "type": "boolean",
            "title": "Import Speech To Editor",
            "description": "Import speech to editor (ASR) and create IVCs",
            "default": false,
            "examples": [false]
          }
        },
        "type": "object",
        "required": [
          "file",
          "order"
        ],
        "title": "Body_Add_video_v1_studio_projects__project_id__chapters__chapter_id__videos_post"
      },
      "Body_Add_voice_v1_voices_add_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "examples": [
              "John Smith"
            ]
          },
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "A list of file paths to audio recordings intended for voice cloning."
          },
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "default": false,
            "examples": [true]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A description of the voice.",
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ]
          },
          "labels": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Serialized labels dictionary for the voice."
          }
        },
        "type": "object",
        "required": [
          "name",
          "files"
        ],
        "title": "Body_Add_voice_v1_voices_add_post"
      },
      "Body_AudioNative_config_update_v1_audio_native_settings_post": {
        "properties": {
          "audio_native": {
            "$ref": "#/components/schemas/InputAudioNativeModel",
            "description": "AudioNative configuration."
          }
        },
        "type": "object",
        "required": [
          "audio_native"
        ],
        "title": "Body_AudioNative_config_update_v1_audio_native_settings_post"
      },
      "Body_AudioNative_metrics_v1_audio_native__public_user_id___project_id__metrics_post": {
        "properties": {
          "session_id": {
            "type": "string",
            "title": "Session Id",
            "description": "Player session ID. Either unique per load or over timeframe for the browser.",
            "examples": [
              "34mxxTcm4Tlvhs8ikJKL"
            ]
          },
          "event_type": {
            "type": "string",
            "title": "Event Type",
            "description": "Event type. Either play, pause, stop, seek, or volume.",
            "examples": [
              "play"
            ]
          },
          "fields": {
            "type": "object",
            "title": "Fields",
            "description": "Event fields.",
            "examples": [
              {
                "key": "value"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "event_type",
          "fields"
        ],
        "title": "Body_AudioNative_metrics_v1_audio_native__public_user_id___project_id__metrics_post"
      },
      "Body_AudioNative_settings_v1_audio_native__project_id__settings_post": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "AudioNative enabled for the project."
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudioNativeProjectSettingsDBModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "AudioNative project settings."
          }
        },
        "type": "object",
        "required": [
          "enabled"
        ],
        "title": "Body_AudioNative_settings_v1_audio_native__project_id__settings_post"
      },
      "Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file from which vocals/speech will be isolated from."
          },
          "file_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pcm_s16le_16",
                  "other"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "File Format",
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "examples": [
              "pcm_s16le_16",
              "other"
            ]
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post"
      },
      "Body_Audio_Isolation_v1_audio_isolation_post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file from which vocals/speech will be isolated from."
          },
          "file_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pcm_s16le_16",
                  "other"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "File Format",
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "examples": [
              "pcm_s16le_16",
              "other"
            ]
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "Body_Audio_Isolation_v1_audio_isolation_post"
      },
      "Body_Compose_Music_v1_music_compose_post": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "A simple text prompt to generate a song from. Cannot be used in conjunction with `composition_plan`."
          },
          "music_prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A music prompt. Deprecated. Use `composition_plan` instead."
          },
          "composition_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A detailed composition plan to guide music generation. Cannot be used in conjunction with `prompt`."
          },
          "music_length_ms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300000,
                "minimum": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Length Ms",
            "description": "The length of the song to generate in milliseconds. Used only in conjunction with `prompt`. Must be between 10000ms and 300000ms"
          },
          "model": {
            "$ref": "#/components/schemas/MusicModelID",
            "description": "The model to use for the generation.",
            "default": "v1"
          }
        },
        "type": "object",
        "title": "Body_Compose_Music_v1_music_compose_post"
      },
      "Body_Connect_integration_v1_convai_integrations_post": {
        "properties": {
          "integration_library_service": {
            "$ref": "#/components/schemas/IntegrationLibraryServices",
            "description": "The unique identifier of the integration library service.",
            "examples": [
              "gcalendar",
              "gmail",
              "elevenlabs"
            ]
          },
          "secret": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConvAINewSecretConfig"
              },
              {
                "type": "null"
              }
            ],
            "description": "The secret to create"
          }
        },
        "type": "object",
        "required": [
          "integration_library_service"
        ],
        "title": "Body_Connect_integration_v1_convai_integrations_post"
      },
      "Body_Converts_provided_url_to_project__v1_audio_native__public_user_id__convert_post": {
        "properties": {
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url",
            "description": "URL to convert.",
            "examples": [
              "https://elevenlabs.io/blog/the_first_ai_that_can_laugh/"
            ]
          }
        },
        "type": "object",
        "title": "Body_Converts_provided_url_to_project__v1_audio_native__public_user_id__convert_post"
      },
      "Body_Create_API_key_v1_user_create_api_key_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the XI API key to use (used for identification purposes only).",
            "examples": [
              "Sneaky Fox"
            ]
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "text_to_speech",
                    "speech_to_speech",
                    "speech_to_text",
                    "models_read",
                    "models_write",
                    "voices_read",
                    "voices_write",
                    "speech_history_read",
                    "speech_history_write",
                    "sound_generation",
                    "audio_isolation",
                    "voice_generation",
                    "dubbing_read",
                    "dubbing_write",
                    "pronunciation_dictionaries_read",
                    "pronunciation_dictionaries_write",
                    "user_read",
                    "user_write",
                    "projects_read",
                    "projects_write",
                    "audio_native_read",
                    "audio_native_write",
                    "workspace_read",
                    "workspace_write",
                    "forced_alignment"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions",
            "description": "The permissions of the XI API."
          },
          "character_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Limit",
            "description": "The character limit of the XI API key. If provided this will limit the usage of this api key to n characters per month where n is the chosen value. Requests that incur charges will fail after reaching this monthly limit."
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Create_API_key_v1_user_create_api_key_post"
      },
      "Body_Create_Agent_v1_convai_agents_create_post": {
        "properties": {
          "conversation_config": {
            "$ref": "#/components/schemas/ConversationalConfigAPIModel-Input",
            "description": "Conversation configuration for an agent"
          },
          "platform_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentPlatformSettingsRequestModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Platform settings for the agent are all settings that aren't related to the conversation orchestration and content."
          },
          "workflow": {
            "title": "Workflow",
            "description": "Workflow for the agent. This is used to define the flow of the conversation and how the agent interacts with tools.",
            "x-fern-ignore": "True"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A name to make the agent easier to find",
            "examples": [
              "My agent"
            ],
            "optional": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags to help classify and filter the agent",
            "examples": [
              [
                "Customer Support",
                "Technical Help",
                "Eleven"
              ]
            ],
            "optional": true
          }
        },
        "type": "object",
        "required": [
          "conversation_config"
        ],
        "title": "Body_Create_Agent_v1_convai_agents_create_post"
      },
      "Body_Create_Music_Chat_v1_music_chats_post": {
        "properties": {
          "n_variants": {
            "type": "integer",
            "maximum": 4,
            "minimum": 1,
            "title": "N Variants",
            "description": "The number of variants to generate"
          },
          "prompt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "A simple text prompt to generate a song from. Cannot be used in conjunction with `composition_plan`."
          },
          "music_prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A music prompt. Deprecated. Use `composition_plan` instead."
          },
          "composition_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A detailed composition plan to guide music generation. Cannot be used in conjunction with `prompt`."
          },
          "music_length_ms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300000,
                "minimum": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Length Ms",
            "description": "The length of the song to generate in milliseconds. Used only in conjunction with `prompt`. Must be between 10000ms and 300000ms"
          },
          "model": {
            "$ref": "#/components/schemas/MusicModelID",
            "description": "The model to use for the generation.",
            "default": "v1"
          }
        },
        "type": "object",
        "required": [
          "n_variants"
        ],
        "title": "Body_Create_Music_Chat_v1_music_chats_post"
      },
      "Body_Create_PVC_voice_v1_voices_pvc_post": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "examples": [
              "John Smith"
            ]
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "Language used in the samples.",
            "examples": [
              "en"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description to use for the created voice.",
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ]
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Serialized labels dictionary for the voice."
          }
        },
        "type": "object",
        "required": [
          "name",
          "language"
        ],
        "title": "Body_Create_PVC_voice_v1_voices_pvc_post"
      },
      "Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post": {
        "properties": {
          "pronunciation_dictionary_locators": {
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
            "examples": [
              [
                "{\"pronunciation_dictionary_id\": \"test\", \"version_id\": \"id2\"}"
              ]
            ]
          },
          "invalidate_affected_text": {
            "type": "boolean",
            "title": "Invalidate Affected Text",
            "description": "This will automatically mark text in this project for reconversion when the new dictionary applies or the old one no longer does.",
            "default": true,
            "examples": [false]
          }
        },
        "type": "object",
        "required": [
          "pronunciation_dictionary_locators"
        ],
        "title": "Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post"
      },
      "Body_Create_Studio_project_v1_studio_projects_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the Studio project, used for identification only.",
            "examples": [
              "Project 1"
            ]
          },
          "default_title_voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Title Voice Id",
            "description": "The voice_id that corresponds to the default voice used for new titles.",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ]
          },
          "default_paragraph_voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Paragraph Voice Id",
            "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ]
          },
          "default_model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Model Id",
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "examples": [
              "eleven_multilingual_v2"
            ]
          },
          "from_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Url",
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ]
          },
          "from_document": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Document",
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank."
          },
          "from_content_json": {
            "type": "string",
            "title": "From Content Json",
            "description": "\n    An optional content to initialize the Studio project with. If this is set, 'from_url' and 'from_document' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.\n    \n    Example:\n    [{\"name\": \"Chapter A\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"A\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"B\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h1\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"C\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"D\", \"type\": \"tts_node\"}]}]}, {\"name\": \"Chapter B\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"E\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"F\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h2\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"G\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"H\", \"type\": \"tts_node\"}]}]}]\n    ",
            "examples": [
              "[{\"name\": \"Chapter A\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"A\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"B\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h1\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"C\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"D\", \"type\": \"tts_node\"}]}]}, {\"name\": \"Chapter B\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"E\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"F\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h2\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"G\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"H\", \"type\": \"tts_node\"}]}]}]"
            ]
          },
          "quality_preset": {
            "type": "string",
            "title": "Quality of the generated audio.",
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "default": "standard",
            "examples": [
              "standard"
            ]
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "Romeo and Juliet"
            ]
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author",
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "William Shakespeare"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "An optional description of the Studio project.",
            "examples": [
              "A tragic love story between two young lovers."
            ]
          },
          "genres": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Genres",
            "description": "An optional list of genres associated with the Studio project.",
            "examples": [
              [
                "Romance",
                "Drama"
              ]
            ]
          },
          "target_audience": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "children",
                  "young adult",
                  "adult",
                  "all ages"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience",
            "description": "An optional target audience of the Studio project.",
            "examples": [
              "adult"
            ]
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
            "examples": [
              "en"
            ]
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "An optional content type of the Studio project.",
            "examples": [
              "Book"
            ]
          },
          "original_publication_date": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^\\d{4}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Publication Date",
            "description": "An optional original publication date of the Studio project, in the format YYYY-MM-DD or YYYY.",
            "examples": [
              "1597-01-01"
            ]
          },
          "mature_content": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mature Content",
            "description": "An optional specification of whether this Studio project contains mature content.",
            "default": false,
            "examples": [false]
          },
          "isbn_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn Number",
            "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "0-306-40615-2"
            ]
          },
          "acx_volume_normalization": {
            "type": "boolean",
            "title": "Acx Volume Normalization",
            "description": "[Deprecated] When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "default": false,
            "examples": [false]
          },
          "volume_normalization": {
            "type": "boolean",
            "title": "Volume Normalization",
            "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "default": false,
            "examples": [false]
          },
          "pronunciation_dictionary_locators": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
            "examples": [
              [
                "{\"pronunciation_dictionary_id\": \"test\", \"version_id\": \"id2\"}"
              ]
            ]
          },
          "callback_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Callback Url",
            "description": "\n    A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion\n    Messages:\n    1. When project was converted successfully:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"success\",\n        project_snapshot_id: \"22m00Tcm4TlvDq8ikMAT\",\n        error_details: None,\n      }\n    }\n    2. When project conversion failed:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"error\",\n        project_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n\n    3. When chapter was converted successfully:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"success\",\n        chapter_snapshot_id: \"23m00Tcm4TlvDq8ikMAV\",\n        error_details: None,\n      }\n    }\n    4. When chapter conversion failed:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"error\",\n        chapter_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n    ",
            "examples": [
              [
                "https://www.test.com/my-api/projects-status"
              ]
            ]
          },
          "fiction": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "fiction",
                  "non-fiction"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiction",
            "description": "An optional specification of whether the content of this Studio project is fiction.",
            "examples": [
              "fiction"
            ]
          },
          "apply_text_normalization": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "auto",
                  "on",
                  "off",
                  "apply_english"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Apply Text Normalization",
            "description": "\n    This parameter controls text normalization with four modes: 'auto', 'on', 'apply_english' and 'off'.\n    When set to 'auto', the system will automatically decide whether to apply text normalization\n    (e.g., spelling out numbers). With 'on', text normalization will always be applied, while\n    with 'off', it will be skipped. 'apply_english' is the same as 'on' but will assume that text is in English.\n    "
          },
          "auto_convert": {
            "type": "boolean",
            "title": "Auto Convert",
            "description": "Whether to auto convert the Studio project to audio or not.",
            "default": false
          },
          "auto_assign_voices": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Assign Voices",
            "description": "[Alpha Feature] Whether automatically assign voices to phrases in the create Project.",
            "default": false
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "blank",
                  "book",
                  "article",
                  "genfm",
                  "video"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "The type of Studio project to create.",
            "examples": [
              "book"
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Create_Studio_project_v1_studio_projects_post"
      },
      "Body_Create_URL_document_v1_convai_knowledge_base_url_post": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "URL to a page of documentation that the agent will have access to in order to interact with users."
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A custom, human-readable name for the document."
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "Body_Create_URL_document_v1_convai_knowledge_base_url_post"
      },
      "Body_Create_a_group_v1_workspace_groups_post": {
        "properties": {
          "group_name": {
            "type": "string",
            "title": "Group Name",
            "description": "Name of the target group."
          },
          "members": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Members"
          },
          "group_permissions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/WorkspaceGroupPermission"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Permissions"
          }
        },
        "type": "object",
        "required": [
          "group_name",
          "members"
        ],
        "title": "Body_Create_a_group_v1_workspace_groups_post"
      },
      "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_post": {
        "properties": {
          "voice_name": {
            "type": "string",
            "title": "Voice Name",
            "description": "Name to use for the created voice.",
            "examples": [
              "Sassy squeaky mouse"
            ]
          },
          "voice_description": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 20,
            "title": "Voice Description",
            "description": "Description to use for the created voice.",
            "examples": [
              "A sassy squeaky mouse"
            ]
          },
          "generated_voice_id": {
            "type": "string",
            "title": "Generated Voice Id",
            "description": "The generated_voice_id to create, call POST /v1/text-to-voice/create-previews and fetch the generated_voice_id from the response header if don't have one yet.",
            "examples": [
              "37HceQefKmEi3bGovXjL"
            ]
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Optional, metadata to add to the created voice. Defaults to None.",
            "examples": [
              {
                "language": "en"
              }
            ],
            "name": "Voice metadata"
          },
          "played_not_selected_voice_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Played Not Selected Voice Ids",
            "description": "List of voice ids that the user has played but not selected. Used for RLHF."
          }
        },
        "type": "object",
        "required": [
          "voice_name",
          "voice_description",
          "generated_voice_id"
        ],
        "title": "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_post"
      },
      "Body_Create_a_new_voice_from_voice_preview_v2_voices_create_voice_from_preview_post": {
        "properties": {
          "voice_name": {
            "type": "string",
            "title": "Voice Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "examples": [
              "John Smith"
            ]
          },
          "voice_description": {
            "type": "string",
            "title": "Voice Description",
            "description": "A description of the voice.",
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ]
          },
          "cloned_voice_preview_id": {
            "type": "string",
            "title": "Cloned Voice Preview Id",
            "description": "The cloned_voice_preview_id to create, call POST /v2/voices/create-preview-from-samples and fetch the cloned_voice_preview_id from the response body if don't have one yet.",
            "examples": [
              "37HceQefKmEi3bGovXjL"
            ]
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Serialized labels dictionary for the voice."
          }
        },
        "type": "object",
        "required": [
          "voice_name",
          "voice_description",
          "cloned_voice_preview_id"
        ],
        "title": "Body_Create_a_new_voice_from_voice_preview_v2_voices_create_voice_from_preview_post"
      },
      "Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post": {
        "properties": {
          "voice_name": {
            "type": "string",
            "title": "Voice Name",
            "description": "Name to use for the created voice.",
            "examples": [
              "Sassy squeaky mouse"
            ]
          },
          "voice_description": {
            "type": "string",
            "title": "Voice Description",
            "description": "Description to use for the created voice.",
            "examples": [
              "A sassy squeaky mouse"
            ]
          },
          "generated_voice_id": {
            "type": "string",
            "title": "Generated Voice Id",
            "description": "The generated_voice_id to create, call POST /v1/text-to-voice/create-previews and fetch the generated_voice_id from the response header if don't have one yet.",
            "examples": [
              "37HceQefKmEi3bGovXjL"
            ]
          },
          "played_not_selected_voice_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Played Not Selected Voice Ids",
            "description": "List of voice ids that the user has played but not selected. Used for RLHF."
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Optional, metadata to add to the created voice. Defaults to None.",
            "examples": [
              {
                "language": "en"
              }
            ],
            "name": "Voice metadata"
          }
        },
        "type": "object",
        "required": [
          "voice_name",
          "voice_description",
          "generated_voice_id"
        ],
        "title": "Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post"
      },
      "Body_Create_a_voice_preview_for_editing_v2_voices_create_preview_for_edit__voice_id__post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "A list of file paths to audio recordings intended for voice cloning."
          },
          "sample_ids_to_remove": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Sample Ids To Remove",
            "description": "A list of IDs for samples to remove from the IVC v2 voice."
          },
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "default": false,
            "examples": [true]
          }
        },
        "type": "object",
        "title": "Body_Create_a_voice_preview_for_editing_v2_voices_create_preview_for_edit__voice_id__post"
      },
      "Body_Create_a_voiceover_studio_editor_v1_voiceover_studio_post": {
        "properties": {
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File",
            "description": "An optional video file to add a voiceover to"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the Voiceover Studio project."
          }
        },
        "type": "object",
        "title": "Body_Create_a_voiceover_studio_editor_v1_voiceover_studio_post"
      },
      "Body_Create_an_publisher_profile_v1_direct_publishing_publisher_profiles_post": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Name",
            "description": "The name of the publisher profile",
            "examples": [
              "John Doe"
            ]
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "The bio of the publisher profile",
            "examples": [
              "I am a writer"
            ]
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth",
            "description": "The date of birth of the publisher profile",
            "examples": [
              "1990-01-01"
            ]
          },
          "origin": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Origin",
            "description": "The origin of the publisher profile",
            "examples": [
              "United States"
            ]
          },
          "website_link": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Link",
            "description": "The website link of the publisher profile",
            "examples": [
              "https://example.com"
            ]
          },
          "social_links": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Social Links",
            "description": "The social links of the publisher profile",
            "examples": [
              "[{ \"platform\": \"twitter\", \"link\": \"https://twitter.com/example\" }]"
            ]
          },
          "pen_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Pen Name",
            "description": "The pen name of the publisher profile",
            "examples": [
              "John Doe"
            ]
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "en",
                  "zh",
                  "es",
                  "hi",
                  "pt",
                  "fr",
                  "de",
                  "ja",
                  "ar",
                  "ru",
                  "ko",
                  "id",
                  "it",
                  "nl",
                  "tr",
                  "pl",
                  "sv",
                  "fil",
                  "ms",
                  "ro",
                  "uk",
                  "el",
                  "cs",
                  "da",
                  "fi",
                  "bg",
                  "hr",
                  "sk",
                  "ta",
                  "hu",
                  "no",
                  "vi"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The language of the publisher profile",
            "examples": [
              "en"
            ]
          },
          "image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image",
            "description": "Image to upload. Will be converted to WebP."
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Create_an_publisher_profile_v1_direct_publishing_publisher_profiles_post"
      },
      "Body_Create_chapter_v1_studio_projects__project_id__chapters_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the chapter, used for identification only.",
            "examples": [
              "Chapter 1"
            ]
          },
          "from_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Url",
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ]
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Create_chapter_v1_studio_projects__project_id__chapters_post"
      },
      "Body_Create_direct_publishing_read_v1_direct_publishing_reads_add_post": {
        "properties": {
          "from_document": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Document",
            "description": "An .epub, .pdf, .txt or similar file that will be used to initialize the project with its content."
          },
          "from_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Url",
            "description": "An URL to a document that will be used to initialize the project with its content."
          },
          "publisher_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publisher Profile Id"
          }
        },
        "type": "object",
        "title": "Body_Create_direct_publishing_read_v1_direct_publishing_reads_add_post"
      },
      "Body_Create_file_document_v1_convai_knowledge_base_file_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Documentation that the agent will have access to in order to interact with users."
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A custom, human-readable name for the document."
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_Create_file_document_v1_convai_knowledge_base_file_post"
      },
      "Body_Create_forced_alignment_v1_forced_alignment_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "The file to align. All major audio formats are supported. The file size must be less than 1GB."
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text to align with the audio. The input text can be in any format, however diarization is not supported at this time."
          },
          "enabled_spooled_file": {
            "type": "boolean",
            "title": "Enabled Spooled File",
            "description": "If true, the file will be streamed to the server and processed in chunks. This is useful for large files that cannot be loaded into memory. The default is false.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "file",
          "text"
        ],
        "title": "Body_Create_forced_alignment_v1_forced_alignment_post"
      },
      "Body_Create_new_AudioNative_trigger_v1_audio_native_settings_triggers_post": {
        "properties": {
          "trigger": {
            "$ref": "#/components/schemas/InputAudioNativeURLTriggerModel",
            "description": "AudioNative trigger."
          }
        },
        "type": "object",
        "required": [
          "trigger"
        ],
        "title": "Body_Create_new_AudioNative_trigger_v1_audio_native_settings_triggers_post"
      },
      "Body_Create_notification_v1_workspace_notification_preferences_post": {
        "properties": {
          "threshold_type": {
            "$ref": "#/components/schemas/UsageThresholdType",
            "description": "The type of threshold to set"
          },
          "threshold_value": {
            "type": "number",
            "title": "Threshold Value",
            "description": "The value of the threshold to set"
          }
        },
        "type": "object",
        "required": [
          "threshold_type",
          "threshold_value"
        ],
        "title": "Body_Create_notification_v1_workspace_notification_preferences_post"
      },
      "Body_Create_or_update_user_voice_collection_v1_voices_collections_post": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 1000,
            "title": "Title",
            "description": "Title of the collection to create/update."
          },
          "icon": {
            "type": "string",
            "maxLength": 1000,
            "title": "Icon",
            "description": "Icon of the collection to create/update."
          },
          "collection_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection Id",
            "description": "Collection ID to update."
          }
        },
        "type": "object",
        "required": [
          "title",
          "icon"
        ],
        "title": "Body_Create_or_update_user_voice_collection_v1_voices_collections_post"
      },
      "Body_Create_podcast_v1_studio_podcasts_post": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "examples": [
              "eleven_multilingual_v2"
            ]
          },
          "mode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PodcastConversationMode"
              },
              {
                "$ref": "#/components/schemas/PodcastBulletinMode"
              }
            ],
            "title": "Mode",
            "description": "The type of podcast to generate. Can be 'conversation', an interaction between two voices, or 'bulletin', a monologue.",
            "examples": [
              {
                "conversation": {
                  "guest_voice_id": "bYTqZQo3Jz7LQtmGTgwi",
                  "host_voice_id": "6lCwbsX1yVjD49QmpkTR"
                },
                "type": "conversation"
              }
            ]
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PodcastTextSource"
              },
              {
                "$ref": "#/components/schemas/PodcastURLSource"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PodcastTextSource"
                    },
                    {
                      "$ref": "#/components/schemas/PodcastURLSource"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Source",
            "description": "The source content for the Podcast.",
            "examples": [
              {
                "type": "url",
                "url": "https://en.wikipedia.org/wiki/Cognitive_science"
              }
            ]
          },
          "quality_preset": {
            "type": "string",
            "enum": [
              "standard",
              "high",
              "highest",
              "ultra",
              "ultra_lossless"
            ],
            "title": "Quality of the generated audio.",
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "default": "standard",
            "examples": [
              "standard"
            ]
          },
          "duration_scale": {
            "type": "string",
            "enum": [
              "short",
              "default",
              "long"
            ],
            "title": "The duration of the generated podcast. This varies depending on the format, voice and language.",
            "description": "Duration of the generated podcast. Must be one of:\nshort - produces podcasts shorter than 3 minutes.\ndefault - produces podcasts roughly between 3-7 minutes.\nlong - produces podcasts longer than 7 minutes.\n",
            "default": "default",
            "examples": [
              "short"
            ]
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
            "examples": [
              "en"
            ]
          },
          "intro": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1500
              },
              {
                "type": "null"
              }
            ],
            "title": "Intro",
            "description": "The intro text that will always be added to the beginning of the podcast.",
            "examples": [
              "Welcome to the podcast."
            ]
          },
          "outro": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1500
              },
              {
                "type": "null"
              }
            ],
            "title": "Outro",
            "description": "The outro text that will always be added to the end of the podcast.",
            "examples": [
              "Thank you for listening!"
            ]
          },
          "instructions_prompt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3000
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions Prompt",
            "description": "Additional instructions prompt for the podcast generation used to adjust the podcast's style and tone.",
            "examples": [
              "Ensure the podcast remains factual, accurate and appropriate for all audiences."
            ]
          },
          "highlights": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 70,
                  "minLength": 10
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Highlights",
            "description": "A brief summary or highlights of the Studio project's content, providing key points or themes. This should be between 10 and 70 characters.",
            "examples": [
              [
                "Emphasize the importance of AI on education"
              ]
            ]
          },
          "callback_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Callback Url",
            "description": "\n    A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion\n    Messages:\n    1. When project was converted successfully:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"success\",\n        project_snapshot_id: \"22m00Tcm4TlvDq8ikMAT\",\n        error_details: None,\n      }\n    }\n    2. When project conversion failed:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"error\",\n        project_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n\n    3. When chapter was converted successfully:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"success\",\n        chapter_snapshot_id: \"23m00Tcm4TlvDq8ikMAV\",\n        error_details: None,\n      }\n    }\n    4. When chapter conversion failed:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"error\",\n        chapter_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n    ",
            "examples": [
              [
                "https://www.test.com/my-api/projects-status"
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "mode",
          "source"
        ],
        "title": "Body_Create_podcast_v1_studio_podcasts_post"
      },
      "Body_Create_shareable_agent_link_v1_convai_agents__agent_id__link_post": {
        "properties": {
          "duration": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration",
            "description": "The duration in seconds after which the shareable link will expire.",
            "examples": [600],
            "optional": true
          }
        },
        "type": "object",
        "title": "Body_Create_shareable_agent_link_v1_convai_agents__agent_id__link_post"
      },
      "Body_Create_speech_to_text_task_v1_speech_to_text_tasks_post": {
        "properties": {
          "task_name": {
            "type": "string",
            "title": "Task Name",
            "description": "A name for the task, used for identification purposes only."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "The file to transcribe"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The ID of the model to use for transcription, currently only 'scribe_v1' and 'scribe_v1_experimental' are available."
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "An ISO-639-1 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. If set to null we will predict the language for you. Defaults to null."
          },
          "tag_audio_events": {
            "type": "boolean",
            "title": "Tag Audio Events",
            "description": "Whether to tag audio events like (laughter), (footsteps) etc ... in the transcription.",
            "default": true
          },
          "include_subtitles": {
            "type": "boolean",
            "title": "Include Subtitles",
            "description": "Whether to initialize project with subtitles pre-generated.",
            "default": false
          },
          "num_speakers": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 32,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Speakers",
            "description": "The maximum amount of speakers talking in the uploaded file. Can help with predicting who speaks when. The maximum amount of speakers that can be predicted is 32. Defaults to null, in this case the amount of speakers is set to the maximum value the model supports."
          }
        },
        "type": "object",
        "required": [
          "task_name",
          "file",
          "model_id"
        ],
        "title": "Body_Create_speech_to_text_task_v1_speech_to_text_tasks_post"
      },
      "Body_Create_text_document_v1_convai_knowledge_base_text_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Text content to be added to the knowledge base."
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A custom, human-readable name for the document."
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Create_text_document_v1_convai_knowledge_base_text_post"
      },
      "Body_Create_voice_remixing_session_v1_text_to_voice_remixing_sessions_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the remixing session.",
            "default": "",
            "examples": [
              "My Remixing Session"
            ]
          }
        },
        "type": "object",
        "title": "Body_Create_voice_remixing_session_v1_text_to_voice_remixing_sessions_post"
      },
      "Body_Creates_Audio_Native_enabled_project__v1_audio_native_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Project name."
          },
          "image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image",
            "description": "(Deprecated) Image URL used in the player. If not provided, default image set in the Player settings is used.",
            "deprecated": true
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author",
            "description": "Author used in the player and inserted at the start of the uploaded article. If not provided, the default author set in the Player settings is used."
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title used in the player and inserted at the top of the uploaded article. If not provided, the default title set in the Player settings is used."
          },
          "small": {
            "type": "boolean",
            "title": "Small",
            "description": "(Deprecated) Whether to use small player or not. If not provided, default value set in the Player settings is used.",
            "default": false,
            "deprecated": true
          },
          "text_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Color",
            "description": "Text color used in the player. If not provided, default text color set in the Player settings is used."
          },
          "background_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Color",
            "description": "Background color used in the player. If not provided, default background color set in the Player settings is used."
          },
          "sessionization": {
            "type": "integer",
            "title": "Sessionization",
            "description": "(Deprecated) Specifies for how many minutes to persist the session across page reloads. If not provided, default sessionization set in the Player settings is used.",
            "default": 0,
            "deprecated": true
          },
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id",
            "description": "Voice ID used to voice the content. If not provided, default voice ID set in the Player settings is used."
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "TTS Model ID used in the player. If not provided, default model ID set in the Player settings is used."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Either txt or HTML input file containing the article content. HTML should be formatted as follows '&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;Your content&lt;/p&gt;&lt;h3&gt;More of your content&lt;/h3&gt;&lt;p&gt;Some more of your content&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'"
          },
          "auto_convert": {
            "type": "boolean",
            "title": "Auto Convert",
            "description": "Whether to auto convert the project to audio or not.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Creates_Audio_Native_enabled_project__v1_audio_native_post"
      },
      "Body_Creates_voice_from_the_provided_samples_and_returns_voice_uid__v1_dubbing__dubbing_id__create_voice_post": {
        "properties": {
          "clips": {
            "items": {
              "$ref": "#/components/schemas/DubbingSourceClipResponseModel"
            },
            "type": "array",
            "title": "Clips",
            "description": "Voice samples to use for dubbing voice."
          }
        },
        "type": "object",
        "required": [
          "clips"
        ],
        "title": "Body_Creates_voice_from_the_provided_samples_and_returns_voice_uid__v1_dubbing__dubbing_id__create_voice_post"
      },
      "Body_Delete_existing_invitation_v1_workspace_invites_delete": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the customer",
            "examples": [
              "john.doe@testmail.com"
            ]
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Delete_existing_invitation_v1_workspace_invites_delete"
      },
      "Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the target workspace member."
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post"
      },
      "Body_Delete_member_v1_workspace_members_delete": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "Email of the target user."
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Delete_member_v1_workspace_members_delete"
      },
      "Body_Delete_xi_api_key_v1_user_delete_api_key_delete": {
        "properties": {
          "api_key_hashed": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key Hashed",
            "description": "Your hashed API key."
          }
        },
        "type": "object",
        "required": [
          "api_key_hashed"
        ],
        "title": "Body_Delete_xi_api_key_v1_user_delete_api_key_delete"
      },
      "Body_Detect_text_languages_v1_detect_languages_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Input prompt that should be rewritten."
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Detect_text_languages_v1_detect_languages_post"
      },
      "Body_Disable_Consolidated_Billing__Called_By_Remote_Env__cross_environment_consolidated_billing_disable_post": {
        "properties": {
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "parent_workspace_id": {
            "type": "string",
            "title": "Parent Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "workspace_id",
          "parent_workspace_id"
        ],
        "title": "Body_Disable_Consolidated_Billing__Called_By_Remote_Env__cross_environment_consolidated_billing_disable_post"
      },
      "Body_Download_history_items_v1_history_download_post": {
        "properties": {
          "history_item_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "History Item Ids",
            "description": "A list of history items to download, you can get IDs of history items and other metadata using the GET https://api.elevenlabs.io/v1/history endpoint."
          },
          "output_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Format",
            "description": "Output format to transcode the audio file, can be wav or default."
          }
        },
        "type": "object",
        "required": [
          "history_item_ids"
        ],
        "title": "Body_Download_history_items_v1_history_download_post"
      },
      "Body_Dub_a_clip_using_Speech_To_Speech_v1_dubbing__dubbing_id__dub_using_sts_post": {
        "properties": {
          "voice_uid": {
            "type": "string",
            "title": "Voice Uid",
            "description": "Voice uid to dub with."
          },
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file which holds the content and emotion that will control the generated speech."
          },
          "voice_settings": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Settings",
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string."
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The Target language."
          }
        },
        "type": "object",
        "required": [
          "voice_uid",
          "audio"
        ],
        "title": "Body_Dub_a_clip_using_Speech_To_Speech_v1_dubbing__dubbing_id__dub_using_sts_post"
      },
      "Body_Dub_a_video_or_an_audio_file_v1_dubbing_internal_post": {
        "properties": {
          "mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mode",
            "description": "automatic or manual. Manual mode is only supported when creating a dubbing studio project"
          },
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File",
            "description": "A list of file paths to audio recordings intended for voice cloning"
          },
          "csv_file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Csv File",
            "description": "CSV file containing transcription/translation metadata"
          },
          "foreground_audio_file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Foreground Audio File",
            "description": "For use only with csv input"
          },
          "background_audio_file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Audio File",
            "description": "For use only with csv input"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the dubbing project."
          },
          "source_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Url",
            "description": "URL of the source video/audio file."
          },
          "source_lang": {
            "type": "string",
            "title": "Source Lang",
            "description": "Source language.",
            "default": "auto"
          },
          "target_lang": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Lang",
            "description": "The Target language to dub the content into. Can be none if dubbing studio editor is enabled and running manual mode"
          },
          "target_accent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Accent",
            "description": "[Experimental] An accent to apply when selecting voices from the library and to use to inform translation of the dialect to prefer."
          },
          "num_speakers": {
            "type": "integer",
            "title": "Num Speakers",
            "description": "Number of speakers to use for the dubbing. Set to 0 to automatically detect the number of speakers",
            "default": 0
          },
          "watermark": {
            "type": "boolean",
            "title": "Watermark",
            "description": "Whether to apply watermark to the output video.",
            "default": false
          },
          "drop_background_audio": {
            "type": "boolean",
            "title": "Drop Background Audio",
            "description": "An advanced setting. Whether to drop background audio from the final dub. This can improve dub quality where it's known that audio shouldn't have a background track such as for speeches or monologues.",
            "default": false
          },
          "start_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time",
            "description": "Start time of the source video/audio file."
          },
          "end_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time",
            "description": "End time of the source video/audio file."
          },
          "highest_resolution": {
            "type": "boolean",
            "title": "Highest Resolution",
            "description": "Whether to use the highest resolution available.",
            "default": false
          },
          "dubbing_studio": {
            "type": "boolean",
            "title": "Dubbing Studio",
            "description": "Whether to prepare dub for edits in dubbing studio or edits as a dubbing resource.",
            "default": false
          },
          "use_profanity_filter": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Profanity Filter",
            "description": "[BETA] Whether transcripts should have profanities censored with the words '[censored]'"
          },
          "disable_voice_cloning": {
            "type": "boolean",
            "title": "Disable Voice Cloning",
            "description": "[BETA] Instead of using a voice clone in dubbing, use a similar voice from the ElevenLabs Voice Library.",
            "default": false
          },
          "csv_fps": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Csv Fps",
            "description": "Frames per second to use when parsing a CSV file for dubbing. If not provided, FPS will be inferred from timecodes."
          }
        },
        "type": "object",
        "title": "Body_Dub_a_video_or_an_audio_file_v1_dubbing_internal_post"
      },
      "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post": {
        "properties": {
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File",
            "description": "A list of file paths to audio recordings intended for voice cloning"
          },
          "csv_file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Csv File",
            "description": "CSV file containing transcription/translation metadata"
          },
          "foreground_audio_file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Foreground Audio File",
            "description": "For use only with csv input"
          },
          "background_audio_file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Audio File",
            "description": "For use only with csv input"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the dubbing project."
          },
          "source_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Url",
            "description": "URL of the source video/audio file."
          },
          "source_lang": {
            "type": "string",
            "title": "Source Lang",
            "description": "Source language.",
            "default": "auto"
          },
          "target_lang": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Lang",
            "description": "The Target language to dub the content into."
          },
          "target_accent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Accent",
            "description": "[Experimental] An accent to apply when selecting voices from the library and to use to inform translation of the dialect to prefer."
          },
          "num_speakers": {
            "type": "integer",
            "title": "Num Speakers",
            "description": "Number of speakers to use for the dubbing. Set to 0 to automatically detect the number of speakers",
            "default": 0
          },
          "watermark": {
            "type": "boolean",
            "title": "Watermark",
            "description": "Whether to apply watermark to the output video.",
            "default": false
          },
          "start_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time",
            "description": "Start time of the source video/audio file."
          },
          "end_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time",
            "description": "End time of the source video/audio file."
          },
          "highest_resolution": {
            "type": "boolean",
            "title": "Highest Resolution",
            "description": "Whether to use the highest resolution available.",
            "default": false
          },
          "drop_background_audio": {
            "type": "boolean",
            "title": "Drop Background Audio",
            "description": "An advanced setting. Whether to drop background audio from the final dub. This can improve dub quality where it's known that audio shouldn't have a background track such as for speeches or monologues.",
            "default": false
          },
          "use_profanity_filter": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Profanity Filter",
            "description": "[BETA] Whether transcripts should have profanities censored with the words '[censored]'"
          },
          "dubbing_studio": {
            "type": "boolean",
            "title": "Dubbing Studio",
            "description": "Whether to prepare dub for edits in dubbing studio or edits as a dubbing resource.",
            "default": false
          },
          "disable_voice_cloning": {
            "type": "boolean",
            "title": "Disable Voice Cloning",
            "description": "[BETA] Instead of using a voice clone in dubbing, use a similar voice from the ElevenLabs Voice Library.",
            "default": false
          },
          "mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mode",
            "description": "automatic or manual. Manual mode is only supported when creating a dubbing studio project",
            "default": "automatic"
          },
          "csv_fps": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Csv Fps",
            "description": "Frames per second to use when parsing a CSV file for dubbing. If not provided, FPS will be inferred from timecodes."
          }
        },
        "type": "object",
        "title": "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post"
      },
      "Body_Dub_using_Text_to_Speech_and_Speech_To_Speech_v1_dubbing__dubbing_id__dub_using_tts_and_sts_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Text to dub."
          },
          "tts_voice_uid": {
            "type": "string",
            "title": "Tts Voice Uid",
            "description": "Voice uid to dub with."
          },
          "tts_voice_settings": {
            "$ref": "#/components/schemas/VoiceSettingsResponseModel",
            "description": "Voice settings to dub with."
          },
          "sts_voice_uid": {
            "type": "string",
            "title": "Sts Voice Uid",
            "description": "Voice uid to dub with."
          },
          "sts_voice_settings": {
            "$ref": "#/components/schemas/VoiceSettingsResponseModel",
            "description": "Voice settings to dub with."
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The Target language."
          },
          "minimum_duration": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Minimum Duration",
            "description": "Minimum duration of the dub. If not set then dub could be any length"
          },
          "maximum_duration": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maximum Duration",
            "description": "Maximum duration of the dub. If not set then dub could be any length"
          }
        },
        "type": "object",
        "required": [
          "text",
          "tts_voice_uid",
          "tts_voice_settings",
          "sts_voice_uid",
          "sts_voice_settings"
        ],
        "title": "Body_Dub_using_Text_to_Speech_and_Speech_To_Speech_v1_dubbing__dubbing_id__dub_using_tts_and_sts_post"
      },
      "Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post": {
        "properties": {
          "segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Segments",
            "description": "Dub only this list of segments."
          },
          "languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Languages",
            "description": "Dub only these languages for each segment."
          }
        },
        "type": "object",
        "required": [
          "segments",
          "languages"
        ],
        "title": "Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post"
      },
      "Body_Dubs_provided_text_with_provided_voice_and_settings__v1_dubbing__dubbing_id__dub_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Text to dub."
          },
          "voice_uid": {
            "type": "string",
            "title": "Voice Uid",
            "description": "Voice uid to dub with."
          },
          "voice_settings": {
            "$ref": "#/components/schemas/VoiceSettingsResponseModel",
            "description": "Voice settings to dub with."
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The Target language."
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The model ID to use for dubbing.",
            "examples": [
              "eleven_turbo_v2"
            ]
          },
          "minimum_duration": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Minimum Duration",
            "description": "Minimum duration of the dub. If not set then dub could be any length"
          },
          "maximum_duration": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maximum Duration",
            "description": "Maximum duration of the dub. If not set then dub could be any length"
          },
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "text",
          "voice_uid",
          "voice_settings"
        ],
        "title": "Body_Dubs_provided_text_with_provided_voice_and_settings__v1_dubbing__dubbing_id__dub_post"
      },
      "Body_Duplicate_Agent_v1_convai_agents__agent_id__duplicate_post": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A name to make the agent easier to find",
            "examples": [
              "My agent"
            ],
            "optional": true
          }
        },
        "type": "object",
        "title": "Body_Duplicate_Agent_v1_convai_agents__agent_id__duplicate_post"
      },
      "Body_Edit_PVC_voice_v1_voices_pvc__voice_id__post": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "title": "Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "examples": [
              "John Smith"
            ]
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "Language used in the samples.",
            "examples": [
              "en"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description to use for the created voice.",
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ]
          },
          "labels": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Serialized labels dictionary for the voice."
          }
        },
        "type": "object",
        "title": "Body_Edit_PVC_voice_v1_voices_pvc__voice_id__post"
      },
      "Body_Edit_project_details_v1_projects__project_id__patch": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the Studio project, used for identification only.",
            "examples": [
              "Project 1"
            ]
          },
          "default_title_voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Title Voice Id",
            "description": "The voice_id that corresponds to the default voice used for new titles.",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ]
          },
          "default_paragraph_voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Paragraph Voice Id",
            "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ]
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "Romeo and Juliet"
            ]
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author",
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "William Shakespeare"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "An optional description of the Studio project.",
            "examples": [
              "A tragic love story between two young lovers."
            ]
          },
          "genres": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genres",
            "description": "An optional list of genres associated with the Studio project.",
            "examples": [
              [
                "Romance",
                "Drama"
              ]
            ]
          },
          "target_audience": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "children",
                  "young adult",
                  "adult",
                  "all ages"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience",
            "description": "An optional target audience of the Studio project.",
            "examples": [
              "adult"
            ]
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
            "examples": [
              "en"
            ]
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "An optional content type of the Studio project.",
            "examples": [
              "Book"
            ]
          },
          "original_publication_date": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^\\d{4}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Publication Date",
            "description": "An optional original publication date of the Studio project, in the format YYYY-MM-DD or YYYY.",
            "examples": [
              "1597-01-01"
            ]
          },
          "mature_content": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mature Content",
            "description": "An optional specification of whether this Studio project contains mature content.",
            "examples": [false]
          },
          "isbn_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn Number",
            "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "0-306-40615-2"
            ]
          },
          "volume_normalization": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Volume Normalization",
            "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "examples": [false]
          },
          "chapters_order": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chapters Order",
            "description": "The order of the chapters in the Studio project.",
            "examples": [
              [
                "21m00Tcm4TlvDq8ikWAM",
                "22m00Tcm4TlvDq8ikMAT"
              ]
            ]
          },
          "fiction": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "fiction",
                  "non-fiction"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiction",
            "description": "An optional specification of whether the content of this Studio project is fiction.",
            "examples": [
              "fiction"
            ]
          },
          "apply_text_normalization": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "auto",
                  "on",
                  "off",
                  "apply_english"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Apply Text Normalization",
            "description": "\n    This parameter controls text normalization with four modes: 'auto', 'on', 'apply_english' and 'off'.\n    When set to 'auto', the system will automatically decide whether to apply text normalization\n    (e.g., spelling out numbers). With 'on', text normalization will always be applied, while\n    with 'off', it will be skipped. 'apply_english' is the same as 'on' but will assume that text is in English.\n    "
          },
          "default_model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Model Id",
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "examples": [
              "eleven_multilingual_v2"
            ]
          },
          "chapters_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chapters Enabled",
            "description": "Whether chapters are enabled for the project.",
            "examples": [true]
          },
          "captions_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captions Enabled",
            "description": "Whether captions are enabled for the project.",
            "examples": [true]
          },
          "caption_style": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The caption styles that should be applied to exported videos",
            "examples": [
              {
                "example": {
                  "auto_break_enabled": true,
                  "background_color": "#000000",
                  "background_enabled": false,
                  "background_opacity": 0.5,
                  "character_animation": {
                    "enter_type": "none",
                    "exit_type": "none"
                  },
                  "horizontal_placement": {
                    "align": "center",
                    "translate_pct": 0
                  },
                  "max_lines_per_section": 2,
                  "max_words_per_line": 12,
                  "section_animation": {
                    "enter_type": "none",
                    "exit_type": "none"
                  },
                  "template": {
                    "key": "CaptionTemplate.Basic",
                    "label": "Basic"
                  },
                  "text_align": "center",
                  "text_color": "#ffffff",
                  "text_font": "CaptionTextFont.ARIAL",
                  "text_scale": 1,
                  "text_style": "normal",
                  "text_weight": "normal",
                  "vertical_placement": {
                    "align": "bottom",
                    "translate_pct": -5
                  },
                  "width_pct": 80,
                  "word_animation": {
                    "enter_type": "none",
                    "exit_type": "none"
                  },
                  "word_highlights_background_color": "#ffffff",
                  "word_highlights_color": "#ffffff",
                  "word_highlights_enabled": false,
                  "word_highlights_opacity": 0.5
                }
              }
            ]
          }
        },
        "type": "object",
        "title": "Body_Edit_project_details_v1_projects__project_id__patch"
      },
      "Body_Edit_user_v1_user_edit_post": {
        "properties": {
          "allowed_to_extend_character_limit": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed To Extend Character Limit",
            "description": "Whether to allow extending the character_limit of the subscription.",
            "examples": [true]
          },
          "max_character_limit_extension": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Character Limit Extension",
            "description": "The character limit extension limit of the subscription.",
            "examples": [1000000]
          },
          "ccpa_opt_out": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ccpa Opt Out",
            "description": "Whether to opt out of data processing under CCPA.",
            "examples": [true]
          },
          "locale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locale",
            "description": "User selected application language",
            "examples": [
              "en"
            ]
          }
        },
        "type": "object",
        "title": "Body_Edit_user_v1_user_edit_post"
      },
      "Body_Edit_voice_used_in_project_v1_projects__project_id__voices__voice_id__edit_post": {
        "properties": {
          "new_voice_id": {
            "type": "string",
            "title": "New Voice Id"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "stability": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability"
          },
          "similarity_boost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Boost"
          },
          "style": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Style"
          },
          "use_speaker_boost": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Speaker Boost"
          },
          "volume_gain": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Volume Gain"
          },
          "speed": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speed"
          }
        },
        "type": "object",
        "title": "Body_Edit_voice_used_in_project_v1_projects__project_id__voices__voice_id__edit_post"
      },
      "Body_Edit_voice_v1_voices__voice_id__edit_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "examples": [
              "John Smith"
            ]
          },
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "Audio files to add to the voice"
          },
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "default": false,
            "examples": [true]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "A description of the voice.",
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ]
          },
          "labels": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Serialized labels dictionary for the voice."
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Edit_voice_v1_voices__voice_id__edit_post"
      },
      "Body_Edit_xi_api_key_v1_user_edit_api_key_post": {
        "properties": {
          "api_key_hashed": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Key Hashed",
            "description": "Your hashed API key."
          },
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "description": "Whether to enable or disable the API key."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the XI API key to use (used for identification purposes only).",
            "examples": [
              "Sneaky Fox"
            ]
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "text_to_speech",
                    "speech_to_speech",
                    "speech_to_text",
                    "models_read",
                    "models_write",
                    "voices_read",
                    "voices_write",
                    "speech_history_read",
                    "speech_history_write",
                    "sound_generation",
                    "audio_isolation",
                    "voice_generation",
                    "dubbing_read",
                    "dubbing_write",
                    "pronunciation_dictionaries_read",
                    "pronunciation_dictionaries_write",
                    "user_read",
                    "user_write",
                    "projects_read",
                    "projects_write",
                    "audio_native_read",
                    "audio_native_write",
                    "workspace_read",
                    "workspace_write",
                    "forced_alignment"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions",
            "description": "The permissions of the XI API."
          },
          "character_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Limit",
            "description": "The character limit of the XI API key. If provided this will limit the usage of this api key to n characters per month where n is the chosen value. Requests that incur charges will fail after reaching this monthly limit."
          }
        },
        "type": "object",
        "required": [
          "api_key_hashed",
          "is_enabled",
          "name"
        ],
        "title": "Body_Edit_xi_api_key_v1_user_edit_api_key_post"
      },
      "Body_Element_text_to_speech__Legacy__v1_projects__project_id__chapters__chapter_id__blocks__block_id__text_to_speech_post": {
        "properties": {
          "force_regeneration": {
            "type": "boolean",
            "title": "Force Regeneration",
            "description": "Whether to force regenerating this element even if the request_hash didn't change.",
            "examples": [false]
          },
          "previous_blocks": {
            "items": {
              "$ref": "#/components/schemas/BlockDBModel"
            },
            "type": "array",
            "title": "Previous Blocks",
            "description": "List of blocks before the paragraph, used for conditioning."
          },
          "next_blocks": {
            "items": {
              "$ref": "#/components/schemas/BlockDBModel"
            },
            "type": "array",
            "title": "Next Blocks",
            "description": "List of blocks after the paragraph, used for conditioning."
          },
          "stitch_mode": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "none",
                  "use_provided_blocks",
                  "text"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Stitch Mode",
            "description": "\n    How stitching should be done.\n    use_provided_blocks - client provides the context\n    text - server will find the neighbors of the blocks and use their text\n    none - ignore neighbors\n    "
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "The id of the client who made the change.",
            "default": "unknown",
            "examples": [
              "24be296c-cc26-4062-a0b9-7d6f96d750e4"
            ]
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "examples": [
              "eleven_multilingual_v2"
            ]
          }
        },
        "type": "object",
        "required": [
          "force_regeneration",
          "previous_blocks",
          "next_blocks"
        ],
        "title": "Body_Element_text_to_speech__Legacy__v1_projects__project_id__chapters__chapter_id__blocks__block_id__text_to_speech_post"
      },
      "Body_Element_text_to_speech_stream__Legacy__v1_projects__project_id__chapters__chapter_id__blocks__block_id__play_fragment_post": {
        "properties": {
          "start_index": {
            "type": "integer",
            "title": "Start Index",
            "description": "Start index of the fragment."
          },
          "end_index": {
            "type": "integer",
            "title": "End Index",
            "description": "End index of the fragment."
          }
        },
        "type": "object",
        "required": [
          "start_index",
          "end_index"
        ],
        "title": "Body_Element_text_to_speech_stream__Legacy__v1_projects__project_id__chapters__chapter_id__blocks__block_id__play_fragment_post"
      },
      "Body_Element_text_to_speech_stream__Legacy__v1_projects__project_id__chapters__chapter_id__blocks__block_id__regenerate_fragment_post": {
        "properties": {
          "start_index": {
            "type": "integer",
            "title": "Start Index",
            "description": "Start index of the fragment."
          },
          "end_index": {
            "type": "integer",
            "title": "End Index",
            "description": "End index of the fragment."
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "The id of the client who made the change.",
            "default": "unknown",
            "examples": [
              "24be296c-cc26-4062-a0b9-7d6f96d750e4"
            ]
          }
        },
        "type": "object",
        "required": [
          "start_index",
          "end_index"
        ],
        "title": "Body_Element_text_to_speech_stream__Legacy__v1_projects__project_id__chapters__chapter_id__blocks__block_id__regenerate_fragment_post"
      },
      "Body_Element_text_to_speech_stream__Legacy__v1_projects__project_id__chapters__chapter_id__blocks__block_id__text_to_speech_stream_post": {
        "properties": {
          "force_regeneration": {
            "type": "boolean",
            "title": "Force Regeneration",
            "description": "Whether to force regenerating this element even if the request_hash didn't change.",
            "examples": [false]
          },
          "previous_blocks": {
            "items": {
              "$ref": "#/components/schemas/BlockDBModel"
            },
            "type": "array",
            "title": "Previous Blocks",
            "description": "List of blocks before the paragraph, used for conditioning."
          },
          "next_blocks": {
            "items": {
              "$ref": "#/components/schemas/BlockDBModel"
            },
            "type": "array",
            "title": "Next Blocks",
            "description": "List of blocks after the paragraph, used for conditioning."
          },
          "stitch_mode": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "none",
                  "use_provided_blocks",
                  "text"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Stitch Mode",
            "description": "\n    How stitching should be done.\n    use_provided_blocks - client provides the context\n    text - server will find the neighbors of the blocks and use their text\n    none - ignore neighbors\n    "
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "The id of the client who made the change.",
            "default": "unknown",
            "examples": [
              "24be296c-cc26-4062-a0b9-7d6f96d750e4"
            ]
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "examples": [
              "eleven_multilingual_v2"
            ]
          }
        },
        "type": "object",
        "required": [
          "force_regeneration",
          "previous_blocks",
          "next_blocks"
        ],
        "title": "Body_Element_text_to_speech_stream__Legacy__v1_projects__project_id__chapters__chapter_id__blocks__block_id__text_to_speech_stream_post"
      },
      "Body_Element_text_to_speech_stream_v2_projects__project_id__chapters__chapter_id__blocks__block_id__play_fragment_post": {
        "properties": {
          "start_index": {
            "type": "integer",
            "title": "Start Index",
            "description": "Start index of the fragment."
          },
          "end_index": {
            "type": "integer",
            "title": "End Index",
            "description": "End index of the fragment."
          }
        },
        "type": "object",
        "required": [
          "start_index",
          "end_index"
        ],
        "title": "Body_Element_text_to_speech_stream_v2_projects__project_id__chapters__chapter_id__blocks__block_id__play_fragment_post"
      },
      "Body_Element_text_to_speech_stream_v2_projects__project_id__chapters__chapter_id__blocks__block_id__regenerate_fragment_post": {
        "properties": {
          "start_index": {
            "type": "integer",
            "title": "Start Index",
            "description": "Start index of the fragment."
          },
          "end_index": {
            "type": "integer",
            "title": "End Index",
            "description": "End index of the fragment."
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "The id of the client who made the change.",
            "default": "unknown",
            "examples": [
              "24be296c-cc26-4062-a0b9-7d6f96d750e4"
            ]
          }
        },
        "type": "object",
        "required": [
          "start_index",
          "end_index"
        ],
        "title": "Body_Element_text_to_speech_stream_v2_projects__project_id__chapters__chapter_id__blocks__block_id__regenerate_fragment_post"
      },
      "Body_Element_text_to_speech_stream_v2_projects__project_id__chapters__chapter_id__blocks__block_id__speech_to_speech_regenerate_fragment_post": {
        "properties": {
          "start_index": {
            "type": "integer",
            "title": "Start Index",
            "description": "Start index of the fragment."
          },
          "end_index": {
            "type": "integer",
            "title": "End Index",
            "description": "End index of the fragment."
          },
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file which holds the content and emotion that will control the generated speech."
          },
          "stability": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Stability",
            "description": "Stability",
            "default": 0.5
          },
          "style": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Style",
            "description": "Style",
            "default": 0
          },
          "similarity_boost": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Boost",
            "description": "Similarity boost",
            "default": 0.75
          },
          "use_speaker_boost": {
            "type": "boolean",
            "title": "Use Speaker Boost",
            "description": "Speaker boost",
            "default": false
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "The id of the client who made the change.",
            "default": "unknown",
            "examples": [
              "24be296c-cc26-4062-a0b9-7d6f96d750e4"
            ]
          }
        },
        "type": "object",
        "required": [
          "start_index",
          "end_index",
          "audio"
        ],
        "title": "Body_Element_text_to_speech_stream_v2_projects__project_id__chapters__chapter_id__blocks__block_id__speech_to_speech_regenerate_fragment_post"
      },
      "Body_Element_text_to_speech_stream_v2_projects__project_id__chapters__chapter_id__blocks__block_id__text_to_speech_stream_post": {
        "properties": {
          "force_regeneration": {
            "type": "boolean",
            "title": "Force Regeneration",
            "description": "Whether to force regenerating this element even if the request_hash didn't change.",
            "examples": [false]
          },
          "previous_blocks": {
            "items": {
              "$ref": "#/components/schemas/BlockDBModel"
            },
            "type": "array",
            "title": "Previous Blocks",
            "description": "List of blocks before the paragraph, used for conditioning."
          },
          "next_blocks": {
            "items": {
              "$ref": "#/components/schemas/BlockDBModel"
            },
            "type": "array",
            "title": "Next Blocks",
            "description": "List of blocks after the paragraph, used for conditioning."
          },
          "stitch_mode": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "none",
                  "use_provided_blocks",
                  "text"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Stitch Mode",
            "description": "\n    How stitching should be done.\n    use_provided_blocks - client provides the context\n    text - server will find the neighbors of the blocks and use their text\n    none - ignore neighbors\n    "
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "The id of the client who made the change.",
            "default": "unknown",
            "examples": [
              "24be296c-cc26-4062-a0b9-7d6f96d750e4"
            ]
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "examples": [
              "eleven_multilingual_v2"
            ]
          }
        },
        "type": "object",
        "required": [
          "force_regeneration",
          "previous_blocks",
          "next_blocks"
        ],
        "title": "Body_Element_text_to_speech_stream_v2_projects__project_id__chapters__chapter_id__blocks__block_id__text_to_speech_stream_post"
      },
      "Body_Element_text_to_speech_v1_projects__project_id__chapters__chapter_id__blocks__block_id__nodes__node_id__audio_post": {
        "properties": {
          "force_regeneration": {
            "type": "boolean",
            "title": "Force Regeneration",
            "description": "Whether to force regenerating this element even if the request_hash didn't change.",
            "examples": [false]
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "The id of the client who made the change.",
            "default": "unknown",
            "examples": [
              "24be296c-cc26-4062-a0b9-7d6f96d750e4"
            ]
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "examples": [
              "eleven_multilingual_v2"
            ]
          }
        },
        "type": "object",
        "required": [
          "force_regeneration"
        ],
        "title": "Body_Element_text_to_speech_v1_projects__project_id__chapters__chapter_id__blocks__block_id__nodes__node_id__audio_post"
      },
      "Body_Element_text_to_speech_v1_projects__project_id__chapters__chapter_id__blocks__block_id__nodes__node_id__voice_changer_post": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "examples": [
              "eleven_multilingual_v2"
            ]
          },
          "force_regeneration": {
            "type": "boolean",
            "title": "Force Regeneration",
            "description": "Whether to force regenerating this element even if the request_hash didn't change.",
            "examples": [false]
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "The id of the client who made the change.",
            "default": "unknown",
            "examples": [
              "24be296c-cc26-4062-a0b9-7d6f96d750e4"
            ]
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "examples": [
              "eleven_multilingual_v2"
            ]
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "force_regeneration"
        ],
        "title": "Body_Element_text_to_speech_v1_projects__project_id__chapters__chapter_id__blocks__block_id__nodes__node_id__voice_changer_post"
      },
      "Body_Element_text_to_speech_v1_projects__project_id__chapters__chapter_id__blocks__block_id__nodes__node_id__voice_isolation_post": {
        "properties": {
          "force_regeneration": {
            "type": "boolean",
            "title": "Force Regeneration",
            "description": "Whether to force regenerating this element even if the request_hash didn't change.",
            "examples": [false]
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "The id of the client who made the change.",
            "default": "unknown",
            "examples": [
              "24be296c-cc26-4062-a0b9-7d6f96d750e4"
            ]
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "examples": [
              "eleven_multilingual_v2"
            ]
          }
        },
        "type": "object",
        "required": [
          "force_regeneration"
        ],
        "title": "Body_Element_text_to_speech_v1_projects__project_id__chapters__chapter_id__blocks__block_id__nodes__node_id__voice_isolation_post"
      },
      "Body_Element_text_to_speech_v2_projects__project_id__chapters__chapter_id__blocks__block_id__text_to_speech_post": {
        "properties": {
          "force_regeneration": {
            "type": "boolean",
            "title": "Force Regeneration",
            "description": "Whether to force regenerating this element even if the request_hash didn't change.",
            "examples": [false]
          },
          "previous_blocks": {
            "items": {
              "$ref": "#/components/schemas/BlockDBModel"
            },
            "type": "array",
            "title": "Previous Blocks",
            "description": "List of blocks before the paragraph, used for conditioning."
          },
          "next_blocks": {
            "items": {
              "$ref": "#/components/schemas/BlockDBModel"
            },
            "type": "array",
            "title": "Next Blocks",
            "description": "List of blocks after the paragraph, used for conditioning."
          },
          "stitch_mode": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "none",
                  "use_provided_blocks",
                  "text"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Stitch Mode",
            "description": "\n    How stitching should be done.\n    use_provided_blocks - client provides the context\n    text - server will find the neighbors of the blocks and use their text\n    none - ignore neighbors\n    "
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "The id of the client who made the change.",
            "default": "unknown",
            "examples": [
              "24be296c-cc26-4062-a0b9-7d6f96d750e4"
            ]
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "examples": [
              "eleven_multilingual_v2"
            ]
          }
        },
        "type": "object",
        "required": [
          "force_regeneration",
          "previous_blocks",
          "next_blocks"
        ],
        "title": "Body_Element_text_to_speech_v2_projects__project_id__chapters__chapter_id__blocks__block_id__text_to_speech_post"
      },
      "Body_Enable_Consolidated_Billing__Called_By_Remote_Env__cross_environment_consolidated_billing_enable_post": {
        "properties": {
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "charge_workspace_id": {
            "type": "string",
            "title": "Charge Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "workspace_id",
          "charge_workspace_id"
        ],
        "title": "Body_Enable_Consolidated_Billing__Called_By_Remote_Env__cross_environment_consolidated_billing_enable_post"
      },
      "Body_Enhance_dialogue_blocks_v1_enhance_dialogue_post": {
        "properties": {
          "dialogue_blocks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Dialogue Blocks",
            "description": "An array of dialogue text blocks to be enhanced"
          }
        },
        "type": "object",
        "required": [
          "dialogue_blocks"
        ],
        "title": "Body_Enhance_dialogue_blocks_v1_enhance_dialogue_post"
      },
      "Body_Export_transcription_task_project_v1_speech_to_text_tasks__transcription_task_id__project_export_post": {
        "properties": {
          "export_options": {
            "$ref": "#/components/schemas/ExportOptions",
            "description": "Options for the export of the transcript.",
            "examples": [
              {
                "format": "srt",
                "include_speakers": true,
                "include_timestamps": true
              }
            ]
          },
          "keep_existing_segments": {
            "type": "boolean",
            "title": "Keep Existing Segments",
            "description": "Whether to keep the existing segments or not. If false, segmentation options will be used to segment the transcript.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "export_options"
        ],
        "title": "Body_Export_transcription_task_project_v1_speech_to_text_tasks__transcription_task_id__project_export_post"
      },
      "Body_Export_transcription_task_result_v1_speech_to_text_tasks__transcription_task_id__export_post": {
        "properties": {
          "export_options": {
            "$ref": "#/components/schemas/ExportOptions",
            "description": "Options for the export of the transcript.",
            "examples": [
              {
                "format": "srt",
                "include_speakers": true,
                "include_timestamps": true
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "export_options"
        ],
        "title": "Body_Export_transcription_task_result_v1_speech_to_text_tasks__transcription_task_id__export_post"
      },
      "Body_Exports_project_to_Reader_App_v1_projects__project_id__export_as_read_post": {
        "properties": {
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id",
            "description": "Voice ID to use for the read"
          },
          "export_with_audio": {
            "type": "boolean",
            "title": "Export With Audio",
            "description": "Whether to export with latest project audio",
            "default": false
          }
        },
        "type": "object",
        "title": "Body_Exports_project_to_Reader_App_v1_projects__project_id__export_as_read_post"
      },
      "Body_External_Provider_user_setup_v1_user_post_registration_user_setup_post": {
        "properties": {
          "pid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partnerstack Referer Id",
            "description": "The partner id within partnerstack for the referer of a new user.\n"
          },
          "xid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partnerstack XID",
            "description": "The click id within partnerstack for the referer of a new user.\n"
          },
          "gcp_marketplace_jwt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "GCP Marketplace JWT",
            "description": "A JWT from GCP marketplace that shows an account is linked to a particular GCP marketplace account. Used to link an account to GCP Marketplace billing."
          }
        },
        "type": "object",
        "title": "Body_External_Provider_user_setup_v1_user_post_registration_user_setup_post"
      },
      "Body_Forced_Alignment_Internal_v1_forced_alignment_internal_post": {
        "properties": {
          "file_pcm16_16_khz": {
            "type": "string",
            "format": "binary",
            "title": "File Pcm16 16 Khz",
            "description": "The file to align. All major audio formats are supported. The file size must be less than 1GB."
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text to align with the audio. The input text can be in any format, however diarization is not supported at this time."
          }
        },
        "type": "object",
        "required": [
          "file_pcm16_16_khz",
          "text"
        ],
        "title": "Body_Forced_Alignment_Internal_v1_forced_alignment_internal_post"
      },
      "Body_Generate_Composition_Plan_v1_music_compose_plan_post": {
        "properties": {
          "prompt": {
            "type": "string",
            "maxLength": 2000,
            "title": "Prompt",
            "description": "A simple text prompt"
          },
          "music_length_ms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300000,
                "minimum": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Length Ms"
          },
          "source_composition_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "An optional composition plan to use as a source for the new composition plan."
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "Body_Generate_Composition_Plan_v1_music_compose_plan_post"
      },
      "Body_Generate_Music_Async_v1_music_generate_async_post": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "A simple text prompt to generate a song from. Cannot be used in conjunction with `composition_plan`."
          },
          "music_prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A music prompt. Deprecated. Use `composition_plan` instead."
          },
          "composition_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A detailed composition plan to guide music generation. Cannot be used in conjunction with `prompt`."
          },
          "music_length_ms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300000,
                "minimum": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Length Ms",
            "description": "The length of the song to generate in milliseconds. Used only in conjunction with `prompt`. Must be between 10000ms and 300000ms"
          },
          "model": {
            "$ref": "#/components/schemas/MusicModelID",
            "description": "The model to use for the generation.",
            "default": "v1"
          }
        },
        "type": "object",
        "title": "Body_Generate_Music_Async_v1_music_generate_async_post"
      },
      "Body_Generate_Music_Prompt_v1_music_generate_music_prompt_post": {
        "properties": {
          "prompt": {
            "type": "string",
            "maxLength": 2000,
            "title": "Prompt",
            "description": "A simple text prompt"
          },
          "music_prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "An optional music prompt to use as the generation source."
          },
          "music_length_ms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300000,
                "minimum": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Length Ms"
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "Body_Generate_Music_Prompt_v1_music_generate_music_prompt_post"
      },
      "Body_Generate_Music_v1_music_generate_post": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "A simple text prompt to generate a song from. Cannot be used in conjunction with `composition_plan`."
          },
          "music_prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A music prompt. Deprecated. Use `composition_plan` instead."
          },
          "composition_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A detailed composition plan to guide music generation. Cannot be used in conjunction with `prompt`."
          },
          "music_length_ms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300000,
                "minimum": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Length Ms",
            "description": "The length of the song to generate in milliseconds. Used only in conjunction with `prompt`. Must be between 10000ms and 300000ms"
          },
          "model": {
            "$ref": "#/components/schemas/MusicModelID",
            "description": "The model to use for the generation.",
            "default": "v1"
          }
        },
        "type": "object",
        "title": "Body_Generate_Music_v1_music_generate_post"
      },
      "Body_Generate_SFX_v1_dubbing__dubbing_id__sfx_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Text to dub."
          },
          "desired_clip_length_seconds": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 22,
                "minimum": 0.5
              },
              {
                "type": "null"
              }
            ],
            "title": "Desired Clip Length Seconds",
            "description": "Duration of the generation. If not set then dub could be any length"
          },
          "loop": {
            "type": "boolean",
            "title": "Loop",
            "description": "Whether to create a sound effect that loops smoothly.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Generate_SFX_v1_dubbing__dubbing_id__sfx_post"
      },
      "Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post": {
        "properties": {
          "gender": {
            "type": "string",
            "enum": [
              "female",
              "male"
            ],
            "title": "Gender",
            "description": "Category code corresponding to the gender of the generated voice. Possible values: female, male.",
            "examples": [
              "female"
            ]
          },
          "accent": {
            "type": "string",
            "title": "Accent",
            "description": "Category code corresponding to the accent of the generated voice. Possible values: british, american, african, australian, indian.",
            "examples": [
              "british"
            ]
          },
          "age": {
            "type": "string",
            "enum": [
              "young",
              "middle_aged",
              "old"
            ],
            "title": "Age",
            "description": "Category code corresponding to the age of the generated voice. Possible values: young, middle_aged, old.",
            "examples": [
              "young"
            ]
          },
          "accent_strength": {
            "type": "number",
            "title": "Accent Strength",
            "description": "The strength of the accent of the generated voice. Has to be between 0.3 and 2.0."
          },
          "text": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 100,
            "title": "Text",
            "description": "Text to generate, text length has to be between 100 and 1000.",
            "examples": [
              "Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
            ]
          }
        },
        "type": "object",
        "required": [
          "gender",
          "accent",
          "age",
          "accent_strength",
          "text"
        ],
        "title": "Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post"
      },
      "Body_Generate_a_sample_text_for_a_voice_description_v1_text_to_voice_generate_sample_text_post": {
        "properties": {
          "voice_description": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 20,
            "title": "Voice Description",
            "description": "Description to use for the created voice.",
            "examples": [
              "A sassy squeaky mouse"
            ]
          },
          "model_id": {
            "type": "string",
            "enum": [
              "eleven_multilingual_ttv_v2",
              "eleven_ttv_v3"
            ],
            "title": "Model Id",
            "description": "Model to use for the voice generation. Possible values: eleven_multilingual_ttv_v2, eleven_ttv_v3.",
            "default": "eleven_multilingual_ttv_v2",
            "examples": [
              "eleven_multilingual_ttv_v2"
            ]
          }
        },
        "type": "object",
        "required": [
          "voice_description"
        ],
        "title": "Body_Generate_a_sample_text_for_a_voice_description_v1_text_to_voice_generate_sample_text_post"
      },
      "Body_Generate_a_voice_preview_from_from_uploaded_samples_v2_voices_create_preview_from_samples_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "A list of file paths to audio recordings intended for voice cloning"
          },
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "default": false,
            "examples": [true]
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_Generate_a_voice_preview_from_from_uploaded_samples_v2_voices_create_preview_from_samples_post"
      },
      "Body_Generate_preview_audio_v1_direct_publishing_reads__read_id__generate_preview_audio_post": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "voice id"
          },
          "preview_audio_text": {
            "type": "string",
            "title": "Preview Audio Text",
            "description": "preview text for audio"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "preview_audio_text"
        ],
        "title": "Body_Generate_preview_audio_v1_direct_publishing_reads__read_id__generate_preview_audio_post"
      },
      "Body_Get_dubbing_metadata_for_url__v1_dubbing_metadata_post": {
        "properties": {
          "source_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Url",
            "description": "URL of the source video/audio file."
          }
        },
        "type": "object",
        "title": "Body_Get_dubbing_metadata_for_url__v1_dubbing_metadata_post"
      },
      "Body_Get_similar_library_voices_for_provided_voice_id_v1_similar_voices_by_id_post": {
        "properties": {
          "public_user_id": {
            "type": "string",
            "title": "Public User Id",
            "description": "Public user id",
            "examples": [
              "7c9fab611d9a0e1fb2e7448a0c294a8804efc2bcc324b0a366a5d5232b7d1532"
            ]
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "Voice id",
            "examples": [
              "0b3d987c-9d06-401c-a02d-42bfa19eff33"
            ]
          },
          "similarity_threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Threshold",
            "description": "Threshold for voice similarity between provided sample and library voices. Values range from 0 to 2. The smaller the value the more similar voices will be returned.",
            "examples": [0.5]
          },
          "top_k": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top K",
            "description": "Number of most similar voices to return. If similarity_threshold is provided, less than this number of voices may be returned. Values range from 1 to 100.",
            "examples": [10]
          }
        },
        "type": "object",
        "title": "Body_Get_similar_library_voices_for_provided_voice_id_v1_similar_voices_by_id_post"
      },
      "Body_Get_similar_library_voices_v1_similar_voices_post": {
        "properties": {
          "audio_file": {
            "type": "string",
            "format": "binary",
            "title": "Audio File"
          },
          "similarity_threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Threshold",
            "description": "Threshold for voice similarity between provided sample and library voices. Values range from 0 to 2. The smaller the value the more similar voices will be returned.",
            "examples": [0.5]
          },
          "top_k": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top K",
            "description": "Number of most similar voices to return. If similarity_threshold is provided, less than this number of voices may be returned. Values range from 1 to 100.",
            "examples": [10]
          }
        },
        "type": "object",
        "title": "Body_Get_similar_library_voices_v1_similar_voices_post"
      },
      "Body_Handle_an_outbound_call_via_SIP_trunk_v1_convai_sip_trunk_outbound_call_post": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_phone_number_id": {
            "type": "string",
            "title": "Agent Phone Number Id"
          },
          "to_number": {
            "type": "string",
            "title": "To Number"
          },
          "conversation_initiation_client_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataRequest-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "agent_phone_number_id",
          "to_number"
        ],
        "title": "Body_Handle_an_outbound_call_via_SIP_trunk_v1_convai_sip_trunk_outbound_call_post"
      },
      "Body_Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_phone_number_id": {
            "type": "string",
            "title": "Agent Phone Number Id"
          },
          "to_number": {
            "type": "string",
            "title": "To Number"
          },
          "conversation_initiation_client_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataRequest-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "agent_phone_number_id",
          "to_number"
        ],
        "title": "Body_Handle_an_outbound_call_via_Twilio_v1_convai_twilio_outbound_call_post"
      },
      "Body_Handle_the_Vercel_callback_code_v1_vercel_callback_post": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code",
            "description": "The short lived access code from Vercel."
          },
          "configuration_id": {
            "type": "string",
            "title": "Configuration ID",
            "description": "The configuration ID from Vercel."
          }
        },
        "type": "object",
        "required": [
          "code",
          "configuration_id"
        ],
        "title": "Body_Handle_the_Vercel_callback_code_v1_vercel_callback_post"
      },
      "Body_Import_Audio_v1_dubbing__dubbing_id__import_audio_post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "Audio file to import to project"
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "Body_Import_Audio_v1_dubbing__dubbing_id__import_audio_post"
      },
      "Body_Import_Audio_v1_dubbing__dubbing_id__import_audio_speaker_stem_post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "Audio file to import to project"
          },
          "num_speakers": {
            "type": "integer",
            "title": "Num Speakers",
            "description": "Number of speakers to use for the dubbing. Set to 0 to automatically detect the number of speakers",
            "default": 0
          },
          "disable_voice_cloning": {
            "type": "boolean",
            "title": "Disable Voice Cloning",
            "description": "[BETA] Instead of using a voice clone in dubbing, use a similar voice from the ElevenLabs Voice Library.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "Body_Import_Audio_v1_dubbing__dubbing_id__import_audio_speaker_stem_post"
      },
      "Body_Import_Music_Item_to_Studio_v1_studio_projects__project_id__chapters__chapter_id__music_imports_post": {
        "properties": {
          "block_id": {
            "type": "string",
            "title": "Block Id",
            "description": "The ID of the block where the sound effect will be inserted."
          },
          "node_id": {
            "type": "string",
            "title": "Node Id",
            "description": "The ID of the node where the sound effect will be inserted."
          },
          "history_item_id": {
            "type": "string",
            "title": "History Item Id",
            "description": "The ID of the history item."
          }
        },
        "type": "object",
        "required": [
          "block_id",
          "node_id",
          "history_item_id"
        ],
        "title": "Body_Import_Music_Item_to_Studio_v1_studio_projects__project_id__chapters__chapter_id__music_imports_post"
      },
      "Body_Import_Sound_generation_History_Item_to_Studio_v1_studio_projects__project_id__chapters__chapter_id__sfx_imports_post": {
        "properties": {
          "block_id": {
            "type": "string",
            "title": "Block Id",
            "description": "The ID of the block where the sound effect will be inserted."
          },
          "node_id": {
            "type": "string",
            "title": "Node Id",
            "description": "The ID of the node where the sound effect will be inserted."
          },
          "history_item_id": {
            "type": "string",
            "title": "History Item Id",
            "description": "The ID of the history item."
          }
        },
        "type": "object",
        "required": [
          "block_id",
          "node_id",
          "history_item_id"
        ],
        "title": "Body_Import_Sound_generation_History_Item_to_Studio_v1_studio_projects__project_id__chapters__chapter_id__sfx_imports_post"
      },
      "Body_Import_Speech_History_Item_to_Studio_v1_studio_projects__project_id__chapters__chapter_id__imports_post": {
        "properties": {
          "history_item_id": {
            "type": "string",
            "title": "History Item Id",
            "description": "The ID of the history item."
          }
        },
        "type": "object",
        "required": [
          "history_item_id"
        ],
        "title": "Body_Import_Speech_History_Item_to_Studio_v1_studio_projects__project_id__chapters__chapter_id__imports_post"
      },
      "Body_Insert_hcaptcha_risk_score_to_BigQuery_c185a1ff66f4a1feaeb19931d4be4175_signup_hcaptcha_risk_score_post": {
        "properties": {
          "user_email": {
            "type": "string",
            "title": "User Email"
          },
          "hcaptcha_risk_score": {
            "type": "number",
            "title": "Hcaptcha Risk Score"
          }
        },
        "type": "object",
        "required": [
          "user_email",
          "hcaptcha_risk_score"
        ],
        "title": "Body_Insert_hcaptcha_risk_score_to_BigQuery_c185a1ff66f4a1feaeb19931d4be4175_signup_hcaptcha_risk_score_post"
      },
      "Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post": {
        "properties": {
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Emails",
            "description": "The email of the customer",
            "examples": [
              "john.doe@testmail.com"
            ]
          },
          "group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Ids",
            "description": "The group ids of the user",
            "examples": [
              [
                "group_id_1",
                "group_id_2"
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "emails"
        ],
        "title": "Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post"
      },
      "Body_Invite_user_v1_workspace_invites_add_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the customer",
            "examples": [
              "john.doe@testmail.com"
            ]
          },
          "group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Ids",
            "description": "The group ids of the user",
            "examples": [
              [
                "group_id_1",
                "group_id_2"
              ]
            ]
          },
          "workspace_permission": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "external",
                  "admin",
                  "workspace_admin",
                  "workspace_member",
                  "support_l1",
                  "support_l2",
                  "moderator",
                  "sales",
                  "voice_mixer",
                  "voice_admin",
                  "convai_admin",
                  "enterprise_viewer",
                  "quality_check_admin",
                  "workspace_migration_admin",
                  "human_reviewer",
                  "productions_admin",
                  "support",
                  "internal"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Permission",
            "description": "The workspace permission of the user",
            "examples": [
              "workspace_member"
            ]
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Invite_user_v1_workspace_invites_add_post"
      },
      "Body_Manual_verification_request_v1_voices__voice_id__manual_verification_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "Verification documents"
          },
          "extra_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Text",
            "description": "Extra text to be used in the manual verification process."
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_Manual_verification_request_v1_voices__voice_id__manual_verification_post"
      },
      "Body_Onboarding_survey_complete_v1_user_onboarding_survey_complete_post": {
        "properties": {
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "The first name of the user for marketing purposes"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role",
            "description": "The role of the user"
          },
          "subrole": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subrole",
            "description": "The subrole of the user"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "The country timezone of the user"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "The acquisition source of the user"
          },
          "birthday_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Birthday Unix",
            "description": "The birthday of the user in unix timestamp"
          },
          "reader_birthday_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reader Birthday Unix",
            "description": "The birthday of the user in unix timestamp for reader app"
          },
          "reader_answers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reader Answers"
          },
          "usecases": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usecases",
            "description": "The use cases the user is interested in",
            "examples": [
              [
                "text-to-speech",
                "audiobooks",
                "ai-agent",
                "podcast"
              ]
            ]
          },
          "theme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Theme",
            "description": "Theme initially selected by user"
          },
          "app_source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Source",
            "description": "The app the user signed up from (core_app, reader_app, convai_app etc.)"
          }
        },
        "type": "object",
        "title": "Body_Onboarding_survey_complete_v1_user_onboarding_survey_complete_post"
      },
      "Body_Parse_a_Voiceover_script_v1_voiceover_studio_parse_script_post": {
        "properties": {
          "script_file": {
            "type": "string",
            "format": "binary",
            "title": "Script File",
            "description": "The script file"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the Voiceover Studio project."
          }
        },
        "type": "object",
        "title": "Body_Parse_a_Voiceover_script_v1_voiceover_studio_parse_script_post"
      },
      "Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch": {
        "properties": {
          "conversation_config": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Config",
            "description": "Conversation configuration for an agent"
          },
          "platform_settings": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Platform Settings",
            "description": "Platform settings for the agent are all settings that aren't related to the conversation orchestration and content."
          },
          "workflow": {
            "title": "Workflow",
            "description": "Workflow for the agent. This is used to define the flow of the conversation and how the agent interacts with tools.",
            "x-fern-ignore": "True"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "A name to make the agent easier to find",
            "examples": [
              "My agent"
            ],
            "optional": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Tags to help classify and filter the agent",
            "examples": [
              [
                "Customer Support",
                "Technical Help",
                "Eleven"
              ]
            ],
            "optional": true
          }
        },
        "type": "object",
        "title": "Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch"
      },
      "Body_Patches_an_AudioNative_settings_v1_audio_native_settings_patch": {
        "properties": {
          "global_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InputAudioNativePatchSettingsModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "AudioNative trigger patch settings payload."
          },
          "enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled",
            "description": "Indicates whether AudioNative is enabled."
          }
        },
        "type": "object",
        "title": "Body_Patches_an_AudioNative_settings_v1_audio_native_settings_patch"
      },
      "Body_Patches_an_AudioNative_trigger_settings_v1_audio_native_settings_triggers__trigger_id__patch": {
        "properties": {
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InputAudioNativePatchSettingsModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "AudioNative trigger patch settings payload."
          },
          "use_default_settings": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Default Settings",
            "description": "Whether to use default settings or not."
          }
        },
        "type": "object",
        "title": "Body_Patches_an_AudioNative_trigger_settings_v1_audio_native_settings_triggers__trigger_id__patch"
      },
      "Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post": {
        "properties": {
          "avatar_file": {
            "type": "string",
            "format": "binary",
            "title": "Avatar File",
            "description": "An image file to be used as the agent's avatar."
          }
        },
        "type": "object",
        "required": [
          "avatar_file"
        ],
        "title": "Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post"
      },
      "Body_Process_Zendesk_webhook_and_respond_to_ticket_v1_convai_agents__agent_id__zendesk_webhook_post": {
        "properties": {
          "ticket_id": {
            "type": "integer",
            "title": "Ticket Id",
            "description": "The id of zendesk ticket",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ]
          }
        },
        "type": "object",
        "required": [
          "ticket_id"
        ],
        "title": "Body_Process_Zendesk_webhook_and_respond_to_ticket_v1_convai_agents__agent_id__zendesk_webhook_post"
      },
      "Body_Pronunciation_text_to_speech_v1_pronunciation_dictionaries__pronunciation_dictionary_id__text_to_speech_post": {
        "properties": {
          "rule": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PronunciationDictionaryAliasRuleRequestModel"
              },
              {
                "$ref": "#/components/schemas/PronunciationDictionaryPhonemeRuleRequestModel"
              }
            ],
            "title": "Rule",
            "description": "List of pronunciation rules. Rule can be either:\n    an alias rule: {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b', }\n    or a phoneme rule: {'string_to_replace': 'a', 'type': 'phoneme', 'phoneme': 'b', 'alphabet': 'ipa' }",
            "examples": [
              "\n    [\n        {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b' },\n        {'string_to_replace': 'c', 'type': 'phoneme', 'phoneme': 'd', 'alphabet': 'ipa' }\n    ]"
            ]
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ]
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_turbo_v2"
          }
        },
        "type": "object",
        "required": [
          "rule",
          "voice_id"
        ],
        "title": "Body_Pronunciation_text_to_speech_v1_pronunciation_dictionaries__pronunciation_dictionary_id__text_to_speech_post"
      },
      "Body_Record_device_fingerprint_v1_user_record_device_fingerprint_post": {
        "properties": {
          "fingerprint": {
            "$ref": "#/components/schemas/DeviceFingerprintResponseModel",
            "description": "The device fingerprint of the user with metadata"
          },
          "location": {
            "$ref": "#/components/schemas/LocationResponseModel",
            "description": "The location of the user"
          }
        },
        "type": "object",
        "required": [
          "fingerprint",
          "location"
        ],
        "title": "Body_Record_device_fingerprint_v1_user_record_device_fingerprint_post"
      },
      "Body_Register_a_new_captions_task_v1_productions_workspace__workspace_id__tasks_register_captions_post": {
        "properties": {
          "task_name": {
            "type": "string",
            "title": "Task Name",
            "description": "A name for the task, used for identification purposes only."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "The file to transcribe"
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "An ISO-639-1 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. If set to null we will predict the language for you. Defaults to null."
          },
          "instructions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtitlesCommonInstructions-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "parent_collection_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Collection Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "subtitles": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitles"
          },
          "subtitles_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtitlesFormat"
              },
              {
                "type": "null"
              }
            ]
          },
          "extra_tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Tags"
          }
        },
        "type": "object",
        "required": [
          "task_name",
          "file",
          "language"
        ],
        "title": "Body_Register_a_new_captions_task_v1_productions_workspace__workspace_id__tasks_register_captions_post"
      },
      "Body_Register_a_new_dubbing_task_v1_productions_workspace__workspace_id__tasks_register_dub_post": {
        "properties": {
          "task_name": {
            "type": "string",
            "title": "Task Name",
            "description": "A name for the task, used for identification purposes only."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "The file to transcribe"
          },
          "src_language": {
            "type": "string",
            "title": "Src Language",
            "description": "An ISO-639-1 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. If set to null we will predict the language for you. Defaults to null."
          },
          "dst_language": {
            "type": "string",
            "title": "Dst Language",
            "description": "An ISO-639-1 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. If set to null we will predict the language for you. Defaults to null."
          },
          "num_speakers": {
            "type": "integer",
            "title": "Num Speakers"
          },
          "parent_collection_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Collection Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "extra_tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Tags"
          }
        },
        "type": "object",
        "required": [
          "task_name",
          "file",
          "src_language",
          "dst_language",
          "num_speakers"
        ],
        "title": "Body_Register_a_new_dubbing_task_v1_productions_workspace__workspace_id__tasks_register_dub_post"
      },
      "Body_Register_a_new_subtitles_task_v1_productions_workspace__workspace_id__tasks_register_subtitles_post": {
        "properties": {
          "task_name": {
            "type": "string",
            "title": "Task Name",
            "description": "A name for the task, used for identification purposes only."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "The file to transcribe"
          },
          "src_language": {
            "type": "string",
            "title": "Src Language",
            "description": "An ISO-639-1 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. If set to null we will predict the language for you. Defaults to null."
          },
          "dst_language": {
            "type": "string",
            "title": "Dst Language",
            "description": "An ISO-639-1 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. If set to null we will predict the language for you. Defaults to null."
          },
          "instructions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtitlesCommonInstructions-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "parent_collection_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Collection Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "subtitles": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitles"
          },
          "subtitles_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubtitlesFormat"
              },
              {
                "type": "null"
              }
            ]
          },
          "extra_tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Tags"
          }
        },
        "type": "object",
        "required": [
          "task_name",
          "file",
          "src_language",
          "dst_language"
        ],
        "title": "Body_Register_a_new_subtitles_task_v1_productions_workspace__workspace_id__tasks_register_subtitles_post"
      },
      "Body_Register_a_production_task_v1_productions_workspace__workspace_id__tasks_register_post": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/TaskKind"
          },
          "task_name": {
            "type": "string",
            "title": "Task Name",
            "description": "A name for the task, used for identification purposes only."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "The file to transcribe"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The ID of the model to use for transcription, currently only 'scribe_v1' and 'scribe_v1_experimental' are available."
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "An ISO-639-1 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. If set to null we will predict the language for you. Defaults to null."
          },
          "tag_audio_events": {
            "type": "boolean",
            "title": "Tag Audio Events",
            "description": "Whether to tag audio events like (laughter), (footsteps) etc ... in the transcription.",
            "default": true
          },
          "num_speakers": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 32,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Speakers",
            "description": "The maximum amount of speakers talking in the uploaded file. Can help with predicting who speaks when. The maximum amount of speakers that can be predicted is 32. Defaults to null, in this case the amount of speakers is set to the maximum value the model supports."
          },
          "parent_collection_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Collection Id"
          },
          "labeling_questionnaire_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labeling Questionnaire Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 10,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "extra_tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Tags"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "task_name",
          "file",
          "model_id"
        ],
        "title": "Body_Register_a_production_task_v1_productions_workspace__workspace_id__tasks_register_post"
      },
      "Body_Remix_a_song_v1_music_internal_remix_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_Remix_a_song_v1_music_internal_remix_post"
      },
      "Body_Remove_env_token_to_Vercel_v1_vercel_remove_env_token_post": {
        "properties": {
          "projects": {
            "items": {
              "$ref": "#/components/schemas/VercelProjectType"
            },
            "type": "array",
            "title": "Projects to remove env token from",
            "description": "The projects to remove the env token from."
          }
        },
        "type": "object",
        "required": [
          "projects"
        ],
        "title": "Body_Remove_env_token_to_Vercel_v1_vercel_remove_env_token_post"
      },
      "Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post": {
        "properties": {
          "rule_strings": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Rule Strings",
            "description": "List of strings to remove from the pronunciation dictionary.",
            "examples": [
              "['a', 'b']"
            ]
          }
        },
        "type": "object",
        "required": [
          "rule_strings"
        ],
        "title": "Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post"
      },
      "Body_Render_a_video_for_a_dub_v1_dubbing__dubbing_id__render_post": {
        "properties": {
          "data": {
            "type": "object",
            "title": "Data",
            "description": "Render Data"
          },
          "render_type": {
            "$ref": "#/components/schemas/RenderType",
            "description": "The type of the render. One of ['mp4', 'aac', 'mp3', 'wav', 'aaf', 'tracks_zip', 'clips_zip']"
          }
        },
        "type": "object",
        "required": [
          "data",
          "render_type"
        ],
        "title": "Body_Render_a_video_for_a_dub_v1_dubbing__dubbing_id__render_post"
      },
      "Body_Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post": {
        "properties": {
          "render_type": {
            "$ref": "#/components/schemas/RenderType",
            "description": "The type of the render. One of ['mp4', 'aac', 'mp3', 'wav', 'aaf', 'tracks_zip', 'clips_zip']"
          }
        },
        "type": "object",
        "required": [
          "render_type"
        ],
        "title": "Body_Render_audio_or_video_for_the_given_language_v1_dubbing_resource__dubbing_id__render__language__post"
      },
      "Body_Request_manual_verification_v1_voices_pvc__voice_id__verification_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "Verification documents"
          },
          "extra_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Text",
            "description": "Extra text to be used in the manual verification process."
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_Request_manual_verification_v1_voices_pvc__voice_id__verification_post"
      },
      "Body_Run_PVC_training_v1_voices_pvc__voice_id__train_post": {
        "properties": {
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The model ID to use for the conversion.",
            "examples": [
              "eleven_turbo_v2"
            ]
          }
        },
        "type": "object",
        "title": "Body_Run_PVC_training_v1_voices_pvc__voice_id__train_post"
      },
      "Body_Runs_PVC_training_for_the_given_voice_v1_voices__voice_id__run_pvc_training_post": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The model ID to use for the conversion.",
            "examples": [
              "eleven_turbo_v2"
            ]
          }
        },
        "type": "object",
        "required": [
          "model_id"
        ],
        "title": "Body_Runs_PVC_training_for_the_given_voice_v1_voices__voice_id__run_pvc_training_post"
      },
      "Body_Save_sound_generation_history_item_v1_sound_generation_history__sound_generation_history_item_id__save_post": {
        "properties": {
          "save": {
            "type": "boolean",
            "title": "Save",
            "description": "Whether to save the sound generation history item.",
            "default": false
          }
        },
        "type": "object",
        "title": "Body_Save_sound_generation_history_item_v1_sound_generation_history__sound_generation_history_item_id__save_post"
      },
      "Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post": {
        "properties": {
          "feedback": {
            "$ref": "#/components/schemas/UserFeedbackScore",
            "description": "Either 'like' or 'dislike' to indicate the feedback for the conversation.",
            "examples": [
              "like"
            ]
          }
        },
        "type": "object",
        "required": [
          "feedback"
        ],
        "title": "Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post"
      },
      "Body_Send_conversion_event_v1_user_conversion_post": {
        "properties": {
          "event_name": {
            "type": "string",
            "enum": [
              "signed_up",
              "subscription_created"
            ],
            "title": "Event Name",
            "description": "The name of the event",
            "examples": [
              "signed_up"
            ]
          },
          "event_id": {
            "type": "string",
            "title": "Event Id",
            "description": "The event id"
          },
          "fbp": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fbp",
            "description": "The Facebook pixel id"
          },
          "fbc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fbc",
            "description": "The Facebook pixel click id"
          },
          "source_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Url",
            "description": "The source url"
          }
        },
        "type": "object",
        "required": [
          "event_name",
          "event_id"
        ],
        "title": "Body_Send_conversion_event_v1_user_conversion_post"
      },
      "Body_Send_email_to_urge_password_reset__url_prefix_secret__urge_reset_password_post": {
        "properties": {
          "auth_account_id": {
            "type": "string",
            "title": "Auth Account Id",
            "description": "The auth account id of the user",
            "examples": [
              "1234567890"
            ]
          }
        },
        "type": "object",
        "required": [
          "auth_account_id"
        ],
        "title": "Body_Send_email_to_urge_password_reset__url_prefix_secret__urge_reset_password_post"
      },
      "Body_Send_password_reset_email_v1_user_send_password_reset_email_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the customer",
            "examples": [
              "john.doe@testmail.com"
            ]
          },
          "continue_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Continue Url",
            "description": "The URL to continue to after the email action is completed"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Send_password_reset_email_v1_user_send_password_reset_email_post"
      },
      "Body_Send_verification_email_v1_user_send_verification_email_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the customer",
            "examples": [
              "john.doe@testmail.com"
            ]
          },
          "continue_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Continue Url",
            "description": "The URL to continue to after the email action is completed"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Send_verification_email_v1_user_send_verification_email_post"
      },
      "Body_Send_verification_for_email_change_v1_user_send_email_change_verification_post": {
        "properties": {
          "new_email": {
            "type": "string",
            "title": "New Email",
            "description": "The email of the customer",
            "examples": [
              "john.doe@testmail.com"
            ]
          },
          "continue_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Continue Url",
            "description": "The URL to continue to if the user needs to verify a sensitive action"
          }
        },
        "type": "object",
        "required": [
          "new_email"
        ],
        "title": "Body_Send_verification_for_email_change_v1_user_send_email_change_verification_post"
      },
      "Body_Set_rules_on_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__set_rules_post": {
        "properties": {
          "rules": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryAliasRuleRequestModel"
                },
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryPhonemeRuleRequestModel"
                }
              ]
            },
            "type": "array",
            "title": "Rules",
            "description": "List of pronunciation rules. Rule can be either:\n    an alias rule: {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b', }\n    or a phoneme rule: {'string_to_replace': 'a', 'type': 'phoneme', 'phoneme': 'b', 'alphabet': 'ipa' }",
            "examples": [
              "\n    [\n        {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b' },\n        {'string_to_replace': 'c', 'type': 'phoneme', 'phoneme': 'd', 'alphabet': 'ipa' }\n    ]"
            ]
          }
        },
        "type": "object",
        "required": [
          "rules"
        ],
        "title": "Body_Set_rules_on_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__set_rules_post"
      },
      "Body_Share_history_item__v1_sound_generation_history__sound_effect_history_item_id__share_post": {
        "properties": {
          "share": {
            "type": "boolean",
            "title": "Share",
            "description": "Whether to share sound effect into sound effects library.",
            "default": false
          }
        },
        "type": "object",
        "title": "Body_Share_history_item__v1_sound_generation_history__sound_effect_history_item_id__share_post"
      },
      "Body_Share_voice_v1_voices__voice_id__share_post": {
        "properties": {
          "enable": {
            "type": "boolean",
            "title": "Enable",
            "description": "Whether to enable/disable sharing of the given voice.",
            "examples": [true]
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Emails",
            "description": "List of emails that are allowed to add the given voice.",
            "examples": [
              [
                "example@example.com"
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "enable",
          "emails"
        ],
        "title": "Body_Share_voice_v1_voices__voice_id__share_post"
      },
      "Body_Share_workspace_resource_v1_workspace_resources__resource_id__share_post": {
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Role",
            "description": "Role to update the target principal with."
          },
          "resource_type": {
            "$ref": "#/components/schemas/WorkspaceResourceType",
            "description": "Resource type of the target resource."
          },
          "user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email",
            "description": "The email of the user or service account."
          },
          "group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id",
            "description": "The ID of the target group. To target the permissions principals have by default on this resource, use the value 'default'."
          },
          "workspace_api_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Api Key Id",
            "description": "The ID of the target workspace API key. This isn't the same as the key itself that would you pass in the header for authentication. Workspace admins can find this in the workspace settings UI."
          }
        },
        "type": "object",
        "required": [
          "role",
          "resource_type"
        ],
        "title": "Body_Share_workspace_resource_v1_workspace_resources__resource_id__share_post"
      },
      "Body_Simulates_a_conversation__Stream__v1_convai_agents__agent_id__simulate_conversation_stream_post": {
        "properties": {
          "simulation_specification": {
            "$ref": "#/components/schemas/ConversationSimulationSpecification",
            "description": "A specification detailing how the conversation should be simulated"
          },
          "extra_evaluation_criteria": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PromptEvaluationCriteria"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Evaluation Criteria",
            "description": "A list of evaluation criteria to test"
          },
          "new_turns_limit": {
            "type": "integer",
            "title": "New Turns Limit",
            "description": "Maximum number of new turns to generate in the conversation simulation",
            "default": 10000
          }
        },
        "type": "object",
        "required": [
          "simulation_specification"
        ],
        "title": "Body_Simulates_a_conversation__Stream__v1_convai_agents__agent_id__simulate_conversation_stream_post"
      },
      "Body_Simulates_a_conversation_v1_convai_agents__agent_id__simulate_conversation_post": {
        "properties": {
          "simulation_specification": {
            "$ref": "#/components/schemas/ConversationSimulationSpecification",
            "description": "A specification detailing how the conversation should be simulated"
          },
          "extra_evaluation_criteria": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PromptEvaluationCriteria"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Evaluation Criteria",
            "description": "A list of evaluation criteria to test"
          },
          "new_turns_limit": {
            "type": "integer",
            "title": "New Turns Limit",
            "description": "Maximum number of new turns to generate in the conversation simulation",
            "default": 10000
          }
        },
        "type": "object",
        "required": [
          "simulation_specification"
        ],
        "title": "Body_Simulates_a_conversation_v1_convai_agents__agent_id__simulate_conversation_post"
      },
      "Body_Sound_Generation__website_users_only__sound_generation_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into a sound effect.",
            "examples": [
              "A large, ancient wooden door slowly opening in an eerie, abandoned castle.."
            ]
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "The duration of the sound which will be generated in seconds. Must be at least 0.5 and at most 22. If set to None we will guess the optimal duration using the prompt. Defaults to None."
          },
          "prompt_influence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Influence",
            "description": "A higher prompt influence makes your generation follow the prompt more closely while also making generations less variable. Must be a value between 0 and 1. Defaults to 0.3.",
            "default": 0.3
          },
          "loop": {
            "type": "boolean",
            "title": "Loop",
            "description": "Whether to create a sound effect that loops smoothly.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Sound_Generation__website_users_only__sound_generation_post"
      },
      "Body_Sound_Generation_v1_sound_generation_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into a sound effect.",
            "examples": [
              "A large, ancient wooden door slowly opening in an eerie, abandoned castle.."
            ]
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "The duration of the sound which will be generated in seconds. Must be at least 0.5 and at most 22. If set to None we will guess the optimal duration using the prompt. Defaults to None."
          },
          "prompt_influence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Influence",
            "description": "A higher prompt influence makes your generation follow the prompt more closely while also making generations less variable. Must be a value between 0 and 1. Defaults to 0.3.",
            "default": 0.3
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Sound_Generation_v1_sound_generation_post"
      },
      "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file which holds the content and emotion that will control the generated speech."
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
            "default": "eleven_english_sts_v2"
          },
          "voice_settings": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Settings",
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string."
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [12345]
          },
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set, will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
            "default": false,
            "examples": [true]
          },
          "file_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pcm_s16le_16",
                  "other"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "File Format",
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "examples": [
              "pcm_s16le_16",
              "other"
            ]
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post"
      },
      "Body_Speech_to_Speech__Full__v2_projects__project_id__chapters__chapter_id__blocks__block_id__speech_to_speech_post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file which holds the content and emotion that will control the generated speech."
          },
          "stability": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Stability",
            "description": "Stability",
            "default": 0.5
          },
          "style": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Style",
            "description": "Style",
            "default": 0
          },
          "similarity_boost": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Boost",
            "description": "Similarity boost",
            "default": 0.75
          },
          "use_speaker_boost": {
            "type": "boolean",
            "title": "Use Speaker Boost",
            "description": "Speaker boost",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "Body_Speech_to_Speech__Full__v2_projects__project_id__chapters__chapter_id__blocks__block_id__speech_to_speech_post"
      },
      "Body_Speech_to_Speech__Streaming__v2_projects__project_id__chapters__chapter_id__blocks__block_id__speech_to_speech_stream_post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file which holds the content and emotion that will control the generated speech."
          },
          "stability": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Stability",
            "description": "Stability",
            "default": 0.5
          },
          "style": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Style",
            "description": "Style",
            "default": 0
          },
          "similarity_boost": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Boost",
            "description": "Similarity boost",
            "default": 0.75
          },
          "use_speaker_boost": {
            "type": "boolean",
            "title": "Use Speaker Boost",
            "description": "Speaker boost",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "Body_Speech_to_Speech__Streaming__v2_projects__project_id__chapters__chapter_id__blocks__block_id__speech_to_speech_stream_post"
      },
      "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post": {
        "properties": {
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file which holds the content and emotion that will control the generated speech."
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
            "default": "eleven_english_sts_v2"
          },
          "voice_settings": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Settings",
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string."
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [12345]
          },
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set, will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
            "default": false,
            "examples": [true]
          },
          "file_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "pcm_s16le_16",
                  "other"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "File Format",
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "examples": [
              "pcm_s16le_16",
              "other"
            ]
          }
        },
        "type": "object",
        "required": [
          "audio"
        ],
        "title": "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post"
      },
      "Body_Speech_to_Text_Internal_using_a_GCP_token_for_authentication_v1_speech_to_text_internal_gcptoken_post": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The ID of the model to use for transcription, currently only 'scribe_v1' and 'scribe_v1_experimental' are available."
          },
          "audio_pcm": {
            "type": "string",
            "format": "binary",
            "title": "Audio Pcm",
            "description": "The file to transcribe. All major audio and video formats are supported. Exactly one of the file or cloud_storage_url parameters must be provided. The file size must be less than 1GB."
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "An ISO-639-1 or ISO-639-3 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. Defaults to null, in this case the language is predicted automatically."
          },
          "tag_audio_events": {
            "type": "boolean",
            "title": "Tag Audio Events",
            "description": "Whether to tag audio events like (laughter), (footsteps), etc. in the transcription.",
            "default": true
          },
          "num_speakers": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 32,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Speakers",
            "description": "The maximum amount of speakers talking in the uploaded file. Can help with predicting who speaks when. The maximum amount of speakers that can be predicted is 32. Defaults to null, in this case the amount of speakers is set to the maximum value the model supports."
          },
          "timestamps_granularity": {
            "type": "string",
            "enum": [
              "none",
              "word",
              "character"
            ],
            "title": "Timestamps Granularity",
            "description": "The granularity of the timestamps in the transcription. 'word' provides word-level timestamps and 'character' provides character-level timestamps per word.",
            "default": "word"
          },
          "diarize": {
            "type": "boolean",
            "title": "Diarize",
            "description": "Whether to annotate which speaker is currently talking in the uploaded file.",
            "default": true
          },
          "temperature": {
            "type": "number",
            "maximum": 2,
            "minimum": 0,
            "title": "Temperature",
            "description": "Controls the randomness of the transcription output. Accepts values between 0.0 and 2.0, where higher values result in more diverse and less deterministic results. If omitted, we will use a temperature based on the model you selected which is usually 0.",
            "default": 0
          },
          "ideal_duration_secs_per_transcription_request": {
            "type": "integer",
            "title": "Ideal Duration Secs Per Transcription Request",
            "default": 360
          },
          "max_duration_secs_per_transcription_request": {
            "type": "integer",
            "title": "Max Duration Secs Per Transcription Request",
            "default": 480
          },
          "use_fast_aligner": {
            "type": "boolean",
            "title": "Use Fast Aligner",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "audio_pcm"
        ],
        "title": "Body_Speech_to_Text_Internal_using_a_GCP_token_for_authentication_v1_speech_to_text_internal_gcptoken_post"
      },
      "Body_Speech_to_Text_Internal_v1_speech_to_text_internal_post": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The ID of the model to use for transcription, currently only 'scribe_v1' and 'scribe_v1_experimental' are available."
          },
          "file_pcm16_16_khz": {
            "type": "string",
            "format": "binary",
            "title": "File Pcm16 16 Khz",
            "description": "The file to transcribe. All major audio and video formats are supported. Exactly one of the file or cloud_storage_url parameters must be provided. The file size must be less than 1GB."
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "An ISO-639-1 or ISO-639-3 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. Defaults to null, in this case the language is predicted automatically."
          },
          "tag_audio_events": {
            "type": "boolean",
            "title": "Tag Audio Events",
            "description": "Whether to tag audio events like (laughter), (footsteps), etc. in the transcription.",
            "default": true
          },
          "num_speakers": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 32,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Speakers",
            "description": "The maximum amount of speakers talking in the uploaded file. Can help with predicting who speaks when. The maximum amount of speakers that can be predicted is 32. Defaults to null, in this case the amount of speakers is set to the maximum value the model supports."
          },
          "timestamps_granularity": {
            "type": "string",
            "enum": [
              "none",
              "word",
              "character"
            ],
            "title": "Timestamps Granularity",
            "description": "The granularity of the timestamps in the transcription. 'word' provides word-level timestamps and 'character' provides character-level timestamps per word.",
            "default": "word"
          },
          "diarize": {
            "type": "boolean",
            "title": "Diarize",
            "description": "Whether to annotate which speaker is currently talking in the uploaded file.",
            "default": true
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 2,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature",
            "description": "Controls the randomness of the transcription output. Accepts values between 0.0 and 2.0, where higher values result in more diverse and less deterministic results. If omitted, we will use a temperature based on the model you selected which is usually 0.",
            "default": false
          },
          "ideal_duration_secs_per_transcription_request": {
            "type": "integer",
            "title": "Ideal Duration Secs Per Transcription Request",
            "default": 360
          },
          "max_duration_secs_per_transcription_request": {
            "type": "integer",
            "title": "Max Duration Secs Per Transcription Request",
            "default": 480
          },
          "recompute_on_repetition": {
            "type": "boolean",
            "title": "Recompute On Repetition",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "file_pcm16_16_khz"
        ],
        "title": "Body_Speech_to_Text_Internal_v1_speech_to_text_internal_post"
      },
      "Body_Speech_to_Text_Music_v1_speech_to_text_music_post": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The ID of the model to use for music transcription, currently only 'scribe_music_v1' is available."
          },
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File",
            "description": "The file to transcribe. All major audio and video formats are supported. Exactly one of the file or cloud_storage_url parameters must be provided. The file size must be less than 1GB."
          },
          "timestamps_granularity": {
            "type": "string",
            "enum": [
              "none",
              "word",
              "character"
            ],
            "title": "Timestamps Granularity",
            "description": "The granularity of the timestamps in the transcription. 'word' provides word-level timestamps and 'character' provides character-level timestamps per word.",
            "default": "word"
          },
          "file_format": {
            "type": "string",
            "enum": [
              "pcm_s16le_16",
              "other"
            ],
            "title": "File Format",
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "examples": [
              "pcm_s16le_16",
              "other"
            ]
          },
          "cloud_storage_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cloud Storage Url",
            "description": "The valid AWS S3, Cloudflare R2 or Google Cloud Storage URL of the file to transcribe. Exactly one of the file or cloud_storage_url parameters must be provided. The file must be a valid publicly accessible cloud storage URL. The file size must be less than 2GB. URL can be pre-signed.",
            "examples": [
              "https://storage.googleapis.com/my-bucket/folder/audio.mp3",
              "https://my-bucket.s3.us-west-2.amazonaws.com/folder/audio.mp3",
              "https://account123.r2.cloudflarestorage.com/my-bucket/audio.mp3"
            ]
          }
        },
        "type": "object",
        "required": [
          "model_id"
        ],
        "title": "Body_Speech_to_Text_Music_v1_speech_to_text_music_post"
      },
      "Body_Speech_to_Text_v1_speech_to_text_post": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The ID of the model to use for transcription, currently only 'scribe_v1' and 'scribe_v1_experimental' are available."
          },
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File",
            "description": "The file to transcribe. All major audio and video formats are supported. Exactly one of the file or cloud_storage_url parameters must be provided. The file size must be less than 1GB."
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "An ISO-639-1 or ISO-639-3 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. Defaults to null, in this case the language is predicted automatically."
          },
          "tag_audio_events": {
            "type": "boolean",
            "title": "Tag Audio Events",
            "description": "Whether to tag audio events like (laughter), (footsteps), etc. in the transcription.",
            "default": true
          },
          "num_speakers": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 32,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Speakers",
            "description": "The maximum amount of speakers talking in the uploaded file. Can help with predicting who speaks when. The maximum amount of speakers that can be predicted is 32. Defaults to null, in this case the amount of speakers is set to the maximum value the model supports."
          },
          "timestamps_granularity": {
            "type": "string",
            "enum": [
              "none",
              "word",
              "character"
            ],
            "title": "Timestamps Granularity",
            "description": "The granularity of the timestamps in the transcription. 'word' provides word-level timestamps and 'character' provides character-level timestamps per word.",
            "default": "word"
          },
          "diarize": {
            "type": "boolean",
            "title": "Diarize",
            "description": "Whether to annotate which speaker is currently talking in the uploaded file.",
            "default": false
          },
          "diarization_threshold": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 0.4,
                "minimum": 0.1
              },
              {
                "type": "null"
              }
            ],
            "title": "Diarization Threshold",
            "description": "Diarization threshold to apply during speaker diarization. A higher value means there will be a lower chance of one speaker being diarized as two different speakers but also a higher chance of two different speakers being diarized as one speaker (less total speakers predicted). A low value means there will be a higher chance of one speaker being diarized as two different speakers but also a lower chance of two different speakers being diarized as one speaker (more total speakers predicted). Can only be set when diarize=True and num_speakers=None. Defaults to None, in which case we will choose a threshold based on the model_id (0.22 usually)."
          },
          "additional_formats": {
            "$ref": "#/components/schemas/AdditionalFormats",
            "description": "A list of additional formats to export the transcript to.",
            "examples": [
              [
                {
                  "format": "srt",
                  "include_speakers": true,
                  "include_timestamps": true
                },
                {
                  "format": "txt",
                  "include_speakers": false
                }
              ]
            ]
          },
          "file_format": {
            "type": "string",
            "enum": [
              "pcm_s16le_16",
              "other"
            ],
            "title": "File Format",
            "description": "The format of input audio. Options are 'pcm_s16le_16' or 'other' For `pcm_s16le_16`, the input audio must be 16-bit PCM at a 16kHz sample rate, single channel (mono), and little-endian byte order. Latency will be lower than with passing an encoded waveform.",
            "default": "other",
            "examples": [
              "pcm_s16le_16",
              "other"
            ]
          },
          "cloud_storage_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cloud Storage Url",
            "description": "The valid AWS S3, Cloudflare R2 or Google Cloud Storage URL of the file to transcribe. Exactly one of the file or cloud_storage_url parameters must be provided. The file must be a valid publicly accessible cloud storage URL. The file size must be less than 2GB. URL can be pre-signed.",
            "examples": [
              "https://storage.googleapis.com/my-bucket/folder/audio.mp3",
              "https://my-bucket.s3.us-west-2.amazonaws.com/folder/audio.mp3",
              "https://account123.r2.cloudflarestorage.com/my-bucket/audio.mp3"
            ]
          },
          "webhook": {
            "type": "boolean",
            "title": "Webhook",
            "description": "Whether to send the transcription result to configured speech-to-text webhooks.  If set the request will return early without the transcription, which will be delivered later via webhook.",
            "default": false
          },
          "webhook_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Id",
            "description": "Optional specific webhook ID to send the transcription result to. Only valid when webhook is set to true. If not provided, transcription will be sent to all configured speech-to-text webhooks."
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 2,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature",
            "description": "Controls the randomness of the transcription output. Accepts values between 0.0 and 2.0, where higher values result in more diverse and less deterministic results. If omitted, we will use a temperature based on the model you selected which is usually 0."
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be an integer between 0 and 2147483647.",
            "examples": [12345]
          },
          "use_multi_channel": {
            "type": "boolean",
            "title": "Use Multi Channel",
            "description": "Whether the audio file contains multiple channels where each channel contains a single speaker. When enabled, each channel will be transcribed independently and the results will be combined. Each word in the response will include a 'channel_index' field indicating which channel it was spoken on. A maximum of 5 channels is supported.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "model_id"
        ],
        "title": "Body_Speech_to_Text_v1_speech_to_text_post"
      },
      "Body_Starts_conversion_for_the_AudioNative_enabled_project__v1_audio_native__public_user_id___project_id__convert_post": {
        "properties": {
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url",
            "description": "URL to convert.",
            "examples": [
              "https://elevenlabs.io/blog/the_first_ai_that_can_laugh/"
            ]
          }
        },
        "type": "object",
        "title": "Body_Starts_conversion_for_the_AudioNative_enabled_project__v1_audio_native__public_user_id___project_id__convert_post"
      },
      "Body_Stream_Composed_Music_v1_music_compose_stream_post": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2000
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "A simple text prompt to generate a song from. Cannot be used in conjunction with `composition_plan`."
          },
          "music_prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A music prompt. Deprecated. Use `composition_plan` instead."
          },
          "composition_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ],
            "description": "A detailed composition plan to guide music generation. Cannot be used in conjunction with `prompt`."
          },
          "music_length_ms": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 300000,
                "minimum": 10000
              },
              {
                "type": "null"
              }
            ],
            "title": "Music Length Ms",
            "description": "The length of the song to generate in milliseconds. Used only in conjunction with `prompt`. Must be between 10000ms and 300000ms"
          },
          "model": {
            "$ref": "#/components/schemas/MusicModelID",
            "description": "The model to use for the generation.",
            "default": "v1"
          }
        },
        "type": "object",
        "title": "Body_Stream_Composed_Music_v1_music_compose_stream_post"
      },
      "Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post": {
        "properties": {
          "convert_to_mpeg": {
            "type": "boolean",
            "title": "Convert To Mpeg",
            "description": "Whether to convert the audio to mpeg format.",
            "default": false
          }
        },
        "type": "object",
        "title": "Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post"
      },
      "Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post": {
        "properties": {
          "convert_to_mpeg": {
            "type": "boolean",
            "title": "Convert To Mpeg",
            "description": "Whether to convert the audio to mpeg format.",
            "default": false
          }
        },
        "type": "object",
        "title": "Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
      },
      "Body_Studio_Generate_Sound_Effect_for_Block_v1_studio_projects__project_id__chapters__chapter_id__sound_effect_generate_post": {
        "properties": {
          "block_id": {
            "type": "string",
            "title": "Block Id",
            "description": "The ID of the block where the sound effect will be inserted."
          },
          "node_id": {
            "type": "string",
            "title": "Node Id",
            "description": "The ID of the node where the sound effect will be inserted."
          },
          "start_pos": {
            "type": "integer",
            "title": "Start Pos",
            "description": "The starting position of the sound effect in the TTS node."
          },
          "pos_order": {
            "type": "integer",
            "title": "Pos Order",
            "description": "The order of the sound effect at a given position. Needed to determine the order of multiple SFX at the same position."
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into a sound effect.",
            "examples": [
              "A large, ancient wooden door slowly opening in an eerie, abandoned castle.."
            ]
          },
          "duration_in_characters": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration In Characters",
            "description": "The duration of the sound which will be generated in characters. If set to None we will guess the optimal duration using the prompt. Defaults to None."
          },
          "block_sound_effect_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Sound Effect Id",
            "description": "(optional) The ID of the block sound effect to be regenerated. If not provided a new SFX will be created."
          },
          "prompt_influence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Influence",
            "description": "A higher prompt influence makes your generation follow the prompt more closely while also making generations less variable. Must be a value between 0 and 1. Defaults to 0.3.",
            "default": 0.3
          },
          "loop": {
            "type": "boolean",
            "title": "Loop",
            "description": "Whether to create a sound effect that loops smoothly.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "block_id",
          "node_id",
          "start_pos",
          "pos_order",
          "text"
        ],
        "title": "Body_Studio_Generate_Sound_Effect_for_Block_v1_studio_projects__project_id__chapters__chapter_id__sound_effect_generate_post"
      },
      "Body_Submit_a_batch_call_request__v1_convai_batch_calling_submit_post": {
        "properties": {
          "call_name": {
            "type": "string",
            "title": "Call Name"
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_phone_number_id": {
            "type": "string",
            "title": "Agent Phone Number Id"
          },
          "scheduled_time_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scheduled Time Unix"
          },
          "recipients": {
            "items": {
              "$ref": "#/components/schemas/OutboundCallRecipient"
            },
            "type": "array",
            "maxItems": 10000,
            "title": "Recipients"
          }
        },
        "type": "object",
        "required": [
          "call_name",
          "agent_id",
          "agent_phone_number_id",
          "scheduled_time_unix",
          "recipients"
        ],
        "title": "Body_Submit_a_batch_call_request__v1_convai_batch_calling_submit_post"
      },
      "Body_Submit_a_voice_challenge_v1_voice_challenges_submissions_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Audio sample."
          },
          "token": {
            "type": "string",
            "title": "Token",
            "description": "Challenge token."
          }
        },
        "type": "object",
        "required": [
          "file",
          "token"
        ],
        "title": "Body_Submit_a_voice_challenge_v1_voice_challenges_submissions_post"
      },
      "Body_Submit_feedback_on_a_completed_Production_v1_productions__workspace_id__feedback__description_id__deliverable__deliverable_id__post": {
        "properties": {
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "rating": {
            "$ref": "#/components/schemas/ProductionsFeedbackRating"
          }
        },
        "type": "object",
        "required": [
          "comments",
          "rating"
        ],
        "title": "Body_Submit_feedback_on_a_completed_Production_v1_productions__workspace_id__feedback__description_id__deliverable__deliverable_id__post"
      },
      "Body_Submit_user_feedback_v1_feedback_post": {
        "properties": {
          "feedback": {
            "type": "string",
            "title": "Feedback",
            "feedback": "User feedback field"
          }
        },
        "type": "object",
        "required": [
          "feedback"
        ],
        "title": "Body_Submit_user_feedback_v1_feedback_post"
      },
      "Body_Switch_Branch_v1_music_chats__chat_id__switch_branch_patch": {
        "properties": {
          "parent_message_id": {
            "type": "string",
            "title": "Parent Message Id",
            "description": "The ID of the parent message to switch from"
          },
          "selected_message_id": {
            "type": "string",
            "title": "Selected Message Id",
            "description": "The ID of the selected message to switch to"
          }
        },
        "type": "object",
        "required": [
          "parent_message_id",
          "selected_message_id"
        ],
        "title": "Body_Switch_Branch_v1_music_chats__chat_id__switch_branch_patch"
      },
      "Body_Test_evaluation_criteria_v1_convai_test_evaluation_criteria_post": {
        "properties": {
          "conversation_to_evaluate": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel-Input"
            },
            "type": "array",
            "title": "Conversation To Evaluate",
            "description": "A conversation transcript to test"
          },
          "evaluation_criteria": {
            "items": {
              "$ref": "#/components/schemas/PromptEvaluationCriteria"
            },
            "type": "array",
            "title": "Evaluation Criteria",
            "description": "A list of evaluation criteria to test"
          },
          "knowledge_base_string": {
            "type": "string",
            "title": "Knowledge Base String",
            "description": "A static knowledge base string to use for the evaluation",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "conversation_to_evaluate",
          "evaluation_criteria"
        ],
        "title": "Body_Test_evaluation_criteria_v1_convai_test_evaluation_criteria_post"
      },
      "Body_Text_to_dialogue__multi_voice__streaming_v1_text_to_dialogue_stream_post": {
        "properties": {
          "inputs": {
            "items": {
              "$ref": "#/components/schemas/DialogueInput"
            },
            "type": "array",
            "title": "Inputs",
            "description": "A list of dialogue inputs, each containing text and a voice ID which will be converted into speech.",
            "examples": [
              [
                {
                  "text": "Hello, how are you?",
                  "voice_id": "bYTqZQo3Jz7LQtmGTgwi"
                },
                {
                  "text": "I'm doing well, thank you!",
                  "voice_id": "6lCwbsX1yVjD49QmpkTR"
                }
              ]
            ]
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_v3"
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ModelSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Settings controlling the dialogue generation.",
            "examples": [
              {
                "stability": 0.5,
                "use_speaker_boost": true
              }
            ]
          },
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorRequestModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [12345]
          }
        },
        "type": "object",
        "required": [
          "inputs"
        ],
        "title": "Body_Text_to_dialogue__multi_voice__streaming_v1_text_to_dialogue_stream_post"
      },
      "Body_Text_to_dialogue__multi_voice__v1_text_to_dialogue_post": {
        "properties": {
          "inputs": {
            "items": {
              "$ref": "#/components/schemas/DialogueInput"
            },
            "type": "array",
            "title": "Inputs",
            "description": "A list of dialogue inputs, each containing text and a voice ID which will be converted into speech.",
            "examples": [
              [
                {
                  "text": "Hello, how are you?",
                  "voice_id": "bYTqZQo3Jz7LQtmGTgwi"
                },
                {
                  "text": "I'm doing well, thank you!",
                  "voice_id": "6lCwbsX1yVjD49QmpkTR"
                }
              ]
            ]
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_v3"
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ModelSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Settings controlling the dialogue generation.",
            "examples": [
              {
                "stability": 0.5,
                "use_speaker_boost": true
              }
            ]
          },
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorRequestModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [12345]
          }
        },
        "type": "object",
        "required": [
          "inputs"
        ],
        "title": "Body_Text_to_dialogue__multi_voice__v1_text_to_dialogue_post"
      },
      "Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into speech.",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ]
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_multilingual_v2"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided."
          },
          "voice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request."
          },
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorRequestModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [12345]
          },
          "previous_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Text",
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ]
          },
          "next_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Text",
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ]
          },
          "previous_request_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Request Ids",
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ]
          },
          "next_request_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Request Ids",
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ]
          },
          "use_pvc_as_ivc": {
            "type": "boolean",
            "title": "Use Pvc As Ivc",
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "default": false,
            "deprecated": true,
            "examples": [true]
          },
          "apply_text_normalization": {
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "title": "Apply Text Normalization",
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
            "default": "auto",
            "examples": [true]
          },
          "apply_language_text_normalization": {
            "type": "boolean",
            "title": "Apply Language Text Normalization",
            "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
            "default": false,
            "examples": [true]
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post"
      },
      "Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into speech.",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ]
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_multilingual_v2"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided."
          },
          "voice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request."
          },
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorRequestModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [12345]
          },
          "previous_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Text",
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ]
          },
          "next_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Text",
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ]
          },
          "previous_request_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Request Ids",
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ]
          },
          "next_request_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Request Ids",
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ]
          },
          "use_pvc_as_ivc": {
            "type": "boolean",
            "title": "Use Pvc As Ivc",
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "default": false,
            "deprecated": true,
            "examples": [true]
          },
          "apply_text_normalization": {
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "title": "Apply Text Normalization",
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
            "default": "auto",
            "examples": [true]
          },
          "apply_language_text_normalization": {
            "type": "boolean",
            "title": "Apply Language Text Normalization",
            "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
            "default": false,
            "examples": [true]
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post"
      },
      "Body_Text_to_speech_v1_text_to_speech__voice_id__post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into speech.",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ]
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_multilingual_v2"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided."
          },
          "voice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request."
          },
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorRequestModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [12345]
          },
          "previous_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Text",
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ]
          },
          "next_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Text",
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ]
          },
          "previous_request_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Request Ids",
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ]
          },
          "next_request_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Request Ids",
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ]
          },
          "use_pvc_as_ivc": {
            "type": "boolean",
            "title": "Use Pvc As Ivc",
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "default": false,
            "deprecated": true,
            "examples": [true]
          },
          "apply_text_normalization": {
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "title": "Apply Text Normalization",
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
            "default": "auto",
            "examples": [true]
          },
          "apply_language_text_normalization": {
            "type": "boolean",
            "title": "Apply Language Text Normalization",
            "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
            "default": false,
            "examples": [true]
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_v1_text_to_speech__voice_id__post"
      },
      "Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into speech.",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ]
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "default": "eleven_multilingual_v2"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided."
          },
          "voice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request."
          },
          "pronunciation_dictionary_locators": {
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorRequestModel"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "examples": [12345]
          },
          "previous_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Text",
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ]
          },
          "next_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Text",
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ]
          },
          "previous_request_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Previous Request Ids",
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ]
          },
          "next_request_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Next Request Ids",
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ]
          },
          "use_pvc_as_ivc": {
            "type": "boolean",
            "title": "Use Pvc As Ivc",
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "default": false,
            "deprecated": true,
            "examples": [true]
          },
          "apply_text_normalization": {
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "title": "Apply Text Normalization",
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' or 'eleven_flash_v2_5' models.",
            "default": "auto",
            "examples": [true]
          },
          "apply_language_text_normalization": {
            "type": "boolean",
            "title": "Apply Language Text Normalization",
            "description": "This parameter controls language text normalization. This helps with proper pronunciation of text in some supported languages. WARNING: This parameter can heavily increase the latency of the request. Currently only supported for Japanese.",
            "default": false,
            "examples": [true]
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post"
      },
      "Body_Transcribes_audio__v1_dubbing__dubbing_id__transcribe_post": {
        "properties": {
          "clip": {
            "$ref": "#/components/schemas/DubbingSourceClipResponseModel",
            "description": "Audio to transcribe."
          },
          "language": {
            "type": "string",
            "title": "Language",
            "description": "Source language.",
            "default": "auto"
          }
        },
        "type": "object",
        "required": [
          "clip"
        ],
        "title": "Body_Transcribes_audio__v1_dubbing__dubbing_id__transcribe_post"
      },
      "Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post": {
        "properties": {
          "segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Segments",
            "description": "Transcribe this specific list of segments."
          }
        },
        "type": "object",
        "required": [
          "segments"
        ],
        "title": "Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post"
      },
      "Body_Translate_text_v1_convai_util_translate_post": {
        "properties": {
          "source_language": {
            "type": "string",
            "title": "Source Language"
          },
          "target_languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Target Languages"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "source_language",
          "target_languages",
          "text"
        ],
        "title": "Body_Translate_text_v1_convai_util_translate_post"
      },
      "Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post": {
        "properties": {
          "segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Segments",
            "description": "Translate only this list of segments."
          },
          "languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Languages",
            "description": "Translate only these languages for each segment."
          }
        },
        "type": "object",
        "required": [
          "segments",
          "languages"
        ],
        "title": "Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post"
      },
      "Body_Translates_text__v1_dubbing__dubbing_id__translate_post": {
        "properties": {
          "source_language": {
            "type": "string",
            "title": "Source Language",
            "description": "Source language.",
            "default": "auto"
          },
          "target_language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Language",
            "description": "The Target language."
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "description": "Text to dub into the target language."
          }
        },
        "type": "object",
        "title": "Body_Translates_text__v1_dubbing__dubbing_id__translate_post"
      },
      "Body_Trigger_the_batch_calling_scheduler__v1_c185a1ff66f4a1feaeb19931d4be4175_convai_batch_calling_scheduler_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_Trigger_the_batch_calling_scheduler__v1_c185a1ff66f4a1feaeb19931d4be4175_convai_batch_calling_scheduler_post"
      },
      "Body_Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post": {
        "properties": {
          "resource_type": {
            "$ref": "#/components/schemas/WorkspaceResourceType",
            "description": "Resource type of the target resource."
          },
          "user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email",
            "description": "The email of the user or service account."
          },
          "group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id",
            "description": "The ID of the target group. To target the permissions principals have by default on this resource, use the value 'default'."
          },
          "workspace_api_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Api Key Id",
            "description": "The ID of the target workspace API key. This isn't the same as the key itself that would you pass in the header for authentication. Workspace admins can find this in the workspace settings UI."
          }
        },
        "type": "object",
        "required": [
          "resource_type"
        ],
        "title": "Body_Unshare_workspace_resource_v1_workspace_resources__resource_id__unshare_post"
      },
      "Body_Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post": {
        "properties": {
          "remove_background_noise": {
            "type": "boolean",
            "title": "Remove Background Noise",
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "default": false,
            "examples": [true]
          },
          "selected_speaker_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selected Speaker Ids",
            "description": "Speaker IDs to be used for PVC training. Make sure you send all the speaker IDs you want to use for PVC training in one request because the last request will override the previous ones.",
            "examples": [
              "speaker_0"
            ]
          },
          "trim_start_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim Start Time",
            "description": "The start time of the audio to be used for PVC training. Time should be in milliseconds",
            "examples": [0]
          },
          "trim_end_time": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim End Time",
            "description": "The end time of the audio to be used for PVC training. Time should be in milliseconds",
            "examples": [10]
          }
        },
        "type": "object",
        "title": "Body_Update_PVC_voice_sample_v1_voices_pvc__voice_id__samples__sample_id__post"
      },
      "Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post": {
        "properties": {
          "from_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Url",
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.",
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ]
          },
          "from_document": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Document",
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank."
          },
          "from_content_json": {
            "type": "string",
            "title": "From Content Json",
            "description": "\n    An optional content to initialize the Studio project with. If this is set, 'from_url' and 'from_document' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank.\n    \n    Example:\n    [{\"name\": \"Chapter A\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"A\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"B\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h1\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"C\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"D\", \"type\": \"tts_node\"}]}]}, {\"name\": \"Chapter B\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"E\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"F\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h2\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"G\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"H\", \"type\": \"tts_node\"}]}]}]\n    ",
            "examples": [
              "[{\"name\": \"Chapter A\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"A\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"B\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h1\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"C\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"D\", \"type\": \"tts_node\"}]}]}, {\"name\": \"Chapter B\", \"blocks\": [{\"sub_type\": \"p\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"E\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"F\", \"type\": \"tts_node\"}]}, {\"sub_type\": \"h2\", \"nodes\": [{\"voice_id\": \"6lCwbsX1yVjD49QmpkT0\", \"text\": \"G\", \"type\": \"tts_node\"}, {\"voice_id\": \"6lCwbsX1yVjD49QmpkT1\", \"text\": \"H\", \"type\": \"tts_node\"}]}]}]"
            ]
          },
          "auto_convert": {
            "type": "boolean",
            "title": "Auto Convert",
            "description": "Whether to auto convert the Studio project to audio or not.",
            "default": false
          }
        },
        "type": "object",
        "title": "Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post"
      },
      "Body_Update_Studio_project_v1_studio_projects__project_id__post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the Studio project, used for identification only.",
            "examples": [
              "Project 1"
            ]
          },
          "default_title_voice_id": {
            "type": "string",
            "title": "Default Title Voice Id",
            "description": "The voice_id that corresponds to the default voice used for new titles.",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ]
          },
          "default_paragraph_voice_id": {
            "type": "string",
            "title": "Default Paragraph Voice Id",
            "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ]
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "Romeo and Juliet"
            ]
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author",
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "William Shakespeare"
            ]
          },
          "isbn_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn Number",
            "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "examples": [
              "0-306-40615-2"
            ]
          },
          "volume_normalization": {
            "type": "boolean",
            "title": "Volume Normalization",
            "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "default": false,
            "examples": [false]
          }
        },
        "type": "object",
        "required": [
          "name",
          "default_title_voice_id",
          "default_paragraph_voice_id"
        ],
        "title": "Body_Update_Studio_project_v1_studio_projects__project_id__post"
      },
      "Body_Update_a_publisher_profile_v1_direct_publishing_publisher_profiles__publisher_profile_id__post": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the publisher profile",
            "examples": [
              "John Doe"
            ]
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "The bio of the publisher profile",
            "default": "",
            "examples": [
              "I am a writer"
            ]
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth",
            "description": "The date of birth of the publisher profile",
            "examples": [
              "1990-01-01"
            ]
          },
          "origin": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Origin",
            "description": "The origin of the publisher profile",
            "examples": [
              "United States"
            ]
          },
          "website_link": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Link",
            "description": "The website link of the publisher profile",
            "default": "",
            "examples": [
              "https://example.com"
            ]
          },
          "social_links": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000
              },
              {
                "type": "null"
              }
            ],
            "title": "Social Links",
            "description": "The social links of the publisher profile",
            "examples": [
              "[{ \"platform\": \"twitter\", \"link\": \"https://twitter.com/example\" }]"
            ]
          },
          "pen_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Pen Name",
            "description": "The pen name of the publisher profile",
            "examples": [
              "John Doe"
            ]
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "en",
                  "zh",
                  "es",
                  "hi",
                  "pt",
                  "fr",
                  "de",
                  "ja",
                  "ar",
                  "ru",
                  "ko",
                  "id",
                  "it",
                  "nl",
                  "tr",
                  "pl",
                  "sv",
                  "fil",
                  "ms",
                  "ro",
                  "uk",
                  "el",
                  "cs",
                  "da",
                  "fi",
                  "bg",
                  "hr",
                  "sk",
                  "ta",
                  "hu",
                  "no",
                  "vi"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The language of the publisher profile",
            "examples": [
              "en"
            ]
          },
          "image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image",
            "description": "Image to upload. Will be converted to WebP."
          }
        },
        "type": "object",
        "title": "Body_Update_a_publisher_profile_v1_direct_publishing_publisher_profiles__publisher_profile_id__post"
      },
      "Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Either txt or HTML input file containing the article content. HTML should be formatted as follows '&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;Your content&lt;/p&gt;&lt;h5&gt;More of your content&lt;/h5&gt;&lt;p&gt;Some more of your content&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'"
          },
          "auto_convert": {
            "type": "boolean",
            "title": "Auto Convert",
            "description": "Whether to auto convert the project to audio or not.",
            "default": false
          },
          "auto_publish": {
            "type": "boolean",
            "title": "Auto Publish",
            "description": "Whether to auto publish the new project snapshot after it's converted.",
            "default": false
          }
        },
        "type": "object",
        "title": "Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post"
      },
      "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__import_post": {
        "properties": {
          "import_content_str": {
            "type": "string",
            "title": "Import Content Str"
          },
          "file": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "File",
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' and 'from_content' must be null. If neither 'from_url', 'from_document', 'from_content' are provided we will initialize the Studio project as blank."
          },
          "create_multiple_chapters": {
            "type": "boolean",
            "title": "Create Multiple Chapters",
            "description": "Should create multiple chapters",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "import_content_str"
        ],
        "title": "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__import_post"
      },
      "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name of the chapter, used for identification only.",
            "examples": [
              "Chapter 1"
            ]
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChapterContentInputModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The chapter content to use."
          }
        },
        "type": "object",
        "title": "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post"
      },
      "Body_Update_direct_publishing_read_state_v1_direct_publishing_reads__read_id__state_patch": {
        "properties": {
          "publishing_state": {
            "$ref": "#/components/schemas/PublishingState",
            "description": "The desired publishing state.",
            "examples": [
              "draft",
              "pending_automated_review",
              "pending_manual_review",
              "published",
              "published_quarantined",
              "manually_rejected",
              "automatically_rejected",
              "deleted",
              "unlisted",
              "suspended"
            ]
          }
        },
        "type": "object",
        "required": [
          "publishing_state"
        ],
        "title": "Body_Update_direct_publishing_read_state_v1_direct_publishing_reads__read_id__state_patch"
      },
      "Body_Update_direct_publishing_read_v1_direct_publishing_reads__read_id__patch": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "maxLength": 100,
            "minLength": 1,
            "title": "Title",
            "description": "An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download.",
            "examples": [
              "Romeo and Juliet"
            ]
          },
          "image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image",
            "description": "Image to upload. Will be converted to WebP."
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "maxLength": 100,
            "minLength": 1,
            "title": "Author",
            "description": "An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download.",
            "examples": [
              "William Shakespeare"
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "maxLength": 1000,
            "minLength": 200,
            "title": "Description",
            "description": "An optional description of the project.",
            "examples": [
              "A tragic love story between two young lovers."
            ]
          },
          "genres": {
            "items": {
              "type": "string",
              "enum": [
                "Fantasy",
                "Romance",
                "Science Fiction",
                "Mystery and Thriller",
                "Action and Adventure",
                "Dystopia",
                "Business and Economics",
                "Technology",
                "Detective and Crime",
                "Horror",
                "Biography and Memoir",
                "Education and Learning",
                "History",
                "Children's Literature",
                "Fairy Tales and Folklore",
                "Fan Fiction",
                "General Fiction",
                "Health and Wellness",
                "Historical Fiction",
                "Humor",
                "Literary Classics",
                "Philosophy",
                "Poetry",
                "Politics and Government",
                "Psychology",
                "Science and Nature",
                "Self-Help",
                "Spirituality and Religion",
                "Travel",
                "True Crime",
                "Other",
                "Adult Romance"
              ]
            },
            "type": "array",
            "title": "Genres",
            "description": "An optional list of genres associated with the project.",
            "examples": [
              [
                "Romance",
                "Drama"
              ]
            ]
          },
          "fiction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiction",
            "description": "An optional fiction flag of the read.",
            "examples": [true]
          },
          "target_audience": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "children",
                  "young adult",
                  "adult",
                  "all ages"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience",
            "description": "An optional target audience of the project.",
            "examples": [
              "adult"
            ]
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "An optional language of the project. Two-letter language code (ISO 639-1).",
            "examples": [
              "en"
            ]
          },
          "original_publication_date": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^\\d{4}$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Publication Date",
            "description": "An optional original publication date of the project, in the format YYYY-MM-DD or YYYY.",
            "examples": [
              "1597-01-01"
            ]
          },
          "mature_content": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mature Content",
            "description": "An optional mature content of the project.",
            "examples": [false]
          },
          "isbn_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn Number",
            "description": "An optional ISBN number of the project you want to create, this will be added as metadata to the mp3 file on project / chapter download.",
            "examples": [
              "0-306-40615-2"
            ]
          },
          "publisher": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publisher",
            "description": "An optional publisher of the book.",
            "examples": [
              "Penguin Random House"
            ]
          },
          "tos_ack": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tos Ack",
            "description": "Acknowledge the Terms of Service",
            "examples": [true]
          },
          "subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitle",
            "description": "An optional subtitle of the Read.",
            "examples": [
              "A tragedy in five acts"
            ]
          },
          "distribution_territories": {
            "items": {
              "type": "string",
              "const": "worldwide"
            },
            "type": "array",
            "uniqueItems": true,
            "title": "Distribution Territories",
            "description": "An optional list of distribution territories of the Read.",
            "examples": [
              [
                "worldwide"
              ]
            ]
          },
          "edition": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Edition",
            "description": "An optional edition of the Read.",
            "examples": [
              "First edition"
            ]
          },
          "contributors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contributors",
            "description": "An optional list of contributors of the Read.",
            "examples": [
              "[{\"name\": \"William Shakespeare\", \"role\": \"Author\"}]"
            ]
          },
          "payout_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "none",
                  "engagement_based",
                  "fixed_payout"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Payout Type",
            "description": "An optional type of payout for the read.",
            "examples": [true]
          },
          "list_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "List Price",
            "description": "An optional list price of the read in USD.",
            "examples": [9.99]
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "const": "usd"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "An optional currency of the read in small letters.",
            "examples": [
              "usd"
            ]
          },
          "origin": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "Public Domain",
                  "Self Published",
                  "Indie Author",
                  "Author Direct",
                  "Content Partner",
                  "Content Partner URL"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Origin",
            "description": "An optional origin of the read.",
            "examples": [
              "Self Published"
            ]
          },
          "publisher_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publisher Profile Id",
            "description": "An optional publisher profile id of the read.",
            "examples": [
              "123"
            ]
          },
          "content_guidelines_ack": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Guidelines Ack",
            "description": "Acknowledge the Content Guidelines",
            "examples": [true]
          },
          "copyright": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "maxLength": 1000,
            "title": "Copyright",
            "description": "An optional copyright of the read.",
            "examples": [
              "Copyright 2024"
            ]
          },
          "series_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Series Id",
            "description": "The id of the series the read belongs to.",
            "examples": [
              "123"
            ]
          },
          "volume": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Volume",
            "description": "The volume number of the read.",
            "examples": [1]
          },
          "sample_chapter_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Sample Chapter Ids",
            "description": "The IDs of the chapters to include in the sample. Optional.",
            "examples": [
              "12345"
            ]
          },
          "display_mode": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "text",
                  "audio-only",
                  "text-with-audio"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Mode",
            "description": "The display mode of the read.",
            "examples": [
              "audio_only"
            ]
          }
        },
        "type": "object",
        "title": "Body_Update_direct_publishing_read_v1_direct_publishing_reads__read_id__patch"
      },
      "Body_Update_document_v1_convai_knowledge_base__documentation_id__patch": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "title": "Name",
            "description": "A custom, human-readable name for the document."
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Update_document_v1_convai_knowledge_base__documentation_id__patch"
      },
      "Body_Update_exported_read_for_project_v1_projects__project_id__reader_read_put": {
        "properties": {
          "export_with_audio": {
            "type": "boolean",
            "title": "Export With Audio",
            "description": "Whether to export with latest project audio",
            "default": false
          }
        },
        "type": "object",
        "title": "Body_Update_exported_read_for_project_v1_projects__project_id__reader_read_put"
      },
      "Body_Update_group_permissions_v1_workspace_groups__group_id__permissions_post": {
        "properties": {
          "group_permissions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/WorkspaceGroupPermission"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Permissions"
          }
        },
        "type": "object",
        "required": [
          "group_permissions"
        ],
        "title": "Body_Update_group_permissions_v1_workspace_groups__group_id__permissions_post"
      },
      "Body_Update_group_v1_workspace_groups__group_id__patch": {
        "properties": {
          "group_name": {
            "type": "string",
            "title": "Group Name",
            "description": "Name of the target group."
          }
        },
        "type": "object",
        "required": [
          "group_name"
        ],
        "title": "Body_Update_group_v1_workspace_groups__group_id__patch"
      },
      "Body_Update_member_v1_workspace_members_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "Email of the target user."
          },
          "is_locked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Locked",
            "description": "Whether to lock or unlock the user account."
          },
          "workspace_role": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "workspace_admin",
                  "workspace_member"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Role",
            "description": "Role dictating permissions in the workspace."
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_Update_member_v1_workspace_members_post"
      },
      "Body_Update_metadata_for_a_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__patch": {
        "properties": {
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id",
            "description": "Either the identifier of a voice from the ElevenLabs voice library, or one of ['track-clone', 'clip-clone']."
          },
          "languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Languages",
            "description": "Languages to apply these changes to. If empty, will apply to all languages."
          }
        },
        "type": "object",
        "title": "Body_Update_metadata_for_a_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__patch"
      },
      "Body_Update_notification_preferences_v1_workspace_notification_preferences__notification_id__put": {
        "properties": {
          "threshold_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UsageThresholdType"
              },
              {
                "type": "null"
              }
            ],
            "description": "The type of threshold to set"
          },
          "threshold_value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Threshold Value",
            "description": "The value of the threshold to set"
          }
        },
        "type": "object",
        "title": "Body_Update_notification_preferences_v1_workspace_notification_preferences__notification_id__put"
      },
      "Body_Update_project_cover_image_v1_projects__project_id__update_cover_image_post": {
        "properties": {
          "image": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image",
            "description": "Image to upload. Will be converted to WebP."
          }
        },
        "type": "object",
        "title": "Body_Update_project_cover_image_v1_projects__project_id__update_cover_image_post"
      },
      "Body_Update_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__patch": {
        "properties": {
          "archived": {
            "type": "boolean",
            "title": "Archived",
            "description": "The name of the pronunciation dictionary, used for identification only.",
            "examples": [
              "My Dictionary"
            ]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the pronunciation dictionary, used for identification only.",
            "examples": [
              "My Dictionary"
            ]
          }
        },
        "type": "object",
        "title": "Body_Update_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__patch"
      },
      "Body_Update_terms_that_user_has_agreed_to_v1_user_terms_agreed_add_post": {
        "properties": {
          "terms_name": {
            "type": "string",
            "title": "Terms Name",
            "description": "The terms that the user has agreed to"
          }
        },
        "type": "object",
        "required": [
          "terms_name"
        ],
        "title": "Body_Update_terms_that_user_has_agreed_to_v1_user_terms_agreed_add_post"
      },
      "Body_Update_transcription_task_name_v1_speech_to_text_tasks__transcription_task_id__name_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The new name for the transcription task."
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_Update_transcription_task_name_v1_speech_to_text_tasks__transcription_task_id__name_post"
      },
      "Body_Update_user_s_onboarding_checklist_progress_v1_user_onboarding_checklist_update_post": {
        "properties": {
          "item_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Item Id",
            "description": "The identifier of the event"
          }
        },
        "type": "object",
        "title": "Body_Update_user_s_onboarding_checklist_progress_v1_user_onboarding_checklist_update_post"
      },
      "Body_Update_user_s_public_name_v1_user_update_public_user_name_post": {
        "properties": {
          "public_user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public User Name",
            "description": "This name will be displayed whenever the user shares generated content."
          }
        },
        "type": "object",
        "title": "Body_Update_user_s_public_name_v1_user_update_public_user_name_post"
      },
      "Body_Updates_metadata_for_dubbing__v1_dubbing__dubbing_id__metadata_post": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the dubbing project."
          },
          "last_viewer_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Viewer User Id",
            "description": "User ID of the last viewer"
          },
          "last_viewer_tab_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Viewer Tab Id",
            "description": "Tab ID of the last viewer"
          }
        },
        "type": "object",
        "title": "Body_Updates_metadata_for_dubbing__v1_dubbing__dubbing_id__metadata_post"
      },
      "Body_Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post": {
        "properties": {
          "recording": {
            "type": "string",
            "format": "binary",
            "title": "Recording",
            "description": "Audio recording of the user"
          }
        },
        "type": "object",
        "required": [
          "recording"
        ],
        "title": "Body_Verify_PVC_voice_captcha_v1_voices_pvc__voice_id__captcha_post"
      },
      "Body_Verify_sign_in_request_v1_user_sign_in_requests_verify_post": {
        "properties": {
          "sign_in_request_verification_code": {
            "type": "string",
            "title": "Sign In Request Verification Code",
            "description": "The verification code which is used to verify the sign in request."
          }
        },
        "type": "object",
        "required": [
          "sign_in_request_verification_code"
        ],
        "title": "Body_Verify_sign_in_request_v1_user_sign_in_requests_verify_post"
      },
      "Body_Voice_Library_Share_v1_voices__voice_id__share_library_post": {
        "properties": {
          "enable_library": {
            "type": "boolean",
            "title": "Enable Library",
            "description": "Whether to enable/disable sharing of the given voice to voice library.",
            "examples": [true]
          },
          "notice_period": {
            "type": "integer",
            "title": "Notice Period",
            "description": "Number of days the voice stays in VoiceLab after it was removed from the library.",
            "default": 0
          },
          "custom_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Rate",
            "description": "Custom rate for the 1000 credits for the voice."
          },
          "enable_live_moderation": {
            "type": "boolean",
            "title": "Enable Live Moderation",
            "description": "Whether to enable live moderation for the voice.",
            "default": false
          },
          "free_users_allowed": {
            "type": "boolean",
            "title": "Free Users Allowed",
            "description": "Whether free users are allowed to use the voice.",
            "default": true
          },
          "preview_history_item_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview History Item Id",
            "description": "The ID of the history item to use for the preview."
          },
          "voice_mixing_allowed": {
            "type": "boolean",
            "title": "Voice Mixing Allowed",
            "description": "Whether we are allowed to train voice mixing model on the voice samples.",
            "default": false
          },
          "labels": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labels",
            "description": "Serialized labels dictionary for the voice."
          },
          "reader_app_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reader App Enabled",
            "description": "Whether the voice is allowed to be shown in the reader app."
          },
          "reader_restricted_on": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ReaderResourceRequestModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reader Restricted On",
            "description": "Whitelist of reader resources for a voice."
          }
        },
        "type": "object",
        "required": [
          "enable_library"
        ],
        "title": "Body_Voice_Library_Share_v1_voices__voice_id__share_library_post"
      },
      "Body_Whether_to_show_the_calendly_for_the_lead_v1_lead_show_calendly_post": {
        "properties": {
          "form_data": {
            "$ref": "#/components/schemas/ContactSalesForm",
            "description": "The contact sales form"
          }
        },
        "type": "object",
        "required": [
          "form_data"
        ],
        "title": "Body_Whether_to_show_the_calendly_for_the_lead_v1_lead_show_calendly_post"
      },
      "Body_add_domain_verification_bulk_v1_workspace_domain_verifications_bulk_post": {
        "properties": {
          "domains": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Domains"
          },
          "verification_method": {
            "type": "string",
            "const": "dns",
            "title": "Verification Method"
          }
        },
        "type": "object",
        "required": [
          "domains",
          "verification_method"
        ],
        "title": "Body_add_domain_verification_bulk_v1_workspace_domain_verifications_bulk_post"
      },
      "Body_add_domain_verification_v1_workspace_domain_verifications_post": {
        "properties": {
          "domain": {
            "type": "string",
            "title": "Domain"
          },
          "verification_method": {
            "type": "string",
            "const": "dns",
            "title": "Verification Method"
          }
        },
        "type": "object",
        "required": [
          "domain",
          "verification_method"
        ],
        "title": "Body_add_domain_verification_v1_workspace_domain_verifications_post"
      },
      "Body_add_env_token_to_vercel_deprecated": {
        "properties": {
          "projects": {
            "items": {
              "$ref": "#/components/schemas/VercelProjectType"
            },
            "type": "array",
            "title": "Projects to add env token to",
            "description": "The projects to add the env token to."
          }
        },
        "type": "object",
        "required": [
          "projects"
        ],
        "title": "Body_add_env_token_to_vercel_deprecated"
      },
      "Body_add_item_to_collection_v1_direct_publishing_collections__collection_id__items_post": {
        "properties": {
          "read_id": {
            "type": "string",
            "title": "Read Id",
            "description": "The id of the read."
          },
          "order": {
            "type": "integer",
            "title": "Order",
            "description": "The order of the item in the collection.",
            "examples": [1]
          }
        },
        "type": "object",
        "required": [
          "read_id",
          "order"
        ],
        "title": "Body_add_item_to_collection_v1_direct_publishing_collections__collection_id__items_post"
      },
      "Body_add_podcast_v1_projects_podcast_post": {
        "properties": {
          "host_voice_id": {
            "type": "string",
            "title": "Host Voice Id"
          },
          "guest_voice_id": {
            "type": "string",
            "title": "Guest Voice Id"
          },
          "default_model_id": {
            "type": "string",
            "title": "Default Model Id"
          },
          "intro": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1500
              },
              {
                "type": "null"
              }
            ],
            "title": "Intro"
          },
          "outro": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1500
              },
              {
                "type": "null"
              }
            ],
            "title": "Outro"
          },
          "instructions_prompt": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3000
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions Prompt"
          },
          "highlights": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Highlights"
          },
          "duration_scale": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 2,
                "minimum": 0.1
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Scale",
            "default": 1
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "from_document": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Document"
          },
          "from_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Url"
          },
          "from_project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Project Id"
          },
          "quality_preset": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality Preset"
          },
          "mode": {
            "anyOf": [
              {
                "type": "string",
                "const": "conversation"
              },
              {
                "type": "string",
                "const": "bulletin"
              }
            ],
            "title": "Mode",
            "default": "conversation"
          },
          "callback_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Callback Url",
            "description": "\n    A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion\n    Messages:\n    1. When project was converted successfully:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"success\",\n        project_snapshot_id: \"22m00Tcm4TlvDq8ikMAT\",\n        error_details: None,\n      }\n    }\n    2. When project conversion failed:\n    {\n      type: \"project_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        conversion_status: \"error\",\n        project_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n\n    3. When chapter was converted successfully:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"success\",\n        chapter_snapshot_id: \"23m00Tcm4TlvDq8ikMAV\",\n        error_details: None,\n      }\n    }\n    4. When chapter conversion failed:\n    {\n      type: \"chapter_conversion_status\",\n      event_timestamp: 1234567890,\n      data: {\n        request_id: \"1234567890\",\n        project_id: \"21m00Tcm4TlvDq8ikWAM\",\n        chapter_id: \"22m00Tcm4TlvDq8ikMAT\",\n        conversion_status: \"error\",\n        chapter_snapshot_id: None,\n        error_details: \"Error details if conversion failed\"\n      }\n    }\n    ",
            "examples": [
              [
                "https://www.test.com/my-api/projects-status"
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "host_voice_id",
          "guest_voice_id",
          "default_model_id"
        ],
        "title": "Body_add_podcast_v1_projects_podcast_post"
      },
      "Body_admin_can_link_email_to_sso_c185a1ff66f4a1feaeb19931d4be4175_v1_workspace_can_link_email_to_sso_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "provider_id": {
            "type": "string",
            "title": "Provider Id"
          },
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "email",
          "provider_id",
          "internal_api_usage_secret"
        ],
        "title": "Body_admin_can_link_email_to_sso_c185a1ff66f4a1feaeb19931d4be4175_v1_workspace_can_link_email_to_sso_post"
      },
      "Body_apply_discount_apply_discount_post": {
        "properties": {
          "discount_code": {
            "type": "string",
            "enum": [
              "special-offer-30",
              "special-offer-50",
              "special-offer-70"
            ],
            "title": "Discount Code"
          }
        },
        "type": "object",
        "required": [
          "discount_code"
        ],
        "title": "Body_apply_discount_apply_discount_post"
      },
      "Body_change_subscription_change_subscription_post": {
        "properties": {
          "subscription_type": {
            "type": "string",
            "enum": [
              "starter",
              "creator",
              "pro",
              "growing_business",
              "scale_2024_08_10"
            ],
            "title": "Subscription Type",
            "description": "The type of subscription to subscribe to."
          },
          "billing_period": {
            "type": "string",
            "enum": [
              "monthly_period",
              "annual_period"
            ],
            "title": "Billing Period",
            "description": "The billing period to subscribe to, can be either 'monthly_period' or 'annual_period'.",
            "default": "monthly_period"
          },
          "idempotency_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Idempotency Key",
            "description": "An idempotency key to ensure the request is only processed once."
          },
          "promocode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Promocode",
            "description": "optional coupon id to apply to the subscription change"
          }
        },
        "type": "object",
        "required": [
          "subscription_type"
        ],
        "title": "Body_change_subscription_change_subscription_post"
      },
      "Body_clear_remote_voices_redis_route_cross_environment_voices_clear_remote_voice_redis_post": {
        "properties": {
          "voice_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Voice Ids"
          },
          "owner_user_id": {
            "type": "string",
            "title": "Owner User Id"
          },
          "owner_workspace_id": {
            "type": "string",
            "title": "Owner Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "voice_ids",
          "owner_user_id",
          "owner_workspace_id"
        ],
        "title": "Body_clear_remote_voices_redis_route_cross_environment_voices_clear_remote_voice_redis_post"
      },
      "Body_compute_speaker_embedding_cross_env_cross_environment_user__user_id__voices__voice_id__speaker_embedding_compute_post": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id"
          },
          "priority": {
            "type": "integer",
            "title": "Priority"
          },
          "subscription_tier": {
            "type": "string",
            "title": "Subscription Tier"
          },
          "use_v3_api": {
            "type": "boolean",
            "title": "Use V3 Api"
          },
          "timeout_secs": {
            "type": "integer",
            "title": "Timeout Secs"
          },
          "instance_name": {
            "type": "string",
            "title": "Instance Name"
          },
          "update_embedding": {
            "type": "boolean",
            "title": "Update Embedding"
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "priority",
          "subscription_tier",
          "use_v3_api",
          "timeout_secs",
          "instance_name",
          "update_embedding"
        ],
        "title": "Body_compute_speaker_embedding_cross_env_cross_environment_user__user_id__voices__voice_id__speaker_embedding_compute_post"
      },
      "Body_convert_play_document_endpoint_v1_reader_c185a1ff66f4a1feaeb19931d4be4175_convert_play_document__document_id__post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_convert_play_document_endpoint_v1_reader_c185a1ff66f4a1feaeb19931d4be4175_convert_play_document__document_id__post"
      },
      "Body_convert_play_documents_endpoint_v1_reader_c185a1ff66f4a1feaeb19931d4be4175_convert_play_documents_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_convert_play_documents_endpoint_v1_reader_c185a1ff66f4a1feaeb19931d4be4175_convert_play_documents_post"
      },
      "Body_convert_projects_endpoint_c185a1ff66f4a1feaeb19931d4be4175_convert_projects_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_convert_projects_endpoint_c185a1ff66f4a1feaeb19931d4be4175_convert_projects_post"
      },
      "Body_convert_transcription_tasks_c185a1ff66f4a1feaeb19931d4be4175_speech_to_text_tasks_start_conversions_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_convert_transcription_tasks_c185a1ff66f4a1feaeb19931d4be4175_speech_to_text_tasks_start_conversions_post"
      },
      "Body_create_account_management_link_create_connect_account_management_link_post": {
        "properties": {
          "relative_redirect_path": {
            "type": "string",
            "title": "Relative Redirect Path",
            "description": "The relative path to redirect to after creating the account.",
            "default": "payouts",
            "examples": [
              "payouts"
            ]
          }
        },
        "type": "object",
        "title": "Body_create_account_management_link_create_connect_account_management_link_post"
      },
      "Body_create_checkout_session_url_create_checkout_session_post": {
        "properties": {
          "subscription_type": {
            "type": "string",
            "enum": [
              "starter",
              "creator",
              "pro",
              "growing_business",
              "scale_2024_08_10"
            ],
            "title": "Subscription Type",
            "description": "The type of subscription to subscribe to."
          },
          "currency": {
            "type": "string",
            "enum": [
              "usd",
              "eur"
            ],
            "title": "Currency",
            "description": "The currency to subscribe to, can be either 'usd' or 'eur'."
          },
          "billing_period": {
            "type": "string",
            "enum": [
              "monthly_period",
              "annual_period"
            ],
            "title": "Billing Period",
            "description": "The billing period to subscribe to, can be either 'monthly_period' or 'annual_period'.",
            "default": "monthly_period"
          },
          "promocode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Promocode",
            "description": "The promocode to use for the subscription."
          },
          "no_default_promocode": {
            "type": "boolean",
            "title": "No Default Promocode",
            "description": "If true, will not use any promocode for the subscription.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "subscription_type",
          "currency"
        ],
        "title": "Body_create_checkout_session_url_create_checkout_session_post"
      },
      "Body_create_collection_v1_direct_publishing_collections_post": {
        "properties": {
          "collection_category": {
            "type": "string",
            "enum": [
              "blog",
              "curated",
              "dynamic",
              "newsletter",
              "feed",
              "series"
            ],
            "minLength": 1,
            "title": "Collection Category",
            "description": "The category of the collection.",
            "default": "series",
            "examples": [
              "series",
              "bundle"
            ]
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "The title of the collection."
          },
          "publisher_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publisher Profile Id",
            "description": "An optional publisher profile id of the collection.",
            "examples": [
              "123"
            ]
          },
          "language": {
            "type": "string",
            "enum": [
              "en",
              "zh",
              "es",
              "hi",
              "pt",
              "fr",
              "de",
              "ja",
              "ar",
              "ru",
              "ko",
              "id",
              "it",
              "nl",
              "tr",
              "pl",
              "sv",
              "fil",
              "ms",
              "ro",
              "uk",
              "el",
              "cs",
              "da",
              "fi",
              "bg",
              "hr",
              "sk",
              "ta",
              "hu",
              "no",
              "vi"
            ],
            "title": "Language",
            "description": "Language of the collection. Two-letter language code (ISO 639-1).",
            "default": "en",
            "examples": [
              "en"
            ]
          }
        },
        "type": "object",
        "title": "Body_create_collection_v1_direct_publishing_collections_post"
      },
      "Body_create_connect_account_create_connect_account_post": {
        "properties": {
          "relative_redirect_path": {
            "type": "string",
            "title": "Relative Redirect Path",
            "description": "The relative path to redirect to after creating the account.",
            "default": "payouts",
            "examples": [
              "payouts"
            ]
          }
        },
        "type": "object",
        "title": "Body_create_connect_account_create_connect_account_post"
      },
      "Body_create_project_endpoint_c185a1ff66f4a1feaeb19931d4be4175_projects_creation_queue_create_project__project_id__post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_create_project_endpoint_c185a1ff66f4a1feaeb19931d4be4175_projects_creation_queue_create_project__project_id__post"
      },
      "Body_create_project_export_endpoint_v1_projects__project_id__exports_post": {
        "properties": {
          "export": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExportProjectAudioInputSpec"
              },
              {
                "$ref": "#/components/schemas/ExportProjectZipInputSpec"
              },
              {
                "$ref": "#/components/schemas/ExportProjectLpfInputSpec"
              },
              {
                "$ref": "#/components/schemas/ExportProjectParagraphsZipInputSpec"
              },
              {
                "$ref": "#/components/schemas/ExportChapterAudioInputSpec"
              },
              {
                "$ref": "#/components/schemas/ExportChapterParagraphsZipInputSpec"
              },
              {
                "$ref": "#/components/schemas/ExportChapterVideoInputSpec"
              },
              {
                "$ref": "#/components/schemas/ExportProjectVideoInputSpec"
              },
              {
                "$ref": "#/components/schemas/ExportProjectReaderPublishInputSpec"
              }
            ],
            "title": "Export"
          }
        },
        "type": "object",
        "required": [
          "export"
        ],
        "title": "Body_create_project_export_endpoint_v1_projects__project_id__exports_post"
      },
      "Body_create_projects_endpoint_c185a1ff66f4a1feaeb19931d4be4175_projects_creation_queue_tick_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_create_projects_endpoint_c185a1ff66f4a1feaeb19931d4be4175_projects_creation_queue_tick_post"
      },
      "Body_create_service_account_api_key_v1_service_accounts__service_account_user_id__api_keys_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "text_to_speech",
                    "speech_to_speech",
                    "speech_to_text",
                    "models_read",
                    "models_write",
                    "voices_read",
                    "voices_write",
                    "speech_history_read",
                    "speech_history_write",
                    "sound_generation",
                    "audio_isolation",
                    "voice_generation",
                    "dubbing_read",
                    "dubbing_write",
                    "pronunciation_dictionaries_read",
                    "pronunciation_dictionaries_write",
                    "user_read",
                    "user_write",
                    "projects_read",
                    "projects_write",
                    "audio_native_read",
                    "audio_native_write",
                    "workspace_read",
                    "workspace_write",
                    "forced_alignment"
                  ]
                },
                "type": "array"
              },
              {
                "type": "string",
                "const": "all"
              }
            ],
            "title": "Permissions",
            "description": "The permissions of the XI API."
          },
          "character_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Limit",
            "description": "The character limit of the XI API key. If provided this will limit the usage of this api key to n characters per month where n is the chosen value. Requests that incur charges will fail after reaching this monthly limit."
          }
        },
        "type": "object",
        "required": [
          "name",
          "permissions"
        ],
        "title": "Body_create_service_account_api_key_v1_service_accounts__service_account_user_id__api_keys_post"
      },
      "Body_create_service_account_v1_service_accounts_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_create_service_account_v1_service_accounts_post"
      },
      "Body_create_user_c185a1ff66f4a1feaeb19931d4be4175_create_user_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "user_id of the customer to create."
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "E-Mail of the customer to create."
          },
          "created_using_password": {
            "type": "boolean",
            "title": "Created Using Password",
            "description": "Whether this account was registered using password authentication."
          },
          "name_from_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name From Provider",
            "description": "Name from the external provider used to sign up, if any."
          },
          "provider_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Id",
            "description": "The provider id of the external provider used to sign up."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret",
          "user_id",
          "email",
          "created_using_password"
        ],
        "title": "Body_create_user_c185a1ff66f4a1feaeb19931d4be4175_create_user_post"
      },
      "Body_create_v1_play__voice_id__create_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text that will get converted into speech.",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ]
          },
          "model_id": {
            "type": "string",
            "enum": [
              "eleven_turbo_v2",
              "eleven_turbo_v2_5"
            ],
            "title": "Model Id",
            "description": "The model ID to use for the conversion.",
            "default": "eleven_turbo_v2",
            "examples": [
              "eleven_turbo_v2"
            ]
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_create_v1_play__voice_id__create_post"
      },
      "Body_create_workspace_webhook_hmac_route_v1_workspace_webhooks_add_hmac_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The display name of the webhook (used for display purposes only).",
            "examples": [
              "My Callback Webhook"
            ]
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "The callback URL for the webhook"
          }
        },
        "type": "object",
        "required": [
          "name",
          "webhook_url"
        ],
        "title": "Body_create_workspace_webhook_hmac_route_v1_workspace_webhooks_add_hmac_post"
      },
      "Body_create_workspace_webhook_oauth2_route_v1_workspace_webhooks_add_oauth2_post": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The display name of the webhook (used for display purposes only).",
            "examples": [
              "My Callback Webhook"
            ]
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "The callback URL for the webhook"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id",
            "description": "The client ID used for oauth2 authenticated webhooks"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret",
            "description": "The client secret used for oauth2 authenticated webhooks"
          },
          "token_url": {
            "type": "string",
            "title": "Token Url",
            "description": "The https token URL used for oauth2 authenticated webhooks"
          }
        },
        "type": "object",
        "required": [
          "name",
          "webhook_url",
          "client_id",
          "client_secret",
          "token_url"
        ],
        "title": "Body_create_workspace_webhook_oauth2_route_v1_workspace_webhooks_add_oauth2_post"
      },
      "Body_delete_domain_verification_v1_workspace_domain_verifications_delete": {
        "properties": {
          "domain": {
            "type": "string",
            "title": "Domain"
          }
        },
        "type": "object",
        "required": [
          "domain"
        ],
        "title": "Body_delete_domain_verification_v1_workspace_domain_verifications_delete"
      },
      "Body_detect_dubbing_ip_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_dubbing_ip_abuse_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_detect_dubbing_ip_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_dubbing_ip_abuse_post"
      },
      "Body_detect_email_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_email_abuse_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_detect_email_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_email_abuse_post"
      },
      "Body_detect_ip_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_ip_abuse_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_detect_ip_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_ip_abuse_post"
      },
      "Body_detect_payout_anomalies_c185a1ff66f4a1feaeb19931d4be4175_detect_workspace_payout_anomalies_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_detect_payout_anomalies_c185a1ff66f4a1feaeb19931d4be4175_detect_workspace_payout_anomalies_post"
      },
      "Body_detect_sfx_ip_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_sfx_ip_abuse_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_detect_sfx_ip_abuse_c185a1ff66f4a1feaeb19931d4be4175_detect_sfx_ip_abuse_post"
      },
      "Body_disable_ref_voices_if_notice_period_expired_c185a1ff66f4a1feaeb19931d4be4175_disable_ref_voices_if_notice_period_expired_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_disable_ref_voices_if_notice_period_expired_c185a1ff66f4a1feaeb19931d4be4175_disable_ref_voices_if_notice_period_expired_post"
      },
      "Body_edit_service_account_api_key_v1_service_accounts__service_account_user_id__api_keys__api_key_id__patch": {
        "properties": {
          "is_enabled": {
            "type": "boolean",
            "title": "Is Enabled",
            "description": "Whether to enable or disable the API key."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the XI API key to use (used for identification purposes only).",
            "examples": [
              "Sneaky Fox"
            ]
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "text_to_speech",
                    "speech_to_speech",
                    "speech_to_text",
                    "models_read",
                    "models_write",
                    "voices_read",
                    "voices_write",
                    "speech_history_read",
                    "speech_history_write",
                    "sound_generation",
                    "audio_isolation",
                    "voice_generation",
                    "dubbing_read",
                    "dubbing_write",
                    "pronunciation_dictionaries_read",
                    "pronunciation_dictionaries_write",
                    "user_read",
                    "user_write",
                    "projects_read",
                    "projects_write",
                    "audio_native_read",
                    "audio_native_write",
                    "workspace_read",
                    "workspace_write",
                    "forced_alignment"
                  ]
                },
                "type": "array"
              },
              {
                "type": "string",
                "const": "all"
              }
            ],
            "title": "Permissions",
            "description": "The permissions of the XI API."
          },
          "character_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Limit",
            "description": "The character limit of the XI API key. If provided this will limit the usage of this api key to n characters per month where n is the chosen value. Requests that incur charges will fail after reaching this monthly limit."
          }
        },
        "type": "object",
        "required": [
          "is_enabled",
          "name",
          "permissions"
        ],
        "title": "Body_edit_service_account_api_key_v1_service_accounts__service_account_user_id__api_keys__api_key_id__patch"
      },
      "Body_edit_workspace_service_account_v1_service_accounts__service_account_user_id__patch": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Body_edit_workspace_service_account_v1_service_accounts__service_account_user_id__patch"
      },
      "Body_edit_workspace_webhook_route_v1_workspace_webhooks__webhook_id__edit_post": {
        "properties": {
          "is_disabled": {
            "type": "boolean",
            "title": "Is Disabled",
            "description": "Whether to disable or enable the webhook",
            "examples": [true]
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The display name of the webhook (used for display purposes only).",
            "examples": [
              "My Callback Webhook"
            ]
          }
        },
        "type": "object",
        "required": [
          "is_disabled",
          "name"
        ],
        "title": "Body_edit_workspace_webhook_route_v1_workspace_webhooks__webhook_id__edit_post"
      },
      "Body_export_shared_voice_settings_c185a1ff66f4a1feaeb19931d4be4175_export_shared_voice_settings_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_export_shared_voice_settings_c185a1ff66f4a1feaeb19931d4be4175_export_shared_voice_settings_post"
      },
      "Body_export_voice_qc_labels_c185a1ff66f4a1feaeb19931d4be4175_export_voice_qc_labels_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_export_voice_qc_labels_c185a1ff66f4a1feaeb19931d4be4175_export_voice_qc_labels_post"
      },
      "Body_find_replacement_voices_v1_dubbing__dubbing_id__find_replacement_voices_post": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID"
          },
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          },
          "embedding": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Embedding",
            "description": "Raw voice embedding (list[float])."
          },
          "tts_model_id": {
            "type": "string",
            "title": "Tts Model Id",
            "description": "The model ID to use for dubbing.",
            "default": "multilangv2",
            "examples": [
              "eleven_turbo_v2"
            ]
          },
          "top_k": {
            "type": "integer",
            "title": "Top K",
            "description": "Number of most similar voices to return. If similarity_threshold is provided, less than this number of voices may be returned. Values range from 1 to 100.",
            "default": 10,
            "examples": [10]
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The Target language."
          },
          "accent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent",
            "description": "[Experimental] An accent to apply when selecting voices from the library and to use to inform translation of the dialect to prefer."
          },
          "similarity_threshold": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Threshold",
            "description": "Threshold for voice similarity between provided sample and library voices. Values range from 0 to 2. The smaller the value the more similar voices will be returned.",
            "examples": [0.5]
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "internal_api_usage_secret",
          "embedding"
        ],
        "title": "Body_find_replacement_voices_v1_dubbing__dubbing_id__find_replacement_voices_post"
      },
      "Body_fix_killed_dubbings_c185a1ff66f4a1feaeb19931d4be4175_fix_killed_dubbings_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_fix_killed_dubbings_c185a1ff66f4a1feaeb19931d4be4175_fix_killed_dubbings_post"
      },
      "Body_fix_killed_pvcs_c185a1ff66f4a1feaeb19931d4be4175_fix_killed_pvcs_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_fix_killed_pvcs_c185a1ff66f4a1feaeb19931d4be4175_fix_killed_pvcs_post"
      },
      "Body_gcp_marketplace_pubsub_webhook_v1_gcp_marketplace_pubsub_webhook_post": {
        "properties": {
          "message": {
            "type": "object",
            "title": "Message",
            "description": "The message param of a wrapped gcp pubsub push sub message"
          }
        },
        "type": "object",
        "title": "Body_gcp_marketplace_pubsub_webhook_v1_gcp_marketplace_pubsub_webhook_post"
      },
      "Body_get_voice_embedding_v1_dubbing__dubbing_id__get_voice_embedding_post": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID"
          },
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "Voice uid to dub with."
          },
          "tts_model_id": {
            "type": "string",
            "title": "Tts Model Id",
            "description": "The model ID to use for dubbing.",
            "default": "multilangv2",
            "examples": [
              "eleven_turbo_v2"
            ]
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "internal_api_usage_secret",
          "voice_id"
        ],
        "title": "Body_get_voice_embedding_v1_dubbing__dubbing_id__get_voice_embedding_post"
      },
      "Body_google_ads_visit_v1_google_ads_visit_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "The email of the customer",
            "examples": [
              "john.doe@testmail.com"
            ]
          },
          "event_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event Type",
            "description": "Google Ads Event Type"
          },
          "gclid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gclid",
            "description": "Google Click Identifier"
          },
          "utm_source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utm Source",
            "description": "Google UTM Source"
          },
          "utm_medium": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utm Medium",
            "description": "Google UTM Medium"
          },
          "utm_campaign": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utm Campaign",
            "description": "Google UTM Campaign"
          },
          "utm_term": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utm Term",
            "description": "Google UTM Term"
          },
          "utm_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utm Content",
            "description": "Google UTM Content"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_google_ads_visit_v1_google_ads_visit_post"
      },
      "Body_ip_usage_ban_c185a1ff66f4a1feaeb19931d4be4175_ip_usage_ban_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_ip_usage_ban_c185a1ff66f4a1feaeb19931d4be4175_ip_usage_ban_post"
      },
      "Body_is_provider_domain_allowed_internal_c185a1ff66f4a1feaeb19931d4be4175_v1_workspace_identity_providers_allowed_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "provider_domain": {
            "type": "string",
            "title": "Provider Domain"
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret",
          "workspace_id",
          "provider_domain"
        ],
        "title": "Body_is_provider_domain_allowed_internal_c185a1ff66f4a1feaeb19931d4be4175_v1_workspace_identity_providers_allowed_post"
      },
      "Body_notify_user_on_voice_withdrawal_revert_route_cross_environment_voices_notify_user_on_voice_withdrawal_revert_post": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "voice_sharing_name": {
            "type": "string",
            "title": "Voice Sharing Name"
          },
          "cloned_by_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cloned By User Id"
          },
          "cloned_by_workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cloned By Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "voice_sharing_name"
        ],
        "title": "Body_notify_user_on_voice_withdrawal_revert_route_cross_environment_voices_notify_user_on_voice_withdrawal_revert_post"
      },
      "Body_notify_user_on_voice_withdrawal_route_cross_environment_voices_notify_user_on_voice_withdrawal_post": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "suggested_voices_ids": {
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "maxItems": 3,
              "minItems": 3
            },
            "type": "array",
            "title": "Suggested Voices Ids"
          },
          "voice_sharing_name": {
            "type": "string",
            "title": "Voice Sharing Name"
          },
          "is_ban": {
            "type": "boolean",
            "title": "Is Ban"
          },
          "is_immediate_ban": {
            "type": "boolean",
            "title": "Is Immediate Ban"
          },
          "disable_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disable At Unix"
          },
          "cloned_by_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cloned By User Id"
          },
          "cloned_by_workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cloned By Workspace Id"
          },
          "voice_sharing_notice_period": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Sharing Notice Period"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "suggested_voices_ids",
          "voice_sharing_name",
          "is_ban",
          "is_immediate_ban"
        ],
        "title": "Body_notify_user_on_voice_withdrawal_route_cross_environment_voices_notify_user_on_voice_withdrawal_post"
      },
      "Body_opt_out_of_updates_v1_user_opt_out_of_updates_post": {
        "properties": {
          "opt_out_updates_key": {
            "type": "string",
            "title": "Opt Out Updates Key",
            "description": "The secret key of the user to opt out of product updates"
          }
        },
        "type": "object",
        "required": [
          "opt_out_updates_key"
        ],
        "title": "Body_opt_out_of_updates_v1_user_opt_out_of_updates_post"
      },
      "Body_payout_workspaces_c185a1ff66f4a1feaeb19931d4be4175_payout_workspaces_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_payout_workspaces_c185a1ff66f4a1feaeb19931d4be4175_payout_workspaces_post"
      },
      "Body_prepare_internal_verification_v1_user_prepare_internal_verification_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "email of the user to verify."
          },
          "verification_code": {
            "type": "string",
            "title": "Verification Code",
            "description": "Account verification code."
          }
        },
        "type": "object",
        "required": [
          "email",
          "verification_code"
        ],
        "title": "Body_prepare_internal_verification_v1_user_prepare_internal_verification_post"
      },
      "Body_process_item_endpoint_v1_direct_publishing_c185a1ff66f4a1feaeb19931d4be4175_queue_process_item__item_id__post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_process_item_endpoint_v1_direct_publishing_c185a1ff66f4a1feaeb19931d4be4175_queue_process_item__item_id__post"
      },
      "Body_process_items_endpoint_v1_direct_publishing_c185a1ff66f4a1feaeb19931d4be4175_queue_tick_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_process_items_endpoint_v1_direct_publishing_c185a1ff66f4a1feaeb19931d4be4175_queue_tick_post"
      },
      "Body_quality_check_endpoint_c185a1ff66f4a1feaeb19931d4be4175_check_speech_quality_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          },
          "source_text": {
            "type": "string",
            "title": "Source Text",
            "description": "The source text of the speech."
          },
          "audio": {
            "type": "string",
            "format": "binary",
            "title": "Audio",
            "description": "The audio file which holds the content and emotion that will control the generated speech."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret",
          "source_text",
          "audio"
        ],
        "title": "Body_quality_check_endpoint_c185a1ff66f4a1feaeb19931d4be4175_check_speech_quality_post"
      },
      "Body_recompute_shared_sound_generations_c185a1ff66f4a1feaeb19931d4be4175_recompute_shared_sound_generations_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_recompute_shared_sound_generations_c185a1ff66f4a1feaeb19931d4be4175_recompute_shared_sound_generations_post"
      },
      "Body_recompute_shared_voices_c185a1ff66f4a1feaeb19931d4be4175_recompute_shared_voices_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_recompute_shared_voices_c185a1ff66f4a1feaeb19931d4be4175_recompute_shared_voices_post"
      },
      "Body_refresh_annual_character_count_for_stripe_plans_c185a1ff66f4a1feaeb19931d4be4175_refresh_annual_character_count_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_refresh_annual_character_count_for_stripe_plans_c185a1ff66f4a1feaeb19931d4be4175_refresh_annual_character_count_post"
      },
      "Body_refresh_character_count_for_free_users_c185a1ff66f4a1feaeb19931d4be4175_refresh_character_count_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_refresh_character_count_for_free_users_c185a1ff66f4a1feaeb19931d4be4175_refresh_character_count_post"
      },
      "Body_remove_conversation_data_after_retention_date_c185a1ff66f4a1feaeb19931d4be4175_v1_convai_cleanup_remove_conversation_data_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_remove_conversation_data_after_retention_date_c185a1ff66f4a1feaeb19931d4be4175_v1_convai_cleanup_remove_conversation_data_post"
      },
      "Body_remove_conversation_internal_logs_c185a1ff66f4a1feaeb19931d4be4175_v1_convai_cleanup_remove_conversation_internal_logs_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_remove_conversation_internal_logs_c185a1ff66f4a1feaeb19931d4be4175_v1_convai_cleanup_remove_conversation_internal_logs_post"
      },
      "Body_report_usage_to_payment_provider_c185a1ff66f4a1feaeb19931d4be4175_report_usage_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          },
          "shard_idx_from_inclusive": {
            "type": "integer",
            "title": "Shard Idx From Inclusive",
            "description": "shard_idx from which the query should start. The maximum shard_idx is 2**16 - 1",
            "examples": [64]
          },
          "shard_idx_to_exclusive": {
            "type": "integer",
            "title": "Shard Idx To Exclusive",
            "description": "shard_idx from which the query should stop. The maximum shard_idx is 2**16 - 1",
            "examples": [128]
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret",
          "shard_idx_from_inclusive",
          "shard_idx_to_exclusive"
        ],
        "title": "Body_report_usage_to_payment_provider_c185a1ff66f4a1feaeb19931d4be4175_report_usage_post"
      },
      "Body_reset_audio_documents_c185a1ff66f4a1feaeb19931d4be4175_reset_audio_documents_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_reset_audio_documents_c185a1ff66f4a1feaeb19931d4be4175_reset_audio_documents_post"
      },
      "Body_reset_projects_c185a1ff66f4a1feaeb19931d4be4175_reset_projects_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_reset_projects_c185a1ff66f4a1feaeb19931d4be4175_reset_projects_post"
      },
      "Body_reset_transcription_tasks_c185a1ff66f4a1feaeb19931d4be4175_speech_to_text_tasks_reset_conversions_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_reset_transcription_tasks_c185a1ff66f4a1feaeb19931d4be4175_speech_to_text_tasks_reset_conversions_post"
      },
      "Body_restart_killed_items_endpoint_v1_direct_publishing_c185a1ff66f4a1feaeb19931d4be4175_queue_restart_killed_items_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_restart_killed_items_endpoint_v1_direct_publishing_c185a1ff66f4a1feaeb19931d4be4175_queue_restart_killed_items_post"
      },
      "Body_restart_killed_project_creations_endpoint_c185a1ff66f4a1feaeb19931d4be4175_projects_creation_queue_restart_idle_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_restart_killed_project_creations_endpoint_c185a1ff66f4a1feaeb19931d4be4175_projects_creation_queue_restart_idle_post"
      },
      "Body_run_training_v1_pvc_c185a1ff66f4a1feaeb19931d4be4175_run_training_post": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          },
          "model_id": {
            "type": "string",
            "title": "Model Id"
          },
          "allow_retrain": {
            "type": "boolean",
            "title": "Allow Retrain",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "voice_id",
          "internal_api_usage_secret"
        ],
        "title": "Body_run_training_v1_pvc_c185a1ff66f4a1feaeb19931d4be4175_run_training_post"
      },
      "Body_send_subscription_expiry_notifications_for_all_c185a1ff66f4a1feaeb19931d4be4175_send_subscription_expiry_notifications_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_send_subscription_expiry_notifications_for_all_c185a1ff66f4a1feaeb19931d4be4175_send_subscription_expiry_notifications_post"
      },
      "Body_set_account_registration_metadata_v1_user_pre_sign_up_post": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "email of the user to set metadata of."
          },
          "account_metadata": {
            "$ref": "#/components/schemas/AccountMetadataResponseModel"
          },
          "recaptcha_token": {
            "type": "string",
            "title": "HCaptcha token",
            "description": "HCaptcha token used to prevent spam, generated on the frontend either automatically or when the client solves the hCapctha challenge.\n"
          },
          "pid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partnerstack Referer Id",
            "description": "The partner id within partnerstack for the referer of a new user.\n"
          },
          "xid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partnerstack XID",
            "description": "The click id within partnerstack for the referer of a new user.\n"
          },
          "invite_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Invite Code",
            "description": "The invite code for the workspace, recieved over email."
          },
          "gcp_marketplace_jwt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "GCP Marketplace JWT",
            "description": "A JWT from GCP marketplace that shows an account is linked to a particular GCP marketplace account. Used to link an account to GCP Marketplace billing."
          }
        },
        "type": "object",
        "required": [
          "email",
          "account_metadata",
          "recaptcha_token"
        ],
        "title": "Body_set_account_registration_metadata_v1_user_pre_sign_up_post"
      },
      "Body_set_cloned_by_document_cross_env_cross_environment_user__user_id__voices__voice_id__cloned_by__document_id__post": {
        "properties": {
          "document_dict": {
            "type": "object",
            "title": "Document Dict"
          },
          "trigger_recompute": {
            "type": "boolean",
            "title": "Trigger Recompute",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "document_dict"
        ],
        "title": "Body_set_cloned_by_document_cross_env_cross_environment_user__user_id__voices__voice_id__cloned_by__document_id__post"
      },
      "Body_set_identity_providers_v1_workspace_identity_providers_post": {
        "properties": {
          "updated_providers": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object",
            "title": "Updated Providers"
          },
          "check_affected_users": {
            "type": "boolean",
            "title": "Check Affected Users",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "updated_providers"
        ],
        "title": "Body_set_identity_providers_v1_workspace_identity_providers_post"
      },
      "Body_set_sso_provider_v1_workspace_sso_provider_config_post": {
        "properties": {
          "provider_type": {
            "type": "string",
            "enum": [
              "saml",
              "oidc"
            ],
            "title": "Provider Type"
          },
          "sso_provider_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SamlConfigResponseModel"
              },
              {
                "$ref": "#/components/schemas/OidcConfigResponseModel"
              }
            ],
            "title": "Sso Provider Config"
          },
          "domains": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Domains"
          }
        },
        "type": "object",
        "required": [
          "provider_type",
          "sso_provider_config",
          "domains"
        ],
        "title": "Body_set_sso_provider_v1_workspace_sso_provider_config_post"
      },
      "Body_snapshot_llm_prices_c185a1ff66f4a1feaeb19931d4be4175_snapshot_llm_prices_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_snapshot_llm_prices_c185a1ff66f4a1feaeb19931d4be4175_snapshot_llm_prices_post"
      },
      "Body_snapshot_subscriptions_c185a1ff66f4a1feaeb19931d4be4175_v1_workspace_snapshot_subscriptions_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_snapshot_subscriptions_c185a1ff66f4a1feaeb19931d4be4175_v1_workspace_snapshot_subscriptions_post"
      },
      "Body_sync_admin_roles_to_isolated_c185a1ff66f4a1feaeb19931d4be4175_sync_admin_roles_to_isolated_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_sync_admin_roles_to_isolated_c185a1ff66f4a1feaeb19931d4be4175_sync_admin_roles_to_isolated_post"
      },
      "Body_transfer_ownership_v1_workspace_transfer_ownership_post": {
        "properties": {
          "new_owner_uid": {
            "type": "string",
            "title": "New Owner Uid"
          }
        },
        "type": "object",
        "required": [
          "new_owner_uid"
        ],
        "title": "Body_transfer_ownership_v1_workspace_transfer_ownership_post"
      },
      "Body_transfer_workspace_balances_c185a1ff66f4a1feaeb19931d4be4175_transfer_workspace_balances_post": {
        "properties": {
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          }
        },
        "type": "object",
        "required": [
          "internal_api_usage_secret"
        ],
        "title": "Body_transfer_workspace_balances_c185a1ff66f4a1feaeb19931d4be4175_transfer_workspace_balances_post"
      },
      "Body_update_cloned_voices_ref_cross_environment_voices_update_cloned_voices_ref_post": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "to_update": {
            "type": "object",
            "title": "To Update"
          },
          "cloned_by_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cloned By User Id"
          },
          "cloned_by_workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cloned By Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "to_update"
        ],
        "title": "Body_update_cloned_voices_ref_cross_environment_voices_update_cloned_voices_ref_post"
      },
      "Body_update_collection_v1_direct_publishing_collections__collection_id__patch": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "The title of the collection."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "An optional description of the collection."
          },
          "collection_category": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "blog",
                  "curated",
                  "dynamic",
                  "newsletter",
                  "feed",
                  "series"
                ],
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection Category",
            "description": "The category of the collection.",
            "examples": [
              "series",
              "bundle"
            ]
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "en",
                  "zh",
                  "es",
                  "hi",
                  "pt",
                  "fr",
                  "de",
                  "ja",
                  "ar",
                  "ru",
                  "ko",
                  "id",
                  "it",
                  "nl",
                  "tr",
                  "pl",
                  "sv",
                  "fil",
                  "ms",
                  "ro",
                  "uk",
                  "el",
                  "cs",
                  "da",
                  "fi",
                  "bg",
                  "hr",
                  "sk",
                  "ta",
                  "hu",
                  "no",
                  "vi"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Language of the collection. Two-letter language code (ISO 639-1).",
            "examples": [
              "en"
            ]
          },
          "publisher_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publisher Profile Id",
            "description": "An optional publisher profile id of the collection.",
            "examples": [
              "123"
            ]
          }
        },
        "type": "object",
        "title": "Body_update_collection_v1_direct_publishing_collections__collection_id__patch"
      },
      "Body_update_default_sharing_preferences_v1_workspace_default_sharing_preferences_post": {
        "properties": {
          "default_sharing_groups": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Default Sharing Groups",
            "description": "List of group IDs to share with by default"
          }
        },
        "type": "object",
        "required": [
          "default_sharing_groups"
        ],
        "title": "Body_update_default_sharing_preferences_v1_workspace_default_sharing_preferences_post"
      },
      "Body_update_dubbing_for_nested_v1_dubbing__dubbing_id__update_child__child_dubbing_id___job_id__post": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID"
          },
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          },
          "update_type": {
            "type": "string",
            "title": "Update Type",
            "description": "The type of the update"
          },
          "data": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ],
            "title": "Data",
            "description": "Update Data"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "internal_api_usage_secret",
          "update_type",
          "data"
        ],
        "title": "Body_update_dubbing_for_nested_v1_dubbing__dubbing_id__update_child__child_dubbing_id___job_id__post"
      },
      "Body_update_dubbing_render_v1_dubbing__dubbing_id__export_render_update_post": {
        "properties": {
          "dubbing_snapshot_id": {
            "type": "integer",
            "title": "Dubbing Snapshot Id",
            "description": "ID of a snapshot for a dub"
          },
          "render_id": {
            "type": "string",
            "title": "Render Id",
            "description": "ID of a dub's render"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID"
          },
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          },
          "update_type": {
            "type": "string",
            "title": "Update Type",
            "description": "The type of the update"
          },
          "render_output_bytes": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Render Output Bytes",
            "description": "Rendered dub as a file"
          },
          "render_duration": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Render Duration",
            "description": "Duration of the dubbing render in seconds"
          },
          "render_mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Render Mime Type",
            "description": "Mime type of the dubbing render"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Optional error for a dub failing to render"
          }
        },
        "type": "object",
        "required": [
          "dubbing_snapshot_id",
          "render_id",
          "user_id",
          "internal_api_usage_secret",
          "update_type"
        ],
        "title": "Body_update_dubbing_render_v1_dubbing__dubbing_id__export_render_update_post"
      },
      "Body_update_dubbing_v1_dubbing__dubbing_id__update__job_id__post": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID"
          },
          "internal_api_usage_secret": {
            "type": "string",
            "title": "Internal Api Usage Secret",
            "description": "The secret for calling internal-only APIs."
          },
          "update_type": {
            "type": "string",
            "title": "Update Type",
            "description": "The type of the update"
          },
          "data": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              }
            ],
            "title": "Data",
            "description": "Update Data"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "internal_api_usage_secret",
          "update_type",
          "data"
        ],
        "title": "Body_update_dubbing_v1_dubbing__dubbing_id__update__job_id__post"
      },
      "Body_update_item_order_v1_direct_publishing_collections__collection_id__items__read_id__patch": {
        "properties": {
          "order": {
            "type": "integer",
            "title": "Order",
            "description": "The order of the item in the collection.",
            "examples": [1]
          }
        },
        "type": "object",
        "required": [
          "order"
        ],
        "title": "Body_update_item_order_v1_direct_publishing_collections__collection_id__items__read_id__patch"
      },
      "Body_update_status_domain_verification_bulk_v1_workspace_domain_verifications_update_status_bulk_post": {
        "properties": {
          "domains": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Domains"
          }
        },
        "type": "object",
        "required": [
          "domains"
        ],
        "title": "Body_update_status_domain_verification_bulk_v1_workspace_domain_verifications_update_status_bulk_post"
      },
      "Body_update_status_domain_verification_v1_workspace_domain_verifications_update_status_post": {
        "properties": {
          "domain": {
            "type": "string",
            "title": "Domain"
          }
        },
        "type": "object",
        "required": [
          "domain"
        ],
        "title": "Body_update_status_domain_verification_v1_workspace_domain_verifications_update_status_post"
      },
      "Body_update_user_auto_provisioning_v1_workspace_user_auto_provisioning_post": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          }
        },
        "type": "object",
        "required": [
          "enabled"
        ],
        "title": "Body_update_user_auto_provisioning_v1_workspace_user_auto_provisioning_post"
      },
      "Body_update_user_terms_deprecated": {
        "properties": {
          "terms_name": {
            "type": "string",
            "title": "Terms Name",
            "description": "The terms that the user has agreed to"
          }
        },
        "type": "object",
        "required": [
          "terms_name"
        ],
        "title": "Body_update_user_terms_deprecated"
      },
      "Body_update_voice_library_settings_v1_workspace_voice_library_settings_post": {
        "properties": {
          "disable_custom_rates": {
            "type": "boolean",
            "title": "Disable Custom Rates",
            "description": "Whether to disable custom rates"
          },
          "hide_custom_rates": {
            "type": "boolean",
            "title": "Hide Custom Rates",
            "description": "Whether to hide custom rates by default"
          }
        },
        "type": "object",
        "required": [
          "disable_custom_rates",
          "hide_custom_rates"
        ],
        "title": "Body_update_voice_library_settings_v1_workspace_voice_library_settings_post"
      },
      "Body_update_workspace_metadata_v1_workspace_update_workspace_put": {
        "properties": {
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
            "examples": [
              [
                "{\"pronunciation_dictionary_id\": \"test\", \"version_id\": \"id2\"}"
              ]
            ]
          },
          "voice_library_removal_notice_webhook_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Library Removal Notice Webhook Ids"
          },
          "speech_to_text_webhook_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speech To Text Webhook Ids"
          }
        },
        "type": "object",
        "title": "Body_update_workspace_metadata_v1_workspace_update_workspace_put"
      },
      "Body_validate_promocode_validate_promocode_post": {
        "properties": {
          "promocode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Promocode",
            "description": "The promocode to use for the subscription."
          }
        },
        "type": "object",
        "title": "Body_validate_promocode_validate_promocode_post"
      },
      "BookPurchaseSource": {
        "type": "string",
        "enum": [
          "code_redeem",
          "revenuecat"
        ],
        "title": "BookPurchaseSource"
      },
      "BooleanLabelingAnswerDbModel": {
        "properties": {
          "question_id": {
            "type": "string",
            "format": "uuid",
            "title": "Question Id"
          },
          "type": {
            "type": "string",
            "const": "boolean",
            "title": "Type"
          },
          "value": {
            "type": "boolean",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "question_id",
          "type",
          "value"
        ],
        "title": "BooleanLabelingAnswerDbModel"
      },
      "BreakdownTypes": {
        "type": "string",
        "enum": [
          "none",
          "voice",
          "voice_multiplier",
          "user",
          "groups",
          "api_keys",
          "all_api_keys",
          "product_type",
          "model",
          "resource",
          "request_queue",
          "region",
          "subresource_id",
          "reporting_workspace_id"
        ],
        "title": "BreakdownTypes",
        "description": "How to break down the information. Cannot be \"user\" or \"api_key\" if include_workspace_metrics is False."
      },
      "BuildMCPPromptResponseModel": {
        "properties": {
          "_meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/PromptMessage"
            },
            "type": "array",
            "title": "Messages"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "messages"
        ],
        "title": "BuildMCPPromptResponseModel",
        "description": "Response model for building a prompt from an MCP server.",
        "example": {
          "description": "Generate a professional email template",
          "messages": [
            {
              "content": {
                "text": "Please write a professional email to {recipient_type} about {subject}",
                "type": "text"
              },
              "role": "user"
            }
          ]
        }
      },
      "BuiltInTools-Input": {
        "properties": {
          "end_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The end call tool"
          },
          "language_detection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The language detection tool"
          },
          "transfer_to_agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The transfer to agent tool"
          },
          "transfer_to_number": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The transfer to number tool"
          },
          "skip_turn": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The skip turn tool"
          },
          "play_keypad_touch_tone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The play DTMF tool"
          },
          "voicemail_detection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The voicemail detection tool"
          }
        },
        "type": "object",
        "title": "BuiltInTools"
      },
      "BuiltInTools-Output": {
        "properties": {
          "end_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The end call tool"
          },
          "language_detection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The language detection tool"
          },
          "transfer_to_agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The transfer to agent tool"
          },
          "transfer_to_number": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The transfer to number tool"
          },
          "skip_turn": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The skip turn tool"
          },
          "play_keypad_touch_tone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The play DTMF tool"
          },
          "voicemail_detection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The voicemail detection tool"
          }
        },
        "type": "object",
        "title": "BuiltInTools"
      },
      "BuiltInToolsWorkflowOverride-Input": {
        "properties": {
          "end_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The end call tool"
          },
          "language_detection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The language detection tool"
          },
          "transfer_to_agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The transfer to agent tool"
          },
          "transfer_to_number": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The transfer to number tool"
          },
          "skip_turn": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The skip turn tool"
          },
          "play_keypad_touch_tone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The play DTMF tool"
          },
          "voicemail_detection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "The voicemail detection tool"
          }
        },
        "type": "object",
        "title": "BuiltInToolsWorkflowOverride"
      },
      "BuiltInToolsWorkflowOverride-Output": {
        "properties": {
          "end_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The end call tool"
          },
          "language_detection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The language detection tool"
          },
          "transfer_to_agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The transfer to agent tool"
          },
          "transfer_to_number": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The transfer to number tool"
          },
          "skip_turn": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The skip turn tool"
          },
          "play_keypad_touch_tone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The play DTMF tool"
          },
          "voicemail_detection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "The voicemail detection tool"
          }
        },
        "type": "object",
        "title": "BuiltInToolsWorkflowOverride"
      },
      "BulkMoveItem": {
        "properties": {
          "item_id": {
            "type": "string",
            "format": "uuid",
            "title": "Item Id"
          },
          "ref_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ref Id"
          },
          "kind": {
            "$ref": "#/components/schemas/CollectionContentKind"
          }
        },
        "type": "object",
        "required": [
          "item_id",
          "ref_id",
          "kind"
        ],
        "title": "BulkMoveItem"
      },
      "BulkMoveItemsRequestBody": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BulkMoveItem"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "items"
        ],
        "title": "BulkMoveItemsRequestBody"
      },
      "BulkShareRequest": {
        "properties": {
          "resource_type": {
            "$ref": "#/components/schemas/WorkspaceResourceType"
          },
          "targets": {
            "items": {
              "$ref": "#/components/schemas/BulkShareTarget"
            },
            "type": "array",
            "title": "Targets"
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "targets"
        ],
        "title": "BulkShareRequest"
      },
      "BulkShareResponse": {
        "properties": {
          "status": {
            "type": "string",
            "const": "ok",
            "title": "Status"
          },
          "shared_count": {
            "type": "integer",
            "title": "Shared Count"
          }
        },
        "type": "object",
        "required": [
          "status",
          "shared_count"
        ],
        "title": "BulkShareResponse"
      },
      "BulkShareTarget": {
        "properties": {
          "identifier": {
            "type": "string",
            "title": "Identifier"
          },
          "identifier_type": {
            "type": "string",
            "enum": [
              "user_email",
              "group_id",
              "workspace_api_key_id"
            ],
            "title": "Identifier Type"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "identifier",
          "identifier_type",
          "role"
        ],
        "title": "BulkShareTarget"
      },
      "CallMetricResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "cost": {
            "type": "integer",
            "title": "Cost"
          },
          "average_cost": {
            "type": "number",
            "title": "Average Cost"
          },
          "llm_cost": {
            "type": "number",
            "title": "Llm Cost"
          },
          "average_llm_cost": {
            "type": "number",
            "title": "Average Llm Cost"
          },
          "duration": {
            "type": "integer",
            "title": "Duration"
          },
          "average_duration": {
            "type": "integer",
            "title": "Average Duration"
          },
          "dt": {
            "type": "integer",
            "title": "Dt"
          }
        },
        "type": "object",
        "required": [
          "count",
          "cost",
          "average_cost",
          "llm_cost",
          "average_llm_cost",
          "duration",
          "average_duration",
          "dt"
        ],
        "title": "CallMetricResponse"
      },
      "CancelEventMeta": {
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/CancelReason"
          },
          "cancelled_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cancelled By"
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comments"
          }
        },
        "type": "object",
        "required": [
          "reason",
          "cancelled_by",
          "comments"
        ],
        "title": "CancelEventMeta"
      },
      "CancelReason": {
        "type": "string",
        "enum": [
          "quote_rejected",
          "payment_timeout",
          "task_canceled"
        ],
        "title": "CancelReason"
      },
      "CapacityResponse": {
        "properties": {
          "caps": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Caps"
          },
          "qual_caps": {
            "items": {
              "$ref": "#/components/schemas/QualificationDbModel"
            },
            "type": "array",
            "title": "Qual Caps"
          }
        },
        "type": "object",
        "required": [
          "caps",
          "qual_caps"
        ],
        "title": "CapacityResponse"
      },
      "CaptionStyleCharacterAnimationModel": {
        "properties": {
          "enter_type": {
            "type": "string",
            "enum": [
              "none",
              "fade"
            ],
            "title": "Enter Type"
          },
          "exit_type": {
            "type": "string",
            "enum": [
              "none",
              "fade"
            ],
            "title": "Exit Type"
          }
        },
        "type": "object",
        "required": [
          "enter_type",
          "exit_type"
        ],
        "title": "CaptionStyleCharacterAnimationModel"
      },
      "CaptionStyleHorizontalPlacementModel": {
        "properties": {
          "align": {
            "type": "string",
            "enum": [
              "left",
              "center",
              "right"
            ],
            "title": "Align"
          },
          "translate_pct": {
            "type": "number",
            "title": "Translate Pct"
          }
        },
        "type": "object",
        "required": [
          "align",
          "translate_pct"
        ],
        "title": "CaptionStyleHorizontalPlacementModel"
      },
      "CaptionStyleModel": {
        "properties": {
          "template": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleTemplateModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "text_font": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Font"
          },
          "text_scale": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Scale"
          },
          "text_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Color"
          },
          "text_align": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "start",
                  "center",
                  "end"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Align"
          },
          "text_style": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "normal",
                  "italic"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Style"
          },
          "text_weight": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "normal",
                  "bold"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Weight"
          },
          "background_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Enabled"
          },
          "background_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Color"
          },
          "background_opacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Opacity"
          },
          "word_highlights_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Word Highlights Enabled"
          },
          "word_highlights_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Word Highlights Color"
          },
          "word_highlights_background_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Word Highlights Background Color"
          },
          "word_highlights_opacity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Word Highlights Opacity"
          },
          "section_animation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleSectionAnimationModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "word_animation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleWordAnimationModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "character_animation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleCharacterAnimationModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "width_pct": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Width Pct"
          },
          "horizontal_placement": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleHorizontalPlacementModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "vertical_placement": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleVerticalPlacementModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "auto_break_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Break Enabled"
          },
          "max_lines_per_section": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Lines Per Section"
          },
          "max_words_per_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Words Per Line"
          }
        },
        "type": "object",
        "title": "CaptionStyleModel"
      },
      "CaptionStyleSectionAnimationModel": {
        "properties": {
          "enter_type": {
            "type": "string",
            "enum": [
              "none",
              "fade",
              "scale"
            ],
            "title": "Enter Type"
          },
          "exit_type": {
            "type": "string",
            "enum": [
              "none",
              "fade",
              "scale"
            ],
            "title": "Exit Type"
          }
        },
        "type": "object",
        "required": [
          "enter_type",
          "exit_type"
        ],
        "title": "CaptionStyleSectionAnimationModel"
      },
      "CaptionStyleTemplateModel": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "label": {
            "type": "string",
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "key",
          "label"
        ],
        "title": "CaptionStyleTemplateModel"
      },
      "CaptionStyleVerticalPlacementModel": {
        "properties": {
          "align": {
            "type": "string",
            "enum": [
              "top",
              "center",
              "bottom"
            ],
            "title": "Align"
          },
          "translate_pct": {
            "type": "number",
            "title": "Translate Pct"
          }
        },
        "type": "object",
        "required": [
          "align",
          "translate_pct"
        ],
        "title": "CaptionStyleVerticalPlacementModel"
      },
      "CaptionStyleWordAnimationModel": {
        "properties": {
          "enter_type": {
            "type": "string",
            "enum": [
              "none",
              "fade",
              "scale"
            ],
            "title": "Enter Type"
          },
          "exit_type": {
            "type": "string",
            "enum": [
              "none",
              "fade",
              "scale"
            ],
            "title": "Exit Type"
          }
        },
        "type": "object",
        "required": [
          "enter_type",
          "exit_type"
        ],
        "title": "CaptionStyleWordAnimationModel"
      },
      "CaptionsQuoteRequest": {
        "properties": {
          "duration_s": {
            "type": "number",
            "title": "Duration S"
          },
          "sdh": {
            "type": "boolean",
            "title": "Sdh"
          },
          "kind": {
            "type": "string",
            "const": "captions",
            "title": "Kind",
            "default": "captions"
          },
          "language": {
            "type": "string",
            "title": "Language"
          }
        },
        "type": "object",
        "required": [
          "duration_s",
          "sdh",
          "language"
        ],
        "title": "CaptionsQuoteRequest"
      },
      "CaptionsQuoteResponse": {
        "properties": {
          "amount_usd": {
            "type": "number",
            "title": "Amount Usd"
          },
          "total_amount_usd": {
            "type": "number",
            "title": "Total Amount Usd"
          },
          "base_rate": {
            "type": "number",
            "title": "Base Rate"
          },
          "discount_percent": {
            "type": "number",
            "title": "Discount Percent"
          },
          "min_quantity_min": {
            "type": "number",
            "title": "Min Quantity Min"
          },
          "billed_minutes": {
            "type": "number",
            "title": "Billed Minutes"
          },
          "duration_s": {
            "type": "number",
            "title": "Duration S"
          },
          "sdh_multiplier": {
            "type": "number",
            "title": "Sdh Multiplier"
          },
          "kind": {
            "type": "string",
            "const": "captions",
            "title": "Kind",
            "default": "captions"
          },
          "language": {
            "type": "string",
            "title": "Language"
          }
        },
        "type": "object",
        "required": [
          "amount_usd",
          "total_amount_usd",
          "base_rate",
          "discount_percent",
          "min_quantity_min",
          "billed_minutes",
          "duration_s",
          "sdh_multiplier",
          "language"
        ],
        "title": "CaptionsQuoteResponse"
      },
      "CaptionsTaskContent": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "captions",
            "title": "Kind",
            "default": "captions"
          },
          "audio_file": {
            "$ref": "#/components/schemas/FileResponseModel"
          },
          "subs": {
            "$ref": "#/components/schemas/Subtitles-Output"
          }
        },
        "type": "object",
        "required": [
          "audio_file",
          "subs"
        ],
        "title": "CaptionsTaskContent"
      },
      "CaptionsTaskDescriptionMetaDbModel": {
        "properties": {
          "media": {
            "$ref": "#/components/schemas/MediaMeta"
          },
          "audio_file_16k_id": {
            "type": "string",
            "format": "uuid",
            "title": "Audio File 16K Id"
          },
          "duration_s": {
            "type": "number",
            "title": "Duration S"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "initial_subtitles": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initial Subtitles"
          },
          "language": {
            "type": "string",
            "title": "Language"
          }
        },
        "type": "object",
        "required": [
          "media",
          "audio_file_16k_id",
          "duration_s",
          "name",
          "initial_subtitles",
          "language"
        ],
        "title": "CaptionsTaskDescriptionMetaDbModel"
      },
      "CaptionsTaskFeedback": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "captions",
            "title": "Kind"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "status": {
            "$ref": "#/components/schemas/ReviewStatus"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "comments",
          "status"
        ],
        "title": "CaptionsTaskFeedback"
      },
      "ChapterContentBlockExtendableNodeResponseModel": {
        "properties": {
          "type": {
            "type": "string",
            "const": "_other",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ChapterContentBlockExtendableNodeResponseModel",
        "description": "Not used. Make sure you anticipate new types in the future."
      },
      "ChapterContentBlockInputModel": {
        "properties": {
          "sub_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "p",
                  "h1",
                  "h2",
                  "h3"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub Type"
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/ChapterContentParagraphTtsNodeInputModel"
            },
            "type": "array",
            "title": "Nodes"
          },
          "block_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Id"
          }
        },
        "type": "object",
        "required": [
          "nodes"
        ],
        "title": "ChapterContentBlockInputModel"
      },
      "ChapterContentBlockResponseModel": {
        "properties": {
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "nodes": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ChapterContentBlockTtsNodeResponseModel"
                },
                {
                  "$ref": "#/components/schemas/ChapterContentBlockExtendableNodeResponseModel"
                }
              ]
            },
            "type": "array",
            "title": "Nodes"
          }
        },
        "type": "object",
        "required": [
          "block_id",
          "nodes"
        ],
        "title": "ChapterContentBlockResponseModel"
      },
      "ChapterContentBlockTtsNodeResponseModel": {
        "properties": {
          "type": {
            "type": "string",
            "const": "tts_node",
            "title": "Type"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "type",
          "voice_id",
          "text"
        ],
        "title": "ChapterContentBlockTtsNodeResponseModel"
      },
      "ChapterContentInputModel": {
        "properties": {
          "blocks": {
            "items": {
              "$ref": "#/components/schemas/ChapterContentBlockInputModel"
            },
            "type": "array",
            "title": "Blocks"
          }
        },
        "type": "object",
        "required": [
          "blocks"
        ],
        "title": "ChapterContentInputModel"
      },
      "ChapterContentParagraphTtsNodeInputModel": {
        "properties": {
          "type": {
            "type": "string",
            "const": "tts_node",
            "title": "Type"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "text",
          "voice_id"
        ],
        "title": "ChapterContentParagraphTtsNodeInputModel"
      },
      "ChapterContentResponseModel": {
        "properties": {
          "blocks": {
            "items": {
              "$ref": "#/components/schemas/ChapterContentBlockResponseModel"
            },
            "type": "array",
            "title": "Blocks"
          }
        },
        "type": "object",
        "required": [
          "blocks"
        ],
        "title": "ChapterContentResponseModel"
      },
      "ChapterExtendedResponseModel": {
        "properties": {
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id",
            "description": "The ID of the chapter."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the chapter."
          },
          "last_conversion_date_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix",
            "description": "The last conversion date of the chapter."
          },
          "conversion_progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversion Progress",
            "description": "The conversion progress of the chapter."
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded",
            "description": "Whether the chapter can be downloaded."
          },
          "state": {
            "type": "string",
            "enum": [
              "default",
              "converting"
            ],
            "title": "State",
            "description": "The state of the chapter."
          },
          "has_video": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Video",
            "description": "Whether the chapter has a video."
          },
          "statistics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChapterStatisticsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The statistics of the chapter."
          },
          "last_conversion_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Error",
            "description": "The last conversion error of the chapter."
          },
          "content": {
            "$ref": "#/components/schemas/GetChapterContentResponseModel"
          }
        },
        "type": "object",
        "required": [
          "chapter_id",
          "name",
          "can_be_downloaded",
          "state",
          "content"
        ],
        "title": "ChapterExtendedResponseModel",
        "example": {
          "can_be_downloaded": true,
          "chapter_id": "aw1NgEzBg83R7vgmiJt6",
          "content": {
            "blocks": [],
            "sound_effects": [],
            "videos": []
          },
          "conversion_progress": 0.5,
          "last_conversion_date_unix": 1714204800,
          "name": "Chapter 1",
          "state": "default",
          "statistics": {
            "characters_converted": 200,
            "characters_unconverted": 100,
            "paragraphs_converted": 5,
            "paragraphs_unconverted": 3
          }
        }
      },
      "ChapterResponseModel": {
        "properties": {
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id",
            "description": "The ID of the chapter."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the chapter."
          },
          "last_conversion_date_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix",
            "description": "The last conversion date of the chapter."
          },
          "conversion_progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversion Progress",
            "description": "The conversion progress of the chapter."
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded",
            "description": "Whether the chapter can be downloaded."
          },
          "state": {
            "type": "string",
            "enum": [
              "default",
              "converting"
            ],
            "title": "State",
            "description": "The state of the chapter."
          },
          "has_video": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Video",
            "description": "Whether the chapter has a video."
          },
          "statistics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChapterStatisticsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The statistics of the chapter."
          },
          "last_conversion_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Error",
            "description": "The last conversion error of the chapter."
          }
        },
        "type": "object",
        "required": [
          "chapter_id",
          "name",
          "can_be_downloaded",
          "state"
        ],
        "title": "ChapterResponseModel",
        "example": {
          "can_be_downloaded": true,
          "chapter_id": "aw1NgEzBg83R7vgmiJt6",
          "conversion_progress": 0.5,
          "last_conversion_date_unix": 1714204800,
          "last_conversion_error": "Error message",
          "name": "Chapter 1",
          "state": "converting",
          "statistics": {
            "characters_converted": 500,
            "characters_unconverted": 1000,
            "paragraphs_converted": 20,
            "paragraphs_unconverted": 10
          }
        }
      },
      "ChapterResponseModelInternal": {
        "properties": {
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id",
            "description": "The ID of the chapter."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the chapter."
          },
          "last_conversion_date_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix",
            "description": "The last conversion date of the chapter."
          },
          "conversion_progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversion Progress",
            "description": "The conversion progress of the chapter."
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded",
            "description": "Whether the chapter can be downloaded."
          },
          "state": {
            "type": "string",
            "enum": [
              "default",
              "converting"
            ],
            "title": "State",
            "description": "The state of the chapter."
          },
          "has_video": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Video",
            "description": "Whether the chapter has a video."
          },
          "statistics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChapterStatisticsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The statistics of the chapter."
          },
          "last_conversion_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Error",
            "description": "The last conversion error of the chapter."
          },
          "content": {
            "$ref": "#/components/schemas/ChapterContentResponseModel"
          },
          "last_block_ids_order_change_unix_ms": {
            "type": "integer",
            "title": "Last Block Ids Order Change Unix Ms"
          },
          "last_block_conversion_unix_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Block Conversion Unix Ms"
          }
        },
        "type": "object",
        "required": [
          "chapter_id",
          "name",
          "can_be_downloaded",
          "state",
          "content",
          "last_block_ids_order_change_unix_ms"
        ],
        "title": "ChapterResponseModelInternal",
        "example": {
          "can_be_downloaded": true,
          "chapter_id": "aw1NgEzBg83R7vgmiJt6",
          "content": {
            "blocks": []
          },
          "conversion_progress": 0.5,
          "last_block_ids_order_change_unix_ms": 1714204800,
          "last_conversion_date_unix": 1714204800,
          "name": "Chapter 1",
          "state": "default",
          "statistics": {
            "characters_converted": 200,
            "characters_unconverted": 100,
            "paragraphs_converted": 5,
            "paragraphs_unconverted": 3
          }
        }
      },
      "ChapterSnapshotExtendedResponseModel": {
        "properties": {
          "chapter_snapshot_id": {
            "type": "string",
            "title": "Chapter Snapshot Id",
            "description": "The ID of the chapter snapshot."
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id",
            "description": "The ID of the chapter."
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix",
            "description": "The creation date of the chapter snapshot."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the chapter snapshot."
          },
          "character_alignments": {
            "items": {
              "$ref": "#/components/schemas/CharacterAlignmentModel"
            },
            "type": "array",
            "title": "Character Alignments"
          }
        },
        "type": "object",
        "required": [
          "chapter_snapshot_id",
          "project_id",
          "chapter_id",
          "created_at_unix",
          "name",
          "character_alignments"
        ],
        "title": "ChapterSnapshotExtendedResponseModel",
        "example": {
          "chapter_id": "aw1NgEzBg83R7vgmiJt3",
          "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
          "character_alignments": [],
          "created_at_unix": 1714204800,
          "name": "My Chapter Snapshot",
          "project_id": "aw1NgEzBg83R7vgmiJt2"
        }
      },
      "ChapterSnapshotResponseModel": {
        "properties": {
          "chapter_snapshot_id": {
            "type": "string",
            "title": "Chapter Snapshot Id",
            "description": "The ID of the chapter snapshot."
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id",
            "description": "The ID of the chapter."
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix",
            "description": "The creation date of the chapter snapshot."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the chapter snapshot."
          }
        },
        "type": "object",
        "required": [
          "chapter_snapshot_id",
          "project_id",
          "chapter_id",
          "created_at_unix",
          "name"
        ],
        "title": "ChapterSnapshotResponseModel",
        "example": {
          "chapter_id": "aw1NgEzBg83R7vgmiJt3",
          "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
          "created_at_unix": 1714204800,
          "name": "My Chapter Snapshot",
          "project_id": "aw1NgEzBg83R7vgmiJt2"
        }
      },
      "ChapterSnapshotsResponseModel": {
        "properties": {
          "snapshots": {
            "items": {
              "$ref": "#/components/schemas/ChapterSnapshotResponseModel"
            },
            "type": "array",
            "title": "Snapshots",
            "description": "List of chapter snapshots."
          }
        },
        "type": "object",
        "required": [
          "snapshots"
        ],
        "title": "ChapterSnapshotsResponseModel",
        "example": {
          "snapshots": [
            {
              "chapter_id": "aw1NgEzBg83R7vgmiJt3",
              "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
              "created_at_unix": 1714204800,
              "name": "My Chapter Snapshot",
              "project_id": "aw1NgEzBg83R7vgmiJt2"
            }
          ]
        }
      },
      "ChapterStatisticsResponseModel": {
        "properties": {
          "characters_unconverted": {
            "type": "integer",
            "title": "Characters Unconverted",
            "description": "The number of unconverted characters."
          },
          "characters_converted": {
            "type": "integer",
            "title": "Characters Converted",
            "description": "The number of converted characters."
          },
          "paragraphs_converted": {
            "type": "integer",
            "title": "Paragraphs Converted",
            "description": "The number of converted paragraphs."
          },
          "paragraphs_unconverted": {
            "type": "integer",
            "title": "Paragraphs Unconverted",
            "description": "The number of unconverted paragraphs."
          }
        },
        "type": "object",
        "required": [
          "characters_unconverted",
          "characters_converted",
          "paragraphs_converted",
          "paragraphs_unconverted"
        ],
        "title": "ChapterStatisticsResponseModel",
        "example": {
          "characters_converted": 500,
          "characters_unconverted": 1000,
          "paragraphs_converted": 20,
          "paragraphs_unconverted": 10
        }
      },
      "ChapterWithContentResponseModel": {
        "properties": {
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id",
            "description": "The ID of the chapter."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the chapter."
          },
          "last_conversion_date_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix",
            "description": "The last conversion date of the chapter."
          },
          "conversion_progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversion Progress",
            "description": "The conversion progress of the chapter."
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded",
            "description": "Whether the chapter can be downloaded."
          },
          "state": {
            "type": "string",
            "enum": [
              "default",
              "converting"
            ],
            "title": "State",
            "description": "The state of the chapter."
          },
          "has_video": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Video",
            "description": "Whether the chapter has a video."
          },
          "statistics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ChapterStatisticsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The statistics of the chapter."
          },
          "last_conversion_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Error",
            "description": "The last conversion error of the chapter."
          },
          "content": {
            "$ref": "#/components/schemas/ChapterContentResponseModel"
          }
        },
        "type": "object",
        "required": [
          "chapter_id",
          "name",
          "can_be_downloaded",
          "state",
          "content"
        ],
        "title": "ChapterWithContentResponseModel",
        "example": {
          "can_be_downloaded": true,
          "chapter_id": "aw1NgEzBg83R7vgmiJt6",
          "content": {
            "blocks": []
          },
          "conversion_progress": 0.5,
          "last_conversion_date_unix": 1714204800,
          "name": "Chapter 1",
          "state": "default",
          "statistics": {
            "characters_converted": 200,
            "characters_unconverted": 100,
            "paragraphs_converted": 5,
            "paragraphs_unconverted": 3
          }
        }
      },
      "CharacterAlignmentModel": {
        "properties": {
          "characters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Characters"
          },
          "character_start_times_seconds": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Character Start Times Seconds"
          },
          "character_end_times_seconds": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Character End Times Seconds"
          }
        },
        "type": "object",
        "required": [
          "characters",
          "character_start_times_seconds",
          "character_end_times_seconds"
        ],
        "title": "CharacterAlignmentModel"
      },
      "CharacterAlignmentResponseModel": {
        "properties": {
          "characters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Characters"
          },
          "character_start_times_seconds": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Character Start Times Seconds"
          },
          "character_end_times_seconds": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Character End Times Seconds"
          }
        },
        "type": "object",
        "required": [
          "characters",
          "character_start_times_seconds",
          "character_end_times_seconds"
        ],
        "title": "CharacterAlignmentResponseModel"
      },
      "ChargeInfo": {
        "properties": {
          "amount_usd": {
            "type": "number",
            "title": "Amount Usd"
          },
          "info": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InternalChargeInfo"
              },
              {
                "$ref": "#/components/schemas/EnterpriseChargeInfo"
              },
              {
                "$ref": "#/components/schemas/StripeChargeInfo"
              }
            ],
            "title": "Info",
            "discriminator": {
              "propertyName": "kind",
              "mapping": {
                "enterprise": "#/components/schemas/EnterpriseChargeInfo",
                "internal_elevenlabs": "#/components/schemas/InternalChargeInfo",
                "stripe": "#/components/schemas/StripeChargeInfo"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "amount_usd",
          "info"
        ],
        "title": "ChargeInfo",
        "description": "ChargeInfo response, returned to the user."
      },
      "ChatLibraryPageResponseModel": {
        "properties": {
          "chats": {
            "items": {
              "$ref": "#/components/schemas/ListedChatResponseModel"
            },
            "type": "array",
            "title": "Chats"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          }
        },
        "type": "object",
        "required": [
          "chats",
          "page"
        ],
        "title": "ChatLibraryPageResponseModel"
      },
      "ChatMessage": {
        "properties": {
          "parent_message_id": {
            "type": "string",
            "title": "Parent Message Id"
          },
          "created_at_utc": {
            "type": "string",
            "format": "date-time",
            "title": "Created At Utc"
          },
          "is_user_turn": {
            "type": "boolean",
            "title": "Is User Turn"
          },
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt"
          },
          "music_prompt": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ]
          },
          "mask_regions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TimeRange"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mask Regions"
          },
          "song_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Song Id"
          }
        },
        "type": "object",
        "required": [
          "parent_message_id",
          "created_at_utc",
          "is_user_turn",
          "prompt",
          "music_prompt",
          "mask_regions",
          "song_id"
        ],
        "title": "ChatMessage"
      },
      "ChatResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "created_at_utc": {
            "type": "string",
            "format": "date-time",
            "title": "Created At Utc"
          },
          "updated_at_utc": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At Utc"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "cover_art_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Art Url"
          },
          "graph": {
            "additionalProperties": {
              "$ref": "#/components/schemas/SelectionGroup"
            },
            "type": "object",
            "title": "Graph"
          },
          "messages": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ChatMessage"
            },
            "type": "object",
            "title": "Messages"
          },
          "songs": {
            "items": {
              "$ref": "#/components/schemas/SongResponseModel"
            },
            "type": "array",
            "title": "Songs"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "created_at_utc",
          "updated_at_utc",
          "graph",
          "messages",
          "songs"
        ],
        "title": "ChatResponseModel"
      },
      "CheckoutSession": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "CheckoutSession"
      },
      "ClaimIdListResponse": {
        "properties": {
          "ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Ids"
          }
        },
        "type": "object",
        "required": [
          "ids"
        ],
        "title": "ClaimIdListResponse"
      },
      "ClaimResponse": {
        "properties": {
          "task_description_id": {
            "type": "string",
            "format": "uuid",
            "title": "Task Description Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "processed": {
            "type": "boolean",
            "title": "Processed"
          },
          "processed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed At"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClaimResult"
              },
              {
                "type": "null"
              }
            ]
          },
          "instance_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instance Id"
          }
        },
        "type": "object",
        "required": [
          "task_description_id",
          "created_at",
          "processed",
          "user_id"
        ],
        "title": "ClaimResponse"
      },
      "ClaimResponseModel": {
        "properties": {
          "claim_id": {
            "type": "string",
            "format": "uuid",
            "title": "Claim Id"
          }
        },
        "type": "object",
        "required": [
          "claim_id"
        ],
        "title": "ClaimResponseModel"
      },
      "ClaimResult": {
        "type": "string",
        "enum": [
          "assigned",
          "expired",
          "too_many_active_tasks",
          "rejected"
        ],
        "title": "ClaimResult"
      },
      "ClientEvent": {
        "type": "string",
        "enum": [
          "conversation_initiation_metadata",
          "asr_initiation_metadata",
          "ping",
          "audio",
          "interruption",
          "user_transcript",
          "agent_response",
          "agent_response_correction",
          "client_tool_call",
          "mcp_tool_call",
          "mcp_connection_status",
          "agent_tool_response",
          "vad_score",
          "internal_turn_probability",
          "internal_tentative_agent_response"
        ],
        "title": "ClientEvent"
      },
      "ClientToolConfig-Input": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "maximum": 120,
            "minimum": 1,
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete. Must be between 1 and 120 seconds (inclusive).",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "type": {
            "type": "string",
            "const": "client",
            "title": "Type",
            "description": "The type of tool",
            "default": "client"
          },
          "parameters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for any parameters to pass to the client"
          },
          "expects_response": {
            "type": "boolean",
            "title": "Expects Response",
            "description": "If true, calling this tool should block the conversation until the client responds with some response which is passed to the llm. If false then we will continue the conversation without waiting for the client to respond, this is useful to show content to a user but not block the conversation",
            "default": false
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig",
            "description": "Configuration for dynamic variables"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "title": "ClientToolConfig",
        "description": "A client tool is one that sends an event to the user's client to trigger something client side",
        "example": {
          "expects_response": false,
          "type": "client"
        }
      },
      "ClientToolConfig-Output": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "maximum": 120,
            "minimum": 1,
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete. Must be between 1 and 120 seconds (inclusive).",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "type": {
            "type": "string",
            "const": "client",
            "title": "Type",
            "description": "The type of tool",
            "default": "client"
          },
          "parameters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for any parameters to pass to the client"
          },
          "expects_response": {
            "type": "boolean",
            "title": "Expects Response",
            "description": "If true, calling this tool should block the conversation until the client responds with some response which is passed to the llm. If false then we will continue the conversation without waiting for the client to respond, this is useful to show content to a user but not block the conversation",
            "default": false
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig",
            "description": "Configuration for dynamic variables"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "title": "ClientToolConfig",
        "description": "A client tool is one that sends an event to the user's client to trigger something client side",
        "example": {
          "expects_response": false,
          "type": "client"
        }
      },
      "CollectionContentItem": {
        "properties": {
          "added_at": {
            "type": "string",
            "format": "date-time",
            "title": "Added At"
          },
          "added_by": {
            "type": "string",
            "title": "Added By"
          },
          "_id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskDescriptionContentItem"
              },
              {
                "$ref": "#/components/schemas/NestedCollectionContentItem"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "added_at",
          "added_by",
          "_id",
          "data"
        ],
        "title": "CollectionContentItem"
      },
      "CollectionContentItemResponse": {
        "properties": {
          "added_at": {
            "type": "string",
            "format": "date-time",
            "title": "Added At"
          },
          "added_by": {
            "type": "string",
            "title": "Added By"
          },
          "item_id": {
            "type": "string",
            "format": "uuid",
            "title": "Item Id"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskDescriptionContentItemResponse"
              },
              {
                "$ref": "#/components/schemas/NestedCollectionContentItemResponse"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "added_at",
          "added_by",
          "item_id",
          "data"
        ],
        "title": "CollectionContentItemResponse"
      },
      "CollectionContentKind": {
        "type": "string",
        "enum": [
          "task_description",
          "subcollection"
        ],
        "title": "CollectionContentKind"
      },
      "CollectionModel": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "contents": {
            "items": {
              "$ref": "#/components/schemas/CollectionContentItem"
            },
            "type": "array",
            "title": "Contents"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "contents"
        ],
        "title": "CollectionModel"
      },
      "CollectionResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "contents": {
            "items": {
              "$ref": "#/components/schemas/CollectionContentItemResponse"
            },
            "type": "array",
            "title": "Contents"
          },
          "is_root": {
            "type": "boolean",
            "title": "Is Root"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "contents",
          "is_root"
        ],
        "title": "CollectionResponse"
      },
      "CollectionsListModel": {
        "properties": {
          "collections": {
            "items": {
              "$ref": "#/components/schemas/CollectionModel"
            },
            "type": "array",
            "title": "Collections"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          }
        },
        "type": "object",
        "required": [
          "collections",
          "total_count"
        ],
        "title": "CollectionsListModel"
      },
      "ComputeSpeakerEmbeddingCrossEnvResponseModel": {
        "properties": {
          "speaker_embedding_b64": {
            "type": "string",
            "title": "Speaker Embedding B64"
          }
        },
        "type": "object",
        "required": [
          "speaker_embedding_b64"
        ],
        "title": "ComputeSpeakerEmbeddingCrossEnvResponseModel"
      },
      "ConnectIntegrationOAuthResponseModel": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "authorization_url": {
            "type": "string",
            "title": "Authorization Url"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "oauth_provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IntegrationLibraryOAuthProviders"
              },
              {
                "$ref": "#/components/schemas/IntegrationLibraryExternalMCPAuthorizationProviders"
              }
            ],
            "title": "Oauth Provider"
          }
        },
        "type": "object",
        "required": [
          "success",
          "authorization_url",
          "state",
          "oauth_provider"
        ],
        "title": "ConnectIntegrationOAuthResponseModel",
        "description": "Response model for connecting a new integration via OAuth."
      },
      "ConnectIntegrationResponseModel": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "ConnectIntegrationResponseModel",
        "description": "Response model for connecting a new integration."
      },
      "ConsolidatedBillingSubscriptionSyncCrossEnvResponse": {
        "properties": {
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "character_count": {
            "type": "integer",
            "title": "Character Count"
          },
          "subscription_fields_to_update": {
            "type": "object",
            "title": "Subscription Fields To Update"
          },
          "subscription_fields_to_remove": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": true,
            "title": "Subscription Fields To Remove"
          }
        },
        "type": "object",
        "required": [
          "workspace_id",
          "character_count",
          "subscription_fields_to_update",
          "subscription_fields_to_remove"
        ],
        "title": "ConsolidatedBillingSubscriptionSyncCrossEnvResponse"
      },
      "ContactSalesForm": {
        "properties": {
          "company": {
            "type": "string",
            "title": "Company"
          },
          "detail": {
            "type": "string",
            "title": "Detail"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "expected_monthly_usage": {
            "type": "string",
            "enum": [
              "Unsure",
              "I require one-time usage",
              "Below 7M characters (\u003C140h of content)",
              "Between 7M and 50M characters (140h to 1,000h of content)",
              "Above 50M characters (\u003E1,000h of content)"
            ],
            "title": "Expected Monthly Usage"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "industry": {
            "type": "string",
            "title": "Industry"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "region": {
            "type": "string",
            "title": "Region"
          },
          "website": {
            "type": "string",
            "title": "Website"
          }
        },
        "type": "object",
        "required": [
          "company",
          "detail",
          "email",
          "expected_monthly_usage",
          "first_name",
          "last_name",
          "industry",
          "phone_number",
          "region",
          "website"
        ],
        "title": "ContactSalesForm"
      },
      "ContentModel": {
        "properties": {
          "version_id": {
            "type": "integer",
            "title": "Version Id"
          },
          "content": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranscriptionTaskContent"
              },
              {
                "$ref": "#/components/schemas/ReviewTaskContent"
              },
              {
                "$ref": "#/components/schemas/TranscriptionV2TaskContent"
              },
              {
                "$ref": "#/components/schemas/CaptionsTaskContent"
              },
              {
                "$ref": "#/components/schemas/SubtitlesTaskContent"
              },
              {
                "$ref": "#/components/schemas/DubsTaskContent"
              }
            ],
            "title": "Content",
            "discriminator": {
              "propertyName": "kind",
              "mapping": {
                "captions": "#/components/schemas/CaptionsTaskContent",
                "dub": "#/components/schemas/DubsTaskContent",
                "review": "#/components/schemas/ReviewTaskContent",
                "subtitles": "#/components/schemas/SubtitlesTaskContent",
                "transcription": "#/components/schemas/TranscriptionTaskContent",
                "transcription_v2": "#/components/schemas/TranscriptionV2TaskContent"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "version_id",
          "content"
        ],
        "title": "ContentModel"
      },
      "ContractCreationRequest": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "$ref": "#/components/schemas/ContractCreationState"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "email"
        ],
        "title": "ContractCreationRequest"
      },
      "ContractCreationRequestList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/ContractCreationRequest"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ContractCreationRequestList"
      },
      "ContractCreationState": {
        "type": "string",
        "enum": [
          "init",
          "registered",
          "approved",
          "rejected",
          "deel_contract_created",
          "need_invite_email",
          "completed",
          "cancelled"
        ],
        "title": "ContractCreationState"
      },
      "Contributor": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "name",
          "role"
        ],
        "title": "Contributor"
      },
      "ConvAIDynamicVariable": {
        "properties": {
          "variable_name": {
            "type": "string",
            "title": "Variable Name"
          }
        },
        "type": "object",
        "required": [
          "variable_name"
        ],
        "title": "ConvAIDynamicVariable",
        "description": "Used to reference a dynamic variable."
      },
      "ConvAINewSecretConfig": {
        "properties": {
          "type": {
            "type": "string",
            "const": "new",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "value"
        ],
        "title": "ConvAINewSecretConfig"
      },
      "ConvAISecretLocator": {
        "properties": {
          "secret_id": {
            "type": "string",
            "title": "Secret Id"
          }
        },
        "type": "object",
        "required": [
          "secret_id"
        ],
        "title": "ConvAISecretLocator",
        "description": "Used to reference a secret from the agent's secret store."
      },
      "ConvAIStoredSecretDependencies": {
        "properties": {
          "tools": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableToolIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownToolIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableToolIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownToolIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Tools"
          },
          "agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Agents"
          },
          "others": {
            "items": {
              "$ref": "#/components/schemas/SecretDependencyType"
            },
            "type": "array",
            "title": "Others"
          },
          "phone_numbers": {
            "items": {
              "$ref": "#/components/schemas/DependentPhoneNumberIdentifier"
            },
            "type": "array",
            "title": "Phone Numbers"
          }
        },
        "type": "object",
        "required": [
          "tools",
          "agents",
          "others"
        ],
        "title": "ConvAIStoredSecretDependencies"
      },
      "ConvAIUserSecretDBModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "encrypted_value": {
            "type": "string",
            "title": "Encrypted Value"
          },
          "nonce": {
            "type": "string",
            "title": "Nonce"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "encrypted_value",
          "nonce"
        ],
        "title": "ConvAIUserSecretDBModel",
        "description": "User-specific secret model that are not shared with other users in a workspace."
      },
      "ConvAIWebhooks": {
        "properties": {
          "post_call_webhook_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Post Call Webhook Id"
          },
          "send_audio": {
            "type": "boolean",
            "title": "Send Audio",
            "description": "Whether to send audio data with post-call webhooks for ConvAI conversations",
            "default": false
          }
        },
        "type": "object",
        "title": "ConvAIWebhooks"
      },
      "ConvAIWorkspaceStoredSecretConfig": {
        "properties": {
          "type": {
            "type": "string",
            "const": "stored",
            "title": "Type"
          },
          "secret_id": {
            "type": "string",
            "title": "Secret Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "used_by": {
            "$ref": "#/components/schemas/ConvAIStoredSecretDependencies"
          }
        },
        "type": "object",
        "required": [
          "type",
          "secret_id",
          "name",
          "used_by"
        ],
        "title": "ConvAIWorkspaceStoredSecretConfig"
      },
      "ConversationChargingCommonModel": {
        "properties": {
          "dev_discount": {
            "type": "boolean",
            "title": "Dev Discount",
            "default": false
          },
          "is_burst": {
            "type": "boolean",
            "title": "Is Burst",
            "default": false
          },
          "tier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tier"
          },
          "llm_usage": {
            "$ref": "#/components/schemas/LLMCategoryUsage"
          },
          "llm_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Price"
          },
          "llm_charge": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Charge"
          },
          "call_charge": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Call Charge"
          }
        },
        "type": "object",
        "title": "ConversationChargingCommonModel"
      },
      "ConversationConfig": {
        "properties": {
          "text_only": {
            "type": "boolean",
            "title": "Text Only",
            "description": "If enabled audio will not be processed and only text will be used, use to avoid audio pricing.",
            "default": false,
            "x-convai-client-override": true
          },
          "max_duration_seconds": {
            "type": "integer",
            "title": "Max Duration Seconds",
            "description": "The maximum duration of a conversation in seconds",
            "default": 600
          },
          "client_events": {
            "items": {
              "$ref": "#/components/schemas/ClientEvent"
            },
            "type": "array",
            "title": "Client Events",
            "description": "The events that will be sent to the client"
          }
        },
        "type": "object",
        "title": "ConversationConfig",
        "example": {
          "client_events": [
            "audio",
            "interruption"
          ],
          "max_duration_seconds": 600
        }
      },
      "ConversationConfigClientOverride-Input": {
        "properties": {
          "tts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSConversationalConfigOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational text to speech"
          },
          "conversation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationConfigOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational events"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentConfigOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Agent specific configuration"
          }
        },
        "type": "object",
        "title": "ConversationConfigClientOverride",
        "example": {
          "agent": {
            "first_message": "Hello, how can I help you today?",
            "language": "en",
            "prompt": {
              "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation."
            }
          },
          "tts": {
            "voice_id": "cjVigY5qzO86Huf0OWal"
          }
        }
      },
      "ConversationConfigClientOverride-Output": {
        "properties": {
          "tts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSConversationalConfigOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational text to speech"
          },
          "conversation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationConfigOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational events"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentConfigOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Agent specific configuration"
          }
        },
        "type": "object",
        "title": "ConversationConfigClientOverride",
        "example": {
          "agent": {
            "first_message": "Hello, how can I help you today?",
            "language": "en",
            "prompt": {
              "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation."
            }
          },
          "tts": {
            "voice_id": "cjVigY5qzO86Huf0OWal"
          }
        }
      },
      "ConversationConfigClientOverrideConfig-Input": {
        "properties": {
          "tts": {
            "$ref": "#/components/schemas/TTSConversationalConfigOverrideConfig",
            "description": "Configures overrides for nested fields."
          },
          "conversation": {
            "$ref": "#/components/schemas/ConversationConfigOverrideConfig",
            "description": "Configures overrides for nested fields."
          },
          "agent": {
            "$ref": "#/components/schemas/AgentConfigOverrideConfig",
            "description": "Configures overrides for nested fields."
          }
        },
        "type": "object",
        "title": "ConversationConfigClientOverrideConfig"
      },
      "ConversationConfigClientOverrideConfig-Output": {
        "properties": {
          "tts": {
            "$ref": "#/components/schemas/TTSConversationalConfigOverrideConfig",
            "description": "Configures overrides for nested fields."
          },
          "conversation": {
            "$ref": "#/components/schemas/ConversationConfigOverrideConfig",
            "description": "Configures overrides for nested fields."
          },
          "agent": {
            "$ref": "#/components/schemas/AgentConfigOverrideConfig",
            "description": "Configures overrides for nested fields."
          }
        },
        "type": "object",
        "title": "ConversationConfigClientOverrideConfig"
      },
      "ConversationConfigOverride": {
        "properties": {
          "text_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Only",
            "description": "If enabled audio will not be processed and only text will be used, use to avoid audio pricing.",
            "x-convai-client-override": true
          }
        },
        "type": "object",
        "title": "ConversationConfigOverride"
      },
      "ConversationConfigOverrideConfig": {
        "properties": {
          "text_only": {
            "type": "boolean",
            "title": "Text Only",
            "description": "Whether to allow overriding the text_only field.",
            "default": false
          }
        },
        "type": "object",
        "title": "ConversationConfigOverrideConfig"
      },
      "ConversationConfigWorkflowOverride": {
        "properties": {
          "text_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Only",
            "description": "If enabled audio will not be processed and only text will be used, use to avoid audio pricing.",
            "x-convai-client-override": true
          },
          "max_duration_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Duration Seconds",
            "description": "The maximum duration of a conversation in seconds"
          },
          "client_events": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ClientEvent"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Events",
            "description": "The events that will be sent to the client"
          }
        },
        "type": "object",
        "title": "ConversationConfigWorkflowOverride",
        "example": {
          "client_events": [
            "audio",
            "interruption"
          ],
          "max_duration_seconds": 600
        }
      },
      "ConversationDeletionSettings": {
        "properties": {
          "deletion_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deletion Time Unix Secs"
          },
          "deleted_logs_at_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Logs At Time Unix Secs"
          },
          "deleted_audio_at_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Audio At Time Unix Secs"
          },
          "deleted_transcript_at_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted Transcript At Time Unix Secs"
          },
          "delete_transcript_and_pii": {
            "type": "boolean",
            "title": "Delete Transcript And Pii",
            "default": false
          },
          "delete_audio": {
            "type": "boolean",
            "title": "Delete Audio",
            "default": false
          }
        },
        "type": "object",
        "title": "ConversationDeletionSettings"
      },
      "ConversationHistoryAnalysisCommonModel": {
        "properties": {
          "evaluation_criteria_results": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ConversationHistoryEvaluationCriteriaResultCommonModel"
            },
            "type": "object",
            "title": "Evaluation Criteria Results"
          },
          "data_collection_results": {
            "additionalProperties": {
              "$ref": "#/components/schemas/DataCollectionResultCommonModel"
            },
            "type": "object",
            "title": "Data Collection Results"
          },
          "call_successful": {
            "$ref": "#/components/schemas/EvaluationSuccessResult"
          },
          "transcript_summary": {
            "type": "string",
            "title": "Transcript Summary"
          },
          "call_summary_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Call Summary Title"
          }
        },
        "type": "object",
        "required": [
          "call_successful",
          "transcript_summary"
        ],
        "title": "ConversationHistoryAnalysisCommonModel"
      },
      "ConversationHistoryBatchCallModel": {
        "properties": {
          "batch_call_id": {
            "type": "string",
            "title": "Batch Call Id"
          },
          "batch_call_recipient_id": {
            "type": "string",
            "title": "Batch Call Recipient Id"
          }
        },
        "type": "object",
        "required": [
          "batch_call_id",
          "batch_call_recipient_id"
        ],
        "title": "ConversationHistoryBatchCallModel"
      },
      "ConversationHistoryElevenAssistantCommonModel": {
        "properties": {
          "is_eleven_assistant": {
            "type": "boolean",
            "title": "Is Eleven Assistant",
            "default": false
          }
        },
        "type": "object",
        "title": "ConversationHistoryElevenAssistantCommonModel"
      },
      "ConversationHistoryErrorCommonModel": {
        "properties": {
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "ConversationHistoryErrorCommonModel"
      },
      "ConversationHistoryEvaluationCriteriaResultCommonModel": {
        "properties": {
          "criteria_id": {
            "type": "string",
            "title": "Criteria Id"
          },
          "result": {
            "$ref": "#/components/schemas/EvaluationSuccessResult"
          },
          "rationale": {
            "type": "string",
            "title": "Rationale"
          }
        },
        "type": "object",
        "required": [
          "criteria_id",
          "result",
          "rationale"
        ],
        "title": "ConversationHistoryEvaluationCriteriaResultCommonModel"
      },
      "ConversationHistoryFeedbackCommonModel": {
        "properties": {
          "overall_score": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserFeedbackScore"
              },
              {
                "type": "null"
              }
            ]
          },
          "likes": {
            "type": "integer",
            "title": "Likes",
            "default": 0
          },
          "dislikes": {
            "type": "integer",
            "title": "Dislikes",
            "default": 0
          }
        },
        "type": "object",
        "title": "ConversationHistoryFeedbackCommonModel"
      },
      "ConversationHistoryMetadataCommonModel": {
        "properties": {
          "start_time_unix_secs": {
            "type": "integer",
            "title": "Start Time Unix Secs"
          },
          "accepted_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accepted Time Unix Secs"
          },
          "call_duration_secs": {
            "type": "integer",
            "title": "Call Duration Secs"
          },
          "cost": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "deletion_settings": {
            "$ref": "#/components/schemas/ConversationDeletionSettings"
          },
          "feedback": {
            "$ref": "#/components/schemas/ConversationHistoryFeedbackCommonModel"
          },
          "authorization_method": {
            "$ref": "#/components/schemas/AuthorizationMethod",
            "default": "public"
          },
          "charging": {
            "$ref": "#/components/schemas/ConversationChargingCommonModel"
          },
          "phone_call": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ConversationHistoryTwilioPhoneCallModel"
                  },
                  {
                    "$ref": "#/components/schemas/ConversationHistorySIPTrunkingPhoneCallModel"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "sip_trunking": "#/components/schemas/ConversationHistorySIPTrunkingPhoneCallModel",
                    "twilio": "#/components/schemas/ConversationHistoryTwilioPhoneCallModel"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Call"
          },
          "batch_call": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationHistoryBatchCallModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "termination_reason": {
            "type": "string",
            "title": "Termination Reason",
            "default": ""
          },
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationHistoryErrorCommonModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "main_language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Main Language"
          },
          "rag_usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationHistoryRagUsageCommonModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "text_only": {
            "type": "boolean",
            "title": "Text Only",
            "default": false
          },
          "features_usage": {
            "$ref": "#/components/schemas/FeaturesUsageCommonModel"
          },
          "eleven_assistant": {
            "$ref": "#/components/schemas/ConversationHistoryElevenAssistantCommonModel"
          },
          "initiator_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initiator Id"
          },
          "conversation_initiation_source": {
            "$ref": "#/components/schemas/ConversationInitiationSource",
            "default": "unknown"
          },
          "conversation_initiation_source_version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+(-[a-zA-Z0-9.-]+)?$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Initiation Source Version"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          }
        },
        "type": "object",
        "required": [
          "start_time_unix_secs",
          "call_duration_secs"
        ],
        "title": "ConversationHistoryMetadataCommonModel"
      },
      "ConversationHistoryRagUsageCommonModel": {
        "properties": {
          "usage_count": {
            "type": "integer",
            "title": "Usage Count"
          },
          "embedding_model": {
            "type": "string",
            "title": "Embedding Model"
          }
        },
        "type": "object",
        "required": [
          "usage_count",
          "embedding_model"
        ],
        "title": "ConversationHistoryRagUsageCommonModel"
      },
      "ConversationHistorySIPTrunkingPhoneCallModel": {
        "properties": {
          "direction": {
            "type": "string",
            "enum": [
              "inbound",
              "outbound"
            ],
            "title": "Direction"
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "agent_number": {
            "type": "string",
            "title": "Agent Number"
          },
          "external_number": {
            "type": "string",
            "title": "External Number"
          },
          "type": {
            "type": "string",
            "const": "sip_trunking",
            "title": "Type"
          },
          "call_sid": {
            "type": "string",
            "title": "Call Sid"
          }
        },
        "type": "object",
        "required": [
          "direction",
          "phone_number_id",
          "agent_number",
          "external_number",
          "type",
          "call_sid"
        ],
        "title": "ConversationHistorySIPTrunkingPhoneCallModel"
      },
      "ConversationHistoryTranscriptCommonModel-Input": {
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "user",
              "agent"
            ],
            "title": "Role"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "tool_calls": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallCommonModel"
            },
            "type": "array",
            "title": "Tool Calls"
          },
          "tool_results": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptOtherToolsResultCommonModel"
                },
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptSystemToolResultCommonModel"
                }
              ]
            },
            "type": "array",
            "title": "Tool Results"
          },
          "feedback": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserFeedback"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Override"
          },
          "time_in_call_secs": {
            "type": "integer",
            "title": "Time In Call Secs"
          },
          "conversation_turn_metrics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationTurnMetrics"
              },
              {
                "type": "null"
              }
            ]
          },
          "rag_retrieval_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RagRetrievalInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLMUsage-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "interrupted": {
            "type": "boolean",
            "title": "Interrupted",
            "default": false
          },
          "original_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Message"
          },
          "source_medium": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "audio",
                  "text"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Medium"
          }
        },
        "type": "object",
        "required": [
          "role",
          "time_in_call_secs"
        ],
        "title": "ConversationHistoryTranscriptCommonModel"
      },
      "ConversationHistoryTranscriptCommonModel-Output": {
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "user",
              "agent"
            ],
            "title": "Role"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "tool_calls": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallCommonModel"
            },
            "type": "array",
            "title": "Tool Calls"
          },
          "tool_results": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptOtherToolsResultCommonModel"
                },
                {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptSystemToolResultCommonModel"
                }
              ]
            },
            "type": "array",
            "title": "Tool Results"
          },
          "feedback": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserFeedback"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llm Override"
          },
          "time_in_call_secs": {
            "type": "integer",
            "title": "Time In Call Secs"
          },
          "conversation_turn_metrics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationTurnMetrics"
              },
              {
                "type": "null"
              }
            ]
          },
          "rag_retrieval_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RagRetrievalInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "llm_usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLMUsage-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "interrupted": {
            "type": "boolean",
            "title": "Interrupted",
            "default": false
          },
          "original_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Message"
          },
          "source_medium": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "audio",
                  "text"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Medium"
          }
        },
        "type": "object",
        "required": [
          "role",
          "time_in_call_secs"
        ],
        "title": "ConversationHistoryTranscriptCommonModel"
      },
      "ConversationHistoryTranscriptOtherToolsResultCommonModel": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "result_value": {
            "type": "string",
            "title": "Result Value"
          },
          "is_error": {
            "type": "boolean",
            "title": "Is Error"
          },
          "tool_has_been_called": {
            "type": "boolean",
            "title": "Tool Has Been Called"
          },
          "tool_latency_secs": {
            "type": "number",
            "title": "Tool Latency Secs",
            "default": 0
          },
          "dynamic_variable_updates": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableUpdateCommonModel"
            },
            "type": "array",
            "title": "Dynamic Variable Updates"
          },
          "type": {
            "type": "string",
            "enum": [
              "client",
              "webhook",
              "mcp"
            ],
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "tool_name",
          "result_value",
          "is_error",
          "tool_has_been_called",
          "type"
        ],
        "title": "ConversationHistoryTranscriptOtherToolsResultCommonModel"
      },
      "ConversationHistoryTranscriptSystemToolResultCommonModel": {
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "result_value": {
            "type": "string",
            "title": "Result Value"
          },
          "is_error": {
            "type": "boolean",
            "title": "Is Error"
          },
          "tool_has_been_called": {
            "type": "boolean",
            "title": "Tool Has Been Called"
          },
          "tool_latency_secs": {
            "type": "number",
            "title": "Tool Latency Secs",
            "default": 0
          },
          "dynamic_variable_updates": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableUpdateCommonModel"
            },
            "type": "array",
            "title": "Dynamic Variable Updates"
          },
          "type": {
            "type": "string",
            "const": "system",
            "title": "Type"
          },
          "result": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/EndCallToolResultModel"
                  },
                  {
                    "$ref": "#/components/schemas/LanguageDetectionToolResultModel"
                  },
                  {
                    "$ref": "#/components/schemas/TransferToAgentToolResultSuccessModel"
                  },
                  {
                    "$ref": "#/components/schemas/TransferToAgentToolResultErrorModel"
                  },
                  {
                    "$ref": "#/components/schemas/TransferToNumberResultTwilioSuccessModel"
                  },
                  {
                    "$ref": "#/components/schemas/TransferToNumberResultSipSuccessModel"
                  },
                  {
                    "$ref": "#/components/schemas/TransferToNumberResultErrorModel"
                  },
                  {
                    "$ref": "#/components/schemas/SkipTurnToolResponseModel"
                  },
                  {
                    "$ref": "#/components/schemas/PlayDTMFResultSuccessModel"
                  },
                  {
                    "$ref": "#/components/schemas/PlayDTMFResultErrorModel"
                  }
                ],
                "discriminator": {
                  "propertyName": "result_type",
                  "mapping": {
                    "end_call_success": "#/components/schemas/EndCallToolResultModel",
                    "language_detection_success": "#/components/schemas/LanguageDetectionToolResultModel",
                    "play_dtmf_error": "#/components/schemas/PlayDTMFResultErrorModel",
                    "play_dtmf_success": "#/components/schemas/PlayDTMFResultSuccessModel",
                    "skip_turn_success": "#/components/schemas/SkipTurnToolResponseModel",
                    "transfer_to_agent_error": "#/components/schemas/TransferToAgentToolResultErrorModel",
                    "transfer_to_agent_success": "#/components/schemas/TransferToAgentToolResultSuccessModel",
                    "transfer_to_number_error": "#/components/schemas/TransferToNumberResultErrorModel",
                    "transfer_to_number_sip_success": "#/components/schemas/TransferToNumberResultSipSuccessModel",
                    "transfer_to_number_twilio_success": "#/components/schemas/TransferToNumberResultTwilioSuccessModel"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Result"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "tool_name",
          "result_value",
          "is_error",
          "tool_has_been_called",
          "type"
        ],
        "title": "ConversationHistoryTranscriptSystemToolResultCommonModel"
      },
      "ConversationHistoryTranscriptToolCallClientDetails": {
        "properties": {
          "type": {
            "type": "string",
            "const": "client",
            "title": "Type",
            "default": "client"
          },
          "parameters": {
            "type": "string",
            "title": "Parameters"
          }
        },
        "type": "object",
        "required": [
          "parameters"
        ],
        "title": "ConversationHistoryTranscriptToolCallClientDetails"
      },
      "ConversationHistoryTranscriptToolCallCommonModel": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ToolType"
              },
              {
                "type": "null"
              }
            ]
          },
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "params_as_json": {
            "type": "string",
            "title": "Params As Json"
          },
          "tool_has_been_called": {
            "type": "boolean",
            "title": "Tool Has Been Called"
          },
          "tool_details": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallWebhookDetails"
                  },
                  {
                    "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallClientDetails"
                  },
                  {
                    "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallMCPDetails"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "client": "#/components/schemas/ConversationHistoryTranscriptToolCallClientDetails",
                    "mcp": "#/components/schemas/ConversationHistoryTranscriptToolCallMCPDetails",
                    "webhook": "#/components/schemas/ConversationHistoryTranscriptToolCallWebhookDetails"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Details"
          }
        },
        "type": "object",
        "required": [
          "request_id",
          "tool_name",
          "params_as_json",
          "tool_has_been_called"
        ],
        "title": "ConversationHistoryTranscriptToolCallCommonModel"
      },
      "ConversationHistoryTranscriptToolCallMCPDetails": {
        "properties": {
          "type": {
            "type": "string",
            "const": "mcp",
            "title": "Type",
            "default": "mcp"
          },
          "mcp_server_id": {
            "type": "string",
            "title": "Mcp Server Id"
          },
          "mcp_server_name": {
            "type": "string",
            "title": "Mcp Server Name"
          },
          "integration_type": {
            "type": "string",
            "title": "Integration Type"
          },
          "parameters": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Parameters"
          },
          "approval_policy": {
            "type": "string",
            "title": "Approval Policy"
          },
          "requires_approval": {
            "type": "boolean",
            "title": "Requires Approval",
            "default": false
          },
          "mcp_tool_name": {
            "type": "string",
            "title": "Mcp Tool Name",
            "default": ""
          },
          "mcp_tool_description": {
            "type": "string",
            "title": "Mcp Tool Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "mcp_server_id",
          "mcp_server_name",
          "integration_type",
          "approval_policy"
        ],
        "title": "ConversationHistoryTranscriptToolCallMCPDetails"
      },
      "ConversationHistoryTranscriptToolCallWebhookDetails": {
        "properties": {
          "type": {
            "type": "string",
            "const": "webhook",
            "title": "Type",
            "default": "webhook"
          },
          "method": {
            "type": "string",
            "title": "Method"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Headers"
          },
          "path_params": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Path Params"
          },
          "query_params": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Query Params"
          },
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          }
        },
        "type": "object",
        "required": [
          "method",
          "url"
        ],
        "title": "ConversationHistoryTranscriptToolCallWebhookDetails"
      },
      "ConversationHistoryTwilioPhoneCallModel": {
        "properties": {
          "direction": {
            "type": "string",
            "enum": [
              "inbound",
              "outbound"
            ],
            "title": "Direction"
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "agent_number": {
            "type": "string",
            "title": "Agent Number"
          },
          "external_number": {
            "type": "string",
            "title": "External Number"
          },
          "type": {
            "type": "string",
            "const": "twilio",
            "title": "Type"
          },
          "stream_sid": {
            "type": "string",
            "title": "Stream Sid"
          },
          "call_sid": {
            "type": "string",
            "title": "Call Sid"
          }
        },
        "type": "object",
        "required": [
          "direction",
          "phone_number_id",
          "agent_number",
          "external_number",
          "type",
          "stream_sid",
          "call_sid"
        ],
        "title": "ConversationHistoryTwilioPhoneCallModel"
      },
      "ConversationInitiationClientDataConfig-Input": {
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverrideConfig-Input",
            "description": "Overrides for the conversation configuration"
          },
          "custom_llm_extra_body": {
            "type": "boolean",
            "title": "Custom Llm Extra Body",
            "description": "Whether to include custom LLM extra body",
            "default": false
          },
          "enable_conversation_initiation_client_data_from_webhook": {
            "type": "boolean",
            "title": "Enable Conversation Initiation Client Data From Webhook",
            "description": "Whether to enable conversation initiation client data from webhooks",
            "default": false
          }
        },
        "type": "object",
        "title": "ConversationInitiationClientDataConfig",
        "example": {
          "custom_llm_extra_body": true,
          "enable_conversation_initiation_client_data_from_webhook": true
        }
      },
      "ConversationInitiationClientDataConfig-Output": {
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverrideConfig-Output",
            "description": "Overrides for the conversation configuration"
          },
          "custom_llm_extra_body": {
            "type": "boolean",
            "title": "Custom Llm Extra Body",
            "description": "Whether to include custom LLM extra body",
            "default": false
          },
          "enable_conversation_initiation_client_data_from_webhook": {
            "type": "boolean",
            "title": "Enable Conversation Initiation Client Data From Webhook",
            "description": "Whether to enable conversation initiation client data from webhooks",
            "default": false
          }
        },
        "type": "object",
        "title": "ConversationInitiationClientDataConfig",
        "example": {
          "custom_llm_extra_body": true,
          "enable_conversation_initiation_client_data_from_webhook": true
        }
      },
      "ConversationInitiationClientDataInternal": {
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Output"
          },
          "custom_llm_extra_body": {
            "type": "object",
            "title": "Custom Llm Extra Body"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "ID of the end user participating in this conversation (for agent owner's user identification)"
          },
          "source_info": {
            "$ref": "#/components/schemas/ConversationInitiationSourceInfo"
          },
          "dynamic_variables": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Dynamic Variables"
          }
        },
        "type": "object",
        "title": "ConversationInitiationClientDataInternal"
      },
      "ConversationInitiationClientDataRequest-Input": {
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Input"
          },
          "custom_llm_extra_body": {
            "type": "object",
            "title": "Custom Llm Extra Body"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "ID of the end user participating in this conversation (for agent owner's user identification)"
          },
          "source_info": {
            "$ref": "#/components/schemas/ConversationInitiationSourceInfo"
          },
          "dynamic_variables": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Dynamic Variables"
          }
        },
        "type": "object",
        "title": "ConversationInitiationClientDataRequest"
      },
      "ConversationInitiationClientDataRequest-Output": {
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Output"
          },
          "custom_llm_extra_body": {
            "type": "object",
            "title": "Custom Llm Extra Body"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "ID of the end user participating in this conversation (for agent owner's user identification)"
          },
          "source_info": {
            "$ref": "#/components/schemas/ConversationInitiationSourceInfo"
          },
          "dynamic_variables": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Dynamic Variables"
          }
        },
        "type": "object",
        "title": "ConversationInitiationClientDataRequest"
      },
      "ConversationInitiationClientDataWebhook": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL to send the webhook to"
          },
          "request_headers": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                }
              ]
            },
            "type": "object",
            "title": "Request Headers",
            "description": "The headers to send with the webhook request"
          }
        },
        "type": "object",
        "required": [
          "url",
          "request_headers"
        ],
        "title": "ConversationInitiationClientDataWebhook",
        "example": {
          "request_headers": {
            "Content-Type": "application/json"
          },
          "url": "https://example.com/webhook"
        }
      },
      "ConversationInitiationSource": {
        "type": "string",
        "enum": [
          "unknown",
          "android_sdk",
          "node_js_sdk",
          "react_native_sdk",
          "react_sdk",
          "js_sdk",
          "python_sdk",
          "widget",
          "sip_trunk",
          "twilio",
          "genesys",
          "swift_sdk"
        ],
        "title": "ConversationInitiationSource",
        "description": "Enum representing the possible sources for conversation initiation."
      },
      "ConversationInitiationSourceInfo": {
        "properties": {
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationSource"
              },
              {
                "type": "null"
              }
            ],
            "description": "Source of the conversation initiation"
          },
          "version": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+(-[a-zA-Z0-9.-]+)?$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "description": "The SDK version number"
          }
        },
        "type": "object",
        "title": "ConversationInitiationSourceInfo",
        "description": "Information about the source of conversation initiation"
      },
      "ConversationSignedUrlResponseModel": {
        "properties": {
          "signed_url": {
            "type": "string",
            "title": "Signed Url"
          }
        },
        "type": "object",
        "required": [
          "signed_url"
        ],
        "title": "ConversationSignedUrlResponseModel"
      },
      "ConversationSimulationSpecification": {
        "properties": {
          "simulated_user_config": {
            "$ref": "#/components/schemas/AgentConfigAPIModel-Input"
          },
          "tool_mock_config": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ToolMockConfig"
            },
            "type": "object",
            "title": "Tool Mock Config"
          },
          "partial_conversation_history": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel-Input"
            },
            "type": "array",
            "title": "Partial Conversation History",
            "description": "A partial conversation history to start the simulation from. If empty, simulation starts fresh."
          },
          "dynamic_variables": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Dynamic Variables"
          }
        },
        "type": "object",
        "required": [
          "simulated_user_config"
        ],
        "title": "ConversationSimulationSpecification",
        "description": "A specification that will be used to simulate a conversation between an agent and an AI user."
      },
      "ConversationSummaryResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Name"
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id"
          },
          "start_time_unix_secs": {
            "type": "integer",
            "title": "Start Time Unix Secs"
          },
          "call_duration_secs": {
            "type": "integer",
            "title": "Call Duration Secs"
          },
          "message_count": {
            "type": "integer",
            "title": "Message Count"
          },
          "status": {
            "type": "string",
            "enum": [
              "initiated",
              "in-progress",
              "processing",
              "done",
              "failed"
            ],
            "title": "Status"
          },
          "call_successful": {
            "$ref": "#/components/schemas/EvaluationSuccessResult"
          },
          "transcript_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transcript Summary"
          },
          "call_summary_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Call Summary Title"
          },
          "direction": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "inbound",
                  "outbound"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Direction"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "conversation_id",
          "start_time_unix_secs",
          "call_duration_secs",
          "message_count",
          "status",
          "call_successful"
        ],
        "title": "ConversationSummaryResponseModel"
      },
      "ConversationTokenDBModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id",
            "description": "The ID of the agent"
          },
          "conversation_token": {
            "type": "string",
            "title": "Conversation Token",
            "description": "The token for the agent"
          },
          "expiration_time_unix_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Time Unix Secs",
            "description": "The expiration time of the token in unix seconds"
          },
          "conversation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Id",
            "description": "The ID of the conversation"
          },
          "purpose": {
            "$ref": "#/components/schemas/ConversationTokenPurpose",
            "description": "The purpose of the token",
            "default": "signed_url"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "conversation_token"
        ],
        "title": "ConversationTokenDBModel",
        "example": {
          "agent_id": "agent_J3Pbu5gP6NNKBscdCdwB",
          "conversation_id": "conv_J3Pbu5gP6NNKBscdCdwB",
          "conversation_token": "1234567890",
          "expiration_time_unix_secs": 1716153600,
          "purpose": "signed_url"
        }
      },
      "ConversationTokenPurpose": {
        "type": "string",
        "enum": [
          "signed_url",
          "shareable_link"
        ],
        "title": "ConversationTokenPurpose"
      },
      "ConversationTurnMetrics": {
        "properties": {
          "metrics": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MetricRecord"
            },
            "type": "object",
            "title": "Metrics"
          }
        },
        "type": "object",
        "title": "ConversationTurnMetrics"
      },
      "ConversationalConfigAPIModel-Input": {
        "properties": {
          "asr": {
            "$ref": "#/components/schemas/ASRConversationalConfig",
            "description": "Configuration for conversational transcription"
          },
          "turn": {
            "$ref": "#/components/schemas/TurnConfig",
            "description": "Configuration for turn detection"
          },
          "tts": {
            "$ref": "#/components/schemas/TTSConversationalConfig-Input",
            "description": "Configuration for conversational text to speech"
          },
          "conversation": {
            "$ref": "#/components/schemas/ConversationConfig",
            "description": "Configuration for conversational events"
          },
          "language_presets": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LanguagePreset-Input"
            },
            "type": "object",
            "title": "Language Presets",
            "description": "Language presets for conversations"
          },
          "agent": {
            "$ref": "#/components/schemas/AgentConfigAPIModel-Input",
            "description": "Agent specific configuration"
          }
        },
        "type": "object",
        "title": "ConversationalConfigAPIModel"
      },
      "ConversationalConfigAPIModel-Output": {
        "properties": {
          "asr": {
            "$ref": "#/components/schemas/ASRConversationalConfig",
            "description": "Configuration for conversational transcription"
          },
          "turn": {
            "$ref": "#/components/schemas/TurnConfig",
            "description": "Configuration for turn detection"
          },
          "tts": {
            "$ref": "#/components/schemas/TTSConversationalConfig-Output",
            "description": "Configuration for conversational text to speech"
          },
          "conversation": {
            "$ref": "#/components/schemas/ConversationConfig",
            "description": "Configuration for conversational events"
          },
          "language_presets": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LanguagePreset-Output"
            },
            "type": "object",
            "title": "Language Presets",
            "description": "Language presets for conversations"
          },
          "agent": {
            "$ref": "#/components/schemas/AgentConfigAPIModel-Output",
            "description": "Agent specific configuration"
          }
        },
        "type": "object",
        "title": "ConversationalConfigAPIModel"
      },
      "ConversationalConfigAPIModelWorkflowOverride-Input": {
        "properties": {
          "asr": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ASRConversationalConfigWorkflowOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational transcription"
          },
          "turn": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TurnConfigWorkflowOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for turn detection"
          },
          "tts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSConversationalConfigWorkflowOverride-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational text to speech"
          },
          "conversation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationConfigWorkflowOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational events"
          },
          "language_presets": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/LanguagePreset-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Presets",
            "description": "Language presets for conversations"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentConfigAPIModelWorkflowOverride-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Agent specific configuration"
          }
        },
        "type": "object",
        "title": "ConversationalConfigAPIModelWorkflowOverride",
        "example": {
          "agent": {
            "dynamic_variables": {
              "dynamic_variable_placeholders": {
                "user_name": "John Doe"
              }
            },
            "first_message": "Hello, how can I help you today?",
            "language": "en",
            "prompt": {
              "knowledge_base": [],
              "llm": "gemini-2.0-flash-001",
              "max_tokens": -1,
              "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
              "temperature": 0,
              "tool_ids": [],
              "tools": []
            }
          },
          "asr": {
            "keywords": [
              "hello",
              "world"
            ],
            "provider": "elevenlabs",
            "quality": "high",
            "user_input_audio_format": "pcm_16000"
          },
          "conversation": {
            "client_events": [
              "audio",
              "interruption"
            ],
            "max_duration_seconds": 600
          },
          "tts": {
            "agent_output_audio_format": "pcm_16000",
            "model_id": "eleven_turbo_v2",
            "optimize_streaming_latency": 3,
            "pronunciation_dictionary_locators": [],
            "similarity_boost": 0.8,
            "speed": 1,
            "stability": 0.5,
            "voice_id": "cjVigY5qzO86Huf0OWal"
          },
          "turn": {
            "mode": "turn",
            "silence_end_call_timeout": -1,
            "turn_timeout": 7
          }
        }
      },
      "ConversationalConfigAPIModelWorkflowOverride-Output": {
        "properties": {
          "asr": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ASRConversationalConfigWorkflowOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational transcription"
          },
          "turn": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TurnConfigWorkflowOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for turn detection"
          },
          "tts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSConversationalConfigWorkflowOverride-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational text to speech"
          },
          "conversation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationConfigWorkflowOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for conversational events"
          },
          "language_presets": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/LanguagePreset-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Presets",
            "description": "Language presets for conversations"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentConfigAPIModelWorkflowOverride-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Agent specific configuration"
          }
        },
        "type": "object",
        "title": "ConversationalConfigAPIModelWorkflowOverride",
        "example": {
          "agent": {
            "dynamic_variables": {
              "dynamic_variable_placeholders": {
                "user_name": "John Doe"
              }
            },
            "first_message": "Hello, how can I help you today?",
            "language": "en",
            "prompt": {
              "knowledge_base": [],
              "llm": "gemini-2.0-flash-001",
              "max_tokens": -1,
              "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
              "temperature": 0,
              "tool_ids": [],
              "tools": []
            }
          },
          "asr": {
            "keywords": [
              "hello",
              "world"
            ],
            "provider": "elevenlabs",
            "quality": "high",
            "user_input_audio_format": "pcm_16000"
          },
          "conversation": {
            "client_events": [
              "audio",
              "interruption"
            ],
            "max_duration_seconds": 600
          },
          "tts": {
            "agent_output_audio_format": "pcm_16000",
            "model_id": "eleven_turbo_v2",
            "optimize_streaming_latency": 3,
            "pronunciation_dictionary_locators": [],
            "similarity_boost": 0.8,
            "speed": 1,
            "stability": 0.5,
            "voice_id": "cjVigY5qzO86Huf0OWal"
          },
          "turn": {
            "mode": "turn",
            "silence_end_call_timeout": -1,
            "turn_timeout": 7
          }
        }
      },
      "ConvertChapterResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the studio chapter conversion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "ConvertChapterResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "ConvertProjectResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the studio project conversion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "ConvertProjectResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "CopyVoiceSampleRequestModel": {
        "properties": {
          "sample_file_b64": {
            "type": "string",
            "title": "Sample File B64"
          },
          "processed_sample_file_b64": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Sample File B64"
          },
          "sample_db_model": {
            "$ref": "#/components/schemas/SampleDBModel-Input"
          }
        },
        "type": "object",
        "required": [
          "sample_file_b64",
          "sample_db_model"
        ],
        "title": "CopyVoiceSampleRequestModel"
      },
      "CopyVoiceToIsolatedEnvRequestModel": {
        "properties": {
          "target_user_id": {
            "type": "string",
            "title": "Target User Id"
          },
          "target_workspace_id": {
            "type": "string",
            "title": "Target Workspace Id"
          },
          "voice": {
            "$ref": "#/components/schemas/VoiceDBModel-Input"
          },
          "voice_settings": {
            "$ref": "#/components/schemas/VoiceSettingsDBModel"
          },
          "use_new_voice_id": {
            "type": "boolean",
            "title": "Use New Voice Id"
          },
          "samples": {
            "items": {
              "$ref": "#/components/schemas/CopyVoiceSampleRequestModel"
            },
            "type": "array",
            "title": "Samples"
          },
          "generated_voice": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GeneratedVoiceDBModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "target_user_id",
          "target_workspace_id",
          "voice",
          "voice_settings",
          "use_new_voice_id",
          "samples"
        ],
        "title": "CopyVoiceToIsolatedEnvRequestModel"
      },
      "CopyVoiceToIsolatedEnvResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          }
        },
        "type": "object",
        "required": [
          "voice_id"
        ],
        "title": "CopyVoiceToIsolatedEnvResponseModel"
      },
      "CreateAPIKeyResponseModel": {
        "properties": {
          "xi_api_key": {
            "type": "string",
            "title": "Xi Api Key"
          },
          "metadata": {
            "$ref": "#/components/schemas/XiApiKeyMetadataResponseModel"
          }
        },
        "type": "object",
        "required": [
          "xi_api_key",
          "metadata"
        ],
        "title": "CreateAPIKeyResponseModel"
      },
      "CreateAgentResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id",
            "description": "ID of the created agent"
          }
        },
        "type": "object",
        "required": [
          "agent_id"
        ],
        "title": "CreateAgentResponseModel",
        "example": {
          "agent_id": "J3Pbu5gP6NNKBscdCdwB"
        }
      },
      "CreateBasicAuthRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "auth_type": {
            "type": "string",
            "const": "basic_auth",
            "title": "Auth Type",
            "default": "basic_auth"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider",
          "username",
          "password"
        ],
        "title": "CreateBasicAuthRequest",
        "description": "Request model for creating Basic Auth connections - inherits common settings and includes sensitive fields"
      },
      "CreateCollectionRequestBody": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "parent_collection_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Collection Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "CreateCollectionRequestBody"
      },
      "CreateConnectAccountManagementLinkResponseModel": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "CreateConnectAccountManagementLinkResponseModel"
      },
      "CreateConnectAccountResponseModel": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "CreateConnectAccountResponseModel"
      },
      "CreateContractResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "CreateContractResponse"
      },
      "CreateOAuth2ClientCredsRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "auth_type": {
            "type": "string",
            "const": "oauth2_client_credentials",
            "title": "Auth Type",
            "default": "oauth2_client_credentials"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "token_url": {
            "type": "string",
            "title": "Token Url"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes",
            "default": []
          },
          "extra_params": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Extra Params",
            "default": {

            }
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider",
          "client_id",
          "token_url",
          "client_secret"
        ],
        "title": "CreateOAuth2ClientCredsRequest",
        "description": "Request model for creating auth connections - inherits common settings and includes sensitive fields"
      },
      "CreateOAuth2JWTRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "auth_type": {
            "type": "string",
            "const": "oauth2_jwt",
            "title": "Auth Type",
            "default": "oauth2_jwt"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "token_url": {
            "type": "string",
            "title": "Token Url",
            "description": "Token endpoint URL for exchanging JWT for access token"
          },
          "algorithm": {
            "type": "string",
            "enum": [
              "HS256",
              "HS384",
              "HS512",
              "RS256",
              "RS384",
              "RS512"
            ],
            "title": "Algorithm",
            "description": "JWT signing algorithm",
            "default": "HS256"
          },
          "key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key Id",
            "description": "Key ID (kid) for JWT header - useful for key rotation"
          },
          "issuer": {
            "type": "string",
            "title": "Issuer",
            "description": "JWT issuer (iss claim)"
          },
          "audience": {
            "type": "string",
            "title": "Audience",
            "description": "JWT audience (aud claim)"
          },
          "subject": {
            "type": "string",
            "title": "Subject",
            "description": "JWT subject (sub claim)"
          },
          "expiration_seconds": {
            "type": "integer",
            "maximum": 86400,
            "minimum": 60,
            "title": "Expiration Seconds",
            "description": "Token expiration time in seconds",
            "default": 3600
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes",
            "description": "OAuth2 scopes to request when exchanging JWT for access token"
          },
          "extra_params": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Extra Params",
            "description": "Additional custom claims to include in the token"
          },
          "secret_key": {
            "type": "string",
            "title": "Secret Key"
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider",
          "token_url",
          "issuer",
          "audience",
          "subject",
          "secret_key"
        ],
        "title": "CreateOAuth2JWTRequest",
        "description": "Request model for creating OAuth2 JWT auth connections - inherits common settings and includes sensitive fields"
      },
      "CreatePhoneNumberResponseModel": {
        "properties": {
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id",
            "description": "Phone entity ID"
          }
        },
        "type": "object",
        "required": [
          "phone_number_id"
        ],
        "title": "CreatePhoneNumberResponseModel"
      },
      "CreatePlayDocumentResponseModel": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id"
          }
        },
        "type": "object",
        "required": [
          "document_id"
        ],
        "title": "CreatePlayDocumentResponseModel"
      },
      "CreatePronunciationDictionaryResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the create pronunciation dictionary request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "CreatePronunciationDictionaryResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "CreateSIPTrunkPhoneNumberRequestV2": {
        "properties": {
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Phone number"
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "Label for the phone number"
          },
          "supports_inbound": {
            "type": "boolean",
            "title": "Supports Inbound",
            "description": "Whether this phone number supports inbound calls",
            "default": true
          },
          "supports_outbound": {
            "type": "boolean",
            "title": "Supports Outbound",
            "description": "Whether this phone number supports outbound calls",
            "default": true
          },
          "provider": {
            "type": "string",
            "const": "sip_trunk",
            "title": "Provider",
            "default": "sip_trunk"
          },
          "inbound_trunk_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InboundSIPTrunkConfigRequestModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "outbound_trunk_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OutboundSIPTrunkConfigRequestModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "phone_number",
          "label"
        ],
        "title": "CreateSIPTrunkPhoneNumberRequestV2"
      },
      "CreateTwilioPhoneNumberRequest": {
        "properties": {
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Phone number"
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "Label for the phone number"
          },
          "supports_inbound": {
            "type": "boolean",
            "title": "Supports Inbound",
            "description": "Whether this phone number supports inbound calls",
            "default": true
          },
          "supports_outbound": {
            "type": "boolean",
            "title": "Supports Outbound",
            "description": "Whether this phone number supports outbound calls",
            "default": true
          },
          "provider": {
            "type": "string",
            "const": "twilio",
            "title": "Provider",
            "default": "twilio"
          },
          "sid": {
            "type": "string",
            "title": "Sid",
            "description": "Twilio Account SID"
          },
          "token": {
            "type": "string",
            "title": "Token",
            "description": "Twilio Auth Token"
          }
        },
        "type": "object",
        "required": [
          "phone_number",
          "label",
          "sid",
          "token"
        ],
        "title": "CreateTwilioPhoneNumberRequest"
      },
      "CreateUnitTestRequest": {
        "properties": {
          "chat_history": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel-Input"
            },
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "title": "Chat History"
          },
          "success_condition": {
            "type": "string",
            "title": "Success Condition",
            "description": "A prompt that evaluates whether the agent's response is successful. Should return True or False."
          },
          "success_examples": {
            "items": {
              "$ref": "#/components/schemas/AgentSuccessfulResponseExample"
            },
            "type": "array",
            "maxItems": 5,
            "minItems": 0,
            "title": "Success Examples",
            "description": "Non-empty list of example responses that should be considered successful"
          },
          "failure_examples": {
            "items": {
              "$ref": "#/components/schemas/AgentFailureResponseExample"
            },
            "type": "array",
            "maxItems": 5,
            "minItems": 0,
            "title": "Failure Examples",
            "description": "Non-empty list of example responses that should be considered failures"
          },
          "dynamic_variables": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Dynamic Variables",
            "description": "Dynamic variables to replace in the agent config during testing"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "chat_history",
          "success_condition",
          "success_examples",
          "failure_examples",
          "name"
        ],
        "title": "CreateUnitTestRequest"
      },
      "CreateUnitTestResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "CreateUnitTestResponseModel"
      },
      "CreateVoiceoverStudioResponseModel": {
        "properties": {
          "voiceover_studio_id": {
            "type": "string",
            "title": "Voiceover Studio Id"
          }
        },
        "type": "object",
        "required": [
          "voiceover_studio_id"
        ],
        "title": "CreateVoiceoverStudioResponseModel"
      },
      "CreditCostEstimateResponse": {
        "properties": {
          "amount_usd": {
            "type": "number",
            "title": "Amount Usd"
          },
          "amount_credit": {
            "type": "number",
            "title": "Amount Credit"
          }
        },
        "type": "object",
        "required": [
          "amount_usd",
          "amount_credit"
        ],
        "title": "CreditCostEstimateResponse"
      },
      "CriteriaMetricResponse": {
        "properties": {
          "success": {
            "type": "integer",
            "title": "Success",
            "default": 0
          },
          "failure": {
            "type": "integer",
            "title": "Failure",
            "default": 0
          },
          "unknown": {
            "type": "integer",
            "title": "Unknown",
            "default": 0
          },
          "dt": {
            "type": "integer",
            "title": "Dt"
          }
        },
        "type": "object",
        "required": [
          "dt"
        ],
        "title": "CriteriaMetricResponse"
      },
      "Cue": {
        "properties": {
          "start_time_ms": {
            "type": "integer",
            "title": "Start Time Ms"
          },
          "end_time_ms": {
            "type": "integer",
            "title": "End Time Ms"
          },
          "lines": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Lines"
          }
        },
        "type": "object",
        "required": [
          "start_time_ms",
          "end_time_ms",
          "lines"
        ],
        "title": "Cue"
      },
      "CueOptions-Input": {
        "properties": {
          "min_duration_ms": {
            "type": "integer",
            "maximum": 2000,
            "title": "Min Duration Ms",
            "default": 1000
          },
          "max_duration_ms": {
            "type": "integer",
            "minimum": 4000,
            "title": "Max Duration Ms",
            "default": 7000
          },
          "max_lines_per_cue": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "title": "Max Lines Per Cue",
            "default": 2
          },
          "max_char_per_line": {
            "type": "integer",
            "maximum": 50,
            "minimum": 16,
            "title": "Max Char Per Line",
            "default": 42
          },
          "max_char_per_s": {
            "type": "integer",
            "maximum": 30,
            "minimum": 15,
            "title": "Max Char Per S",
            "default": 20
          },
          "min_gap_between_cues_frames": {
            "type": "integer",
            "maximum": 6,
            "minimum": 0,
            "title": "Min Gap Between Cues Frames",
            "default": 2
          }
        },
        "type": "object",
        "title": "CueOptions"
      },
      "CueResult": {
        "properties": {
          "start": {
            "type": "number",
            "title": "Start"
          },
          "end": {
            "type": "number",
            "title": "End"
          },
          "lines": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/xi_backend__routes__speech_to_text__projects_v2__utils__Word"
              },
              "type": "array"
            },
            "type": "array",
            "title": "Lines"
          },
          "text": {
            "type": "string",
            "title": "Text",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "start",
          "end",
          "lines",
          "text"
        ],
        "title": "CueResult"
      },
      "Cues": {
        "properties": {
          "cues": {
            "items": {
              "$ref": "#/components/schemas/Cue"
            },
            "type": "array",
            "title": "Cues"
          }
        },
        "type": "object",
        "required": [
          "cues"
        ],
        "title": "Cues"
      },
      "CustomLLM": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL of the Chat Completions compatible endpoint"
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The model ID to be used if URL serves multiple models"
          },
          "api_key": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConvAISecretLocator"
              },
              {
                "type": "null"
              }
            ],
            "description": "The API key for authentication"
          },
          "request_headers": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                },
                {
                  "$ref": "#/components/schemas/ConvAIDynamicVariable"
                }
              ]
            },
            "type": "object",
            "title": "Request Headers",
            "description": "Headers that should be included in the request"
          },
          "api_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Api Version",
            "description": "The API version to use for the request"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "CustomLLM"
      },
      "DashboardCallSuccessChartModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "const": "call_success",
            "title": "Type",
            "default": "call_success"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DashboardCallSuccessChartModel"
      },
      "DashboardCriteriaChartModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "const": "criteria",
            "title": "Type",
            "default": "criteria"
          },
          "criteria_id": {
            "type": "string",
            "title": "Criteria Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "criteria_id"
        ],
        "title": "DashboardCriteriaChartModel"
      },
      "DashboardDataCollectionChartModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "const": "data_collection",
            "title": "Type",
            "default": "data_collection"
          },
          "data_collection_id": {
            "type": "string",
            "title": "Data Collection Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "data_collection_id"
        ],
        "title": "DashboardDataCollectionChartModel"
      },
      "Data-Input": {
        "properties": {
          "projects": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Project"
            },
            "type": "object",
            "title": "Projects"
          },
          "speakers": {
            "additionalProperties": {
              "$ref": "#/components/schemas/xi_backend__routes__speech_to_text__projects__models__Speaker"
            },
            "type": "object",
            "title": "Speakers"
          },
          "segments": {
            "additionalProperties": {
              "$ref": "#/components/schemas/xi_backend__routes__speech_to_text__projects__models__Segment"
            },
            "type": "object",
            "title": "Segments"
          },
          "words": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Word-Input"
            },
            "type": "object",
            "title": "Words"
          }
        },
        "type": "object",
        "required": [
          "projects",
          "speakers",
          "segments",
          "words"
        ],
        "title": "Data"
      },
      "Data-Output": {
        "properties": {
          "projects": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Project"
            },
            "type": "object",
            "title": "Projects"
          },
          "speakers": {
            "additionalProperties": {
              "$ref": "#/components/schemas/xi_backend__routes__speech_to_text__projects__models__Speaker"
            },
            "type": "object",
            "title": "Speakers"
          },
          "segments": {
            "additionalProperties": {
              "$ref": "#/components/schemas/xi_backend__routes__speech_to_text__projects__models__Segment"
            },
            "type": "object",
            "title": "Segments"
          },
          "words": {
            "additionalProperties": {
              "$ref": "#/components/schemas/xi_backend__routes__speech_to_text__projects__models__Word"
            },
            "type": "object",
            "title": "Words"
          }
        },
        "type": "object",
        "required": [
          "projects",
          "speakers",
          "segments",
          "words"
        ],
        "title": "Data"
      },
      "DataCollectionMetricResponse": {
        "properties": {
          "result": {
            "type": "string",
            "title": "Result"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "result",
          "count"
        ],
        "title": "DataCollectionMetricResponse"
      },
      "DataCollectionResultCommonModel": {
        "properties": {
          "data_collection_id": {
            "type": "string",
            "title": "Data Collection Id"
          },
          "value": {
            "title": "Value"
          },
          "json_schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
              },
              {
                "type": "null"
              }
            ]
          },
          "rationale": {
            "type": "string",
            "title": "Rationale"
          }
        },
        "type": "object",
        "required": [
          "data_collection_id",
          "rationale"
        ],
        "title": "DataCollectionResultCommonModel"
      },
      "DateRange": {
        "type": "string",
        "enum": [
          "day",
          "week",
          "month"
        ],
        "title": "DateRange"
      },
      "DefaultSharingPreferencesResponseModel": {
        "properties": {
          "default_sharing_groups": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceGroupResponseModel"
            },
            "type": "array",
            "title": "Default Sharing Groups",
            "description": "List of groups that the user shares with by default"
          }
        },
        "type": "object",
        "required": [
          "default_sharing_groups"
        ],
        "title": "DefaultSharingPreferencesResponseModel"
      },
      "DeleteChapterResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the studio chapter deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteChapterResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteDubbingResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the dubbing project. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteDubbingResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteHistoryItemResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with http code 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteHistoryItemResponse",
        "example": {
          "status": "ok"
        }
      },
      "DeleteProjectResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the studio project deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteProjectResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteSampleResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the sample deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteSampleResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteUserVoiceCollectionResponseModel": {
        "properties": {
          "collection_id": {
            "type": "string",
            "title": "Collection Id"
          }
        },
        "type": "object",
        "required": [
          "collection_id"
        ],
        "title": "DeleteUserVoiceCollectionResponseModel"
      },
      "DeleteVoiceRemixingSessionResponseModel": {
        "properties": {
          "voice_remixing_session_id": {
            "type": "string",
            "title": "Voice Remixing Session Id"
          }
        },
        "type": "object",
        "required": [
          "voice_remixing_session_id"
        ],
        "title": "DeleteVoiceRemixingSessionResponseModel"
      },
      "DeleteVoiceResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the voice deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteVoiceResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteVoiceSampleResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the voice sample deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteVoiceSampleResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteWorkspaceGroupMemberResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the workspace group member deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteWorkspaceGroupMemberResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteWorkspaceInviteResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the workspace invite deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteWorkspaceInviteResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeleteWorkspaceMemberResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the workspace member deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "DeleteWorkspaceMemberResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "DeliverableKind": {
        "type": "string",
        "enum": [
          "transcription_v2_transcript",
          "subtitles_project",
          "dubs"
        ],
        "title": "DeliverableKind"
      },
      "DependentAvailableAgentIdentifier": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "const": "available",
            "title": "Type",
            "default": "available"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at_unix_secs",
          "access_level"
        ],
        "title": "DependentAvailableAgentIdentifier"
      },
      "DependentAvailableToolIdentifier": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "const": "available",
            "title": "Type",
            "default": "available"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at_unix_secs",
          "access_level"
        ],
        "title": "DependentAvailableToolIdentifier"
      },
      "DependentPhoneNumberIdentifier": {
        "properties": {
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "provider": {
            "$ref": "#/components/schemas/TelephonyProvider"
          }
        },
        "type": "object",
        "required": [
          "phone_number_id",
          "phone_number",
          "label",
          "provider"
        ],
        "title": "DependentPhoneNumberIdentifier"
      },
      "DependentUnknownAgentIdentifier": {
        "properties": {
          "type": {
            "type": "string",
            "const": "unknown",
            "title": "Type",
            "default": "unknown"
          }
        },
        "type": "object",
        "title": "DependentUnknownAgentIdentifier",
        "description": "A model that represents an agent dependent on a knowledge base/tools\nto which the user has no direct access."
      },
      "DependentUnknownToolIdentifier": {
        "properties": {
          "type": {
            "type": "string",
            "const": "unknown",
            "title": "Type",
            "default": "unknown"
          }
        },
        "type": "object",
        "title": "DependentUnknownToolIdentifier",
        "description": "A model that represents an tool dependent on a knowledge base/tools\nto which the user has no direct access."
      },
      "DetailedProducerProfileResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "qualifications": {
            "items": {
              "$ref": "#/components/schemas/ProducerQualification-Output"
            },
            "type": "array",
            "title": "Qualifications"
          },
          "settlement_info": {
            "$ref": "#/components/schemas/SettlementInfo"
          },
          "confidence_score": {
            "type": "number",
            "title": "Confidence Score"
          },
          "teams": {
            "items": {
              "$ref": "#/components/schemas/TeamMembershipResponse"
            },
            "type": "array",
            "title": "Teams"
          },
          "active_task_limit": {
            "type": "integer",
            "title": "Active Task Limit"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "stats": {
            "$ref": "#/components/schemas/ProducerStatsModel"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "qualifications",
          "settlement_info",
          "confidence_score",
          "teams",
          "active_task_limit",
          "first_name",
          "email",
          "stats"
        ],
        "title": "DetailedProducerProfileResponse"
      },
      "DetailedTranscriptionTaskResponseModel": {
        "properties": {
          "_id": {
            "type": "string",
            "title": "Id"
          },
          "task_name": {
            "type": "string",
            "title": "Task Name"
          },
          "state": {
            "type": "string",
            "enum": [
              "not_processing",
              "processing",
              "processed",
              "error",
              "failed",
              "failed_refunded",
              "reviewing"
            ],
            "title": "State"
          },
          "progress": {
            "type": "number",
            "title": "Progress"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At"
          },
          "file": {
            "$ref": "#/components/schemas/FileResponseModel"
          },
          "last_error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ErrorDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "review_request": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProductionRequestResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "productions_description_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Productions Description Id"
          },
          "user_params": {
            "$ref": "#/components/schemas/TranscriptionTaskUserParamsDBModel"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TranscriptionResultDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "preview_file": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FileResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "_id",
          "task_name",
          "state",
          "progress",
          "created_at",
          "file",
          "user_params"
        ],
        "title": "DetailedTranscriptionTaskResponseModel"
      },
      "DetectLanguagesResponseModel": {
        "properties": {
          "detected_languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Detected Languages"
          }
        },
        "type": "object",
        "required": [
          "detected_languages"
        ],
        "title": "DetectLanguagesResponseModel"
      },
      "DeviceFingerprintResponseModel": {
        "properties": {
          "hash": {
            "type": "string",
            "title": "Hash"
          },
          "browser_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Browser Name"
          },
          "browser_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Browser Version"
          },
          "platform": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Platform"
          },
          "first_seen_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Seen At Unix"
          },
          "last_seen_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Seen At Unix"
          }
        },
        "type": "object",
        "required": [
          "hash"
        ],
        "title": "DeviceFingerprintResponseModel"
      },
      "DeviceResponseModel": {
        "properties": {
          "category": {
            "type": "string",
            "enum": [
              "Desktop",
              "Mobile",
              "Tablet"
            ],
            "title": "Category"
          },
          "devices": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Devices"
          }
        },
        "type": "object",
        "required": [
          "category",
          "devices"
        ],
        "title": "DeviceResponseModel"
      },
      "DialogueEnhancementResponse": {
        "properties": {
          "enhanced": {
            "type": "boolean",
            "title": "Enhanced",
            "description": "Whether the dialogue blocks were enhanced"
          },
          "enhanced_blocks": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Enhanced Blocks",
            "description": "An array of enhanced dialogue text blocks"
          }
        },
        "type": "object",
        "required": [
          "enhanced",
          "enhanced_blocks"
        ],
        "title": "DialogueEnhancementResponse"
      },
      "DialogueInput": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text to be converted into speech."
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the voice to be used for the generation."
          }
        },
        "type": "object",
        "required": [
          "text",
          "voice_id"
        ],
        "title": "DialogueInput"
      },
      "DialogueInputResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text of the dialogue input line."
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the voice used for this dialogue input line."
          },
          "voice_name": {
            "type": "string",
            "title": "Voice Name",
            "description": "The name of the voice used for this dialogue input line."
          }
        },
        "type": "object",
        "required": [
          "text",
          "voice_id",
          "voice_name"
        ],
        "title": "DialogueInputResponseModel"
      },
      "DirectPublishingChapterResponseModel": {
        "properties": {
          "chapter_name": {
            "type": "string",
            "title": "Chapter Name"
          }
        },
        "type": "object",
        "required": [
          "chapter_name"
        ],
        "title": "DirectPublishingChapterResponseModel"
      },
      "DirectPublishingCollectionItemResponseModel": {
        "properties": {
          "read_id": {
            "type": "string",
            "title": "Read Id"
          },
          "order": {
            "type": "integer",
            "title": "Order"
          },
          "publishing_state": {
            "$ref": "#/components/schemas/PublishingState"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "en",
                  "zh",
                  "es",
                  "hi",
                  "pt",
                  "fr",
                  "de",
                  "ja",
                  "ar",
                  "ru",
                  "ko",
                  "id",
                  "it",
                  "nl",
                  "tr",
                  "pl",
                  "sv",
                  "fil",
                  "ms",
                  "ro",
                  "uk",
                  "el",
                  "cs",
                  "da",
                  "fi",
                  "bg",
                  "hr",
                  "sk",
                  "ta",
                  "hu",
                  "no",
                  "vi"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          }
        },
        "type": "object",
        "required": [
          "read_id",
          "order",
          "publishing_state"
        ],
        "title": "DirectPublishingCollectionItemResponseModel"
      },
      "DirectPublishingCollectionResponseModel": {
        "properties": {
          "collection_id": {
            "type": "string",
            "title": "Collection Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "category": {
            "type": "string",
            "enum": [
              "blog",
              "curated",
              "dynamic",
              "newsletter",
              "feed",
              "series"
            ],
            "title": "Category"
          },
          "language": {
            "type": "string",
            "enum": [
              "en",
              "zh",
              "es",
              "hi",
              "pt",
              "fr",
              "de",
              "ja",
              "ar",
              "ru",
              "ko",
              "id",
              "it",
              "nl",
              "tr",
              "pl",
              "sv",
              "fil",
              "ms",
              "ro",
              "uk",
              "el",
              "cs",
              "da",
              "fi",
              "bg",
              "hr",
              "sk",
              "ta",
              "hu",
              "no",
              "vi"
            ],
            "title": "Language"
          },
          "item_count": {
            "type": "integer",
            "title": "Item Count"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "publisher_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publisher Profile Id"
          },
          "created_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At Unix"
          },
          "updated_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At Unix"
          },
          "collection_items": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DirectPublishingCollectionItemResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collection Items"
          }
        },
        "type": "object",
        "required": [
          "collection_id",
          "title",
          "category",
          "language",
          "item_count"
        ],
        "title": "DirectPublishingCollectionResponseModel"
      },
      "DirectPublishingCollectionsResponseModel": {
        "properties": {
          "collections": {
            "items": {
              "$ref": "#/components/schemas/DirectPublishingCollectionResponseModel"
            },
            "type": "array",
            "title": "Collections"
          }
        },
        "type": "object",
        "required": [
          "collections"
        ],
        "title": "DirectPublishingCollectionsResponseModel"
      },
      "DirectPublishingReadResponseModel": {
        "properties": {
          "read_id": {
            "type": "string",
            "title": "Read Id"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "updated_at_unix": {
            "type": "integer",
            "title": "Updated At Unix"
          },
          "word_count": {
            "type": "integer",
            "title": "Word Count"
          },
          "char_count": {
            "type": "integer",
            "title": "Char Count"
          },
          "chapters": {
            "items": {
              "$ref": "#/components/schemas/ReadMetadataChapterDBModel"
            },
            "type": "array",
            "title": "Chapters"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "article_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Article Image Url"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "display_mode": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "text",
                  "audio-only",
                  "text-with-audio"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Mode"
          },
          "genre": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "Fantasy",
                    "Romance",
                    "Science Fiction",
                    "Mystery and Thriller",
                    "Action and Adventure",
                    "Dystopia",
                    "Business and Economics",
                    "Technology",
                    "Detective and Crime",
                    "Horror",
                    "Biography and Memoir",
                    "Education and Learning",
                    "History",
                    "Children's Literature",
                    "Fairy Tales and Folklore",
                    "Fan Fiction",
                    "General Fiction",
                    "Health and Wellness",
                    "Historical Fiction",
                    "Humor",
                    "Literary Classics",
                    "Philosophy",
                    "Poetry",
                    "Politics and Government",
                    "Psychology",
                    "Science and Nature",
                    "Self-Help",
                    "Spirituality and Religion",
                    "Travel",
                    "True Crime",
                    "Other",
                    "Adult Romance"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genre"
          },
          "fiction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiction"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type"
          },
          "original_file_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original File Type"
          },
          "target_audience": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "children",
                  "young adult",
                  "adult",
                  "all ages"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience"
          },
          "mature_content": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mature Content"
          },
          "origin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Origin"
          },
          "publication_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publication Date"
          },
          "isbn": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn"
          },
          "legal_terms": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReadLegalTerms"
              },
              {
                "type": "null"
              }
            ]
          },
          "content_guidelines_terms": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReadLegalTerms"
              },
              {
                "type": "null"
              }
            ]
          },
          "publishing_project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publishing Project Id"
          },
          "publishing_state": {
            "type": "string",
            "title": "Publishing State",
            "default": "published"
          },
          "publisher_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publisher Profile Id"
          },
          "quality_score": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality Score"
          },
          "publisher": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publisher"
          },
          "copyright": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Copyright"
          },
          "subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitle"
          },
          "distribution_territories": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "const": "worldwide"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Distribution Territories"
          },
          "edition": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Edition"
          },
          "contributors": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Contributor"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contributors"
          },
          "payout_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "none",
                  "engagement_based",
                  "fixed_payout"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Payout Type"
          },
          "list_price": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "List Price"
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "const": "usd"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "original_audio_document_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Audio Document Id"
          },
          "series_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Series Id"
          },
          "volume": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Volume"
          },
          "published_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published At Unix"
          },
          "read_slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Slug"
          },
          "preview_audio_object": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PreviewAudioDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "sample_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SampleConfigDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "review": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReviewResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "read_id",
          "created_at_unix",
          "updated_at_unix",
          "word_count",
          "char_count",
          "chapters"
        ],
        "title": "DirectPublishingReadResponseModel"
      },
      "DirectPublishingReadsResponseModel": {
        "properties": {
          "reads": {
            "items": {
              "$ref": "#/components/schemas/DirectPublishingReadResponseModel"
            },
            "type": "array",
            "title": "Reads"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          },
          "last_sort_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sort Id"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "reads",
          "has_more"
        ],
        "title": "DirectPublishingReadsResponseModel"
      },
      "DirectPublishingVoicesResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "name"
        ],
        "title": "DirectPublishingVoicesResponseModel"
      },
      "DividerNodeDBModel": {
        "properties": {
          "children": {
            "items": {
              "$ref": "#/components/schemas/TextNodeDBModel"
            },
            "type": "array",
            "title": "Children"
          },
          "type": {
            "type": "string",
            "const": "divider",
            "title": "Type",
            "default": "divider"
          }
        },
        "type": "object",
        "required": [
          "children"
        ],
        "title": "DividerNodeDBModel"
      },
      "DoDubbingResponseModel": {
        "properties": {
          "dubbing_id": {
            "type": "string",
            "title": "Dubbing Id",
            "description": "The ID of the dubbing project."
          },
          "expected_duration_sec": {
            "type": "number",
            "title": "Expected Duration Sec",
            "description": "The expected duration of the dubbing project in seconds."
          }
        },
        "type": "object",
        "required": [
          "dubbing_id",
          "expected_duration_sec"
        ],
        "title": "DoDubbingResponseModel",
        "example": {
          "dubbing_id": "21m00Tcm4TlvDq8ikWAM",
          "expected_duration_sec": 127.5
        }
      },
      "DocumentUsageModeEnum": {
        "type": "string",
        "enum": [
          "prompt",
          "auto"
        ],
        "title": "DocumentUsageModeEnum"
      },
      "DocxExportOptions": {
        "properties": {
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          },
          "format": {
            "type": "string",
            "const": "docx",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "type": "object",
        "required": [
          "format"
        ],
        "title": "DocxExportOptions"
      },
      "DocxExportRequest": {
        "properties": {
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          }
        },
        "type": "object",
        "title": "DocxExportRequest"
      },
      "DomainVerificationDBModel": {
        "properties": {
          "domain": {
            "type": "string",
            "title": "Domain"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "verification_method": {
            "type": "string",
            "enum": [
              "dns",
              "manual"
            ],
            "title": "Verification Method"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "passed",
              "failed"
            ],
            "title": "Status"
          },
          "verification_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verification Code"
          },
          "verified_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verified At Unix"
          }
        },
        "type": "object",
        "required": [
          "domain",
          "workspace_id",
          "verification_method",
          "status"
        ],
        "title": "DomainVerificationDBModel"
      },
      "DubbedSegment": {
        "properties": {
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "subtitles": {
            "items": {
              "$ref": "#/components/schemas/SegmentSubtitleFrame"
            },
            "type": "array",
            "title": "Subtitles"
          },
          "audio_stale": {
            "type": "boolean",
            "title": "Audio Stale"
          },
          "media_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DubbingMediaReference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time",
          "text",
          "subtitles",
          "audio_stale",
          "media_ref"
        ],
        "title": "DubbedSegment"
      },
      "DubbingCreateVoiceResponseModel": {
        "properties": {
          "voice_uid": {
            "type": "string",
            "title": "Voice Uid"
          }
        },
        "type": "object",
        "required": [
          "voice_uid"
        ],
        "title": "DubbingCreateVoiceResponseModel"
      },
      "DubbingGetReplacementVoicesResponseModel": {
        "properties": {
          "voices": {
            "items": {
              "$ref": "#/components/schemas/DubbingReplacementVoiceModel"
            },
            "type": "array",
            "title": "Voices"
          }
        },
        "type": "object",
        "required": [
          "voices"
        ],
        "title": "DubbingGetReplacementVoicesResponseModel"
      },
      "DubbingGetSimilarVoicesResponseModel": {
        "properties": {
          "user_voices": {
            "items": {
              "$ref": "#/components/schemas/VoiceResponseModel"
            },
            "type": "array",
            "title": "User Voices"
          },
          "library_voices": {
            "items": {
              "$ref": "#/components/schemas/LibraryVoiceResponseModel"
            },
            "type": "array",
            "title": "Library Voices"
          }
        },
        "type": "object",
        "required": [
          "user_voices",
          "library_voices"
        ],
        "title": "DubbingGetSimilarVoicesResponseModel"
      },
      "DubbingInputInternalMetadataResponseModel": {
        "properties": {
          "num_speakers": {
            "type": "integer",
            "title": "Num Speakers"
          },
          "watermark": {
            "type": "boolean",
            "title": "Watermark"
          },
          "dubbing_studio": {
            "type": "boolean",
            "title": "Dubbing Studio"
          },
          "highest_resolution": {
            "type": "boolean",
            "title": "Highest Resolution"
          },
          "media": {
            "$ref": "#/components/schemas/DubbingInputMediaInternalMetadataResponseModel"
          },
          "target_language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Language Code"
          },
          "source_language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Language Code"
          },
          "start_time_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time Secs"
          },
          "end_time_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time Secs"
          },
          "source_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Url"
          },
          "frame_rate": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FrameRateResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "num_speakers",
          "watermark",
          "dubbing_studio",
          "highest_resolution",
          "media",
          "target_language_code",
          "source_language_code",
          "start_time_secs",
          "end_time_secs",
          "source_url",
          "frame_rate"
        ],
        "title": "DubbingInputInternalMetadataResponseModel"
      },
      "DubbingInputMediaInternalMetadataResponseModel": {
        "properties": {
          "content_type": {
            "type": "string",
            "title": "Content Type"
          }
        },
        "type": "object",
        "required": [
          "content_type"
        ],
        "title": "DubbingInputMediaInternalMetadataResponseModel"
      },
      "DubbingInputResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type"
          },
          "has_audio": {
            "type": "boolean",
            "title": "Has Audio"
          },
          "has_video": {
            "type": "boolean",
            "title": "Has Video"
          },
          "duration": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration"
          },
          "input_bytes": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Bytes"
          },
          "sle_bytes": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sle Bytes"
          },
          "size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size Bytes"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "content_type",
          "source_type",
          "has_audio",
          "has_video",
          "duration",
          "input_bytes"
        ],
        "title": "DubbingInputResponseModel"
      },
      "DubbingInternalMetadataPageResponseModel": {
        "properties": {
          "dubs": {
            "items": {
              "$ref": "#/components/schemas/DubbingInternalMetadataResponseModel"
            },
            "type": "array",
            "title": "Dubs"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "dubs",
          "next_cursor",
          "has_more"
        ],
        "title": "DubbingInternalMetadataPageResponseModel"
      },
      "DubbingInternalMetadataResponseModel": {
        "properties": {
          "dubbing_id": {
            "type": "string",
            "title": "Dubbing Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "creation_date_unix": {
            "type": "integer",
            "title": "Creation Date Unix"
          },
          "target_languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Target Languages"
          },
          "latest_snapshot": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DubbingSnapshotInternalMetadataResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "input": {
            "$ref": "#/components/schemas/DubbingInputInternalMetadataResponseModel"
          },
          "free_credits_left": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Free Credits Left"
          },
          "last_viewer_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Viewer User Id"
          },
          "last_viewer_saved_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Viewer Saved At Unix"
          },
          "last_viewer_tab_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Viewer Tab Id"
          },
          "progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress"
          },
          "progress_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress Message"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DubbingUsageInternalMetadataResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          },
          "productions_description_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Productions Description Id"
          }
        },
        "type": "object",
        "required": [
          "dubbing_id",
          "name",
          "status",
          "creation_date_unix",
          "target_languages",
          "latest_snapshot",
          "input",
          "free_credits_left",
          "last_viewer_user_id",
          "last_viewer_saved_at_unix",
          "last_viewer_tab_id",
          "progress",
          "progress_message",
          "error",
          "usage",
          "access_level",
          "productions_description_id"
        ],
        "title": "DubbingInternalMetadataResponseModel"
      },
      "DubbingMediaMetadata": {
        "properties": {
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "The content type of the media."
          },
          "duration": {
            "type": "number",
            "title": "Duration",
            "description": "The duration of the media in seconds."
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "duration"
        ],
        "title": "DubbingMediaMetadata"
      },
      "DubbingMediaReference": {
        "properties": {
          "src": {
            "type": "string",
            "title": "Src"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name"
          },
          "random_path_slug": {
            "type": "string",
            "title": "Random Path Slug"
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs"
          },
          "is_audio": {
            "type": "boolean",
            "title": "Is Audio"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "src",
          "content_type",
          "bucket_name",
          "random_path_slug",
          "duration_secs",
          "is_audio",
          "url"
        ],
        "title": "DubbingMediaReference"
      },
      "DubbingMetadataPageResponseModel": {
        "properties": {
          "dubs": {
            "items": {
              "$ref": "#/components/schemas/DubbingMetadataResponse"
            },
            "type": "array",
            "title": "Dubs"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "dubs",
          "next_cursor",
          "has_more"
        ],
        "title": "DubbingMetadataPageResponseModel"
      },
      "DubbingMetadataResponse": {
        "properties": {
          "dubbing_id": {
            "type": "string",
            "title": "Dubbing Id",
            "description": "The ID of the dubbing project."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the dubbing project."
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the dubbing project. Either 'dubbed', 'dubbing' or 'failed'."
          },
          "target_languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Target Languages",
            "description": "The target languages of the dubbing project."
          },
          "editable": {
            "type": "boolean",
            "title": "Editable",
            "description": "Whether this dubbing project is editable in Dubbing Studio.",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Timestamp this dub was created."
          },
          "media_metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DubbingMediaMetadata"
              },
              {
                "type": "null"
              }
            ],
            "description": "The media metadata of the dubbing project."
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Optional error message if the dubbing project failed."
          }
        },
        "type": "object",
        "required": [
          "dubbing_id",
          "name",
          "status",
          "target_languages",
          "created_at"
        ],
        "title": "DubbingMetadataResponse",
        "example": {
          "created_at": "2025-07-15T14:49:41.149000",
          "dubbing_id": "21m00Tcm4TlvDq8ikWAM",
          "editable": true,
          "media_metadata": {
            "content_type": "video/mp4",
            "duration": 127.5
          },
          "name": "My Dubbing Project",
          "status": "dubbed",
          "target_languages": [
            "es",
            "fr",
            "de"
          ]
        }
      },
      "DubbingRenderInternalMetadataResponseModel": {
        "properties": {
          "render_id": {
            "type": "string",
            "title": "Render Id"
          },
          "media": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PublicMediaReferenceResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "progress": {
            "type": "number",
            "title": "Progress"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "render_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RenderType"
              },
              {
                "type": "string",
                "const": "zip"
              },
              {
                "type": "null"
              }
            ],
            "title": "Render Type"
          }
        },
        "type": "object",
        "required": [
          "render_id",
          "media",
          "progress",
          "created_at_unix",
          "error",
          "language",
          "render_type"
        ],
        "title": "DubbingRenderInternalMetadataResponseModel"
      },
      "DubbingRenderResponseModel": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "render_id": {
            "type": "string",
            "title": "Render Id"
          }
        },
        "type": "object",
        "required": [
          "version",
          "render_id"
        ],
        "title": "DubbingRenderResponseModel"
      },
      "DubbingReplacementVoiceModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "category": {
            "type": "string",
            "enum": [
              "premade",
              "cloned",
              "generated",
              "professional",
              "famous"
            ],
            "title": "Category"
          },
          "verified_languages": {
            "items": {
              "$ref": "#/components/schemas/VerifiedVoiceLanguageDBModel"
            },
            "type": "array",
            "title": "Verified Languages"
          },
          "is_user_voice": {
            "type": "boolean",
            "title": "Is User Voice"
          },
          "owner_id": {
            "type": "string",
            "title": "Owner Id"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "name",
          "category",
          "verified_languages",
          "is_user_voice",
          "owner_id"
        ],
        "title": "DubbingReplacementVoiceModel"
      },
      "DubbingResource": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "source_language": {
            "type": "string",
            "title": "Source Language"
          },
          "target_languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Target Languages"
          },
          "input": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "background": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "foreground": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "speaker_tracks": {
            "additionalProperties": {
              "$ref": "#/components/schemas/SpeakerTrack"
            },
            "type": "object",
            "title": "Speaker Tracks"
          },
          "speaker_segments": {
            "additionalProperties": {
              "$ref": "#/components/schemas/SpeakerSegment"
            },
            "type": "object",
            "title": "Speaker Segments"
          },
          "renders": {
            "additionalProperties": {
              "$ref": "#/components/schemas/Render"
            },
            "type": "object",
            "title": "Renders"
          }
        },
        "type": "object",
        "required": [
          "id",
          "version",
          "source_language",
          "target_languages",
          "input",
          "background",
          "foreground",
          "speaker_tracks",
          "speaker_segments",
          "renders"
        ],
        "title": "DubbingResource"
      },
      "DubbingSnapshotInternalMetadataResponseModel": {
        "properties": {
          "creation_date_unix": {
            "type": "integer",
            "title": "Creation Date Unix"
          },
          "renders": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/DubbingRenderInternalMetadataResponseModel"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Renders"
          }
        },
        "type": "object",
        "required": [
          "creation_date_unix",
          "renders"
        ],
        "title": "DubbingSnapshotInternalMetadataResponseModel"
      },
      "DubbingSourceClipResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "media": {
            "$ref": "#/components/schemas/PublicMediaReferenceResponseModel"
          },
          "media_offset": {
            "type": "number",
            "title": "Media Offset"
          },
          "media_duration": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Media Duration"
          },
          "trim": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Trim"
          },
          "volume": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Volume"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "media",
          "media_offset",
          "media_duration",
          "trim",
          "volume"
        ],
        "title": "DubbingSourceClipResponseModel"
      },
      "DubbingTranscribeResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "language_code": {
            "type": "string",
            "title": "Language Code"
          }
        },
        "type": "object",
        "required": [
          "text",
          "language_code"
        ],
        "title": "DubbingTranscribeResponseModel"
      },
      "DubbingTranslateResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "language_code": {
            "type": "string",
            "title": "Language Code"
          }
        },
        "type": "object",
        "required": [
          "text",
          "language_code"
        ],
        "title": "DubbingTranslateResponseModel"
      },
      "DubbingUsageInternalMetadataResponseModel": {
        "properties": {
          "units": {
            "type": "number",
            "title": "Units"
          }
        },
        "type": "object",
        "required": [
          "units"
        ],
        "title": "DubbingUsageInternalMetadataResponseModel"
      },
      "DubsDeliverable": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "dubs",
            "title": "Kind"
          },
          "dub_id": {
            "type": "string",
            "title": "Dub Id"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "dub_id"
        ],
        "title": "DubsDeliverable"
      },
      "DubsDescriptionMetaModel": {
        "properties": {
          "duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration S"
          }
        },
        "type": "object",
        "title": "DubsDescriptionMetaModel"
      },
      "DubsQuoteRequest": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "dub",
            "title": "Kind",
            "default": "dub"
          },
          "src_language": {
            "type": "string",
            "title": "Src Language"
          },
          "dst_language": {
            "type": "string",
            "title": "Dst Language"
          },
          "num_speakers": {
            "type": "integer",
            "title": "Num Speakers"
          },
          "duration_s": {
            "type": "number",
            "title": "Duration S"
          }
        },
        "type": "object",
        "required": [
          "src_language",
          "dst_language",
          "num_speakers",
          "duration_s"
        ],
        "title": "DubsQuoteRequest"
      },
      "DubsQuoteResponse": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "dub",
            "title": "Kind",
            "default": "dub"
          },
          "amount_usd": {
            "type": "number",
            "title": "Amount Usd"
          },
          "total_amount_usd": {
            "type": "number",
            "title": "Total Amount Usd"
          },
          "base_rate": {
            "type": "number",
            "title": "Base Rate"
          },
          "min_quantity_min": {
            "type": "number",
            "title": "Min Quantity Min"
          },
          "duration_s": {
            "type": "number",
            "title": "Duration S"
          },
          "src_language": {
            "type": "string",
            "title": "Src Language"
          },
          "dst_language": {
            "type": "string",
            "title": "Dst Language"
          },
          "num_speakers": {
            "type": "integer",
            "title": "Num Speakers"
          },
          "billed_minutes": {
            "type": "number",
            "title": "Billed Minutes"
          },
          "discount_percent": {
            "type": "number",
            "title": "Discount Percent"
          }
        },
        "type": "object",
        "required": [
          "amount_usd",
          "total_amount_usd",
          "base_rate",
          "min_quantity_min",
          "duration_s",
          "src_language",
          "dst_language",
          "num_speakers",
          "billed_minutes",
          "discount_percent"
        ],
        "title": "DubsQuoteResponse"
      },
      "DubsTaskContent": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "dub",
            "title": "Kind",
            "default": "dub"
          },
          "dub_id": {
            "type": "string",
            "title": "Dub Id"
          }
        },
        "type": "object",
        "required": [
          "dub_id"
        ],
        "title": "DubsTaskContent"
      },
      "DubsTaskDescriptionMetaDbModel": {
        "properties": {
          "media": {
            "$ref": "#/components/schemas/MediaMeta"
          },
          "audio_file_16k_id": {
            "type": "string",
            "format": "uuid",
            "title": "Audio File 16K Id"
          },
          "duration_s": {
            "type": "number",
            "title": "Duration S"
          },
          "src_language": {
            "type": "string",
            "title": "Src Language"
          },
          "dst_language": {
            "type": "string",
            "title": "Dst Language"
          },
          "num_speakers": {
            "type": "integer",
            "title": "Num Speakers"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "media",
          "audio_file_16k_id",
          "duration_s",
          "src_language",
          "dst_language",
          "num_speakers",
          "name"
        ],
        "title": "DubsTaskDescriptionMetaDbModel"
      },
      "DuplicateProjectResponseModel": {
        "properties": {
          "project": {
            "$ref": "#/components/schemas/ProjectResponseModel"
          }
        },
        "type": "object",
        "required": [
          "project"
        ],
        "title": "DuplicateProjectResponseModel"
      },
      "DynamicVariableAssignment": {
        "properties": {
          "source": {
            "type": "string",
            "const": "response",
            "title": "Source",
            "description": "The source to extract the value from. Currently only 'response' is supported.",
            "default": "response"
          },
          "dynamic_variable": {
            "type": "string",
            "title": "Dynamic Variable",
            "description": "The name of the dynamic variable to assign the extracted value to"
          },
          "value_path": {
            "type": "string",
            "title": "Value Path",
            "description": "Dot notation path to extract the value from the source (e.g., 'user.name' or 'data.0.id')"
          }
        },
        "type": "object",
        "required": [
          "dynamic_variable",
          "value_path"
        ],
        "title": "DynamicVariableAssignment",
        "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables.",
        "example": {
          "dynamic_variable": "user_name",
          "source": "response",
          "value_path": "user.name"
        }
      },
      "DynamicVariableUpdateCommonModel": {
        "properties": {
          "variable_name": {
            "type": "string",
            "title": "Variable Name"
          },
          "old_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Old Value"
          },
          "new_value": {
            "type": "string",
            "title": "New Value"
          },
          "updated_at": {
            "type": "number",
            "title": "Updated At"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "tool_request_id": {
            "type": "string",
            "title": "Tool Request Id"
          }
        },
        "type": "object",
        "required": [
          "variable_name",
          "old_value",
          "new_value",
          "updated_at",
          "tool_name",
          "tool_request_id"
        ],
        "title": "DynamicVariableUpdateCommonModel",
        "description": "Tracks a dynamic variable update that occurred during tool execution."
      },
      "DynamicVariablesConfig": {
        "properties": {
          "dynamic_variable_placeholders": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "type": "object",
            "title": "Dynamic Variable Placeholders",
            "description": "A dictionary of dynamic variable placeholders and their values"
          }
        },
        "type": "object",
        "title": "DynamicVariablesConfig",
        "example": {
          "dynamic_variable_placeholders": {
            "user_name": "John Doe"
          }
        }
      },
      "DynamicVariablesConfigWorkflowOverride": {
        "properties": {
          "dynamic_variable_placeholders": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dynamic Variable Placeholders",
            "description": "A dictionary of dynamic variable placeholders and their values"
          }
        },
        "type": "object",
        "title": "DynamicVariablesConfigWorkflowOverride",
        "example": {
          "dynamic_variable_placeholders": {
            "user_name": "John Doe"
          }
        }
      },
      "EditChapterResponseModel": {
        "properties": {
          "chapter": {
            "$ref": "#/components/schemas/ChapterWithContentResponseModel"
          }
        },
        "type": "object",
        "required": [
          "chapter"
        ],
        "title": "EditChapterResponseModel"
      },
      "EditProjectResponseModel": {
        "properties": {
          "project": {
            "$ref": "#/components/schemas/ProjectResponseModel"
          }
        },
        "type": "object",
        "required": [
          "project"
        ],
        "title": "EditProjectResponseModel"
      },
      "EditVoiceResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the voice edit request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "EditVoiceResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "EditVoiceSettingsResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the voice settings edit request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "EditVoiceSettingsResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "EditorSnapshot": {
        "properties": {
          "schema_version": {
            "type": "integer",
            "title": "Schema Version"
          },
          "data": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "schema_version",
          "data"
        ],
        "title": "EditorSnapshot",
        "description": "Type definition for snapshot structure."
      },
      "EditorSnapshotResponseModel": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "EditorSnapshotResponseModel"
      },
      "EmbedVariant": {
        "type": "string",
        "enum": [
          "tiny",
          "compact",
          "full",
          "expandable"
        ],
        "title": "EmbedVariant"
      },
      "EmbeddedResource": {
        "properties": {
          "type": {
            "type": "string",
            "const": "resource",
            "title": "Type"
          },
          "resource": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextResourceContents"
              },
              {
                "$ref": "#/components/schemas/BlobResourceContents"
              }
            ],
            "title": "Resource"
          },
          "annotations": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Annotations"
              },
              {
                "type": "null"
              }
            ]
          },
          "_meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "type",
          "resource"
        ],
        "title": "EmbeddedResource",
        "description": "The contents of a resource, embedded into a prompt or tool call result.\n\nIt is up to the client how best to render embedded resources for the benefit\nof the LLM and/or the user."
      },
      "EmbeddingModelEnum": {
        "type": "string",
        "enum": [
          "e5_mistral_7b_instruct",
          "multilingual_e5_large_instruct"
        ],
        "title": "EmbeddingModelEnum"
      },
      "EndCallToolConfig": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "end_call",
            "title": "System Tool Type",
            "default": "end_call"
          }
        },
        "type": "object",
        "title": "EndCallToolConfig"
      },
      "EndCallToolResultModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "end_call_success",
            "title": "Result Type",
            "default": "end_call_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          }
        },
        "type": "object",
        "title": "EndCallToolResultModel"
      },
      "EnrichedTeamTask": {
        "properties": {
          "instance_id": {
            "type": "string",
            "format": "uuid",
            "title": "Instance Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "state": {
            "$ref": "#/components/schemas/TaskInstanceState"
          },
          "submission_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Deadline"
          },
          "bounty_usd": {
            "type": "number",
            "title": "Bounty Usd"
          },
          "description_id": {
            "type": "string",
            "format": "uuid",
            "title": "Description Id"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagDbModel"
            },
            "type": "array",
            "title": "Tags"
          },
          "kind": {
            "$ref": "#/components/schemas/TaskKind"
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TranscriptionDescriptionMetaModel"
              },
              {
                "$ref": "#/components/schemas/SubtitlesDesctiptionMetaModel"
              },
              {
                "$ref": "#/components/schemas/DubsDescriptionMetaModel"
              }
            ],
            "title": "Meta"
          },
          "instructions": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/TranscriptionTaskInstructions"
                  },
                  {
                    "$ref": "#/components/schemas/xi_backend__routes__productions__models__response__response_models__SubtitlesCommonInstructions"
                  }
                ],
                "discriminator": {
                  "propertyName": "kind",
                  "mapping": {
                    "captions": "#/components/schemas/xi_backend__routes__productions__models__response__response_models__SubtitlesCommonInstructions",
                    "subtitles": "#/components/schemas/xi_backend__routes__productions__models__response__response_models__SubtitlesCommonInstructions",
                    "transcription": "#/components/schemas/TranscriptionTaskInstructions",
                    "transcription_v2": "#/components/schemas/TranscriptionTaskInstructions"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "last_updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "owner_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Email"
          }
        },
        "type": "object",
        "required": [
          "instance_id",
          "name",
          "owner_id",
          "state",
          "bounty_usd",
          "description_id",
          "tags",
          "kind",
          "meta",
          "priority",
          "owner_email"
        ],
        "title": "EnrichedTeamTask"
      },
      "EnterpriseChargeInfo": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "enterprise",
            "title": "Kind"
          },
          "amount_credits": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount Credits"
          }
        },
        "type": "object",
        "required": [
          "kind"
        ],
        "title": "EnterpriseChargeInfo"
      },
      "EnterpriseQuoteDecisionRequest": {
        "properties": {
          "decision": {
            "$ref": "#/components/schemas/QuoteDecision"
          }
        },
        "type": "object",
        "required": [
          "decision"
        ],
        "title": "EnterpriseQuoteDecisionRequest"
      },
      "ErrorDBModel": {
        "properties": {
          "error_name": {
            "type": "string",
            "title": "Error Name"
          },
          "error_message": {
            "type": "string",
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": [
          "error_name",
          "error_message"
        ],
        "title": "ErrorDBModel"
      },
      "EvaluationSettings": {
        "properties": {
          "criteria": {
            "items": {
              "$ref": "#/components/schemas/PromptEvaluationCriteria"
            },
            "type": "array",
            "title": "Criteria",
            "description": "Individual criteria that the agent should be evaluated against"
          }
        },
        "type": "object",
        "title": "EvaluationSettings",
        "description": "Settings to evaluate an agent's performance.\nAgents are evaluated against a set of criteria, with success being defined as meeting some combination of those criteria."
      },
      "EvaluationSuccessResult": {
        "type": "string",
        "enum": [
          "success",
          "failure",
          "unknown"
        ],
        "title": "EvaluationSuccessResult"
      },
      "ExportChapterAudioInputSpec": {
        "properties": {
          "type": {
            "type": "string",
            "const": "chapter",
            "title": "Type"
          },
          "file_format": {
            "type": "string",
            "const": "audio",
            "title": "File Format"
          },
          "audio_format": {
            "type": "string",
            "enum": [
              "mp3_44100_128",
              "mp3_44100_192",
              "pcm_44100"
            ],
            "title": "Audio Format"
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "file_format",
          "audio_format",
          "chapter_id"
        ],
        "title": "ExportChapterAudioInputSpec"
      },
      "ExportChapterParagraphsZipInputSpec": {
        "properties": {
          "type": {
            "type": "string",
            "const": "chapter",
            "title": "Type"
          },
          "file_format": {
            "type": "string",
            "const": "paragraphs_zip",
            "title": "File Format"
          },
          "audio_format": {
            "type": "string",
            "enum": [
              "mp3_44100_128",
              "mp3_44100_192",
              "pcm_44100"
            ],
            "title": "Audio Format"
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "file_format",
          "audio_format",
          "chapter_id"
        ],
        "title": "ExportChapterParagraphsZipInputSpec"
      },
      "ExportChapterVideoInputSpec": {
        "properties": {
          "type": {
            "type": "string",
            "const": "chapter",
            "title": "Type"
          },
          "file_format": {
            "type": "string",
            "const": "video",
            "title": "File Format"
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "file_format",
          "chapter_id"
        ],
        "title": "ExportChapterVideoInputSpec"
      },
      "ExportOptions": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/SegmentedJsonExportOptions"
          },
          {
            "$ref": "#/components/schemas/DocxExportOptions"
          },
          {
            "$ref": "#/components/schemas/PdfExportOptions"
          },
          {
            "$ref": "#/components/schemas/TxtExportOptions"
          },
          {
            "$ref": "#/components/schemas/HtmlExportOptions"
          },
          {
            "$ref": "#/components/schemas/SrtExportOptions"
          }
        ],
        "title": "ExportOptions",
        "discriminator": {
          "propertyName": "format",
          "mapping": {
            "docx": "#/components/schemas/DocxExportOptions",
            "html": "#/components/schemas/HtmlExportOptions",
            "pdf": "#/components/schemas/PdfExportOptions",
            "segmented_json": "#/components/schemas/SegmentedJsonExportOptions",
            "srt": "#/components/schemas/SrtExportOptions",
            "txt": "#/components/schemas/TxtExportOptions"
          }
        }
      },
      "ExportProjectAudioInputSpec": {
        "properties": {
          "type": {
            "type": "string",
            "const": "project",
            "title": "Type"
          },
          "file_format": {
            "type": "string",
            "const": "audio",
            "title": "File Format"
          },
          "audio_format": {
            "type": "string",
            "enum": [
              "mp3_44100_128",
              "mp3_44100_192",
              "pcm_44100"
            ],
            "title": "Audio Format"
          }
        },
        "type": "object",
        "required": [
          "type",
          "file_format",
          "audio_format"
        ],
        "title": "ExportProjectAudioInputSpec"
      },
      "ExportProjectLpfInputSpec": {
        "properties": {
          "type": {
            "type": "string",
            "const": "project",
            "title": "Type"
          },
          "file_format": {
            "type": "string",
            "const": "lpf",
            "title": "File Format"
          },
          "audio_format": {
            "type": "string",
            "enum": [
              "mp3_44100_128",
              "mp3_44100_192",
              "pcm_44100"
            ],
            "title": "Audio Format"
          },
          "preview_config": {
            "$ref": "#/components/schemas/ExportProjectPreviewSpec"
          },
          "speakers": {
            "items": {
              "$ref": "#/components/schemas/ExportProjectSpeakerSpec"
            },
            "type": "array",
            "title": "Speakers"
          }
        },
        "type": "object",
        "required": [
          "type",
          "file_format",
          "audio_format",
          "preview_config",
          "speakers"
        ],
        "title": "ExportProjectLpfInputSpec"
      },
      "ExportProjectParagraphsZipInputSpec": {
        "properties": {
          "type": {
            "type": "string",
            "const": "project",
            "title": "Type"
          },
          "file_format": {
            "type": "string",
            "const": "paragraphs_zip",
            "title": "File Format"
          },
          "audio_format": {
            "type": "string",
            "enum": [
              "mp3_44100_128",
              "mp3_44100_192",
              "pcm_44100"
            ],
            "title": "Audio Format"
          }
        },
        "type": "object",
        "required": [
          "type",
          "file_format",
          "audio_format"
        ],
        "title": "ExportProjectParagraphsZipInputSpec"
      },
      "ExportProjectPreviewSpec": {
        "properties": {
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id"
          },
          "start_ms": {
            "type": "integer",
            "title": "Start Ms"
          },
          "end_ms": {
            "type": "integer",
            "title": "End Ms"
          }
        },
        "type": "object",
        "required": [
          "chapter_id",
          "start_ms",
          "end_ms"
        ],
        "title": "ExportProjectPreviewSpec"
      },
      "ExportProjectReaderPublishInputSpec": {
        "properties": {
          "type": {
            "type": "string",
            "const": "project",
            "title": "Type"
          },
          "file_format": {
            "type": "string",
            "const": "reader_publish",
            "title": "File Format"
          }
        },
        "type": "object",
        "required": [
          "type",
          "file_format"
        ],
        "title": "ExportProjectReaderPublishInputSpec"
      },
      "ExportProjectResponseModel": {
        "properties": {
          "read": {
            "$ref": "#/components/schemas/ReadMetadataResponseModel"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          }
        },
        "type": "object",
        "required": [
          "read",
          "access_token"
        ],
        "title": "ExportProjectResponseModel"
      },
      "ExportProjectSpeakerSpec": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ExportProjectSpeakerSpec"
      },
      "ExportProjectVideoInputSpec": {
        "properties": {
          "type": {
            "type": "string",
            "const": "project",
            "title": "Type"
          },
          "file_format": {
            "type": "string",
            "const": "video",
            "title": "File Format"
          }
        },
        "type": "object",
        "required": [
          "type",
          "file_format"
        ],
        "title": "ExportProjectVideoInputSpec"
      },
      "ExportProjectZipInputSpec": {
        "properties": {
          "type": {
            "type": "string",
            "const": "project",
            "title": "Type"
          },
          "file_format": {
            "type": "string",
            "const": "zip",
            "title": "File Format"
          },
          "audio_format": {
            "type": "string",
            "enum": [
              "mp3_44100_128",
              "mp3_44100_192",
              "pcm_44100"
            ],
            "title": "Audio Format"
          }
        },
        "type": "object",
        "required": [
          "type",
          "file_format",
          "audio_format"
        ],
        "title": "ExportProjectZipInputSpec"
      },
      "ExtendedSubscriptionResponseModel": {
        "properties": {
          "tier": {
            "type": "string",
            "title": "Tier",
            "description": "The tier of the user's subscription."
          },
          "character_count": {
            "type": "integer",
            "title": "Character Count",
            "description": "The number of characters used by the user."
          },
          "character_limit": {
            "type": "integer",
            "title": "Character Limit",
            "description": "The maximum number of characters allowed in the current billing period."
          },
          "max_character_limit_extension": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Character Limit Extension",
            "description": "Maximum number of characters that the character limit can be exceeded by. Managed by the workspace admin."
          },
          "can_extend_character_limit": {
            "type": "boolean",
            "title": "Can Extend Character Limit",
            "description": "Whether the user can extend their character limit."
          },
          "allowed_to_extend_character_limit": {
            "type": "boolean",
            "title": "Allowed To Extend Character Limit",
            "description": "Whether the user is allowed to extend their character limit."
          },
          "next_character_count_reset_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Character Count Reset Unix",
            "description": "The Unix timestamp of the next character count reset."
          },
          "voice_slots_used": {
            "type": "integer",
            "title": "Voice Slots Used",
            "description": "The number of voice slots used by the user."
          },
          "professional_voice_slots_used": {
            "type": "integer",
            "title": "Professional Voice Slots Used",
            "description": "The number of professional voice slots used by the workspace/user if single seat."
          },
          "voice_limit": {
            "type": "integer",
            "title": "Voice Limit",
            "description": "The maximum number of voice slots allowed for the user."
          },
          "max_voice_add_edits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Voice Add Edits",
            "description": "The maximum number of voice add/edits allowed for the user."
          },
          "voice_add_edit_counter": {
            "type": "integer",
            "title": "Voice Add Edit Counter",
            "description": "The number of voice add/edits used by the user."
          },
          "professional_voice_limit": {
            "type": "integer",
            "title": "Professional Voice Limit",
            "description": "The maximum number of professional voices allowed for the user."
          },
          "can_extend_voice_limit": {
            "type": "boolean",
            "title": "Can Extend Voice Limit",
            "description": "Whether the user can extend their voice limit."
          },
          "can_use_instant_voice_cloning": {
            "type": "boolean",
            "title": "Can Use Instant Voice Cloning",
            "description": "Whether the user can use instant voice cloning."
          },
          "can_use_professional_voice_cloning": {
            "type": "boolean",
            "title": "Can Use Professional Voice Cloning",
            "description": "Whether the user can use professional voice cloning."
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "usd",
                  "eur"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "The currency of the user's subscription."
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatusType",
            "description": "The status of the user's subscription."
          },
          "billing_period": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "monthly_period",
                  "annual_period"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Billing Period",
            "description": "The billing period of the user's subscription."
          },
          "character_refresh_period": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "monthly_period",
                  "annual_period"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Refresh Period",
            "description": "The character refresh period of the user's subscription."
          },
          "next_invoice": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/InvoiceResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The next invoice for the user."
          },
          "has_open_invoices": {
            "type": "boolean",
            "title": "Has Open Invoices",
            "description": "Whether the user has open invoices."
          }
        },
        "type": "object",
        "required": [
          "tier",
          "character_count",
          "character_limit",
          "max_character_limit_extension",
          "can_extend_character_limit",
          "allowed_to_extend_character_limit",
          "voice_slots_used",
          "professional_voice_slots_used",
          "voice_limit",
          "voice_add_edit_counter",
          "professional_voice_limit",
          "can_extend_voice_limit",
          "can_use_instant_voice_cloning",
          "can_use_professional_voice_cloning",
          "status",
          "has_open_invoices"
        ],
        "title": "ExtendedSubscriptionResponseModel",
        "example": {
          "allowed_to_extend_character_limit": true,
          "billing_period": "monthly_period",
          "can_extend_character_limit": true,
          "can_extend_voice_limit": true,
          "can_use_instant_voice_cloning": true,
          "can_use_professional_voice_cloning": true,
          "character_count": 1000,
          "character_limit": 10000,
          "character_refresh_period": "monthly_period",
          "currency": "usd",
          "has_open_invoices": false,
          "max_character_limit_extension": 10000,
          "next_character_count_reset_unix": 1738356858,
          "next_invoice": {
            "amount_due_cents": 1000,
            "next_payment_attempt_unix": 1738356858
          },
          "professional_voice_limit": 1,
          "professional_voice_slots_used": 0,
          "status": "active",
          "tier": "starter",
          "voice_add_edit_counter": 0,
          "voice_limit": 10,
          "voice_slots_used": 1
        }
      },
      "FailureReason": {
        "type": "string",
        "enum": [
          "bad_prompt",
          "insufficient_credits",
          "concurrency_limit_exceeded",
          "timeout",
          "internal_error",
          "unusual_activity"
        ],
        "title": "FailureReason"
      },
      "FeatureStatusCommonModel": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": false
          },
          "used": {
            "type": "boolean",
            "title": "Used",
            "default": false
          }
        },
        "type": "object",
        "title": "FeatureStatusCommonModel"
      },
      "FeaturesUsageCommonModel": {
        "properties": {
          "language_detection": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "transfer_to_agent": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "transfer_to_number": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "multivoice": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "dtmf_tones": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "external_mcp_servers": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "pii_zrm_workspace": {
            "type": "boolean",
            "title": "Pii Zrm Workspace",
            "default": false
          },
          "pii_zrm_agent": {
            "type": "boolean",
            "title": "Pii Zrm Agent",
            "default": false
          },
          "tool_dynamic_variable_updates": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          },
          "is_livekit": {
            "type": "boolean",
            "title": "Is Livekit",
            "default": false
          },
          "voicemail_detection": {
            "$ref": "#/components/schemas/FeatureStatusCommonModel"
          }
        },
        "type": "object",
        "title": "FeaturesUsageCommonModel"
      },
      "FeedbackResponseModel": {
        "properties": {
          "thumbs_up": {
            "type": "boolean",
            "title": "Thumbs Up",
            "description": "Whether the user liked the generated item."
          },
          "feedback": {
            "type": "string",
            "title": "Feedback",
            "description": "The feedback text provided by the user."
          },
          "emotions": {
            "type": "boolean",
            "title": "Emotions",
            "description": "Whether the user provided emotions."
          },
          "inaccurate_clone": {
            "type": "boolean",
            "title": "Inaccurate Clone",
            "description": "Whether the user thinks the clone is inaccurate."
          },
          "glitches": {
            "type": "boolean",
            "title": "Glitches",
            "description": "Whether the user thinks there are glitches in the audio."
          },
          "audio_quality": {
            "type": "boolean",
            "title": "Audio Quality",
            "description": "Whether the user thinks the audio quality is good."
          },
          "other": {
            "type": "boolean",
            "title": "Other",
            "description": "Whether the user provided other feedback."
          },
          "review_status": {
            "type": "string",
            "title": "Review Status",
            "description": "The review status of the item. Defaults to 'not_reviewed'.",
            "default": "not_reviewed"
          }
        },
        "type": "object",
        "required": [
          "thumbs_up",
          "feedback",
          "emotions",
          "inaccurate_clone",
          "glitches",
          "audio_quality",
          "other"
        ],
        "title": "FeedbackResponseModel",
        "example": {
          "audio_quality": true,
          "emotions": true,
          "feedback": "This is an example of test feedback.",
          "glitches": true,
          "inaccurate_clone": false,
          "other": false,
          "review_status": "not_reviewed",
          "thumbs_up": true
        }
      },
      "FiatChargeType": {
        "type": "string",
        "enum": [
          "_internal_test",
          "productions_dollars",
          "stt_minute",
          "convai_minute",
          "convai_text_message",
          "llm_input_tokens",
          "llm_output_tokens",
          "llm_input_cache_read_tokens",
          "llm_input_cache_write_tokens",
          "sts_minute",
          "tts_thousand_characters",
          "text_to_voice_one_thousand_characters",
          "dubbing_minute",
          "dubbing_translate_thousand_characters",
          "sfx_minute",
          "sfx_purchase_minute",
          "voice_isolation_minute",
          "music_generation_minute"
        ],
        "title": "FiatChargeType"
      },
      "FileResponseModel": {
        "properties": {
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs"
          },
          "size_mb": {
            "type": "number",
            "title": "Size Mb"
          },
          "signed_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signed Url"
          }
        },
        "type": "object",
        "required": [
          "file_name",
          "content_type",
          "duration_secs",
          "size_mb"
        ],
        "title": "FileResponseModel"
      },
      "FineTuningDBModel-Input": {
        "properties": {
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "is_allowed_to_fine_tune": {
            "type": "boolean",
            "title": "Is Allowed To Fine Tune"
          },
          "state": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string",
                  "enum": [
                    "not_started",
                    "queued",
                    "fine_tuning",
                    "fine_tuned",
                    "failed",
                    "delayed"
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "progress": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress"
          },
          "message": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "dataset_duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Duration Seconds"
          },
          "attempts": {
            "items": {
              "$ref": "#/components/schemas/VerificationAttemptDBModel"
            },
            "type": "array",
            "title": "Attempts"
          },
          "audio_verification_slices": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Audio Verification Slices"
          },
          "manual_verification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ManualVerificationDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "model_id_to_pvc_path": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Model Id To Pvc Path"
          },
          "max_verification_attempts": {
            "type": "integer",
            "title": "Max Verification Attempts",
            "default": 0
          },
          "next_max_verification_attempts_reset_unix_ms": {
            "type": "integer",
            "title": "Next Max Verification Attempts Reset Unix Ms",
            "default": 0
          },
          "fine_tuning_is_queued": {
            "type": "boolean",
            "title": "Fine Tuning Is Queued",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "language",
          "is_allowed_to_fine_tune"
        ],
        "title": "FineTuningDBModel"
      },
      "FineTuningDBModel-Output": {
        "properties": {
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "is_allowed_to_fine_tune": {
            "type": "boolean",
            "title": "Is Allowed To Fine Tune"
          },
          "state": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string",
                  "enum": [
                    "not_started",
                    "queued",
                    "fine_tuning",
                    "fine_tuned",
                    "failed",
                    "delayed"
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "progress": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress"
          },
          "message": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "dataset_duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Duration Seconds"
          },
          "attempts": {
            "items": {
              "$ref": "#/components/schemas/VerificationAttemptDBModel"
            },
            "type": "array",
            "title": "Attempts"
          },
          "audio_verification_slices": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Audio Verification Slices"
          },
          "manual_verification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ManualVerificationDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "model_id_to_pvc_path": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Model Id To Pvc Path"
          },
          "max_verification_attempts": {
            "type": "integer",
            "title": "Max Verification Attempts",
            "default": 0
          },
          "next_max_verification_attempts_reset_unix_ms": {
            "type": "integer",
            "title": "Next Max Verification Attempts Reset Unix Ms",
            "default": 0
          },
          "fine_tuning_is_queued": {
            "type": "boolean",
            "title": "Fine Tuning Is Queued",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "language",
          "is_allowed_to_fine_tune"
        ],
        "title": "FineTuningDBModel"
      },
      "FineTuningResponseModel": {
        "properties": {
          "is_allowed_to_fine_tune": {
            "type": "boolean",
            "title": "Is Allowed To Fine Tune",
            "description": "Whether the user is allowed to fine-tune the voice."
          },
          "state": {
            "additionalProperties": {
              "type": "string",
              "enum": [
                "not_started",
                "queued",
                "fine_tuning",
                "fine_tuned",
                "failed",
                "delayed"
              ]
            },
            "type": "object",
            "title": "State",
            "description": "The state of the fine-tuning process for each model."
          },
          "verification_failures": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Verification Failures",
            "description": "List of verification failures in the fine-tuning process."
          },
          "verification_attempts_count": {
            "type": "integer",
            "title": "Verification Attempts Count",
            "description": "The number of verification attempts in the fine-tuning process."
          },
          "manual_verification_requested": {
            "type": "boolean",
            "title": "Manual Verification Requested",
            "description": "Whether a manual verification was requested for the fine-tuning process."
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The language of the fine-tuning process."
          },
          "progress": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress",
            "description": "The progress of the fine-tuning process."
          },
          "message": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "The message of the fine-tuning process."
          },
          "dataset_duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Duration Seconds",
            "description": "The duration of the dataset in seconds."
          },
          "verification_attempts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VerificationAttemptResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verification Attempts",
            "description": "The number of verification attempts."
          },
          "slice_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slice Ids",
            "description": "List of slice IDs."
          },
          "manual_verification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ManualVerificationResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The manual verification of the fine-tuning process."
          },
          "max_verification_attempts": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Verification Attempts",
            "description": "The maximum number of verification attempts."
          },
          "next_max_verification_attempts_reset_unix_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Max Verification Attempts Reset Unix Ms",
            "description": "The next maximum verification attempts reset time in Unix milliseconds."
          }
        },
        "type": "object",
        "required": [
          "is_allowed_to_fine_tune",
          "state",
          "verification_failures",
          "verification_attempts_count",
          "manual_verification_requested"
        ],
        "title": "FineTuningResponseModel",
        "example": {
          "is_allowed_to_fine_tune": true,
          "manual_verification_requested": false,
          "state": {
            "eleven_multilingual_v2": "fine_tuned"
          },
          "verification_attempts_count": 2,
          "verification_failures": []
        }
      },
      "ForcedAlignmentCharacterResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The character that was transcribed."
          },
          "start": {
            "type": "number",
            "title": "Start",
            "description": "The start time of the character in seconds."
          },
          "end": {
            "type": "number",
            "title": "End",
            "description": "The end time of the character in seconds."
          }
        },
        "type": "object",
        "required": [
          "text",
          "start",
          "end"
        ],
        "title": "ForcedAlignmentCharacterResponseModel",
        "description": "Model representing a single character with its timing information from the aligner.",
        "example": {
          "end": 0.02,
          "start": 0,
          "text": "H"
        }
      },
      "ForcedAlignmentResponseModel": {
        "properties": {
          "characters": {
            "items": {
              "$ref": "#/components/schemas/ForcedAlignmentCharacterResponseModel"
            },
            "type": "array",
            "title": "Characters",
            "description": "List of characters with their timing information."
          },
          "words": {
            "items": {
              "$ref": "#/components/schemas/ForcedAlignmentWordResponseModel"
            },
            "type": "array",
            "title": "Words",
            "description": "List of words with their timing information."
          },
          "loss": {
            "type": "number",
            "title": "Loss",
            "description": "The average alignment loss/confidence score for the entire transcript, calculated from all characters."
          }
        },
        "type": "object",
        "required": [
          "characters",
          "words",
          "loss"
        ],
        "title": "ForcedAlignmentResponseModel",
        "description": "Model representing the response from the aligner service."
      },
      "ForcedAlignmentWordResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The word that was transcribed."
          },
          "start": {
            "type": "number",
            "title": "Start",
            "description": "The start time of the word in seconds."
          },
          "end": {
            "type": "number",
            "title": "End",
            "description": "The end time of the word in seconds."
          },
          "loss": {
            "type": "number",
            "title": "Loss",
            "description": "The average alignment loss/confidence score for this word, calculated from its constituent characters."
          }
        },
        "type": "object",
        "required": [
          "text",
          "start",
          "end",
          "loss"
        ],
        "title": "ForcedAlignmentWordResponseModel",
        "description": "Model representing a single word with its timing information from the aligner.",
        "example": {
          "end": 1.02,
          "loss": 0.12,
          "start": 0,
          "text": "Hello"
        }
      },
      "FrameRateResponseModel": {
        "properties": {
          "frame_count": {
            "type": "integer",
            "title": "Frame Count"
          },
          "elapsed_time": {
            "type": "integer",
            "title": "Elapsed Time"
          }
        },
        "type": "object",
        "required": [
          "frame_count",
          "elapsed_time"
        ],
        "title": "FrameRateResponseModel"
      },
      "GenerateAgentRequestModel": {
        "properties": {
          "agent_type": {
            "type": "string",
            "enum": [
              "personal",
              "business"
            ],
            "title": "Agent Type",
            "description": "Type of agent to create"
          },
          "industry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Industry",
            "description": "Industry for business agents"
          },
          "use_case": {
            "type": "string",
            "title": "Use Case",
            "description": "Primary use case for the agent"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Domain",
            "description": "Website domain to scrape for business context"
          },
          "goal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Goal",
            "description": "Main goal or purpose for the agent"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name of the agent"
          },
          "text_only": {
            "type": "boolean",
            "title": "Text Only",
            "description": "If enabled, audio will not be processed and only text will be used",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "agent_type",
          "use_case",
          "name"
        ],
        "title": "GenerateAgentRequestModel"
      },
      "GenerateNameResponseModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "GenerateNameResponseModel"
      },
      "GenerateSoundsResponseModel": {
        "properties": {
          "sound_generations_with_waveforms": {
            "items": {
              "$ref": "#/components/schemas/SoundGenerationWithWaveformBase64ResponseModel"
            },
            "type": "array",
            "title": "Sound Generations With Waveforms"
          }
        },
        "type": "object",
        "required": [
          "sound_generations_with_waveforms"
        ],
        "title": "GenerateSoundsResponseModel"
      },
      "GenerateSystemPromptRequestModel": {
        "properties": {
          "user_input": {
            "type": "string",
            "title": "User Input"
          },
          "current_system_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current System Prompt"
          }
        },
        "type": "object",
        "required": [
          "user_input"
        ],
        "title": "GenerateSystemPromptRequestModel"
      },
      "GenerateSystemPromptResponseModel": {
        "properties": {
          "generated_prompt": {
            "type": "string",
            "title": "Generated Prompt",
            "description": "The generated system prompt based on the user input"
          }
        },
        "type": "object",
        "required": [
          "generated_prompt"
        ],
        "title": "GenerateSystemPromptResponseModel",
        "example": {
          "generated_prompt": "You are a helpful AI assistant that provides accurate and concise responses to user queries. Always be polite and professional in your interactions."
        }
      },
      "GeneratedVoiceDBModel": {
        "properties": {
          "generated_voice_id": {
            "type": "string",
            "title": "Generated Voice Id"
          },
          "embedding": {
            "type": "string",
            "format": "binary",
            "title": "Embedding"
          },
          "create_date_unix": {
            "type": "integer",
            "title": "Create Date Unix"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Labels"
          },
          "played": {
            "type": "boolean",
            "title": "Played",
            "default": false
          },
          "selected": {
            "type": "boolean",
            "title": "Selected",
            "default": false
          },
          "model_id": {
            "type": "string",
            "enum": [
              "eleven_multilingual_ttv_v2",
              "eleven_ttv_v3"
            ],
            "title": "Model Id",
            "default": "eleven_multilingual_ttv_v2"
          },
          "preview_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Text"
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed"
          },
          "generation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generation Id"
          },
          "output_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Format"
          },
          "stream_previews": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream Previews"
          }
        },
        "type": "object",
        "required": [
          "generated_voice_id",
          "embedding",
          "create_date_unix",
          "labels"
        ],
        "title": "GeneratedVoiceDBModel"
      },
      "GenerationHistoryItem": {
        "properties": {
          "history_item_id": {
            "type": "string",
            "title": "History Item Id"
          },
          "duration_in_characters": {
            "type": "integer",
            "title": "Duration In Characters"
          },
          "waveform_base_64": {
            "type": "string",
            "title": "Waveform Base 64"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          }
        },
        "type": "object",
        "required": [
          "history_item_id",
          "duration_in_characters",
          "waveform_base_64",
          "created_at_unix"
        ],
        "title": "GenerationHistoryItem"
      },
      "GenerationSnapshotDBModel": {
        "properties": {
          "children": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TTSNodeDBModel"
                },
                {
                  "$ref": "#/components/schemas/DividerNodeDBModel"
                },
                {
                  "$ref": "#/components/schemas/ImageNodeDBModel"
                }
              ]
            },
            "type": "array",
            "title": "Children"
          },
          "last_updated_at_unix_ms": {
            "type": "integer",
            "title": "Last Updated At Unix Ms"
          },
          "regeneration_count": {
            "type": "integer",
            "title": "Regeneration Count"
          }
        },
        "type": "object",
        "required": [
          "children",
          "last_updated_at_unix_ms",
          "regeneration_count"
        ],
        "title": "GenerationSnapshotDBModel"
      },
      "GeoLocationResponseModel": {
        "properties": {
          "country": {
            "type": "string",
            "title": "Country"
          },
          "region": {
            "type": "string",
            "title": "Region"
          },
          "city": {
            "type": "string",
            "title": "City"
          }
        },
        "type": "object",
        "required": [
          "country",
          "region",
          "city"
        ],
        "title": "GeoLocationResponseModel"
      },
      "GetAPIKeysResponseModel": {
        "properties": {
          "api_keys": {
            "items": {
              "$ref": "#/components/schemas/XiApiKeyMetadataResponseModel"
            },
            "type": "array",
            "title": "Api Keys"
          }
        },
        "type": "object",
        "required": [
          "api_keys"
        ],
        "title": "GetAPIKeysResponseModel"
      },
      "GetAgentCountResponseModel": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "count"
        ],
        "title": "GetAgentCountResponseModel"
      },
      "GetAgentEmbedResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "widget_config": {
            "$ref": "#/components/schemas/WidgetConfigResponseModel"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "widget_config"
        ],
        "title": "GetAgentEmbedResponseModel"
      },
      "GetAgentKnowledgebaseSizeResponseModel": {
        "properties": {
          "number_of_pages": {
            "type": "number",
            "title": "Number Of Pages"
          }
        },
        "type": "object",
        "required": [
          "number_of_pages"
        ],
        "title": "GetAgentKnowledgebaseSizeResponseModel"
      },
      "GetAgentLinkResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id",
            "description": "The ID of the agent"
          },
          "token": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationTokenDBModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The token data for the agent"
          }
        },
        "type": "object",
        "required": [
          "agent_id"
        ],
        "title": "GetAgentLinkResponseModel",
        "example": {
          "agent_id": "J3Pbu5gP6NNKBscdCdwB"
        }
      },
      "GetAgentResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id",
            "description": "The ID of the agent"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the agent"
          },
          "conversation_config": {
            "$ref": "#/components/schemas/ConversationalConfigAPIModel-Output",
            "description": "The conversation configuration of the agent"
          },
          "metadata": {
            "$ref": "#/components/schemas/AgentMetadataResponseModel",
            "description": "The metadata of the agent"
          },
          "platform_settings": {
            "$ref": "#/components/schemas/AgentPlatformSettingsResponseModel",
            "description": "The platform settings of the agent"
          },
          "phone_numbers": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GetPhoneNumberTwilioResponseModel"
                },
                {
                  "$ref": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel"
                }
              ],
              "discriminator": {
                "propertyName": "provider",
                "mapping": {
                  "sip_trunk": "#/components/schemas/GetPhoneNumberSIPTrunkResponseModel",
                  "twilio": "#/components/schemas/GetPhoneNumberTwilioResponseModel"
                }
              }
            },
            "type": "array",
            "title": "Phone Numbers",
            "description": "The phone numbers of the agent"
          },
          "workflow": {
            "title": "Workflow",
            "description": "The workflow of the agent"
          },
          "access_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceAccessInfo"
              },
              {
                "type": "null"
              }
            ],
            "description": "The access information of the agent for the user"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Agent tags used to categorize the agent"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "name",
          "conversation_config",
          "metadata"
        ],
        "title": "GetAgentResponseModel",
        "example": {
          "agent_id": "J3Pbu5gP6NNKBscdCdwB",
          "name": "My Agent"
        }
      },
      "GetAgentsAnalyticsResponse": {
        "properties": {
          "agents": {
            "items": {
              "$ref": "#/components/schemas/AgentMetricResponse"
            },
            "type": "array",
            "title": "Agents"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          }
        },
        "type": "object",
        "required": [
          "agents",
          "total_count"
        ],
        "title": "GetAgentsAnalyticsResponse"
      },
      "GetAgentsPageResponseModel": {
        "properties": {
          "agents": {
            "items": {
              "$ref": "#/components/schemas/AgentSummaryResponseModel"
            },
            "type": "array",
            "title": "Agents",
            "description": "A list of agents and their metadata"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor",
            "description": "The next cursor to paginate through the agents"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more agents to paginate through"
          }
        },
        "type": "object",
        "required": [
          "agents",
          "has_more"
        ],
        "title": "GetAgentsPageResponseModel",
        "example": {
          "agents": [
            {
              "access_info": {
                "creator_email": "john@example.com",
                "creator_name": "John Doe",
                "is_creator": true,
                "role": "admin"
              },
              "agent_id": "J3Pbu5gP6NNKBscdCdwB",
              "created_at_unix_secs": 1716153600,
              "name": "My Agent",
              "tags": [
                "Customer Support",
                "Technical Help",
                "Eleven"
              ]
            }
          ],
          "has_more": false,
          "next_cursor": "123"
        }
      },
      "GetAllVoiceRemixingSessionsResponseModel": {
        "properties": {
          "voice_remixing_sessions": {
            "items": {
              "$ref": "#/components/schemas/VoiceRemixingSessionResponseModel"
            },
            "type": "array",
            "title": "Voice Remixing Sessions"
          }
        },
        "type": "object",
        "required": [
          "voice_remixing_sessions"
        ],
        "title": "GetAllVoiceRemixingSessionsResponseModel"
      },
      "GetAudioNativeProjectSettingsResponseModel": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "Whether the project is enabled."
          },
          "snapshot_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Snapshot Id",
            "description": "The ID of the latest snapshot of the project."
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudioNativeProjectSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The settings of the project."
          }
        },
        "type": "object",
        "required": [
          "enabled"
        ],
        "title": "GetAudioNativeProjectSettingsResponseModel",
        "example": {
          "enabled": true,
          "settings": {
            "audio_path": "audio/my_project.mp3",
            "audio_url": "https://example.com/audio/my_project.mp3",
            "author": "John Doe",
            "background_color": "#FFFFFF",
            "image": "https://example.com/image.jpg",
            "sessionization": 1,
            "small": false,
            "status": "ready",
            "text_color": "#000000",
            "title": "My Project"
          },
          "snapshot_id": "JBFqnCBsd6RMkjVDRZzb"
        }
      },
      "GetCallAnalyticsResponse": {
        "properties": {
          "metrics": {
            "items": {
              "$ref": "#/components/schemas/CallMetricResponse"
            },
            "type": "array",
            "title": "Metrics"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "cost": {
            "type": "integer",
            "title": "Cost"
          },
          "average_cost": {
            "type": "number",
            "title": "Average Cost"
          },
          "llm_cost": {
            "type": "number",
            "title": "Llm Cost"
          },
          "average_llm_cost": {
            "type": "number",
            "title": "Average Llm Cost"
          },
          "duration": {
            "type": "integer",
            "title": "Duration"
          },
          "average_duration": {
            "type": "integer",
            "title": "Average Duration"
          }
        },
        "type": "object",
        "required": [
          "metrics",
          "count",
          "cost",
          "average_cost",
          "llm_cost",
          "average_llm_cost",
          "duration",
          "average_duration"
        ],
        "title": "GetCallAnalyticsResponse"
      },
      "GetChapterBlockResponseModel": {
        "properties": {
          "block": {
            "$ref": "#/components/schemas/BlockResponseModel"
          },
          "block_snapshots": {
            "items": {
              "$ref": "#/components/schemas/BlockSnapshotResponseModel"
            },
            "type": "array",
            "title": "Block Snapshots"
          }
        },
        "type": "object",
        "required": [
          "block",
          "block_snapshots"
        ],
        "title": "GetChapterBlockResponseModel"
      },
      "GetChapterBlocksResponseModel": {
        "properties": {
          "blocks": {
            "items": {
              "$ref": "#/components/schemas/BlockResponseModel"
            },
            "type": "array",
            "title": "Blocks"
          },
          "last_block_conversion_unix_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Block Conversion Unix Ms"
          }
        },
        "type": "object",
        "required": [
          "blocks"
        ],
        "title": "GetChapterBlocksResponseModel"
      },
      "GetChapterContentResponseModel": {
        "properties": {
          "videos": {
            "items": {
              "$ref": "#/components/schemas/ProjectVideoResponseModel"
            },
            "type": "array",
            "title": "Videos"
          },
          "sound_effects": {
            "items": {
              "$ref": "#/components/schemas/BlockSoundEffectResponseModel"
            },
            "type": "array",
            "title": "Sound Effects"
          },
          "blocks": {
            "items": {
              "$ref": "#/components/schemas/BlockResponseModel"
            },
            "type": "array",
            "title": "Blocks"
          },
          "last_block_conversion_unix_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Block Conversion Unix Ms"
          },
          "external_audios": {
            "items": {
              "$ref": "#/components/schemas/ProjectExternalAudioResponseModel"
            },
            "type": "array",
            "title": "External Audios"
          }
        },
        "type": "object",
        "required": [
          "videos",
          "sound_effects",
          "blocks",
          "external_audios"
        ],
        "title": "GetChapterContentResponseModel"
      },
      "GetChapterSoundEffectsResponse": {
        "properties": {
          "sound_effects": {
            "items": {
              "$ref": "#/components/schemas/BlockSoundEffectResponseModel"
            },
            "type": "array",
            "title": "Sound Effects"
          }
        },
        "type": "object",
        "required": [
          "sound_effects"
        ],
        "title": "GetChapterSoundEffectsResponse"
      },
      "GetChaptersResponseModel": {
        "properties": {
          "chapters": {
            "items": {
              "$ref": "#/components/schemas/ChapterResponseModel"
            },
            "type": "array",
            "title": "Chapters"
          }
        },
        "type": "object",
        "required": [
          "chapters"
        ],
        "title": "GetChaptersResponseModel"
      },
      "GetClonedByDocumentCrossEnvResponseModel": {
        "properties": {
          "cloned_by_document": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSharingRefDBModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "cloned_by_document"
        ],
        "title": "GetClonedByDocumentCrossEnvResponseModel"
      },
      "GetConvAIDashboardSettingsResponseModel": {
        "properties": {
          "charts": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardCallSuccessChartModel"
                },
                {
                  "$ref": "#/components/schemas/DashboardCriteriaChartModel"
                },
                {
                  "$ref": "#/components/schemas/DashboardDataCollectionChartModel"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "call_success": "#/components/schemas/DashboardCallSuccessChartModel",
                  "criteria": "#/components/schemas/DashboardCriteriaChartModel",
                  "data_collection": "#/components/schemas/DashboardDataCollectionChartModel"
                }
              }
            },
            "type": "array",
            "maxItems": 4,
            "title": "Charts"
          }
        },
        "type": "object",
        "title": "GetConvAIDashboardSettingsResponseModel"
      },
      "GetConvAISettingsResponseModel": {
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
              },
              {
                "type": "null"
              }
            ]
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          },
          "can_use_mcp_servers": {
            "type": "boolean",
            "title": "Can Use Mcp Servers",
            "description": "Whether the workspace can use MCP servers",
            "default": false
          },
          "rag_retention_period_days": {
            "type": "integer",
            "maximum": 30,
            "exclusiveMinimum": 0,
            "title": "Rag Retention Period Days",
            "default": 10
          }
        },
        "type": "object",
        "title": "GetConvAISettingsResponseModel"
      },
      "GetConversationResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id"
          },
          "status": {
            "type": "string",
            "enum": [
              "initiated",
              "in-progress",
              "processing",
              "done",
              "failed"
            ],
            "title": "Status"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "transcript": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel-Output"
            },
            "type": "array",
            "title": "Transcript"
          },
          "metadata": {
            "$ref": "#/components/schemas/ConversationHistoryMetadataCommonModel"
          },
          "analysis": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationHistoryAnalysisCommonModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "conversation_initiation_client_data": {
            "$ref": "#/components/schemas/ConversationInitiationClientDataRequest-Output"
          },
          "has_audio": {
            "type": "boolean",
            "title": "Has Audio"
          },
          "has_user_audio": {
            "type": "boolean",
            "title": "Has User Audio"
          },
          "has_response_audio": {
            "type": "boolean",
            "title": "Has Response Audio"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "conversation_id",
          "status",
          "transcript",
          "metadata",
          "has_audio",
          "has_user_audio",
          "has_response_audio"
        ],
        "title": "GetConversationResponseModel"
      },
      "GetConversationsPageResponseModel": {
        "properties": {
          "conversations": {
            "items": {
              "$ref": "#/components/schemas/ConversationSummaryResponseModel"
            },
            "type": "array",
            "title": "Conversations"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "conversations",
          "has_more"
        ],
        "title": "GetConversationsPageResponseModel"
      },
      "GetCriteriaAnalyticsResponse": {
        "properties": {
          "metrics": {
            "items": {
              "$ref": "#/components/schemas/CriteriaMetricResponse"
            },
            "type": "array",
            "title": "Metrics"
          },
          "success": {
            "type": "integer",
            "title": "Success"
          },
          "failure": {
            "type": "integer",
            "title": "Failure"
          },
          "unknown": {
            "type": "integer",
            "title": "Unknown"
          }
        },
        "type": "object",
        "required": [
          "metrics",
          "success",
          "failure",
          "unknown"
        ],
        "title": "GetCriteriaAnalyticsResponse"
      },
      "GetDataCollectionAnalyticsResponse": {
        "properties": {
          "metrics": {
            "items": {
              "$ref": "#/components/schemas/DataCollectionMetricResponse"
            },
            "type": "array",
            "title": "Metrics"
          }
        },
        "type": "object",
        "required": [
          "metrics"
        ],
        "title": "GetDataCollectionAnalyticsResponse"
      },
      "GetEcapaEmbeddingCrossEnvResponseModel": {
        "properties": {
          "ecapa_embedding_b64": {
            "type": "string",
            "title": "Ecapa Embedding B64"
          }
        },
        "type": "object",
        "required": [
          "ecapa_embedding_b64"
        ],
        "title": "GetEcapaEmbeddingCrossEnvResponseModel"
      },
      "GetHasAlphaAccessResponseModel": {
        "properties": {
          "has_alpha_access": {
            "type": "boolean",
            "title": "Has Alpha Access"
          }
        },
        "type": "object",
        "required": [
          "has_alpha_access"
        ],
        "title": "GetHasAlphaAccessResponseModel"
      },
      "GetHistoryShareLinkResponseModel": {
        "properties": {
          "share_link": {
            "type": "string",
            "title": "Share Link"
          },
          "public_user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public User Name"
          }
        },
        "type": "object",
        "required": [
          "share_link",
          "public_user_name"
        ],
        "title": "GetHistoryShareLinkResponseModel"
      },
      "GetKnowledgeBaseDependentAgentsResponseModel": {
        "properties": {
          "agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Agents"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "agents",
          "has_more"
        ],
        "title": "GetKnowledgeBaseDependentAgentsResponseModel"
      },
      "GetKnowledgeBaseFileResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "supported_usages": {
            "items": {
              "$ref": "#/components/schemas/DocumentUsageModeEnum"
            },
            "type": "array",
            "title": "Supported Usages"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "extracted_inner_html": {
            "type": "string",
            "title": "Extracted Inner Html"
          },
          "type": {
            "type": "string",
            "const": "file",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "metadata",
          "supported_usages",
          "access_info",
          "extracted_inner_html",
          "type"
        ],
        "title": "GetKnowledgeBaseFileResponseModel"
      },
      "GetKnowledgeBaseListResponseModel": {
        "properties": {
          "documents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/GetKnowledgeBaseSummaryURLResponseModel"
                },
                {
                  "$ref": "#/components/schemas/GetKnowledgeBaseSummaryFileResponseModel"
                },
                {
                  "$ref": "#/components/schemas/GetKnowledgeBaseSummaryTextResponseModel"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "file": "#/components/schemas/GetKnowledgeBaseSummaryFileResponseModel",
                  "text": "#/components/schemas/GetKnowledgeBaseSummaryTextResponseModel",
                  "url": "#/components/schemas/GetKnowledgeBaseSummaryURLResponseModel"
                }
              }
            },
            "type": "array",
            "title": "Documents"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "documents",
          "has_more"
        ],
        "title": "GetKnowledgeBaseListResponseModel"
      },
      "GetKnowledgeBaseSummaryFileResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "supported_usages": {
            "items": {
              "$ref": "#/components/schemas/DocumentUsageModeEnum"
            },
            "type": "array",
            "title": "Supported Usages"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "dependent_agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Dependent Agents"
          },
          "type": {
            "type": "string",
            "const": "file",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "metadata",
          "supported_usages",
          "access_info",
          "dependent_agents",
          "type"
        ],
        "title": "GetKnowledgeBaseSummaryFileResponseModel"
      },
      "GetKnowledgeBaseSummaryTextResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "supported_usages": {
            "items": {
              "$ref": "#/components/schemas/DocumentUsageModeEnum"
            },
            "type": "array",
            "title": "Supported Usages"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "dependent_agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Dependent Agents"
          },
          "type": {
            "type": "string",
            "const": "text",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "metadata",
          "supported_usages",
          "access_info",
          "dependent_agents",
          "type"
        ],
        "title": "GetKnowledgeBaseSummaryTextResponseModel"
      },
      "GetKnowledgeBaseSummaryURLResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "supported_usages": {
            "items": {
              "$ref": "#/components/schemas/DocumentUsageModeEnum"
            },
            "type": "array",
            "title": "Supported Usages"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "dependent_agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Dependent Agents"
          },
          "type": {
            "type": "string",
            "const": "url",
            "title": "Type"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "metadata",
          "supported_usages",
          "access_info",
          "dependent_agents",
          "type",
          "url"
        ],
        "title": "GetKnowledgeBaseSummaryURLResponseModel"
      },
      "GetKnowledgeBaseTextResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "supported_usages": {
            "items": {
              "$ref": "#/components/schemas/DocumentUsageModeEnum"
            },
            "type": "array",
            "title": "Supported Usages"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "extracted_inner_html": {
            "type": "string",
            "title": "Extracted Inner Html"
          },
          "type": {
            "type": "string",
            "const": "text",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "metadata",
          "supported_usages",
          "access_info",
          "extracted_inner_html",
          "type"
        ],
        "title": "GetKnowledgeBaseTextResponseModel"
      },
      "GetKnowledgeBaseURLResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "supported_usages": {
            "items": {
              "$ref": "#/components/schemas/DocumentUsageModeEnum"
            },
            "type": "array",
            "title": "Supported Usages"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "extracted_inner_html": {
            "type": "string",
            "title": "Extracted Inner Html"
          },
          "type": {
            "type": "string",
            "const": "url",
            "title": "Type"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "metadata",
          "supported_usages",
          "access_info",
          "extracted_inner_html",
          "type",
          "url"
        ],
        "title": "GetKnowledgeBaseURLResponseModel"
      },
      "GetLanguageAnalyticsResponse": {
        "properties": {
          "metrics": {
            "items": {
              "$ref": "#/components/schemas/LanguageMetricResponse"
            },
            "type": "array",
            "title": "Metrics"
          }
        },
        "type": "object",
        "required": [
          "metrics"
        ],
        "title": "GetLanguageAnalyticsResponse"
      },
      "GetLibraryVoicesResponseModel": {
        "properties": {
          "voices": {
            "items": {
              "$ref": "#/components/schemas/LibraryVoiceResponseModel"
            },
            "type": "array",
            "title": "Voices",
            "description": "The list of shared voices"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more shared voices in subsequent pages."
          },
          "last_sort_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sort Id"
          }
        },
        "type": "object",
        "required": [
          "voices",
          "has_more"
        ],
        "title": "GetLibraryVoicesResponseModel",
        "example": {
          "has_more": false,
          "voices": [
            {
              "accent": "american",
              "age": "young",
              "category": "professional",
              "cloned_by_count": 11,
              "date_unix": 1714423232,
              "description": "Perfectly calm, neutral and strong voice. Great for a young female protagonist.",
              "descriptive": "calm",
              "featured": false,
              "free_users_allowed": true,
              "gender": "Female",
              "language": "en",
              "live_moderation_enabled": false,
              "name": "Alita",
              "play_api_usage_character_count_1y": 12852,
              "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3",
              "public_owner_id": "63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f",
              "rate": 1,
              "usage_character_count_1y": 12852,
              "usage_character_count_7d": 12852,
              "use_case": "characters_animation",
              "verified_languages": [
                {
                  "accent": "american",
                  "language": "en",
                  "locale": "en-US",
                  "model_id": "eleven_multilingual_v2",
                  "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3"
                }
              ],
              "voice_id": "sB1b5zUrxQVAFl2PhZFp"
            }
          ]
        }
      },
      "GetLiveCountResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "count"
        ],
        "title": "GetLiveCountResponse"
      },
      "GetNoGoVoiceEmbeddingFromCloudCrossEnvResponseModel": {
        "properties": {
          "ecapa_embedding_b64": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ecapa Embedding B64"
          }
        },
        "type": "object",
        "required": [
          "ecapa_embedding_b64"
        ],
        "title": "GetNoGoVoiceEmbeddingFromCloudCrossEnvResponseModel"
      },
      "GetNoGoVoicesCrossEnvResponseModel": {
        "properties": {
          "nogo_voices": {
            "items": {
              "$ref": "#/components/schemas/NoGoVoiceDBModel"
            },
            "type": "array",
            "title": "Nogo Voices"
          }
        },
        "type": "object",
        "required": [
          "nogo_voices"
        ],
        "title": "GetNoGoVoicesCrossEnvResponseModel"
      },
      "GetPhoneNumberInboundSIPTrunkConfigResponseModel": {
        "properties": {
          "allowed_addresses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Allowed Addresses",
            "description": "List of IP addresses that are allowed to use the trunk. Each item in the list can be an individual IP address or a Classless Inter-Domain Routing notation representing a CIDR block."
          },
          "allowed_numbers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Numbers",
            "description": "List of phone numbers that are allowed to use the trunk."
          },
          "media_encryption": {
            "$ref": "#/components/schemas/SIPMediaEncryptionEnum"
          },
          "has_auth_credentials": {
            "type": "boolean",
            "title": "Has Auth Credentials",
            "description": "Whether authentication credentials are configured"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "SIP trunk username (if available)"
          }
        },
        "type": "object",
        "required": [
          "allowed_addresses",
          "allowed_numbers",
          "media_encryption",
          "has_auth_credentials"
        ],
        "title": "GetPhoneNumberInboundSIPTrunkConfigResponseModel"
      },
      "GetPhoneNumberOutboundSIPTrunkConfigResponseModel": {
        "properties": {
          "address": {
            "type": "string",
            "title": "Address",
            "description": "Hostname or IP the SIP INVITE is sent to"
          },
          "transport": {
            "$ref": "#/components/schemas/SIPTrunkTransportEnum",
            "description": "Protocol to use for SIP transport"
          },
          "media_encryption": {
            "$ref": "#/components/schemas/SIPMediaEncryptionEnum",
            "description": "Whether or not to encrypt media (data layer)."
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Headers",
            "description": "SIP headers for INVITE request"
          },
          "has_auth_credentials": {
            "type": "boolean",
            "title": "Has Auth Credentials",
            "description": "Whether authentication credentials are configured"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "SIP trunk username (if available)"
          },
          "has_outbound_trunk": {
            "type": "boolean",
            "title": "Has Outbound Trunk",
            "description": "Whether a LiveKit SIP outbound trunk is configured",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "address",
          "transport",
          "media_encryption",
          "has_auth_credentials"
        ],
        "title": "GetPhoneNumberOutboundSIPTrunkConfigResponseModel",
        "description": "SIP Trunk configuration details for a phone number"
      },
      "GetPhoneNumberSIPTrunkResponseModel": {
        "properties": {
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Phone number"
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "Label for the phone number"
          },
          "supports_inbound": {
            "type": "boolean",
            "title": "Supports Inbound",
            "description": "Whether this phone number supports inbound calls",
            "default": true
          },
          "supports_outbound": {
            "type": "boolean",
            "title": "Supports Outbound",
            "description": "Whether this phone number supports outbound calls",
            "default": true
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id",
            "description": "The ID of the phone number"
          },
          "assigned_agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberAgentInfo"
              },
              {
                "type": "null"
              }
            ],
            "description": "The agent that is assigned to the phone number"
          },
          "provider": {
            "type": "string",
            "const": "sip_trunk",
            "title": "Provider",
            "description": "Phone provider",
            "default": "sip_trunk"
          },
          "provider_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GetPhoneNumberOutboundSIPTrunkConfigResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "deprecated": true
          },
          "outbound_trunk": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GetPhoneNumberOutboundSIPTrunkConfigResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration of the Outbound SIP trunk - if configured."
          },
          "inbound_trunk": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GetPhoneNumberInboundSIPTrunkConfigResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration of the Inbound SIP trunk - if configured."
          }
        },
        "type": "object",
        "required": [
          "phone_number",
          "label",
          "phone_number_id"
        ],
        "title": "GetPhoneNumberSIPTrunkResponseModel",
        "example": {
          "label": "Sales Team",
          "phone_number": "+1987654321",
          "phone_number_id": "phone_456",
          "provider": "sip_trunk",
          "supports_inbound": true,
          "supports_outbound": true
        }
      },
      "GetPhoneNumberTwilioResponseModel": {
        "properties": {
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Phone number"
          },
          "label": {
            "type": "string",
            "title": "Label",
            "description": "Label for the phone number"
          },
          "supports_inbound": {
            "type": "boolean",
            "title": "Supports Inbound",
            "description": "Whether this phone number supports inbound calls",
            "default": true
          },
          "supports_outbound": {
            "type": "boolean",
            "title": "Supports Outbound",
            "description": "Whether this phone number supports outbound calls",
            "default": true
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id",
            "description": "The ID of the phone number"
          },
          "assigned_agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PhoneNumberAgentInfo"
              },
              {
                "type": "null"
              }
            ],
            "description": "The agent that is assigned to the phone number"
          },
          "provider": {
            "type": "string",
            "const": "twilio",
            "title": "Provider",
            "description": "Phone provider",
            "default": "twilio"
          }
        },
        "type": "object",
        "required": [
          "phone_number",
          "label",
          "phone_number_id"
        ],
        "title": "GetPhoneNumberTwilioResponseModel",
        "example": {
          "label": "Customer Support",
          "phone_number": "+1234567890",
          "phone_number_id": "phone_123",
          "provider": "twilio",
          "supports_inbound": true,
          "supports_outbound": true
        }
      },
      "GetProjectExportLinkResponseModel": {
        "properties": {
          "project_export_id": {
            "type": "string",
            "title": "Project Export Id"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "pending": {
            "type": "boolean",
            "title": "Pending",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "project_export_id"
        ],
        "title": "GetProjectExportLinkResponseModel"
      },
      "GetProjectExportReadPublishRedirectInfoResponseModel": {
        "properties": {
          "project_export_id": {
            "type": "string",
            "title": "Project Export Id"
          },
          "read_id": {
            "type": "string",
            "title": "Read Id"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          }
        },
        "type": "object",
        "required": [
          "project_export_id",
          "read_id",
          "access_token"
        ],
        "title": "GetProjectExportReadPublishRedirectInfoResponseModel"
      },
      "GetProjectExportResponseModel": {
        "properties": {
          "project_export": {
            "$ref": "#/components/schemas/ProjectExportWithMetadataResponseModel"
          }
        },
        "type": "object",
        "required": [
          "project_export"
        ],
        "title": "GetProjectExportResponseModel"
      },
      "GetProjectExportsResponseModel": {
        "properties": {
          "project_exports": {
            "items": {
              "$ref": "#/components/schemas/ProjectExportResponseModel"
            },
            "type": "array",
            "title": "Project Exports"
          }
        },
        "type": "object",
        "required": [
          "project_exports"
        ],
        "title": "GetProjectExportsResponseModel"
      },
      "GetProjectVoiceSettingsResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "alias": {
            "type": "string",
            "title": "Alias"
          },
          "stability": {
            "type": "number",
            "title": "Stability"
          },
          "similarity_boost": {
            "type": "number",
            "title": "Similarity Boost"
          },
          "style": {
            "type": "number",
            "title": "Style"
          },
          "use_speaker_boost": {
            "type": "boolean",
            "title": "Use Speaker Boost"
          },
          "volume_gain": {
            "type": "number",
            "title": "Volume Gain"
          },
          "speed": {
            "type": "number",
            "title": "Speed"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "alias",
          "stability",
          "similarity_boost",
          "style",
          "use_speaker_boost",
          "volume_gain",
          "speed"
        ],
        "title": "GetProjectVoiceSettingsResponseModel"
      },
      "GetProjectsPageResponseModel": {
        "properties": {
          "projects": {
            "items": {
              "$ref": "#/components/schemas/ProjectResponseModel"
            },
            "type": "array",
            "title": "Projects"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "projects",
          "has_more"
        ],
        "title": "GetProjectsPageResponseModel"
      },
      "GetProjectsResponseModel": {
        "properties": {
          "projects": {
            "items": {
              "$ref": "#/components/schemas/ProjectResponseModel"
            },
            "type": "array",
            "title": "Projects",
            "description": "A list of projects with their metadata."
          }
        },
        "type": "object",
        "required": [
          "projects"
        ],
        "title": "GetProjectsResponseModel",
        "example": {
          "projects": [
            {
              "access_level": "viewer",
              "author": "John Doe",
              "can_be_downloaded": true,
              "content_type": "Novel",
              "cover_image_url": "https://example.com/cover.jpg",
              "create_date_unix": 1714204800,
              "creation_meta": {
                "creation_progress": 0.5,
                "status": "pending",
                "type": "blank"
              },
              "default_model_id": "eleven_multilingual_v2",
              "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
              "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
              "description": "This is a description of my project.",
              "fiction": "fiction",
              "genres": [
                "Novel",
                "Short Story"
              ],
              "isbn_number": "978-90-274-3964-2",
              "language": "en",
              "last_conversion_date_unix": 1714204800,
              "mature_content": false,
              "name": "My Project",
              "original_publication_date": "2025-01-01",
              "project_id": "aw1NgEzBg83R7vgmiJt6",
              "quality_check_on": false,
              "quality_check_on_when_bulk_convert": false,
              "state": "default",
              "target_audience": "young adult",
              "title": "My Project",
              "volume_normalization": true
            }
          ]
        }
      },
      "GetPronunciationDictionariesMetadataResponseModel": {
        "properties": {
          "pronunciation_dictionaries": {
            "items": {
              "$ref": "#/components/schemas/GetPronunciationDictionaryMetadataResponseModel"
            },
            "type": "array",
            "title": "Pronunciation Dictionaries",
            "description": "A list of pronunciation dictionaries and their metadata."
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor",
            "description": "The next cursor to use for pagination."
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more pronunciation dictionaries to fetch."
          }
        },
        "type": "object",
        "required": [
          "pronunciation_dictionaries",
          "has_more"
        ],
        "title": "GetPronunciationDictionariesMetadataResponseModel",
        "example": {
          "has_more": false,
          "next_cursor": "5xM3yVvZQKV0EfqQpLr2",
          "pronunciation_dictionaries": [
            {
              "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
              "creation_time_unix": 1714156800,
              "description": "This is a test dictionary",
              "id": "5xM3yVvZQKV0EfqQpLrJ",
              "latest_version_id": "5xM3yVvZQKV0EfqQpLr2",
              "latest_version_rules_num": 2,
              "name": "My Dictionary",
              "permission_on_resource": "admin"
            }
          ]
        }
      },
      "GetPronunciationDictionaryMetadataResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the pronunciation dictionary."
          },
          "latest_version_id": {
            "type": "string",
            "title": "Latest Version Id",
            "description": "The ID of the latest version of the pronunciation dictionary."
          },
          "latest_version_rules_num": {
            "type": "integer",
            "title": "Latest Version Rules Num",
            "description": "The number of rules in the latest version of the pronunciation dictionary."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the pronunciation dictionary."
          },
          "permission_on_resource": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission On Resource",
            "description": "The permission on the resource of the pronunciation dictionary."
          },
          "created_by": {
            "type": "string",
            "title": "Created By",
            "description": "The user ID of the creator of the pronunciation dictionary."
          },
          "creation_time_unix": {
            "type": "integer",
            "title": "Creation Time Unix",
            "description": "The creation time of the pronunciation dictionary in Unix timestamp."
          },
          "archived_time_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived Time Unix",
            "description": "The archive time of the pronunciation dictionary in Unix timestamp."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the pronunciation dictionary."
          }
        },
        "type": "object",
        "required": [
          "id",
          "latest_version_id",
          "latest_version_rules_num",
          "name",
          "permission_on_resource",
          "created_by",
          "creation_time_unix"
        ],
        "title": "GetPronunciationDictionaryMetadataResponseModel",
        "example": {
          "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
          "creation_time_unix": 1714156800,
          "description": "This is a test dictionary",
          "id": "5xM3yVvZQKV0EfqQpLrJ",
          "latest_version_id": "5xM3yVvZQKV0EfqQpLr2",
          "latest_version_rules_num": 2,
          "name": "My Dictionary",
          "permission_on_resource": "admin"
        }
      },
      "GetPurchasedSharedSoundGenerationResponseModel": {
        "properties": {
          "purchased_sound_generations": {
            "items": {
              "$ref": "#/components/schemas/SharedSoundGenerationPurchaseResponseModel"
            },
            "type": "array",
            "title": "Purchased Sound Generations"
          },
          "last_sort_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sort Id"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "purchased_sound_generations",
          "last_sort_id",
          "has_more"
        ],
        "title": "GetPurchasedSharedSoundGenerationResponseModel"
      },
      "GetQualityObservationResponseModel": {
        "properties": {
          "quality_observation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QualityObservationResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "GetQualityObservationResponseModel"
      },
      "GetReaderPublisherProfilesResponse": {
        "properties": {
          "profiles": {
            "items": {
              "$ref": "#/components/schemas/ReaderPublisherProfileDBModel"
            },
            "type": "array",
            "title": "Profiles"
          }
        },
        "type": "object",
        "required": [
          "profiles"
        ],
        "title": "GetReaderPublisherProfilesResponse"
      },
      "GetShareLinkDetailsResponseModel": {
        "properties": {
          "public_user_id": {
            "type": "string",
            "title": "Public User Id"
          },
          "public_user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public User Name"
          },
          "shared_at_unix": {
            "type": "number",
            "title": "Shared At Unix"
          },
          "audio_path": {
            "type": "string",
            "title": "Audio Path"
          },
          "voice_name": {
            "type": "string",
            "title": "Voice Name"
          },
          "voice_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Description"
          },
          "voice_category": {
            "type": "string",
            "title": "Voice Category"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "voice_display_create_with_button": {
            "type": "boolean",
            "title": "Voice Display Create With Button"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "date_unix": {
            "type": "number",
            "title": "Date Unix"
          }
        },
        "type": "object",
        "required": [
          "public_user_id",
          "public_user_name",
          "shared_at_unix",
          "audio_path",
          "voice_name",
          "voice_description",
          "voice_category",
          "voice_id",
          "voice_display_create_with_button",
          "text",
          "date_unix"
        ],
        "title": "GetShareLinkDetailsResponseModel"
      },
      "GetSharedSoundGenerationsResponseModel": {
        "properties": {
          "shared_sound_generations": {
            "items": {
              "$ref": "#/components/schemas/SharedSoundGenerationResponseModel"
            },
            "type": "array",
            "title": "Shared Sound Generations"
          },
          "last_sort_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sort Id"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "shared_sound_generations",
          "last_sort_id",
          "has_more"
        ],
        "title": "GetSharedSoundGenerationsResponseModel"
      },
      "GetSharedVoiceCollectionsResponseModel": {
        "properties": {
          "collections": {
            "items": {
              "$ref": "#/components/schemas/SharedVoiceCollectionResponseModel"
            },
            "type": "array",
            "title": "Collections"
          }
        },
        "type": "object",
        "required": [
          "collections"
        ],
        "title": "GetSharedVoiceCollectionsResponseModel"
      },
      "GetSharedVoicesProcessedCrossEnvResponseModel": {
        "properties": {
          "voices": {
            "items": {
              "$ref": "#/components/schemas/ProcessedVoiceDataCrossEnvModel"
            },
            "type": "array",
            "title": "Voices",
            "description": "The list of processed voice models with user info"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more shared voices in subsequent pages"
          },
          "processed_include_custom_rates": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Include Custom Rates",
            "description": "Processed include_custom_rates parameter"
          }
        },
        "type": "object",
        "required": [
          "voices",
          "has_more",
          "processed_include_custom_rates"
        ],
        "title": "GetSharedVoicesProcessedCrossEnvResponseModel",
        "description": "Response model for processed shared voices with user info included"
      },
      "GetSpeakerEmbeddingFromCloudCrossEnvResponseModel": {
        "properties": {
          "speaker_embedding_b64": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaker Embedding B64"
          }
        },
        "type": "object",
        "required": [
          "speaker_embedding_b64"
        ],
        "title": "GetSpeakerEmbeddingFromCloudCrossEnvResponseModel"
      },
      "GetSpeechHistoryResponseModel": {
        "properties": {
          "history": {
            "items": {
              "$ref": "#/components/schemas/SpeechHistoryItemResponseModel"
            },
            "type": "array",
            "title": "History",
            "description": "A list of speech history items."
          },
          "last_history_item_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last History Item Id",
            "description": "The ID of the last history item."
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more history items to fetch."
          }
        },
        "type": "object",
        "required": [
          "history",
          "has_more"
        ],
        "title": "GetSpeechHistoryResponseModel",
        "example": {
          "has_more": true,
          "history": [
            {
              "character_count_change_from": 17189,
              "character_count_change_to": 17231,
              "content_type": "audio/mpeg",
              "date_unix": 1714650306,
              "history_item_id": "ja9xsmfGhxYcymxGcOGB",
              "model_id": "eleven_multilingual_v2",
              "request_id": "BF0BZg4IwLGBlaVjv9Im",
              "settings": {
                "similarity_boost": 0.5,
                "stability": 0.71,
                "style": 0,
                "use_speaker_boost": true
              },
              "source": "TTS",
              "state": "created",
              "text": "Hello, world!",
              "voice_category": "premade",
              "voice_id": "21m00Tcm4TlvDq8ikWAM",
              "voice_name": "Rachel"
            }
          ],
          "last_history_item_id": "ja9xsmfGhxYcymxGcOGB"
        }
      },
      "GetTestSuiteInvocationResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "created_at": {
            "type": "integer",
            "title": "Created At"
          },
          "test_runs": {
            "items": {
              "$ref": "#/components/schemas/UnitTestRunResponseModel"
            },
            "type": "array",
            "title": "Test Runs"
          }
        },
        "type": "object",
        "required": [
          "id",
          "test_runs"
        ],
        "title": "GetTestSuiteInvocationResponseModel"
      },
      "GetTestsPageResponseModel": {
        "properties": {
          "tests": {
            "items": {
              "$ref": "#/components/schemas/UnitTestSummaryResponseModel"
            },
            "type": "array",
            "title": "Tests"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "tests",
          "has_more"
        ],
        "title": "GetTestsPageResponseModel"
      },
      "GetTestsSummariesByIdsResponseModel": {
        "properties": {
          "tests": {
            "additionalProperties": {
              "$ref": "#/components/schemas/UnitTestSummaryResponseModel"
            },
            "type": "object",
            "title": "Tests",
            "description": "Dictionary mapping test IDs to their summary information"
          }
        },
        "type": "object",
        "required": [
          "tests"
        ],
        "title": "GetTestsSummariesByIdsResponseModel"
      },
      "GetToolDependentAgentsResponseModel": {
        "properties": {
          "agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Agents"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "type": "object",
        "required": [
          "agents",
          "has_more"
        ],
        "title": "GetToolDependentAgentsResponseModel"
      },
      "GetUnitTestResponseModel": {
        "properties": {
          "chat_history": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel-Output"
            },
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "title": "Chat History"
          },
          "success_condition": {
            "type": "string",
            "title": "Success Condition",
            "description": "A prompt that evaluates whether the agent's response is successful. Should return True or False."
          },
          "success_examples": {
            "items": {
              "$ref": "#/components/schemas/AgentSuccessfulResponseExample"
            },
            "type": "array",
            "maxItems": 5,
            "minItems": 0,
            "title": "Success Examples",
            "description": "Non-empty list of example responses that should be considered successful"
          },
          "failure_examples": {
            "items": {
              "$ref": "#/components/schemas/AgentFailureResponseExample"
            },
            "type": "array",
            "maxItems": 5,
            "minItems": 0,
            "title": "Failure Examples",
            "description": "Non-empty list of example responses that should be considered failures"
          },
          "dynamic_variables": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Dynamic Variables",
            "description": "Dynamic variables to replace in the agent config during testing"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "chat_history",
          "success_condition",
          "success_examples",
          "failure_examples",
          "id",
          "name"
        ],
        "title": "GetUnitTestResponseModel"
      },
      "GetUsedVoicesResponseModel": {
        "properties": {
          "used_voices": {
            "items": {
              "$ref": "#/components/schemas/UsedVoiceResponseModel"
            },
            "type": "array",
            "title": "Used Voices"
          }
        },
        "type": "object",
        "required": [
          "used_voices"
        ],
        "title": "GetUsedVoicesResponseModel"
      },
      "GetUserCrossEnvResponseModel": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "public_user_id": {
            "type": "string",
            "title": "Public User Id"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "tier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tier"
          },
          "character_usage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Usage"
          },
          "next_character_count_reset_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Character Count Reset Unix"
          },
          "billing_period": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Billing Period"
          },
          "payment_provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payment Provider"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "public_user_id",
          "workspace_id"
        ],
        "title": "GetUserCrossEnvResponseModel"
      },
      "GetUserVoiceCollectionsResponseModel": {
        "properties": {
          "collections": {
            "items": {
              "$ref": "#/components/schemas/UserVoiceCollectionResponseModel"
            },
            "type": "array",
            "title": "Collections"
          }
        },
        "type": "object",
        "required": [
          "collections"
        ],
        "title": "GetUserVoiceCollectionsResponseModel"
      },
      "GetVoiceCollectionProcessedCrossEnvResponseModel": {
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/ProcessedVoiceCollectionDataCrossEnvModel",
            "description": "The processed voice collection model with voice data"
          }
        },
        "type": "object",
        "required": [
          "collection"
        ],
        "title": "GetVoiceCollectionProcessedCrossEnvResponseModel"
      },
      "GetVoiceCollectionsRawCrossEnvResponseModel": {
        "properties": {
          "collections": {
            "items": {
              "$ref": "#/components/schemas/SharedVoiceCollectionDBModel"
            },
            "type": "array",
            "title": "Collections",
            "description": "The list of raw voice collection models"
          }
        },
        "type": "object",
        "required": [
          "collections"
        ],
        "title": "GetVoiceCollectionsRawCrossEnvResponseModel"
      },
      "GetVoiceCrossEnvResponseModel": {
        "properties": {
          "voice": {
            "$ref": "#/components/schemas/VoiceDBModel-Output"
          },
          "voice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsDBModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "voice",
          "voice_settings"
        ],
        "title": "GetVoiceCrossEnvResponseModel"
      },
      "GetVoiceEditAffectedBlockRequestModel": {
        "properties": {
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "locked": {
            "type": "boolean",
            "title": "Locked"
          },
          "affected_node_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Affected Node Ids"
          }
        },
        "type": "object",
        "required": [
          "block_id",
          "locked",
          "affected_node_ids"
        ],
        "title": "GetVoiceEditAffectedBlockRequestModel"
      },
      "GetVoiceEditAffectedChapterRequestModel": {
        "properties": {
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id"
          },
          "affected_blocks": {
            "items": {
              "$ref": "#/components/schemas/GetVoiceEditAffectedBlockRequestModel"
            },
            "type": "array",
            "title": "Affected Blocks"
          }
        },
        "type": "object",
        "required": [
          "chapter_id",
          "affected_blocks"
        ],
        "title": "GetVoiceEditAffectedChapterRequestModel"
      },
      "GetVoiceEditAffectedNodesResponseModel": {
        "properties": {
          "affected_chapters": {
            "items": {
              "$ref": "#/components/schemas/GetVoiceEditAffectedChapterRequestModel"
            },
            "type": "array",
            "title": "Affected Chapters"
          }
        },
        "type": "object",
        "required": [
          "affected_chapters"
        ],
        "title": "GetVoiceEditAffectedNodesResponseModel"
      },
      "GetVoicesResponseModel": {
        "properties": {
          "voices": {
            "items": {
              "$ref": "#/components/schemas/VoiceResponseModel"
            },
            "type": "array",
            "title": "Voices",
            "description": "A list of available voices."
          }
        },
        "type": "object",
        "required": [
          "voices"
        ],
        "title": "GetVoicesResponseModel",
        "example": {
          "voices": [
            {
              "available_for_tiers": [
                "creator",
                "enterprise"
              ],
              "category": "professional",
              "description": "A warm, expressive voice with a touch of humor.",
              "fine_tuning": {
                "is_allowed_to_fine_tune": true,
                "manual_verification_requested": false,
                "state": {
                  "eleven_multilingual_v2": "fine_tuned"
                },
                "verification_attempts_count": 2,
                "verification_failures": []
              },
              "high_quality_base_model_ids": [
                "eleven_v2_flash",
                "eleven_flash_v2",
                "eleven_turbo_v2_5",
                "eleven_multilingual_v2",
                "eleven_v2_5_flash",
                "eleven_flash_v2_5",
                "eleven_turbo_v2"
              ],
              "is_legacy": false,
              "is_mixed": false,
              "is_owner": false,
              "labels": {
                "accent": "American",
                "age": "middle-aged",
                "description": "expressive",
                "gender": "female",
                "use_case": "social media"
              },
              "name": "Rachel",
              "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
              "settings": {
                "similarity_boost": 1,
                "speed": 1,
                "stability": 1,
                "style": 0,
                "use_speaker_boost": true
              },
              "sharing": {
                "category": "professional",
                "cloned_by_count": 50,
                "date_unix": 1714204800,
                "description": "A female voice with a soft and friendly tone.",
                "disable_at_unix": 1714204800,
                "enabled_in_library": true,
                "featured": true,
                "financial_rewards_enabled": true,
                "free_users_allowed": true,
                "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
                "labels": {
                  "accent": "American",
                  "gender": "female"
                },
                "liked_by_count": 100,
                "live_moderation_enabled": true,
                "moderation_check": {
                  "captcha_checks": [0.95, 0.98],
                  "captcha_ids": [
                    "captcha1",
                    "captcha2"
                  ],
                  "date_checked_unix": 1714204800,
                  "description_check": true,
                  "description_value": "A female voice with a soft and friendly tone.",
                  "name_check": true,
                  "name_value": "Rachel",
                  "sample_checks": [0.95, 0.98],
                  "sample_ids": [
                    "sample1",
                    "sample2"
                  ]
                },
                "name": "Rachel",
                "notice_period": 30,
                "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
                "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
                "rate": 0.05,
                "reader_app_enabled": true,
                "reader_restricted_on": [
                  {
                    "resource_id": "FCwhRBWXzGAHq8TQ4Fs18",
                    "resource_type": "read"
                  }
                ],
                "review_status": "allowed",
                "status": "enabled",
                "voice_mixing_allowed": false,
                "whitelisted_emails": [
                  "example@example.com"
                ]
              },
              "verified_languages": [
                {
                  "accent": "american",
                  "language": "en",
                  "locale": "en-US",
                  "model_id": "eleven_multilingual_v2",
                  "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3"
                }
              ],
              "voice_id": "21m00Tcm4TlvDq8ikWAM",
              "voice_verification": {
                "is_verified": true,
                "language": "en",
                "requires_verification": false,
                "verification_attempts": [
                  {
                    "accepted": true,
                    "date_unix": 1714204800,
                    "levenshtein_distance": 2,
                    "recording": {
                      "mime_type": "audio/mpeg",
                      "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                      "size_bytes": 1000000,
                      "transcription": "Hello, how are you?",
                      "upload_date_unix": 1714204800
                    },
                    "similarity": 0.95,
                    "text": "Hello, how are you?"
                  }
                ],
                "verification_attempts_count": 0,
                "verification_failures": []
              }
            }
          ]
        }
      },
      "GetVoicesV2ResponseModel": {
        "properties": {
          "voices": {
            "items": {
              "$ref": "#/components/schemas/VoiceResponseModel"
            },
            "type": "array",
            "title": "Voices"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "next_page_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Page Token"
          }
        },
        "type": "object",
        "required": [
          "voices",
          "has_more",
          "total_count"
        ],
        "title": "GetVoicesV2ResponseModel"
      },
      "GetWorkspaceJoinInfoResponseModel": {
        "properties": {
          "owner_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Email"
          }
        },
        "type": "object",
        "required": [
          "owner_email"
        ],
        "title": "GetWorkspaceJoinInfoResponseModel"
      },
      "GetWorkspaceSecretsResponseModel": {
        "properties": {
          "secrets": {
            "items": {
              "$ref": "#/components/schemas/ConvAIWorkspaceStoredSecretConfig"
            },
            "type": "array",
            "title": "Secrets"
          }
        },
        "type": "object",
        "required": [
          "secrets"
        ],
        "title": "GetWorkspaceSecretsResponseModel"
      },
      "GrantEndCancellation": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "cancellation",
            "title": "Kind"
          }
        },
        "type": "object",
        "required": [
          "kind"
        ],
        "title": "GrantEndCancellation"
      },
      "GrantEndPaidSubscription": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "paid_subscription",
            "title": "Kind"
          },
          "tier": {
            "type": "string",
            "enum": [
              "starter",
              "creator",
              "pro",
              "growing_business",
              "scale_2024_08_10"
            ],
            "title": "Tier"
          },
          "billing_period": {
            "type": "string",
            "enum": [
              "monthly_period",
              "annual_period"
            ],
            "title": "Billing Period"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "tier",
          "billing_period"
        ],
        "title": "GrantEndPaidSubscription"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HistoryAlignmentResponseModel": {
        "properties": {
          "characters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Characters",
            "description": "The characters in the alignment."
          },
          "character_start_times_seconds": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Character Start Times Seconds",
            "description": "The start times of the characters in seconds."
          },
          "character_end_times_seconds": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Character End Times Seconds",
            "description": "The end times of the characters in seconds."
          }
        },
        "type": "object",
        "required": [
          "characters",
          "character_start_times_seconds",
          "character_end_times_seconds"
        ],
        "title": "HistoryAlignmentResponseModel"
      },
      "HistoryAlignmentsResponseModel": {
        "properties": {
          "alignment": {
            "$ref": "#/components/schemas/HistoryAlignmentResponseModel",
            "description": "The alignment of the text."
          },
          "normalized_alignment": {
            "$ref": "#/components/schemas/HistoryAlignmentResponseModel",
            "description": "The normalized alignment of the text."
          }
        },
        "type": "object",
        "required": [
          "alignment",
          "normalized_alignment"
        ],
        "title": "HistoryAlignmentsResponseModel"
      },
      "HtmlExportOptions": {
        "properties": {
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          },
          "format": {
            "type": "string",
            "const": "html",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "type": "object",
        "required": [
          "format"
        ],
        "title": "HtmlExportOptions"
      },
      "HtmlExportRequest": {
        "properties": {
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          }
        },
        "type": "object",
        "title": "HtmlExportRequest"
      },
      "ImageAvatar": {
        "properties": {
          "type": {
            "type": "string",
            "const": "image",
            "title": "Type",
            "description": "The type of the avatar",
            "default": "image"
          },
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL of the avatar",
            "default": ""
          }
        },
        "type": "object",
        "title": "ImageAvatar"
      },
      "ImageContent": {
        "properties": {
          "type": {
            "type": "string",
            "const": "image",
            "title": "Type"
          },
          "data": {
            "type": "string",
            "title": "Data"
          },
          "mimeType": {
            "type": "string",
            "title": "Mimetype"
          },
          "annotations": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Annotations"
              },
              {
                "type": "null"
              }
            ]
          },
          "_meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "type",
          "data",
          "mimeType"
        ],
        "title": "ImageContent",
        "description": "Image content for a message."
      },
      "ImageNodeDBModel": {
        "properties": {
          "node_id": {
            "type": "string",
            "title": "Node Id"
          },
          "src": {
            "type": "string",
            "title": "Src"
          },
          "type": {
            "type": "string",
            "const": "img",
            "title": "Type",
            "default": "img"
          },
          "alt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alt"
          }
        },
        "type": "object",
        "required": [
          "node_id",
          "src"
        ],
        "title": "ImageNodeDBModel"
      },
      "ImageNodeResponseModel": {
        "properties": {
          "node_id": {
            "type": "string",
            "title": "Node Id"
          },
          "type": {
            "type": "string",
            "const": "img",
            "title": "Type"
          },
          "src": {
            "type": "string",
            "title": "Src"
          },
          "alt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alt"
          }
        },
        "type": "object",
        "required": [
          "node_id",
          "type",
          "src"
        ],
        "title": "ImageNodeResponseModel"
      },
      "ImpactProgramApplicationListResponseModel": {
        "properties": {
          "applications": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Applications"
          }
        },
        "type": "object",
        "required": [
          "applications"
        ],
        "title": "ImpactProgramApplicationListResponseModel"
      },
      "ImpactProgramApplicationRequestModel": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "year_of_birth": {
            "type": "integer",
            "title": "Year Of Birth"
          },
          "gender": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          },
          "partner_workspace_id": {
            "type": "string",
            "title": "Partner Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "email",
          "first_name",
          "last_name",
          "phone_number",
          "year_of_birth",
          "partner_workspace_id"
        ],
        "title": "ImpactProgramApplicationRequestModel"
      },
      "ImpactProgramApplicationResponseModel": {
        "properties": {
          "application_id": {
            "type": "string",
            "title": "Application Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "application_id",
          "status",
          "created_at_unix",
          "message"
        ],
        "title": "ImpactProgramApplicationResponseModel"
      },
      "ImpactProgramApplicationReviewRequestModel": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "approved",
              "rejected",
              "under_review"
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "ImpactProgramApplicationReviewRequestModel"
      },
      "ImpactProgramApplicationReviewResponseModel": {
        "properties": {
          "application_id": {
            "type": "string",
            "title": "Application Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "reviewed_at_unix": {
            "type": "integer",
            "title": "Reviewed At Unix"
          }
        },
        "type": "object",
        "required": [
          "application_id",
          "status",
          "reviewed_at_unix"
        ],
        "title": "ImpactProgramApplicationReviewResponseModel"
      },
      "ImpactProgramPartnerSimpleListResponseModel": {
        "properties": {
          "partners": {
            "items": {
              "$ref": "#/components/schemas/ImpactProgramPartnerSimpleResponseModel"
            },
            "type": "array",
            "title": "Partners"
          }
        },
        "type": "object",
        "required": [
          "partners"
        ],
        "title": "ImpactProgramPartnerSimpleListResponseModel"
      },
      "ImpactProgramPartnerSimpleResponseModel": {
        "properties": {
          "partner_workspace_id": {
            "type": "string",
            "title": "Partner Workspace Id"
          },
          "partner_name": {
            "type": "string",
            "title": "Partner Name"
          },
          "partner_email": {
            "type": "string",
            "title": "Partner Email"
          }
        },
        "type": "object",
        "required": [
          "partner_workspace_id",
          "partner_name",
          "partner_email"
        ],
        "title": "ImpactProgramPartnerSimpleResponseModel"
      },
      "ImportSoundEffectHistoryItemResponse": {
        "properties": {
          "block_sound_effect_id": {
            "type": "string",
            "title": "Block Sound Effect Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "duration_ms": {
            "type": "integer",
            "title": "Duration Ms"
          },
          "history_items": {
            "items": {
              "$ref": "#/components/schemas/BlockSoundEffectHistoryItemResponseModel"
            },
            "type": "array",
            "title": "History Items"
          }
        },
        "type": "object",
        "required": [
          "block_sound_effect_id",
          "text",
          "duration_ms",
          "history_items"
        ],
        "title": "ImportSoundEffectHistoryItemResponse"
      },
      "ImportSpeechHistoryItemBlocksResponse": {
        "properties": {
          "blocks": {
            "items": {
              "$ref": "#/components/schemas/BlockResponseModel"
            },
            "type": "array",
            "title": "Blocks"
          }
        },
        "type": "object",
        "required": [
          "blocks"
        ],
        "title": "ImportSpeechHistoryItemBlocksResponse"
      },
      "InboundSIPTrunkConfigRequestModel": {
        "properties": {
          "allowed_addresses": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Addresses",
            "description": "List of IP addresses that are allowed to use the trunk. Each item in the list can be an individual IP address or a Classless Inter-Domain Routing notation representing a CIDR block."
          },
          "allowed_numbers": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Numbers",
            "description": "List of phone numbers that are allowed to use the trunk."
          },
          "media_encryption": {
            "$ref": "#/components/schemas/SIPMediaEncryptionEnum",
            "description": "Whether or not to encrypt media (data layer).",
            "default": "allowed"
          },
          "credentials": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SIPTrunkCredentialsRequestModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional digest authentication credentials (username/password)."
          }
        },
        "type": "object",
        "title": "InboundSIPTrunkConfigRequestModel"
      },
      "InputAudioNativeModel": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "global_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudioNativeSettingsDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "url_triggers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/InputAudioNativeURLTriggerModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url Triggers"
          },
          "trigger_groups": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/InputAudioNativeTriggerGroupModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trigger Groups"
          },
          "basic_triggers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Basic Triggers"
          }
        },
        "type": "object",
        "required": [
          "enabled"
        ],
        "title": "InputAudioNativeModel"
      },
      "InputAudioNativePatchSettingsModel": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "text_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Color"
          },
          "background_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Color"
          },
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id"
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id"
          },
          "pronunciation_dictionaries": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionaries"
          },
          "content_selectors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Selectors"
          },
          "blocked_selectors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked Selectors"
          },
          "always_set_default_author": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Always Set Default Author"
          },
          "always_set_default_title": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Always Set Default Title"
          },
          "header_section": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Header Section"
          },
          "intro_section": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Intro Section"
          },
          "outro_section": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outro Section"
          },
          "apply_text_normalization": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "on",
                  "off",
                  "apply_english"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Apply Text Normalization"
          }
        },
        "type": "object",
        "title": "InputAudioNativePatchSettingsModel"
      },
      "InputAudioNativeTriggerGroupModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "triggers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LegacyAudioNativeTriggerDBModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Triggers"
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudioNativeSettingsDBModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "enabled"
        ],
        "title": "InputAudioNativeTriggerGroupModel"
      },
      "InputAudioNativeURLTriggerModel": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudioNativeSettingsDBModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "InputAudioNativeURLTriggerModel"
      },
      "IntegrationConnectionResponseModel": {
        "properties": {
          "approval_policy": {
            "$ref": "#/components/schemas/MCPApprovalPolicy",
            "default": "require_approval_all"
          },
          "tool_approval_hashes": {
            "items": {
              "$ref": "#/components/schemas/MCPToolApprovalHash"
            },
            "type": "array",
            "title": "Tool Approval Hashes",
            "description": "List of tool approval hashes for per-tool approval when approval_policy is REQUIRE_APPROVAL_PER_TOOL"
          },
          "integration_library_service": {
            "$ref": "#/components/schemas/IntegrationLibraryServices"
          },
          "integration_details": {
            "$ref": "#/components/schemas/IntegrationLibrarySummaryModel"
          },
          "connection_status": {
            "$ref": "#/components/schemas/IntegrationConnectionStatus"
          }
        },
        "type": "object",
        "required": [
          "integration_library_service",
          "integration_details",
          "connection_status"
        ],
        "title": "IntegrationConnectionResponseModel",
        "description": "Response model for listing integration connection details."
      },
      "IntegrationConnectionStatus": {
        "type": "string",
        "enum": [
          "connected",
          "disconnected",
          "expired",
          "error"
        ],
        "title": "IntegrationConnectionStatus",
        "description": "Standardised connection status for MCP integrations."
      },
      "IntegrationConnectionTypes": {
        "type": "string",
        "enum": [
          "oauth",
          "mcp_authorization",
          "api_key",
          "internal",
          "none"
        ],
        "title": "IntegrationConnectionTypes",
        "description": "Standardised connection types for MCP integrations."
      },
      "IntegrationLibraryAPIKeyProviders": {
        "type": "string",
        "enum": [
          "elevenlabs_api"
        ],
        "title": "IntegrationLibraryAPIKeyProviders"
      },
      "IntegrationLibraryExternalMCPAuthorizationProviders": {
        "type": "string",
        "enum": [
          "notion",
          "intercom",
          "github",
          "linear_oauth",
          "sentry",
          "asana",
          "atlassian",
          "square",
          "paypal",
          "plaid",
          "deepwiki"
        ],
        "title": "IntegrationLibraryExternalMCPAuthorizationProviders"
      },
      "IntegrationLibraryInternalTokenProviders": {
        "type": "string",
        "enum": [
          "elevenlabs"
        ],
        "title": "IntegrationLibraryInternalTokenProviders"
      },
      "IntegrationLibraryNoAuthProviders": {
        "type": "string",
        "enum": [
          "hackernews",
          "perplexity"
        ],
        "title": "IntegrationLibraryNoAuthProviders"
      },
      "IntegrationLibraryOAuthProviders": {
        "type": "string",
        "enum": [
          "google",
          "linear",
          "slack"
        ],
        "title": "IntegrationLibraryOAuthProviders"
      },
      "IntegrationLibraryServices": {
        "type": "string",
        "enum": [
          "gcalendar",
          "gmail",
          "elevenlabs",
          "elevenlabs_api",
          "linear",
          "perplexity",
          "hackernews",
          "slack",
          "notion",
          "intercom",
          "github",
          "linear_oauth",
          "sentry",
          "asana",
          "atlassian",
          "square",
          "paypal",
          "plaid",
          "deepwiki"
        ],
        "title": "IntegrationLibraryServices"
      },
      "IntegrationLibrarySummaryModel": {
        "properties": {
          "integration_library_service": {
            "$ref": "#/components/schemas/IntegrationLibraryServices"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "auth_type": {
            "$ref": "#/components/schemas/IntegrationConnectionTypes"
          },
          "auth_provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IntegrationLibraryOAuthProviders"
              },
              {
                "$ref": "#/components/schemas/IntegrationLibraryAPIKeyProviders"
              },
              {
                "$ref": "#/components/schemas/IntegrationLibraryNoAuthProviders"
              },
              {
                "$ref": "#/components/schemas/IntegrationLibraryInternalTokenProviders"
              },
              {
                "$ref": "#/components/schemas/IntegrationLibraryExternalMCPAuthorizationProviders"
              }
            ],
            "title": "Auth Provider"
          }
        },
        "type": "object",
        "required": [
          "integration_library_service",
          "name",
          "description",
          "auth_type",
          "auth_provider"
        ],
        "title": "IntegrationLibrarySummaryModel"
      },
      "IntegrationType": {
        "type": "string",
        "enum": [
          "mcp_server",
          "mcp_integration"
        ],
        "title": "IntegrationType"
      },
      "InternalChargeInfo": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "internal_elevenlabs",
            "title": "Kind"
          }
        },
        "type": "object",
        "required": [
          "kind"
        ],
        "title": "InternalChargeInfo"
      },
      "InvoiceResponseModel": {
        "properties": {
          "amount_due_cents": {
            "type": "integer",
            "title": "Amount Due Cents",
            "description": "The amount due in cents."
          },
          "discount_percent_off": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount Percent Off",
            "description": "The discount applied to the invoice. E.g. [20.0f] for 20% off."
          },
          "discount_amount_off": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount Amount Off",
            "description": "The discount applied to the invoice. E.g. [20.0f] for 20% off."
          },
          "next_payment_attempt_unix": {
            "type": "integer",
            "title": "Next Payment Attempt Unix",
            "description": "The Unix timestamp of the next payment attempt."
          }
        },
        "type": "object",
        "required": [
          "amount_due_cents",
          "next_payment_attempt_unix"
        ],
        "title": "InvoiceResponseModel",
        "example": {
          "amount_due_cents": 1000,
          "next_payment_attempt_unix": 1738356858
        }
      },
      "JsonExportRequest": {
        "properties": {
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          }
        },
        "type": "object",
        "title": "JsonExportRequest"
      },
      "KnowledgeBaseDocumentChunkResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "content"
        ],
        "title": "KnowledgeBaseDocumentChunkResponseModel"
      },
      "KnowledgeBaseDocumentMetadataResponseModel": {
        "properties": {
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "last_updated_at_unix_secs": {
            "type": "integer",
            "title": "Last Updated At Unix Secs"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes"
          }
        },
        "type": "object",
        "required": [
          "created_at_unix_secs",
          "last_updated_at_unix_secs",
          "size_bytes"
        ],
        "title": "KnowledgeBaseDocumentMetadataResponseModel"
      },
      "KnowledgeBaseDocumentType": {
        "type": "string",
        "enum": [
          "file",
          "url",
          "text"
        ],
        "title": "KnowledgeBaseDocumentType"
      },
      "KnowledgeBaseLocator": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentType",
            "description": "The type of the knowledge base"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the knowledge base"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the knowledge base"
          },
          "usage_mode": {
            "$ref": "#/components/schemas/DocumentUsageModeEnum",
            "description": "The usage mode of the knowledge base",
            "default": "auto"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "id"
        ],
        "title": "KnowledgeBaseLocator",
        "example": {
          "id": "123",
          "name": "My Knowledge Base",
          "type": "file",
          "usage_mode": "auto"
        }
      },
      "LLM": {
        "type": "string",
        "enum": [
          "gpt-4o-mini",
          "gpt-4o",
          "gpt-4",
          "gpt-4-turbo",
          "gpt-4.1",
          "gpt-4.1-mini",
          "gpt-4.1-nano",
          "gpt-5",
          "gpt-5-mini",
          "gpt-5-nano",
          "gpt-3.5-turbo",
          "gemini-1.5-pro",
          "gemini-1.5-flash",
          "gemini-2.0-flash",
          "gemini-2.0-flash-lite",
          "gemini-2.5-flash-lite",
          "gemini-2.5-flash",
          "claude-sonnet-4",
          "claude-3-7-sonnet",
          "claude-3-5-sonnet",
          "claude-3-5-sonnet-v1",
          "claude-3-haiku",
          "grok-beta",
          "custom-llm",
          "qwen3-4b",
          "qwen3-30b-a3b",
          "watt-tool-8b",
          "watt-tool-70b",
          "gemini-2.5-flash-preview-05-20",
          "gemini-2.5-flash-preview-04-17",
          "gemini-2.5-flash-lite-preview-06-17",
          "gemini-2.0-flash-lite-001",
          "gemini-2.0-flash-001",
          "gemini-1.5-flash-002",
          "gemini-1.5-flash-001",
          "gemini-1.5-pro-002",
          "gemini-1.5-pro-001",
          "claude-sonnet-4@20250514",
          "claude-3-7-sonnet@20250219",
          "claude-3-5-sonnet@20240620",
          "claude-3-5-sonnet-v2@20241022",
          "claude-3-haiku@20240307",
          "gpt-5-2025-08-07",
          "gpt-5-mini-2025-08-07",
          "gpt-5-nano-2025-08-07",
          "gpt-4.1-2025-04-14",
          "gpt-4.1-mini-2025-04-14",
          "gpt-4.1-nano-2025-04-14",
          "gpt-4o-mini-2024-07-18",
          "gpt-4o-2024-11-20",
          "gpt-4o-2024-08-06",
          "gpt-4o-2024-05-13",
          "gpt-4-0613",
          "gpt-4-0314",
          "gpt-4-turbo-2024-04-09",
          "gpt-3.5-turbo-0125",
          "gpt-3.5-turbo-1106"
        ],
        "title": "LLM"
      },
      "LLMCategoryUsage": {
        "properties": {
          "irreversible_generation": {
            "$ref": "#/components/schemas/LLMUsage-Output"
          },
          "initiated_generation": {
            "$ref": "#/components/schemas/LLMUsage-Output"
          }
        },
        "type": "object",
        "title": "LLMCategoryUsage"
      },
      "LLMInputOutputTokensUsage": {
        "properties": {
          "input": {
            "$ref": "#/components/schemas/LLMTokensCategoryUsage"
          },
          "input_cache_read": {
            "$ref": "#/components/schemas/LLMTokensCategoryUsage"
          },
          "input_cache_write": {
            "$ref": "#/components/schemas/LLMTokensCategoryUsage"
          },
          "output_total": {
            "$ref": "#/components/schemas/LLMTokensCategoryUsage"
          }
        },
        "type": "object",
        "title": "LLMInputOutputTokensUsage"
      },
      "LLMTokensCategoryUsage": {
        "properties": {
          "tokens": {
            "type": "integer",
            "title": "Tokens",
            "default": 0
          },
          "price": {
            "type": "number",
            "title": "Price",
            "default": 0
          }
        },
        "type": "object",
        "title": "LLMTokensCategoryUsage"
      },
      "LLMUsage-Input": {
        "properties": {
          "model_usage": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LLMInputOutputTokensUsage"
            },
            "propertyNames": {
              "$ref": "#/components/schemas/LLM"
            },
            "type": "object",
            "title": "Model Usage"
          }
        },
        "type": "object",
        "title": "LLMUsage"
      },
      "LLMUsage-Output": {
        "properties": {
          "model_usage": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LLMInputOutputTokensUsage"
            },
            "propertyNames": {
              "$ref": "#/components/schemas/LLM"
            },
            "type": "object",
            "title": "Model Usage"
          }
        },
        "type": "object",
        "title": "LLMUsage"
      },
      "LLMUsageCalculatorLLMResponseModel": {
        "properties": {
          "llm": {
            "$ref": "#/components/schemas/LLM"
          },
          "price_per_minute": {
            "type": "number",
            "title": "Price Per Minute"
          }
        },
        "type": "object",
        "required": [
          "llm",
          "price_per_minute"
        ],
        "title": "LLMUsageCalculatorLLMResponseModel"
      },
      "LLMUsageCalculatorPublicRequestModel": {
        "properties": {
          "prompt_length": {
            "type": "integer",
            "title": "Prompt Length",
            "description": "Length of the prompt in characters."
          },
          "number_of_pages": {
            "type": "integer",
            "title": "Number Of Pages",
            "description": "Pages of content in PDF documents or URLs in the agent's knowledge base."
          },
          "rag_enabled": {
            "type": "boolean",
            "title": "Rag Enabled",
            "description": "Whether RAG is enabled."
          }
        },
        "type": "object",
        "required": [
          "prompt_length",
          "number_of_pages",
          "rag_enabled"
        ],
        "title": "LLMUsageCalculatorPublicRequestModel"
      },
      "LLMUsageCalculatorRequestModel": {
        "properties": {
          "prompt_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Length",
            "description": "Length of the prompt in characters."
          },
          "number_of_pages": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number Of Pages",
            "description": "Pages of content in pdf documents OR urls in agent's Knowledge Base."
          },
          "rag_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rag Enabled",
            "description": "Whether RAG is enabled."
          }
        },
        "type": "object",
        "title": "LLMUsageCalculatorRequestModel"
      },
      "LLMUsageCalculatorResponseModel": {
        "properties": {
          "llm_prices": {
            "items": {
              "$ref": "#/components/schemas/LLMUsageCalculatorLLMResponseModel"
            },
            "type": "array",
            "title": "Llm Prices"
          }
        },
        "type": "object",
        "required": [
          "llm_prices"
        ],
        "title": "LLMUsageCalculatorResponseModel"
      },
      "LabelingQuestionOption": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value"
        ],
        "title": "LabelingQuestionOption"
      },
      "LabelingQuestionType": {
        "type": "string",
        "enum": [
          "boolean",
          "select",
          "multi_select",
          "text"
        ],
        "title": "LabelingQuestionType"
      },
      "LabelingQuestionWithDetails": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/LabelingQuestionType"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "instructions": {
            "type": "string",
            "title": "Instructions"
          },
          "options": {
            "items": {
              "$ref": "#/components/schemas/LabelingQuestionOption"
            },
            "type": "array",
            "title": "Options"
          },
          "question_id": {
            "type": "string",
            "format": "uuid",
            "title": "Question Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "title",
          "instructions",
          "options",
          "question_id"
        ],
        "title": "LabelingQuestionWithDetails"
      },
      "LabelingQuestionnaireResponse": {
        "properties": {
          "questionnaire_id": {
            "type": "string",
            "format": "uuid",
            "title": "Questionnaire Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "questions": {
            "items": {
              "$ref": "#/components/schemas/LabelingQuestionWithDetails"
            },
            "type": "array",
            "title": "Questions"
          }
        },
        "type": "object",
        "required": [
          "questionnaire_id",
          "name",
          "description",
          "questions"
        ],
        "title": "LabelingQuestionnaireResponse"
      },
      "LabelingResponseCreation": {
        "properties": {
          "questionnaire_id": {
            "type": "string",
            "format": "uuid",
            "title": "Questionnaire Id"
          },
          "labeling_answers": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BooleanLabelingAnswerDbModel"
                },
                {
                  "$ref": "#/components/schemas/TextLabelingAnswerDbModel"
                },
                {
                  "$ref": "#/components/schemas/SingleSelectLabelingAnswerDbModel"
                },
                {
                  "$ref": "#/components/schemas/MultiSelectLabelingAnswerDbModel"
                }
              ]
            },
            "type": "array",
            "title": "Labeling Answers"
          }
        },
        "type": "object",
        "required": [
          "questionnaire_id",
          "labeling_answers"
        ],
        "title": "LabelingResponseCreation"
      },
      "LanguageAddedResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "LanguageAddedResponse"
      },
      "LanguageDetectionToolConfig": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "language_detection",
            "title": "System Tool Type",
            "default": "language_detection"
          }
        },
        "type": "object",
        "title": "LanguageDetectionToolConfig"
      },
      "LanguageDetectionToolResultModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "language_detection_success",
            "title": "Result Type",
            "default": "language_detection_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          }
        },
        "type": "object",
        "title": "LanguageDetectionToolResultModel"
      },
      "LanguageMetricResponse": {
        "properties": {
          "languageCode": {
            "type": "string",
            "title": "Languagecode"
          },
          "usage": {
            "type": "number",
            "title": "Usage"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "languageCode",
          "usage",
          "count"
        ],
        "title": "LanguageMetricResponse"
      },
      "LanguagePreset-Input": {
        "properties": {
          "overrides": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Input",
            "description": "The overrides for the language preset"
          },
          "first_message_translation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguagePresetTranslation"
              },
              {
                "type": "null"
              }
            ],
            "description": "The translation of the first message"
          }
        },
        "type": "object",
        "required": [
          "overrides"
        ],
        "title": "LanguagePreset"
      },
      "LanguagePreset-Output": {
        "properties": {
          "overrides": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride-Output",
            "description": "The overrides for the language preset"
          },
          "first_message_translation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguagePresetTranslation"
              },
              {
                "type": "null"
              }
            ],
            "description": "The translation of the first message"
          }
        },
        "type": "object",
        "required": [
          "overrides"
        ],
        "title": "LanguagePreset"
      },
      "LanguagePresetTranslation": {
        "properties": {
          "source_hash": {
            "type": "string",
            "title": "Source Hash"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "source_hash",
          "text"
        ],
        "title": "LanguagePresetTranslation"
      },
      "LanguageResponseModel": {
        "properties": {
          "language_id": {
            "type": "string",
            "title": "Language Id",
            "description": "The unique identifier of the language."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the language."
          }
        },
        "type": "object",
        "required": [
          "language_id",
          "name"
        ],
        "title": "LanguageResponseModel",
        "example": {
          "language_id": "en",
          "name": "English"
        }
      },
      "LegacyAudioNativeTriggerDBModel": {
        "properties": {
          "subdomain": {
            "type": "string",
            "title": "Subdomain"
          },
          "domain": {
            "type": "string",
            "title": "Domain"
          },
          "path": {
            "type": "string",
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "subdomain",
          "domain",
          "path"
        ],
        "title": "LegacyAudioNativeTriggerDBModel"
      },
      "LibraryVoiceResponseModel": {
        "properties": {
          "public_owner_id": {
            "type": "string",
            "title": "Public Owner Id",
            "description": "The public owner id of the voice."
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The id of the voice."
          },
          "date_unix": {
            "type": "integer",
            "title": "Date Unix",
            "description": "The date the voice was added to the library in Unix time."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the voice."
          },
          "accent": {
            "type": "string",
            "title": "Accent",
            "description": "The accent of the voice."
          },
          "gender": {
            "type": "string",
            "title": "Gender",
            "description": "The gender of the voice."
          },
          "age": {
            "type": "string",
            "title": "Age",
            "description": "The age of the voice."
          },
          "descriptive": {
            "type": "string",
            "title": "Descriptive",
            "description": "The descriptive of the voice."
          },
          "use_case": {
            "type": "string",
            "title": "Use Case",
            "description": "The use case of the voice."
          },
          "category": {
            "type": "string",
            "enum": [
              "generated",
              "cloned",
              "premade",
              "professional",
              "famous",
              "high_quality"
            ],
            "title": "Category",
            "description": "The category of the voice."
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The language of the voice."
          },
          "locale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locale",
            "description": "The locale of the voice."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the voice."
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url",
            "description": "The preview URL of the voice."
          },
          "usage_character_count_1y": {
            "type": "integer",
            "title": "Usage Character Count 1Y",
            "description": "The usage character count of the voice in the last year."
          },
          "usage_character_count_7d": {
            "type": "integer",
            "title": "Usage Character Count 7D",
            "description": "The usage character count of the voice in the last 7 days."
          },
          "play_api_usage_character_count_1y": {
            "type": "integer",
            "title": "Play Api Usage Character Count 1Y",
            "description": "The play API usage character count of the voice in the last year."
          },
          "cloned_by_count": {
            "type": "integer",
            "title": "Cloned By Count",
            "description": "The number of times the voice has been cloned."
          },
          "rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate",
            "description": "The rate multiplier of the voice."
          },
          "fiat_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiat Rate",
            "description": "The rate of the voice in USD per 1000 credits. null if default"
          },
          "free_users_allowed": {
            "type": "boolean",
            "title": "Free Users Allowed",
            "description": "Whether free users are allowed to use the voice."
          },
          "live_moderation_enabled": {
            "type": "boolean",
            "title": "Live Moderation Enabled",
            "description": "Whether live moderation is enabled for the voice."
          },
          "featured": {
            "type": "boolean",
            "title": "Featured",
            "description": "Whether the voice is featured."
          },
          "verified_languages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VerifiedVoiceLanguageResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verified Languages",
            "description": "The verified languages of the voice."
          },
          "notice_period": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notice Period",
            "description": "The notice period of the voice."
          },
          "instagram_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram Username",
            "description": "The Instagram username of the voice."
          },
          "twitter_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Twitter Username",
            "description": "The Twitter username of the voice."
          },
          "youtube_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Youtube Username",
            "description": "The YouTube username of the voice."
          },
          "tiktok_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tiktok Username",
            "description": "The TikTok username of the voice."
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "description": "The image URL of the voice."
          },
          "is_added_by_user": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Added By User",
            "description": "Whether the voice was added by the user."
          }
        },
        "type": "object",
        "required": [
          "public_owner_id",
          "voice_id",
          "date_unix",
          "name",
          "accent",
          "gender",
          "age",
          "descriptive",
          "use_case",
          "category",
          "usage_character_count_1y",
          "usage_character_count_7d",
          "play_api_usage_character_count_1y",
          "cloned_by_count",
          "free_users_allowed",
          "live_moderation_enabled",
          "featured"
        ],
        "title": "LibraryVoiceResponseModel",
        "example": {
          "accent": "american",
          "age": "young",
          "category": "professional",
          "cloned_by_count": 11,
          "date_unix": 1714423232,
          "description": "Perfectly calm, neutral and strong voice. Great for a young female protagonist.",
          "descriptive": "calm",
          "featured": false,
          "free_users_allowed": true,
          "gender": "Female",
          "language": "en",
          "live_moderation_enabled": false,
          "name": "Alita",
          "play_api_usage_character_count_1y": 12852,
          "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3",
          "public_owner_id": "63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f",
          "rate": 1,
          "usage_character_count_1y": 12852,
          "usage_character_count_7d": 12852,
          "use_case": "characters_animation",
          "verified_languages": [
            {
              "accent": "american",
              "language": "en",
              "locale": "en-US",
              "model_id": "eleven_multilingual_v2",
              "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3"
            }
          ],
          "voice_id": "sB1b5zUrxQVAFl2PhZFp"
        }
      },
      "LifetimeReadMetricsResponseModel": {
        "properties": {
          "ratings": {
            "$ref": "#/components/schemas/ReadRatingMetrics"
          },
          "top_voices": {
            "items": {
              "$ref": "#/components/schemas/TopVoiceMetricResponseModel"
            },
            "type": "array",
            "title": "Top Voices"
          }
        },
        "type": "object",
        "required": [
          "ratings",
          "top_voices"
        ],
        "title": "LifetimeReadMetricsResponseModel"
      },
      "LifetimeReadsMetricsResponseModel": {
        "properties": {
          "total_users": {
            "type": "integer",
            "title": "Total Users"
          },
          "total_engaged_users": {
            "type": "integer",
            "title": "Total Engaged Users"
          },
          "total_payouts": {
            "type": "number",
            "title": "Total Payouts"
          },
          "users_daily_cumulative": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Users Daily Cumulative"
          },
          "engaged_users_daily_cumulative": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Engaged Users Daily Cumulative"
          },
          "payouts_daily_cumulative": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Payouts Daily Cumulative"
          }
        },
        "type": "object",
        "required": [
          "total_users",
          "total_engaged_users",
          "total_payouts",
          "users_daily_cumulative",
          "engaged_users_daily_cumulative",
          "payouts_daily_cumulative"
        ],
        "title": "LifetimeReadsMetricsResponseModel"
      },
      "ListAuthConnectionsResponse": {
        "properties": {
          "auth_connections": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/OAuth2ClientCredsResponse"
                },
                {
                  "$ref": "#/components/schemas/BasicAuthResponse"
                },
                {
                  "$ref": "#/components/schemas/OAuth2JWTResponse"
                }
              ],
              "description": "The type of auth connection config",
              "discriminator": {
                "propertyName": "auth_type",
                "mapping": {
                  "basic_auth": "#/components/schemas/BasicAuthResponse",
                  "oauth2_client_credentials": "#/components/schemas/OAuth2ClientCredsResponse",
                  "oauth2_jwt": "#/components/schemas/OAuth2JWTResponse"
                }
              }
            },
            "type": "array",
            "title": "Auth Connections"
          }
        },
        "type": "object",
        "required": [
          "auth_connections"
        ],
        "title": "ListAuthConnectionsResponse"
      },
      "ListMCPPromptsResponseModel": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the operation was successful."
          },
          "prompts": {
            "items": {
              "$ref": "#/components/schemas/Prompt"
            },
            "type": "array",
            "title": "Prompts",
            "description": "A list of prompts available on the MCP server."
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "Error message if the operation was not successful."
          }
        },
        "type": "object",
        "required": [
          "success",
          "prompts"
        ],
        "title": "ListMCPPromptsResponseModel",
        "description": "Response model for listing prompts available on an MCP server.",
        "example": {
          "prompts": [
            {
              "arguments": [
                {
                  "description": "Type of recipient (client, colleague, etc.)",
                  "name": "recipient_type",
                  "required": true
                }
              ],
              "description": "Generate professional email templates",
              "name": "email_template"
            },
            {
              "arguments": [],
              "description": "Create meeting summary template",
              "name": "meeting_summary"
            }
          ],
          "success": true
        }
      },
      "ListMCPToolsResponseModel": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the operation was successful."
          },
          "tools": {
            "items": {
              "$ref": "#/components/schemas/Tool"
            },
            "type": "array",
            "title": "Tools",
            "description": "A list of tools available on the MCP server."
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "Error message if the operation was not successful."
          }
        },
        "type": "object",
        "required": [
          "success",
          "tools"
        ],
        "title": "ListMCPToolsResponseModel",
        "description": "Response model for testing tools available on an MCP server.",
        "example": {
          "success": true,
          "tools": [
            {
              "description": "Gets current weather conditions for a location.",
              "inputSchema": {
                "properties": {
                  "latitude": {
                    "description": "Latitude",
                    "type": "string"
                  },
                  "longitude": {
                    "description": "Longitude",
                    "type": "string"
                  }
                },
                "required": [
                  "latitude",
                  "longitude"
                ],
                "type": "object"
              },
              "name": "weather_by_zapier_get_current"
            },
            {
              "description": "Description of tool2",
              "inputSchema": {
                "properties": {

                },
                "type": "object"
              },
              "name": "tool2"
            }
          ]
        }
      },
      "ListProducersRequest": {
        "properties": {
          "tags": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/TagModel"
              },
              "type": "array"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "tags"
        ],
        "title": "ListProducersRequest"
      },
      "ListTestsByIdsRequestModel": {
        "properties": {
          "test_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Test Ids",
            "description": "List of test IDs to fetch. No duplicates allowed.",
            "examples": [
              [
                "test_id_1",
                "test_id_2"
              ]
            ]
          }
        },
        "type": "object",
        "required": [
          "test_ids"
        ],
        "title": "ListTestsByIdsRequestModel"
      },
      "ListedChatResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "created_at_utc": {
            "type": "string",
            "format": "date-time",
            "title": "Created At Utc"
          },
          "updated_at_utc": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At Utc"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "cover_art_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Art Url"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "created_at_utc",
          "updated_at_utc"
        ],
        "title": "ListedChatResponseModel"
      },
      "ListedTranscriptionTaskResponseModel": {
        "properties": {
          "_id": {
            "type": "string",
            "title": "Id"
          },
          "task_name": {
            "type": "string",
            "title": "Task Name"
          },
          "state": {
            "type": "string",
            "enum": [
              "not_processing",
              "processing",
              "processed",
              "error",
              "failed",
              "failed_refunded",
              "reviewing"
            ],
            "title": "State"
          },
          "progress": {
            "type": "number",
            "title": "Progress"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At"
          },
          "file": {
            "$ref": "#/components/schemas/FileResponseModel"
          },
          "last_error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ErrorDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "review_request": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProductionRequestResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "productions_description_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Productions Description Id"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "task_name",
          "state",
          "progress",
          "created_at",
          "file"
        ],
        "title": "ListedTranscriptionTaskResponseModel"
      },
      "LiteralJsonSchemaProperty": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "boolean",
              "string",
              "integer",
              "number"
            ],
            "title": "Type"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "The description of the property",
            "default": ""
          },
          "dynamic_variable": {
            "type": "string",
            "title": "Dynamic Variable",
            "description": "The dynamic variable of the property",
            "default": ""
          },
          "constant_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              },
              {
                "type": "number"
              },
              {
                "type": "boolean"
              }
            ],
            "title": "Constant Value",
            "description": "The constant value of the property",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "LiteralJsonSchemaProperty",
        "example": {
          "constant_value": "Constant value",
          "description": "My property",
          "dynamic_variable": "Dynamic variable",
          "type": "string"
        }
      },
      "LocationResponseModel": {
        "properties": {
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City"
          }
        },
        "type": "object",
        "title": "LocationResponseModel"
      },
      "LockReason": {
        "type": "string",
        "enum": [
          "trial_ended",
          "subscription_downgrade"
        ],
        "title": "LockReason"
      },
      "LockedStateResponseModel": {
        "properties": {
          "locked": {
            "type": "boolean",
            "const": true,
            "title": "Locked"
          },
          "locked_by_user_id": {
            "type": "string",
            "title": "Locked By User Id"
          },
          "locked_at_unix_ms": {
            "type": "integer",
            "title": "Locked At Unix Ms"
          }
        },
        "type": "object",
        "required": [
          "locked",
          "locked_by_user_id",
          "locked_at_unix_ms"
        ],
        "title": "LockedStateResponseModel"
      },
      "LookupResult": {
        "properties": {
          "entity_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkspaceResourceType"
              },
              {
                "$ref": "#/components/schemas/UserWorkspaceLookupType"
              }
            ],
            "title": "Entity Type"
          },
          "entity_id": {
            "type": "string",
            "title": "Entity Id"
          },
          "entity_name": {
            "type": "string",
            "title": "Entity Name"
          },
          "entity_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Description"
          },
          "entity_owner": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Owner"
          },
          "entity_enviroment_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Enviroment Id"
          },
          "entity_enviroment_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Entity Enviroment Url"
          }
        },
        "type": "object",
        "required": [
          "entity_type",
          "entity_id",
          "entity_name",
          "entity_description"
        ],
        "title": "LookupResult"
      },
      "LookupResultResponseModel": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/LookupResult"
            },
            "type": "array",
            "title": "Results",
            "default": []
          },
          "failures": {
            "items": {
              "$ref": "#/components/schemas/RemoteLookupResultFailed"
            },
            "type": "array",
            "title": "Failures",
            "default": []
          }
        },
        "type": "object",
        "title": "LookupResultResponseModel"
      },
      "MCPApprovalPolicy": {
        "type": "string",
        "enum": [
          "auto_approve_all",
          "require_approval_all",
          "require_approval_per_tool"
        ],
        "title": "MCPApprovalPolicy",
        "description": "Defines the MCP server-level approval policy for tool execution."
      },
      "MCPApprovalPolicyUpdateRequestModel": {
        "properties": {
          "approval_policy": {
            "$ref": "#/components/schemas/MCPApprovalPolicy",
            "description": "The approval mode to set for the MCP server"
          }
        },
        "type": "object",
        "required": [
          "approval_policy"
        ],
        "title": "MCPApprovalPolicyUpdateRequestModel",
        "description": "Request model for updating MCP Server approval mode."
      },
      "MCPServerConfig-Input": {
        "properties": {
          "approval_policy": {
            "$ref": "#/components/schemas/MCPApprovalPolicy",
            "default": "require_approval_all"
          },
          "tool_approval_hashes": {
            "items": {
              "$ref": "#/components/schemas/MCPToolApprovalHash"
            },
            "type": "array",
            "title": "Tool Approval Hashes",
            "description": "List of tool approval hashes for per-tool approval when approval_policy is REQUIRE_APPROVAL_PER_TOOL"
          },
          "transport": {
            "$ref": "#/components/schemas/MCPServerTransport",
            "description": "The transport type used to connect to the MCP server",
            "default": "SSE"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ConvAISecretLocator"
              }
            ],
            "title": "Url",
            "description": "The URL of the MCP server, if this contains a secret please store as a workspace secret, otherwise store as a plain string. Must use https"
          },
          "secret_token": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConvAISecretLocator"
              },
              {
                "$ref": "#/components/schemas/ConvAIUserSecretDBModel"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Token",
            "description": "The secret token (Authorization header) stored as a workspace secret or in-place secret"
          },
          "request_headers": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                }
              ]
            },
            "type": "object",
            "title": "Request Headers",
            "description": "The headers included in the request"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "url",
          "name"
        ],
        "title": "MCPServerConfig"
      },
      "MCPServerConfig-Output": {
        "properties": {
          "approval_policy": {
            "$ref": "#/components/schemas/MCPApprovalPolicy",
            "default": "require_approval_all"
          },
          "tool_approval_hashes": {
            "items": {
              "$ref": "#/components/schemas/MCPToolApprovalHash"
            },
            "type": "array",
            "title": "Tool Approval Hashes",
            "description": "List of tool approval hashes for per-tool approval when approval_policy is REQUIRE_APPROVAL_PER_TOOL"
          },
          "transport": {
            "$ref": "#/components/schemas/MCPServerTransport",
            "description": "The transport type used to connect to the MCP server",
            "default": "SSE"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/components/schemas/ConvAISecretLocator"
              }
            ],
            "title": "Url",
            "description": "The URL of the MCP server, if this contains a secret please store as a workspace secret, otherwise store as a plain string. Must use https"
          },
          "secret_token": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConvAISecretLocator"
              },
              {
                "$ref": "#/components/schemas/ConvAIUserSecretDBModel"
              },
              {
                "type": "null"
              }
            ],
            "title": "Secret Token",
            "description": "The secret token (Authorization header) stored as a workspace secret or in-place secret"
          },
          "request_headers": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                }
              ]
            },
            "type": "object",
            "title": "Request Headers",
            "description": "The headers included in the request"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "url",
          "name"
        ],
        "title": "MCPServerConfig"
      },
      "MCPServerMetadataResponseModel": {
        "properties": {
          "created_at": {
            "type": "integer",
            "title": "Created At"
          },
          "owner_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner User Id"
          }
        },
        "type": "object",
        "required": [
          "created_at"
        ],
        "title": "MCPServerMetadataResponseModel"
      },
      "MCPServerRequestModel": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/MCPServerConfig-Input",
            "description": "Configuration details for the MCP Server."
          }
        },
        "type": "object",
        "required": [
          "config"
        ],
        "title": "MCPServerRequestModel",
        "description": "Request model for creating/updating an MCP Server configuration."
      },
      "MCPServerResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "config": {
            "$ref": "#/components/schemas/MCPServerConfig-Output"
          },
          "access_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceAccessInfo"
              },
              {
                "type": "null"
              }
            ],
            "description": "The access information of the MCP Server"
          },
          "dependent_agents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "type": "array",
            "title": "Dependent Agents",
            "description": "List of agents that depend on this MCP Server."
          },
          "metadata": {
            "$ref": "#/components/schemas/MCPServerMetadataResponseModel",
            "description": "The metadata of the MCP Server"
          }
        },
        "type": "object",
        "required": [
          "id",
          "config",
          "metadata"
        ],
        "title": "MCPServerResponseModel",
        "description": "Response model representing an MCP Server configuration."
      },
      "MCPServerTransport": {
        "type": "string",
        "enum": [
          "SSE",
          "STREAMABLE_HTTP"
        ],
        "title": "MCPServerTransport",
        "description": "Supported MCP server transport types."
      },
      "MCPServersResponseModel": {
        "properties": {
          "mcp_servers": {
            "items": {
              "$ref": "#/components/schemas/MCPServerResponseModel"
            },
            "type": "array",
            "title": "Mcp Servers"
          }
        },
        "type": "object",
        "required": [
          "mcp_servers"
        ],
        "title": "MCPServersResponseModel",
        "description": "Response model for a list of MCP Server configurations."
      },
      "MCPToolAddApprovalRequestModel": {
        "properties": {
          "tool_name": {
            "type": "string",
            "title": "Tool Name",
            "description": "The name of the MCP tool"
          },
          "tool_description": {
            "type": "string",
            "title": "Tool Description",
            "description": "The description of the MCP tool"
          },
          "input_schema": {
            "type": "object",
            "title": "Input Schema",
            "description": "The input schema of the MCP tool (the schema defined on the MCP server before ElevenLabs does any extra processing)"
          },
          "approval_policy": {
            "$ref": "#/components/schemas/MCPToolApprovalPolicy",
            "description": "The tool-level approval policy",
            "default": "requires_approval"
          }
        },
        "type": "object",
        "required": [
          "tool_name",
          "tool_description"
        ],
        "title": "MCPToolAddApprovalRequestModel",
        "description": "Request model for adding approval for a single MCP tool."
      },
      "MCPToolApprovalHash": {
        "properties": {
          "tool_name": {
            "type": "string",
            "title": "Tool Name",
            "description": "The name of the MCP tool"
          },
          "tool_hash": {
            "type": "string",
            "title": "Tool Hash",
            "description": "SHA256 hash of the tool's parameters and description"
          },
          "approval_policy": {
            "$ref": "#/components/schemas/MCPToolApprovalPolicy",
            "description": "The approval policy for this tool",
            "default": "requires_approval"
          }
        },
        "type": "object",
        "required": [
          "tool_name",
          "tool_hash"
        ],
        "title": "MCPToolApprovalHash",
        "description": "Model for storing tool approval hashes for per-tool approval."
      },
      "MCPToolApprovalPolicy": {
        "type": "string",
        "enum": [
          "auto_approved",
          "requires_approval"
        ],
        "title": "MCPToolApprovalPolicy",
        "description": "Defines the tool-level approval policy."
      },
      "MCPToolConfig-Input": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete.",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "type": {
            "type": "string",
            "const": "mcp",
            "title": "Type",
            "default": "mcp"
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType",
            "description": "The type of MCP tool"
          },
          "parameters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for any parameters the LLM needs to provide to the MCP tool."
          },
          "approval_policy": {
            "$ref": "#/components/schemas/MCPApprovalPolicy",
            "description": "The approval policy for the MCP tool",
            "default": "require_approval_all"
          },
          "mcp_tool_name": {
            "type": "string",
            "title": "Mcp Tool Name",
            "description": "The name of the MCP tool to call"
          },
          "mcp_tool_description": {
            "type": "string",
            "title": "Mcp Tool Description",
            "description": "The description of the MCP tool to call"
          },
          "mcp_server_id": {
            "type": "string",
            "title": "Mcp Server Id",
            "description": "The id of the MCP server to call"
          },
          "mcp_server_name": {
            "type": "string",
            "title": "Mcp Server Name",
            "description": "The name of the MCP server to call"
          },
          "mcp_input_schema": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mcp Input Schema",
            "description": "Original inputSchema dict for consistent hashing (pure MCP format)"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "integration_type",
          "mcp_tool_name",
          "mcp_tool_description",
          "mcp_server_id",
          "mcp_server_name"
        ],
        "title": "MCPToolConfig",
        "description": "An MCP tool configuration that can be used to call MCP servers",
        "x-fern-ignore": true
      },
      "MCPToolConfig-Output": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete.",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "type": {
            "type": "string",
            "const": "mcp",
            "title": "Type",
            "default": "mcp"
          },
          "integration_type": {
            "$ref": "#/components/schemas/IntegrationType",
            "description": "The type of MCP tool"
          },
          "parameters": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for any parameters the LLM needs to provide to the MCP tool."
          },
          "approval_policy": {
            "$ref": "#/components/schemas/MCPApprovalPolicy",
            "description": "The approval policy for the MCP tool",
            "default": "require_approval_all"
          },
          "mcp_tool_name": {
            "type": "string",
            "title": "Mcp Tool Name",
            "description": "The name of the MCP tool to call"
          },
          "mcp_tool_description": {
            "type": "string",
            "title": "Mcp Tool Description",
            "description": "The description of the MCP tool to call"
          },
          "mcp_server_id": {
            "type": "string",
            "title": "Mcp Server Id",
            "description": "The id of the MCP server to call"
          },
          "mcp_server_name": {
            "type": "string",
            "title": "Mcp Server Name",
            "description": "The name of the MCP server to call"
          },
          "mcp_input_schema": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mcp Input Schema",
            "description": "Original inputSchema dict for consistent hashing (pure MCP format)"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "integration_type",
          "mcp_tool_name",
          "mcp_tool_description",
          "mcp_server_id",
          "mcp_server_name"
        ],
        "title": "MCPToolConfig",
        "description": "An MCP tool configuration that can be used to call MCP servers",
        "x-fern-ignore": true
      },
      "MainReadDateRangeMetricsResponseModel": {
        "properties": {
          "users_cumulative": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Users Cumulative"
          },
          "engaged_users": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Engaged Users"
          },
          "listened_duration": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Listened Duration"
          },
          "retention": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Retention"
          }
        },
        "type": "object",
        "required": [
          "users_cumulative",
          "engaged_users",
          "listened_duration",
          "retention"
        ],
        "title": "MainReadDateRangeMetricsResponseModel"
      },
      "MainReadsDateRangeMetricsResponseModel": {
        "properties": {
          "total_users": {
            "type": "integer",
            "title": "Total Users"
          },
          "total_engaged_users": {
            "type": "integer",
            "title": "Total Engaged Users"
          },
          "total_listened_audio_duration_secs": {
            "type": "integer",
            "title": "Total Listened Audio Duration Secs"
          },
          "dates": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Dates"
          },
          "payouts": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Payouts"
          },
          "read_id_to_metrics": {
            "additionalProperties": {
              "$ref": "#/components/schemas/MainReadDateRangeMetricsResponseModel"
            },
            "type": "object",
            "title": "Read Id To Metrics"
          },
          "start_date": {
            "type": "string",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "title": "End Date"
          }
        },
        "type": "object",
        "required": [
          "total_users",
          "total_engaged_users",
          "total_listened_audio_duration_secs",
          "dates",
          "payouts",
          "read_id_to_metrics",
          "start_date",
          "end_date"
        ],
        "title": "MainReadsDateRangeMetricsResponseModel"
      },
      "ManualVerificationDBModel": {
        "properties": {
          "request_time_unix": {
            "type": "integer",
            "title": "Request Time Unix"
          },
          "extra_text": {
            "type": "string",
            "title": "Extra Text"
          },
          "files": {
            "items": {
              "$ref": "#/components/schemas/ManualVerificationFileDBModel"
            },
            "type": "array",
            "title": "Files"
          }
        },
        "type": "object",
        "required": [
          "request_time_unix",
          "extra_text",
          "files"
        ],
        "title": "ManualVerificationDBModel"
      },
      "ManualVerificationFileDBModel": {
        "properties": {
          "file_id": {
            "type": "string",
            "title": "File Id"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes"
          },
          "upload_date_unix": {
            "type": "integer",
            "title": "Upload Date Unix"
          }
        },
        "type": "object",
        "required": [
          "file_id",
          "file_name",
          "mime_type",
          "size_bytes",
          "upload_date_unix"
        ],
        "title": "ManualVerificationFileDBModel"
      },
      "ManualVerificationFileResponseModel": {
        "properties": {
          "file_id": {
            "type": "string",
            "title": "File Id",
            "description": "The ID of the file."
          },
          "file_name": {
            "type": "string",
            "title": "File Name",
            "description": "The name of the file."
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type",
            "description": "The MIME type of the file."
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes",
            "description": "The size of the file in bytes."
          },
          "upload_date_unix": {
            "type": "integer",
            "title": "Upload Date Unix",
            "description": "The date of the file in Unix time."
          }
        },
        "type": "object",
        "required": [
          "file_id",
          "file_name",
          "mime_type",
          "size_bytes",
          "upload_date_unix"
        ],
        "title": "ManualVerificationFileResponseModel",
        "example": {
          "file_id": "CwhRBWXzGAHq8TQ4Fs18",
          "file_name": "file.mp3",
          "mime_type": "audio/mpeg",
          "size_bytes": 1000000,
          "upload_date_unix": 1714204800
        }
      },
      "ManualVerificationResponseModel": {
        "properties": {
          "extra_text": {
            "type": "string",
            "title": "Extra Text",
            "description": "The extra text of the manual verification."
          },
          "request_time_unix": {
            "type": "integer",
            "title": "Request Time Unix",
            "description": "The date of the manual verification in Unix time."
          },
          "files": {
            "items": {
              "$ref": "#/components/schemas/ManualVerificationFileResponseModel"
            },
            "type": "array",
            "title": "Files",
            "description": "The files of the manual verification."
          }
        },
        "type": "object",
        "required": [
          "extra_text",
          "request_time_unix",
          "files"
        ],
        "title": "ManualVerificationResponseModel",
        "example": {
          "extra_text": "Please verify the voice is that of a female.",
          "files": [
            {
              "file_id": "CwhRBWXzGAHq8TQ4Fs18",
              "file_name": "file.mp3",
              "mime_type": "audio/mpeg",
              "size_bytes": 1000000,
              "upload_date_unix": 1714204800
            }
          ],
          "request_time_unix": 1714204800
        }
      },
      "MediaMeta": {
        "properties": {
          "media_id": {
            "type": "string",
            "format": "uuid",
            "title": "Media Id"
          },
          "file": {
            "$ref": "#/components/schemas/TranscriptionTaskFileDBModel"
          }
        },
        "type": "object",
        "required": [
          "media_id",
          "file"
        ],
        "title": "MediaMeta"
      },
      "MetricList": {
        "properties": {
          "metrics": {
            "items": {
              "$ref": "#/components/schemas/BinnedMetrics"
            },
            "type": "array",
            "title": "Metrics"
          }
        },
        "type": "object",
        "required": [
          "metrics"
        ],
        "title": "MetricList"
      },
      "MetricRecord": {
        "properties": {
          "elapsed_time": {
            "type": "number",
            "title": "Elapsed Time"
          }
        },
        "type": "object",
        "required": [
          "elapsed_time"
        ],
        "title": "MetricRecord"
      },
      "MetricType": {
        "type": "string",
        "enum": [
          "credits",
          "minutes_used",
          "request_count",
          "ttfb_avg",
          "ttfb_p95",
          "fiat_units_spent",
          "concurrency"
        ],
        "title": "MetricType"
      },
      "MiniReadConfigResponseModel": {
        "properties": {
          "is_mini_read": {
            "type": "boolean",
            "title": "Is Mini Read",
            "default": false
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          }
        },
        "type": "object",
        "title": "MiniReadConfigResponseModel"
      },
      "ModelRatesResponseModel": {
        "properties": {
          "character_cost_multiplier": {
            "type": "number",
            "title": "Character Cost Multiplier",
            "description": "The cost multiplier for characters."
          }
        },
        "type": "object",
        "required": [
          "character_cost_multiplier"
        ],
        "title": "ModelRatesResponseModel",
        "example": {
          "character_cost_multiplier": 1
        }
      },
      "ModelResponseModel": {
        "properties": {
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The unique identifier of the model."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the model."
          },
          "can_be_finetuned": {
            "type": "boolean",
            "title": "Can Be Finetuned",
            "description": "Whether the model can be finetuned."
          },
          "can_do_text_to_speech": {
            "type": "boolean",
            "title": "Can Do Text To Speech",
            "description": "Whether the model can do text-to-speech."
          },
          "can_do_voice_conversion": {
            "type": "boolean",
            "title": "Can Do Voice Conversion",
            "description": "Whether the model can do voice conversion."
          },
          "can_use_style": {
            "type": "boolean",
            "title": "Can Use Style",
            "description": "Whether the model can use style."
          },
          "can_use_speaker_boost": {
            "type": "boolean",
            "title": "Can Use Speaker Boost",
            "description": "Whether the model can use speaker boost."
          },
          "serves_pro_voices": {
            "type": "boolean",
            "title": "Serves Pro Voices",
            "description": "Whether the model serves pro voices."
          },
          "token_cost_factor": {
            "type": "number",
            "title": "Token Cost Factor",
            "description": "The cost factor for the model."
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "The description of the model."
          },
          "requires_alpha_access": {
            "type": "boolean",
            "title": "Requires Alpha Access",
            "description": "Whether the model requires alpha access."
          },
          "max_characters_request_free_user": {
            "type": "integer",
            "title": "Max Characters Request Free User",
            "description": "The maximum number of characters that can be requested by a free user."
          },
          "max_characters_request_subscribed_user": {
            "type": "integer",
            "title": "Max Characters Request Subscribed User",
            "description": "The maximum number of characters that can be requested by a subscribed user."
          },
          "maximum_text_length_per_request": {
            "type": "integer",
            "title": "Maximum Text Length Per Request",
            "description": "The maximum length of text that can be requested for this model."
          },
          "languages": {
            "items": {
              "$ref": "#/components/schemas/LanguageResponseModel"
            },
            "type": "array",
            "title": "Languages",
            "description": "The languages supported by the model."
          },
          "model_rates": {
            "$ref": "#/components/schemas/ModelRatesResponseModel",
            "description": "The rates for the model."
          },
          "concurrency_group": {
            "type": "string",
            "enum": [
              "standard",
              "turbo"
            ],
            "title": "Concurrency Group",
            "description": "The concurrency group for the model."
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "name",
          "can_be_finetuned",
          "can_do_text_to_speech",
          "can_do_voice_conversion",
          "can_use_style",
          "can_use_speaker_boost",
          "serves_pro_voices",
          "token_cost_factor",
          "description",
          "requires_alpha_access",
          "max_characters_request_free_user",
          "max_characters_request_subscribed_user",
          "maximum_text_length_per_request",
          "languages",
          "model_rates",
          "concurrency_group"
        ],
        "title": "ModelResponseModel",
        "example": {
          "can_be_finetuned": true,
          "can_do_text_to_speech": true,
          "can_do_voice_conversion": true,
          "can_use_speaker_boost": true,
          "can_use_style": true,
          "concurrency_group": "standard",
          "description": "Our state of the art multilingual speech synthesis model, able to generate life-like speech in 29 languages.",
          "languages": [
            {
              "language_id": "en",
              "name": "English"
            }
          ],
          "max_characters_request_free_user": 2500,
          "max_characters_request_subscribed_user": 5000,
          "maximum_text_length_per_request": 1000000,
          "model_id": "eleven_multilingual_v2",
          "model_rates": {
            "character_cost_multiplier": 1
          },
          "name": "Eleven Multilingual v2",
          "requires_alpha_access": false,
          "serves_pro_voices": false,
          "token_cost_factor": 1
        }
      },
      "ModelSettingsResponseModel": {
        "properties": {
          "stability": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability",
            "description": "Determines how stable the voice is and the randomness between each generation. Lower values introduce broader emotional range for the voice. Higher values can result in a monotonous voice with limited emotion."
          },
          "use_speaker_boost": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Speaker Boost",
            "description": "This setting boosts the similarity to the original speaker. Using this setting requires a slightly higher computational load, which in turn increases latency."
          }
        },
        "type": "object",
        "title": "ModelSettingsResponseModel",
        "example": {
          "similarity_boost": 1,
          "stability": 1
        }
      },
      "ModerationStatus": {
        "type": "string",
        "enum": [
          "pending",
          "approved",
          "rejected"
        ],
        "title": "ModerationStatus"
      },
      "ModerationStatusResponseModel": {
        "properties": {
          "is_in_probation": {
            "type": "boolean",
            "title": "Is In Probation",
            "description": "Whether the user is in probation."
          },
          "enterprise_check_nogo_voice": {
            "type": "boolean",
            "title": "Enterprise Check Nogo Voice",
            "description": "Whether the user's enterprise check nogo voice is enabled."
          },
          "enterprise_check_block_nogo_voice": {
            "type": "boolean",
            "title": "Enterprise Check Block Nogo Voice",
            "description": "Whether the user's enterprise check block nogo voice is enabled."
          },
          "never_live_moderate": {
            "type": "boolean",
            "title": "Never Live Moderate",
            "description": "Whether the user's never live moderate is enabled."
          },
          "nogo_voice_similar_voice_upload_count": {
            "type": "integer",
            "title": "Nogo Voice Similar Voice Upload Count",
            "description": "The number of similar voice uploads that have been blocked."
          },
          "enterprise_background_moderation_enabled": {
            "type": "boolean",
            "title": "Enterprise Background Moderation Enabled",
            "description": "Whether the user's enterprise background moderation is enabled."
          },
          "safety_status": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "appeal_approved",
                  "appeal_denied",
                  "false_positive"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Status",
            "description": "The safety status of the user."
          },
          "warning_status": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "warning",
                  "warning_cleared"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Warning Status",
            "description": "The warning status of the user."
          },
          "on_watchlist": {
            "type": "boolean",
            "title": "On Watchlist",
            "description": "Whether the user is on the watchlist."
          }
        },
        "type": "object",
        "required": [
          "is_in_probation",
          "enterprise_check_nogo_voice",
          "enterprise_check_block_nogo_voice",
          "never_live_moderate",
          "nogo_voice_similar_voice_upload_count",
          "enterprise_background_moderation_enabled",
          "on_watchlist"
        ],
        "title": "ModerationStatusResponseModel",
        "example": {
          "enterprise_background_moderation_enabled": false,
          "enterprise_check_block_nogo_voice": false,
          "enterprise_check_nogo_voice": false,
          "is_in_probation": false,
          "never_live_moderate": false,
          "nogo_voice_similar_voice_upload_count": 0,
          "on_watchlist": false
        }
      },
      "MoveProjectExportToQueueResponse": {
        "properties": {
          "projects_job_cmd": {
            "type": "string",
            "title": "Projects Job Cmd"
          }
        },
        "type": "object",
        "required": [
          "projects_job_cmd"
        ],
        "title": "MoveProjectExportToQueueResponse"
      },
      "MultiSelectLabelingAnswerDbModel": {
        "properties": {
          "question_id": {
            "type": "string",
            "format": "uuid",
            "title": "Question Id"
          },
          "type": {
            "type": "string",
            "const": "multi_select",
            "title": "Type"
          },
          "value": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "question_id",
          "type",
          "value"
        ],
        "title": "MultiSelectLabelingAnswerDbModel"
      },
      "MultichannelSpeechToTextResponseModel": {
        "properties": {
          "transcripts": {
            "items": {
              "$ref": "#/components/schemas/SpeechToTextChunkResponseModel"
            },
            "type": "array",
            "title": "Transcripts",
            "description": "List of transcripts, one for each audio channel. Each transcript contains the text and word-level details for its respective channel."
          }
        },
        "type": "object",
        "required": [
          "transcripts"
        ],
        "title": "MultichannelSpeechToTextResponseModel",
        "description": "Response model for multichannel speech-to-text transcription.",
        "example": {
          "transcripts": [
            {
              "language_code": "en",
              "language_probability": 0.98,
              "text": "Hello from channel one.",
              "words": [
                {
                  "end": 0.5,
                  "logprob": -0.124,
                  "speaker_id": "speaker_0",
                  "start": 0,
                  "text": "Hello",
                  "type": "word"
                },
                {
                  "end": 0.5,
                  "logprob": 0,
                  "speaker_id": "speaker_0",
                  "start": 0.5,
                  "text": " ",
                  "type": "spacing"
                },
                {
                  "end": 0.8,
                  "logprob": -0.089,
                  "speaker_id": "speaker_0",
                  "start": 0.5,
                  "text": "from",
                  "type": "word"
                }
              ]
            },
            {
              "language_code": "en",
              "language_probability": 0.97,
              "text": "Greetings from channel two.",
              "words": [
                {
                  "end": 0.7,
                  "logprob": -0.156,
                  "speaker_id": "speaker_1",
                  "start": 0.1,
                  "text": "Greetings",
                  "type": "word"
                },
                {
                  "end": 0.7,
                  "logprob": 0,
                  "speaker_id": "speaker_1",
                  "start": 0.7,
                  "text": " ",
                  "type": "spacing"
                },
                {
                  "end": 1,
                  "logprob": -0.078,
                  "speaker_id": "speaker_1",
                  "start": 0.7,
                  "text": "from",
                  "type": "word"
                }
              ]
            }
          ]
        }
      },
      "MusicModelID": {
        "type": "string",
        "enum": [
          "v1",
          "v1.1",
          "v2",
          "merlin"
        ],
        "title": "MusicModelID"
      },
      "MusicPrompt": {
        "properties": {
          "positive_global_styles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 50,
            "title": "Positive Global Styles",
            "description": "The styles that should be present in the entire song."
          },
          "negative_global_styles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 50,
            "title": "Negative Global Styles",
            "description": "The styles that should not be present in the entire song."
          },
          "sections": {
            "items": {
              "$ref": "#/components/schemas/SongSection"
            },
            "type": "array",
            "maxItems": 30,
            "title": "Sections",
            "description": "The sections of the song."
          }
        },
        "type": "object",
        "required": [
          "positive_global_styles",
          "negative_global_styles",
          "sections"
        ],
        "title": "MusicPrompt"
      },
      "NestedCollectionContentItem": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "subcollection",
            "title": "Kind"
          },
          "ref_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ref Id"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "ref_id"
        ],
        "title": "NestedCollectionContentItem"
      },
      "NestedCollectionContentItemResponse": {
        "properties": {
          "ref_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ref Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "kind": {
            "type": "string",
            "const": "subcollection",
            "title": "Kind"
          }
        },
        "type": "object",
        "required": [
          "ref_id",
          "name",
          "kind"
        ],
        "title": "NestedCollectionContentItemResponse"
      },
      "NoGoVoiceDBModel": {
        "properties": {
          "similar_voice": {
            "items": {
              "$ref": "#/components/schemas/SimilarVoiceDBModel"
            },
            "type": "array",
            "title": "Similar Voice"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "category": {
            "type": "string",
            "const": "nogo",
            "title": "Category"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "similarity_threshold": {
            "type": "number",
            "title": "Similarity Threshold",
            "default": 0.5
          },
          "total_matches": {
            "type": "integer",
            "title": "Total Matches",
            "default": 0
          },
          "safety_control": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "NONE",
                  "BAN",
                  "CAPTCHA",
                  "ENTERPRISE_BAN",
                  "ENTERPRISE_CAPTCHA"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Control",
            "default": "NONE"
          },
          "voice_source": {
            "type": "string",
            "const": "nogo",
            "title": "Voice Source",
            "default": "nogo"
          },
          "last_ecapa_embedding_update_unix_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Ecapa Embedding Update Unix Ms",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "similar_voice",
          "voice_id",
          "name",
          "category"
        ],
        "title": "NoGoVoiceDBModel"
      },
      "OAuth2ClientCredsResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "auth_type": {
            "type": "string",
            "const": "oauth2_client_credentials",
            "title": "Auth Type",
            "default": "oauth2_client_credentials"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "token_url": {
            "type": "string",
            "title": "Token Url"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes",
            "default": []
          },
          "extra_params": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Extra Params",
            "default": {

            }
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "used_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthConnectionDependencies"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider",
          "client_id",
          "token_url",
          "id"
        ],
        "title": "OAuth2ClientCredsResponse",
        "description": "Response model for oauth2 client creds"
      },
      "OAuth2JWTResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "auth_type": {
            "type": "string",
            "const": "oauth2_jwt",
            "title": "Auth Type",
            "default": "oauth2_jwt"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "token_url": {
            "type": "string",
            "title": "Token Url",
            "description": "Token endpoint URL for exchanging JWT for access token"
          },
          "algorithm": {
            "type": "string",
            "enum": [
              "HS256",
              "HS384",
              "HS512",
              "RS256",
              "RS384",
              "RS512"
            ],
            "title": "Algorithm",
            "description": "JWT signing algorithm",
            "default": "HS256"
          },
          "key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key Id",
            "description": "Key ID (kid) for JWT header - useful for key rotation"
          },
          "issuer": {
            "type": "string",
            "title": "Issuer",
            "description": "JWT issuer (iss claim)"
          },
          "audience": {
            "type": "string",
            "title": "Audience",
            "description": "JWT audience (aud claim)"
          },
          "subject": {
            "type": "string",
            "title": "Subject",
            "description": "JWT subject (sub claim)"
          },
          "expiration_seconds": {
            "type": "integer",
            "maximum": 86400,
            "minimum": 60,
            "title": "Expiration Seconds",
            "description": "Token expiration time in seconds",
            "default": 3600
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes",
            "description": "OAuth2 scopes to request when exchanging JWT for access token"
          },
          "extra_params": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Extra Params",
            "description": "Additional custom claims to include in the token"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "used_by": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthConnectionDependencies"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "provider",
          "token_url",
          "issuer",
          "audience",
          "subject",
          "id"
        ],
        "title": "OAuth2JWTResponse",
        "description": "Response model for OAuth2 JWT auth connections"
      },
      "OAuthExchangeRequestModel": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code",
            "description": "The OAuth code to exchange for an access token."
          },
          "state": {
            "type": "string",
            "title": "State",
            "description": "The state parameter from the OAuth flow."
          }
        },
        "type": "object",
        "required": [
          "code",
          "state"
        ],
        "title": "OAuthExchangeRequestModel",
        "description": "Request model for exchanging an OAuth code for an access token."
      },
      "OAuthExchangeResponseModel": {
        "properties": {
          "integration_library_service": {
            "$ref": "#/components/schemas/IntegrationLibraryServices"
          }
        },
        "type": "object",
        "required": [
          "integration_library_service"
        ],
        "title": "OAuthExchangeResponseModel",
        "description": "Response model for completing the OAuth exchange flow."
      },
      "ObjectJsonSchemaProperty-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "object",
            "title": "Type",
            "default": "object"
          },
          "required": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Required"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "properties": {
            "additionalProperties": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
                },
                {
                  "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
                },
                {
                  "$ref": "#/components/schemas/ArrayJsonSchemaProperty-Input"
                }
              ]
            },
            "type": "object",
            "title": "Properties"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ObjectJsonSchemaProperty"
      },
      "ObjectJsonSchemaProperty-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "object",
            "title": "Type",
            "default": "object"
          },
          "required": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Required"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "properties": {
            "additionalProperties": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
                },
                {
                  "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
                },
                {
                  "$ref": "#/components/schemas/ArrayJsonSchemaProperty-Output"
                }
              ]
            },
            "type": "object",
            "title": "Properties"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "ObjectJsonSchemaProperty"
      },
      "OidcConfigResponseModel": {
        "properties": {
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "issuer": {
            "type": "string",
            "title": "Issuer"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "client_id",
          "issuer",
          "client_secret"
        ],
        "title": "OidcConfigResponseModel"
      },
      "OrbAvatar": {
        "properties": {
          "type": {
            "type": "string",
            "const": "orb",
            "title": "Type",
            "description": "The type of the avatar",
            "default": "orb"
          },
          "color_1": {
            "type": "string",
            "title": "Color 1",
            "description": "The first color of the avatar",
            "default": "#2792dc"
          },
          "color_2": {
            "type": "string",
            "title": "Color 2",
            "description": "The second color of the avatar",
            "default": "#9ce6e6"
          }
        },
        "type": "object",
        "title": "OrbAvatar",
        "example": {
          "color_1": "#2792dc",
          "color_2": "#9ce6e6",
          "type": "orb"
        }
      },
      "OriginalAudioDocumentResponseModel": {
        "properties": {
          "voices": {
            "items": {
              "$ref": "#/components/schemas/OriginalAudioVoiceResponseModel"
            },
            "type": "array",
            "title": "Voices"
          }
        },
        "type": "object",
        "required": [
          "voices"
        ],
        "title": "OriginalAudioDocumentResponseModel"
      },
      "OriginalAudioVoiceResponseModel": {
        "properties": {
          "voice_name": {
            "type": "string",
            "title": "Voice Name"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          }
        },
        "type": "object",
        "required": [
          "voice_name"
        ],
        "title": "OriginalAudioVoiceResponseModel"
      },
      "OutboundCallRecipient": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "conversation_initiation_client_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataRequest-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "phone_number"
        ],
        "title": "OutboundCallRecipient"
      },
      "OutboundCallRecipientResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "status": {
            "$ref": "#/components/schemas/BatchCallRecipientStatus"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "updated_at_unix": {
            "type": "integer",
            "title": "Updated At Unix"
          },
          "conversation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Id"
          },
          "conversation_initiation_client_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataInternal"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "phone_number",
          "status",
          "created_at_unix",
          "updated_at_unix",
          "conversation_id"
        ],
        "title": "OutboundCallRecipientResponseModel"
      },
      "OutboundSIPTrunkConfigRequestModel": {
        "properties": {
          "address": {
            "type": "string",
            "title": "Address",
            "description": "Hostname or IP the SIP INVITE is sent to."
          },
          "transport": {
            "$ref": "#/components/schemas/SIPTrunkTransportEnum",
            "description": "Protocol to use for SIP transport (signalling layer).",
            "default": "auto"
          },
          "media_encryption": {
            "$ref": "#/components/schemas/SIPMediaEncryptionEnum",
            "description": "Whether or not to encrypt media (data layer).",
            "default": "allowed"
          },
          "headers": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Headers",
            "description": "SIP X-* headers for INVITE request. These headers are sent as-is and may help identify this call."
          },
          "credentials": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SIPTrunkCredentialsRequestModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional digest authentication credentials (username/password). If not provided, ACL authentication is assumed."
          }
        },
        "type": "object",
        "required": [
          "address"
        ],
        "title": "OutboundSIPTrunkConfigRequestModel"
      },
      "PVCStatusUpdate": {
        "properties": {
          "state": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "scheduled",
                  "running",
                  "done",
                  "failed"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "state_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State Message"
          },
          "dataset_duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Duration Seconds"
          },
          "progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress"
          },
          "lora_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lora Path"
          },
          "uid": {
            "type": "string",
            "title": "Uid",
            "default": ""
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "default": ""
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "default": ""
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "default": ""
          }
        },
        "type": "object",
        "title": "PVCStatusUpdate"
      },
      "PaginatedListedTranscriptionTaskResponseModel": {
        "properties": {
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/ListedTranscriptionTaskResponseModel"
            },
            "type": "array",
            "title": "Tasks"
          },
          "cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor"
          }
        },
        "type": "object",
        "required": [
          "tasks"
        ],
        "title": "PaginatedListedTranscriptionTaskResponseModel"
      },
      "ParseVoiceoverStudioScriptResponseModel": {
        "properties": {
          "lines_by_speaker": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/VoiceoverStudioScriptLineResponseModel"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Lines By Speaker"
          }
        },
        "type": "object",
        "required": [
          "lines_by_speaker"
        ],
        "title": "ParseVoiceoverStudioScriptResponseModel"
      },
      "PatchConvAIDashboardSettingsRequest": {
        "properties": {
          "charts": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DashboardCallSuccessChartModel"
                },
                {
                  "$ref": "#/components/schemas/DashboardCriteriaChartModel"
                },
                {
                  "$ref": "#/components/schemas/DashboardDataCollectionChartModel"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "call_success": "#/components/schemas/DashboardCallSuccessChartModel",
                  "criteria": "#/components/schemas/DashboardCriteriaChartModel",
                  "data_collection": "#/components/schemas/DashboardDataCollectionChartModel"
                }
              }
            },
            "type": "array",
            "maxItems": 4,
            "title": "Charts"
          }
        },
        "type": "object",
        "title": "PatchConvAIDashboardSettingsRequest"
      },
      "PatchConvAISettingsRequest": {
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
              },
              {
                "type": "null"
              }
            ]
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          },
          "can_use_mcp_servers": {
            "type": "boolean",
            "title": "Can Use Mcp Servers",
            "description": "Whether the workspace can use MCP servers",
            "default": false
          },
          "rag_retention_period_days": {
            "type": "integer",
            "maximum": 30,
            "exclusiveMinimum": 0,
            "title": "Rag Retention Period Days",
            "default": 10
          }
        },
        "type": "object",
        "title": "PatchConvAISettingsRequest"
      },
      "PatchWorkspaceSecretRequest": {
        "properties": {
          "type": {
            "type": "string",
            "const": "update",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "value"
        ],
        "title": "PatchWorkspaceSecretRequest"
      },
      "PathInfo": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "storing_shared_files_on_user": {
            "type": "boolean",
            "title": "Storing Shared Files On User"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "workspace_id",
          "storing_shared_files_on_user"
        ],
        "title": "PathInfo",
        "description": "Holds information about where to fetch resources from for a workspace or a user on a workspace. This is\nuseful because you don't have to care if this is a multi-seat workspace storing files on the workspace\nor storing files on the user.\n\nIf you call \"get_firebase_document_reference\" this will return either the user or workspace document.\nYou then use this document to fetch e.g. a voice by doing document.collection(VOICE).document(voice_id)\ncompletely independent of where exactly this file is stored. You just have to initialise with\nfrom_path_info, and it will take care of the rest. Similar for GCP paths.\n\nThe boolean \"storing_shared_files_on_user\" from WorkspaceDBModel controls the location of the files.\n\nSee UserPathInfo which inherits PathInfo for stronger guarantees about user_id.\nSee AuthInfo which inherits UserPathInfo for holding authentication state."
      },
      "PaymentStatusKind": {
        "type": "string",
        "enum": [
          "paid",
          "pending",
          "failed",
          "aborted"
        ],
        "title": "PaymentStatusKind"
      },
      "PdfExportOptions": {
        "properties": {
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          },
          "format": {
            "type": "string",
            "const": "pdf",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "type": "object",
        "required": [
          "format"
        ],
        "title": "PdfExportOptions"
      },
      "PdfExportRequest": {
        "properties": {
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          }
        },
        "type": "object",
        "title": "PdfExportRequest"
      },
      "PhoneNumberAgentInfo": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id",
            "description": "The ID of the agent"
          },
          "agent_name": {
            "type": "string",
            "title": "Agent Name",
            "description": "The name of the agent"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "agent_name"
        ],
        "title": "PhoneNumberAgentInfo",
        "example": {
          "agent_id": "F3Pbu5gP6NNKBscdCdwB",
          "agent_name": "My Agent"
        }
      },
      "PhoneNumberTransfer": {
        "properties": {
          "transfer_destination": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PhoneNumberTransferDestination"
                  },
                  {
                    "$ref": "#/components/schemas/SIPUriTransferDestination"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "phone": "#/components/schemas/PhoneNumberTransferDestination",
                    "sip_uri": "#/components/schemas/SIPUriTransferDestination"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Transfer Destination"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number",
            "deprecated": true
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          },
          "transfer_type": {
            "$ref": "#/components/schemas/TransferTypeEnum",
            "default": "conference"
          }
        },
        "type": "object",
        "required": [
          "condition"
        ],
        "title": "PhoneNumberTransfer"
      },
      "PhoneNumberTransferDestination": {
        "properties": {
          "type": {
            "type": "string",
            "const": "phone",
            "title": "Type",
            "default": "phone"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          }
        },
        "type": "object",
        "required": [
          "phone_number"
        ],
        "title": "PhoneNumberTransferDestination"
      },
      "PlayDTMFResultErrorModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "play_dtmf_error",
            "title": "Result Type",
            "default": "play_dtmf_error"
          },
          "status": {
            "type": "string",
            "const": "error",
            "title": "Status",
            "default": "error"
          },
          "error": {
            "type": "string",
            "title": "Error"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "error"
        ],
        "title": "PlayDTMFResultErrorModel"
      },
      "PlayDTMFResultSuccessModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "play_dtmf_success",
            "title": "Result Type",
            "default": "play_dtmf_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "dtmf_tones": {
            "type": "string",
            "title": "Dtmf Tones"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "required": [
          "dtmf_tones"
        ],
        "title": "PlayDTMFResultSuccessModel"
      },
      "PlayDTMFToolConfig": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "play_keypad_touch_tone",
            "title": "System Tool Type",
            "default": "play_keypad_touch_tone"
          }
        },
        "type": "object",
        "title": "PlayDTMFToolConfig",
        "description": "Allows the agent to play DTMF tones during a phone call.\n\nThis tool can be used to interact with automated phone systems, such as\nnavigating phone menus, entering extensions, or inputting numeric codes."
      },
      "PlaybackTrackingInterval": {
        "properties": {
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time"
        ],
        "title": "PlaybackTrackingInterval"
      },
      "PodcastBulletinMode": {
        "properties": {
          "type": {
            "type": "string",
            "const": "bulletin",
            "title": "Type",
            "description": "The type of podcast to create."
          },
          "bulletin": {
            "$ref": "#/components/schemas/PodcastBulletinModeData",
            "description": "The voice settings for the bulletin."
          }
        },
        "type": "object",
        "required": [
          "type",
          "bulletin"
        ],
        "title": "PodcastBulletinMode",
        "example": {
          "bulletin": {
            "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
          },
          "type": "bulletin"
        }
      },
      "PodcastBulletinModeData": {
        "properties": {
          "host_voice_id": {
            "type": "string",
            "title": "Host Voice Id",
            "description": "The ID of the host voice."
          }
        },
        "type": "object",
        "required": [
          "host_voice_id"
        ],
        "title": "PodcastBulletinModeData",
        "example": {
          "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
        }
      },
      "PodcastConversationMode": {
        "properties": {
          "type": {
            "type": "string",
            "const": "conversation",
            "title": "Type",
            "description": "The type of podcast to create."
          },
          "conversation": {
            "$ref": "#/components/schemas/PodcastConversationModeData",
            "description": "The voice settings for the conversation."
          }
        },
        "type": "object",
        "required": [
          "type",
          "conversation"
        ],
        "title": "PodcastConversationMode",
        "example": {
          "conversation": {
            "guest_voice_id": "aw1NgEzBg83R7vgmiJt7",
            "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
          },
          "type": "conversation"
        }
      },
      "PodcastConversationModeData": {
        "properties": {
          "host_voice_id": {
            "type": "string",
            "title": "Host Voice Id",
            "description": "The ID of the host voice."
          },
          "guest_voice_id": {
            "type": "string",
            "title": "Guest Voice Id",
            "description": "The ID of the guest voice."
          }
        },
        "type": "object",
        "required": [
          "host_voice_id",
          "guest_voice_id"
        ],
        "title": "PodcastConversationModeData",
        "example": {
          "guest_voice_id": "aw1NgEzBg83R7vgmiJt7",
          "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
        }
      },
      "PodcastProjectResponseModel": {
        "properties": {
          "project": {
            "$ref": "#/components/schemas/ProjectResponseModel",
            "description": "The project associated with the created podcast."
          }
        },
        "type": "object",
        "required": [
          "project"
        ],
        "title": "PodcastProjectResponseModel"
      },
      "PodcastTextSource": {
        "properties": {
          "type": {
            "type": "string",
            "const": "text",
            "title": "Type",
            "description": "The type of source to create."
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text to create the podcast from."
          }
        },
        "type": "object",
        "required": [
          "type",
          "text"
        ],
        "title": "PodcastTextSource",
        "example": {
          "text": "This is a test podcast.",
          "type": "text"
        }
      },
      "PodcastURLSource": {
        "properties": {
          "type": {
            "type": "string",
            "const": "url",
            "title": "Type",
            "description": "The type of source to create."
          },
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL to create the podcast from."
          }
        },
        "type": "object",
        "required": [
          "type",
          "url"
        ],
        "title": "PodcastURLSource",
        "example": {
          "type": "url",
          "url": "https://www.example.com"
        }
      },
      "PodcastUserRatings": {
        "properties": {
          "content": {
            "type": "string",
            "enum": [
              "thumbs_up",
              "thumbs_down"
            ],
            "title": "Content"
          },
          "voice": {
            "type": "string",
            "enum": [
              "thumbs_up",
              "thumbs_down"
            ],
            "title": "Voice"
          }
        },
        "type": "object",
        "required": [
          "content",
          "voice"
        ],
        "title": "PodcastUserRatings"
      },
      "Position-Input": {
        "properties": {
          "x": {
            "type": "number",
            "title": "X",
            "default": 0
          },
          "y": {
            "type": "number",
            "title": "Y",
            "default": 0
          }
        },
        "type": "object",
        "title": "Position"
      },
      "Position-Output": {
        "properties": {
          "x": {
            "type": "number",
            "title": "X",
            "default": 0
          },
          "y": {
            "type": "number",
            "title": "Y",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "x",
          "y"
        ],
        "title": "Position"
      },
      "PostAgentAvatarResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          }
        },
        "type": "object",
        "required": [
          "agent_id"
        ],
        "title": "PostAgentAvatarResponseModel"
      },
      "PostAgentLinkResponseModel": {
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "token": {
            "$ref": "#/components/schemas/ConversationTokenDBModel"
          }
        },
        "type": "object",
        "required": [
          "agent_id",
          "token"
        ],
        "title": "PostAgentLinkResponseModel"
      },
      "PostWorkspaceSecretRequest": {
        "properties": {
          "type": {
            "type": "string",
            "const": "new",
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "value"
        ],
        "title": "PostWorkspaceSecretRequest"
      },
      "PostWorkspaceSecretResponseModel": {
        "properties": {
          "type": {
            "type": "string",
            "const": "stored",
            "title": "Type"
          },
          "secret_id": {
            "type": "string",
            "title": "Secret Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "type",
          "secret_id",
          "name"
        ],
        "title": "PostWorkspaceSecretResponseModel"
      },
      "PreviewAudioDBModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "audio_url": {
            "type": "string",
            "title": "Audio Url"
          },
          "is_auto_generated": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Auto Generated",
            "default": false
          },
          "generated_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generated At Unix"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "text",
          "audio_url"
        ],
        "title": "PreviewAudioDBModel"
      },
      "PrivacyConfig": {
        "properties": {
          "record_voice": {
            "type": "boolean",
            "title": "Record Voice",
            "description": "Whether to record the conversation",
            "default": true
          },
          "retention_days": {
            "type": "integer",
            "title": "Retention Days",
            "description": "The number of days to retain the conversation. -1 indicates there is no retention limit",
            "default": -1
          },
          "delete_transcript_and_pii": {
            "type": "boolean",
            "title": "Delete Transcript And Pii",
            "description": "Whether to delete the transcript and PII",
            "default": false
          },
          "delete_audio": {
            "type": "boolean",
            "title": "Delete Audio",
            "description": "Whether to delete the audio",
            "default": false
          },
          "apply_to_existing_conversations": {
            "type": "boolean",
            "title": "Apply To Existing Conversations",
            "description": "Whether to apply the privacy settings to existing conversations",
            "default": false
          },
          "zero_retention_mode": {
            "type": "boolean",
            "title": "Zero Retention Mode",
            "description": "Whether to enable zero retention mode - no PII data is stored",
            "default": false
          }
        },
        "type": "object",
        "title": "PrivacyConfig",
        "example": {
          "apply_to_existing_conversations": false,
          "delete_audio": false,
          "delete_transcript_and_pii": false,
          "record_voice": true,
          "retention_days": -1,
          "zero_retention_mode": false
        }
      },
      "ProcessedVoiceCollectionDataCrossEnvModel": {
        "properties": {
          "collection": {
            "$ref": "#/components/schemas/SharedVoiceCollectionDBModel",
            "description": "The voice collection model"
          },
          "processed_voices": {
            "items": {
              "$ref": "#/components/schemas/ProcessedVoiceDataCrossEnvModel"
            },
            "type": "array",
            "title": "Processed Voices",
            "description": "Processed voice data for voices in the collection"
          }
        },
        "type": "object",
        "required": [
          "collection",
          "processed_voices"
        ],
        "title": "ProcessedVoiceCollectionDataCrossEnvModel",
        "description": "Processed voice collection data with voice info included"
      },
      "ProcessedVoiceDataCrossEnvModel": {
        "properties": {
          "voice": {
            "$ref": "#/components/schemas/VoiceDBModel-Output",
            "description": "The voice model"
          },
          "owner_public_user_id": {
            "type": "string",
            "title": "Owner Public User Id",
            "description": "Public user ID of the voice owner"
          }
        },
        "type": "object",
        "required": [
          "voice",
          "owner_public_user_id"
        ],
        "title": "ProcessedVoiceDataCrossEnvModel",
        "description": "Processed voice data that includes user info to avoid fetching in isolated env"
      },
      "ProducerProfileListResponse": {
        "properties": {
          "producers": {
            "items": {
              "$ref": "#/components/schemas/DetailedProducerProfileResponse"
            },
            "type": "array",
            "title": "Producers"
          }
        },
        "type": "object",
        "required": [
          "producers"
        ],
        "title": "ProducerProfileListResponse"
      },
      "ProducerProfileResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "qualifications": {
            "items": {
              "$ref": "#/components/schemas/ProducerQualification-Output"
            },
            "type": "array",
            "title": "Qualifications"
          },
          "settlement_info": {
            "$ref": "#/components/schemas/SettlementInfo"
          },
          "confidence_score": {
            "type": "number",
            "title": "Confidence Score"
          },
          "teams": {
            "items": {
              "$ref": "#/components/schemas/TeamMembershipResponse"
            },
            "type": "array",
            "title": "Teams"
          },
          "active_task_limit": {
            "type": "integer",
            "title": "Active Task Limit"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "qualifications",
          "settlement_info",
          "confidence_score",
          "teams",
          "active_task_limit"
        ],
        "title": "ProducerProfileResponse"
      },
      "ProducerQualification-Input": {
        "properties": {
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagModel"
            },
            "type": "array",
            "title": "Tags"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          }
        },
        "type": "object",
        "required": [
          "tags"
        ],
        "title": "ProducerQualification"
      },
      "ProducerQualification-Output": {
        "properties": {
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagModel"
            },
            "type": "array",
            "title": "Tags"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          }
        },
        "type": "object",
        "required": [
          "tags"
        ],
        "title": "ProducerQualification"
      },
      "ProducerQualificationOptionModel": {
        "properties": {
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagModel"
            },
            "type": "array",
            "title": "Tags"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "tags",
          "name"
        ],
        "title": "ProducerQualificationOptionModel"
      },
      "ProducerQualificationOptionsResponseModel": {
        "properties": {
          "options": {
            "items": {
              "$ref": "#/components/schemas/ProducerQualificationOptionModel"
            },
            "type": "array",
            "title": "Options"
          }
        },
        "type": "object",
        "required": [
          "options"
        ],
        "title": "ProducerQualificationOptionsResponseModel"
      },
      "ProducerStatsModel": {
        "properties": {
          "completed_task_count": {
            "type": "integer",
            "title": "Completed Task Count"
          },
          "pending_task_count": {
            "type": "integer",
            "title": "Pending Task Count"
          },
          "total_earnings": {
            "type": "number",
            "title": "Total Earnings"
          },
          "pending_earnings": {
            "type": "number",
            "title": "Pending Earnings"
          }
        },
        "type": "object",
        "required": [
          "completed_task_count",
          "pending_task_count",
          "total_earnings",
          "pending_earnings"
        ],
        "title": "ProducerStatsModel"
      },
      "ProductionRequestResponseModel": {
        "properties": {
          "is_requested": {
            "type": "boolean",
            "title": "Is Requested",
            "default": true
          }
        },
        "type": "object",
        "title": "ProductionRequestResponseModel"
      },
      "ProductionsDeliverableRef": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/DeliverableKind"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "id"
        ],
        "title": "ProductionsDeliverableRef"
      },
      "ProductionsFeedbackRating": {
        "type": "string",
        "enum": [
          "positive",
          "negative"
        ],
        "title": "ProductionsFeedbackRating"
      },
      "ProductionsFeedbackResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "rating": {
            "$ref": "#/components/schemas/ProductionsFeedbackRating"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "comments",
          "rating"
        ],
        "title": "ProductionsFeedbackResponse"
      },
      "ProductionsOrderListModel": {
        "properties": {
          "orders": {
            "items": {
              "$ref": "#/components/schemas/ProductionsOrderModel"
            },
            "type": "array",
            "title": "Orders"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "orders",
          "count"
        ],
        "title": "ProductionsOrderListModel"
      },
      "ProductionsOrderModel": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "state": {
            "$ref": "#/components/schemas/TaskDescriptionState"
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TranscriptionTaskDescriptionMetaDbModel"
              },
              {
                "$ref": "#/components/schemas/CaptionsTaskDescriptionMetaDbModel"
              },
              {
                "$ref": "#/components/schemas/SubtitlesTaskDescriptionMetaDbModel"
              },
              {
                "$ref": "#/components/schemas/DubsTaskDescriptionMetaDbModel"
              }
            ],
            "title": "Meta"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/TaskDescriptionEventDbModel"
            },
            "type": "array",
            "title": "Events"
          },
          "instructions": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/TranscriptionTaskInstructions"
                  },
                  {
                    "$ref": "#/components/schemas/xi_backend__routes__productions__models__response__response_models__SubtitlesCommonInstructions"
                  }
                ],
                "discriminator": {
                  "propertyName": "kind",
                  "mapping": {
                    "captions": "#/components/schemas/xi_backend__routes__productions__models__response__response_models__SubtitlesCommonInstructions",
                    "subtitles": "#/components/schemas/xi_backend__routes__productions__models__response__response_models__SubtitlesCommonInstructions",
                    "transcription": "#/components/schemas/TranscriptionTaskInstructions",
                    "transcription_v2": "#/components/schemas/TranscriptionTaskInstructions"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "workspace_id",
          "state",
          "meta",
          "events",
          "instructions"
        ],
        "title": "ProductionsOrderModel"
      },
      "Project": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "language_code": {
            "type": "string",
            "title": "Language Code",
            "default": ""
          },
          "language_probability": {
            "type": "number",
            "title": "Language Probability",
            "default": 0
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "total_editing_time_seconds": {
            "type": "number",
            "title": "Total Editing Time Seconds",
            "default": 0
          },
          "playback_tracking_intervals": {
            "items": {
              "$ref": "#/components/schemas/PlaybackTrackingInterval"
            },
            "type": "array",
            "title": "Playback Tracking Intervals",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at"
        ],
        "title": "Project"
      },
      "ProjectConversionStatusResponseModel": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          },
          "state": {
            "type": "string",
            "enum": [
              "creating",
              "default",
              "converting",
              "in_queue",
              "uploading"
            ],
            "title": "State"
          },
          "chapters": {
            "items": {
              "$ref": "#/components/schemas/ChapterResponseModelInternal"
            },
            "type": "array",
            "title": "Chapters"
          },
          "last_conversion_date_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix"
          },
          "project_conversion_chapter_ids_converting": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Conversion Chapter Ids Converting"
          },
          "generation_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectGenerationMetaResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "upload_meta": {
            "type": "null",
            "title": "Upload Meta"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "can_be_downloaded",
          "access_level",
          "state",
          "chapters"
        ],
        "title": "ProjectConversionStatusResponseModel"
      },
      "ProjectCreationMetaResponseModel": {
        "properties": {
          "creation_progress": {
            "type": "number",
            "title": "Creation Progress",
            "description": "The progress of the project creation."
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "creating",
              "finished",
              "failed"
            ],
            "title": "Status",
            "description": "The status of the project creation action."
          },
          "type": {
            "type": "string",
            "enum": [
              "blank",
              "generate_podcast",
              "auto_assign_voices"
            ],
            "title": "Type",
            "description": "The type of the project creation action."
          }
        },
        "type": "object",
        "required": [
          "creation_progress",
          "status",
          "type"
        ],
        "title": "ProjectCreationMetaResponseModel",
        "example": {
          "creation_progress": 0.5,
          "status": "pending",
          "type": "blank"
        }
      },
      "ProjectExportLiveModerationErrorMetaBlockResponseModel": {
        "properties": {
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id"
          },
          "content_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Preview"
          },
          "block_last_change_unix_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Last Change Unix Ms"
          }
        },
        "type": "object",
        "required": [
          "block_id",
          "chapter_id"
        ],
        "title": "ProjectExportLiveModerationErrorMetaBlockResponseModel"
      },
      "ProjectExportLiveModerationErrorMetaResponseModel": {
        "properties": {
          "blocks": {
            "items": {
              "$ref": "#/components/schemas/ProjectExportLiveModerationErrorMetaBlockResponseModel"
            },
            "type": "array",
            "title": "Blocks"
          },
          "created_at_ms": {
            "type": "integer",
            "title": "Created At Ms"
          }
        },
        "type": "object",
        "required": [
          "blocks",
          "created_at_ms"
        ],
        "title": "ProjectExportLiveModerationErrorMetaResponseModel"
      },
      "ProjectExportResponseModel": {
        "properties": {
          "export_id": {
            "type": "string",
            "title": "Export Id"
          },
          "export_name": {
            "type": "string",
            "title": "Export Name"
          },
          "export_type": {
            "type": "string",
            "enum": [
              "project",
              "chapter"
            ],
            "title": "Export Type"
          },
          "file_format": {
            "type": "string",
            "enum": [
              "audio",
              "zip",
              "paragraphs_zip",
              "lpf",
              "video",
              "reader_publish"
            ],
            "title": "File Format"
          },
          "audio_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "mp3_44100_128",
                  "mp3_44100_192",
                  "pcm_44100"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Format"
          },
          "status": {
            "type": "string",
            "enum": [
              "generating_in_queue",
              "generating",
              "uploading_in_queue",
              "uploading",
              "success",
              "failed"
            ],
            "title": "Status"
          },
          "created_at_unix_ms": {
            "type": "integer",
            "title": "Created At Unix Ms"
          },
          "created_by_user_id": {
            "type": "string",
            "title": "Created By User Id"
          },
          "updated_at_unix_ms": {
            "type": "integer",
            "title": "Updated At Unix Ms"
          },
          "generation_progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generation Progress"
          },
          "generation_total": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generation Total"
          },
          "bucket_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bucket Name"
          },
          "file_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Path"
          },
          "volume_normalization": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Volume Normalization"
          },
          "bytes_uploaded": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bytes Uploaded"
          },
          "bytes_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bytes Total"
          },
          "last_download_at_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Download At Ms"
          },
          "chapter_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chapter Id"
          },
          "last_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Error"
          },
          "read_published_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Published Id"
          }
        },
        "type": "object",
        "required": [
          "export_id",
          "export_name",
          "export_type",
          "file_format",
          "audio_format",
          "status",
          "created_at_unix_ms",
          "created_by_user_id",
          "updated_at_unix_ms"
        ],
        "title": "ProjectExportResponseModel"
      },
      "ProjectExportWithMetadataResponseModel": {
        "properties": {
          "export_id": {
            "type": "string",
            "title": "Export Id"
          },
          "export_name": {
            "type": "string",
            "title": "Export Name"
          },
          "export_type": {
            "type": "string",
            "enum": [
              "project",
              "chapter"
            ],
            "title": "Export Type"
          },
          "file_format": {
            "type": "string",
            "enum": [
              "audio",
              "zip",
              "paragraphs_zip",
              "lpf",
              "video",
              "reader_publish"
            ],
            "title": "File Format"
          },
          "audio_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "mp3_44100_128",
                  "mp3_44100_192",
                  "pcm_44100"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Format"
          },
          "status": {
            "type": "string",
            "enum": [
              "generating_in_queue",
              "generating",
              "uploading_in_queue",
              "uploading",
              "success",
              "failed"
            ],
            "title": "Status"
          },
          "created_at_unix_ms": {
            "type": "integer",
            "title": "Created At Unix Ms"
          },
          "created_by_user_id": {
            "type": "string",
            "title": "Created By User Id"
          },
          "updated_at_unix_ms": {
            "type": "integer",
            "title": "Updated At Unix Ms"
          },
          "generation_progress": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generation Progress"
          },
          "generation_total": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generation Total"
          },
          "bucket_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bucket Name"
          },
          "file_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Path"
          },
          "volume_normalization": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Volume Normalization"
          },
          "bytes_uploaded": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bytes Uploaded"
          },
          "bytes_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bytes Total"
          },
          "last_download_at_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Download At Ms"
          },
          "chapter_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chapter Id"
          },
          "last_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Error"
          },
          "read_published_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Published Id"
          },
          "live_moderation_error_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectExportLiveModerationErrorMetaResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "export_id",
          "export_name",
          "export_type",
          "file_format",
          "audio_format",
          "status",
          "created_at_unix_ms",
          "created_by_user_id",
          "updated_at_unix_ms"
        ],
        "title": "ProjectExportWithMetadataResponseModel"
      },
      "ProjectExtendedResponseModel": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the project."
          },
          "create_date_unix": {
            "type": "integer",
            "title": "Create Date Unix",
            "description": "The creation date of the project."
          },
          "default_title_voice_id": {
            "type": "string",
            "title": "Default Title Voice Id",
            "description": "The default title voice ID."
          },
          "default_paragraph_voice_id": {
            "type": "string",
            "title": "Default Paragraph Voice Id",
            "description": "The default paragraph voice ID."
          },
          "default_model_id": {
            "type": "string",
            "title": "Default Model Id",
            "description": "The default model ID."
          },
          "last_conversion_date_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix",
            "description": "The last conversion date of the project."
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded",
            "description": "Whether the project can be downloaded."
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "The title of the project."
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author",
            "description": "The author of the project."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the project."
          },
          "genres": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genres",
            "description": "List of genres of the project."
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url",
            "description": "The cover image URL of the project."
          },
          "target_audience": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "children",
                  "young adult",
                  "adult",
                  "all ages"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience",
            "description": "The target audience of the project."
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Two-letter language code (ISO 639-1) of the language of the project."
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "The content type of the project, e.g. 'Novel' or 'Short Story'"
          },
          "original_publication_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Publication Date",
            "description": "The original publication date of the project."
          },
          "mature_content": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mature Content",
            "description": "Whether the project contains mature content."
          },
          "isbn_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn Number",
            "description": "The ISBN number of the project."
          },
          "volume_normalization": {
            "type": "boolean",
            "title": "Volume Normalization",
            "description": "Whether the project uses volume normalization."
          },
          "state": {
            "type": "string",
            "enum": [
              "creating",
              "default",
              "converting",
              "in_queue"
            ],
            "title": "State",
            "description": "The state of the project."
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level",
            "description": "The access level of the project."
          },
          "fiction": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "fiction",
                  "non-fiction"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiction",
            "description": "Whether the project is fiction."
          },
          "quality_check_on": {
            "type": "boolean",
            "title": "Quality Check On",
            "description": "Whether quality check is enabled for this project.",
            "deprecated": true
          },
          "quality_check_on_when_bulk_convert": {
            "type": "boolean",
            "title": "Quality Check On When Bulk Convert",
            "description": "Whether quality check is enabled on the project when bulk converting.",
            "deprecated": true
          },
          "creation_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectCreationMetaResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The creation meta of the project."
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "blank",
                  "book",
                  "article",
                  "genfm",
                  "video"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "The source type of the project."
          },
          "chapters_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chapters Enabled",
            "description": "Whether chapters are enabled for the project.",
            "default": true
          },
          "captions_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captions Enabled",
            "description": "Whether captions are enabled for the project.",
            "default": true
          },
          "caption_style": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Global styling to be applied to all captions"
          },
          "quality_preset": {
            "type": "string",
            "enum": [
              "standard",
              "high",
              "highest",
              "ultra",
              "ultra_lossless"
            ],
            "title": "Quality Preset",
            "description": "The quality preset level of the project."
          },
          "chapters": {
            "items": {
              "$ref": "#/components/schemas/ChapterResponseModel"
            },
            "type": "array",
            "title": "Chapters",
            "description": "List of chapters of the project and their metadata."
          },
          "pronunciation_dictionary_versions": {
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionResponseModel"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Versions",
            "description": "List of pronunciation dictionary versions of the project and their metadata."
          },
          "pronunciation_dictionary_locators": {
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryLocatorResponseModel"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Locators",
            "description": "List of pronunciation dictionary locators."
          },
          "apply_text_normalization": {
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off",
              "apply_english"
            ],
            "title": "Apply Text Normalization",
            "description": "Whether text normalization is applied to the project."
          },
          "experimental": {
            "type": "object",
            "title": "Experimental",
            "description": "Experimental features for the project."
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "name",
          "create_date_unix",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id",
          "can_be_downloaded",
          "volume_normalization",
          "state",
          "access_level",
          "quality_check_on",
          "quality_check_on_when_bulk_convert",
          "quality_preset",
          "chapters",
          "pronunciation_dictionary_versions",
          "pronunciation_dictionary_locators",
          "apply_text_normalization"
        ],
        "title": "ProjectExtendedResponseModel",
        "example": {
          "access_level": "viewer",
          "apply_text_normalization": "auto",
          "author": "John Doe",
          "can_be_downloaded": true,
          "chapters": [
            {
              "can_be_downloaded": true,
              "chapter_id": "aw1NgEzBg83R7vgmiJt6",
              "conversion_progress": 0.5,
              "last_conversion_date_unix": 1714204800,
              "last_conversion_error": "Error message",
              "name": "Chapter 1",
              "state": "converting",
              "statistics": {
                "characters_converted": 500,
                "characters_unconverted": 1000,
                "paragraphs_converted": 20,
                "paragraphs_unconverted": 10
              }
            }
          ],
          "content_type": "Novel",
          "cover_image_url": "https://example.com/cover.jpg",
          "create_date_unix": 1714204800,
          "creation_meta": {
            "creation_progress": 0.5,
            "status": "pending",
            "type": "blank"
          },
          "default_model_id": "eleven_multilingual_v2",
          "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "description": "This is a description of my project.",
          "experimental": {

          },
          "fiction": "fiction",
          "genres": [
            "Novel",
            "Short Story"
          ],
          "isbn_number": "978-90-274-3964-2",
          "language": "en",
          "last_conversion_date_unix": 1714204800,
          "mature_content": false,
          "name": "My Project",
          "original_publication_date": "2025-01-01",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "pronunciation_dictionary_locators": [],
          "pronunciation_dictionary_versions": [],
          "quality_check_on": false,
          "quality_check_on_when_bulk_convert": false,
          "quality_preset": "standard",
          "state": "default",
          "target_audience": "young adult",
          "title": "My Project",
          "volume_normalization": true
        }
      },
      "ProjectExternalAudioResponseModel": {
        "properties": {
          "external_audio_id": {
            "type": "string",
            "title": "External Audio Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "signed_url": {
            "type": "string",
            "title": "Signed Url"
          },
          "offset_ms": {
            "type": "integer",
            "title": "Offset Ms"
          },
          "duration_ms": {
            "type": "integer",
            "title": "Duration Ms"
          },
          "start_time_ms": {
            "type": "integer",
            "title": "Start Time Ms"
          },
          "end_time_ms": {
            "type": "integer",
            "title": "End Time Ms"
          },
          "order": {
            "type": "string",
            "title": "Order"
          },
          "created_at_ms": {
            "type": "integer",
            "title": "Created At Ms"
          },
          "updated_at_ms": {
            "type": "integer",
            "title": "Updated At Ms"
          },
          "volume_gain_db": {
            "type": "number",
            "title": "Volume Gain Db",
            "default": 0
          },
          "fade_in_ms": {
            "type": "integer",
            "title": "Fade In Ms",
            "default": 0
          },
          "fade_out_ms": {
            "type": "integer",
            "title": "Fade Out Ms",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "external_audio_id",
          "filename",
          "signed_url",
          "offset_ms",
          "duration_ms",
          "start_time_ms",
          "end_time_ms",
          "order",
          "created_at_ms",
          "updated_at_ms"
        ],
        "title": "ProjectExternalAudioResponseModel"
      },
      "ProjectGenerationMetaResponseModel": {
        "properties": {
          "started_at_ms": {
            "type": "integer",
            "title": "Started At Ms"
          },
          "last_update_at_ms": {
            "type": "integer",
            "title": "Last Update At Ms"
          }
        },
        "type": "object",
        "required": [
          "started_at_ms",
          "last_update_at_ms"
        ],
        "title": "ProjectGenerationMetaResponseModel"
      },
      "ProjectResponseModel": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the project."
          },
          "create_date_unix": {
            "type": "integer",
            "title": "Create Date Unix",
            "description": "The creation date of the project."
          },
          "default_title_voice_id": {
            "type": "string",
            "title": "Default Title Voice Id",
            "description": "The default title voice ID."
          },
          "default_paragraph_voice_id": {
            "type": "string",
            "title": "Default Paragraph Voice Id",
            "description": "The default paragraph voice ID."
          },
          "default_model_id": {
            "type": "string",
            "title": "Default Model Id",
            "description": "The default model ID."
          },
          "last_conversion_date_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Date Unix",
            "description": "The last conversion date of the project."
          },
          "can_be_downloaded": {
            "type": "boolean",
            "title": "Can Be Downloaded",
            "description": "Whether the project can be downloaded."
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "The title of the project."
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author",
            "description": "The author of the project."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the project."
          },
          "genres": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genres",
            "description": "List of genres of the project."
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url",
            "description": "The cover image URL of the project."
          },
          "target_audience": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "children",
                  "young adult",
                  "adult",
                  "all ages"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience",
            "description": "The target audience of the project."
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Two-letter language code (ISO 639-1) of the language of the project."
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "The content type of the project, e.g. 'Novel' or 'Short Story'"
          },
          "original_publication_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Publication Date",
            "description": "The original publication date of the project."
          },
          "mature_content": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mature Content",
            "description": "Whether the project contains mature content."
          },
          "isbn_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn Number",
            "description": "The ISBN number of the project."
          },
          "volume_normalization": {
            "type": "boolean",
            "title": "Volume Normalization",
            "description": "Whether the project uses volume normalization."
          },
          "state": {
            "type": "string",
            "enum": [
              "creating",
              "default",
              "converting",
              "in_queue"
            ],
            "title": "State",
            "description": "The state of the project."
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level",
            "description": "The access level of the project."
          },
          "fiction": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "fiction",
                  "non-fiction"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiction",
            "description": "Whether the project is fiction."
          },
          "quality_check_on": {
            "type": "boolean",
            "title": "Quality Check On",
            "description": "Whether quality check is enabled for this project.",
            "deprecated": true
          },
          "quality_check_on_when_bulk_convert": {
            "type": "boolean",
            "title": "Quality Check On When Bulk Convert",
            "description": "Whether quality check is enabled on the project when bulk converting.",
            "deprecated": true
          },
          "creation_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectCreationMetaResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The creation meta of the project."
          },
          "source_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "blank",
                  "book",
                  "article",
                  "genfm",
                  "video"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Type",
            "description": "The source type of the project."
          },
          "chapters_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chapters Enabled",
            "description": "Whether chapters are enabled for the project.",
            "default": true
          },
          "captions_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captions Enabled",
            "description": "Whether captions are enabled for the project.",
            "default": true
          },
          "caption_style": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CaptionStyleModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Global styling to be applied to all captions"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "name",
          "create_date_unix",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id",
          "can_be_downloaded",
          "volume_normalization",
          "state",
          "access_level",
          "quality_check_on",
          "quality_check_on_when_bulk_convert"
        ],
        "title": "ProjectResponseModel",
        "example": {
          "access_level": "viewer",
          "author": "John Doe",
          "can_be_downloaded": true,
          "content_type": "Novel",
          "cover_image_url": "https://example.com/cover.jpg",
          "create_date_unix": 1714204800,
          "creation_meta": {
            "creation_progress": 0.5,
            "status": "pending",
            "type": "blank"
          },
          "default_model_id": "eleven_multilingual_v2",
          "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "description": "This is a description of my project.",
          "fiction": "fiction",
          "genres": [
            "Novel",
            "Short Story"
          ],
          "isbn_number": "978-90-274-3964-2",
          "language": "en",
          "last_conversion_date_unix": 1714204800,
          "mature_content": false,
          "name": "My Project",
          "original_publication_date": "2025-01-01",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "quality_check_on": false,
          "quality_check_on_when_bulk_convert": false,
          "state": "default",
          "target_audience": "young adult",
          "title": "My Project",
          "volume_normalization": true
        }
      },
      "ProjectSnapshotExtendedResponseModel": {
        "properties": {
          "project_snapshot_id": {
            "type": "string",
            "title": "Project Snapshot Id",
            "description": "The ID of the project snapshot."
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix",
            "description": "The creation date of the project snapshot."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the project snapshot."
          },
          "audio_upload": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Upload",
            "description": "(Deprecated)"
          },
          "zip_upload": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip Upload",
            "description": "(Deprecated)"
          },
          "character_alignments": {
            "items": {
              "$ref": "#/components/schemas/CharacterAlignmentModel"
            },
            "type": "array",
            "title": "Character Alignments"
          }
        },
        "type": "object",
        "required": [
          "project_snapshot_id",
          "project_id",
          "created_at_unix",
          "name",
          "character_alignments"
        ],
        "title": "ProjectSnapshotExtendedResponseModel",
        "example": {
          "character_alignments": [],
          "created_at_unix": 1714204800,
          "name": "My Project Snapshot",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6"
        }
      },
      "ProjectSnapshotResponseModel": {
        "properties": {
          "project_snapshot_id": {
            "type": "string",
            "title": "Project Snapshot Id",
            "description": "The ID of the project snapshot."
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "The ID of the project."
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix",
            "description": "The creation date of the project snapshot."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the project snapshot."
          },
          "audio_upload": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio Upload",
            "description": "(Deprecated)"
          },
          "zip_upload": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zip Upload",
            "description": "(Deprecated)"
          }
        },
        "type": "object",
        "required": [
          "project_snapshot_id",
          "project_id",
          "created_at_unix",
          "name"
        ],
        "title": "ProjectSnapshotResponseModel",
        "example": {
          "created_at_unix": 1714204800,
          "name": "My Project Snapshot",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6"
        }
      },
      "ProjectSnapshotsResponseModel": {
        "properties": {
          "snapshots": {
            "items": {
              "$ref": "#/components/schemas/ProjectSnapshotResponseModel"
            },
            "type": "array",
            "title": "Snapshots",
            "description": "List of project snapshots."
          }
        },
        "type": "object",
        "required": [
          "snapshots"
        ],
        "title": "ProjectSnapshotsResponseModel",
        "example": {
          "snapshots": [
            {
              "created_at_unix": 1714204800,
              "name": "My Project Snapshot",
              "project_id": "aw1NgEzBg83R7vgmiJt6",
              "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6"
            }
          ]
        }
      },
      "ProjectVideoResponseModel": {
        "properties": {
          "video_id": {
            "type": "string",
            "title": "Video Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "signed_url": {
            "type": "string",
            "title": "Signed Url"
          },
          "signed_preview_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signed Preview Url"
          },
          "offset_ms": {
            "type": "integer",
            "title": "Offset Ms"
          },
          "duration_ms": {
            "type": "integer",
            "title": "Duration Ms"
          },
          "width": {
            "type": "integer",
            "title": "Width"
          },
          "height": {
            "type": "integer",
            "title": "Height"
          },
          "codec": {
            "type": "string",
            "title": "Codec"
          },
          "order": {
            "type": "string",
            "title": "Order"
          },
          "preview_job_progress": {
            "type": "number",
            "title": "Preview Job Progress"
          },
          "created_at_ms": {
            "type": "integer",
            "title": "Created At Ms"
          },
          "updated_at_ms": {
            "type": "integer",
            "title": "Updated At Ms"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "thumbnail_interval_seconds": {
            "type": "number",
            "title": "Thumbnail Interval Seconds"
          },
          "thumbnail_size": {
            "prefixItems": [
              {
                "type": "integer"
              },
              {
                "type": "integer"
              }
            ],
            "items": {
              "type": "integer"
            },
            "type": "array",
            "maxItems": 2,
            "minItems": 2,
            "title": "Thumbnail Size"
          },
          "thumbnail_sheets": {
            "items": {
              "$ref": "#/components/schemas/ProjectVideoThumbnailSheetResponseModel"
            },
            "type": "array",
            "title": "Thumbnail Sheets"
          },
          "start_time_ms": {
            "type": "integer",
            "title": "Start Time Ms"
          },
          "end_time_ms": {
            "type": "integer",
            "title": "End Time Ms"
          },
          "source_video_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Video Id"
          },
          "pending_block_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Pending Block Ids"
          }
        },
        "type": "object",
        "required": [
          "video_id",
          "filename",
          "signed_url",
          "signed_preview_url",
          "offset_ms",
          "duration_ms",
          "width",
          "height",
          "codec",
          "order",
          "preview_job_progress",
          "created_at_ms",
          "updated_at_ms",
          "thumbnail_interval_seconds",
          "thumbnail_size",
          "thumbnail_sheets",
          "start_time_ms",
          "end_time_ms",
          "pending_block_ids"
        ],
        "title": "ProjectVideoResponseModel"
      },
      "ProjectVideoThumbnailSheetResponseModel": {
        "properties": {
          "start_thumbnail_index": {
            "type": "integer",
            "title": "Start Thumbnail Index"
          },
          "thumbnail_count": {
            "type": "integer",
            "title": "Thumbnail Count"
          },
          "signed_cloud_url": {
            "type": "string",
            "title": "Signed Cloud Url"
          }
        },
        "type": "object",
        "required": [
          "start_thumbnail_index",
          "thumbnail_count",
          "signed_cloud_url"
        ],
        "title": "ProjectVideoThumbnailSheetResponseModel"
      },
      "ProjectWsAuthMessage": {
        "properties": {
          "type": {
            "type": "string",
            "const": "auth",
            "title": "Type"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          }
        },
        "type": "object",
        "required": [
          "type",
          "access_token"
        ],
        "title": "ProjectWsAuthMessage"
      },
      "ProjectWsHeartbeatMessage": {
        "properties": {
          "type": {
            "type": "string",
            "const": "heartbeat",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ProjectWsHeartbeatMessage"
      },
      "ProjectWsResponseAckMessage": {
        "properties": {
          "type": {
            "type": "string",
            "const": "ack",
            "title": "Type"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "original_message_id": {
            "type": "string",
            "title": "Original Message Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "project_id",
          "original_message_id"
        ],
        "title": "ProjectWsResponseAckMessage"
      },
      "ProjectWsResponseBlockConversionUpdateMessage": {
        "properties": {
          "type": {
            "type": "string",
            "const": "block_conversion_update",
            "title": "Type"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id"
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "status": {
            "type": "string",
            "enum": [
              "not_converted",
              "converting",
              "converted"
            ],
            "title": "Status"
          },
          "last_block_snapshot_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Block Snapshot Id"
          },
          "last_converted_at_unix_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Converted At Unix Ms"
          },
          "last_change_unix_ms": {
            "type": "integer",
            "title": "Last Change Unix Ms"
          },
          "regeneration_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Regeneration Count"
          },
          "has_sts_elements": {
            "type": "boolean",
            "title": "Has Sts Elements"
          },
          "node_id_to_tts_element_response": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Id To Tts Element Response"
          },
          "children": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Children"
          }
        },
        "type": "object",
        "required": [
          "type",
          "project_id",
          "chapter_id",
          "client_id",
          "block_id",
          "status",
          "last_block_snapshot_id",
          "last_converted_at_unix_ms",
          "last_change_unix_ms",
          "regeneration_count",
          "has_sts_elements"
        ],
        "title": "ProjectWsResponseBlockConversionUpdateMessage"
      },
      "ProjectWsResponseCriticalErrorMessage": {
        "properties": {
          "type": {
            "type": "string",
            "const": "critical_error",
            "title": "Type"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "project_id"
        ],
        "title": "ProjectWsResponseCriticalErrorMessage"
      },
      "ProjectWsResponseUpdateChapterContentMessage": {
        "properties": {
          "type": {
            "type": "string",
            "const": "update_chapter_content",
            "title": "Type"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "changes": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ProjectWsResponseUpdateChapterContentMessageNewBlockChange"
                },
                {
                  "$ref": "#/components/schemas/ProjectWsResponseUpdateChapterContentMessageBlockChange"
                },
                {
                  "$ref": "#/components/schemas/ProjectWsResponseUpdateChapterContentMessageOrderChange"
                },
                {
                  "$ref": "#/components/schemas/ProjectWsResponseUpdateChapterContentMessageVideosChange"
                },
                {
                  "$ref": "#/components/schemas/ProjectWsResponseUpdateChapterContentMessagePartialVideoChange"
                },
                {
                  "$ref": "#/components/schemas/ProjectWsResponseUpdateChapterContentMessageExternalAudiosChange"
                }
              ]
            },
            "type": "array",
            "title": "Changes"
          }
        },
        "type": "object",
        "required": [
          "type",
          "project_id",
          "chapter_id",
          "client_id",
          "changes"
        ],
        "title": "ProjectWsResponseUpdateChapterContentMessage"
      },
      "ProjectWsResponseUpdateChapterContentMessageBlockChange": {
        "properties": {
          "type": {
            "type": "string",
            "const": "block_change",
            "title": "Type"
          },
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "change": {
            "$ref": "#/components/schemas/BlockResponseModel"
          }
        },
        "type": "object",
        "required": [
          "type",
          "block_id",
          "change"
        ],
        "title": "ProjectWsResponseUpdateChapterContentMessageBlockChange"
      },
      "ProjectWsResponseUpdateChapterContentMessageExternalAudiosChange": {
        "properties": {
          "type": {
            "type": "string",
            "const": "external_audios",
            "title": "Type"
          },
          "external_audios": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "External Audios"
          }
        },
        "type": "object",
        "required": [
          "type",
          "external_audios"
        ],
        "title": "ProjectWsResponseUpdateChapterContentMessageExternalAudiosChange"
      },
      "ProjectWsResponseUpdateChapterContentMessageNewBlockChange": {
        "properties": {
          "type": {
            "type": "string",
            "const": "new_block",
            "title": "Type"
          },
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "change": {
            "$ref": "#/components/schemas/BlockResponseModel"
          }
        },
        "type": "object",
        "required": [
          "type",
          "block_id",
          "change"
        ],
        "title": "ProjectWsResponseUpdateChapterContentMessageNewBlockChange"
      },
      "ProjectWsResponseUpdateChapterContentMessageOrderChange": {
        "properties": {
          "type": {
            "type": "string",
            "const": "order_change",
            "title": "Type"
          },
          "new_order": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "New Order"
          }
        },
        "type": "object",
        "required": [
          "type",
          "new_order"
        ],
        "title": "ProjectWsResponseUpdateChapterContentMessageOrderChange"
      },
      "ProjectWsResponseUpdateChapterContentMessagePartialVideoChange": {
        "properties": {
          "type": {
            "type": "string",
            "const": "partial_video",
            "title": "Type"
          },
          "video_id": {
            "type": "string",
            "title": "Video Id"
          },
          "partial_video": {
            "type": "object",
            "title": "Partial Video"
          }
        },
        "type": "object",
        "required": [
          "type",
          "video_id",
          "partial_video"
        ],
        "title": "ProjectWsResponseUpdateChapterContentMessagePartialVideoChange"
      },
      "ProjectWsResponseUpdateChapterContentMessageVideosChange": {
        "properties": {
          "type": {
            "type": "string",
            "const": "videos",
            "title": "Type"
          },
          "videos": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Videos"
          }
        },
        "type": "object",
        "required": [
          "type",
          "videos"
        ],
        "title": "ProjectWsResponseUpdateChapterContentMessageVideosChange"
      },
      "ProjectWsResponseUpdateChapterConversionMessage": {
        "properties": {
          "type": {
            "type": "string",
            "const": "update_chapter_conversion",
            "title": "Type"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id"
          },
          "state": {
            "type": "string",
            "enum": [
              "default",
              "converting",
              "converted"
            ],
            "title": "State"
          },
          "conversion_progress": {
            "type": "number",
            "title": "Conversion Progress"
          },
          "last_conversion_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Conversion Error"
          }
        },
        "type": "object",
        "required": [
          "type",
          "project_id",
          "chapter_id",
          "state",
          "conversion_progress",
          "last_conversion_error"
        ],
        "title": "ProjectWsResponseUpdateChapterConversionMessage"
      },
      "ProjectWsResponseUpdateChapterConversionMessageWithGenerationMeta": {
        "properties": {
          "started_at_ms": {
            "type": "integer",
            "title": "Started At Ms"
          },
          "last_update_at_ms": {
            "type": "integer",
            "title": "Last Update At Ms"
          }
        },
        "type": "object",
        "required": [
          "started_at_ms",
          "last_update_at_ms"
        ],
        "title": "ProjectWsResponseUpdateChapterConversionMessageWithGenerationMeta"
      },
      "ProjectWsResponseUpdateProjectConversionMessage": {
        "properties": {
          "type": {
            "type": "string",
            "const": "update_project_conversion",
            "title": "Type"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "state": {
            "type": "string",
            "enum": [
              "default",
              "converting",
              "in_queue",
              "uploading",
              "converted"
            ],
            "title": "State"
          },
          "new_snapshot_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Snapshot Id"
          },
          "generation_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectWsResponseUpdateChapterConversionMessageWithGenerationMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "type",
          "project_id",
          "state"
        ],
        "title": "ProjectWsResponseUpdateProjectConversionMessage"
      },
      "ProjectWsResponseUpdateProjectExportMessage": {
        "properties": {
          "type": {
            "type": "string",
            "const": "update_project_export",
            "title": "Type"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "project_export_id": {
            "type": "string",
            "title": "Project Export Id"
          },
          "state": {
            "type": "string",
            "enum": [
              "success",
              "pending",
              "failed"
            ],
            "title": "State"
          }
        },
        "type": "object",
        "required": [
          "type",
          "project_id",
          "project_export_id",
          "state"
        ],
        "title": "ProjectWsResponseUpdateProjectExportMessage"
      },
      "ProjectWsResponseValidationErrorMessage": {
        "properties": {
          "type": {
            "type": "string",
            "const": "validation_error",
            "title": "Type"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "validation_errors": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ProjectWsValidationErrorTooManyBlocks"
                },
                {
                  "$ref": "#/components/schemas/ProjectWsValidationErrorTooManyCharactersInBlock"
                },
                {
                  "$ref": "#/components/schemas/ProjectWsValidationErrorInsufficientPermissions"
                },
                {
                  "$ref": "#/components/schemas/ProjectWsValidationErrorInvalidBlock"
                }
              ]
            },
            "type": "array",
            "title": "Validation Errors"
          }
        },
        "type": "object",
        "required": [
          "type",
          "project_id",
          "chapter_id",
          "client_id",
          "validation_errors"
        ],
        "title": "ProjectWsResponseValidationErrorMessage"
      },
      "ProjectWsUpdateChapterMessage": {
        "properties": {
          "type": {
            "type": "string",
            "const": "update_chapter_content",
            "title": "Type"
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "chapter_id": {
            "type": "string",
            "title": "Chapter Id"
          },
          "content": {
            "$ref": "#/components/schemas/ProjectWsUpdateChapterMessageContent"
          }
        },
        "type": "object",
        "required": [
          "type",
          "client_id",
          "chapter_id",
          "content"
        ],
        "title": "ProjectWsUpdateChapterMessage"
      },
      "ProjectWsUpdateChapterMessageContent": {
        "properties": {
          "blocks": {
            "items": {
              "$ref": "#/components/schemas/ProjectWsUpdateChapterMessageContentBlock"
            },
            "type": "array",
            "title": "Blocks"
          },
          "sound_effects": {
            "items": {
              "$ref": "#/components/schemas/ProjectWsUpdateChapterMessageContentSoundEffect"
            },
            "type": "array",
            "title": "Sound Effects"
          },
          "videos": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ProjectVideoResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Videos"
          },
          "external_audios": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ProjectExternalAudioResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "External Audios"
          }
        },
        "type": "object",
        "required": [
          "blocks"
        ],
        "title": "ProjectWsUpdateChapterMessageContent"
      },
      "ProjectWsUpdateChapterMessageContentBlock": {
        "properties": {
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "type": {
            "type": "string",
            "const": "block",
            "title": "Type"
          },
          "is_converted": {
            "type": "boolean",
            "title": "Is Converted"
          },
          "block_snapshot_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Block Snapshot Id"
          },
          "last_change_unix_ms": {
            "type": "integer",
            "title": "Last Change Unix Ms"
          },
          "sub_type": {
            "type": "string",
            "enum": [
              "p",
              "h1",
              "h2",
              "h3",
              "h4",
              "h5",
              "h6"
            ],
            "title": "Sub Type"
          },
          "children": {
            "items": {
              "$ref": "#/components/schemas/ProjectWsUpdateChapterMessageContentBlockChild"
            },
            "type": "array",
            "title": "Children"
          },
          "locked_state": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locked State"
          }
        },
        "type": "object",
        "required": [
          "block_id",
          "type",
          "is_converted",
          "block_snapshot_id",
          "last_change_unix_ms",
          "sub_type",
          "children",
          "locked_state"
        ],
        "title": "ProjectWsUpdateChapterMessageContentBlock"
      },
      "ProjectWsUpdateChapterMessageContentBlockChild": {
        "properties": {
          "node_id": {
            "type": "string",
            "title": "Node Id"
          },
          "type": {
            "type": "string",
            "const": "tts_node",
            "title": "Type"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "settings": {
            "$ref": "#/components/schemas/ProjectWsUpdateChapterMessageContentBlockChildSettings"
          },
          "offset_ms": {
            "type": "integer",
            "title": "Offset Ms",
            "default": 0
          },
          "start_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time Ms"
          },
          "end_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time Ms"
          }
        },
        "type": "object",
        "required": [
          "node_id",
          "type",
          "text",
          "settings"
        ],
        "title": "ProjectWsUpdateChapterMessageContentBlockChild"
      },
      "ProjectWsUpdateChapterMessageContentBlockChildSettings": {
        "properties": {
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id"
          },
          "voice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectWsUpdateChapterMessageContentVoiceSettings"
              },
              {
                "type": "null"
              }
            ]
          },
          "global_voice_settings_enabled": {
            "type": "boolean",
            "title": "Global Voice Settings Enabled",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "voice_id"
        ],
        "title": "ProjectWsUpdateChapterMessageContentBlockChildSettings"
      },
      "ProjectWsUpdateChapterMessageContentSoundEffect": {
        "properties": {
          "sound_effect_id": {
            "type": "string",
            "title": "Sound Effect Id"
          },
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "node_id": {
            "type": "string",
            "title": "Node Id"
          },
          "start_pos": {
            "type": "integer",
            "title": "Start Pos"
          },
          "pos_order": {
            "type": "integer",
            "title": "Pos Order"
          },
          "source_sound_effect_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Sound Effect Id"
          },
          "source_chapter_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Chapter Id"
          }
        },
        "type": "object",
        "required": [
          "sound_effect_id",
          "block_id",
          "node_id",
          "start_pos",
          "pos_order"
        ],
        "title": "ProjectWsUpdateChapterMessageContentSoundEffect"
      },
      "ProjectWsUpdateChapterMessageContentVoiceSettings": {
        "properties": {
          "stability": {
            "type": "number",
            "title": "Stability"
          },
          "similarity_boost": {
            "type": "number",
            "title": "Similarity Boost"
          },
          "style": {
            "type": "number",
            "title": "Style",
            "default": 0
          },
          "use_speaker_boost": {
            "type": "boolean",
            "title": "Use Speaker Boost",
            "default": true
          },
          "speed": {
            "type": "number",
            "title": "Speed",
            "default": 1
          },
          "volume_gain": {
            "type": "number",
            "title": "Volume Gain",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "stability",
          "similarity_boost"
        ],
        "title": "ProjectWsUpdateChapterMessageContentVoiceSettings"
      },
      "ProjectWsValidationErrorInsufficientPermissions": {
        "properties": {
          "type": {
            "type": "string",
            "const": "insufficient_permissions",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ProjectWsValidationErrorInsufficientPermissions"
      },
      "ProjectWsValidationErrorInvalidBlock": {
        "properties": {
          "type": {
            "type": "string",
            "const": "invalid_block",
            "title": "Type"
          },
          "block_id": {
            "type": "string",
            "title": "Block Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "block_id"
        ],
        "title": "ProjectWsValidationErrorInvalidBlock"
      },
      "ProjectWsValidationErrorTooManyBlocks": {
        "properties": {
          "type": {
            "type": "string",
            "const": "too_many_blocks",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ProjectWsValidationErrorTooManyBlocks"
      },
      "ProjectWsValidationErrorTooManyCharactersInBlock": {
        "properties": {
          "type": {
            "type": "string",
            "const": "too_many_characters_in_block",
            "title": "Type"
          },
          "block_id": {
            "type": "string",
            "title": "Block Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "block_id"
        ],
        "title": "ProjectWsValidationErrorTooManyCharactersInBlock"
      },
      "ProjectsReadPublishedStatusResponseModel": {
        "properties": {
          "read_exists": {
            "type": "boolean",
            "title": "Read Exists"
          },
          "project_changed_since_last_published_changes": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Changed Since Last Published Changes"
          },
          "project_changed_since_last_conversion": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Changed Since Last Conversion"
          }
        },
        "type": "object",
        "required": [
          "read_exists"
        ],
        "title": "ProjectsReadPublishedStatusResponseModel"
      },
      "ProjectsSpeechSynthesisNodeSettingsResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "voice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProjectsVoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "global_voice_settings_enabled": {
            "type": "boolean",
            "title": "Global Voice Settings Enabled",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "voice_id"
        ],
        "title": "ProjectsSpeechSynthesisNodeSettingsResponseModel"
      },
      "ProjectsVoiceSettingsResponseModel": {
        "properties": {
          "stability": {
            "type": "number",
            "title": "Stability"
          },
          "similarity_boost": {
            "type": "number",
            "title": "Similarity Boost"
          },
          "style": {
            "type": "number",
            "title": "Style",
            "default": 0
          },
          "use_speaker_boost": {
            "type": "boolean",
            "title": "Use Speaker Boost",
            "default": true
          },
          "speed": {
            "type": "number",
            "title": "Speed",
            "default": 1
          },
          "volume_gain": {
            "type": "number",
            "title": "Volume Gain",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "stability",
          "similarity_boost"
        ],
        "title": "ProjectsVoiceSettingsResponseModel"
      },
      "Prompt": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "arguments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PromptArgument"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Arguments"
          },
          "_meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Prompt",
        "description": "A prompt or prompt template that the server offers."
      },
      "PromptAgentAPIModel-Input": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "The prompt for the agent",
            "default": "",
            "x-convai-client-override": true
          },
          "llm": {
            "$ref": "#/components/schemas/LLM",
            "description": "The LLM to query with the prompt and the chat history. If using data residency, the LLM must be supported in the data residency environment",
            "default": "gemini-2.0-flash"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "description": "The temperature for the LLM",
            "default": 0
          },
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens",
            "description": "If greater than 0, maximum number of tokens the LLM can predict",
            "default": -1
          },
          "tool_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tool Ids",
            "description": "A list of IDs of tools used by the agent"
          },
          "built_in_tools": {
            "$ref": "#/components/schemas/BuiltInTools-Input",
            "description": "Built-in system tools to be used by the agent"
          },
          "mcp_server_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Mcp Server Ids",
            "description": "A list of MCP server ids to be used by the agent"
          },
          "native_mcp_server_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Native Mcp Server Ids",
            "description": "A list of Native MCP server ids to be used by the agent",
            "x-convai-client-override": true
          },
          "knowledge_base": {
            "items": {
              "$ref": "#/components/schemas/KnowledgeBaseLocator"
            },
            "type": "array",
            "title": "Knowledge Base",
            "description": "A list of knowledge bases to be used by the agent"
          },
          "custom_llm": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomLLM"
              },
              {
                "type": "null"
              }
            ],
            "description": "Definition for a custom LLM if LLM field is set to 'CUSTOM_LLM'"
          },
          "ignore_default_personality": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ignore Default Personality",
            "description": "Whether to ignore the default personality",
            "default": false
          },
          "rag": {
            "$ref": "#/components/schemas/RagConfig",
            "description": "Configuration for RAG"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Timezone for displaying current time in system prompt. If set, the current time will be included in the system prompt using this timezone. Must be a valid timezone name (e.g., 'America/New_York', 'Europe/London', 'UTC')."
          },
          "tools": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WebhookToolConfig-Input"
                },
                {
                  "$ref": "#/components/schemas/ClientToolConfig-Input"
                },
                {
                  "$ref": "#/components/schemas/SystemToolConfig-Input"
                },
                {
                  "$ref": "#/components/schemas/MCPToolConfig-Input"
                }
              ],
              "description": "The type of tool",
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "client": "#/components/schemas/ClientToolConfig-Input",
                  "mcp": "#/components/schemas/MCPToolConfig-Input",
                  "system": "#/components/schemas/SystemToolConfig-Input",
                  "webhook": "#/components/schemas/WebhookToolConfig-Input"
                }
              }
            },
            "type": "array",
            "title": "Tools",
            "description": "A list of tools that the agent can use over the course of the conversation, use tool_ids instead",
            "deprecated": true
          }
        },
        "type": "object",
        "title": "PromptAgentAPIModel",
        "example": {
          "knowledge_base": [],
          "llm": "gemini-2.0-flash-001",
          "max_tokens": -1,
          "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
          "temperature": 0,
          "tool_ids": [],
          "tools": []
        }
      },
      "PromptAgentAPIModel-Output": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "The prompt for the agent",
            "default": "",
            "x-convai-client-override": true
          },
          "llm": {
            "$ref": "#/components/schemas/LLM",
            "description": "The LLM to query with the prompt and the chat history. If using data residency, the LLM must be supported in the data residency environment",
            "default": "gemini-2.0-flash"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "description": "The temperature for the LLM",
            "default": 0
          },
          "max_tokens": {
            "type": "integer",
            "title": "Max Tokens",
            "description": "If greater than 0, maximum number of tokens the LLM can predict",
            "default": -1
          },
          "tool_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tool Ids",
            "description": "A list of IDs of tools used by the agent"
          },
          "built_in_tools": {
            "$ref": "#/components/schemas/BuiltInTools-Output",
            "description": "Built-in system tools to be used by the agent"
          },
          "mcp_server_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Mcp Server Ids",
            "description": "A list of MCP server ids to be used by the agent"
          },
          "native_mcp_server_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "title": "Native Mcp Server Ids",
            "description": "A list of Native MCP server ids to be used by the agent",
            "x-convai-client-override": true
          },
          "knowledge_base": {
            "items": {
              "$ref": "#/components/schemas/KnowledgeBaseLocator"
            },
            "type": "array",
            "title": "Knowledge Base",
            "description": "A list of knowledge bases to be used by the agent"
          },
          "custom_llm": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomLLM"
              },
              {
                "type": "null"
              }
            ],
            "description": "Definition for a custom LLM if LLM field is set to 'CUSTOM_LLM'"
          },
          "ignore_default_personality": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ignore Default Personality",
            "description": "Whether to ignore the default personality",
            "default": false
          },
          "rag": {
            "$ref": "#/components/schemas/RagConfig",
            "description": "Configuration for RAG"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Timezone for displaying current time in system prompt. If set, the current time will be included in the system prompt using this timezone. Must be a valid timezone name (e.g., 'America/New_York', 'Europe/London', 'UTC')."
          },
          "tools": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WebhookToolConfig-Output"
                },
                {
                  "$ref": "#/components/schemas/ClientToolConfig-Output"
                },
                {
                  "$ref": "#/components/schemas/SystemToolConfig-Output"
                },
                {
                  "$ref": "#/components/schemas/MCPToolConfig-Output"
                }
              ],
              "description": "The type of tool",
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "client": "#/components/schemas/ClientToolConfig-Output",
                  "mcp": "#/components/schemas/MCPToolConfig-Output",
                  "system": "#/components/schemas/SystemToolConfig-Output",
                  "webhook": "#/components/schemas/WebhookToolConfig-Output"
                }
              }
            },
            "type": "array",
            "title": "Tools",
            "description": "A list of tools that the agent can use over the course of the conversation, use tool_ids instead",
            "deprecated": true
          }
        },
        "type": "object",
        "title": "PromptAgentAPIModel",
        "example": {
          "knowledge_base": [],
          "llm": "gemini-2.0-flash-001",
          "max_tokens": -1,
          "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
          "temperature": 0,
          "tool_ids": [],
          "tools": []
        }
      },
      "PromptAgentAPIModelOverride": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "The prompt for the agent",
            "x-convai-client-override": true
          },
          "native_mcp_server_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Native Mcp Server Ids",
            "description": "A list of Native MCP server ids to be used by the agent",
            "x-convai-client-override": true
          }
        },
        "type": "object",
        "title": "PromptAgentAPIModelOverride",
        "example": {
          "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation."
        }
      },
      "PromptAgentAPIModelOverrideConfig": {
        "properties": {
          "prompt": {
            "type": "boolean",
            "title": "Prompt",
            "description": "Whether to allow overriding the prompt field.",
            "default": false
          },
          "native_mcp_server_ids": {
            "type": "boolean",
            "title": "Native Mcp Server Ids",
            "description": "Whether to allow overriding the native_mcp_server_ids field.",
            "default": false
          }
        },
        "type": "object",
        "title": "PromptAgentAPIModelOverrideConfig"
      },
      "PromptAgentAPIModelWorkflowOverride-Input": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "The prompt for the agent",
            "x-convai-client-override": true
          },
          "llm": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLM"
              },
              {
                "type": "null"
              }
            ],
            "description": "The LLM to query with the prompt and the chat history. If using data residency, the LLM must be supported in the data residency environment"
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature",
            "description": "The temperature for the LLM"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens",
            "description": "If greater than 0, maximum number of tokens the LLM can predict"
          },
          "tool_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Ids",
            "description": "A list of IDs of tools used by the agent"
          },
          "built_in_tools": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BuiltInToolsWorkflowOverride-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Built-in system tools to be used by the agent"
          },
          "mcp_server_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mcp Server Ids",
            "description": "A list of MCP server ids to be used by the agent"
          },
          "native_mcp_server_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Native Mcp Server Ids",
            "description": "A list of Native MCP server ids to be used by the agent",
            "x-convai-client-override": true
          },
          "knowledge_base": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/KnowledgeBaseLocator"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Knowledge Base",
            "description": "A list of knowledge bases to be used by the agent"
          },
          "custom_llm": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomLLM"
              },
              {
                "type": "null"
              }
            ],
            "description": "Definition for a custom LLM if LLM field is set to 'CUSTOM_LLM'"
          },
          "ignore_default_personality": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ignore Default Personality",
            "description": "Whether to ignore the default personality"
          },
          "rag": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RagConfigWorkflowOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for RAG"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Timezone for displaying current time in system prompt. If set, the current time will be included in the system prompt using this timezone. Must be a valid timezone name (e.g., 'America/New_York', 'Europe/London', 'UTC')."
          },
          "tools": {
            "anyOf": [
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/WebhookToolConfig-Input"
                    },
                    {
                      "$ref": "#/components/schemas/ClientToolConfig-Input"
                    },
                    {
                      "$ref": "#/components/schemas/SystemToolConfig-Input"
                    },
                    {
                      "$ref": "#/components/schemas/MCPToolConfig-Input"
                    }
                  ],
                  "description": "The type of tool",
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "client": "#/components/schemas/ClientToolConfig-Input",
                      "mcp": "#/components/schemas/MCPToolConfig-Input",
                      "system": "#/components/schemas/SystemToolConfig-Input",
                      "webhook": "#/components/schemas/WebhookToolConfig-Input"
                    }
                  }
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tools",
            "description": "A list of tools that the agent can use over the course of the conversation, use tool_ids instead"
          }
        },
        "type": "object",
        "title": "PromptAgentAPIModelWorkflowOverride",
        "example": {
          "knowledge_base": [],
          "llm": "gemini-2.0-flash-001",
          "max_tokens": -1,
          "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
          "temperature": 0,
          "tool_ids": [],
          "tools": []
        }
      },
      "PromptAgentAPIModelWorkflowOverride-Output": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "The prompt for the agent",
            "x-convai-client-override": true
          },
          "llm": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LLM"
              },
              {
                "type": "null"
              }
            ],
            "description": "The LLM to query with the prompt and the chat history. If using data residency, the LLM must be supported in the data residency environment"
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature",
            "description": "The temperature for the LLM"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens",
            "description": "If greater than 0, maximum number of tokens the LLM can predict"
          },
          "tool_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Ids",
            "description": "A list of IDs of tools used by the agent"
          },
          "built_in_tools": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BuiltInToolsWorkflowOverride-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Built-in system tools to be used by the agent"
          },
          "mcp_server_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mcp Server Ids",
            "description": "A list of MCP server ids to be used by the agent"
          },
          "native_mcp_server_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Native Mcp Server Ids",
            "description": "A list of Native MCP server ids to be used by the agent",
            "x-convai-client-override": true
          },
          "knowledge_base": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/KnowledgeBaseLocator"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Knowledge Base",
            "description": "A list of knowledge bases to be used by the agent"
          },
          "custom_llm": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomLLM"
              },
              {
                "type": "null"
              }
            ],
            "description": "Definition for a custom LLM if LLM field is set to 'CUSTOM_LLM'"
          },
          "ignore_default_personality": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ignore Default Personality",
            "description": "Whether to ignore the default personality"
          },
          "rag": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RagConfigWorkflowOverride"
              },
              {
                "type": "null"
              }
            ],
            "description": "Configuration for RAG"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone",
            "description": "Timezone for displaying current time in system prompt. If set, the current time will be included in the system prompt using this timezone. Must be a valid timezone name (e.g., 'America/New_York', 'Europe/London', 'UTC')."
          },
          "tools": {
            "anyOf": [
              {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/WebhookToolConfig-Output"
                    },
                    {
                      "$ref": "#/components/schemas/ClientToolConfig-Output"
                    },
                    {
                      "$ref": "#/components/schemas/SystemToolConfig-Output"
                    },
                    {
                      "$ref": "#/components/schemas/MCPToolConfig-Output"
                    }
                  ],
                  "description": "The type of tool",
                  "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                      "client": "#/components/schemas/ClientToolConfig-Output",
                      "mcp": "#/components/schemas/MCPToolConfig-Output",
                      "system": "#/components/schemas/SystemToolConfig-Output",
                      "webhook": "#/components/schemas/WebhookToolConfig-Output"
                    }
                  }
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tools",
            "description": "A list of tools that the agent can use over the course of the conversation, use tool_ids instead"
          }
        },
        "type": "object",
        "title": "PromptAgentAPIModelWorkflowOverride",
        "example": {
          "knowledge_base": [],
          "llm": "gemini-2.0-flash-001",
          "max_tokens": -1,
          "prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
          "temperature": 0,
          "tool_ids": [],
          "tools": []
        }
      },
      "PromptArgument": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "name"
        ],
        "title": "PromptArgument",
        "description": "An argument for a prompt template."
      },
      "PromptEvaluationCriteria": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The unique identifier for the evaluation criteria"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "const": "prompt",
            "title": "Type",
            "description": "The type of evaluation criteria",
            "default": "prompt"
          },
          "conversation_goal_prompt": {
            "type": "string",
            "maxLength": 2000,
            "title": "Conversation Goal Prompt",
            "description": "The prompt that the agent should use to evaluate the conversation"
          },
          "use_knowledge_base": {
            "type": "boolean",
            "title": "Use Knowledge Base",
            "description": "When evaluating the prompt, should the agent's knowledge base be used.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "conversation_goal_prompt"
        ],
        "title": "PromptEvaluationCriteria",
        "description": "An evaluation using the transcript and a prompt for a yes/no achieved answer",
        "example": {
          "conversation_goal_prompt": "You are a helpful assistant that can answer questions about the topic of the conversation.",
          "id": "1234567890",
          "name": "Customer satisfaction check",
          "use_knowledge_base": false
        }
      },
      "PromptMessage": {
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "user",
              "assistant"
            ],
            "title": "Role"
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextContent"
              },
              {
                "$ref": "#/components/schemas/ImageContent"
              },
              {
                "$ref": "#/components/schemas/AudioContent"
              },
              {
                "$ref": "#/components/schemas/ResourceLink"
              },
              {
                "$ref": "#/components/schemas/EmbeddedResource"
              }
            ],
            "title": "Content"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "PromptMessage",
        "description": "Describes a message returned as part of a prompt."
      },
      "PronunciationDictionaryAliasRuleRequestModel": {
        "properties": {
          "string_to_replace": {
            "type": "string",
            "title": "String To Replace",
            "description": "The string to replace. Must be a non-empty string."
          },
          "type": {
            "type": "string",
            "const": "alias",
            "title": "Type",
            "description": "The type of the rule."
          },
          "alias": {
            "type": "string",
            "title": "Alias",
            "description": "The alias for the string to be replaced."
          }
        },
        "type": "object",
        "required": [
          "string_to_replace",
          "type",
          "alias"
        ],
        "title": "PronunciationDictionaryAliasRuleRequestModel",
        "example": {
          "alias": "tie-land",
          "string_to_replace": "Thailand",
          "type": "alias"
        }
      },
      "PronunciationDictionaryAliasRuleResponseModel": {
        "properties": {
          "string_to_replace": {
            "type": "string",
            "title": "String To Replace"
          },
          "type": {
            "type": "string",
            "const": "alias",
            "title": "Type"
          },
          "alias": {
            "type": "string",
            "title": "Alias"
          }
        },
        "type": "object",
        "required": [
          "string_to_replace",
          "type",
          "alias"
        ],
        "title": "PronunciationDictionaryAliasRuleResponseModel"
      },
      "PronunciationDictionaryLocatorResponseModel": {
        "properties": {
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id"
          }
        },
        "type": "object",
        "required": [
          "pronunciation_dictionary_id",
          "version_id"
        ],
        "title": "PronunciationDictionaryLocatorResponseModel"
      },
      "PronunciationDictionaryPhonemeRuleRequestModel": {
        "properties": {
          "string_to_replace": {
            "type": "string",
            "title": "String To Replace",
            "description": "The string to replace. Must be a non-empty string."
          },
          "type": {
            "type": "string",
            "const": "phoneme",
            "title": "Type",
            "description": "The type of the rule."
          },
          "phoneme": {
            "type": "string",
            "title": "Phoneme",
            "description": "The phoneme rule."
          },
          "alphabet": {
            "type": "string",
            "title": "Alphabet",
            "description": "The alphabet to use with the phoneme rule."
          }
        },
        "type": "object",
        "required": [
          "string_to_replace",
          "type",
          "phoneme",
          "alphabet"
        ],
        "title": "PronunciationDictionaryPhonemeRuleRequestModel",
        "example": {
          "alphabet": "ipa",
          "phoneme": "/ˈtaɪ.lænd/",
          "string_to_replace": "Thailand",
          "type": "phoneme"
        }
      },
      "PronunciationDictionaryPhonemeRuleResponseModel": {
        "properties": {
          "string_to_replace": {
            "type": "string",
            "title": "String To Replace"
          },
          "type": {
            "type": "string",
            "const": "phoneme",
            "title": "Type"
          },
          "phoneme": {
            "type": "string",
            "title": "Phoneme"
          },
          "alphabet": {
            "type": "string",
            "title": "Alphabet"
          }
        },
        "type": "object",
        "required": [
          "string_to_replace",
          "type",
          "phoneme",
          "alphabet"
        ],
        "title": "PronunciationDictionaryPhonemeRuleResponseModel"
      },
      "PronunciationDictionaryRulesResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the pronunciation dictionary."
          },
          "version_id": {
            "type": "string",
            "title": "Version Id",
            "description": "The version ID of the pronunciation dictionary."
          },
          "version_rules_num": {
            "type": "integer",
            "title": "Version Rules Num",
            "description": "The number of rules in the version of the pronunciation dictionary."
          }
        },
        "type": "object",
        "required": [
          "id",
          "version_id",
          "version_rules_num"
        ],
        "title": "PronunciationDictionaryRulesResponseModel",
        "example": {
          "id": "5xM3yVvZQKV0EfqQpLrJ",
          "version_id": "5xM3yVvZQKV0EfqQpLr2",
          "version_rules_num": 5
        }
      },
      "PronunciationDictionaryVersionExtendedResponseModel": {
        "properties": {
          "version_id": {
            "type": "string",
            "title": "Version Id"
          },
          "version_rules_num": {
            "type": "integer",
            "title": "Version Rules Num"
          },
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "dictionary_name": {
            "type": "string",
            "title": "Dictionary Name"
          },
          "version_name": {
            "type": "string",
            "title": "Version Name"
          },
          "permission_on_resource": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission On Resource"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "creation_time_unix": {
            "type": "integer",
            "title": "Creation Time Unix"
          },
          "archived_time_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived Time Unix"
          },
          "rules": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryAliasRuleResponseModel"
                },
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryPhonemeRuleResponseModel"
                }
              ]
            },
            "type": "array",
            "title": "Rules"
          }
        },
        "type": "object",
        "required": [
          "version_id",
          "version_rules_num",
          "pronunciation_dictionary_id",
          "dictionary_name",
          "version_name",
          "permission_on_resource",
          "created_by",
          "creation_time_unix",
          "rules"
        ],
        "title": "PronunciationDictionaryVersionExtendedResponseModel"
      },
      "PronunciationDictionaryVersionLocatorDBModel": {
        "properties": {
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id"
          }
        },
        "type": "object",
        "required": [
          "pronunciation_dictionary_id",
          "version_id"
        ],
        "title": "PronunciationDictionaryVersionLocatorDBModel"
      },
      "PronunciationDictionaryVersionLocatorRequestModel": {
        "properties": {
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id",
            "description": "The ID of the pronunciation dictionary."
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id",
            "description": "The ID of the version of the pronunciation dictionary. If not provided, the latest version will be used."
          }
        },
        "type": "object",
        "required": [
          "pronunciation_dictionary_id"
        ],
        "title": "PronunciationDictionaryVersionLocatorRequestModel"
      },
      "PronunciationDictionaryVersionResponseModel": {
        "properties": {
          "version_id": {
            "type": "string",
            "title": "Version Id"
          },
          "version_rules_num": {
            "type": "integer",
            "title": "Version Rules Num"
          },
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "dictionary_name": {
            "type": "string",
            "title": "Dictionary Name"
          },
          "version_name": {
            "type": "string",
            "title": "Version Name"
          },
          "permission_on_resource": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "admin",
                  "editor",
                  "viewer"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission On Resource"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "creation_time_unix": {
            "type": "integer",
            "title": "Creation Time Unix"
          },
          "archived_time_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived Time Unix"
          }
        },
        "type": "object",
        "required": [
          "version_id",
          "version_rules_num",
          "pronunciation_dictionary_id",
          "dictionary_name",
          "version_name",
          "permission_on_resource",
          "created_by",
          "creation_time_unix"
        ],
        "title": "PronunciationDictionaryVersionResponseModel"
      },
      "PublicMediaReferenceResponseModel": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "src": {
            "type": "string",
            "title": "Src"
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "random_path_slug": {
            "type": "string",
            "title": "Random Path Slug"
          },
          "is_audio": {
            "type": "boolean",
            "title": "Is Audio"
          }
        },
        "type": "object",
        "required": [
          "url",
          "src",
          "duration_secs",
          "content_type",
          "random_path_slug",
          "is_audio"
        ],
        "title": "PublicMediaReferenceResponseModel"
      },
      "PublishingState": {
        "type": "string",
        "enum": [
          "draft",
          "pending_automated_review",
          "pending_manual_review",
          "published",
          "published_quarantined",
          "manually_rejected",
          "automatically_rejected",
          "deleted",
          "unlisted",
          "suspended"
        ],
        "title": "PublishingState"
      },
      "PydanticPronunciationDictionaryVersionLocator": {
        "properties": {
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id",
            "description": "The ID of the pronunciation dictionary"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id",
            "description": "The ID of the version of the pronunciation dictionary"
          }
        },
        "type": "object",
        "required": [
          "pronunciation_dictionary_id",
          "version_id"
        ],
        "title": "PydanticPronunciationDictionaryVersionLocator",
        "description": "A locator for other documents to be able to reference a specific dictionary and it's version.\nThis is a pydantic version of PronunciationDictionaryVersionLocatorDBModel.\nRequired to ensure compat with the rest of the agent data models."
      },
      "Qualification": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagModel"
            },
            "type": "array",
            "title": "Tags"
          },
          "available_capacity": {
            "type": "number",
            "title": "Available Capacity"
          },
          "allocated_capacity": {
            "type": "number",
            "title": "Allocated Capacity"
          },
          "visible": {
            "type": "boolean",
            "title": "Visible"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "tags",
          "available_capacity",
          "allocated_capacity",
          "visible"
        ],
        "title": "Qualification"
      },
      "QualificationDbModel": {
        "properties": {
          "_id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "schema_version": {
            "type": "integer",
            "title": "Schema Version"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagDbModel"
            },
            "type": "array",
            "title": "Tags"
          },
          "available_capacity": {
            "type": "number",
            "title": "Available Capacity"
          },
          "allocated_capacity": {
            "type": "number",
            "title": "Allocated Capacity"
          },
          "visible": {
            "type": "boolean",
            "title": "Visible"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "schema_version",
          "name",
          "tags",
          "available_capacity",
          "allocated_capacity",
          "visible",
          "created_at",
          "updated_at"
        ],
        "title": "QualificationDbModel"
      },
      "QualificationResponse": {
        "properties": {
          "qualifications": {
            "items": {
              "$ref": "#/components/schemas/Qualification"
            },
            "type": "array",
            "title": "Qualifications"
          }
        },
        "type": "object",
        "required": [
          "qualifications"
        ],
        "title": "QualificationResponse"
      },
      "QualityObservationResponseModel": {
        "properties": {
          "observation": {
            "type": "string",
            "enum": [
              "good",
              "bad"
            ],
            "title": "Observation"
          },
          "create_date_unix_seconds": {
            "type": "integer",
            "title": "Create Date Unix Seconds"
          }
        },
        "type": "object",
        "required": [
          "observation",
          "create_date_unix_seconds"
        ],
        "title": "QualityObservationResponseModel"
      },
      "QueryParamsJsonSchema": {
        "properties": {
          "properties": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "type": "object",
            "minProperties": 1,
            "title": "Properties"
          },
          "required": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Required"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "properties"
        ],
        "title": "QueryParamsJsonSchema"
      },
      "QuoteDecision": {
        "type": "string",
        "enum": [
          "accept",
          "reject"
        ],
        "title": "QuoteDecision"
      },
      "QuoteEstimateResponse": {
        "properties": {
          "quote": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranscriptionQuoteResponse"
              },
              {
                "$ref": "#/components/schemas/CaptionsQuoteResponse"
              },
              {
                "$ref": "#/components/schemas/SubtitlesQuoteResponse"
              },
              {
                "$ref": "#/components/schemas/DubsQuoteResponse"
              }
            ],
            "title": "Quote",
            "discriminator": {
              "propertyName": "kind",
              "mapping": {
                "captions": "#/components/schemas/CaptionsQuoteResponse",
                "dub": "#/components/schemas/DubsQuoteResponse",
                "subtitles": "#/components/schemas/SubtitlesQuoteResponse",
                "transcription_v2": "#/components/schemas/TranscriptionQuoteResponse"
              }
            }
          },
          "has_capacity": {
            "type": "boolean",
            "title": "Has Capacity"
          }
        },
        "type": "object",
        "required": [
          "quote",
          "has_capacity"
        ],
        "title": "QuoteEstimateResponse"
      },
      "QuoteResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "QuoteResponseModel"
      },
      "RAGDocumentIndexResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "model": {
            "$ref": "#/components/schemas/EmbeddingModelEnum"
          },
          "status": {
            "$ref": "#/components/schemas/RAGIndexStatus"
          },
          "progress_percentage": {
            "type": "number",
            "title": "Progress Percentage"
          },
          "document_model_index_usage": {
            "$ref": "#/components/schemas/RAGDocumentIndexUsage"
          }
        },
        "type": "object",
        "required": [
          "id",
          "model",
          "status",
          "progress_percentage",
          "document_model_index_usage"
        ],
        "title": "RAGDocumentIndexResponseModel"
      },
      "RAGDocumentIndexUsage": {
        "properties": {
          "used_bytes": {
            "type": "integer",
            "title": "Used Bytes"
          }
        },
        "type": "object",
        "required": [
          "used_bytes"
        ],
        "title": "RAGDocumentIndexUsage"
      },
      "RAGDocumentIndexesResponseModel": {
        "properties": {
          "indexes": {
            "items": {
              "$ref": "#/components/schemas/RAGDocumentIndexResponseModel"
            },
            "type": "array",
            "title": "Indexes"
          }
        },
        "type": "object",
        "required": [
          "indexes"
        ],
        "title": "RAGDocumentIndexesResponseModel"
      },
      "RAGIndexOverviewEmbeddingModelResponseModel": {
        "properties": {
          "model": {
            "$ref": "#/components/schemas/EmbeddingModelEnum"
          },
          "used_bytes": {
            "type": "integer",
            "title": "Used Bytes"
          }
        },
        "type": "object",
        "required": [
          "model",
          "used_bytes"
        ],
        "title": "RAGIndexOverviewEmbeddingModelResponseModel"
      },
      "RAGIndexOverviewResponseModel": {
        "properties": {
          "total_used_bytes": {
            "type": "integer",
            "title": "Total Used Bytes"
          },
          "total_max_bytes": {
            "type": "integer",
            "title": "Total Max Bytes"
          },
          "models": {
            "items": {
              "$ref": "#/components/schemas/RAGIndexOverviewEmbeddingModelResponseModel"
            },
            "type": "array",
            "title": "Models"
          }
        },
        "type": "object",
        "required": [
          "total_used_bytes",
          "total_max_bytes",
          "models"
        ],
        "title": "RAGIndexOverviewResponseModel"
      },
      "RAGIndexRequestModel": {
        "properties": {
          "model": {
            "$ref": "#/components/schemas/EmbeddingModelEnum"
          }
        },
        "type": "object",
        "required": [
          "model"
        ],
        "title": "RAGIndexRequestModel"
      },
      "RAGIndexStatus": {
        "type": "string",
        "enum": [
          "created",
          "processing",
          "failed",
          "succeeded",
          "rag_limit_exceeded",
          "document_too_small"
        ],
        "title": "RAGIndexStatus"
      },
      "RagChunkMetadata": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id"
          },
          "chunk_id": {
            "type": "string",
            "title": "Chunk Id"
          },
          "vector_distance": {
            "type": "number",
            "title": "Vector Distance"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "chunk_id",
          "vector_distance"
        ],
        "title": "RagChunkMetadata"
      },
      "RagConfig": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "default": false
          },
          "embedding_model": {
            "$ref": "#/components/schemas/EmbeddingModelEnum",
            "default": "e5_mistral_7b_instruct"
          },
          "max_vector_distance": {
            "type": "number",
            "exclusiveMaximum": 1,
            "exclusiveMinimum": 0,
            "title": "Max Vector Distance",
            "description": "Maximum vector distance of retrieved chunks.",
            "default": 0.6,
            "examples": [0.5]
          },
          "max_documents_length": {
            "type": "integer",
            "exclusiveMaximum": 10000000,
            "exclusiveMinimum": 0,
            "title": "Max Documents Length",
            "description": "Maximum total length of document chunks retrieved from RAG.",
            "default": 50000,
            "examples": [
              "50000"
            ]
          },
          "max_retrieved_rag_chunks_count": {
            "type": "integer",
            "maximum": 20,
            "exclusiveMinimum": 0,
            "title": "Max Retrieved Rag Chunks Count",
            "description": "Maximum number of RAG document chunks to initially retrieve from the vector store. These are then further filtered by vector distance and total length.",
            "default": 20,
            "examples": [5]
          }
        },
        "type": "object",
        "title": "RagConfig"
      },
      "RagConfigWorkflowOverride": {
        "properties": {
          "enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled"
          },
          "embedding_model": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmbeddingModelEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "max_vector_distance": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Vector Distance",
            "description": "Maximum vector distance of retrieved chunks.",
            "examples": [0.5]
          },
          "max_documents_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Documents Length",
            "description": "Maximum total length of document chunks retrieved from RAG.",
            "examples": [
              "50000"
            ]
          },
          "max_retrieved_rag_chunks_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Retrieved Rag Chunks Count",
            "description": "Maximum number of RAG document chunks to initially retrieve from the vector store. These are then further filtered by vector distance and total length.",
            "examples": [5]
          }
        },
        "type": "object",
        "title": "RagConfigWorkflowOverride"
      },
      "RagRetrievalInfo": {
        "properties": {
          "chunks": {
            "items": {
              "$ref": "#/components/schemas/RagChunkMetadata"
            },
            "type": "array",
            "title": "Chunks"
          },
          "embedding_model": {
            "$ref": "#/components/schemas/EmbeddingModelEnum"
          },
          "retrieval_query": {
            "type": "string",
            "title": "Retrieval Query"
          },
          "rag_latency_secs": {
            "type": "number",
            "title": "Rag Latency Secs"
          }
        },
        "type": "object",
        "required": [
          "chunks",
          "embedding_model",
          "retrieval_query",
          "rag_latency_secs"
        ],
        "title": "RagRetrievalInfo"
      },
      "Raw-Input": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "raw",
            "title": "Kind",
            "default": "raw"
          },
          "data": {
            "$ref": "#/components/schemas/Subtitles-Input"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "Raw"
      },
      "Raw-Output": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "raw",
            "title": "Kind",
            "default": "raw"
          },
          "data": {
            "$ref": "#/components/schemas/Subtitles-Output"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "Raw"
      },
      "ReadDateRangeBreakdownMetricsResponseModel": {
        "properties": {
          "read_id": {
            "type": "string",
            "title": "Read Id"
          },
          "read_title": {
            "type": "string",
            "title": "Read Title"
          },
          "total_listeners": {
            "type": "integer",
            "title": "Total Listeners"
          },
          "list_price_usd": {
            "type": "number",
            "title": "List Price Usd"
          },
          "average_completion_rate": {
            "type": "number",
            "title": "Average Completion Rate"
          },
          "total_units_sold": {
            "type": "integer",
            "title": "Total Units Sold"
          },
          "total_revenue_usd": {
            "type": "number",
            "title": "Total Revenue Usd"
          }
        },
        "type": "object",
        "required": [
          "read_id",
          "read_title",
          "total_listeners",
          "list_price_usd",
          "average_completion_rate",
          "total_units_sold",
          "total_revenue_usd"
        ],
        "title": "ReadDateRangeBreakdownMetricsResponseModel"
      },
      "ReadDirectSalesResponseModel": {
        "properties": {
          "sales": {
            "items": {
              "$ref": "#/components/schemas/ReadPurchase"
            },
            "type": "array",
            "title": "Sales"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          }
        },
        "type": "object",
        "required": [
          "sales",
          "has_more"
        ],
        "title": "ReadDirectSalesResponseModel"
      },
      "ReadLegalTerms": {
        "properties": {
          "terms": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          }
        },
        "type": "object",
        "title": "ReadLegalTerms"
      },
      "ReadMetadataChapterDBModel": {
        "properties": {
          "chapter_name": {
            "type": "string",
            "title": "Chapter Name"
          },
          "word_count": {
            "type": "integer",
            "title": "Word Count"
          },
          "char_count": {
            "type": "integer",
            "title": "Char Count"
          },
          "starting_char_offset": {
            "type": "integer",
            "title": "Starting Char Offset"
          },
          "has_parsed_html": {
            "type": "boolean",
            "title": "Has Parsed Html",
            "default": false
          },
          "has_summary": {
            "type": "boolean",
            "title": "Has Summary",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "chapter_name",
          "word_count",
          "char_count",
          "starting_char_offset"
        ],
        "title": "ReadMetadataChapterDBModel"
      },
      "ReadMetadataResponseModel": {
        "properties": {
          "read_id": {
            "type": "string",
            "title": "Read Id"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "updated_at_unix": {
            "type": "integer",
            "title": "Updated At Unix"
          },
          "word_count": {
            "type": "integer",
            "title": "Word Count"
          },
          "char_count": {
            "type": "integer",
            "title": "Char Count"
          },
          "chapters": {
            "items": {
              "$ref": "#/components/schemas/ReadMetadataChapterDBModel"
            },
            "type": "array",
            "title": "Chapters"
          },
          "last_listened_char_offset": {
            "type": "integer",
            "title": "Last Listened Char Offset"
          },
          "added_at_unix": {
            "type": "integer",
            "title": "Added At Unix"
          },
          "source": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source"
          },
          "can_edit": {
            "type": "boolean",
            "title": "Can Edit",
            "default": false
          },
          "can_delete": {
            "type": "boolean",
            "title": "Can Delete",
            "default": true
          },
          "is_archived": {
            "type": "boolean",
            "title": "Is Archived",
            "default": false
          },
          "html_checksum": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Html Checksum"
          },
          "text_checksum": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Checksum"
          },
          "in_user_library": {
            "type": "boolean",
            "title": "In User Library",
            "default": false
          },
          "can_make_podcast": {
            "type": "boolean",
            "title": "Can Make Podcast",
            "default": true
          },
          "podcast_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Podcast Id"
          },
          "creation_status": {
            "type": "string",
            "enum": [
              "pending",
              "creating",
              "finished",
              "failed"
            ],
            "title": "Creation Status",
            "default": "finished"
          },
          "creation_progress": {
            "type": "number",
            "title": "Creation Progress",
            "default": 1
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "source_field": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Field"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "default": ""
          },
          "subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitle"
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "article_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Article Image Url"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "display_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Mode"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "genre": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Genre"
          },
          "fiction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiction"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type"
          },
          "original_file_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original File Type"
          },
          "target_audience": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Audience"
          },
          "mature_content": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mature Content"
          },
          "origin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Origin"
          },
          "partner": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner"
          },
          "publication_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publication Date"
          },
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id"
          },
          "voice_selection_config": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Selection Config"
          },
          "isbn": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isbn"
          },
          "legal_terms": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReadLegalTerms"
              },
              {
                "type": "null"
              }
            ]
          },
          "purchase_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReadPurchaseConfigResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "preview_audio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Audio"
          },
          "has_original_audio": {
            "type": "boolean",
            "title": "Has Original Audio",
            "default": false
          },
          "from_user_import": {
            "type": "boolean",
            "title": "From User Import",
            "default": false
          },
          "feed_item_guid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feed Item Guid"
          },
          "rating_map": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReadRatingMap"
              },
              {
                "type": "null"
              }
            ]
          },
          "rating": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rating"
          },
          "podcast_user_ratings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PodcastUserRatings"
              },
              {
                "type": "null"
              }
            ]
          },
          "last_used_voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used Voice Id"
          },
          "original_audio_document": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OriginalAudioDocumentResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "publishing_project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publishing Project Id"
          },
          "publishing_state": {
            "type": "string",
            "title": "Publishing State",
            "default": "published"
          },
          "publisher_profile_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publisher Profile Id"
          },
          "quality_score": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality Score"
          },
          "marked_as_unread": {
            "type": "boolean",
            "title": "Marked As Unread",
            "default": false
          },
          "completed_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At Unix"
          },
          "read_slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Slug"
          },
          "is_payable": {
            "type": "boolean",
            "title": "Is Payable",
            "default": false
          },
          "sample_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SampleConfigResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "mini_read_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MiniReadConfigResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "read_id",
          "created_at_unix",
          "updated_at_unix",
          "word_count",
          "char_count",
          "chapters",
          "last_listened_char_offset",
          "added_at_unix"
        ],
        "title": "ReadMetadataResponseModel"
      },
      "ReadPurchase": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "read_id": {
            "type": "string",
            "title": "Read Id"
          },
          "gross_revenue_usd": {
            "type": "number",
            "title": "Gross Revenue Usd"
          },
          "sales_tax_usd": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sales Tax Usd"
          },
          "platform_fee_usd": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Platform Fee Usd"
          },
          "net_revenue_usd": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Net Revenue Usd"
          },
          "purchased_at_unix": {
            "type": "integer",
            "title": "Purchased At Unix"
          },
          "source": {
            "$ref": "#/components/schemas/BookPurchaseSource"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "read_id",
          "gross_revenue_usd",
          "purchased_at_unix",
          "source"
        ],
        "title": "ReadPurchase"
      },
      "ReadPurchaseConfigResponseModel": {
        "properties": {
          "ios_product_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ios Product Id"
          },
          "android_product_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Android Product Id"
          },
          "stripe_product_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stripe Product Id"
          },
          "can_redeem_code": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Redeem Code"
          }
        },
        "type": "object",
        "title": "ReadPurchaseConfigResponseModel"
      },
      "ReadRatingMap": {
        "properties": {
          "average_rating": {
            "type": "number",
            "title": "Average Rating"
          },
          "total_rating_count": {
            "type": "integer",
            "title": "Total Rating Count"
          },
          "rating_count_map": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Rating Count Map"
          }
        },
        "type": "object",
        "required": [
          "average_rating",
          "total_rating_count",
          "rating_count_map"
        ],
        "title": "ReadRatingMap"
      },
      "ReadRatingMetrics": {
        "properties": {
          "average_rating": {
            "type": "number",
            "title": "Average Rating"
          },
          "ratings_counts": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Ratings Counts"
          },
          "total_ratings_count": {
            "type": "integer",
            "title": "Total Ratings Count"
          }
        },
        "type": "object",
        "required": [
          "average_rating",
          "ratings_counts",
          "total_ratings_count"
        ],
        "title": "ReadRatingMetrics"
      },
      "ReadTimeSeriesMetricsResponseModel": {
        "properties": {
          "units_sold": {
            "type": "integer",
            "title": "Units Sold"
          },
          "listeners": {
            "type": "integer",
            "title": "Listeners"
          },
          "engagement_revenue_usd": {
            "type": "number",
            "title": "Engagement Revenue Usd"
          },
          "sales_revenue_usd": {
            "type": "number",
            "title": "Sales Revenue Usd"
          },
          "average_completion_rate": {
            "type": "number",
            "title": "Average Completion Rate"
          }
        },
        "type": "object",
        "required": [
          "units_sold",
          "listeners",
          "engagement_revenue_usd",
          "sales_revenue_usd",
          "average_completion_rate"
        ],
        "title": "ReadTimeSeriesMetricsResponseModel"
      },
      "ReaderPublisherProfileDBModel": {
        "properties": {
          "owner_path_info": {
            "$ref": "#/components/schemas/UserPathInfo"
          },
          "profile_id": {
            "type": "string",
            "title": "Profile Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "updated_at_unix": {
            "type": "integer",
            "title": "Updated At Unix"
          },
          "followers_count": {
            "type": "integer",
            "title": "Followers Count",
            "default": 0
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth"
          },
          "origin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Origin"
          },
          "website_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Link"
          },
          "social_links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SocialLink"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Social Links"
          },
          "pen_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pen Name"
          },
          "bio_moderation_status": {
            "$ref": "#/components/schemas/ModerationStatus",
            "default": "approved"
          },
          "bio_moderation_reasons": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio Moderation Reasons"
          },
          "is_banned": {
            "type": "boolean",
            "title": "Is Banned",
            "default": false
          },
          "language": {
            "type": "string",
            "enum": [
              "en",
              "zh",
              "es",
              "hi",
              "pt",
              "fr",
              "de",
              "ja",
              "ar",
              "ru",
              "ko",
              "id",
              "it",
              "nl",
              "tr",
              "pl",
              "sv",
              "fil",
              "ms",
              "ro",
              "uk",
              "el",
              "cs",
              "da",
              "fi",
              "bg",
              "hr",
              "sk",
              "ta",
              "hu",
              "no",
              "vi"
            ],
            "title": "Language",
            "default": "en"
          }
        },
        "type": "object",
        "required": [
          "owner_path_info",
          "profile_id",
          "name",
          "created_at_unix",
          "updated_at_unix"
        ],
        "title": "ReaderPublisherProfileDBModel"
      },
      "ReaderPublisherProfileResponseModel": {
        "properties": {
          "profile_id": {
            "type": "string",
            "title": "Profile Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "updated_at_unix": {
            "type": "integer",
            "title": "Updated At Unix"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth"
          },
          "origin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Origin"
          },
          "website_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Website Link"
          },
          "social_links": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Social Links"
          },
          "pen_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pen Name"
          },
          "profile_slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Slug"
          },
          "bio_moderation_status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ModerationStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "en",
                  "zh",
                  "es",
                  "hi",
                  "pt",
                  "fr",
                  "de",
                  "ja",
                  "ar",
                  "ru",
                  "ko",
                  "id",
                  "it",
                  "nl",
                  "tr",
                  "pl",
                  "sv",
                  "fil",
                  "ms",
                  "ro",
                  "uk",
                  "el",
                  "cs",
                  "da",
                  "fi",
                  "bg",
                  "hr",
                  "sk",
                  "ta",
                  "hu",
                  "no",
                  "vi"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          }
        },
        "type": "object",
        "required": [
          "profile_id",
          "name",
          "created_at_unix",
          "updated_at_unix"
        ],
        "title": "ReaderPublisherProfileResponseModel"
      },
      "ReaderResourceDBModel": {
        "properties": {
          "resource_type": {
            "type": "string",
            "enum": [
              "read",
              "collection"
            ],
            "title": "Resource Type"
          },
          "resource_id": {
            "type": "string",
            "title": "Resource Id"
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "resource_id"
        ],
        "title": "ReaderResourceDBModel"
      },
      "ReaderResourceRequestModel": {
        "properties": {
          "resource_type": {
            "type": "string",
            "enum": [
              "read",
              "collection"
            ],
            "title": "Resource Type"
          },
          "resource_id": {
            "type": "string",
            "title": "Resource Id"
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "resource_id"
        ],
        "title": "ReaderResourceRequestModel"
      },
      "ReaderResourceResponseModel": {
        "properties": {
          "resource_type": {
            "type": "string",
            "enum": [
              "read",
              "collection"
            ],
            "title": "Resource Type",
            "description": "The type of resource."
          },
          "resource_id": {
            "type": "string",
            "title": "Resource Id",
            "description": "The ID of the resource."
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "resource_id"
        ],
        "title": "ReaderResourceResponseModel",
        "example": {
          "resource_id": "FCwhRBWXzGAHq8TQ4Fs18",
          "resource_type": "read"
        }
      },
      "ReadsDateRangeBreakdownMetricsResponseModel": {
        "properties": {
          "breakdown_metrics": {
            "items": {
              "$ref": "#/components/schemas/ReadDateRangeBreakdownMetricsResponseModel"
            },
            "type": "array",
            "title": "Breakdown Metrics"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "default": false
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "breakdown_metrics"
        ],
        "title": "ReadsDateRangeBreakdownMetricsResponseModel"
      },
      "ReadsDateRangeMetricsResponseModel": {
        "properties": {
          "time_series_metrics": {
            "items": {
              "$ref": "#/components/schemas/ReadTimeSeriesMetricsResponseModel"
            },
            "type": "array",
            "title": "Time Series Metrics"
          },
          "top_voices": {
            "items": {
              "$ref": "#/components/schemas/TopVoiceMetricResponseModel"
            },
            "type": "array",
            "title": "Top Voices"
          },
          "top_countries": {
            "items": {
              "$ref": "#/components/schemas/TopCountryMetricResponseModel"
            },
            "type": "array",
            "title": "Top Countries"
          },
          "total_listening_duration_hours": {
            "type": "number",
            "title": "Total Listening Duration Hours"
          },
          "total_listening_duration_hours_trend_percentage": {
            "type": "integer",
            "title": "Total Listening Duration Hours Trend Percentage"
          },
          "total_revenue_usd": {
            "type": "number",
            "title": "Total Revenue Usd"
          },
          "total_revenue_usd_trend_percentage": {
            "type": "integer",
            "title": "Total Revenue Usd Trend Percentage"
          },
          "ratings": {
            "$ref": "#/components/schemas/ReadRatingMetrics"
          },
          "dates": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Dates"
          },
          "retention": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Retention"
          }
        },
        "type": "object",
        "required": [
          "time_series_metrics",
          "top_voices",
          "top_countries",
          "total_listening_duration_hours",
          "total_listening_duration_hours_trend_percentage",
          "total_revenue_usd",
          "total_revenue_usd_trend_percentage",
          "ratings",
          "dates"
        ],
        "title": "ReadsDateRangeMetricsResponseModel"
      },
      "ReadsLifetimeMetricsResponseModel": {
        "properties": {
          "total_revenue_usd": {
            "type": "number",
            "title": "Total Revenue Usd"
          },
          "total_units_sold": {
            "type": "integer",
            "title": "Total Units Sold"
          },
          "total_listeners": {
            "type": "integer",
            "title": "Total Listeners"
          },
          "revenue_daily_cumulative": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Revenue Daily Cumulative"
          },
          "units_sold_daily_cumulative": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Units Sold Daily Cumulative"
          },
          "listeners_daily_cumulative": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Listeners Daily Cumulative"
          }
        },
        "type": "object",
        "required": [
          "total_revenue_usd",
          "total_units_sold",
          "total_listeners",
          "revenue_daily_cumulative",
          "units_sold_daily_cumulative",
          "listeners_daily_cumulative"
        ],
        "title": "ReadsLifetimeMetricsResponseModel"
      },
      "RecordingDBModel": {
        "properties": {
          "recording_id": {
            "type": "string",
            "title": "Recording Id"
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes"
          },
          "upload_date_unix": {
            "type": "integer",
            "title": "Upload Date Unix"
          },
          "transcription": {
            "type": "string",
            "title": "Transcription"
          }
        },
        "type": "object",
        "required": [
          "recording_id",
          "mime_type",
          "size_bytes",
          "upload_date_unix",
          "transcription"
        ],
        "title": "RecordingDBModel"
      },
      "RecordingResponseModel": {
        "properties": {
          "recording_id": {
            "type": "string",
            "title": "Recording Id",
            "description": "The ID of the recording."
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type",
            "description": "The MIME type of the recording."
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes",
            "description": "The size of the recording in bytes."
          },
          "upload_date_unix": {
            "type": "integer",
            "title": "Upload Date Unix",
            "description": "The date of the recording in Unix time."
          },
          "transcription": {
            "type": "string",
            "title": "Transcription",
            "description": "The transcription of the recording."
          }
        },
        "type": "object",
        "required": [
          "recording_id",
          "mime_type",
          "size_bytes",
          "upload_date_unix",
          "transcription"
        ],
        "title": "RecordingResponseModel",
        "example": {
          "mime_type": "audio/mpeg",
          "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
          "size_bytes": 1000000,
          "transcription": "Hello, how are you?",
          "upload_date_unix": 1714204800
        }
      },
      "RegisterContractRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "first_name": {
            "type": "string",
            "title": "First Name"
          },
          "last_name": {
            "type": "string",
            "title": "Last Name"
          },
          "start_date": {
            "type": "string",
            "format": "date-time",
            "title": "Start Date"
          },
          "qualifications": {
            "items": {
              "$ref": "#/components/schemas/ProducerQualification-Input"
            },
            "type": "array",
            "title": "Qualifications"
          },
          "team_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Team Ids"
          },
          "context": {
            "type": "string",
            "title": "Context"
          }
        },
        "type": "object",
        "required": [
          "email",
          "first_name",
          "last_name",
          "start_date",
          "qualifications",
          "team_ids",
          "context"
        ],
        "title": "RegisterContractRequest"
      },
      "RemoteLookupResultFailed": {
        "properties": {
          "entity_enviroment_id": {
            "type": "string",
            "title": "Entity Enviroment Id"
          }
        },
        "type": "object",
        "required": [
          "entity_enviroment_id"
        ],
        "title": "RemoteLookupResultFailed"
      },
      "RemovePatch": {
        "properties": {
          "path": {
            "type": "string",
            "title": "Path"
          },
          "op": {
            "type": "string",
            "const": "remove",
            "title": "Op"
          }
        },
        "type": "object",
        "required": [
          "path",
          "op"
        ],
        "title": "RemovePatch"
      },
      "RemoveVoiceFromUserVoiceCollectionResponseModel": {
        "properties": {
          "collection_id": {
            "type": "string",
            "title": "Collection Id"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          }
        },
        "type": "object",
        "required": [
          "collection_id",
          "voice_id"
        ],
        "title": "RemoveVoiceFromUserVoiceCollectionResponseModel"
      },
      "RenameProjectRequestBody": {
        "properties": {
          "new_name": {
            "type": "string",
            "title": "New Name"
          }
        },
        "type": "object",
        "required": [
          "new_name"
        ],
        "title": "RenameProjectRequestBody"
      },
      "Render": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RenderType"
              },
              {
                "type": "null"
              }
            ]
          },
          "media_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DubbingMediaReference"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "complete",
              "processing",
              "failed"
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "id",
          "version",
          "language",
          "type",
          "media_ref",
          "status"
        ],
        "title": "Render"
      },
      "RenderType": {
        "type": "string",
        "enum": [
          "mp4",
          "aac",
          "mp3",
          "wav",
          "aaf",
          "tracks_zip",
          "clips_zip"
        ],
        "title": "RenderType"
      },
      "ReplacePatch": {
        "properties": {
          "path": {
            "type": "string",
            "title": "Path"
          },
          "op": {
            "type": "string",
            "const": "replace",
            "title": "Op"
          },
          "value": {
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "path",
          "op",
          "value"
        ],
        "title": "ReplacePatch"
      },
      "RequestPVCManualVerificationResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the request PVC manual verification request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "RequestPVCManualVerificationResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "ResegmentRequest": {
        "properties": {
          "options": {
            "$ref": "#/components/schemas/TranscriptSegmentingOptions"
          },
          "transcript": {
            "$ref": "#/components/schemas/Transcript"
          }
        },
        "type": "object",
        "required": [
          "options",
          "transcript"
        ],
        "title": "ResegmentRequest"
      },
      "ResourceAccessInfo": {
        "properties": {
          "is_creator": {
            "type": "boolean",
            "title": "Is Creator",
            "description": "Whether the user making the request is the creator of the agent"
          },
          "creator_name": {
            "type": "string",
            "title": "Creator Name",
            "description": "Name of the agent's creator"
          },
          "creator_email": {
            "type": "string",
            "title": "Creator Email",
            "description": "Email of the agent's creator"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Role",
            "description": "The role of the user making the request"
          }
        },
        "type": "object",
        "required": [
          "is_creator",
          "creator_name",
          "creator_email",
          "role"
        ],
        "title": "ResourceAccessInfo",
        "example": {
          "creator_email": "john.doe@example.com",
          "creator_name": "John Doe",
          "is_creator": true,
          "role": "admin"
        }
      },
      "ResourceLink": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "uri": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Uri"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "mimeType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mimetype"
          },
          "size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "annotations": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Annotations"
              },
              {
                "type": "null"
              }
            ]
          },
          "_meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          },
          "type": {
            "type": "string",
            "const": "resource_link",
            "title": "Type"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "name",
          "uri",
          "type"
        ],
        "title": "ResourceLink",
        "description": "A resource that the server is capable of reading, included in a prompt or tool call result.\n\nNote: resource links returned by tools are not guaranteed to appear in the results of `resources/list` requests."
      },
      "ResourceMetadataDBModel-Input": {
        "properties": {
          "resource_id": {
            "type": "string",
            "title": "Resource Id",
            "default": ""
          },
          "resource_type": {
            "$ref": "#/components/schemas/WorkspaceResourceType"
          },
          "created_at": {
            "type": "integer",
            "title": "Created At"
          },
          "role_to_group_ids": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            },
            "propertyNames": {
              "enum": [
                "admin",
                "editor",
                "viewer"
              ]
            },
            "type": "object",
            "title": "Role To Group Ids"
          },
          "owner_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner User Id"
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "created_at",
          "role_to_group_ids",
          "owner_user_id"
        ],
        "title": "ResourceMetadataDBModel"
      },
      "ResourceMetadataDBModel-Output": {
        "properties": {
          "resource_type": {
            "$ref": "#/components/schemas/WorkspaceResourceType"
          },
          "created_at": {
            "type": "integer",
            "title": "Created At"
          },
          "role_to_group_ids": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "uniqueItems": true
            },
            "propertyNames": {
              "enum": [
                "admin",
                "editor",
                "viewer"
              ]
            },
            "type": "object",
            "title": "Role To Group Ids"
          },
          "owner_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner User Id"
          }
        },
        "type": "object",
        "required": [
          "resource_type",
          "created_at",
          "role_to_group_ids",
          "owner_user_id"
        ],
        "title": "ResourceMetadataDBModel"
      },
      "ResourceMetadataResponseModel": {
        "properties": {
          "resource_id": {
            "type": "string",
            "title": "Resource Id",
            "description": "The ID of the resource."
          },
          "resource_type": {
            "$ref": "#/components/schemas/WorkspaceResourceType",
            "description": "The type of the resource."
          },
          "creator_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creator User Id",
            "description": "The ID of the user who created the resource."
          },
          "role_to_group_ids": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "propertyNames": {
              "enum": [
                "admin",
                "editor",
                "viewer"
              ]
            },
            "type": "object",
            "title": "Role To Group Ids",
            "description": "A mapping of roles to group IDs. When the resource is shared with a user, the group id is the user's id."
          },
          "share_options": {
            "items": {
              "$ref": "#/components/schemas/ShareOptionResponseModel"
            },
            "type": "array",
            "title": "Share Options",
            "description": "List of options for sharing the resource further in the workspace. These are users who don't have access to the resource yet."
          }
        },
        "type": "object",
        "required": [
          "resource_id",
          "resource_type",
          "creator_user_id",
          "role_to_group_ids",
          "share_options"
        ],
        "title": "ResourceMetadataResponseModel",
        "example": {
          "creator_user_id": "5zavrE1kZXv2lFw9BKgEkf0B5Wqo",
          "resource_id": "4ZUqyldxf71HqUbcP2Lc",
          "resource_type": "voice",
          "role_to_group_ids": {
            "admin": [
              "5zavrE1kZXv2lFw9BKgEkf0B5Wqo"
            ],
            "editor": [
              "8ruQDGM2R4w1mFbHI5aROCUjIpJZ"
            ],
            "viewer": []
          },
          "share_options": [
            {
              "id": "i2YYI6huwBmcgYydAXARmQJc3pmX",
              "name": "user@example.com",
              "type": "user"
            },
            {
              "id": "x1AfvYKAmiqxCnbvZeNXHqqthJaC",
              "name": "mygroup",
              "type": "group"
            }
          ]
        }
      },
      "RestoreBlockSnapshotResponseModel": {
        "properties": {
          "block": {
            "$ref": "#/components/schemas/BlockResponseModel"
          }
        },
        "type": "object",
        "required": [
          "block"
        ],
        "title": "RestoreBlockSnapshotResponseModel"
      },
      "ResubmitTestsRequestModel": {
        "properties": {
          "test_run_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Test Run Ids",
            "description": "List of test run IDs to resubmit"
          },
          "agent_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentConfigAPIModel-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Agent configuration override to use for testing. If not provided, the agent's default configuration will be used."
          },
          "agent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id",
            "description": "Agent ID to resubmit tests for"
          }
        },
        "type": "object",
        "required": [
          "test_run_ids"
        ],
        "title": "ResubmitTestsRequestModel"
      },
      "RetranscribeSegmentRequest": {
        "properties": {
          "start": {
            "type": "number",
            "title": "Start"
          },
          "end": {
            "type": "number",
            "title": "End"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "title": "RetranscribeSegmentRequest"
      },
      "ReviewExtras": {
        "properties": {
          "reviewed_user_infos": {
            "$ref": "#/components/schemas/ReviewedUserInfos"
          },
          "edit_time_s": {
            "type": "number",
            "title": "Edit Time S"
          },
          "count_edits": {
            "type": "integer",
            "title": "Count Edits"
          }
        },
        "type": "object",
        "required": [
          "reviewed_user_infos",
          "edit_time_s",
          "count_edits"
        ],
        "title": "ReviewExtras"
      },
      "ReviewResponseModel": {
        "properties": {
          "review_status": {
            "type": "string",
            "enum": [
              "approved",
              "rejected"
            ],
            "title": "Review Status"
          },
          "reviewed_at_unix": {
            "type": "integer",
            "title": "Reviewed At Unix"
          },
          "reviewed_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewed By"
          },
          "reject_reasons": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "lacks_structure",
                    "doesnt_open",
                    "not_literary_work",
                    "language_not_supported",
                    "too_short",
                    "duplicate",
                    "promotional",
                    "formatting_issues",
                    "low_quality",
                    "metadata_incomplete",
                    "metadata_inaccurate",
                    "typos",
                    "review_error",
                    "spam",
                    "legal_violation",
                    "content_policy",
                    "public_domain",
                    "other"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reject Reasons"
          },
          "scores_breakdown": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scores Breakdown"
          },
          "rejected_details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rejected Details"
          }
        },
        "type": "object",
        "required": [
          "review_status",
          "reviewed_at_unix"
        ],
        "title": "ReviewResponseModel"
      },
      "ReviewStatus": {
        "type": "string",
        "enum": [
          "approve",
          "reject"
        ],
        "title": "ReviewStatus"
      },
      "ReviewTaskContent": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "review",
            "title": "Kind",
            "default": "review"
          },
          "review": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReviewTaskContentUpdate"
              },
              {
                "type": "null"
              }
            ]
          },
          "assets": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/TranscriptionTaskContent"
                  },
                  {
                    "$ref": "#/components/schemas/TranscriptionV2TaskContent"
                  },
                  {
                    "$ref": "#/components/schemas/CaptionsTaskContent"
                  },
                  {
                    "$ref": "#/components/schemas/SubtitlesTaskContent"
                  },
                  {
                    "$ref": "#/components/schemas/DubsTaskContent"
                  }
                ],
                "discriminator": {
                  "propertyName": "kind",
                  "mapping": {
                    "captions": "#/components/schemas/CaptionsTaskContent",
                    "dub": "#/components/schemas/DubsTaskContent",
                    "subtitles": "#/components/schemas/SubtitlesTaskContent",
                    "transcription": "#/components/schemas/TranscriptionTaskContent",
                    "transcription_v2": "#/components/schemas/TranscriptionV2TaskContent"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Assets"
          },
          "labeling_meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReviewTaskLabelingMeta"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "assets",
          "labeling_meta"
        ],
        "title": "ReviewTaskContent"
      },
      "ReviewTaskContentUpdate": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ReviewStatus"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          }
        },
        "type": "object",
        "required": [
          "status",
          "comments"
        ],
        "title": "ReviewTaskContentUpdate"
      },
      "ReviewTaskLabelingMeta": {
        "properties": {
          "questionnaire_id": {
            "type": "string",
            "format": "uuid",
            "title": "Questionnaire Id"
          },
          "answers": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/BooleanLabelingAnswerDbModel"
                },
                {
                  "$ref": "#/components/schemas/TextLabelingAnswerDbModel"
                },
                {
                  "$ref": "#/components/schemas/SingleSelectLabelingAnswerDbModel"
                },
                {
                  "$ref": "#/components/schemas/MultiSelectLabelingAnswerDbModel"
                }
              ]
            },
            "type": "array",
            "title": "Answers"
          }
        },
        "type": "object",
        "required": [
          "questionnaire_id",
          "answers"
        ],
        "title": "ReviewTaskLabelingMeta"
      },
      "ReviewedUserInfos": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "email"
        ],
        "title": "ReviewedUserInfos"
      },
      "RewardFromRemoteCrossEnvRequest": {
        "properties": {
          "uid_wid": {
            "type": "string",
            "title": "Uid Wid"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "usd_to_report": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usd To Report"
          },
          "character_usage_to_report": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Usage To Report"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "voice_category": {
            "type": "string",
            "title": "Voice Category"
          },
          "public_owner_id": {
            "type": "string",
            "title": "Public Owner Id"
          }
        },
        "type": "object",
        "required": [
          "uid_wid",
          "user_id",
          "workspace_id",
          "voice_id",
          "voice_category",
          "public_owner_id"
        ],
        "title": "RewardFromRemoteCrossEnvRequest"
      },
      "RewardFromRemoteResult": {
        "properties": {
          "uid_wid": {
            "type": "string",
            "title": "Uid Wid"
          },
          "usd_to_report": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usd To Report"
          },
          "character_usage_to_report": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Usage To Report"
          },
          "reward_success": {
            "type": "boolean",
            "title": "Reward Success"
          },
          "influx_db_succeeded": {
            "type": "boolean",
            "title": "Influx Db Succeeded"
          }
        },
        "type": "object",
        "required": [
          "uid_wid",
          "reward_success",
          "influx_db_succeeded"
        ],
        "title": "RewardFromRemoteResult"
      },
      "RewardFromRemoteResultsCrossEnvResponse": {
        "properties": {
          "results": {
            "items": {
              "$ref": "#/components/schemas/RewardFromRemoteResult"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "results"
        ],
        "title": "RewardFromRemoteResultsCrossEnvResponse"
      },
      "RewardsFromRemoteCrossEnvRequest": {
        "properties": {
          "rewards": {
            "items": {
              "$ref": "#/components/schemas/RewardFromRemoteCrossEnvRequest"
            },
            "type": "array",
            "title": "Rewards"
          }
        },
        "type": "object",
        "required": [
          "rewards"
        ],
        "title": "RewardsFromRemoteCrossEnvRequest"
      },
      "RootModel_Annotated_Union_ReplacePatch__RemovePatch__AddPatch___FieldInfo_annotation_NoneType__required_True__discriminator__op____": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ReplacePatch"
          },
          {
            "$ref": "#/components/schemas/RemovePatch"
          },
          {
            "$ref": "#/components/schemas/AddPatch"
          }
        ],
        "title": "RootModel[Annotated[Union[ReplacePatch, RemovePatch, AddPatch], FieldInfo(annotation=NoneType, required=True, discriminator='op')]]",
        "discriminator": {
          "propertyName": "op",
          "mapping": {
            "add": "#/components/schemas/AddPatch",
            "remove": "#/components/schemas/RemovePatch",
            "replace": "#/components/schemas/ReplacePatch"
          }
        }
      },
      "RunAgentTestsRequestModel": {
        "properties": {
          "test_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Test Ids",
            "description": "List of test IDs to run on the agent"
          },
          "agent_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AgentConfigAPIModel-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Agent configuration override to use for testing. If not provided, the agent's default configuration will be used."
          }
        },
        "type": "object",
        "required": [
          "test_ids"
        ],
        "title": "RunAgentTestsRequestModel"
      },
      "SIPMediaEncryptionEnum": {
        "type": "string",
        "enum": [
          "disabled",
          "allowed",
          "required"
        ],
        "title": "SIPMediaEncryptionEnum"
      },
      "SIPTrunkCredentialsRequestModel": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "SIP trunk username"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "SIP trunk password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "SIPTrunkCredentialsRequestModel"
      },
      "SIPTrunkOutboundCallResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "conversation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Id"
          },
          "sip_call_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sip Call Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "conversation_id",
          "sip_call_id"
        ],
        "title": "SIPTrunkOutboundCallResponse"
      },
      "SIPTrunkTransportEnum": {
        "type": "string",
        "enum": [
          "auto",
          "udp",
          "tcp",
          "tls"
        ],
        "title": "SIPTrunkTransportEnum"
      },
      "SIPUriTransferDestination": {
        "properties": {
          "type": {
            "type": "string",
            "const": "sip_uri",
            "title": "Type",
            "default": "sip_uri"
          },
          "sip_uri": {
            "type": "string",
            "title": "Sip Uri"
          }
        },
        "type": "object",
        "required": [
          "sip_uri"
        ],
        "title": "SIPUriTransferDestination"
      },
      "SSOConfigResponse": {
        "properties": {
          "sso_provider_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SamlConfigResponseModel"
              },
              {
                "$ref": "#/components/schemas/OidcConfigResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sso Provider Config"
          },
          "sso_provider": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SsoProviderResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "authorization_callback_url": {
            "type": "string",
            "title": "Authorization Callback Url"
          }
        },
        "type": "object",
        "required": [
          "sso_provider_config",
          "sso_provider",
          "authorization_callback_url"
        ],
        "title": "SSOConfigResponse"
      },
      "STTCostResponse": {
        "properties": {
          "credits": {
            "type": "integer",
            "title": "Credits"
          }
        },
        "type": "object",
        "required": [
          "credits"
        ],
        "title": "STTCostResponse"
      },
      "SafetyCommonModel": {
        "properties": {
          "ivc": {
            "$ref": "#/components/schemas/SafetyEvaluation"
          },
          "non_ivc": {
            "$ref": "#/components/schemas/SafetyEvaluation"
          }
        },
        "type": "object",
        "title": "SafetyCommonModel",
        "description": "Safety object that has the information of safety evaluations based on used voice."
      },
      "SafetyEvaluation": {
        "properties": {
          "is_unsafe": {
            "type": "boolean",
            "title": "Is Unsafe",
            "default": false
          },
          "llm_reason": {
            "type": "string",
            "title": "Llm Reason",
            "default": ""
          },
          "safety_prompt_version": {
            "type": "integer",
            "title": "Safety Prompt Version",
            "default": 0
          },
          "matched_rule_id": {
            "items": {
              "$ref": "#/components/schemas/SafetyRule"
            },
            "type": "array",
            "title": "Matched Rule Id"
          }
        },
        "type": "object",
        "title": "SafetyEvaluation",
        "description": "Safety evaluation of the agent. Prompt and first message is taken into account.\nThe unsafe reason is provided from the evaluation"
      },
      "SafetyResponseModel": {
        "properties": {
          "is_blocked_ivc": {
            "type": "boolean",
            "title": "Is Blocked Ivc",
            "default": false
          },
          "is_blocked_non_ivc": {
            "type": "boolean",
            "title": "Is Blocked Non Ivc",
            "default": false
          },
          "ignore_safety_evaluation": {
            "type": "boolean",
            "title": "Ignore Safety Evaluation",
            "default": false
          }
        },
        "type": "object",
        "title": "SafetyResponseModel"
      },
      "SafetyRule": {
        "type": "string",
        "enum": [
          "sexual_minors",
          "forget_moderation",
          "extremism",
          "scam_fraud",
          "political",
          "self_harm",
          "illegal_distribution_medical",
          "sexual_adults",
          "unknown"
        ],
        "title": "SafetyRule"
      },
      "SamlConfigResponseModel": {
        "properties": {
          "identity_provider_entity_id": {
            "type": "string",
            "title": "Identity Provider Entity Id"
          },
          "sso_url": {
            "type": "string",
            "title": "Sso Url"
          },
          "x509_certificates": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "X509 Certificates"
          }
        },
        "type": "object",
        "required": [
          "identity_provider_entity_id",
          "sso_url",
          "x509_certificates"
        ],
        "title": "SamlConfigResponseModel"
      },
      "SampleConfigDBModel": {
        "properties": {
          "is_sample": {
            "type": "boolean",
            "title": "Is Sample",
            "default": false
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "parent_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "read",
                  "collection"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Type"
          },
          "chapter_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chapter Ids"
          }
        },
        "type": "object",
        "title": "SampleConfigDBModel"
      },
      "SampleConfigResponseModel": {
        "properties": {
          "is_sample": {
            "type": "boolean",
            "title": "Is Sample",
            "default": false
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "parent_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Type"
          },
          "chapter_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chapter Ids"
          }
        },
        "type": "object",
        "title": "SampleConfigResponseModel"
      },
      "SampleDBModel-Input": {
        "properties": {
          "sample_id": {
            "type": "string",
            "title": "Sample Id"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes"
          },
          "hash": {
            "type": "string",
            "title": "Hash"
          },
          "processed_sample_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Sample Id"
          },
          "processed_mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Mime Type"
          },
          "processed_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Size Bytes"
          },
          "processed_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Hash"
          },
          "preview_duration_secs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Duration Secs"
          },
          "duration_secs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Secs"
          },
          "remove_background_noise": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Background Noise"
          },
          "has_isolated_audio": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Isolated Audio"
          },
          "has_isolated_audio_preview": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Isolated Audio Preview"
          },
          "speaker_separation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SpeakerSeparationDBModel-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "trim_start": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim Start"
          },
          "trim_end": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim End"
          },
          "v3_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "V3 Only"
          }
        },
        "type": "object",
        "required": [
          "sample_id",
          "file_name",
          "mime_type",
          "size_bytes",
          "hash"
        ],
        "title": "SampleDBModel"
      },
      "SampleDBModel-Output": {
        "properties": {
          "sample_id": {
            "type": "string",
            "title": "Sample Id"
          },
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes"
          },
          "hash": {
            "type": "string",
            "title": "Hash"
          },
          "processed_sample_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Sample Id"
          },
          "processed_mime_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Mime Type"
          },
          "processed_size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Size Bytes"
          },
          "processed_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Hash"
          },
          "preview_duration_secs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Duration Secs"
          },
          "duration_secs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Secs"
          },
          "remove_background_noise": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Background Noise"
          },
          "has_isolated_audio": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Isolated Audio"
          },
          "has_isolated_audio_preview": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Isolated Audio Preview"
          },
          "speaker_separation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SpeakerSeparationDBModel-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "trim_start": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim Start"
          },
          "trim_end": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim End"
          },
          "v3_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "V3 Only"
          }
        },
        "type": "object",
        "required": [
          "sample_id",
          "file_name",
          "mime_type",
          "size_bytes",
          "hash"
        ],
        "title": "SampleDBModel"
      },
      "SampleResponseModel": {
        "properties": {
          "sample_id": {
            "type": "string",
            "title": "Sample Id",
            "description": "The ID of the sample."
          },
          "file_name": {
            "type": "string",
            "title": "File Name",
            "description": "The name of the sample file."
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type",
            "description": "The MIME type of the sample file."
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes",
            "description": "The size of the sample file in bytes."
          },
          "hash": {
            "type": "string",
            "title": "Hash",
            "description": "The hash of the sample file."
          },
          "duration_secs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Secs"
          },
          "remove_background_noise": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remove Background Noise"
          },
          "has_isolated_audio": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Isolated Audio"
          },
          "has_isolated_audio_preview": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Isolated Audio Preview"
          },
          "speaker_separation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SpeakerSeparationResponseModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "trim_start": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim Start"
          },
          "trim_end": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trim End"
          }
        },
        "type": "object",
        "required": [
          "sample_id",
          "file_name",
          "mime_type",
          "size_bytes",
          "hash"
        ],
        "title": "SampleResponseModel",
        "example": {
          "file_name": "sample.mp3",
          "hash": "1234567890",
          "mime_type": "audio/mpeg",
          "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "size_bytes": 1000000
        }
      },
      "SampleSignedUrlResponseModel": {
        "properties": {
          "signed_url": {
            "type": "string",
            "title": "Signed Url",
            "description": "The signed url for the sample"
          }
        },
        "type": "object",
        "required": [
          "signed_url"
        ],
        "title": "SampleSignedUrlResponseModel"
      },
      "SampleVoiceTextResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "SampleVoiceTextResponseModel"
      },
      "SeatsStatusResponseModel": {
        "properties": {
          "has_reached_max_invites": {
            "type": "boolean",
            "title": "Has Reached Max Invites"
          },
          "has_reached_max_seats": {
            "type": "boolean",
            "title": "Has Reached Max Seats"
          }
        },
        "type": "object",
        "required": [
          "has_reached_max_invites",
          "has_reached_max_seats"
        ],
        "title": "SeatsStatusResponseModel"
      },
      "SecretDependencyType": {
        "type": "string",
        "enum": [
          "conversation_initiation_webhook"
        ],
        "title": "SecretDependencyType"
      },
      "SegmentCreatePayload": {
        "properties": {
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "translations": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Translations"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time"
        ],
        "title": "SegmentCreatePayload"
      },
      "SegmentCreateResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "new_segment": {
            "type": "string",
            "title": "New Segment"
          }
        },
        "type": "object",
        "required": [
          "version",
          "new_segment"
        ],
        "title": "SegmentCreateResponse"
      },
      "SegmentDeleteResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "SegmentDeleteResponse"
      },
      "SegmentDubResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "SegmentDubResponse"
      },
      "SegmentSubtitleFrame": {
        "properties": {
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "lines": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Lines"
          }
        },
        "type": "object",
        "required": [
          "start_time",
          "end_time",
          "lines"
        ],
        "title": "SegmentSubtitleFrame"
      },
      "SegmentTranscriptionResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "SegmentTranscriptionResponse"
      },
      "SegmentTranslationResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "SegmentTranslationResponse"
      },
      "SegmentUpdatePayload": {
        "properties": {
          "start_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          }
        },
        "type": "object",
        "title": "SegmentUpdatePayload"
      },
      "SegmentUpdateResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "SegmentUpdateResponse"
      },
      "SegmentedJsonExportOptions": {
        "properties": {
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          },
          "format": {
            "type": "string",
            "const": "segmented_json",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "type": "object",
        "required": [
          "format"
        ],
        "title": "SegmentedJsonExportOptions"
      },
      "SelectionGroup": {
        "properties": {
          "children": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Children"
          },
          "selected": {
            "type": "string",
            "title": "Selected"
          }
        },
        "type": "object",
        "required": [
          "children",
          "selected"
        ],
        "title": "SelectionGroup"
      },
      "SettlementInfo": {
        "properties": {
          "provider": {
            "$ref": "#/components/schemas/SettlementProvider"
          },
          "contract_id": {
            "type": "string",
            "title": "Contract Id"
          }
        },
        "type": "object",
        "required": [
          "provider",
          "contract_id"
        ],
        "title": "SettlementInfo"
      },
      "SettlementProvider": {
        "type": "string",
        "enum": [
          "deel",
          "test"
        ],
        "title": "SettlementProvider"
      },
      "ShareOptionResponseModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the principal."
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the principal."
          },
          "type": {
            "type": "string",
            "enum": [
              "user",
              "group",
              "key"
            ],
            "title": "Type",
            "description": "The type of the principal: user, group, or service account (under 'key')."
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "type"
        ],
        "title": "ShareOptionResponseModel"
      },
      "SharedSongResponseModel": {
        "properties": {
          "_id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "share_color": {
            "type": "string",
            "title": "Share Color"
          },
          "share_title": {
            "type": "string",
            "title": "Share Title"
          },
          "created_at_utc": {
            "type": "string",
            "format": "date-time",
            "title": "Created At Utc"
          },
          "updated_at_utc": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At Utc"
          },
          "finished_at_utc": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At Utc"
          },
          "generation_settings": {
            "$ref": "#/components/schemas/SongGenerationSettings"
          },
          "metadata": {
            "$ref": "#/components/schemas/SongMetadata"
          },
          "word_timestamps": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "$ref": "#/components/schemas/WordTimestamp"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Word Timestamps"
          },
          "waveform_visual": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Waveform Visual"
          },
          "public_url": {
            "type": "string",
            "title": "Public Url"
          },
          "like_count": {
            "type": "integer",
            "title": "Like Count"
          },
          "transcript": {
            "$ref": "#/components/schemas/SongTranscript"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "user_id",
          "workspace_id",
          "share_color",
          "share_title",
          "created_at_utc",
          "updated_at_utc",
          "finished_at_utc",
          "generation_settings",
          "metadata",
          "word_timestamps",
          "waveform_visual",
          "public_url",
          "like_count",
          "transcript"
        ],
        "title": "SharedSongResponseModel"
      },
      "SharedSoundGenerationPurchaseResponseModel": {
        "properties": {
          "purchase_id": {
            "type": "string",
            "title": "Purchase Id"
          },
          "owner_id": {
            "type": "string",
            "title": "Owner Id"
          },
          "generation": {
            "$ref": "#/components/schemas/SharedSoundGenerationResponseModel"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          }
        },
        "type": "object",
        "required": [
          "purchase_id",
          "owner_id",
          "generation",
          "created_at_unix"
        ],
        "title": "SharedSoundGenerationPurchaseResponseModel"
      },
      "SharedSoundGenerationResponseModel": {
        "properties": {
          "public_user_id": {
            "type": "string",
            "title": "Public User Id"
          },
          "history_item_id": {
            "type": "string",
            "title": "History Item Id"
          },
          "generation_id": {
            "type": "string",
            "title": "Generation Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Labels"
          },
          "purchased_count": {
            "type": "integer",
            "title": "Purchased Count"
          },
          "like_count": {
            "type": "integer",
            "title": "Like Count"
          },
          "featured": {
            "type": "boolean",
            "title": "Featured"
          },
          "preview_url": {
            "type": "string",
            "title": "Preview Url"
          },
          "purchased": {
            "type": "boolean",
            "title": "Purchased"
          },
          "icon_url": {
            "type": "string",
            "title": "Icon Url"
          }
        },
        "type": "object",
        "required": [
          "public_user_id",
          "history_item_id",
          "generation_id",
          "text",
          "category",
          "labels",
          "purchased_count",
          "like_count",
          "featured",
          "preview_url",
          "purchased",
          "icon_url"
        ],
        "title": "SharedSoundGenerationResponseModel"
      },
      "SharedVoiceCollectionDBModel": {
        "properties": {
          "collection_id": {
            "type": "string",
            "title": "Collection Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "category": {
            "type": "string",
            "enum": [
              "language",
              "use_case",
              "special"
            ],
            "title": "Category"
          },
          "featured": {
            "type": "boolean",
            "title": "Featured"
          },
          "voices": {
            "items": {
              "$ref": "#/components/schemas/SharedVoiceCollectionVoiceDBModel"
            },
            "type": "array",
            "title": "Voices"
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "background_color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Color"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "hidden": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hidden"
          },
          "display_priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Priority"
          }
        },
        "type": "object",
        "required": [
          "collection_id",
          "title",
          "category",
          "featured",
          "voices"
        ],
        "title": "SharedVoiceCollectionDBModel"
      },
      "SharedVoiceCollectionResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "category": {
            "type": "string",
            "enum": [
              "language",
              "use_case",
              "special"
            ],
            "title": "Category"
          },
          "voices": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/VoiceResponseModel"
                    },
                    {
                      "$ref": "#/components/schemas/LibraryVoiceResponseModel"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voices"
          },
          "featured": {
            "type": "boolean",
            "title": "Featured"
          },
          "cover_image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Image Url"
          },
          "background_color": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "black",
                  "purple",
                  "red",
                  "yellow",
                  "green",
                  "orange",
                  "blue",
                  "teal"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Background Color"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "hidden": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hidden"
          },
          "display_priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Priority"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "category",
          "voices",
          "featured",
          "cover_image_url",
          "background_color",
          "language",
          "hidden",
          "display_priority"
        ],
        "title": "SharedVoiceCollectionResponseModel"
      },
      "SharedVoiceCollectionVoiceDBModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "public_user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public User Id"
          }
        },
        "type": "object",
        "required": [
          "voice_id"
        ],
        "title": "SharedVoiceCollectionVoiceDBModel"
      },
      "ShowCalendlyResponseModel": {
        "properties": {
          "show_calendly": {
            "type": "boolean",
            "title": "Show Calendly"
          },
          "employees": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Employees"
          }
        },
        "type": "object",
        "required": [
          "show_calendly"
        ],
        "title": "ShowCalendlyResponseModel"
      },
      "SimilarVoice": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "category": {
            "type": "string",
            "enum": [
              "premade",
              "cloned",
              "generated",
              "professional",
              "famous"
            ],
            "title": "Category"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "name",
          "category"
        ],
        "title": "SimilarVoice"
      },
      "SimilarVoiceDBModel": {
        "properties": {
          "similar_voice_id": {
            "type": "string",
            "title": "Similar Voice Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "user_voice_id": {
            "type": "string",
            "title": "User Voice Id"
          },
          "similarity_dot_product": {
            "type": "number",
            "title": "Similarity Dot Product"
          },
          "random": {
            "type": "integer",
            "title": "Random"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "voice_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Preview"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "similar_voice_id",
          "user_id",
          "user_voice_id",
          "similarity_dot_product"
        ],
        "title": "SimilarVoiceDBModel"
      },
      "SimilarVoicesForSpeakerResponse": {
        "properties": {
          "voices": {
            "items": {
              "$ref": "#/components/schemas/SimilarVoice"
            },
            "type": "array",
            "title": "Voices"
          }
        },
        "type": "object",
        "required": [
          "voices"
        ],
        "title": "SimilarVoicesForSpeakerResponse"
      },
      "SingleSelectLabelingAnswerDbModel": {
        "properties": {
          "question_id": {
            "type": "string",
            "format": "uuid",
            "title": "Question Id"
          },
          "type": {
            "type": "string",
            "const": "select",
            "title": "Type"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "question_id",
          "type",
          "value"
        ],
        "title": "SingleSelectLabelingAnswerDbModel"
      },
      "SkipTurnToolConfig": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "skip_turn",
            "title": "System Tool Type",
            "default": "skip_turn"
          }
        },
        "type": "object",
        "title": "SkipTurnToolConfig",
        "description": "Allows the agent to explicitly skip its turn.\n\nThis tool should be invoked by the LLM when the user indicates they would like\nto think or take a short pause before continuing the conversation—e.g. when\nthey say: \"Give me a second\", \"Let me think\", or \"One moment please\".  After\ncalling this tool, the assistant should not speak until the user speaks\nagain, or another normal turn-taking condition is met.  The tool itself has\nno parameters and performs no side-effects other than informing the backend\nthat the current turn generation is complete."
      },
      "SkipTurnToolResponseModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "skip_turn_success",
            "title": "Result Type",
            "default": "skip_turn_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          }
        },
        "type": "object",
        "title": "SkipTurnToolResponseModel"
      },
      "SocialLink": {
        "properties": {
          "platform": {
            "type": "string",
            "enum": [
              "twitter",
              "facebook",
              "instagram",
              "linkedin",
              "tiktok"
            ],
            "title": "Platform"
          },
          "link": {
            "type": "string",
            "title": "Link"
          }
        },
        "type": "object",
        "required": [
          "platform",
          "link"
        ],
        "title": "SocialLink"
      },
      "SongGenerationSettings": {
        "properties": {
          "model_id": {
            "$ref": "#/components/schemas/MusicModelID"
          },
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt"
          },
          "lyrics": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MusicPrompt"
              },
              {
                "type": "null"
              }
            ]
          },
          "song_length_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Song Length Ms"
          },
          "source_song_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Song Id"
          },
          "mask_regions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TimeRange"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mask Regions"
          }
        },
        "type": "object",
        "required": [
          "model_id",
          "prompt",
          "lyrics",
          "song_length_ms",
          "source_song_id",
          "mask_regions"
        ],
        "title": "SongGenerationSettings"
      },
      "SongLibraryPageResponseModel": {
        "properties": {
          "songs": {
            "items": {
              "$ref": "#/components/schemas/SongResponseModel"
            },
            "type": "array",
            "title": "Songs"
          },
          "page": {
            "type": "integer",
            "title": "Page"
          }
        },
        "type": "object",
        "required": [
          "songs",
          "page"
        ],
        "title": "SongLibraryPageResponseModel"
      },
      "SongMetadata": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "genres": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Genres"
          },
          "languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Languages"
          },
          "is_explicit": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Explicit"
          }
        },
        "type": "object",
        "required": [
          "title",
          "description",
          "genres",
          "languages",
          "is_explicit"
        ],
        "title": "SongMetadata"
      },
      "SongPrivateSharing": {
        "properties": {
          "color": {
            "type": "string",
            "title": "Color"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "like_count": {
            "type": "integer",
            "title": "Like Count",
            "default": 0
          },
          "type": {
            "type": "string",
            "const": "private",
            "title": "Type",
            "default": "private"
          },
          "transcript": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SongTranscript"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "color",
          "title"
        ],
        "title": "SongPrivateSharing"
      },
      "SongPublicSharing": {
        "properties": {
          "color": {
            "type": "string",
            "title": "Color"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "like_count": {
            "type": "integer",
            "title": "Like Count",
            "default": 0
          },
          "type": {
            "type": "string",
            "const": "public",
            "title": "Type",
            "default": "public"
          },
          "public_url": {
            "type": "string",
            "title": "Public Url"
          },
          "transcript": {
            "$ref": "#/components/schemas/SongTranscript"
          }
        },
        "type": "object",
        "required": [
          "color",
          "title",
          "public_url",
          "transcript"
        ],
        "title": "SongPublicSharing"
      },
      "SongResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "created_at_utc": {
            "type": "string",
            "format": "date-time",
            "title": "Created At Utc"
          },
          "updated_at_utc": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At Utc"
          },
          "finished_at_utc": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At Utc"
          },
          "generation_settings": {
            "$ref": "#/components/schemas/SongGenerationSettings"
          },
          "metadata": {
            "$ref": "#/components/schemas/SongMetadata"
          },
          "word_timestamps": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "$ref": "#/components/schemas/WordTimestamp"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Word Timestamps"
          },
          "is_shared_to_explore": {
            "type": "boolean",
            "title": "Is Shared To Explore"
          },
          "like_count": {
            "type": "integer",
            "title": "Like Count"
          },
          "download_count": {
            "type": "integer",
            "title": "Download Count"
          },
          "play_count": {
            "type": "integer",
            "title": "Play Count"
          },
          "trending_score": {
            "type": "number",
            "title": "Trending Score"
          },
          "download_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Url"
          },
          "image_url_low_res": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url Low Res"
          },
          "waveform_visual": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Waveform Visual"
          },
          "status": {
            "$ref": "#/components/schemas/SongStatus"
          },
          "progress": {
            "type": "number",
            "title": "Progress"
          },
          "failure_reason": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FailureReason"
              },
              {
                "type": "null"
              }
            ]
          },
          "sharing": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SongPrivateSharing"
              },
              {
                "$ref": "#/components/schemas/SongPublicSharing"
              }
            ],
            "title": "Sharing"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "workspace_id",
          "created_at_utc",
          "updated_at_utc",
          "finished_at_utc",
          "generation_settings",
          "metadata",
          "word_timestamps",
          "is_shared_to_explore",
          "like_count",
          "download_count",
          "play_count",
          "trending_score",
          "download_url",
          "image_url_low_res",
          "waveform_visual",
          "status",
          "progress",
          "failure_reason",
          "sharing"
        ],
        "title": "SongResponseModel"
      },
      "SongSection": {
        "properties": {
          "section_name": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Section Name",
            "description": "The name of the section. Must be between 1 and 100 characters."
          },
          "positive_local_styles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 50,
            "title": "Positive Local Styles",
            "description": "The styles that should be present in this section."
          },
          "negative_local_styles": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 50,
            "title": "Negative Local Styles",
            "description": "The styles that should not be present in this section."
          },
          "duration_ms": {
            "type": "integer",
            "maximum": 120000,
            "minimum": 3000,
            "title": "Duration Ms",
            "description": "The duration of the section in milliseconds. Must be between 3000ms and 120000ms."
          },
          "lines": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 30,
            "title": "Lines",
            "description": "The lyrics of the section."
          }
        },
        "type": "object",
        "required": [
          "section_name",
          "positive_local_styles",
          "negative_local_styles",
          "duration_ms",
          "lines"
        ],
        "title": "SongSection"
      },
      "SongShareType": {
        "type": "string",
        "enum": [
          "private",
          "public"
        ],
        "title": "SongShareType"
      },
      "SongStatus": {
        "type": "string",
        "enum": [
          "pending",
          "validating_prompt",
          "generating_music",
          "completed",
          "failed"
        ],
        "title": "SongStatus"
      },
      "SongStatusUpdateResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "status": {
            "$ref": "#/components/schemas/SongStatus"
          },
          "generation_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SongGenerationSettings"
              },
              {
                "type": "null"
              }
            ]
          },
          "download_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Url"
          },
          "image_url_low_res": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url Low Res"
          },
          "progress": {
            "type": "number",
            "title": "Progress"
          },
          "failure_reason": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FailureReason"
              },
              {
                "type": "null"
              }
            ]
          },
          "waveform_visual": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Waveform Visual"
          },
          "metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SongMetadata"
              },
              {
                "type": "null"
              }
            ]
          },
          "word_timestamps": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "$ref": "#/components/schemas/WordTimestamp"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Word Timestamps"
          },
          "sharing": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SongPrivateSharing"
              },
              {
                "$ref": "#/components/schemas/SongPublicSharing"
              }
            ],
            "title": "Sharing"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "status",
          "generation_settings",
          "download_url",
          "image_url_low_res",
          "progress",
          "failure_reason",
          "waveform_visual",
          "metadata",
          "word_timestamps",
          "sharing"
        ],
        "title": "SongStatusUpdateResponseModel"
      },
      "SongTranscript": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "words": {
            "items": {
              "$ref": "#/components/schemas/WordTimestamp"
            },
            "type": "array",
            "title": "Words"
          }
        },
        "type": "object",
        "required": [
          "text",
          "words"
        ],
        "title": "SongTranscript"
      },
      "SoundGenerationHistoryItemResponseModel": {
        "properties": {
          "sound_generation_history_item_id": {
            "type": "string",
            "title": "Sound Generation History Item Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "generation_config": {
            "type": "object",
            "title": "Generation Config"
          },
          "icon_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Url"
          },
          "is_shared_to_explore": {
            "type": "boolean",
            "title": "Is Shared To Explore"
          },
          "is_sfw": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Sfw"
          },
          "is_saved": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Saved"
          }
        },
        "type": "object",
        "required": [
          "sound_generation_history_item_id",
          "text",
          "created_at_unix",
          "content_type",
          "generation_config",
          "icon_url",
          "is_shared_to_explore",
          "is_sfw",
          "is_saved"
        ],
        "title": "SoundGenerationHistoryItemResponseModel"
      },
      "SoundGenerationWithWaveformBase64ResponseModel": {
        "properties": {
          "sound_generation_history_item": {
            "$ref": "#/components/schemas/SoundGenerationHistoryItemResponseModel"
          },
          "waveform_base_64": {
            "type": "string",
            "title": "Waveform Base 64"
          },
          "icon_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon Url"
          }
        },
        "type": "object",
        "required": [
          "sound_generation_history_item",
          "waveform_base_64",
          "icon_url"
        ],
        "title": "SoundGenerationWithWaveformBase64ResponseModel"
      },
      "SpeakerAudioResponseModel": {
        "properties": {
          "audio_base_64": {
            "type": "string",
            "title": "Audio Base 64",
            "description": "The base64 encoded audio."
          },
          "media_type": {
            "type": "string",
            "title": "Media Type",
            "description": "The media type of the audio."
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs",
            "description": "The duration of the audio in seconds."
          }
        },
        "type": "object",
        "required": [
          "audio_base_64",
          "media_type",
          "duration_secs"
        ],
        "title": "SpeakerAudioResponseModel",
        "example": {
          "audio_base_64": "audio_base_64",
          "duration_secs": 5,
          "media_type": "audio/mpeg"
        }
      },
      "SpeakerDBModel": {
        "properties": {
          "speaker_id": {
            "type": "string",
            "title": "Speaker Id"
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs"
          },
          "utterances": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UtteranceDBModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utterances"
          }
        },
        "type": "object",
        "required": [
          "speaker_id",
          "duration_secs"
        ],
        "title": "SpeakerDBModel"
      },
      "SpeakerResponseModel": {
        "properties": {
          "speaker_id": {
            "type": "string",
            "title": "Speaker Id",
            "description": "The ID of the speaker."
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs",
            "description": "The duration of the speaker segment in seconds."
          },
          "utterances": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UtteranceResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Utterances",
            "description": "The utterances of the speaker."
          }
        },
        "type": "object",
        "required": [
          "speaker_id",
          "duration_secs"
        ],
        "title": "SpeakerResponseModel",
        "example": {
          "duration_secs": 5,
          "speaker_id": "DCwhRBWXzGAHq8TQ4Fs18"
        }
      },
      "SpeakerSegment": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "subtitles": {
            "items": {
              "$ref": "#/components/schemas/SegmentSubtitleFrame"
            },
            "type": "array",
            "title": "Subtitles"
          },
          "dubs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/DubbedSegment"
            },
            "type": "object",
            "title": "Dubs"
          }
        },
        "type": "object",
        "required": [
          "id",
          "start_time",
          "end_time",
          "text",
          "subtitles",
          "dubs"
        ],
        "title": "SpeakerSegment"
      },
      "SpeakerSeparationDBModel-Input": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "not_started",
              "pending",
              "completed",
              "failed"
            ],
            "title": "Status"
          },
          "speakers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/SpeakerDBModel"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speakers"
          },
          "selected_speaker_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selected Speaker Ids"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "SpeakerSeparationDBModel"
      },
      "SpeakerSeparationDBModel-Output": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "not_started",
              "pending",
              "completed",
              "failed"
            ],
            "title": "Status"
          },
          "speakers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/SpeakerDBModel"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speakers"
          },
          "selected_speaker_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selected Speaker Ids"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "SpeakerSeparationDBModel"
      },
      "SpeakerSeparationResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the voice."
          },
          "sample_id": {
            "type": "string",
            "title": "Sample Id",
            "description": "The ID of the sample."
          },
          "status": {
            "type": "string",
            "enum": [
              "not_started",
              "pending",
              "completed",
              "failed"
            ],
            "title": "Status",
            "description": "The status of the speaker separation."
          },
          "speakers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/SpeakerResponseModel"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speakers",
            "description": "The speakers of the sample."
          },
          "selected_speaker_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Selected Speaker Ids",
            "description": "The IDs of the selected speakers."
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "sample_id",
          "status"
        ],
        "title": "SpeakerSeparationResponseModel",
        "example": {
          "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "status": "not_started",
          "voice_id": "DCwhRBWXzGAHq8TQ4Fs18"
        }
      },
      "SpeakerTrack": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "media_ref": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "speaker_name": {
            "type": "string",
            "title": "Speaker Name"
          },
          "voices": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Voices"
          },
          "segments": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Segments"
          }
        },
        "type": "object",
        "required": [
          "id",
          "media_ref",
          "speaker_name",
          "voices",
          "segments"
        ],
        "title": "SpeakerTrack"
      },
      "SpeakerUpdatedResponse": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "SpeakerUpdatedResponse"
      },
      "SpeechHistoryItemResponseModel": {
        "properties": {
          "history_item_id": {
            "type": "string",
            "title": "History Item Id",
            "description": "The ID of the history item."
          },
          "request_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id",
            "description": "The ID of the request."
          },
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id",
            "description": "The ID of the voice used."
          },
          "model_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Id",
            "description": "The ID of the model."
          },
          "voice_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Name",
            "description": "The name of the voice."
          },
          "voice_category": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "premade",
                  "cloned",
                  "generated",
                  "professional"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Category",
            "description": "The category of the voice. Either 'premade', 'cloned', 'generated' or 'professional'."
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "description": "The text used to generate the audio item."
          },
          "date_unix": {
            "type": "integer",
            "title": "Date Unix",
            "description": "Unix timestamp of when the item was created."
          },
          "character_count_change_from": {
            "type": "integer",
            "title": "Character Count Change From",
            "description": "The character count change from."
          },
          "character_count_change_to": {
            "type": "integer",
            "title": "Character Count Change To",
            "description": "The character count change to."
          },
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "The content type of the generated item."
          },
          "state": {
            "type": "string",
            "enum": [
              "created",
              "deleted",
              "processing"
            ],
            "title": "State",
            "description": "The state of the history item."
          },
          "settings": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings",
            "description": "The settings of the history item."
          },
          "feedback": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Feedback associated with the generated item. Returns null if no feedback has been provided."
          },
          "share_link_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Link Id",
            "description": "The ID of the share link."
          },
          "source": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "TTS",
                  "STS",
                  "Projects",
                  "PD",
                  "AN",
                  "Dubbing",
                  "PlayAPI",
                  "ConvAI"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Source",
            "description": "The source of the history item. Either TTS (text to speech), STS (speech to text), AN (audio native), Projects, Dubbing, PlayAPI, PD (pronunciation dictionary) or ConvAI (conversational AI)."
          },
          "alignments": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/HistoryAlignmentsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The alignments of the history item."
          },
          "dialogue": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DialogueInputResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dialogue",
            "description": "The dialogue (voice and text pairs) used to generate the audio item. If this is set then the top level `text` and `voice_id` fields will be empty."
          }
        },
        "type": "object",
        "required": [
          "history_item_id",
          "date_unix",
          "character_count_change_from",
          "character_count_change_to",
          "content_type",
          "state"
        ],
        "title": "SpeechHistoryItemResponseModel",
        "example": {
          "character_count_change_from": 17189,
          "character_count_change_to": 17231,
          "content_type": "audio/mpeg",
          "date_unix": 1714650306,
          "history_item_id": "ja9xsmfGhxYcymxGcOGB",
          "model_id": "eleven_multilingual_v2",
          "request_id": "BF0BZg4IwLGBlaVjv9Im",
          "settings": {
            "similarity_boost": 0.5,
            "stability": 0.71,
            "style": 0,
            "use_speaker_boost": true
          },
          "source": "TTS",
          "state": "created",
          "text": "Hello, world!",
          "voice_category": "premade",
          "voice_id": "21m00Tcm4TlvDq8ikWAM",
          "voice_name": "Rachel"
        }
      },
      "SpeechHistoryVideoResponseModel": {
        "properties": {
          "video_url": {
            "type": "string",
            "title": "Video Url",
            "description": "The public URL of the generated video."
          }
        },
        "type": "object",
        "required": [
          "video_url"
        ],
        "title": "SpeechHistoryVideoResponseModel"
      },
      "SpeechToSpeechUnitCostResponse": {
        "properties": {
          "units_cost": {
            "type": "number",
            "title": "Units Cost"
          },
          "voice_multiplier": {
            "type": "number",
            "title": "Voice Multiplier"
          }
        },
        "type": "object",
        "required": [
          "units_cost",
          "voice_multiplier"
        ],
        "title": "SpeechToSpeechUnitCostResponse"
      },
      "SpeechToTextCharacterResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The character that was transcribed."
          },
          "start": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start",
            "description": "The start time of the character in seconds."
          },
          "end": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End",
            "description": "The end time of the character in seconds."
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "SpeechToTextCharacterResponseModel",
        "example": {
          "end": 0.1,
          "start": 0,
          "text": "H"
        }
      },
      "SpeechToTextChunkResponseModel": {
        "properties": {
          "language_code": {
            "type": "string",
            "title": "Language Code",
            "description": "The detected language code (e.g. 'eng' for English)."
          },
          "language_probability": {
            "type": "number",
            "title": "Language Probability",
            "description": "The confidence score of the language detection (0 to 1)."
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The raw text of the transcription."
          },
          "words": {
            "items": {
              "$ref": "#/components/schemas/SpeechToTextWordResponseModel"
            },
            "type": "array",
            "title": "Words",
            "description": "List of words with their timing information."
          },
          "channel_index": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Channel Index",
            "description": "The channel index this transcript belongs to (for multichannel audio)."
          },
          "additional_formats": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/AdditionalFormatResponseModel"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Formats",
            "description": "Requested additional formats of the transcript."
          }
        },
        "type": "object",
        "required": [
          "language_code",
          "language_probability",
          "text",
          "words"
        ],
        "title": "SpeechToTextChunkResponseModel",
        "description": "Chunk-level detail of the transcription with timing information.",
        "example": {
          "language_code": "en",
          "language_probability": 0.98,
          "text": "Hello world!",
          "words": [
            {
              "end": 0.5,
              "logprob": -0.124,
              "speaker_id": "speaker_1",
              "start": 0,
              "text": "Hello",
              "type": "word"
            },
            {
              "end": 0.5,
              "logprob": 0,
              "speaker_id": "speaker_1",
              "start": 0.5,
              "text": " ",
              "type": "spacing"
            },
            {
              "end": 1.2,
              "logprob": -0.089,
              "speaker_id": "speaker_1",
              "start": 0.5,
              "text": "world!",
              "type": "word"
            }
          ]
        }
      },
      "SpeechToTextMusicResponseModel": {
        "properties": {
          "transcripts": {
            "items": {
              "$ref": "#/components/schemas/SpeechToTextMusicTranscriptResponseModel"
            },
            "type": "array",
            "title": "Transcripts"
          }
        },
        "type": "object",
        "required": [
          "transcripts"
        ],
        "title": "SpeechToTextMusicResponseModel"
      },
      "SpeechToTextMusicTranscriptResponseModel": {
        "properties": {
          "language_code": {
            "type": "string",
            "title": "Language Code",
            "description": "The detected language code (e.g. 'eng' for English)."
          },
          "language_probability": {
            "type": "number",
            "title": "Language Probability",
            "description": "The confidence score of the language detection (0 to 1)."
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The raw text of the transcription."
          },
          "words": {
            "items": {
              "$ref": "#/components/schemas/SpeechToTextMusicWordResponseModel"
            },
            "type": "array",
            "title": "Words",
            "description": "List of words with their timing information."
          },
          "transcript_quality_score": {
            "type": "number",
            "title": "Transcript Quality Score",
            "description": "Score we assign to each transcript based on internal measures. A higher score indicates a better transcript."
          },
          "passed_quality_checks": {
            "type": "boolean",
            "title": "Passed Quality Checks",
            "description": "Whether the transcript passed our internal quality checks to filter out bad transcripts."
          }
        },
        "type": "object",
        "required": [
          "language_code",
          "language_probability",
          "text",
          "words",
          "transcript_quality_score",
          "passed_quality_checks"
        ],
        "title": "SpeechToTextMusicTranscriptResponseModel",
        "description": "Chunk-level detail of the transcription with timing information.",
        "example": {
          "language_code": "en",
          "language_probability": 0.98,
          "passed_quality_checks": true,
          "text": "Hello world!",
          "transcript_quality_score": 1.54,
          "words": [
            {
              "end": 0.5,
              "logprob": -0.124,
              "start": 0,
              "text": "Hello"
            },
            {
              "end": 0.5,
              "logprob": 0,
              "start": 0.5,
              "text": " "
            },
            {
              "end": 1.2,
              "logprob": -0.089,
              "start": 0.5,
              "text": "world!"
            }
          ]
        }
      },
      "SpeechToTextMusicWordResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The word or sound that was transcribed."
          },
          "start": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start",
            "description": "The start time of the word or sound in seconds."
          },
          "end": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End",
            "description": "The end time of the word or sound in seconds."
          },
          "logprob": {
            "type": "number",
            "title": "Logprob",
            "description": "The log of the probability with which this word was predicted. Logprobs are in range [-infinity, 0], higher logprobs indicate a higher confidence the model has in its predictions."
          },
          "characters": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SpeechToTextCharacterResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Characters",
            "description": "The characters that make up the word and their timing information."
          }
        },
        "type": "object",
        "required": [
          "text",
          "logprob"
        ],
        "title": "SpeechToTextMusicWordResponseModel",
        "description": "Word-level detail of the transcription with timing information.",
        "example": {
          "end": 0.5,
          "logprob": -0.124,
          "start": 0,
          "text": "Hello"
        }
      },
      "SpeechToTextWebhookResponseModel": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "The message of the webhook response."
          },
          "request_id": {
            "type": "string",
            "title": "Request Id",
            "description": "The request ID of the webhook response."
          }
        },
        "type": "object",
        "required": [
          "message",
          "request_id"
        ],
        "title": "SpeechToTextWebhookResponseModel",
        "example": {
          "message": "Request accepted. Transcription result will be sent to the webhook endpoint.",
          "request_id": "1234567890"
        }
      },
      "SpeechToTextWordResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The word or sound that was transcribed."
          },
          "start": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start",
            "description": "The start time of the word or sound in seconds."
          },
          "end": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End",
            "description": "The end time of the word or sound in seconds."
          },
          "type": {
            "type": "string",
            "enum": [
              "word",
              "spacing",
              "audio_event"
            ],
            "title": "Type",
            "description": "The type of the word or sound. 'audio_event' is used for non-word sounds like laughter or footsteps."
          },
          "speaker_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaker Id",
            "description": "Unique identifier for the speaker of this word."
          },
          "logprob": {
            "type": "number",
            "title": "Logprob",
            "description": "The log of the probability with which this word was predicted. Logprobs are in range [-infinity, 0], higher logprobs indicate a higher confidence the model has in its predictions."
          },
          "characters": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SpeechToTextCharacterResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Characters",
            "description": "The characters that make up the word and their timing information."
          }
        },
        "type": "object",
        "required": [
          "text",
          "type",
          "logprob"
        ],
        "title": "SpeechToTextWordResponseModel",
        "description": "Word-level detail of the transcription with timing information.",
        "example": {
          "characters": [
            {
              "end": 0.1,
              "start": 0,
              "text": "H"
            },
            {
              "end": 0.2,
              "start": 0.1,
              "text": "e"
            },
            {
              "end": 0.3,
              "start": 0.2,
              "text": "l"
            },
            {
              "end": 0.4,
              "start": 0.3,
              "text": "l"
            },
            {
              "end": 0.5,
              "start": 0.4,
              "text": "o"
            }
          ],
          "end": 0.5,
          "logprob": -0.124,
          "speaker_id": "speaker_1",
          "start": 0,
          "text": "Hello",
          "type": "word"
        }
      },
      "Srt": {
        "properties": {
          "txt": {
            "type": "string",
            "title": "Txt"
          },
          "kind": {
            "type": "string",
            "const": "srt",
            "title": "Kind",
            "default": "srt"
          }
        },
        "type": "object",
        "required": [
          "txt"
        ],
        "title": "Srt"
      },
      "SrtExportOptions": {
        "properties": {
          "max_characters_per_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Characters Per Line",
            "default": 50
          },
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": false
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          },
          "format": {
            "type": "string",
            "const": "srt",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S",
            "default": 0.6
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S",
            "default": 5
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars",
            "default": 90
          }
        },
        "type": "object",
        "required": [
          "format"
        ],
        "title": "SrtExportOptions"
      },
      "SrtExportRequest": {
        "properties": {
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          }
        },
        "type": "object",
        "title": "SrtExportRequest"
      },
      "SsoProviderResponseModel": {
        "properties": {
          "provider_type": {
            "type": "string",
            "enum": [
              "saml",
              "oidc"
            ],
            "title": "Provider Type"
          },
          "provider_id": {
            "type": "string",
            "title": "Provider Id"
          },
          "domains": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Domains"
          }
        },
        "type": "object",
        "required": [
          "provider_type",
          "provider_id",
          "domains"
        ],
        "title": "SsoProviderResponseModel"
      },
      "StartPVCVoiceTrainingResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the start PVC voice training request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "StartPVCVoiceTrainingResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "StartSpeakerSeparationResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the start speaker seperation request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "StartSpeakerSeparationResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "StreamingAudioChunkWithTimestampsResponseModel": {
        "properties": {
          "audio_base64": {
            "type": "string",
            "title": "Audio Base64",
            "description": "Base64 encoded audio data"
          },
          "alignment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp information for each character in the original text"
          },
          "normalized_alignment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Timestamp information for each character in the normalized text"
          }
        },
        "type": "object",
        "required": [
          "audio_base64"
        ],
        "title": "StreamingAudioChunkWithTimestampsResponseModel",
        "example": {
          "alignment": {
            "character_end_times_seconds": [0.1, 0.2],
            "character_start_times_seconds": [0, 0.1],
            "characters": [
              "H",
              "e"
            ]
          },
          "audio_base64": "base64_encoded_audio_chunk",
          "normalized_alignment": {
            "character_end_times_seconds": [0.1, 0.2],
            "character_start_times_seconds": [0, 0.1],
            "characters": [
              "H",
              "e"
            ]
          }
        }
      },
      "StripeChargeInfo": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "stripe",
            "title": "Kind"
          },
          "checkout_url": {
            "type": "string",
            "title": "Checkout Url"
          },
          "invoice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Id"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "checkout_url"
        ],
        "title": "StripeChargeInfo"
      },
      "StripePaymentInfo": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/PaymentStatusKind"
          },
          "kind": {
            "type": "string",
            "const": "stripe",
            "title": "Kind",
            "default": "stripe"
          },
          "invoice_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoice Url"
          }
        },
        "type": "object",
        "required": [
          "status",
          "invoice_url"
        ],
        "title": "StripePaymentInfo"
      },
      "StripePaymentReceivedEventMeta": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "stripe",
            "title": "Kind"
          },
          "invoice_id": {
            "type": "string",
            "title": "Invoice Id"
          },
          "invoice_url": {
            "type": "string",
            "title": "Invoice Url"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "invoice_id",
          "invoice_url"
        ],
        "title": "StripePaymentReceivedEventMeta"
      },
      "SubmitRequestRequest": {
        "properties": {
          "production_type": {
            "type": "string",
            "title": "Production Type"
          },
          "frequency": {
            "type": "string",
            "title": "Frequency"
          },
          "languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Languages"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          }
        },
        "type": "object",
        "required": [
          "production_type",
          "frequency",
          "languages",
          "comments"
        ],
        "title": "SubmitRequestRequest"
      },
      "SubmitRequestResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "SubmitRequestResponse"
      },
      "SubmitTaskRequest": {
        "properties": {
          "version_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id"
          },
          "labeling_responses": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LabelingResponseCreation"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "SubmitTaskRequest"
      },
      "SubscriptionExtrasResponseModel": {
        "properties": {
          "concurrency": {
            "type": "integer",
            "title": "Concurrency",
            "description": "The concurrency of the user."
          },
          "convai_concurrency": {
            "type": "integer",
            "title": "Convai Concurrency",
            "description": "The Convai concurrency of the user."
          },
          "convai_chars_per_minute": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Convai Chars Per Minute",
            "description": "The Convai characters per minute of the user."
          },
          "convai_asr_chars_per_minute": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Convai Asr Chars Per Minute",
            "description": "The Convai ASR characters per minute of the user."
          },
          "force_logging_disabled": {
            "type": "boolean",
            "title": "Force Logging Disabled",
            "description": "Whether the user's logging is disabled."
          },
          "can_request_manual_pro_voice_verification": {
            "type": "boolean",
            "title": "Can Request Manual Pro Voice Verification",
            "description": "Whether the user can request manual pro voice verification."
          },
          "can_bypass_voice_captcha": {
            "type": "boolean",
            "title": "Can Bypass Voice Captcha",
            "description": "Whether the user can bypass the voice captcha."
          },
          "moderation": {
            "$ref": "#/components/schemas/ModerationStatusResponseModel",
            "description": "The moderation status of the user."
          },
          "unused_characters_rolled_over_from_previous_period": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unused Characters Rolled Over From Previous Period",
            "description": "The unused characters rolled over from the previous period."
          },
          "overused_characters_rolled_over_from_previous_period": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Overused Characters Rolled Over From Previous Period",
            "description": "The overused characters rolled over from the previous period."
          },
          "usage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubscriptionUsageResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Data on how the subscription is being used."
          }
        },
        "type": "object",
        "required": [
          "concurrency",
          "convai_concurrency",
          "force_logging_disabled",
          "can_request_manual_pro_voice_verification",
          "can_bypass_voice_captcha",
          "moderation"
        ],
        "title": "SubscriptionExtrasResponseModel",
        "example": {
          "can_bypass_voice_captcha": true,
          "can_request_manual_pro_voice_verification": true,
          "concurrency": 10,
          "convai_asr_chars_per_minute": 1000,
          "convai_chars_per_minute": 1000,
          "convai_concurrency": 10,
          "force_logging_disabled": false,
          "moderation": {
            "enterprise_background_moderation_enabled": false,
            "enterprise_check_block_nogo_voice": false,
            "enterprise_check_nogo_voice": false,
            "is_in_probation": false,
            "never_live_moderate": false,
            "nogo_voice_similar_voice_upload_count": 0,
            "on_watchlist": false
          },
          "overused_characters_rolled_over_from_previous_period": 1000,
          "unused_characters_rolled_over_from_previous_period": 1000,
          "usage": {
            "actual_reported_credits": 1000,
            "manually_gifted_credits_quota": 1000,
            "manually_gifted_credits_used": 1000,
            "paid_usage_based_credits_used": 1000,
            "rollover_credits_quota": 1000,
            "rollover_credits_used": 1000,
            "subscription_cycle_credits_quota": 1000,
            "subscription_cycle_credits_used": 1000
          }
        }
      },
      "SubscriptionFiatPricesResponseModel": {
        "properties": {
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "usd",
                  "eur"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency"
          },
          "fiat_costs": {
            "additionalProperties": {
              "additionalProperties": {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              "type": "object"
            },
            "propertyNames": {
              "$ref": "#/components/schemas/FiatChargeType"
            },
            "type": "object",
            "title": "Fiat Costs"
          },
          "custom_fiat_costs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "additionalProperties": {
                    "additionalProperties": {
                      "type": "number"
                    },
                    "type": "object"
                  },
                  "type": "object"
                },
                "propertyNames": {
                  "$ref": "#/components/schemas/FiatChargeType"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Fiat Costs"
          },
          "credits_per_fiat_unit": {
            "type": "number",
            "title": "Credits Per Fiat Unit"
          },
          "usage_based_price_multiplier": {
            "type": "number",
            "title": "Usage Based Price Multiplier"
          },
          "charge_types": {
            "items": {
              "$ref": "#/components/schemas/FiatChargeType"
            },
            "type": "array",
            "title": "Charge Types",
            "default": [
              "llm_input_tokens",
              "sfx_purchase_minute",
              "convai_text_message",
              "dubbing_translate_thousand_characters",
              "stt_minute",
              "llm_input_cache_read_tokens",
              "tts_thousand_characters",
              "text_to_voice_one_thousand_characters",
              "sfx_minute",
              "voice_isolation_minute",
              "llm_output_tokens",
              "dubbing_minute",
              "convai_minute",
              "llm_input_cache_write_tokens",
              "sts_minute"
            ]
          }
        },
        "type": "object",
        "required": [
          "fiat_costs",
          "credits_per_fiat_unit",
          "usage_based_price_multiplier"
        ],
        "title": "SubscriptionFiatPricesResponseModel"
      },
      "SubscriptionResponseModel": {
        "properties": {
          "tier": {
            "type": "string",
            "title": "Tier",
            "description": "The tier of the user's subscription."
          },
          "character_count": {
            "type": "integer",
            "title": "Character Count",
            "description": "The number of characters used by the user."
          },
          "character_limit": {
            "type": "integer",
            "title": "Character Limit",
            "description": "The maximum number of characters allowed in the current billing period."
          },
          "max_character_limit_extension": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Character Limit Extension",
            "description": "Maximum number of characters that the character limit can be exceeded by. Managed by the workspace admin."
          },
          "can_extend_character_limit": {
            "type": "boolean",
            "title": "Can Extend Character Limit",
            "description": "Whether the user can extend their character limit."
          },
          "allowed_to_extend_character_limit": {
            "type": "boolean",
            "title": "Allowed To Extend Character Limit",
            "description": "Whether the user is allowed to extend their character limit."
          },
          "next_character_count_reset_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Character Count Reset Unix",
            "description": "The Unix timestamp of the next character count reset."
          },
          "voice_slots_used": {
            "type": "integer",
            "title": "Voice Slots Used",
            "description": "The number of voice slots used by the user."
          },
          "professional_voice_slots_used": {
            "type": "integer",
            "title": "Professional Voice Slots Used",
            "description": "The number of professional voice slots used by the workspace/user if single seat."
          },
          "voice_limit": {
            "type": "integer",
            "title": "Voice Limit",
            "description": "The maximum number of voice slots allowed for the user."
          },
          "max_voice_add_edits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Voice Add Edits",
            "description": "The maximum number of voice add/edits allowed for the user."
          },
          "voice_add_edit_counter": {
            "type": "integer",
            "title": "Voice Add Edit Counter",
            "description": "The number of voice add/edits used by the user."
          },
          "professional_voice_limit": {
            "type": "integer",
            "title": "Professional Voice Limit",
            "description": "The maximum number of professional voices allowed for the user."
          },
          "can_extend_voice_limit": {
            "type": "boolean",
            "title": "Can Extend Voice Limit",
            "description": "Whether the user can extend their voice limit."
          },
          "can_use_instant_voice_cloning": {
            "type": "boolean",
            "title": "Can Use Instant Voice Cloning",
            "description": "Whether the user can use instant voice cloning."
          },
          "can_use_professional_voice_cloning": {
            "type": "boolean",
            "title": "Can Use Professional Voice Cloning",
            "description": "Whether the user can use professional voice cloning."
          },
          "currency": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "usd",
                  "eur"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency",
            "description": "The currency of the user's subscription."
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatusType",
            "description": "The status of the user's subscription."
          },
          "billing_period": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "monthly_period",
                  "annual_period"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Billing Period",
            "description": "The billing period of the user's subscription."
          },
          "character_refresh_period": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "monthly_period",
                  "annual_period"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Refresh Period",
            "description": "The character refresh period of the user's subscription."
          }
        },
        "type": "object",
        "required": [
          "tier",
          "character_count",
          "character_limit",
          "max_character_limit_extension",
          "can_extend_character_limit",
          "allowed_to_extend_character_limit",
          "voice_slots_used",
          "professional_voice_slots_used",
          "voice_limit",
          "voice_add_edit_counter",
          "professional_voice_limit",
          "can_extend_voice_limit",
          "can_use_instant_voice_cloning",
          "can_use_professional_voice_cloning",
          "status"
        ],
        "title": "SubscriptionResponseModel",
        "example": {
          "allowed_to_extend_character_limit": false,
          "billing_period": "monthly_period",
          "can_extend_character_limit": false,
          "can_extend_voice_limit": false,
          "can_use_instant_voice_cloning": true,
          "can_use_professional_voice_cloning": true,
          "character_count": 17231,
          "character_limit": 100000,
          "character_refresh_period": "monthly_period",
          "currency": "usd",
          "max_character_limit_extension": 10000,
          "max_voice_add_edits": 230,
          "next_character_count_reset_unix": 1738356858,
          "professional_voice_limit": 1,
          "professional_voice_slots_used": 0,
          "status": "free",
          "tier": "trial",
          "voice_add_edit_counter": 212,
          "voice_limit": 120,
          "voice_slots_used": 1
        }
      },
      "SubscriptionStatusType": {
        "type": "string",
        "enum": [
          "trialing",
          "active",
          "incomplete",
          "past_due",
          "free",
          "free_disabled"
        ],
        "title": "SubscriptionStatusType"
      },
      "SubscriptionUsageResponseModel": {
        "properties": {
          "rollover_credits_quota": {
            "type": "integer",
            "title": "Rollover Credits Quota",
            "description": "The rollover credits quota."
          },
          "subscription_cycle_credits_quota": {
            "type": "integer",
            "title": "Subscription Cycle Credits Quota",
            "description": "The subscription cycle credits quota."
          },
          "manually_gifted_credits_quota": {
            "type": "integer",
            "title": "Manually Gifted Credits Quota",
            "description": "The manually gifted credits quota."
          },
          "rollover_credits_used": {
            "type": "integer",
            "title": "Rollover Credits Used",
            "description": "The rollover credits used."
          },
          "subscription_cycle_credits_used": {
            "type": "integer",
            "title": "Subscription Cycle Credits Used",
            "description": "The subscription cycle credits used."
          },
          "manually_gifted_credits_used": {
            "type": "integer",
            "title": "Manually Gifted Credits Used",
            "description": "The manually gifted credits used."
          },
          "paid_usage_based_credits_used": {
            "type": "integer",
            "title": "Paid Usage Based Credits Used",
            "description": "The paid usage based credits used."
          },
          "actual_reported_credits": {
            "type": "integer",
            "title": "Actual Reported Credits",
            "description": "The actual reported credits."
          }
        },
        "type": "object",
        "required": [
          "rollover_credits_quota",
          "subscription_cycle_credits_quota",
          "manually_gifted_credits_quota",
          "rollover_credits_used",
          "subscription_cycle_credits_used",
          "manually_gifted_credits_used",
          "paid_usage_based_credits_used",
          "actual_reported_credits"
        ],
        "title": "SubscriptionUsageResponseModel",
        "example": {
          "actual_reported_credits": 1000,
          "manually_gifted_credits_quota": 1000,
          "manually_gifted_credits_used": 1000,
          "paid_usage_based_credits_used": 1000,
          "rollover_credits_quota": 1000,
          "rollover_credits_used": 1000,
          "subscription_cycle_credits_quota": 1000,
          "subscription_cycle_credits_used": 1000
        }
      },
      "SubtitleConstraints": {
        "properties": {
          "max_chars_per_line": {
            "type": "integer",
            "title": "Max Chars Per Line",
            "default": 42
          },
          "max_lines_per_cue": {
            "type": "integer",
            "title": "Max Lines Per Cue",
            "default": 2
          },
          "max_seconds_per_cue": {
            "type": "number",
            "title": "Max Seconds Per Cue",
            "default": 7
          }
        },
        "type": "object",
        "title": "SubtitleConstraints"
      },
      "Subtitles-Input": {
        "properties": {
          "cues": {
            "$ref": "#/components/schemas/Cues"
          }
        },
        "type": "object",
        "required": [
          "cues"
        ],
        "title": "Subtitles"
      },
      "Subtitles-Output": {
        "properties": {
          "cues": {
            "$ref": "#/components/schemas/Cues"
          }
        },
        "type": "object",
        "required": [
          "cues"
        ],
        "title": "Subtitles"
      },
      "SubtitlesCommonInstructions-Input": {
        "properties": {
          "sdh": {
            "type": "boolean",
            "title": "Sdh",
            "default": false
          },
          "cue_options": {
            "$ref": "#/components/schemas/CueOptions-Input",
            "default": {
              "min_duration_ms": 1000,
              "max_duration_ms": 7000,
              "max_lines_per_cue": 2,
              "max_char_per_line": 42,
              "max_char_per_s": 20,
              "min_gap_between_cues_frames": 2
            }
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comments"
          }
        },
        "type": "object",
        "title": "SubtitlesCommonInstructions"
      },
      "SubtitlesDeliverable": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "subtitles_project",
            "title": "Kind"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "subs": {
            "$ref": "#/components/schemas/Subtitles-Output"
          },
          "audio_file": {
            "$ref": "#/components/schemas/FileResponseModel"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "name",
          "subs",
          "audio_file"
        ],
        "title": "SubtitlesDeliverable"
      },
      "SubtitlesDesctiptionMetaModel": {
        "properties": {
          "duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration S"
          }
        },
        "type": "object",
        "title": "SubtitlesDesctiptionMetaModel"
      },
      "SubtitlesFormat": {
        "type": "string",
        "enum": [
          "srt",
          "raw"
        ],
        "title": "SubtitlesFormat"
      },
      "SubtitlesQuoteRequest": {
        "properties": {
          "duration_s": {
            "type": "number",
            "title": "Duration S"
          },
          "sdh": {
            "type": "boolean",
            "title": "Sdh"
          },
          "kind": {
            "type": "string",
            "const": "subtitles",
            "title": "Kind",
            "default": "subtitles"
          },
          "src_language": {
            "type": "string",
            "title": "Src Language"
          },
          "dst_language": {
            "type": "string",
            "title": "Dst Language"
          }
        },
        "type": "object",
        "required": [
          "duration_s",
          "sdh",
          "src_language",
          "dst_language"
        ],
        "title": "SubtitlesQuoteRequest"
      },
      "SubtitlesQuoteResponse": {
        "properties": {
          "amount_usd": {
            "type": "number",
            "title": "Amount Usd"
          },
          "total_amount_usd": {
            "type": "number",
            "title": "Total Amount Usd"
          },
          "base_rate": {
            "type": "number",
            "title": "Base Rate"
          },
          "discount_percent": {
            "type": "number",
            "title": "Discount Percent"
          },
          "min_quantity_min": {
            "type": "number",
            "title": "Min Quantity Min"
          },
          "billed_minutes": {
            "type": "number",
            "title": "Billed Minutes"
          },
          "duration_s": {
            "type": "number",
            "title": "Duration S"
          },
          "sdh_multiplier": {
            "type": "number",
            "title": "Sdh Multiplier"
          },
          "kind": {
            "type": "string",
            "const": "subtitles",
            "title": "Kind",
            "default": "subtitles"
          },
          "src_language": {
            "type": "string",
            "title": "Src Language"
          },
          "dst_language": {
            "type": "string",
            "title": "Dst Language"
          }
        },
        "type": "object",
        "required": [
          "amount_usd",
          "total_amount_usd",
          "base_rate",
          "discount_percent",
          "min_quantity_min",
          "billed_minutes",
          "duration_s",
          "sdh_multiplier",
          "src_language",
          "dst_language"
        ],
        "title": "SubtitlesQuoteResponse"
      },
      "SubtitlesTaskContent": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "subtitles",
            "title": "Kind",
            "default": "subtitles"
          },
          "audio_file": {
            "$ref": "#/components/schemas/FileResponseModel"
          },
          "src_language": {
            "type": "string",
            "title": "Src Language"
          },
          "dst_language": {
            "type": "string",
            "title": "Dst Language"
          },
          "src_subs": {
            "$ref": "#/components/schemas/Subtitles-Output"
          },
          "dst_subs": {
            "$ref": "#/components/schemas/Subtitles-Output"
          }
        },
        "type": "object",
        "required": [
          "audio_file",
          "src_language",
          "dst_language",
          "src_subs",
          "dst_subs"
        ],
        "title": "SubtitlesTaskContent"
      },
      "SubtitlesTaskDescriptionMetaDbModel": {
        "properties": {
          "media": {
            "$ref": "#/components/schemas/MediaMeta"
          },
          "audio_file_16k_id": {
            "type": "string",
            "format": "uuid",
            "title": "Audio File 16K Id"
          },
          "duration_s": {
            "type": "number",
            "title": "Duration S"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "initial_subtitles": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Initial Subtitles"
          },
          "src_language": {
            "type": "string",
            "title": "Src Language"
          },
          "dst_language": {
            "type": "string",
            "title": "Dst Language"
          }
        },
        "type": "object",
        "required": [
          "media",
          "audio_file_16k_id",
          "duration_s",
          "name",
          "initial_subtitles",
          "src_language",
          "dst_language"
        ],
        "title": "SubtitlesTaskDescriptionMetaDbModel"
      },
      "SubtitlesTaskFeedback": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "subtitles",
            "title": "Kind"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "status": {
            "$ref": "#/components/schemas/ReviewStatus"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "comments",
          "status"
        ],
        "title": "SubtitlesTaskFeedback"
      },
      "SubtitlesTransformRequest": {
        "properties": {
          "system_prompt": {
            "type": "string",
            "title": "System Prompt"
          },
          "chunk_prompt": {
            "type": "string",
            "title": "Chunk Prompt"
          },
          "subtitles": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Srt"
              },
              {
                "$ref": "#/components/schemas/Raw-Input"
              }
            ],
            "title": "Subtitles",
            "discriminator": {
              "propertyName": "kind",
              "mapping": {
                "raw": "#/components/schemas/Raw-Input",
                "srt": "#/components/schemas/Srt"
              }
            }
          },
          "output_format": {
            "$ref": "#/components/schemas/SubtitlesFormat"
          }
        },
        "type": "object",
        "required": [
          "system_prompt",
          "chunk_prompt",
          "subtitles",
          "output_format"
        ],
        "title": "SubtitlesTransformRequest"
      },
      "SubtitlesTransformResponse": {
        "properties": {
          "transformed": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Srt"
              },
              {
                "$ref": "#/components/schemas/Raw-Output"
              }
            ],
            "title": "Transformed",
            "discriminator": {
              "propertyName": "kind",
              "mapping": {
                "raw": "#/components/schemas/Raw-Output",
                "srt": "#/components/schemas/Srt"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "transformed"
        ],
        "title": "SubtitlesTransformResponse"
      },
      "SupportedVoice": {
        "properties": {
          "label": {
            "type": "string",
            "minLength": 1,
            "title": "Label"
          },
          "voice_id": {
            "type": "string",
            "minLength": 1,
            "title": "Voice Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "model_family": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSModelFamily"
              },
              {
                "type": "null"
              }
            ]
          },
          "optimize_streaming_latency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSOptimizeStreamingLatency"
              },
              {
                "type": "null"
              }
            ]
          },
          "stability": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability"
          },
          "speed": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.2,
                "minimum": 0.7
              },
              {
                "type": "null"
              }
            ],
            "title": "Speed"
          },
          "similarity_boost": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Boost"
          }
        },
        "type": "object",
        "required": [
          "label",
          "voice_id"
        ],
        "title": "SupportedVoice"
      },
      "SwitchChatBranchResponseModel": {
        "properties": {
          "graph_updates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/SelectionGroup"
            },
            "type": "object",
            "title": "Graph Updates"
          }
        },
        "type": "object",
        "required": [
          "graph_updates"
        ],
        "title": "SwitchChatBranchResponseModel"
      },
      "SystemToolConfig-Input": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete.",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "type": {
            "type": "string",
            "const": "system",
            "title": "Type",
            "description": "The type of tool",
            "default": "system"
          },
          "params": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EndCallToolConfig"
              },
              {
                "$ref": "#/components/schemas/LanguageDetectionToolConfig"
              },
              {
                "$ref": "#/components/schemas/TransferToAgentToolConfig"
              },
              {
                "$ref": "#/components/schemas/TransferToNumberToolConfig-Input"
              },
              {
                "$ref": "#/components/schemas/SkipTurnToolConfig"
              },
              {
                "$ref": "#/components/schemas/PlayDTMFToolConfig"
              },
              {
                "$ref": "#/components/schemas/VoicemailDetectionToolConfig"
              }
            ],
            "title": "Params",
            "discriminator": {
              "propertyName": "system_tool_type",
              "mapping": {
                "end_call": "#/components/schemas/EndCallToolConfig",
                "language_detection": "#/components/schemas/LanguageDetectionToolConfig",
                "play_keypad_touch_tone": "#/components/schemas/PlayDTMFToolConfig",
                "skip_turn": "#/components/schemas/SkipTurnToolConfig",
                "transfer_to_agent": "#/components/schemas/TransferToAgentToolConfig",
                "transfer_to_number": "#/components/schemas/TransferToNumberToolConfig-Input",
                "voicemail_detection": "#/components/schemas/VoicemailDetectionToolConfig"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "params"
        ],
        "title": "SystemToolConfig",
        "description": "A system tool is a tool that is used to call a system method in the server",
        "example": {
          "description": "Ends the current conversation",
          "name": "end_call",
          "params": {
            "system_tool_type": "end_call"
          },
          "type": "system"
        }
      },
      "SystemToolConfig-Output": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete.",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "type": {
            "type": "string",
            "const": "system",
            "title": "Type",
            "description": "The type of tool",
            "default": "system"
          },
          "params": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EndCallToolConfig"
              },
              {
                "$ref": "#/components/schemas/LanguageDetectionToolConfig"
              },
              {
                "$ref": "#/components/schemas/TransferToAgentToolConfig"
              },
              {
                "$ref": "#/components/schemas/TransferToNumberToolConfig-Output"
              },
              {
                "$ref": "#/components/schemas/SkipTurnToolConfig"
              },
              {
                "$ref": "#/components/schemas/PlayDTMFToolConfig"
              },
              {
                "$ref": "#/components/schemas/VoicemailDetectionToolConfig"
              }
            ],
            "title": "Params",
            "discriminator": {
              "propertyName": "system_tool_type",
              "mapping": {
                "end_call": "#/components/schemas/EndCallToolConfig",
                "language_detection": "#/components/schemas/LanguageDetectionToolConfig",
                "play_keypad_touch_tone": "#/components/schemas/PlayDTMFToolConfig",
                "skip_turn": "#/components/schemas/SkipTurnToolConfig",
                "transfer_to_agent": "#/components/schemas/TransferToAgentToolConfig",
                "transfer_to_number": "#/components/schemas/TransferToNumberToolConfig-Output",
                "voicemail_detection": "#/components/schemas/VoicemailDetectionToolConfig"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "params"
        ],
        "title": "SystemToolConfig",
        "description": "A system tool is a tool that is used to call a system method in the server",
        "example": {
          "description": "Ends the current conversation",
          "name": "end_call",
          "params": {
            "system_tool_type": "end_call"
          },
          "type": "system"
        }
      },
      "TTSConversationalConfig-Input": {
        "properties": {
          "model_id": {
            "$ref": "#/components/schemas/TTSConversationalModel",
            "description": "The model to use for TTS",
            "default": "eleven_turbo_v2"
          },
          "voice_id": {
            "type": "string",
            "minLength": 0,
            "title": "Voice Id",
            "description": "The voice ID to use for TTS",
            "default": "bYTqZQo3Jz7LQtmGTgwi",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "supported_voices": {
            "items": {
              "$ref": "#/components/schemas/SupportedVoice"
            },
            "type": "array",
            "title": "Supported Voices",
            "description": "Additional supported voices for the agent"
          },
          "agent_output_audio_format": {
            "$ref": "#/components/schemas/TTSOutputFormat",
            "description": "The audio format to use for TTS",
            "default": "pcm_16000"
          },
          "optimize_streaming_latency": {
            "$ref": "#/components/schemas/TTSOptimizeStreamingLatency",
            "description": "The optimization for streaming latency",
            "default": 3
          },
          "stability": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Stability",
            "description": "The stability of generated speech",
            "default": 0.5
          },
          "speed": {
            "type": "number",
            "maximum": 1.2,
            "minimum": 0.7,
            "title": "Speed",
            "description": "The speed of generated speech",
            "default": 1
          },
          "similarity_boost": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Boost",
            "description": "The similarity boost for generated speech",
            "default": 0.8
          },
          "pronunciation_dictionary_locators": {
            "items": {
              "$ref": "#/components/schemas/PydanticPronunciationDictionaryVersionLocator"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Locators",
            "description": "The pronunciation dictionary locators"
          }
        },
        "type": "object",
        "title": "TTSConversationalConfig",
        "example": {
          "agent_output_audio_format": "pcm_16000",
          "model_id": "eleven_turbo_v2",
          "optimize_streaming_latency": 3,
          "pronunciation_dictionary_locators": [],
          "similarity_boost": 0.8,
          "speed": 1,
          "stability": 0.5,
          "voice_id": "cjVigY5qzO86Huf0OWal"
        }
      },
      "TTSConversationalConfig-Output": {
        "properties": {
          "model_id": {
            "$ref": "#/components/schemas/TTSConversationalModel",
            "description": "The model to use for TTS",
            "default": "eleven_turbo_v2"
          },
          "voice_id": {
            "type": "string",
            "minLength": 0,
            "title": "Voice Id",
            "description": "The voice ID to use for TTS",
            "default": "bYTqZQo3Jz7LQtmGTgwi",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "supported_voices": {
            "items": {
              "$ref": "#/components/schemas/SupportedVoice"
            },
            "type": "array",
            "title": "Supported Voices",
            "description": "Additional supported voices for the agent"
          },
          "agent_output_audio_format": {
            "$ref": "#/components/schemas/TTSOutputFormat",
            "description": "The audio format to use for TTS",
            "default": "pcm_16000"
          },
          "optimize_streaming_latency": {
            "$ref": "#/components/schemas/TTSOptimizeStreamingLatency",
            "description": "The optimization for streaming latency",
            "default": 3
          },
          "stability": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Stability",
            "description": "The stability of generated speech",
            "default": 0.5
          },
          "speed": {
            "type": "number",
            "maximum": 1.2,
            "minimum": 0.7,
            "title": "Speed",
            "description": "The speed of generated speech",
            "default": 1
          },
          "similarity_boost": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Boost",
            "description": "The similarity boost for generated speech",
            "default": 0.8
          },
          "pronunciation_dictionary_locators": {
            "items": {
              "$ref": "#/components/schemas/PydanticPronunciationDictionaryVersionLocator"
            },
            "type": "array",
            "title": "Pronunciation Dictionary Locators",
            "description": "The pronunciation dictionary locators"
          }
        },
        "type": "object",
        "title": "TTSConversationalConfig",
        "example": {
          "agent_output_audio_format": "pcm_16000",
          "model_id": "eleven_turbo_v2",
          "optimize_streaming_latency": 3,
          "pronunciation_dictionary_locators": [],
          "similarity_boost": 0.8,
          "speed": 1,
          "stability": 0.5,
          "voice_id": "cjVigY5qzO86Huf0OWal"
        }
      },
      "TTSConversationalConfigOverride": {
        "properties": {
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id",
            "description": "The voice ID to use for TTS",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          }
        },
        "type": "object",
        "title": "TTSConversationalConfigOverride",
        "example": {
          "voice_id": "cjVigY5qzO86Huf0OWal"
        }
      },
      "TTSConversationalConfigOverrideConfig": {
        "properties": {
          "voice_id": {
            "type": "boolean",
            "title": "Voice Id",
            "description": "Whether to allow overriding the voice_id field.",
            "default": false
          }
        },
        "type": "object",
        "title": "TTSConversationalConfigOverrideConfig"
      },
      "TTSConversationalConfigWorkflowOverride-Input": {
        "properties": {
          "model_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSConversationalModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The model to use for TTS"
          },
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id",
            "description": "The voice ID to use for TTS",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "supported_voices": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SupportedVoice"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supported Voices",
            "description": "Additional supported voices for the agent"
          },
          "agent_output_audio_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSOutputFormat"
              },
              {
                "type": "null"
              }
            ],
            "description": "The audio format to use for TTS"
          },
          "optimize_streaming_latency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSOptimizeStreamingLatency"
              },
              {
                "type": "null"
              }
            ],
            "description": "The optimization for streaming latency"
          },
          "stability": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability",
            "description": "The stability of generated speech"
          },
          "speed": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speed",
            "description": "The speed of generated speech"
          },
          "similarity_boost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Boost",
            "description": "The similarity boost for generated speech"
          },
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PydanticPronunciationDictionaryVersionLocator"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "The pronunciation dictionary locators"
          }
        },
        "type": "object",
        "title": "TTSConversationalConfigWorkflowOverride",
        "example": {
          "agent_output_audio_format": "pcm_16000",
          "model_id": "eleven_turbo_v2",
          "optimize_streaming_latency": 3,
          "pronunciation_dictionary_locators": [],
          "similarity_boost": 0.8,
          "speed": 1,
          "stability": 0.5,
          "voice_id": "cjVigY5qzO86Huf0OWal"
        }
      },
      "TTSConversationalConfigWorkflowOverride-Output": {
        "properties": {
          "model_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSConversationalModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The model to use for TTS"
          },
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id",
            "description": "The voice ID to use for TTS",
            "x-convai-client-override": true,
            "x-convai-language-override": true
          },
          "supported_voices": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SupportedVoice"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supported Voices",
            "description": "Additional supported voices for the agent"
          },
          "agent_output_audio_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSOutputFormat"
              },
              {
                "type": "null"
              }
            ],
            "description": "The audio format to use for TTS"
          },
          "optimize_streaming_latency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSOptimizeStreamingLatency"
              },
              {
                "type": "null"
              }
            ],
            "description": "The optimization for streaming latency"
          },
          "stability": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability",
            "description": "The stability of generated speech"
          },
          "speed": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speed",
            "description": "The speed of generated speech"
          },
          "similarity_boost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Boost",
            "description": "The similarity boost for generated speech"
          },
          "pronunciation_dictionary_locators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PydanticPronunciationDictionaryVersionLocator"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pronunciation Dictionary Locators",
            "description": "The pronunciation dictionary locators"
          }
        },
        "type": "object",
        "title": "TTSConversationalConfigWorkflowOverride",
        "example": {
          "agent_output_audio_format": "pcm_16000",
          "model_id": "eleven_turbo_v2",
          "optimize_streaming_latency": 3,
          "pronunciation_dictionary_locators": [],
          "similarity_boost": 0.8,
          "speed": 1,
          "stability": 0.5,
          "voice_id": "cjVigY5qzO86Huf0OWal"
        }
      },
      "TTSConversationalModel": {
        "type": "string",
        "enum": [
          "eleven_turbo_v2",
          "eleven_turbo_v2_5",
          "eleven_flash_v2",
          "eleven_flash_v2_5"
        ],
        "title": "TTSConversationalModel"
      },
      "TTSElementResponseModel": {
        "properties": {
          "duration_ms": {
            "type": "integer",
            "title": "Duration Ms"
          },
          "text_alignment": {
            "$ref": "#/components/schemas/TextAlignmentResponseModel"
          }
        },
        "type": "object",
        "required": [
          "duration_ms",
          "text_alignment"
        ],
        "title": "TTSElementResponseModel"
      },
      "TTSModelFamily": {
        "type": "string",
        "enum": [
          "turbo",
          "flash",
          "multilingual"
        ],
        "title": "TTSModelFamily"
      },
      "TTSNodeDBModel": {
        "properties": {
          "node_id": {
            "type": "string",
            "title": "Node Id"
          },
          "settings": {
            "$ref": "#/components/schemas/TTSNodeDBModelSettings"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "type": {
            "type": "string",
            "const": "tts_node",
            "title": "Type",
            "default": "tts_node"
          },
          "offset_ms": {
            "type": "integer",
            "title": "Offset Ms",
            "default": 0
          },
          "start_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time Ms"
          },
          "end_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time Ms"
          },
          "number_of_uncharged_character_tokens": {
            "type": "integer",
            "title": "Number Of Uncharged Character Tokens",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "node_id",
          "settings",
          "text"
        ],
        "title": "TTSNodeDBModel"
      },
      "TTSNodeDBModelSettings": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "global_voice_settings_enabled": {
            "type": "boolean",
            "title": "Global Voice Settings Enabled",
            "default": true
          },
          "voice_settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSNodeVoiceSettingsOverrideDBModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "voice_id"
        ],
        "title": "TTSNodeDBModelSettings"
      },
      "TTSNodeResponseModel": {
        "properties": {
          "node_id": {
            "type": "string",
            "title": "Node Id"
          },
          "type": {
            "type": "string",
            "const": "tts_node",
            "title": "Type"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "offset_ms": {
            "type": "integer",
            "title": "Offset Ms"
          },
          "start_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time Ms"
          },
          "end_time_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time Ms"
          },
          "settings": {
            "$ref": "#/components/schemas/ProjectsSpeechSynthesisNodeSettingsResponseModel"
          },
          "tts_element": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TTSElementResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "node_id",
          "type",
          "text",
          "offset_ms",
          "settings"
        ],
        "title": "TTSNodeResponseModel"
      },
      "TTSNodeVoiceSettingsOverrideDBModel": {
        "properties": {
          "stability": {
            "type": "number",
            "title": "Stability"
          },
          "similarity_boost": {
            "type": "number",
            "title": "Similarity Boost"
          },
          "style": {
            "type": "number",
            "title": "Style",
            "default": 0
          },
          "use_speaker_boost": {
            "type": "boolean",
            "title": "Use Speaker Boost",
            "default": true
          },
          "speed": {
            "type": "number",
            "title": "Speed",
            "default": 1
          },
          "volume_gain": {
            "type": "number",
            "title": "Volume Gain",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "stability",
          "similarity_boost"
        ],
        "title": "TTSNodeVoiceSettingsOverrideDBModel"
      },
      "TTSOptimizeStreamingLatency": {
        "type": "integer",
        "enum": [0, 1, 2, 3, 4],
        "title": "TTSOptimizeStreamingLatency"
      },
      "TTSOutputFormat": {
        "type": "string",
        "enum": [
          "pcm_8000",
          "pcm_16000",
          "pcm_22050",
          "pcm_24000",
          "pcm_44100",
          "pcm_48000",
          "ulaw_8000"
        ],
        "title": "TTSOutputFormat"
      },
      "TagDbModel": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/TagKind"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "value"
        ],
        "title": "TagDbModel"
      },
      "TagKind": {
        "type": "string",
        "enum": [
          "lang",
          "src_lang",
          "dst_lang",
          "task_kind",
          "extra"
        ],
        "title": "TagKind"
      },
      "TagModel": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/TagKind"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "value"
        ],
        "title": "TagModel"
      },
      "TaskContentUpdateBody": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/TaskKind"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id"
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TranscriptionTaskContentUpdate-Input"
              },
              {
                "$ref": "#/components/schemas/ReviewTaskContentUpdate"
              },
              {
                "$ref": "#/components/schemas/TranscriptionTaskV2Update"
              }
            ],
            "title": "Content"
          },
          "labeling_responses": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LabelingResponseCreation"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "kind",
          "version_id",
          "content"
        ],
        "title": "TaskContentUpdateBody"
      },
      "TaskDescriptionContentItem": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "task_description",
            "title": "Kind"
          },
          "ref_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ref Id"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "ref_id"
        ],
        "title": "TaskDescriptionContentItem"
      },
      "TaskDescriptionContentItemResponse": {
        "properties": {
          "ref_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ref Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "kind": {
            "type": "string",
            "const": "task_description",
            "title": "Kind"
          },
          "state": {
            "$ref": "#/components/schemas/TaskDescriptionState"
          },
          "task_kind": {
            "type": "string",
            "title": "Task Kind"
          }
        },
        "type": "object",
        "required": [
          "ref_id",
          "name",
          "kind",
          "state",
          "task_kind"
        ],
        "title": "TaskDescriptionContentItemResponse"
      },
      "TaskDescriptionCreation": {
        "properties": {
          "description_id": {
            "type": "string",
            "format": "uuid",
            "title": "Description Id"
          },
          "payment_info": {
            "$ref": "#/components/schemas/ChargeInfo"
          },
          "task_quote_details": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranscriptionQuoteResponse"
              },
              {
                "$ref": "#/components/schemas/CaptionsQuoteResponse"
              },
              {
                "$ref": "#/components/schemas/SubtitlesQuoteResponse"
              },
              {
                "$ref": "#/components/schemas/DubsQuoteResponse"
              }
            ],
            "title": "Task Quote Details",
            "discriminator": {
              "propertyName": "kind",
              "mapping": {
                "captions": "#/components/schemas/CaptionsQuoteResponse",
                "dub": "#/components/schemas/DubsQuoteResponse",
                "subtitles": "#/components/schemas/SubtitlesQuoteResponse",
                "transcription_v2": "#/components/schemas/TranscriptionQuoteResponse"
              }
            }
          },
          "instructions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TranscriptionInstructions"
              },
              {
                "$ref": "#/components/schemas/xi_backend__routes__productions__models__request__request_models__SubtitlesCommonInstructions-Output"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          }
        },
        "type": "object",
        "required": [
          "description_id",
          "payment_info",
          "task_quote_details",
          "instructions"
        ],
        "title": "TaskDescriptionCreation"
      },
      "TaskDescriptionEventDbModel": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "kind": {
            "$ref": "#/components/schemas/TaskDescriptionEventKind"
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CancelEventMeta"
              },
              {
                "$ref": "#/components/schemas/StripePaymentReceivedEventMeta"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "kind",
          "meta"
        ],
        "title": "TaskDescriptionEventDbModel"
      },
      "TaskDescriptionEventKind": {
        "type": "string",
        "enum": [
          "create",
          "payment_received",
          "cancel",
          "delivered"
        ],
        "title": "TaskDescriptionEventKind"
      },
      "TaskDescriptionPreviewModel": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "state": {
            "$ref": "#/components/schemas/TaskDescriptionState"
          },
          "completed": {
            "type": "boolean",
            "title": "Completed"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagDbModel"
            },
            "type": "array",
            "title": "Tags"
          },
          "kind": {
            "$ref": "#/components/schemas/TaskKind"
          },
          "bounty_usd": {
            "type": "number",
            "title": "Bounty Usd"
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TranscriptionDescriptionMetaModel"
              },
              {
                "$ref": "#/components/schemas/SubtitlesDesctiptionMetaModel"
              },
              {
                "$ref": "#/components/schemas/DubsDescriptionMetaModel"
              }
            ],
            "title": "Meta"
          },
          "instructions": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/TranscriptionTaskInstructions"
                  },
                  {
                    "$ref": "#/components/schemas/xi_backend__routes__productions__models__response__response_models__SubtitlesCommonInstructions"
                  }
                ],
                "discriminator": {
                  "propertyName": "kind",
                  "mapping": {
                    "captions": "#/components/schemas/xi_backend__routes__productions__models__response__response_models__SubtitlesCommonInstructions",
                    "subtitles": "#/components/schemas/xi_backend__routes__productions__models__response__response_models__SubtitlesCommonInstructions",
                    "transcription": "#/components/schemas/TranscriptionTaskInstructions",
                    "transcription_v2": "#/components/schemas/TranscriptionTaskInstructions"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "labeling_questionnaire_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labeling Questionnaire Id"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          }
        },
        "type": "object",
        "required": [
          "id",
          "state",
          "completed",
          "tags",
          "kind",
          "bounty_usd",
          "meta",
          "instructions",
          "labeling_questionnaire_id",
          "priority"
        ],
        "title": "TaskDescriptionPreviewModel"
      },
      "TaskDescriptionState": {
        "type": "string",
        "enum": [
          "init",
          "created",
          "paid",
          "cancelled",
          "done"
        ],
        "title": "TaskDescriptionState"
      },
      "TaskInstanceEventKind": {
        "type": "string",
        "enum": [
          "claim",
          "assign",
          "reject",
          "submit",
          "approve",
          "auto_approve",
          "done",
          "settle",
          "assign_reviewer",
          "content_update",
          "update_deadline",
          "revoke",
          "review_revoked",
          "manual_assign",
          "deliver_feedback",
          "ack_feedback"
        ],
        "title": "TaskInstanceEventKind",
        "description": "Represent events types for task instances, as well a state transitions in the task instance state machine."
      },
      "TaskInstanceEventResponseModel": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "kind": {
            "$ref": "#/components/schemas/TaskInstanceEventKind"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "kind"
        ],
        "title": "TaskInstanceEventResponseModel"
      },
      "TaskInstanceListModel": {
        "properties": {
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/TaskInstanceWithDescriptionModel"
            },
            "type": "array",
            "title": "Tasks"
          }
        },
        "type": "object",
        "required": [
          "tasks"
        ],
        "title": "TaskInstanceListModel"
      },
      "TaskInstanceModel": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "state": {
            "$ref": "#/components/schemas/TaskInstanceState"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/TaskInstanceEventResponseModel"
            },
            "type": "array",
            "title": "Events"
          },
          "kind": {
            "$ref": "#/components/schemas/TaskKind"
          },
          "submission_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Deadline"
          },
          "version_id": {
            "type": "integer",
            "title": "Version Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "owner_id",
          "state",
          "events",
          "kind",
          "submission_deadline",
          "version_id"
        ],
        "title": "TaskInstanceModel"
      },
      "TaskInstanceState": {
        "type": "string",
        "enum": [
          "unclaimed",
          "claimed",
          "in_progress",
          "assigned",
          "submitted",
          "reviewer_assigned",
          "rejected",
          "accepted",
          "has_feedback",
          "done",
          "settled",
          "revoked"
        ],
        "title": "TaskInstanceState"
      },
      "TaskInstanceWithDescriptionModel": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "state": {
            "$ref": "#/components/schemas/TaskInstanceState"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/TaskInstanceEventResponseModel"
            },
            "type": "array",
            "title": "Events"
          },
          "kind": {
            "$ref": "#/components/schemas/TaskKind"
          },
          "submission_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Deadline"
          },
          "version_id": {
            "type": "integer",
            "title": "Version Id"
          },
          "description": {
            "$ref": "#/components/schemas/TaskDescriptionPreviewModel"
          }
        },
        "type": "object",
        "required": [
          "id",
          "owner_id",
          "state",
          "events",
          "kind",
          "submission_deadline",
          "version_id",
          "description"
        ],
        "title": "TaskInstanceWithDescriptionModel"
      },
      "TaskKind": {
        "type": "string",
        "enum": [
          "review",
          "transcription",
          "transcription_v2",
          "captions",
          "subtitles",
          "dub"
        ],
        "title": "TaskKind"
      },
      "TeamMembershipResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "$ref": "#/components/schemas/TeamRole"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "role"
        ],
        "title": "TeamMembershipResponse"
      },
      "TeamResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/UserPreview"
            },
            "type": "array",
            "title": "Members"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "members"
        ],
        "title": "TeamResponse"
      },
      "TeamRole": {
        "type": "string",
        "enum": [
          "owner",
          "member",
          "leader"
        ],
        "title": "TeamRole"
      },
      "TeamTasksResponse": {
        "properties": {
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/EnrichedTeamTask"
            },
            "type": "array",
            "title": "Tasks"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "tasks",
          "count"
        ],
        "title": "TeamTasksResponse"
      },
      "TelephonyProvider": {
        "type": "string",
        "enum": [
          "twilio",
          "sip_trunk"
        ],
        "title": "TelephonyProvider"
      },
      "TestConditionResultCommonModel": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EvaluationSuccessResult"
          },
          "rationale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rationale"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "TestConditionResultCommonModel"
      },
      "TestRunStatus": {
        "type": "string",
        "enum": [
          "pending",
          "passed",
          "failed"
        ],
        "title": "TestRunStatus"
      },
      "TextAlignmentResponseModel": {
        "properties": {
          "characters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Characters"
          },
          "character_start_times_ms": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Character Start Times Ms"
          },
          "character_end_times_ms": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Character End Times Ms"
          }
        },
        "type": "object",
        "required": [
          "characters",
          "character_start_times_ms",
          "character_end_times_ms"
        ],
        "title": "TextAlignmentResponseModel"
      },
      "TextContent": {
        "properties": {
          "type": {
            "type": "string",
            "const": "text",
            "title": "Type"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "annotations": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Annotations"
              },
              {
                "type": "null"
              }
            ]
          },
          "_meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "type",
          "text"
        ],
        "title": "TextContent",
        "description": "Text content for a message."
      },
      "TextLabelingAnswerDbModel": {
        "properties": {
          "question_id": {
            "type": "string",
            "format": "uuid",
            "title": "Question Id"
          },
          "type": {
            "type": "string",
            "const": "text",
            "title": "Type"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "question_id",
          "type",
          "value"
        ],
        "title": "TextLabelingAnswerDbModel"
      },
      "TextNodeDBModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "TextNodeDBModel"
      },
      "TextResourceContents": {
        "properties": {
          "uri": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Uri"
          },
          "mimeType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mimetype"
          },
          "_meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "uri",
          "text"
        ],
        "title": "TextResourceContents",
        "description": "Text contents of a resource."
      },
      "TimeRange": {
        "properties": {
          "start_ms": {
            "type": "integer",
            "title": "Start Ms"
          },
          "end_ms": {
            "type": "integer",
            "title": "End Ms"
          }
        },
        "type": "object",
        "required": [
          "start_ms",
          "end_ms"
        ],
        "title": "TimeRange"
      },
      "TokenResponseModel": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "TokenResponseModel"
      },
      "Tool": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "inputSchema": {
            "type": "object",
            "title": "Inputschema"
          },
          "outputSchema": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputschema"
          },
          "annotations": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ToolAnnotations"
              },
              {
                "type": "null"
              }
            ]
          },
          "_meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "name",
          "inputSchema"
        ],
        "title": "Tool",
        "description": "Definition for a tool the client can call."
      },
      "ToolAnnotations": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "readOnlyHint": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readonlyhint"
          },
          "destructiveHint": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Destructivehint"
          },
          "idempotentHint": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Idempotenthint"
          },
          "openWorldHint": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Openworldhint"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "ToolAnnotations",
        "description": "Additional properties describing a Tool to clients.\n\nNOTE: all properties in ToolAnnotations are **hints**.\nThey are not guaranteed to provide a faithful description of\ntool behavior (including descriptive properties like `title`).\n\nClients should never make tool use decisions based on ToolAnnotations\nreceived from untrusted servers."
      },
      "ToolMockConfig": {
        "properties": {
          "default_return_value": {
            "type": "string",
            "title": "Default Return Value",
            "default": "Tool Called."
          },
          "default_is_error": {
            "type": "boolean",
            "title": "Default Is Error",
            "default": false
          }
        },
        "type": "object",
        "title": "ToolMockConfig"
      },
      "ToolRequestModel": {
        "properties": {
          "tool_config": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/WebhookToolConfig-Input"
              },
              {
                "$ref": "#/components/schemas/ClientToolConfig-Input"
              },
              {
                "$ref": "#/components/schemas/SystemToolConfig-Input"
              },
              {
                "$ref": "#/components/schemas/MCPToolConfig-Input"
              }
            ],
            "title": "Tool Config",
            "description": "Configuration for the tool",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "client": "#/components/schemas/ClientToolConfig-Input",
                "mcp": "#/components/schemas/MCPToolConfig-Input",
                "system": "#/components/schemas/SystemToolConfig-Input",
                "webhook": "#/components/schemas/WebhookToolConfig-Input"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "tool_config"
        ],
        "title": "ToolRequestModel"
      },
      "ToolResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "tool_config": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/WebhookToolConfig-Output"
              },
              {
                "$ref": "#/components/schemas/ClientToolConfig-Output"
              },
              {
                "$ref": "#/components/schemas/SystemToolConfig-Output"
              },
              {
                "$ref": "#/components/schemas/MCPToolConfig-Output"
              }
            ],
            "title": "Tool Config",
            "description": "The type of tool",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "client": "#/components/schemas/ClientToolConfig-Output",
                "mcp": "#/components/schemas/MCPToolConfig-Output",
                "system": "#/components/schemas/SystemToolConfig-Output",
                "webhook": "#/components/schemas/WebhookToolConfig-Output"
              }
            }
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          },
          "usage_stats": {
            "$ref": "#/components/schemas/ToolUsageStatsResponseModel"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tool_config",
          "access_info",
          "usage_stats"
        ],
        "title": "ToolResponseModel"
      },
      "ToolType": {
        "type": "string",
        "enum": [
          "system",
          "webhook",
          "client",
          "mcp"
        ],
        "title": "ToolType"
      },
      "ToolUsageStatsResponseModel": {
        "properties": {
          "total_calls": {
            "type": "integer",
            "title": "Total Calls",
            "description": "The total number of calls to the tool",
            "default": 0
          },
          "avg_latency_secs": {
            "type": "number",
            "title": "Avg Latency Secs"
          }
        },
        "type": "object",
        "required": [
          "avg_latency_secs"
        ],
        "title": "ToolUsageStatsResponseModel"
      },
      "ToolsResponseModel": {
        "properties": {
          "tools": {
            "items": {
              "$ref": "#/components/schemas/ToolResponseModel"
            },
            "type": "array",
            "title": "Tools"
          }
        },
        "type": "object",
        "required": [
          "tools"
        ],
        "title": "ToolsResponseModel"
      },
      "TopCountryMetricResponseModel": {
        "properties": {
          "country_code": {
            "type": "string",
            "title": "Country Code"
          },
          "country_name": {
            "type": "string",
            "title": "Country Name"
          },
          "listeners": {
            "type": "integer",
            "title": "Listeners"
          },
          "previous_period_listeners": {
            "type": "integer",
            "title": "Previous Period Listeners"
          },
          "trend_percentage": {
            "type": "integer",
            "title": "Trend Percentage"
          }
        },
        "type": "object",
        "required": [
          "country_code",
          "country_name",
          "listeners",
          "previous_period_listeners",
          "trend_percentage"
        ],
        "title": "TopCountryMetricResponseModel"
      },
      "TopVoiceMetricResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "voice_name": {
            "type": "string",
            "title": "Voice Name"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "voice_name"
        ],
        "title": "TopVoiceMetricResponseModel"
      },
      "Transcript": {
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version",
            "default": 1
          },
          "speakers": {
            "items": {
              "$ref": "#/components/schemas/xi_backend__routes__productions__utils__transcripts__segmentation__utils__Speaker"
            },
            "type": "array",
            "title": "Speakers"
          },
          "word_start_times": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Word Start Times"
          },
          "word_end_times": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Word End Times"
          },
          "segments": {
            "items": {
              "$ref": "#/components/schemas/xi_backend__routes__productions__utils__transcripts__segmentation__utils__Segment"
            },
            "type": "array",
            "title": "Segments"
          },
          "words": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Words"
          },
          "word_types": {
            "items": {
              "$ref": "#/components/schemas/WordType"
            },
            "type": "array",
            "title": "Word Types"
          }
        },
        "type": "object",
        "required": [
          "speakers",
          "word_start_times",
          "word_end_times",
          "segments",
          "words",
          "word_types"
        ],
        "title": "Transcript",
        "description": "An instance of a transcript.\nAll instants/durations are in integral millis"
      },
      "TranscriptDiffResponse": {
        "properties": {
          "initial": {
            "$ref": "#/components/schemas/Transcript"
          },
          "final": {
            "$ref": "#/components/schemas/Transcript"
          }
        },
        "type": "object",
        "required": [
          "initial",
          "final"
        ],
        "title": "TranscriptDiffResponse"
      },
      "TranscriptExportFormat": {
        "type": "string",
        "enum": [
          "html",
          "txt",
          "json",
          "pdf",
          "docx"
        ],
        "title": "TranscriptExportFormat"
      },
      "TranscriptSegmentingOptions": {
        "properties": {
          "segment_on_silence_longer_than_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than Ms"
          },
          "max_segment_duration_ms": {
            "type": "integer",
            "title": "Max Segment Duration Ms",
            "default": 20000
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          },
          "min_segment_duration_ms": {
            "type": "integer",
            "title": "Min Segment Duration Ms",
            "default": 60
          }
        },
        "type": "object",
        "title": "TranscriptSegmentingOptions"
      },
      "TranscriptUpdatePatch": {
        "properties": {
          "kind": {
            "type": "integer",
            "const": 1,
            "title": "Kind",
            "default": 1
          },
          "patch": {
            "items": {
              "$ref": "#/components/schemas/RootModel_Annotated_Union_ReplacePatch__RemovePatch__AddPatch___FieldInfo_annotation_NoneType__required_True__discriminator__op____"
            },
            "type": "array",
            "title": "Patch"
          }
        },
        "type": "object",
        "required": [
          "patch"
        ],
        "title": "TranscriptUpdatePatch"
      },
      "TranscriptUpdateSnapshot": {
        "properties": {
          "kind": {
            "type": "integer",
            "const": 0,
            "title": "Kind"
          },
          "snapshot": {
            "$ref": "#/components/schemas/Transcript"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "snapshot"
        ],
        "title": "TranscriptUpdateSnapshot"
      },
      "TranscriptionDescriptionMetaModel": {
        "properties": {
          "duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration S"
          },
          "verbatim": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verbatim"
          }
        },
        "type": "object",
        "title": "TranscriptionDescriptionMetaModel"
      },
      "TranscriptionFromSttRequest": {
        "properties": {
          "instructions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TranscriptionInstructions"
              },
              {
                "type": "null"
              }
            ]
          },
          "stt_task_id": {
            "type": "string",
            "title": "Stt Task Id"
          },
          "parent_collection_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Collection Id"
          }
        },
        "type": "object",
        "required": [
          "instructions",
          "stt_task_id",
          "parent_collection_id"
        ],
        "title": "TranscriptionFromSttRequest"
      },
      "TranscriptionInstructions": {
        "properties": {
          "verbatim": {
            "type": "boolean",
            "title": "Verbatim",
            "default": false
          },
          "fix_grammar": {
            "type": "boolean",
            "title": "Fix Grammar",
            "default": false
          },
          "event_tags": {
            "type": "boolean",
            "title": "Event Tags",
            "default": false
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comments"
          }
        },
        "type": "object",
        "title": "TranscriptionInstructions"
      },
      "TranscriptionQuoteRequest": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "transcription_v2",
            "title": "Kind",
            "default": "transcription_v2"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "verbatim": {
            "type": "boolean",
            "title": "Verbatim"
          },
          "duration_s": {
            "type": "number",
            "title": "Duration S"
          }
        },
        "type": "object",
        "required": [
          "language",
          "verbatim",
          "duration_s"
        ],
        "title": "TranscriptionQuoteRequest"
      },
      "TranscriptionQuoteResponse": {
        "properties": {
          "amount_usd": {
            "type": "number",
            "title": "Amount Usd"
          },
          "total_amount_usd": {
            "type": "number",
            "title": "Total Amount Usd"
          },
          "base_rate": {
            "type": "number",
            "title": "Base Rate"
          },
          "discount_percent": {
            "type": "number",
            "title": "Discount Percent"
          },
          "kind": {
            "type": "string",
            "const": "transcription_v2",
            "title": "Kind",
            "default": "transcription_v2"
          },
          "min_quantity_min": {
            "type": "number",
            "title": "Min Quantity Min"
          },
          "duration_s": {
            "type": "number",
            "title": "Duration S"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "billed_minutes": {
            "type": "number",
            "title": "Billed Minutes"
          },
          "verbatim_multiplier": {
            "type": "number",
            "title": "Verbatim Multiplier"
          }
        },
        "type": "object",
        "required": [
          "amount_usd",
          "total_amount_usd",
          "base_rate",
          "discount_percent",
          "min_quantity_min",
          "duration_s",
          "language",
          "billed_minutes",
          "verbatim_multiplier"
        ],
        "title": "TranscriptionQuoteResponse"
      },
      "TranscriptionResultDBModel": {
        "properties": {
          "language_code": {
            "type": "string",
            "title": "Language Code"
          },
          "language_probability": {
            "type": "number",
            "title": "Language Probability"
          },
          "words": {
            "items": {
              "$ref": "#/components/schemas/TranscriptionWordDBModel"
            },
            "type": "array",
            "title": "Words"
          }
        },
        "type": "object",
        "required": [
          "language_code",
          "language_probability",
          "words"
        ],
        "title": "TranscriptionResultDBModel"
      },
      "TranscriptionTaskContent": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "transcription",
            "title": "Kind",
            "default": "transcription"
          },
          "transcript": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TranscriptionResultDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "transcript_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TranscriptionTaskContentUpdate-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "audio_file": {
            "$ref": "#/components/schemas/FileResponseModel"
          }
        },
        "type": "object",
        "required": [
          "transcript",
          "transcript_data",
          "audio_file"
        ],
        "title": "TranscriptionTaskContent"
      },
      "TranscriptionTaskContentUpdate-Input": {
        "properties": {
          "transcript": {
            "$ref": "#/components/schemas/Data-Input"
          },
          "schema_version": {
            "type": "integer",
            "title": "Schema Version"
          }
        },
        "type": "object",
        "required": [
          "transcript",
          "schema_version"
        ],
        "title": "TranscriptionTaskContentUpdate"
      },
      "TranscriptionTaskContentUpdate-Output": {
        "properties": {
          "transcript": {
            "$ref": "#/components/schemas/Data-Output"
          },
          "schema_version": {
            "type": "integer",
            "title": "Schema Version"
          }
        },
        "type": "object",
        "required": [
          "transcript",
          "schema_version"
        ],
        "title": "TranscriptionTaskContentUpdate"
      },
      "TranscriptionTaskDescriptionMetaDbModel": {
        "properties": {
          "transcription_task_id": {
            "type": "string",
            "title": "Transcription Task Id"
          },
          "dst_audio_path": {
            "type": "string",
            "title": "Dst Audio Path"
          },
          "media": {
            "$ref": "#/components/schemas/MediaMeta"
          },
          "audio_file_16k_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Audio File 16K Id"
          },
          "duration_s": {
            "type": "number",
            "title": "Duration S"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tag_audio_events": {
            "type": "boolean",
            "title": "Tag Audio Events"
          },
          "biased_keywords": {
            "items": {
              "$ref": "#/components/schemas/BiasedKeywordDbModel"
            },
            "type": "array",
            "title": "Biased Keywords"
          }
        },
        "type": "object",
        "required": [
          "transcription_task_id",
          "dst_audio_path",
          "media",
          "audio_file_16k_id",
          "duration_s",
          "language",
          "name",
          "tag_audio_events",
          "biased_keywords"
        ],
        "title": "TranscriptionTaskDescriptionMetaDbModel"
      },
      "TranscriptionTaskFeedback": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "transcription_v2",
            "title": "Kind"
          },
          "comments": {
            "type": "string",
            "title": "Comments"
          },
          "status": {
            "$ref": "#/components/schemas/ReviewStatus"
          },
          "transcript_before": {
            "$ref": "#/components/schemas/Transcript"
          },
          "transcript_after": {
            "$ref": "#/components/schemas/Transcript"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "comments",
          "status",
          "transcript_before",
          "transcript_after"
        ],
        "title": "TranscriptionTaskFeedback"
      },
      "TranscriptionTaskFileDBModel": {
        "properties": {
          "file_name": {
            "type": "string",
            "title": "File Name"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs"
          },
          "size_mb": {
            "type": "number",
            "title": "Size Mb"
          }
        },
        "type": "object",
        "required": [
          "file_name",
          "content_type",
          "duration_secs",
          "size_mb"
        ],
        "title": "TranscriptionTaskFileDBModel"
      },
      "TranscriptionTaskInstructions": {
        "properties": {
          "kind": {
            "anyOf": [
              {
                "type": "string",
                "const": "transcription_v2"
              },
              {
                "type": "string",
                "const": "transcription"
              }
            ],
            "title": "Kind"
          },
          "verbatim": {
            "type": "boolean",
            "title": "Verbatim"
          },
          "fix_grammar": {
            "type": "boolean",
            "title": "Fix Grammar"
          },
          "event_tags": {
            "type": "boolean",
            "title": "Event Tags"
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comments"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "verbatim",
          "fix_grammar",
          "event_tags",
          "comments"
        ],
        "title": "TranscriptionTaskInstructions"
      },
      "TranscriptionTaskProject": {
        "properties": {
          "_id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "schema_version": {
            "type": "integer",
            "title": "Schema Version"
          },
          "data": {
            "$ref": "#/components/schemas/Data-Output"
          }
        },
        "type": "object",
        "required": [
          "_id",
          "user_id",
          "schema_version",
          "data"
        ],
        "title": "TranscriptionTaskProject"
      },
      "TranscriptionTaskUserParamsDBModel": {
        "properties": {
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "tag_audio_events": {
            "type": "boolean",
            "title": "Tag Audio Events"
          },
          "include_subtitles": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Include Subtitles"
          },
          "num_speakers": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Num Speakers"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id"
          },
          "biased_keywords": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/BiasedKeywordDbModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Biased Keywords"
          }
        },
        "type": "object",
        "required": [
          "language_code",
          "tag_audio_events",
          "include_subtitles",
          "num_speakers",
          "model_id",
          "biased_keywords"
        ],
        "title": "TranscriptionTaskUserParamsDBModel"
      },
      "TranscriptionTaskV2Update": {
        "properties": {
          "parent_hash": {
            "type": "string",
            "title": "Parent Hash"
          },
          "new_hash": {
            "type": "string",
            "title": "New Hash"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TranscriptUpdatePatch"
              },
              {
                "$ref": "#/components/schemas/TranscriptUpdateSnapshot"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "parent_hash",
          "new_hash",
          "data"
        ],
        "title": "TranscriptionTaskV2Update"
      },
      "TranscriptionV2Deliverable": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "transcription_v2_transcript",
            "title": "Kind"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "transcript": {
            "$ref": "#/components/schemas/Transcript"
          },
          "audio_file": {
            "$ref": "#/components/schemas/FileResponseModel"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "name",
          "transcript",
          "audio_file"
        ],
        "title": "TranscriptionV2Deliverable"
      },
      "TranscriptionV2TaskContent": {
        "properties": {
          "kind": {
            "type": "string",
            "const": "transcription_v2",
            "title": "Kind",
            "default": "transcription_v2"
          },
          "audio_file": {
            "$ref": "#/components/schemas/FileResponseModel"
          },
          "transcript": {
            "$ref": "#/components/schemas/Transcript"
          }
        },
        "type": "object",
        "required": [
          "audio_file",
          "transcript"
        ],
        "title": "TranscriptionV2TaskContent"
      },
      "TranscriptionWordDBModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "start": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start"
          },
          "end": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "End"
          },
          "type": {
            "type": "string",
            "enum": [
              "word",
              "spacing",
              "audio_event"
            ],
            "title": "Type"
          },
          "speaker_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaker Id"
          }
        },
        "type": "object",
        "required": [
          "text",
          "start",
          "end",
          "type",
          "speaker_id"
        ],
        "title": "TranscriptionWordDBModel"
      },
      "TransferToAgentToolConfig": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "transfer_to_agent",
            "title": "System Tool Type",
            "default": "transfer_to_agent"
          },
          "transfers": {
            "items": {
              "$ref": "#/components/schemas/AgentTransfer"
            },
            "type": "array",
            "title": "Transfers"
          }
        },
        "type": "object",
        "required": [
          "transfers"
        ],
        "title": "TransferToAgentToolConfig"
      },
      "TransferToAgentToolResultErrorModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "transfer_to_agent_error",
            "title": "Result Type",
            "default": "transfer_to_agent_error"
          },
          "status": {
            "type": "string",
            "const": "error",
            "title": "Status",
            "default": "error"
          },
          "from_agent": {
            "type": "string",
            "title": "From Agent"
          },
          "error": {
            "type": "string",
            "title": "Error"
          }
        },
        "type": "object",
        "required": [
          "from_agent",
          "error"
        ],
        "title": "TransferToAgentToolResultErrorModel"
      },
      "TransferToAgentToolResultSuccessModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "transfer_to_agent_success",
            "title": "Result Type",
            "default": "transfer_to_agent_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "from_agent": {
            "type": "string",
            "title": "From Agent"
          },
          "to_agent": {
            "type": "string",
            "title": "To Agent"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          },
          "delay_ms": {
            "type": "integer",
            "title": "Delay Ms",
            "default": 0
          },
          "transfer_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transfer Message"
          },
          "enable_transferred_agent_first_message": {
            "type": "boolean",
            "title": "Enable Transferred Agent First Message",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "from_agent",
          "to_agent",
          "condition"
        ],
        "title": "TransferToAgentToolResultSuccessModel"
      },
      "TransferToNumberResultErrorModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "transfer_to_number_error",
            "title": "Result Type",
            "default": "transfer_to_number_error"
          },
          "status": {
            "type": "string",
            "const": "error",
            "title": "Status",
            "default": "error"
          },
          "error": {
            "type": "string",
            "title": "Error"
          },
          "details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "error"
        ],
        "title": "TransferToNumberResultErrorModel"
      },
      "TransferToNumberResultSipSuccessModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "transfer_to_number_sip_success",
            "title": "Result Type",
            "default": "transfer_to_number_sip_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "transfer_number": {
            "type": "string",
            "title": "Transfer Number"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "type": "object",
        "required": [
          "transfer_number"
        ],
        "title": "TransferToNumberResultSipSuccessModel"
      },
      "TransferToNumberResultTwilioSuccessModel": {
        "properties": {
          "result_type": {
            "type": "string",
            "const": "transfer_to_number_twilio_success",
            "title": "Result Type",
            "default": "transfer_to_number_twilio_success"
          },
          "status": {
            "type": "string",
            "const": "success",
            "title": "Status",
            "default": "success"
          },
          "transfer_number": {
            "type": "string",
            "title": "Transfer Number"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "client_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Message"
          },
          "agent_message": {
            "type": "string",
            "title": "Agent Message"
          },
          "conference_name": {
            "type": "string",
            "title": "Conference Name"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "type": "object",
        "required": [
          "transfer_number",
          "agent_message",
          "conference_name"
        ],
        "title": "TransferToNumberResultTwilioSuccessModel"
      },
      "TransferToNumberToolConfig-Input": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "transfer_to_number",
            "title": "System Tool Type",
            "default": "transfer_to_number"
          },
          "transfers": {
            "items": {
              "$ref": "#/components/schemas/PhoneNumberTransfer"
            },
            "type": "array",
            "title": "Transfers"
          },
          "enable_client_message": {
            "type": "boolean",
            "title": "Enable Client Message",
            "description": "Whether to play a message to the client while they wait for transfer. Defaults to true for backward compatibility.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "transfers"
        ],
        "title": "TransferToNumberToolConfig"
      },
      "TransferToNumberToolConfig-Output": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "transfer_to_number",
            "title": "System Tool Type",
            "default": "transfer_to_number"
          },
          "transfers": {
            "items": {
              "$ref": "#/components/schemas/PhoneNumberTransfer"
            },
            "type": "array",
            "title": "Transfers"
          },
          "enable_client_message": {
            "type": "boolean",
            "title": "Enable Client Message",
            "description": "Whether to play a message to the client while they wait for transfer. Defaults to true for backward compatibility.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "transfers"
        ],
        "title": "TransferToNumberToolConfig"
      },
      "TransferTypeEnum": {
        "type": "string",
        "enum": [
          "conference",
          "sip_refer"
        ],
        "title": "TransferTypeEnum"
      },
      "TranslateCueRequest": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "TranslateCueRequest"
      },
      "TranslateResponse": {
        "properties": {
          "translated_text": {
            "type": "string",
            "title": "Translated Text"
          }
        },
        "type": "object",
        "required": [
          "translated_text"
        ],
        "title": "TranslateResponse"
      },
      "TurnConfig": {
        "properties": {
          "turn_timeout": {
            "type": "number",
            "title": "Turn Timeout",
            "description": "Maximum wait time for the user's reply before re-engaging the user",
            "default": 7
          },
          "silence_end_call_timeout": {
            "type": "number",
            "title": "Silence End Call Timeout",
            "description": "Maximum wait time since the user last spoke before terminating the call",
            "default": -1
          },
          "mode": {
            "$ref": "#/components/schemas/TurnMode",
            "description": "The mode of turn detection",
            "default": "turn",
            "x-fern-ignore": "True"
          }
        },
        "type": "object",
        "title": "TurnConfig",
        "example": {
          "mode": "turn",
          "silence_end_call_timeout": -1,
          "turn_timeout": 7
        }
      },
      "TurnConfigWorkflowOverride": {
        "properties": {
          "turn_timeout": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Turn Timeout",
            "description": "Maximum wait time for the user's reply before re-engaging the user"
          },
          "silence_end_call_timeout": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Silence End Call Timeout",
            "description": "Maximum wait time since the user last spoke before terminating the call"
          },
          "mode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TurnMode"
              },
              {
                "type": "null"
              }
            ],
            "description": "The mode of turn detection",
            "x-fern-ignore": "True"
          }
        },
        "type": "object",
        "title": "TurnConfigWorkflowOverride",
        "example": {
          "mode": "turn",
          "silence_end_call_timeout": -1,
          "turn_timeout": 7
        }
      },
      "TurnMode": {
        "type": "string",
        "enum": [
          "silence",
          "turn"
        ],
        "title": "TurnMode"
      },
      "TwilioOutboundCallResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "conversation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Id"
          },
          "callSid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Callsid"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message",
          "conversation_id",
          "callSid"
        ],
        "title": "TwilioOutboundCallResponse"
      },
      "TxtExportOptions": {
        "properties": {
          "max_characters_per_line": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Characters Per Line",
            "default": 100
          },
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          },
          "format": {
            "type": "string",
            "const": "txt",
            "title": "Format"
          },
          "segment_on_silence_longer_than_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Segment On Silence Longer Than S"
          },
          "max_segment_duration_s": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Duration S"
          },
          "max_segment_chars": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Segment Chars"
          }
        },
        "type": "object",
        "required": [
          "format"
        ],
        "title": "TxtExportOptions"
      },
      "TxtExportRequest": {
        "properties": {
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "include_speakers": {
            "type": "boolean",
            "title": "Include Speakers",
            "default": true
          },
          "include_timestamps": {
            "type": "boolean",
            "title": "Include Timestamps",
            "default": true
          }
        },
        "type": "object",
        "title": "TxtExportRequest"
      },
      "URLAvatar": {
        "properties": {
          "type": {
            "type": "string",
            "const": "url",
            "title": "Type",
            "description": "The type of the avatar",
            "default": "url"
          },
          "custom_url": {
            "type": "string",
            "title": "Custom Url",
            "description": "The custom URL of the avatar",
            "default": ""
          }
        },
        "type": "object",
        "title": "URLAvatar"
      },
      "UnclaimedTask": {
        "properties": {
          "unclaimed_instance_id": {
            "type": "string",
            "format": "uuid",
            "title": "Unclaimed Instance Id"
          },
          "bounty_usd": {
            "type": "number",
            "title": "Bounty Usd"
          },
          "description_id": {
            "type": "string",
            "format": "uuid",
            "title": "Description Id"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagDbModel"
            },
            "type": "array",
            "title": "Tags"
          },
          "kind": {
            "$ref": "#/components/schemas/TaskKind"
          },
          "meta": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TranscriptionDescriptionMetaModel"
              },
              {
                "$ref": "#/components/schemas/SubtitlesDesctiptionMetaModel"
              },
              {
                "$ref": "#/components/schemas/DubsDescriptionMetaModel"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "required": [
          "unclaimed_instance_id",
          "bounty_usd",
          "description_id",
          "tags",
          "kind",
          "meta"
        ],
        "title": "UnclaimedTask"
      },
      "UnclaimedTasksList": {
        "properties": {
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/UnclaimedTask"
            },
            "type": "array",
            "title": "Tasks"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "tasks",
          "count"
        ],
        "title": "UnclaimedTasksList"
      },
      "UnitTestRunResponseModel": {
        "properties": {
          "test_run_id": {
            "type": "string",
            "title": "Test Run Id"
          },
          "test_invocation_id": {
            "type": "string",
            "title": "Test Invocation Id"
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "status": {
            "$ref": "#/components/schemas/TestRunStatus"
          },
          "agent_responses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Responses"
          },
          "test_id": {
            "type": "string",
            "title": "Test Id"
          },
          "condition_result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TestConditionResultCommonModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "test_run_id",
          "test_invocation_id",
          "agent_id",
          "status",
          "test_id"
        ],
        "title": "UnitTestRunResponseModel"
      },
      "UnitTestSummaryResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the test"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Name of the test"
          },
          "access_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceAccessInfo"
              },
              {
                "type": "null"
              }
            ],
            "description": "The access information of the test"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs",
            "description": "Creation time of the test in unix seconds"
          },
          "last_updated_at_unix_secs": {
            "type": "integer",
            "title": "Last Updated At Unix Secs",
            "description": "Last update time of the test in unix seconds"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "created_at_unix_secs",
          "last_updated_at_unix_secs"
        ],
        "title": "UnitTestSummaryResponseModel"
      },
      "UnlockedStateResponseModel": {
        "properties": {
          "locked": {
            "type": "boolean",
            "const": false,
            "title": "Locked"
          }
        },
        "type": "object",
        "required": [
          "locked"
        ],
        "title": "UnlockedStateResponseModel"
      },
      "UpdateChatMetadataRequestModel": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "cover_art_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cover Art Url"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "title": "UpdateChatMetadataRequestModel"
      },
      "UpdateClonedVoicesRefCrossEnvResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ok",
              "skipped",
              "pathinfo_not_found"
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "UpdateClonedVoicesRefCrossEnvResponseModel"
      },
      "UpdatePhoneNumberRequest": {
        "properties": {
          "agent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Id"
          }
        },
        "type": "object",
        "title": "UpdatePhoneNumberRequest"
      },
      "UpdatePriorityRequest": {
        "properties": {
          "priority": {
            "type": "integer",
            "maximum": 10,
            "minimum": 0,
            "title": "Priority"
          }
        },
        "type": "object",
        "required": [
          "priority"
        ],
        "title": "UpdatePriorityRequest"
      },
      "UpdateProducerQualificationRequest": {
        "properties": {
          "qualifications": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ProducerQualification-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Qualifications"
          }
        },
        "type": "object",
        "title": "UpdateProducerQualificationRequest"
      },
      "UpdateSongSharingRequestModel": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SongShareType"
              },
              {
                "type": "null"
              }
            ]
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          }
        },
        "type": "object",
        "title": "UpdateSongSharingRequestModel"
      },
      "UpdateUnitTestRequest": {
        "properties": {
          "chat_history": {
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel-Input"
            },
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "title": "Chat History"
          },
          "success_condition": {
            "type": "string",
            "title": "Success Condition",
            "description": "A prompt that evaluates whether the agent's response is successful. Should return True or False."
          },
          "success_examples": {
            "items": {
              "$ref": "#/components/schemas/AgentSuccessfulResponseExample"
            },
            "type": "array",
            "maxItems": 5,
            "minItems": 0,
            "title": "Success Examples",
            "description": "Non-empty list of example responses that should be considered successful"
          },
          "failure_examples": {
            "items": {
              "$ref": "#/components/schemas/AgentFailureResponseExample"
            },
            "type": "array",
            "maxItems": 5,
            "minItems": 0,
            "title": "Failure Examples",
            "description": "Non-empty list of example responses that should be considered failures"
          },
          "dynamic_variables": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Dynamic Variables",
            "description": "Dynamic variables to replace in the agent config during testing"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "chat_history",
          "success_condition",
          "success_examples",
          "failure_examples",
          "name"
        ],
        "title": "UpdateUnitTestRequest"
      },
      "UpdateWorkspaceMemberResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the workspace member update request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "UpdateWorkspaceMemberResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "UpsertTranscriptionTaskProjectPayload": {
        "properties": {
          "schema_version": {
            "type": "integer",
            "title": "Schema Version"
          },
          "data": {
            "$ref": "#/components/schemas/Data-Input"
          }
        },
        "type": "object",
        "required": [
          "schema_version",
          "data"
        ],
        "title": "UpsertTranscriptionTaskProjectPayload"
      },
      "UsageAggregationInterval": {
        "type": "string",
        "enum": [
          "hour",
          "day",
          "week",
          "month",
          "cumulative"
        ],
        "title": "UsageAggregationInterval",
        "description": "The time interval over which to aggregate the usage data."
      },
      "UsageCharactersResponseModel": {
        "properties": {
          "time": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Time",
            "description": "The time axis with unix timestamps for each day."
          },
          "usage": {
            "additionalProperties": {
              "items": {
                "type": "number"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Usage",
            "description": "The usage of each breakdown type along the time axis."
          }
        },
        "type": "object",
        "required": [
          "time",
          "usage"
        ],
        "title": "UsageCharactersResponseModel",
        "example": {
          "time": [1738252091000, 1739404800000],
          "usage": {
            "All": [49, 1053]
          }
        }
      },
      "UsageNotificationResponseModel": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "threshold_type": {
            "$ref": "#/components/schemas/UsageThresholdType"
          },
          "threshold_value": {
            "type": "number",
            "title": "Threshold Value"
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix"
          },
          "updated_at_unix": {
            "type": "integer",
            "title": "Updated At Unix"
          }
        },
        "type": "object",
        "required": [
          "id",
          "threshold_type",
          "threshold_value",
          "created_at_unix",
          "updated_at_unix"
        ],
        "title": "UsageNotificationResponseModel"
      },
      "UsageRequestsResponseModel": {
        "properties": {
          "time": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Time"
          },
          "max_concurrent": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Max Concurrent"
          },
          "average_concurrent": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Average Concurrent"
          },
          "count": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Count"
          },
          "limit_concurrent": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit Concurrent"
          }
        },
        "type": "object",
        "required": [
          "time",
          "max_concurrent",
          "average_concurrent",
          "count",
          "limit_concurrent"
        ],
        "title": "UsageRequestsResponseModel"
      },
      "UsageThresholdType": {
        "type": "string",
        "enum": [
          "absolute",
          "percentage"
        ],
        "title": "UsageThresholdType"
      },
      "UsedVoiceDetailsResponseModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "alias": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alias"
          },
          "category": {
            "type": "string",
            "enum": [
              "premade",
              "cloned",
              "generated",
              "professional",
              "famous"
            ],
            "title": "Category"
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified"
          },
          "live_moderation_enabled": {
            "type": "boolean",
            "title": "Live Moderation Enabled"
          },
          "voice": {
            "$ref": "#/components/schemas/VoiceResponseModel"
          }
        },
        "type": "object",
        "required": [
          "name",
          "category",
          "is_verified",
          "live_moderation_enabled",
          "voice"
        ],
        "title": "UsedVoiceDetailsResponseModel"
      },
      "UsedVoiceResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "voice_exists": {
            "type": "boolean",
            "title": "Voice Exists"
          },
          "details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UsedVoiceDetailsResponseModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "voice_exists"
        ],
        "title": "UsedVoiceResponseModel"
      },
      "UserFeedback": {
        "properties": {
          "score": {
            "$ref": "#/components/schemas/UserFeedbackScore"
          },
          "time_in_call_secs": {
            "type": "integer",
            "title": "Time In Call Secs"
          }
        },
        "type": "object",
        "required": [
          "score",
          "time_in_call_secs"
        ],
        "title": "UserFeedback"
      },
      "UserFeedbackResponseModel": {
        "properties": {
          "category": {
            "type": "string",
            "title": "Category"
          },
          "positive": {
            "type": "boolean",
            "title": "Positive"
          },
          "relevant": {
            "type": "boolean",
            "title": "Relevant"
          }
        },
        "type": "object",
        "required": [
          "category",
          "positive",
          "relevant"
        ],
        "title": "UserFeedbackResponseModel"
      },
      "UserFeedbackScore": {
        "type": "string",
        "enum": [
          "like",
          "dislike"
        ],
        "title": "UserFeedbackScore"
      },
      "UserPathInfo": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "storing_shared_files_on_user": {
            "type": "boolean",
            "title": "Storing Shared Files On User"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "workspace_id",
          "storing_shared_files_on_user"
        ],
        "title": "UserPathInfo",
        "description": "See PathInfo first. UserPathInfo the same with the stronger guarantee that the user_id is always present. PathInfo\ncould just be initialised with a workspace_id for non-legacy workspaces with sharing."
      },
      "UserPreview": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "role": {
            "$ref": "#/components/schemas/TeamRole"
          },
          "qualifications": {
            "items": {
              "$ref": "#/components/schemas/ProducerQualification-Output"
            },
            "type": "array",
            "title": "Qualifications"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "role",
          "qualifications"
        ],
        "title": "UserPreview"
      },
      "UserRandomnessResponseModel": {
        "properties": {
          "rand": {
            "type": "number",
            "title": "Rand"
          }
        },
        "type": "object",
        "required": [
          "rand"
        ],
        "title": "UserRandomnessResponseModel"
      },
      "UserResponseModel": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "The unique identifier of the user."
          },
          "subscription": {
            "$ref": "#/components/schemas/SubscriptionResponseModel",
            "description": "Details of the user's subscription."
          },
          "subscription_extras": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubscriptionExtrasResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional additional details about the user's subscription."
          },
          "is_new_user": {
            "type": "boolean",
            "title": "Is New User",
            "description": "Whether the user is new."
          },
          "xi_api_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xi Api Key",
            "description": "The API key of the user."
          },
          "can_use_delayed_payment_methods": {
            "type": "boolean",
            "title": "Can Use Delayed Payment Methods",
            "description": "This field is deprecated and will be removed in a future major version. Instead use subscription.trust_on_invoice_creation.",
            "deprecated": true
          },
          "is_onboarding_completed": {
            "type": "boolean",
            "title": "Is Onboarding Completed",
            "description": "Whether the user's onboarding is completed."
          },
          "is_onboarding_checklist_completed": {
            "type": "boolean",
            "title": "Is Onboarding Checklist Completed",
            "description": "Whether the user's onboarding checklist is completed."
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "First name of the user."
          },
          "is_api_key_hashed": {
            "type": "boolean",
            "title": "Is Api Key Hashed",
            "description": "Whether the user's API key is hashed.",
            "default": false
          },
          "xi_api_key_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xi Api Key Preview",
            "description": "The preview of the user's API key."
          },
          "referral_link_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Referral Link Code",
            "description": "The referral link code of the user."
          },
          "partnerstack_partner_default_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partnerstack Partner Default Link",
            "description": "The Partnerstack partner default link of the user."
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "subscription",
          "is_new_user",
          "can_use_delayed_payment_methods",
          "is_onboarding_completed",
          "is_onboarding_checklist_completed"
        ],
        "title": "UserResponseModel",
        "example": {
          "can_use_delayed_payment_methods": false,
          "first_name": "John",
          "is_api_key_hashed": false,
          "is_new_user": false,
          "is_onboarding_checklist_completed": true,
          "is_onboarding_completed": true,
          "subscription": {
            "allowed_to_extend_character_limit": false,
            "billing_period": "monthly_period",
            "can_extend_character_limit": false,
            "can_extend_voice_limit": false,
            "can_use_instant_voice_cloning": true,
            "can_use_professional_voice_cloning": true,
            "character_count": 17231,
            "character_limit": 100000,
            "character_refresh_period": "monthly_period",
            "currency": "usd",
            "max_character_limit_extension": 10000,
            "max_voice_add_edits": 230,
            "next_character_count_reset_unix": 1738356858,
            "professional_voice_limit": 1,
            "professional_voice_slots_used": 0,
            "status": "free",
            "tier": "trial",
            "voice_add_edit_counter": 212,
            "voice_limit": 120,
            "voice_slots_used": 1
          },
          "subscription_extras": {
            "can_bypass_voice_captcha": true,
            "can_request_manual_pro_voice_verification": true,
            "concurrency": 10,
            "convai_asr_chars_per_minute": 1000,
            "convai_chars_per_minute": 1000,
            "convai_concurrency": 10,
            "force_logging_disabled": false,
            "moderation": {
              "enterprise_background_moderation_enabled": false,
              "enterprise_check_block_nogo_voice": false,
              "enterprise_check_nogo_voice": false,
              "is_in_probation": false,
              "never_live_moderate": false,
              "nogo_voice_similar_voice_upload_count": 0,
              "on_watchlist": false
            },
            "overused_characters_rolled_over_from_previous_period": 1000,
            "unused_characters_rolled_over_from_previous_period": 1000,
            "usage": {
              "actual_reported_credits": 1000,
              "manually_gifted_credits_quota": 1000,
              "manually_gifted_credits_used": 1000,
              "paid_usage_based_credits_used": 1000,
              "rollover_credits_quota": 1000,
              "rollover_credits_used": 1000,
              "subscription_cycle_credits_quota": 1000,
              "subscription_cycle_credits_used": 1000
            }
          },
          "user_id": "1234567890",
          "xi_api_key": "8so27l7327189x0h939ekx293380l920"
        }
      },
      "UserVoiceCollectionResponseModel": {
        "properties": {
          "collection_id": {
            "type": "string",
            "title": "Collection Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "icon": {
            "type": "string",
            "title": "Icon"
          },
          "permission_on_resource": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Permission On Resource"
          }
        },
        "type": "object",
        "required": [
          "collection_id",
          "title",
          "icon",
          "permission_on_resource"
        ],
        "title": "UserVoiceCollectionResponseModel"
      },
      "UserWorkspaceLookupType": {
        "type": "string",
        "enum": [
          "user",
          "workspace"
        ],
        "title": "UserWorkspaceLookupType"
      },
      "UtteranceDBModel": {
        "properties": {
          "start": {
            "type": "number",
            "title": "Start"
          },
          "end": {
            "type": "number",
            "title": "End"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "title": "UtteranceDBModel"
      },
      "UtteranceResponseModel": {
        "properties": {
          "start": {
            "type": "number",
            "title": "Start",
            "description": "The start time of the utterance in seconds."
          },
          "end": {
            "type": "number",
            "title": "End",
            "description": "The end time of the utterance in seconds."
          }
        },
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "title": "UtteranceResponseModel",
        "example": {
          "end": 1,
          "start": 0
        }
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VercelProjectType": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "configuration_id": {
            "type": "string",
            "title": "Configuration Id"
          },
          "elevenlabs_env_key_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Elevenlabs Env Key Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "configuration_id"
        ],
        "title": "VercelProjectType"
      },
      "VerificationAttemptDBModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "date_unix": {
            "type": "integer",
            "title": "Date Unix"
          },
          "accepted": {
            "type": "boolean",
            "title": "Accepted"
          },
          "similarity": {
            "type": "number",
            "title": "Similarity"
          },
          "levenshtein_distance": {
            "type": "number",
            "title": "Levenshtein Distance"
          },
          "fail_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fail Reason"
          },
          "recording": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RecordingDBModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "text",
          "date_unix",
          "accepted",
          "similarity",
          "levenshtein_distance",
          "fail_reason",
          "recording"
        ],
        "title": "VerificationAttemptDBModel"
      },
      "VerificationAttemptResponseModel": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text of the verification attempt."
          },
          "date_unix": {
            "type": "integer",
            "title": "Date Unix",
            "description": "The date of the verification attempt in Unix time."
          },
          "accepted": {
            "type": "boolean",
            "title": "Accepted",
            "description": "Whether the verification attempt was accepted."
          },
          "similarity": {
            "type": "number",
            "title": "Similarity",
            "description": "The similarity of the verification attempt."
          },
          "levenshtein_distance": {
            "type": "number",
            "title": "Levenshtein Distance",
            "description": "The Levenshtein distance of the verification attempt."
          },
          "recording": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RecordingResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The recording of the verification attempt."
          }
        },
        "type": "object",
        "required": [
          "text",
          "date_unix",
          "accepted",
          "similarity",
          "levenshtein_distance"
        ],
        "title": "VerificationAttemptResponseModel",
        "example": {
          "accepted": true,
          "date_unix": 1714204800,
          "levenshtein_distance": 2,
          "recording": {
            "mime_type": "audio/mpeg",
            "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
            "size_bytes": 1000000,
            "transcription": "Hello, how are you?",
            "upload_date_unix": 1714204800
          },
          "similarity": 0.95,
          "text": "Hello, how are you?"
        }
      },
      "VerifiedVoiceLanguageDBModel": {
        "properties": {
          "language": {
            "type": "string",
            "title": "Language"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id"
          },
          "verified_at_unix": {
            "type": "integer",
            "title": "Verified At Unix"
          },
          "accent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent"
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url"
          }
        },
        "type": "object",
        "required": [
          "language",
          "model_id",
          "verified_at_unix"
        ],
        "title": "VerifiedVoiceLanguageDBModel"
      },
      "VerifiedVoiceLanguageResponseModel": {
        "properties": {
          "language": {
            "type": "string",
            "title": "Language",
            "description": "The language of the voice."
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "The voice's model ID."
          },
          "accent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent",
            "description": "The voice's accent, if applicable."
          },
          "locale": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locale",
            "description": "The voice's locale, if applicable."
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url",
            "description": "The voice's preview URL, if applicable."
          }
        },
        "type": "object",
        "required": [
          "language",
          "model_id"
        ],
        "title": "VerifiedVoiceLanguageResponseModel",
        "example": {
          "accent": "American",
          "language": "en",
          "model_id": "eleven_turbo_v2_5"
        }
      },
      "VerifyCardResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ok",
              "requires_action",
              "error"
            ],
            "title": "Status"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "status",
          "client_secret"
        ],
        "title": "VerifyCardResponseModel"
      },
      "VerifyPVCVoiceCaptchaResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "The status of the verify PVC captcha request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned."
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "VerifyPVCVoiceCaptchaResponseModel",
        "example": {
          "status": "ok"
        }
      },
      "VideoDescriptionResponse": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "success": {
            "type": "boolean",
            "title": "Success"
          }
        },
        "type": "object",
        "required": [
          "description",
          "title",
          "success"
        ],
        "title": "VideoDescriptionResponse"
      },
      "VideoFramesRequest": {
        "properties": {
          "frames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Frames",
            "description": "Base64 encoded video frames"
          }
        },
        "type": "object",
        "required": [
          "frames"
        ],
        "title": "VideoFramesRequest"
      },
      "VoiceChallengeSubmissionResponseModel": {
        "properties": {
          "submission_id": {
            "type": "string",
            "title": "Submission Id"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "character": {
            "type": "string",
            "title": "Character"
          },
          "style": {
            "type": "string",
            "title": "Style"
          },
          "script": {
            "type": "string",
            "title": "Script"
          },
          "owner_id": {
            "type": "string",
            "title": "Owner Id"
          },
          "status": {
            "type": "string",
            "enum": [
              "awaiting-review",
              "not-accepted",
              "accepted"
            ],
            "title": "Status"
          },
          "reward": {
            "type": "integer",
            "title": "Reward"
          },
          "preview_url": {
            "type": "string",
            "title": "Preview Url"
          },
          "original_url": {
            "type": "string",
            "title": "Original Url"
          },
          "date_unix": {
            "type": "integer",
            "title": "Date Unix"
          },
          "quality": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality"
          },
          "payout_status": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "completed",
                  "failed"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Payout Status"
          }
        },
        "type": "object",
        "required": [
          "submission_id",
          "language",
          "character",
          "style",
          "script",
          "owner_id",
          "status",
          "reward",
          "preview_url",
          "original_url",
          "date_unix"
        ],
        "title": "VoiceChallengeSubmissionResponseModel"
      },
      "VoiceDBModel-Input": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "samples": {
            "items": {
              "$ref": "#/components/schemas/SampleDBModel-Input"
            },
            "type": "array",
            "title": "Samples"
          },
          "category": {
            "type": "string",
            "enum": [
              "premade",
              "cloned",
              "generated",
              "professional",
              "famous"
            ],
            "title": "Category"
          },
          "path_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PathInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "workspace_resource_metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceMetadataDBModel-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "shard_idx": {
            "type": "integer",
            "title": "Shard Idx"
          },
          "processed_samples": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SampleDBModel-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Samples"
          },
          "safety_control": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "NONE",
                  "BAN",
                  "CAPTCHA",
                  "ENTERPRISE_BAN",
                  "ENTERPRISE_CAPTCHA"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Control"
          },
          "voice_verification": {
            "$ref": "#/components/schemas/VoiceVerificationDBModel-Input"
          },
          "fine_tuning": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FineTuningDBModel-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "sharing": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSharingDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "mixing": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceMixingDBModel-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Labels"
          },
          "available_for_tiers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available For Tiers"
          },
          "high_quality_model_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "High Quality Model Ids"
          },
          "verified_languages": {
            "items": {
              "$ref": "#/components/schemas/VerifiedVoiceLanguageDBModel"
            },
            "type": "array",
            "title": "Verified Languages"
          },
          "collection_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Collection Ids"
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url"
          },
          "extra_config": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Extra Config"
          },
          "dubbing_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dubbing Id"
          },
          "is_hidden": {
            "type": "boolean",
            "title": "Is Hidden",
            "default": false
          },
          "most_similar_nogo_voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Most Similar Nogo Voice Id"
          },
          "most_similar_nogo_voice_similarity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Most Similar Nogo Voice Similarity"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "is_legacy": {
            "type": "boolean",
            "title": "Is Legacy",
            "default": false
          },
          "last_ecapa_embedding_update_unix_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Ecapa Embedding Update Unix Ms",
            "default": 0
          },
          "last_nogo_voice_check_unix_ms": {
            "type": "integer",
            "title": "Last Nogo Voice Check Unix Ms",
            "default": 0
          },
          "last_nogo_voice_check_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Nogo Voice Check Hash"
          },
          "created_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At Unix"
          },
          "updated_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At Unix"
          },
          "migration_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Migration Id"
          },
          "productions_description_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Productions Description Id"
          },
          "safety": {
            "$ref": "#/components/schemas/VoiceSafetyDBModel"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "name",
          "samples",
          "category",
          "path_info",
          "workspace_resource_metadata",
          "shard_idx"
        ],
        "title": "VoiceDBModel"
      },
      "VoiceDBModel-Output": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "samples": {
            "items": {
              "$ref": "#/components/schemas/SampleDBModel-Output"
            },
            "type": "array",
            "title": "Samples"
          },
          "category": {
            "type": "string",
            "enum": [
              "premade",
              "cloned",
              "generated",
              "professional",
              "famous"
            ],
            "title": "Category"
          },
          "path_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PathInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "workspace_resource_metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourceMetadataDBModel-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "shard_idx": {
            "type": "integer",
            "title": "Shard Idx"
          },
          "processed_samples": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SampleDBModel-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processed Samples"
          },
          "safety_control": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "NONE",
                  "BAN",
                  "CAPTCHA",
                  "ENTERPRISE_BAN",
                  "ENTERPRISE_CAPTCHA"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Control"
          },
          "voice_verification": {
            "$ref": "#/components/schemas/VoiceVerificationDBModel-Output"
          },
          "fine_tuning": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FineTuningDBModel-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "sharing": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSharingDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "mixing": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceMixingDBModel-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Labels"
          },
          "available_for_tiers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available For Tiers"
          },
          "high_quality_model_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "High Quality Model Ids"
          },
          "verified_languages": {
            "items": {
              "$ref": "#/components/schemas/VerifiedVoiceLanguageDBModel"
            },
            "type": "array",
            "title": "Verified Languages"
          },
          "collection_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Collection Ids"
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url"
          },
          "extra_config": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Extra Config"
          },
          "dubbing_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dubbing Id"
          },
          "is_hidden": {
            "type": "boolean",
            "title": "Is Hidden",
            "default": false
          },
          "most_similar_nogo_voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Most Similar Nogo Voice Id"
          },
          "most_similar_nogo_voice_similarity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Most Similar Nogo Voice Similarity"
          },
          "owner_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Owner Id"
          },
          "is_legacy": {
            "type": "boolean",
            "title": "Is Legacy",
            "default": false
          },
          "last_ecapa_embedding_update_unix_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Ecapa Embedding Update Unix Ms",
            "default": 0
          },
          "last_nogo_voice_check_unix_ms": {
            "type": "integer",
            "title": "Last Nogo Voice Check Unix Ms",
            "default": 0
          },
          "last_nogo_voice_check_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Nogo Voice Check Hash"
          },
          "created_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At Unix"
          },
          "updated_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At Unix"
          },
          "migration_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Migration Id"
          },
          "productions_description_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Productions Description Id"
          },
          "safety": {
            "$ref": "#/components/schemas/VoiceSafetyDBModel"
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "name",
          "samples",
          "category",
          "path_info",
          "workspace_resource_metadata",
          "shard_idx"
        ],
        "title": "VoiceDBModel"
      },
      "VoiceDesignRequestModel": {
        "properties": {
          "voice_description": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 20,
            "title": "Voice Description",
            "description": "Description to use for the created voice.",
            "examples": [
              "A sassy squeaky mouse"
            ]
          },
          "model_id": {
            "type": "string",
            "enum": [
              "eleven_multilingual_ttv_v2",
              "eleven_ttv_v3"
            ],
            "title": "Model Id",
            "description": "Model to use for the voice generation. Possible values: eleven_multilingual_ttv_v2, eleven_ttv_v3.",
            "default": "eleven_multilingual_ttv_v2",
            "examples": [
              "eleven_multilingual_ttv_v2"
            ]
          },
          "text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "description": "Text to generate, text length has to be between 100 and 1000.",
            "examples": [
              "Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
            ]
          },
          "auto_generate_text": {
            "type": "boolean",
            "title": "Auto Generate Text",
            "description": "Whether to automatically generate a text suitable for the voice description.",
            "default": false
          },
          "loudness": {
            "type": "number",
            "maximum": 1,
            "minimum": -1,
            "title": "Loudness",
            "description": "Controls the volume level of the generated voice. -1 is quietest, 1 is loudest, 0 corresponds to roughly -24 LUFS.",
            "default": 0.5,
            "examples": [0.5]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Random number that controls the voice generation. Same seed with same inputs produces same voice.",
            "examples": [11]
          },
          "guidance_scale": {
            "type": "number",
            "maximum": 100,
            "minimum": 0,
            "title": "Guidance Scale",
            "description": "Controls how closely the AI follows the prompt. Lower numbers give the AI more freedom to be creative, while higher numbers force it to stick more to the prompt. High numbers can cause voice to sound artificial or robotic. We recommend to use longer, more detailed prompts at lower Guidance Scale.",
            "default": 5,
            "examples": [5]
          },
          "stream_previews": {
            "type": "boolean",
            "title": "Stream Previews",
            "description": "Determines whether the Text to Voice previews should be included in the response. If true, only the generated IDs will be returned which can then be streamed via the /v1/text-to-voice/:generated_voice_id/stream endpoint.",
            "default": false,
            "examples": [true]
          },
          "remixing_session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remixing Session Id",
            "description": "The remixing session id.",
            "examples": [
              "123"
            ]
          },
          "remixing_session_iteration_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remixing Session Iteration Id",
            "description": "The id of the remixing session iteration where these generations should be attached to. If not provided, a new iteration will be created.",
            "examples": [
              "123"
            ]
          },
          "quality": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": -1
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality",
            "description": "Higher quality results in better voice output but less variety.",
            "examples": [0.9]
          },
          "reference_audio_base64": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Audio Base64",
            "description": "Reference audio to use for the voice generation. The audio should be base64 encoded. Only supported when using the  eleven_ttv_v3 model."
          },
          "prompt_strength": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Strength",
            "description": "Controls the balance of prompt versus reference audio when generating voice samples. 0 means almost no prompt influence, 1 means almost no reference audio influence. Only supported when using the eleven_ttv_v3 model and providing reference audio.",
            "examples": [0.25]
          }
        },
        "type": "object",
        "required": [
          "voice_description"
        ],
        "title": "VoiceDesignRequestModel"
      },
      "VoiceGenerationParameterOptionResponseModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "name",
          "code"
        ],
        "title": "VoiceGenerationParameterOptionResponseModel"
      },
      "VoiceGenerationParameterResponseModel": {
        "properties": {
          "genders": {
            "items": {
              "$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
            },
            "type": "array",
            "title": "Genders"
          },
          "accents": {
            "items": {
              "$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
            },
            "type": "array",
            "title": "Accents"
          },
          "ages": {
            "items": {
              "$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
            },
            "type": "array",
            "title": "Ages"
          },
          "minimum_characters": {
            "type": "integer",
            "title": "Minimum Characters"
          },
          "maximum_characters": {
            "type": "integer",
            "title": "Maximum Characters"
          },
          "minimum_accent_strength": {
            "type": "number",
            "title": "Minimum Accent Strength"
          },
          "maximum_accent_strength": {
            "type": "number",
            "title": "Maximum Accent Strength"
          }
        },
        "type": "object",
        "required": [
          "genders",
          "accents",
          "ages",
          "minimum_characters",
          "maximum_characters",
          "minimum_accent_strength",
          "maximum_accent_strength"
        ],
        "title": "VoiceGenerationParameterResponseModel"
      },
      "VoiceLibrarySettingsResponseModel": {
        "properties": {
          "disable_custom_rates": {
            "type": "boolean",
            "title": "Disable Custom Rates"
          },
          "hide_custom_rates": {
            "type": "boolean",
            "title": "Hide Custom Rates"
          }
        },
        "type": "object",
        "required": [
          "disable_custom_rates",
          "hide_custom_rates"
        ],
        "title": "VoiceLibrarySettingsResponseModel"
      },
      "VoiceMixingDBModel-Input": {
        "properties": {
          "source_voices": {
            "items": {
              "$ref": "#/components/schemas/VoiceMixingSourceVoiceDBModel"
            },
            "type": "array",
            "title": "Source Voices"
          }
        },
        "type": "object",
        "required": [
          "source_voices"
        ],
        "title": "VoiceMixingDBModel"
      },
      "VoiceMixingDBModel-Output": {
        "properties": {
          "source_voices": {
            "items": {
              "$ref": "#/components/schemas/VoiceMixingSourceVoiceDBModel"
            },
            "type": "array",
            "title": "Source Voices"
          }
        },
        "type": "object",
        "required": [
          "source_voices"
        ],
        "title": "VoiceMixingDBModel"
      },
      "VoiceMixingSourceVoiceDBModel": {
        "properties": {
          "path_info": {
            "$ref": "#/components/schemas/PathInfo"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "alpha": {
            "type": "number",
            "title": "Alpha"
          }
        },
        "type": "object",
        "required": [
          "path_info",
          "voice_id",
          "alpha"
        ],
        "title": "VoiceMixingSourceVoiceDBModel"
      },
      "VoicePreviewResponseModel": {
        "properties": {
          "audio_base_64": {
            "type": "string",
            "title": "Audio Base 64",
            "description": "The base64 encoded audio of the preview."
          },
          "generated_voice_id": {
            "type": "string",
            "title": "Generated Voice Id",
            "description": "The ID of the generated voice. Use it to create a voice from the preview."
          },
          "media_type": {
            "type": "string",
            "title": "Media Type",
            "description": "The media type of the preview."
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs",
            "description": "The duration of the preview in seconds."
          }
        },
        "type": "object",
        "required": [
          "audio_base_64",
          "generated_voice_id",
          "media_type",
          "duration_secs"
        ],
        "title": "VoicePreviewResponseModel"
      },
      "VoicePreviewSignedUrlResponseModel": {
        "properties": {
          "signed_url": {
            "type": "string",
            "title": "Signed Url",
            "description": "The signed URL to access the audio preview."
          },
          "generated_voice_id": {
            "type": "string",
            "title": "Generated Voice Id",
            "description": "The ID of the generated voice. Use it to create a voice from the preview."
          },
          "media_type": {
            "type": "string",
            "title": "Media Type",
            "description": "The media type of the preview."
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs",
            "description": "The duration of the preview in seconds."
          }
        },
        "type": "object",
        "required": [
          "signed_url",
          "generated_voice_id",
          "media_type",
          "duration_secs"
        ],
        "title": "VoicePreviewSignedUrlResponseModel"
      },
      "VoicePreviewsInternalResponseModel": {
        "properties": {
          "previews": {
            "items": {
              "$ref": "#/components/schemas/VoicePreviewResponseModel"
            },
            "type": "array",
            "title": "Previews",
            "description": "The previews of the generated voices."
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text used to preview the voices."
          },
          "remixing_session_iteration_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remixing Session Iteration Id",
            "description": "The ID of the remixing session iteration this generation was included in."
          }
        },
        "type": "object",
        "required": [
          "previews",
          "text"
        ],
        "title": "VoicePreviewsInternalResponseModel"
      },
      "VoicePreviewsRequestModel": {
        "properties": {
          "voice_description": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 20,
            "title": "Voice Description",
            "description": "Description to use for the created voice.",
            "examples": [
              "A sassy squeaky mouse"
            ]
          },
          "text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "description": "Text to generate, text length has to be between 100 and 1000.",
            "examples": [
              "Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
            ]
          },
          "auto_generate_text": {
            "type": "boolean",
            "title": "Auto Generate Text",
            "description": "Whether to automatically generate a text suitable for the voice description.",
            "default": false
          },
          "loudness": {
            "type": "number",
            "maximum": 1,
            "minimum": -1,
            "title": "Loudness",
            "description": "Controls the volume level of the generated voice. -1 is quietest, 1 is loudest, 0 corresponds to roughly -24 LUFS.",
            "default": 0.5,
            "examples": [0.5]
          },
          "quality": {
            "type": "number",
            "maximum": 1,
            "minimum": -1,
            "title": "Quality",
            "description": "Higher quality results in better voice output but less variety.",
            "default": 0.9,
            "examples": [0.9]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Random number that controls the voice generation. Same seed with same inputs produces same voice.",
            "examples": [11]
          },
          "guidance_scale": {
            "type": "number",
            "maximum": 100,
            "minimum": 0,
            "title": "Guidance Scale",
            "description": "Controls how closely the AI follows the prompt. Lower numbers give the AI more freedom to be creative, while higher numbers force it to stick more to the prompt. High numbers can cause voice to sound artificial or robotic. We recommend to use longer, more detailed prompts at lower Guidance Scale.",
            "default": 5,
            "examples": [5]
          }
        },
        "type": "object",
        "required": [
          "voice_description"
        ],
        "title": "VoicePreviewsRequestModel"
      },
      "VoicePreviewsResponseModel": {
        "properties": {
          "previews": {
            "items": {
              "$ref": "#/components/schemas/VoicePreviewResponseModel"
            },
            "type": "array",
            "title": "Previews",
            "description": "The previews of the generated voices."
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The text used to preview the voices."
          }
        },
        "type": "object",
        "required": [
          "previews",
          "text"
        ],
        "title": "VoicePreviewsResponseModel"
      },
      "VoiceRemixRequestModel": {
        "properties": {
          "voice_description": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 5,
            "title": "Voice Description",
            "description": "Description of the changes to make to the voice.",
            "examples": [
              "Make the voice have a higher pitch."
            ]
          },
          "text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 100
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "description": "Text to generate, text length has to be between 100 and 1000.",
            "examples": [
              "Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
            ]
          },
          "auto_generate_text": {
            "type": "boolean",
            "title": "Auto Generate Text",
            "description": "Whether to automatically generate a text suitable for the voice description.",
            "default": false
          },
          "loudness": {
            "type": "number",
            "maximum": 1,
            "minimum": -1,
            "title": "Loudness",
            "description": "Controls the volume level of the generated voice. -1 is quietest, 1 is loudest, 0 corresponds to roughly -24 LUFS.",
            "default": 0.5,
            "examples": [0.5]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2147483647,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Random number that controls the voice generation. Same seed with same inputs produces same voice.",
            "examples": [11]
          },
          "guidance_scale": {
            "type": "number",
            "maximum": 100,
            "minimum": 0,
            "title": "Guidance Scale",
            "description": "Controls how closely the AI follows the prompt. Lower numbers give the AI more freedom to be creative, while higher numbers force it to stick more to the prompt. High numbers can cause voice to sound artificial or robotic. We recommend to use longer, more detailed prompts at lower Guidance Scale.",
            "default": 2,
            "examples": [5]
          },
          "stream_previews": {
            "type": "boolean",
            "title": "Stream Previews",
            "description": "Determines whether the Text to Voice previews should be included in the response. If true, only the generated IDs will be returned which can then be streamed via the /v1/text-to-voice/:generated_voice_id/stream endpoint.",
            "default": false,
            "examples": [true]
          },
          "remixing_session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remixing Session Id",
            "description": "The remixing session id.",
            "examples": [
              "123"
            ]
          },
          "remixing_session_iteration_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remixing Session Iteration Id",
            "description": "The id of the remixing session iteration where these generations should be attached to. If not provided, a new iteration will be created.",
            "examples": [
              "123"
            ]
          },
          "prompt_strength": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Strength",
            "description": "Controls the balance of prompt versus reference audio when generating voice samples. 0 means almost no prompt influence, 1 means almost no reference audio influence. Only supported when using the eleven_ttv_v3 model and providing reference audio.",
            "examples": [0.25]
          }
        },
        "type": "object",
        "required": [
          "voice_description"
        ],
        "title": "VoiceRemixRequestModel"
      },
      "VoiceRemixingSessionIterationResponseModel": {
        "properties": {
          "remixing_session_iteration_id": {
            "type": "string",
            "title": "Remixing Session Iteration Id"
          },
          "voice_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voice Id"
          },
          "voice_description": {
            "type": "string",
            "title": "Voice Description"
          },
          "rewritten_voice_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rewritten Voice Description"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "auto_generate_text": {
            "type": "boolean",
            "title": "Auto Generate Text"
          },
          "variants": {
            "items": {
              "$ref": "#/components/schemas/VoiceRemixingSessionIterationVariantResponseModel"
            },
            "type": "array",
            "title": "Variants"
          }
        },
        "type": "object",
        "required": [
          "remixing_session_iteration_id",
          "voice_id",
          "voice_description",
          "rewritten_voice_description",
          "text",
          "auto_generate_text",
          "variants"
        ],
        "title": "VoiceRemixingSessionIterationResponseModel"
      },
      "VoiceRemixingSessionIterationVariantResponseModel": {
        "properties": {
          "loudness": {
            "type": "number",
            "title": "Loudness"
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed"
          },
          "guidance_scale": {
            "type": "number",
            "title": "Guidance Scale"
          },
          "stream_previews": {
            "type": "boolean",
            "title": "Stream Previews"
          },
          "prompt_strength": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Strength"
          },
          "generated_prompt_strengths": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "items": {
                  "type": "null"
                },
                "type": "array"
              }
            ],
            "title": "Generated Prompt Strengths"
          },
          "previews": {
            "items": {
              "$ref": "#/components/schemas/VoicePreviewSignedUrlResponseModel"
            },
            "type": "array",
            "title": "Previews"
          }
        },
        "type": "object",
        "required": [
          "loudness",
          "seed",
          "guidance_scale",
          "stream_previews",
          "prompt_strength",
          "generated_prompt_strengths",
          "previews"
        ],
        "title": "VoiceRemixingSessionIterationVariantResponseModel"
      },
      "VoiceRemixingSessionResponseModel": {
        "properties": {
          "remixing_session_id": {
            "type": "string",
            "title": "Remixing Session Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "iterations": {
            "items": {
              "$ref": "#/components/schemas/VoiceRemixingSessionIterationResponseModel"
            },
            "type": "array",
            "title": "Iterations"
          }
        },
        "type": "object",
        "required": [
          "remixing_session_id",
          "name",
          "iterations"
        ],
        "title": "VoiceRemixingSessionResponseModel"
      },
      "VoiceResponseModel": {
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the voice."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the voice."
          },
          "samples": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SampleResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Samples",
            "description": "List of samples associated with the voice."
          },
          "category": {
            "type": "string",
            "enum": [
              "generated",
              "cloned",
              "premade",
              "professional",
              "famous",
              "high_quality"
            ],
            "title": "Category",
            "description": "The category of the voice."
          },
          "fine_tuning": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FineTuningResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "Fine-tuning information for the voice."
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Labels",
            "description": "Labels associated with the voice."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the voice."
          },
          "preview_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preview Url",
            "description": "The preview URL of the voice."
          },
          "available_for_tiers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Available For Tiers",
            "description": "The tiers the voice is available for."
          },
          "settings": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The settings of the voice."
          },
          "sharing": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSharingResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The sharing information of the voice."
          },
          "high_quality_base_model_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "High Quality Base Model Ids",
            "description": "The base model IDs for high-quality voices."
          },
          "verified_languages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VerifiedVoiceLanguageResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verified Languages",
            "description": "The verified languages of the voice."
          },
          "safety_control": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "NONE",
                  "BAN",
                  "CAPTCHA",
                  "ENTERPRISE_BAN",
                  "ENTERPRISE_CAPTCHA"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Control",
            "description": "The safety controls of the voice."
          },
          "voice_verification": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceVerificationResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The voice verification of the voice."
          },
          "permission_on_resource": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permission On Resource",
            "description": "The permission on the resource of the voice."
          },
          "is_owner": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Owner",
            "description": "Whether the voice is owned by the user."
          },
          "is_legacy": {
            "type": "boolean",
            "title": "Is Legacy",
            "description": "Whether the voice is legacy.",
            "default": false
          },
          "is_mixed": {
            "type": "boolean",
            "title": "Is Mixed",
            "description": "Whether the voice is mixed.",
            "default": false
          },
          "created_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At Unix",
            "description": "The creation time of the voice in Unix time."
          }
        },
        "type": "object",
        "required": [
          "voice_id",
          "name",
          "category",
          "labels",
          "available_for_tiers",
          "high_quality_base_model_ids"
        ],
        "title": "VoiceResponseModel",
        "example": {
          "available_for_tiers": [
            "creator",
            "enterprise"
          ],
          "category": "professional",
          "description": "A warm, expressive voice with a touch of humor.",
          "fine_tuning": {
            "is_allowed_to_fine_tune": true,
            "manual_verification_requested": false,
            "state": {
              "eleven_multilingual_v2": "fine_tuned"
            },
            "verification_attempts_count": 2,
            "verification_failures": []
          },
          "high_quality_base_model_ids": [
            "eleven_v2_flash",
            "eleven_flash_v2",
            "eleven_turbo_v2_5",
            "eleven_multilingual_v2",
            "eleven_v2_5_flash",
            "eleven_flash_v2_5",
            "eleven_turbo_v2"
          ],
          "is_legacy": false,
          "is_mixed": false,
          "is_owner": false,
          "labels": {
            "accent": "American",
            "age": "middle-aged",
            "description": "expressive",
            "gender": "female",
            "use_case": "social media"
          },
          "name": "Rachel",
          "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
          "settings": {
            "similarity_boost": 1,
            "speed": 1,
            "stability": 1,
            "style": 0,
            "use_speaker_boost": true
          },
          "sharing": {
            "category": "professional",
            "cloned_by_count": 50,
            "date_unix": 1714204800,
            "description": "A female voice with a soft and friendly tone.",
            "disable_at_unix": 1714204800,
            "enabled_in_library": true,
            "featured": true,
            "financial_rewards_enabled": true,
            "free_users_allowed": true,
            "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
            "labels": {
              "accent": "American",
              "gender": "female"
            },
            "liked_by_count": 100,
            "live_moderation_enabled": true,
            "moderation_check": {
              "captcha_checks": [0.95, 0.98],
              "captcha_ids": [
                "captcha1",
                "captcha2"
              ],
              "date_checked_unix": 1714204800,
              "description_check": true,
              "description_value": "A female voice with a soft and friendly tone.",
              "name_check": true,
              "name_value": "Rachel",
              "sample_checks": [0.95, 0.98],
              "sample_ids": [
                "sample1",
                "sample2"
              ]
            },
            "name": "Rachel",
            "notice_period": 30,
            "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
            "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
            "rate": 0.05,
            "reader_app_enabled": true,
            "reader_restricted_on": [
              {
                "resource_id": "FCwhRBWXzGAHq8TQ4Fs18",
                "resource_type": "read"
              }
            ],
            "review_status": "allowed",
            "status": "enabled",
            "voice_mixing_allowed": false,
            "whitelisted_emails": [
              "example@example.com"
            ]
          },
          "verified_languages": [
            {
              "accent": "american",
              "language": "en",
              "locale": "en-US",
              "model_id": "eleven_multilingual_v2",
              "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3"
            }
          ],
          "voice_id": "21m00Tcm4TlvDq8ikWAM",
          "voice_verification": {
            "is_verified": true,
            "language": "en",
            "requires_verification": false,
            "verification_attempts": [
              {
                "accepted": true,
                "date_unix": 1714204800,
                "levenshtein_distance": 2,
                "recording": {
                  "mime_type": "audio/mpeg",
                  "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                  "size_bytes": 1000000,
                  "transcription": "Hello, how are you?",
                  "upload_date_unix": 1714204800
                },
                "similarity": 0.95,
                "text": "Hello, how are you?"
              }
            ],
            "verification_attempts_count": 0,
            "verification_failures": []
          }
        }
      },
      "VoiceSafetyDBModel": {
        "properties": {
          "childlike_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Childlike Score"
          },
          "last_childlike_score_update_unix_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Childlike Score Update Unix Ms"
          }
        },
        "type": "object",
        "title": "VoiceSafetyDBModel",
        "description": "These fields should not be shown to end-users."
      },
      "VoiceSamplePreviewResponseModel": {
        "properties": {
          "audio_base_64": {
            "type": "string",
            "title": "Audio Base 64",
            "description": "The base64 encoded audio."
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id",
            "description": "The ID of the voice."
          },
          "sample_id": {
            "type": "string",
            "title": "Sample Id",
            "description": "The ID of the sample."
          },
          "media_type": {
            "type": "string",
            "title": "Media Type",
            "description": "The media type of the audio."
          },
          "duration_secs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Secs",
            "description": "The duration of the audio in seconds."
          }
        },
        "type": "object",
        "required": [
          "audio_base_64",
          "voice_id",
          "sample_id",
          "media_type"
        ],
        "title": "VoiceSamplePreviewResponseModel",
        "example": {
          "audio_base_64": "audio_base_64",
          "duration_secs": 5,
          "media_type": "audio/mpeg",
          "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "voice_id": "DCwhRBWXzGAHq8TQ4Fs18"
        }
      },
      "VoiceSampleVisualWaveformResponseModel": {
        "properties": {
          "sample_id": {
            "type": "string",
            "title": "Sample Id",
            "description": "The ID of the sample."
          },
          "visual_waveform": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Visual Waveform",
            "description": "The visual waveform of the sample, represented as a list of floats."
          }
        },
        "type": "object",
        "required": [
          "sample_id",
          "visual_waveform"
        ],
        "title": "VoiceSampleVisualWaveformResponseModel",
        "example": {
          "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "visual_waveform": [0.1, 0.2, 0.3, 0.4, 0.5]
        }
      },
      "VoiceSettingsDBModel": {
        "properties": {
          "stability": {
            "type": "number",
            "title": "Stability"
          },
          "use_speaker_boost": {
            "type": "boolean",
            "title": "Use Speaker Boost"
          },
          "similarity_boost": {
            "type": "number",
            "title": "Similarity Boost"
          },
          "style": {
            "type": "number",
            "title": "Style"
          },
          "speed": {
            "type": "number",
            "title": "Speed"
          }
        },
        "type": "object",
        "required": [
          "stability",
          "use_speaker_boost",
          "similarity_boost",
          "style",
          "speed"
        ],
        "title": "VoiceSettingsDBModel"
      },
      "VoiceSettingsResponseModel": {
        "properties": {
          "stability": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stability",
            "description": "Determines how stable the voice is and the randomness between each generation. Lower values introduce broader emotional range for the voice. Higher values can result in a monotonous voice with limited emotion."
          },
          "use_speaker_boost": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Use Speaker Boost",
            "description": "This setting boosts the similarity to the original speaker. Using this setting requires a slightly higher computational load, which in turn increases latency."
          },
          "similarity_boost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Boost",
            "description": "Determines how closely the AI should adhere to the original voice when attempting to replicate it."
          },
          "style": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Style",
            "description": "Determines the style exaggeration of the voice. This setting attempts to amplify the style of the original speaker. It does consume additional computational resources and might increase latency if set to anything other than 0."
          },
          "speed": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speed",
            "description": "Adjusts the speed of the voice. A value of 1.0 is the default speed, while values less than 1.0 slow down the speech, and values greater than 1.0 speed it up."
          }
        },
        "type": "object",
        "title": "VoiceSettingsResponseModel",
        "example": {
          "similarity_boost": 1,
          "speed": 1,
          "stability": 1,
          "style": 0,
          "use_speaker_boost": true
        }
      },
      "VoiceSharingComputedPropertiesDBModel": {
        "properties": {
          "usage_character_count_1y": {
            "type": "integer",
            "title": "Usage Character Count 1Y"
          },
          "usage_character_count_7d": {
            "type": "integer",
            "title": "Usage Character Count 7D"
          },
          "usage_character_count_1d": {
            "type": "integer",
            "title": "Usage Character Count 1D"
          },
          "play_api_usage_character_count_1y": {
            "type": "integer",
            "title": "Play Api Usage Character Count 1Y"
          },
          "cloned_by_count": {
            "type": "integer",
            "title": "Cloned By Count"
          },
          "cloned_by_count_7d": {
            "type": "integer",
            "title": "Cloned By Count 7D"
          },
          "cloned_by_count_1d": {
            "type": "integer",
            "title": "Cloned By Count 1D"
          },
          "updated_date_unix": {
            "type": "integer",
            "title": "Updated Date Unix"
          },
          "age": {
            "type": "string",
            "title": "Age"
          },
          "gender": {
            "type": "string",
            "title": "Gender"
          },
          "accent": {
            "type": "string",
            "title": "Accent"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "descriptive": {
            "type": "string",
            "title": "Descriptive"
          },
          "use_case": {
            "type": "string",
            "title": "Use Case"
          },
          "category": {
            "type": "string",
            "title": "Category"
          },
          "needs_update": {
            "type": "boolean",
            "title": "Needs Update"
          },
          "featured": {
            "type": "boolean",
            "title": "Featured"
          },
          "featured_date_unix": {
            "type": "integer",
            "title": "Featured Date Unix"
          },
          "trending_score": {
            "type": "number",
            "title": "Trending Score"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url"
          }
        },
        "type": "object",
        "required": [
          "usage_character_count_1y",
          "usage_character_count_7d",
          "usage_character_count_1d",
          "play_api_usage_character_count_1y",
          "cloned_by_count",
          "cloned_by_count_7d",
          "cloned_by_count_1d",
          "updated_date_unix",
          "age",
          "gender",
          "accent",
          "language",
          "descriptive",
          "use_case",
          "category",
          "needs_update",
          "featured",
          "featured_date_unix",
          "trending_score",
          "image_url"
        ],
        "title": "VoiceSharingComputedPropertiesDBModel"
      },
      "VoiceSharingDBModel": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled",
              "copied",
              "copied_disabled"
            ],
            "title": "Status"
          },
          "history_item_sample_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "History Item Sample Id"
          },
          "date_unix": {
            "type": "integer",
            "title": "Date Unix"
          },
          "whitelisted_emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Whitelisted Emails"
          },
          "owner_id": {
            "type": "string",
            "title": "Owner Id"
          },
          "original_voice_id": {
            "type": "string",
            "title": "Original Voice Id"
          },
          "financial_rewards_enabled": {
            "type": "boolean",
            "title": "Financial Rewards Enabled"
          },
          "free_users_allowed": {
            "type": "boolean",
            "title": "Free Users Allowed"
          },
          "live_moderation_enabled": {
            "type": "boolean",
            "title": "Live Moderation Enabled"
          },
          "reader_app_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reader App Enabled"
          },
          "rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate"
          },
          "notice_period": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notice Period"
          },
          "disable_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disable At Unix"
          },
          "voice_mixing_allowed": {
            "type": "boolean",
            "title": "Voice Mixing Allowed",
            "default": false
          },
          "instagram_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram Username"
          },
          "twitter_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Twitter Username"
          },
          "youtube_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Youtube Username"
          },
          "tiktok_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tiktok Username"
          },
          "ban_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ban Reason"
          },
          "liked_by": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VoiceSharingRefDBModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Liked By"
          },
          "cloned_by": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VoiceSharingRefDBModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cloned By"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Labels"
          },
          "review_status": {
            "type": "string",
            "enum": [
              "not_requested",
              "pending",
              "declined",
              "allowed",
              "allowed_with_changes"
            ],
            "title": "Review Status",
            "default": "not_requested"
          },
          "review_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Message"
          },
          "enabled_in_library": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled In Library",
            "default": false
          },
          "_computed_properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSharingComputedPropertiesDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "moderation_check": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSharingModerationCheckDBModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "reader_restricted_on": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ReaderResourceDBModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reader Restricted On"
          },
          "remote_environment_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remote Environment Id"
          }
        },
        "type": "object",
        "required": [
          "status",
          "history_item_sample_id",
          "date_unix",
          "whitelisted_emails",
          "owner_id",
          "original_voice_id",
          "financial_rewards_enabled",
          "free_users_allowed",
          "live_moderation_enabled"
        ],
        "title": "VoiceSharingDBModel"
      },
      "VoiceSharingModerationCheckDBModel": {
        "properties": {
          "date_checked_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Checked Unix"
          },
          "name_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Value"
          },
          "name_check": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Check"
          },
          "description_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Value"
          },
          "description_check": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Check"
          },
          "sample_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample Ids"
          },
          "sample_checks": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample Checks"
          },
          "captcha_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captcha Ids"
          },
          "captcha_checks": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captcha Checks"
          }
        },
        "type": "object",
        "title": "VoiceSharingModerationCheckDBModel"
      },
      "VoiceSharingModerationCheckResponseModel": {
        "properties": {
          "date_checked_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Checked Unix",
            "description": "The date the moderation check was made in Unix time."
          },
          "name_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Value",
            "description": "The name value of the voice."
          },
          "name_check": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name Check",
            "description": "Whether the name check was successful."
          },
          "description_value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Value",
            "description": "The description value of the voice."
          },
          "description_check": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Check",
            "description": "Whether the description check was successful."
          },
          "sample_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample Ids",
            "description": "A list of sample IDs."
          },
          "sample_checks": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sample Checks",
            "description": "A list of sample checks."
          },
          "captcha_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captcha Ids",
            "description": "A list of captcha IDs."
          },
          "captcha_checks": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Captcha Checks",
            "description": "A list of CAPTCHA check values."
          }
        },
        "type": "object",
        "title": "VoiceSharingModerationCheckResponseModel",
        "example": {
          "captcha_checks": [0.95, 0.98],
          "captcha_ids": [
            "captcha1",
            "captcha2"
          ],
          "date_checked_unix": 1714204800,
          "description_check": true,
          "description_value": "A female voice with a soft and friendly tone.",
          "name_check": true,
          "name_value": "Rachel",
          "sample_checks": [0.95, 0.98],
          "sample_ids": [
            "sample1",
            "sample2"
          ]
        }
      },
      "VoiceSharingRefDBModel": {
        "properties": {
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "is_workspace": {
            "type": "boolean",
            "title": "Is Workspace"
          },
          "date_unix": {
            "type": "integer",
            "title": "Date Unix"
          },
          "remote_environment_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remote Environment Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "workspace_id",
          "is_workspace",
          "date_unix"
        ],
        "title": "VoiceSharingRefDBModel"
      },
      "VoiceSharingResponseModel": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled",
              "copied",
              "copied_disabled"
            ],
            "title": "Status",
            "description": "The status of the voice sharing."
          },
          "history_item_sample_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "History Item Sample Id",
            "description": "The sample ID of the history item."
          },
          "date_unix": {
            "type": "integer",
            "title": "Date Unix",
            "description": "The date of the voice sharing in Unix time."
          },
          "whitelisted_emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Whitelisted Emails",
            "description": "A list of whitelisted emails."
          },
          "public_owner_id": {
            "type": "string",
            "title": "Public Owner Id",
            "description": "The ID of the public owner."
          },
          "original_voice_id": {
            "type": "string",
            "title": "Original Voice Id",
            "description": "The ID of the original voice."
          },
          "financial_rewards_enabled": {
            "type": "boolean",
            "title": "Financial Rewards Enabled",
            "description": "Whether financial rewards are enabled."
          },
          "free_users_allowed": {
            "type": "boolean",
            "title": "Free Users Allowed",
            "description": "Whether free users are allowed."
          },
          "live_moderation_enabled": {
            "type": "boolean",
            "title": "Live Moderation Enabled",
            "description": "Whether live moderation is enabled."
          },
          "rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate",
            "description": "The rate of the voice sharing."
          },
          "fiat_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fiat Rate",
            "description": "The rate of the voice sharing in USD per 1000 credits."
          },
          "notice_period": {
            "type": "integer",
            "title": "Notice Period",
            "description": "The notice period of the voice sharing."
          },
          "disable_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disable At Unix",
            "description": "The date of the voice sharing in Unix time."
          },
          "voice_mixing_allowed": {
            "type": "boolean",
            "title": "Voice Mixing Allowed",
            "description": "Whether voice mixing is allowed."
          },
          "featured": {
            "type": "boolean",
            "title": "Featured",
            "description": "Whether the voice is featured."
          },
          "category": {
            "type": "string",
            "enum": [
              "generated",
              "cloned",
              "premade",
              "professional",
              "famous",
              "high_quality"
            ],
            "title": "Category",
            "description": "The category of the voice."
          },
          "reader_app_enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reader App Enabled",
            "description": "Whether the reader app is enabled."
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "description": "The image URL of the voice."
          },
          "ban_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ban Reason",
            "description": "The ban reason of the voice."
          },
          "liked_by_count": {
            "type": "integer",
            "title": "Liked By Count",
            "description": "The number of likes on the voice."
          },
          "cloned_by_count": {
            "type": "integer",
            "title": "Cloned By Count",
            "description": "The number of clones on the voice."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the voice."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the voice."
          },
          "labels": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Labels",
            "description": "The labels of the voice."
          },
          "review_status": {
            "type": "string",
            "enum": [
              "not_requested",
              "pending",
              "declined",
              "allowed",
              "allowed_with_changes"
            ],
            "title": "Review Status",
            "description": "The review status of the voice."
          },
          "review_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Message",
            "description": "The review message of the voice."
          },
          "enabled_in_library": {
            "type": "boolean",
            "title": "Enabled In Library",
            "description": "Whether the voice is enabled in the library."
          },
          "instagram_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instagram Username",
            "description": "The Instagram username of the voice."
          },
          "twitter_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Twitter Username",
            "description": "The Twitter/X username of the voice."
          },
          "youtube_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Youtube Username",
            "description": "The YouTube username of the voice."
          },
          "tiktok_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tiktok Username",
            "description": "The TikTok username of the voice."
          },
          "moderation_check": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VoiceSharingModerationCheckResponseModel"
              },
              {
                "type": "null"
              }
            ],
            "description": "The moderation check of the voice."
          },
          "reader_restricted_on": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ReaderResourceResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reader Restricted On",
            "description": "The reader restricted on of the voice."
          }
        },
        "type": "object",
        "required": [
          "status",
          "date_unix",
          "whitelisted_emails",
          "public_owner_id",
          "original_voice_id",
          "financial_rewards_enabled",
          "free_users_allowed",
          "live_moderation_enabled",
          "notice_period",
          "voice_mixing_allowed",
          "featured",
          "category",
          "liked_by_count",
          "cloned_by_count",
          "name",
          "labels",
          "review_status",
          "enabled_in_library"
        ],
        "title": "VoiceSharingResponseModel",
        "example": {
          "category": "professional",
          "cloned_by_count": 50,
          "date_unix": 1714204800,
          "description": "A female voice with a soft and friendly tone.",
          "disable_at_unix": 1714204800,
          "enabled_in_library": true,
          "featured": true,
          "financial_rewards_enabled": true,
          "free_users_allowed": true,
          "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "labels": {
            "accent": "American",
            "gender": "female"
          },
          "liked_by_count": 100,
          "live_moderation_enabled": true,
          "moderation_check": {
            "captcha_checks": [0.95, 0.98],
            "captcha_ids": [
              "captcha1",
              "captcha2"
            ],
            "date_checked_unix": 1714204800,
            "description_check": true,
            "description_value": "A female voice with a soft and friendly tone.",
            "name_check": true,
            "name_value": "Rachel",
            "sample_checks": [0.95, 0.98],
            "sample_ids": [
              "sample1",
              "sample2"
            ]
          },
          "name": "Rachel",
          "notice_period": 30,
          "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "rate": 0.05,
          "reader_app_enabled": true,
          "reader_restricted_on": [
            {
              "resource_id": "FCwhRBWXzGAHq8TQ4Fs18",
              "resource_type": "read"
            }
          ],
          "review_status": "allowed",
          "status": "enabled",
          "voice_mixing_allowed": false,
          "whitelisted_emails": [
            "example@example.com"
          ]
        }
      },
      "VoiceSharingStatsResponseModel": {
        "properties": {
          "time": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Time"
          },
          "usage": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Usage"
          },
          "financial_rewards": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Financial Rewards"
          },
          "character_rewards": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Character Rewards"
          }
        },
        "type": "object",
        "required": [
          "time",
          "usage",
          "financial_rewards",
          "character_rewards"
        ],
        "title": "VoiceSharingStatsResponseModel"
      },
      "VoiceVerificationDBModel-Input": {
        "properties": {
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "requires_verification": {
            "type": "boolean",
            "title": "Requires Verification",
            "default": false
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          },
          "attempts": {
            "items": {
              "$ref": "#/components/schemas/VerificationAttemptDBModel"
            },
            "type": "array",
            "title": "Attempts"
          },
          "audio_verification_slices": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Audio Verification Slices"
          }
        },
        "type": "object",
        "title": "VoiceVerificationDBModel"
      },
      "VoiceVerificationDBModel-Output": {
        "properties": {
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "requires_verification": {
            "type": "boolean",
            "title": "Requires Verification",
            "default": false
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "default": false
          },
          "attempts": {
            "items": {
              "$ref": "#/components/schemas/VerificationAttemptDBModel"
            },
            "type": "array",
            "title": "Attempts"
          },
          "audio_verification_slices": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Audio Verification Slices"
          }
        },
        "type": "object",
        "title": "VoiceVerificationDBModel"
      },
      "VoiceVerificationResponseModel": {
        "properties": {
          "requires_verification": {
            "type": "boolean",
            "title": "Requires Verification",
            "description": "Whether the voice requires verification."
          },
          "is_verified": {
            "type": "boolean",
            "title": "Is Verified",
            "description": "Whether the voice has been verified."
          },
          "verification_failures": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Verification Failures",
            "description": "List of verification failures."
          },
          "verification_attempts_count": {
            "type": "integer",
            "title": "Verification Attempts Count",
            "description": "The number of verification attempts."
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "The language of the voice."
          },
          "verification_attempts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/VerificationAttemptResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verification Attempts",
            "description": "Number of times a verification was attempted."
          }
        },
        "type": "object",
        "required": [
          "requires_verification",
          "is_verified",
          "verification_failures",
          "verification_attempts_count"
        ],
        "title": "VoiceVerificationResponseModel",
        "example": {
          "is_verified": true,
          "language": "en",
          "requires_verification": false,
          "verification_attempts": [
            {
              "accepted": true,
              "date_unix": 1714204800,
              "levenshtein_distance": 2,
              "recording": {
                "mime_type": "audio/mpeg",
                "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                "size_bytes": 1000000,
                "transcription": "Hello, how are you?",
                "upload_date_unix": 1714204800
              },
              "similarity": 0.95,
              "text": "Hello, how are you?"
            }
          ],
          "verification_attempts_count": 0,
          "verification_failures": []
        }
      },
      "VoicemailDetectionToolConfig": {
        "properties": {
          "system_tool_type": {
            "type": "string",
            "const": "voicemail_detection",
            "title": "System Tool Type",
            "default": "voicemail_detection"
          },
          "voicemail_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voicemail Message",
            "description": "Optional message to leave on voicemail when detected. If not provided, the call will end immediately when voicemail is detected."
          }
        },
        "type": "object",
        "title": "VoicemailDetectionToolConfig",
        "description": "Allows the agent to detect when a voicemail system is encountered.\n\nThis tool should be invoked by the LLM when it detects that the call has been\nanswered by a voicemail system rather than a human. If a voicemail message\nis configured, it will be played; otherwise the call will end immediately."
      },
      "VoiceoverStudioScriptLineResponseModel": {
        "properties": {
          "start_time_secs": {
            "type": "number",
            "title": "Start Time Secs"
          },
          "end_time_secs": {
            "type": "number",
            "title": "End Time Secs"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "type": "object",
        "required": [
          "start_time_secs",
          "end_time_secs",
          "text"
        ],
        "title": "VoiceoverStudioScriptLineResponseModel"
      },
      "VttExportRequest": {
        "properties": {
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          }
        },
        "type": "object",
        "title": "VttExportRequest"
      },
      "WaveformSample": {
        "properties": {
          "time": {
            "type": "number",
            "title": "Time"
          },
          "value": {
            "type": "number",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "time",
          "value"
        ],
        "title": "WaveformSample"
      },
      "WebhookAuthMethodType": {
        "type": "string",
        "enum": [
          "hmac",
          "oauth2"
        ],
        "title": "WebhookAuthMethodType"
      },
      "WebhookToolApiSchemaConfig-Input": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL that the webhook will be sent to. May include path parameters, e.g. https://example.com/agents/{agent_id}"
          },
          "method": {
            "type": "string",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "title": "Method",
            "description": "The HTTP method to use for the webhook",
            "default": "GET"
          },
          "path_params_schema": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "type": "object",
            "title": "Path Params Schema",
            "description": "Schema for path parameters, if any. The keys should match the placeholders in the URL."
          },
          "query_params_schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QueryParamsJsonSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for any query params, if any. These will be added to end of the URL as query params. Note: properties in a query param must all be literal types"
          },
          "request_body_schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Input"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for the body parameters, if any. Used for POST/PATCH/PUT requests. The schema should be an object which will be sent as the json body"
          },
          "request_headers": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                },
                {
                  "$ref": "#/components/schemas/ConvAIDynamicVariable"
                }
              ]
            },
            "type": "object",
            "title": "Request Headers",
            "description": "Headers that should be included in the request"
          },
          "auth_connection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthConnectionLocator"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional auth connection to use for authentication with this webhook"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "WebhookToolApiSchemaConfig",
        "description": "Configuration for a webhook that will be called by an LLM tool.",
        "example": {
          "method": "GET",
          "path_params_schema": {
            "agent_id": {
              "type": "string"
            }
          },
          "query_params_schema": {
            "param1": {
              "type": "string"
            }
          },
          "request_body_schema": {
            "param1": {
              "type": "string"
            }
          },
          "request_headers": {
            "Authorization": "Bearer {api_key}"
          },
          "url": "https://example.com/agents/{agent_id}"
        }
      },
      "WebhookToolApiSchemaConfig-Output": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The URL that the webhook will be sent to. May include path parameters, e.g. https://example.com/agents/{agent_id}"
          },
          "method": {
            "type": "string",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "title": "Method",
            "description": "The HTTP method to use for the webhook",
            "default": "GET"
          },
          "path_params_schema": {
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "type": "object",
            "title": "Path Params Schema",
            "description": "Schema for path parameters, if any. The keys should match the placeholders in the URL."
          },
          "query_params_schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QueryParamsJsonSchema"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for any query params, if any. These will be added to end of the URL as query params. Note: properties in a query param must all be literal types"
          },
          "request_body_schema": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty-Output"
              },
              {
                "type": "null"
              }
            ],
            "description": "Schema for the body parameters, if any. Used for POST/PATCH/PUT requests. The schema should be an object which will be sent as the json body"
          },
          "request_headers": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                },
                {
                  "$ref": "#/components/schemas/ConvAIDynamicVariable"
                }
              ]
            },
            "type": "object",
            "title": "Request Headers",
            "description": "Headers that should be included in the request"
          },
          "auth_connection": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AuthConnectionLocator"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional auth connection to use for authentication with this webhook"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "WebhookToolApiSchemaConfig",
        "description": "Configuration for a webhook that will be called by an LLM tool.",
        "example": {
          "method": "GET",
          "path_params_schema": {
            "agent_id": {
              "type": "string"
            }
          },
          "query_params_schema": {
            "param1": {
              "type": "string"
            }
          },
          "request_body_schema": {
            "param1": {
              "type": "string"
            }
          },
          "request_headers": {
            "Authorization": "Bearer {api_key}"
          },
          "url": "https://example.com/agents/{agent_id}"
        }
      },
      "WebhookToolConfig-Input": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "maximum": 120,
            "minimum": 5,
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete. Must be between 5 and 120 seconds (inclusive).",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "type": {
            "type": "string",
            "const": "webhook",
            "title": "Type",
            "description": "The type of tool",
            "default": "webhook"
          },
          "api_schema": {
            "$ref": "#/components/schemas/WebhookToolApiSchemaConfig-Input",
            "description": "The schema for the outgoing webhoook, including parameters and URL specification"
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig",
            "description": "Configuration for dynamic variables"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "api_schema"
        ],
        "title": "WebhookToolConfig",
        "description": "A webhook tool is a tool that calls an external webhook from our server",
        "example": {
          "response_timeout_secs": 20,
          "type": "webhook"
        }
      },
      "WebhookToolConfig-Output": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "minLength": 0,
            "title": "Description"
          },
          "response_timeout_secs": {
            "type": "integer",
            "maximum": 120,
            "minimum": 5,
            "title": "Response Timeout Secs",
            "description": "The maximum time in seconds to wait for the tool call to complete. Must be between 5 and 120 seconds (inclusive).",
            "default": 20
          },
          "disable_interruptions": {
            "type": "boolean",
            "title": "Disable Interruptions",
            "description": "If true, the user will not be able to interrupt the agent while this tool is running.",
            "default": false
          },
          "force_pre_tool_speech": {
            "type": "boolean",
            "title": "Force Pre Tool Speech",
            "description": "If true, the agent will speak before the tool call.",
            "default": false
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/DynamicVariableAssignment"
            },
            "type": "array",
            "title": "Assignments",
            "description": "Configuration for extracting values from tool responses and assigning them to dynamic variables"
          },
          "type": {
            "type": "string",
            "const": "webhook",
            "title": "Type",
            "description": "The type of tool",
            "default": "webhook"
          },
          "api_schema": {
            "$ref": "#/components/schemas/WebhookToolApiSchemaConfig-Output",
            "description": "The schema for the outgoing webhoook, including parameters and URL specification"
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig",
            "description": "Configuration for dynamic variables"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "api_schema"
        ],
        "title": "WebhookToolConfig",
        "description": "A webhook tool is a tool that calls an external webhook from our server",
        "example": {
          "response_timeout_secs": 20,
          "type": "webhook"
        }
      },
      "WebhookUsageType": {
        "type": "string",
        "enum": [
          "ConvAI Agent Settings",
          "ConvAI Settings",
          "Voice Library Removal Notices",
          "Speech to Text"
        ],
        "title": "WebhookUsageType"
      },
      "WidgetConfig-Input": {
        "properties": {
          "variant": {
            "$ref": "#/components/schemas/EmbedVariant",
            "description": "The variant of the widget",
            "default": "full"
          },
          "placement": {
            "$ref": "#/components/schemas/WidgetPlacement",
            "description": "The placement of the widget on the screen",
            "default": "bottom-right"
          },
          "expandable": {
            "$ref": "#/components/schemas/WidgetExpandable",
            "description": "Whether the widget is expandable",
            "default": "never"
          },
          "avatar": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrbAvatar"
              },
              {
                "$ref": "#/components/schemas/URLAvatar"
              },
              {
                "$ref": "#/components/schemas/ImageAvatar"
              }
            ],
            "title": "Avatar",
            "description": "The avatar of the widget"
          },
          "feedback_mode": {
            "$ref": "#/components/schemas/WidgetFeedbackMode",
            "description": "The feedback mode of the widget",
            "default": "none"
          },
          "bg_color": {
            "type": "string",
            "title": "Bg Color",
            "description": "The background color of the widget",
            "default": "#ffffff"
          },
          "text_color": {
            "type": "string",
            "title": "Text Color",
            "description": "The text color of the widget",
            "default": "#000000"
          },
          "btn_color": {
            "type": "string",
            "title": "Btn Color",
            "description": "The button color of the widget",
            "default": "#000000"
          },
          "btn_text_color": {
            "type": "string",
            "title": "Btn Text Color",
            "description": "The button text color of the widget",
            "default": "#ffffff"
          },
          "border_color": {
            "type": "string",
            "title": "Border Color",
            "description": "The border color of the widget",
            "default": "#e1e1e1"
          },
          "focus_color": {
            "type": "string",
            "title": "Focus Color",
            "description": "The focus color of the widget",
            "default": "#000000"
          },
          "border_radius": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Border Radius",
            "description": "The border radius of the widget"
          },
          "btn_radius": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Btn Radius",
            "description": "The button radius of the widget"
          },
          "action_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Text",
            "description": "The action text of the widget"
          },
          "start_call_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Call Text",
            "description": "The start call text of the widget"
          },
          "end_call_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Call Text",
            "description": "The end call text of the widget"
          },
          "expand_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expand Text",
            "description": "The expand text of the widget"
          },
          "listening_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listening Text",
            "description": "The text to display when the agent is listening"
          },
          "speaking_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaking Text",
            "description": "The text to display when the agent is speaking"
          },
          "shareable_page_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shareable Page Text",
            "description": "The text to display when sharing"
          },
          "shareable_page_show_terms": {
            "type": "boolean",
            "title": "Shareable Page Show Terms",
            "description": "Whether to show terms and conditions on the shareable page",
            "default": true
          },
          "terms_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Text",
            "description": "The text to display for terms and conditions"
          },
          "terms_html": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Html",
            "description": "The HTML to display for terms and conditions"
          },
          "terms_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Key",
            "description": "The key to display for terms and conditions"
          },
          "show_avatar_when_collapsed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Show Avatar When Collapsed",
            "description": "Whether to show the avatar when the widget is collapsed",
            "default": false
          },
          "disable_banner": {
            "type": "boolean",
            "title": "Disable Banner",
            "description": "Whether to disable the banner",
            "default": false
          },
          "override_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Override Link",
            "description": "The override link for the widget"
          },
          "mic_muting_enabled": {
            "type": "boolean",
            "title": "Mic Muting Enabled",
            "description": "Whether to enable mic muting",
            "default": false
          },
          "transcript_enabled": {
            "type": "boolean",
            "title": "Transcript Enabled",
            "description": "Whether the widget should show the conversation transcript as it goes on",
            "default": false
          },
          "text_input_enabled": {
            "type": "boolean",
            "title": "Text Input Enabled",
            "description": "Whether the user should be able to send text messages",
            "default": true
          },
          "default_expanded": {
            "type": "boolean",
            "title": "Default Expanded",
            "description": "Whether the widget should be expanded by default",
            "default": false
          },
          "always_expanded": {
            "type": "boolean",
            "title": "Always Expanded",
            "description": "Whether the widget should always be expanded",
            "default": false
          },
          "text_contents": {
            "$ref": "#/components/schemas/WidgetTextContents",
            "description": "Text contents of the widget"
          },
          "styles": {
            "$ref": "#/components/schemas/WidgetStyles",
            "description": "Styles for the widget"
          },
          "language_selector": {
            "type": "boolean",
            "title": "Language Selector",
            "description": "Whether to show the language selector",
            "default": false
          },
          "supports_text_only": {
            "type": "boolean",
            "title": "Supports Text Only",
            "description": "Whether the widget can switch to text only mode",
            "default": true
          },
          "custom_avatar_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Avatar Path",
            "description": "The custom avatar path"
          },
          "language_presets": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WidgetLanguagePreset"
            },
            "type": "object",
            "title": "Language Presets",
            "description": "Language presets for the widget"
          }
        },
        "type": "object",
        "title": "WidgetConfig",
        "example": {
          "custom_avatar_path": "https://example.com/avatar.png",
          "language_selector": false
        }
      },
      "WidgetConfig-Output": {
        "properties": {
          "variant": {
            "$ref": "#/components/schemas/EmbedVariant",
            "description": "The variant of the widget",
            "default": "full"
          },
          "placement": {
            "$ref": "#/components/schemas/WidgetPlacement",
            "description": "The placement of the widget on the screen",
            "default": "bottom-right"
          },
          "expandable": {
            "$ref": "#/components/schemas/WidgetExpandable",
            "description": "Whether the widget is expandable",
            "default": "never"
          },
          "avatar": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrbAvatar"
              },
              {
                "$ref": "#/components/schemas/URLAvatar"
              },
              {
                "$ref": "#/components/schemas/ImageAvatar"
              }
            ],
            "title": "Avatar",
            "description": "The avatar of the widget"
          },
          "feedback_mode": {
            "$ref": "#/components/schemas/WidgetFeedbackMode",
            "description": "The feedback mode of the widget",
            "default": "none"
          },
          "bg_color": {
            "type": "string",
            "title": "Bg Color",
            "description": "The background color of the widget",
            "default": "#ffffff"
          },
          "text_color": {
            "type": "string",
            "title": "Text Color",
            "description": "The text color of the widget",
            "default": "#000000"
          },
          "btn_color": {
            "type": "string",
            "title": "Btn Color",
            "description": "The button color of the widget",
            "default": "#000000"
          },
          "btn_text_color": {
            "type": "string",
            "title": "Btn Text Color",
            "description": "The button text color of the widget",
            "default": "#ffffff"
          },
          "border_color": {
            "type": "string",
            "title": "Border Color",
            "description": "The border color of the widget",
            "default": "#e1e1e1"
          },
          "focus_color": {
            "type": "string",
            "title": "Focus Color",
            "description": "The focus color of the widget",
            "default": "#000000"
          },
          "border_radius": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Border Radius",
            "description": "The border radius of the widget"
          },
          "btn_radius": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Btn Radius",
            "description": "The button radius of the widget"
          },
          "action_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Text",
            "description": "The action text of the widget"
          },
          "start_call_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Call Text",
            "description": "The start call text of the widget"
          },
          "end_call_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Call Text",
            "description": "The end call text of the widget"
          },
          "expand_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expand Text",
            "description": "The expand text of the widget"
          },
          "listening_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listening Text",
            "description": "The text to display when the agent is listening"
          },
          "speaking_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaking Text",
            "description": "The text to display when the agent is speaking"
          },
          "shareable_page_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shareable Page Text",
            "description": "The text to display when sharing"
          },
          "shareable_page_show_terms": {
            "type": "boolean",
            "title": "Shareable Page Show Terms",
            "description": "Whether to show terms and conditions on the shareable page",
            "default": true
          },
          "terms_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Text",
            "description": "The text to display for terms and conditions"
          },
          "terms_html": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Html",
            "description": "The HTML to display for terms and conditions"
          },
          "terms_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Key",
            "description": "The key to display for terms and conditions"
          },
          "show_avatar_when_collapsed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Show Avatar When Collapsed",
            "description": "Whether to show the avatar when the widget is collapsed",
            "default": false
          },
          "disable_banner": {
            "type": "boolean",
            "title": "Disable Banner",
            "description": "Whether to disable the banner",
            "default": false
          },
          "override_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Override Link",
            "description": "The override link for the widget"
          },
          "mic_muting_enabled": {
            "type": "boolean",
            "title": "Mic Muting Enabled",
            "description": "Whether to enable mic muting",
            "default": false
          },
          "transcript_enabled": {
            "type": "boolean",
            "title": "Transcript Enabled",
            "description": "Whether the widget should show the conversation transcript as it goes on",
            "default": false
          },
          "text_input_enabled": {
            "type": "boolean",
            "title": "Text Input Enabled",
            "description": "Whether the user should be able to send text messages",
            "default": true
          },
          "default_expanded": {
            "type": "boolean",
            "title": "Default Expanded",
            "description": "Whether the widget should be expanded by default",
            "default": false
          },
          "always_expanded": {
            "type": "boolean",
            "title": "Always Expanded",
            "description": "Whether the widget should always be expanded",
            "default": false
          },
          "text_contents": {
            "$ref": "#/components/schemas/WidgetTextContents",
            "description": "Text contents of the widget"
          },
          "styles": {
            "$ref": "#/components/schemas/WidgetStyles",
            "description": "Styles for the widget"
          },
          "language_selector": {
            "type": "boolean",
            "title": "Language Selector",
            "description": "Whether to show the language selector",
            "default": false
          },
          "supports_text_only": {
            "type": "boolean",
            "title": "Supports Text Only",
            "description": "Whether the widget can switch to text only mode",
            "default": true
          },
          "custom_avatar_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Custom Avatar Path",
            "description": "The custom avatar path"
          },
          "language_presets": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WidgetLanguagePreset"
            },
            "type": "object",
            "title": "Language Presets",
            "description": "Language presets for the widget"
          }
        },
        "type": "object",
        "title": "WidgetConfig",
        "example": {
          "custom_avatar_path": "https://example.com/avatar.png",
          "language_selector": false
        }
      },
      "WidgetConfigResponseModel": {
        "properties": {
          "variant": {
            "$ref": "#/components/schemas/EmbedVariant",
            "description": "The variant of the widget",
            "default": "full"
          },
          "placement": {
            "$ref": "#/components/schemas/WidgetPlacement",
            "description": "The placement of the widget on the screen",
            "default": "bottom-right"
          },
          "expandable": {
            "$ref": "#/components/schemas/WidgetExpandable",
            "description": "Whether the widget is expandable",
            "default": "never"
          },
          "avatar": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrbAvatar"
              },
              {
                "$ref": "#/components/schemas/URLAvatar"
              },
              {
                "$ref": "#/components/schemas/ImageAvatar"
              }
            ],
            "title": "Avatar",
            "description": "The avatar of the widget"
          },
          "feedback_mode": {
            "$ref": "#/components/schemas/WidgetFeedbackMode",
            "description": "The feedback mode of the widget",
            "default": "none"
          },
          "bg_color": {
            "type": "string",
            "title": "Bg Color",
            "description": "The background color of the widget",
            "default": "#ffffff"
          },
          "text_color": {
            "type": "string",
            "title": "Text Color",
            "description": "The text color of the widget",
            "default": "#000000"
          },
          "btn_color": {
            "type": "string",
            "title": "Btn Color",
            "description": "The button color of the widget",
            "default": "#000000"
          },
          "btn_text_color": {
            "type": "string",
            "title": "Btn Text Color",
            "description": "The button text color of the widget",
            "default": "#ffffff"
          },
          "border_color": {
            "type": "string",
            "title": "Border Color",
            "description": "The border color of the widget",
            "default": "#e1e1e1"
          },
          "focus_color": {
            "type": "string",
            "title": "Focus Color",
            "description": "The focus color of the widget",
            "default": "#000000"
          },
          "border_radius": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Border Radius",
            "description": "The border radius of the widget"
          },
          "btn_radius": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Btn Radius",
            "description": "The button radius of the widget"
          },
          "action_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Text",
            "description": "The action text of the widget"
          },
          "start_call_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Call Text",
            "description": "The start call text of the widget"
          },
          "end_call_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Call Text",
            "description": "The end call text of the widget"
          },
          "expand_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expand Text",
            "description": "The expand text of the widget"
          },
          "listening_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listening Text",
            "description": "The text to display when the agent is listening"
          },
          "speaking_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaking Text",
            "description": "The text to display when the agent is speaking"
          },
          "shareable_page_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Shareable Page Text",
            "description": "The text to display when sharing"
          },
          "shareable_page_show_terms": {
            "type": "boolean",
            "title": "Shareable Page Show Terms",
            "description": "Whether to show terms and conditions on the shareable page",
            "default": true
          },
          "terms_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Text",
            "description": "The text to display for terms and conditions"
          },
          "terms_html": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Html",
            "description": "The HTML to display for terms and conditions"
          },
          "terms_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Terms Key",
            "description": "The key to display for terms and conditions"
          },
          "show_avatar_when_collapsed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Show Avatar When Collapsed",
            "description": "Whether to show the avatar when the widget is collapsed",
            "default": false
          },
          "disable_banner": {
            "type": "boolean",
            "title": "Disable Banner",
            "description": "Whether to disable the banner",
            "default": false
          },
          "override_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Override Link",
            "description": "The override link for the widget"
          },
          "mic_muting_enabled": {
            "type": "boolean",
            "title": "Mic Muting Enabled",
            "description": "Whether to enable mic muting",
            "default": false
          },
          "transcript_enabled": {
            "type": "boolean",
            "title": "Transcript Enabled",
            "description": "Whether the widget should show the conversation transcript as it goes on",
            "default": false
          },
          "text_input_enabled": {
            "type": "boolean",
            "title": "Text Input Enabled",
            "description": "Whether the user should be able to send text messages",
            "default": true
          },
          "default_expanded": {
            "type": "boolean",
            "title": "Default Expanded",
            "description": "Whether the widget should be expanded by default",
            "default": false
          },
          "always_expanded": {
            "type": "boolean",
            "title": "Always Expanded",
            "description": "Whether the widget should always be expanded",
            "default": false
          },
          "text_contents": {
            "$ref": "#/components/schemas/WidgetTextContents",
            "description": "Text contents of the widget"
          },
          "styles": {
            "$ref": "#/components/schemas/WidgetStyles",
            "description": "Styles for the widget"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "supported_language_overrides": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supported Language Overrides"
          },
          "language_presets": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WidgetLanguagePresetResponse"
            },
            "type": "object",
            "title": "Language Presets",
            "description": "Language presets for the widget"
          },
          "text_only": {
            "type": "boolean",
            "title": "Text Only",
            "description": "Whether the agent uses text-only mode",
            "default": false
          },
          "supports_text_only": {
            "type": "boolean",
            "title": "Supports Text Only",
            "description": "Whether the agent can be switched to text-only mode",
            "default": false
          },
          "first_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Message"
          }
        },
        "type": "object",
        "required": [
          "language"
        ],
        "title": "WidgetConfigResponseModel",
        "example": {
          "first_message": "Hello! How can I help you today?",
          "language": "en",
          "language_presets": {

          },
          "supported_language_overrides": [
            "es",
            "fr"
          ],
          "supports_text_only": true,
          "text_only": false
        }
      },
      "WidgetExpandable": {
        "type": "string",
        "enum": [
          "never",
          "mobile",
          "desktop",
          "always"
        ],
        "title": "WidgetExpandable"
      },
      "WidgetFeedbackMode": {
        "type": "string",
        "enum": [
          "none",
          "during",
          "end"
        ],
        "title": "WidgetFeedbackMode"
      },
      "WidgetLanguagePreset": {
        "properties": {
          "text_contents": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WidgetTextContents"
              },
              {
                "type": "null"
              }
            ],
            "description": "The text contents for the selected language"
          }
        },
        "type": "object",
        "title": "WidgetLanguagePreset"
      },
      "WidgetLanguagePresetResponse": {
        "properties": {
          "first_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Message"
          },
          "text_contents": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WidgetTextContents"
              },
              {
                "type": "null"
              }
            ],
            "description": "The text contents for the selected language"
          }
        },
        "type": "object",
        "title": "WidgetLanguagePresetResponse"
      },
      "WidgetPlacement": {
        "type": "string",
        "enum": [
          "top-left",
          "top",
          "top-right",
          "bottom-left",
          "bottom",
          "bottom-right"
        ],
        "title": "WidgetPlacement"
      },
      "WidgetStyles": {
        "properties": {
          "base": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base",
            "description": "The base background color."
          },
          "base_hover": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Hover",
            "description": "The color of the base background when hovered."
          },
          "base_active": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Active",
            "description": "The color of the base background when active (clicked)."
          },
          "base_border": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Border",
            "description": "The color of the border against the base background."
          },
          "base_subtle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Subtle",
            "description": "The color of subtle text against the base background."
          },
          "base_primary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Primary",
            "description": "The color of primary text against the base background."
          },
          "base_error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Error",
            "description": "The color of error text against the base background."
          },
          "accent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent",
            "description": "The accent background color."
          },
          "accent_hover": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent Hover",
            "description": "The color of the accent background when hovered."
          },
          "accent_active": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent Active",
            "description": "The color of the accent background when active (clicked)."
          },
          "accent_border": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent Border",
            "description": "The color of the border against the accent background."
          },
          "accent_subtle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent Subtle",
            "description": "The color of subtle text against the accent background."
          },
          "accent_primary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accent Primary",
            "description": "The color of primary text against the accent background."
          },
          "overlay_padding": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Overlay Padding",
            "description": "The padding around the edges of the viewport."
          },
          "button_radius": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Button Radius",
            "description": "The radius of the buttons."
          },
          "input_radius": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Radius",
            "description": "The radius of the input fields."
          },
          "bubble_radius": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bubble Radius",
            "description": "The radius of the chat bubbles."
          },
          "sheet_radius": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sheet Radius",
            "description": "The default radius of sheets."
          },
          "compact_sheet_radius": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Compact Sheet Radius",
            "description": "The radius of the sheet in compact mode."
          },
          "dropdown_sheet_radius": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dropdown Sheet Radius",
            "description": "The radius of the dropdown sheet."
          }
        },
        "type": "object",
        "title": "WidgetStyles"
      },
      "WidgetTextContents": {
        "properties": {
          "main_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Main Label",
            "description": "Call to action displayed inside the compact and full variants."
          },
          "start_call": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Call",
            "description": "Text and ARIA label for the start call button."
          },
          "start_chat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Chat",
            "description": "Text and ARIA label for the start chat button (text only)"
          },
          "new_call": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Call",
            "description": "Text and ARIA label for the new call button. Displayed when the caller already finished at least one call in order ot start the next one."
          },
          "end_call": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Call",
            "description": "Text and ARIA label for the end call button."
          },
          "mute_microphone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mute Microphone",
            "description": "ARIA label for the mute microphone button."
          },
          "change_language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Change Language",
            "description": "ARIA label for the change language dropdown."
          },
          "collapse": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Collapse",
            "description": "ARIA label for the collapse button."
          },
          "expand": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expand",
            "description": "ARIA label for the expand button."
          },
          "copied": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Copied",
            "description": "Text displayed when the user copies a value using the copy button."
          },
          "accept_terms": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accept Terms",
            "description": "Text and ARIA label for the accept terms button."
          },
          "dismiss_terms": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dismiss Terms",
            "description": "Text and ARIA label for the cancel terms button."
          },
          "listening_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listening Status",
            "description": "Status displayed when the agent is listening."
          },
          "speaking_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Speaking Status",
            "description": "Status displayed when the agent is speaking."
          },
          "connecting_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Connecting Status",
            "description": "Status displayed when the agent is connecting."
          },
          "chatting_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chatting Status",
            "description": "Status displayed when the agent is chatting (text only)"
          },
          "input_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Label",
            "description": "ARIA label for the text message input."
          },
          "input_placeholder": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Placeholder",
            "description": "Placeholder text for the text message input."
          },
          "input_placeholder_text_only": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Placeholder Text Only",
            "description": "Placeholder text for the text message input (text only)"
          },
          "input_placeholder_new_conversation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Placeholder New Conversation",
            "description": "Placeholder text for the text message input when starting a new conversation (text only)"
          },
          "user_ended_conversation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Ended Conversation",
            "description": "Information message displayed when the user ends the conversation."
          },
          "agent_ended_conversation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Ended Conversation",
            "description": "Information message displayed when the agent ends the conversation."
          },
          "conversation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Id",
            "description": "Text label used next to the conversation ID."
          },
          "error_occurred": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Occurred",
            "description": "Text label used when an error occurs."
          },
          "copy_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Copy Id",
            "description": "Text and ARIA label used for the copy ID button."
          }
        },
        "type": "object",
        "title": "WidgetTextContents"
      },
      "Word-Input": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "segment_id": {
            "type": "string",
            "title": "Segment Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "start_at_seconds": {
            "type": "number",
            "title": "Start At Seconds"
          },
          "end_at_seconds": {
            "type": "number",
            "title": "End At Seconds"
          },
          "type": {
            "type": "string",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "segment_id",
          "text",
          "start_at_seconds",
          "end_at_seconds",
          "type"
        ],
        "title": "Word",
        "description": "Represents a word (or token) annotation associated to a segment."
      },
      "WordTimestamp": {
        "properties": {
          "word": {
            "type": "string",
            "title": "Word"
          },
          "start_ms": {
            "type": "integer",
            "title": "Start Ms"
          },
          "end_ms": {
            "type": "integer",
            "title": "End Ms"
          }
        },
        "type": "object",
        "required": [
          "word",
          "start_ms",
          "end_ms"
        ],
        "title": "WordTimestamp"
      },
      "WordTiming": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "start": {
            "type": "number",
            "title": "Start"
          },
          "end": {
            "type": "number",
            "title": "End"
          }
        },
        "type": "object",
        "required": [
          "text",
          "type",
          "start",
          "end"
        ],
        "title": "WordTiming",
        "description": "Represents a word or spacing with timing information."
      },
      "WordType": {
        "type": "integer",
        "enum": [0, 1, 2],
        "title": "WordType"
      },
      "WorkflowEdgeModel-Input": {
        "properties": {
          "source": {
            "type": "string",
            "title": "Source"
          },
          "target": {
            "type": "string",
            "title": "Target"
          },
          "forward_condition": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/WorkflowUnconditionalModel-Input"
                  },
                  {
                    "$ref": "#/components/schemas/WorkflowLLMConditionModel-Input"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "llm": "#/components/schemas/WorkflowLLMConditionModel-Input",
                    "unconditional": "#/components/schemas/WorkflowUnconditionalModel-Input"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Forward Condition",
            "description": "Condition that must be met for the edge to be traversed in the forward direction."
          },
          "backward_condition": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/WorkflowUnconditionalModel-Input"
                  },
                  {
                    "$ref": "#/components/schemas/WorkflowLLMConditionModel-Input"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "llm": "#/components/schemas/WorkflowLLMConditionModel-Input",
                    "unconditional": "#/components/schemas/WorkflowUnconditionalModel-Input"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Backward Condition",
            "description": "Condition that must be met for the edge to be traversed in the backward direction."
          }
        },
        "type": "object",
        "required": [
          "source",
          "target"
        ],
        "title": "WorkflowEdgeModel"
      },
      "WorkflowEdgeModel-Output": {
        "properties": {
          "source": {
            "type": "string",
            "title": "Source"
          },
          "target": {
            "type": "string",
            "title": "Target"
          },
          "forward_condition": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/WorkflowUnconditionalModel-Output"
                  },
                  {
                    "$ref": "#/components/schemas/WorkflowLLMConditionModel-Output"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "llm": "#/components/schemas/WorkflowLLMConditionModel-Output",
                    "unconditional": "#/components/schemas/WorkflowUnconditionalModel-Output"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Forward Condition",
            "description": "Condition that must be met for the edge to be traversed in the forward direction."
          },
          "backward_condition": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/WorkflowUnconditionalModel-Output"
                  },
                  {
                    "$ref": "#/components/schemas/WorkflowLLMConditionModel-Output"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "llm": "#/components/schemas/WorkflowLLMConditionModel-Output",
                    "unconditional": "#/components/schemas/WorkflowUnconditionalModel-Output"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Backward Condition",
            "description": "Condition that must be met for the edge to be traversed in the backward direction."
          }
        },
        "type": "object",
        "required": [
          "source",
          "target",
          "forward_condition",
          "backward_condition"
        ],
        "title": "WorkflowEdgeModel"
      },
      "WorkflowEndNodeModel-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "end",
            "title": "Type",
            "default": "end"
          },
          "position": {
            "$ref": "#/components/schemas/Position-Input",
            "description": "Position of the node in the workflow."
          }
        },
        "type": "object",
        "title": "WorkflowEndNodeModel"
      },
      "WorkflowEndNodeModel-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "end",
            "title": "Type",
            "default": "end"
          },
          "position": {
            "$ref": "#/components/schemas/Position-Output",
            "description": "Position of the node in the workflow."
          }
        },
        "type": "object",
        "required": [
          "type",
          "position"
        ],
        "title": "WorkflowEndNodeModel"
      },
      "WorkflowLLMConditionModel-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "llm",
            "title": "Type",
            "default": "llm"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          }
        },
        "type": "object",
        "required": [
          "condition"
        ],
        "title": "WorkflowLLMConditionModel"
      },
      "WorkflowLLMConditionModel-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "llm",
            "title": "Type",
            "default": "llm"
          },
          "condition": {
            "type": "string",
            "title": "Condition"
          }
        },
        "type": "object",
        "required": [
          "type",
          "condition"
        ],
        "title": "WorkflowLLMConditionModel"
      },
      "WorkflowOverrideAgentNodeModel-Input": {
        "properties": {
          "conversation_config": {
            "$ref": "#/components/schemas/ConversationalConfigAPIModelWorkflowOverride-Input"
          },
          "additional_prompt": {
            "type": "string",
            "title": "Additional Prompt",
            "default": ""
          },
          "additional_knowledge_base": {
            "items": {
              "$ref": "#/components/schemas/KnowledgeBaseLocator"
            },
            "type": "array",
            "title": "Additional Knowledge Base"
          },
          "type": {
            "type": "string",
            "const": "override_agent",
            "title": "Type",
            "default": "override_agent"
          },
          "position": {
            "$ref": "#/components/schemas/Position-Input",
            "description": "Position of the node in the workflow."
          },
          "label": {
            "type": "string",
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "label"
        ],
        "title": "WorkflowOverrideAgentNodeModel"
      },
      "WorkflowOverrideAgentNodeModel-Output": {
        "properties": {
          "conversation_config": {
            "$ref": "#/components/schemas/ConversationalConfigAPIModelWorkflowOverride-Output"
          },
          "additional_prompt": {
            "type": "string",
            "title": "Additional Prompt",
            "default": ""
          },
          "additional_knowledge_base": {
            "items": {
              "$ref": "#/components/schemas/KnowledgeBaseLocator"
            },
            "type": "array",
            "title": "Additional Knowledge Base"
          },
          "type": {
            "type": "string",
            "const": "override_agent",
            "title": "Type",
            "default": "override_agent"
          },
          "position": {
            "$ref": "#/components/schemas/Position-Output",
            "description": "Position of the node in the workflow."
          },
          "label": {
            "type": "string",
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "conversation_config",
          "additional_prompt",
          "additional_knowledge_base",
          "type",
          "position",
          "label"
        ],
        "title": "WorkflowOverrideAgentNodeModel"
      },
      "WorkflowPhoneNumberNodeModel-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "phone_number",
            "title": "Type",
            "default": "phone_number"
          },
          "position": {
            "$ref": "#/components/schemas/Position-Input",
            "description": "Position of the node in the workflow."
          },
          "transfer_destination": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PhoneNumberTransferDestination"
                  },
                  {
                    "$ref": "#/components/schemas/SIPUriTransferDestination"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "phone": "#/components/schemas/PhoneNumberTransferDestination",
                    "sip_uri": "#/components/schemas/SIPUriTransferDestination"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Transfer Destination"
          },
          "transfer_type": {
            "$ref": "#/components/schemas/TransferTypeEnum",
            "default": "conference"
          }
        },
        "type": "object",
        "title": "WorkflowPhoneNumberNodeModel"
      },
      "WorkflowPhoneNumberNodeModel-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "phone_number",
            "title": "Type",
            "default": "phone_number"
          },
          "position": {
            "$ref": "#/components/schemas/Position-Output",
            "description": "Position of the node in the workflow."
          },
          "transfer_destination": {
            "anyOf": [
              {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PhoneNumberTransferDestination"
                  },
                  {
                    "$ref": "#/components/schemas/SIPUriTransferDestination"
                  }
                ],
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "phone": "#/components/schemas/PhoneNumberTransferDestination",
                    "sip_uri": "#/components/schemas/SIPUriTransferDestination"
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "title": "Transfer Destination"
          },
          "transfer_type": {
            "$ref": "#/components/schemas/TransferTypeEnum",
            "default": "conference"
          }
        },
        "type": "object",
        "required": [
          "type",
          "position",
          "transfer_destination",
          "transfer_type"
        ],
        "title": "WorkflowPhoneNumberNodeModel"
      },
      "WorkflowStandaloneAgentNodeModel-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "standalone_agent",
            "title": "Type",
            "default": "standalone_agent"
          },
          "position": {
            "$ref": "#/components/schemas/Position-Input",
            "description": "Position of the node in the workflow."
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "delay_ms": {
            "type": "integer",
            "title": "Delay Ms",
            "default": 0
          },
          "transfer_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transfer Message"
          },
          "enable_transferred_agent_first_message": {
            "type": "boolean",
            "title": "Enable Transferred Agent First Message",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "agent_id"
        ],
        "title": "WorkflowStandaloneAgentNodeModel"
      },
      "WorkflowStandaloneAgentNodeModel-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "standalone_agent",
            "title": "Type",
            "default": "standalone_agent"
          },
          "position": {
            "$ref": "#/components/schemas/Position-Output",
            "description": "Position of the node in the workflow."
          },
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "delay_ms": {
            "type": "integer",
            "title": "Delay Ms",
            "default": 0
          },
          "transfer_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Transfer Message"
          },
          "enable_transferred_agent_first_message": {
            "type": "boolean",
            "title": "Enable Transferred Agent First Message",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "type",
          "position",
          "agent_id",
          "delay_ms",
          "transfer_message",
          "enable_transferred_agent_first_message"
        ],
        "title": "WorkflowStandaloneAgentNodeModel"
      },
      "WorkflowStartNodeModel-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "start",
            "title": "Type",
            "default": "start"
          },
          "position": {
            "$ref": "#/components/schemas/Position-Input",
            "description": "Position of the node in the workflow."
          }
        },
        "type": "object",
        "title": "WorkflowStartNodeModel"
      },
      "WorkflowStartNodeModel-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "start",
            "title": "Type",
            "default": "start"
          },
          "position": {
            "$ref": "#/components/schemas/Position-Output",
            "description": "Position of the node in the workflow."
          }
        },
        "type": "object",
        "required": [
          "type",
          "position"
        ],
        "title": "WorkflowStartNodeModel"
      },
      "WorkflowUnconditionalModel-Input": {
        "properties": {
          "type": {
            "type": "string",
            "const": "unconditional",
            "title": "Type",
            "default": "unconditional"
          }
        },
        "type": "object",
        "title": "WorkflowUnconditionalModel"
      },
      "WorkflowUnconditionalModel-Output": {
        "properties": {
          "type": {
            "type": "string",
            "const": "unconditional",
            "title": "Type",
            "default": "unconditional"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "WorkflowUnconditionalModel"
      },
      "WorkspaceApiKeyListResponseModel": {
        "properties": {
          "api-keys": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceApiKeyResponseModel"
            },
            "type": "array",
            "title": "Api-Keys"
          }
        },
        "type": "object",
        "required": [
          "api-keys"
        ],
        "title": "WorkspaceApiKeyListResponseModel"
      },
      "WorkspaceApiKeyResponseModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "hint": {
            "type": "string",
            "title": "Hint"
          },
          "key_id": {
            "type": "string",
            "title": "Key Id"
          },
          "service_account_user_id": {
            "type": "string",
            "title": "Service Account User Id"
          },
          "created_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At Unix"
          },
          "is_disabled": {
            "type": "boolean",
            "title": "Is Disabled",
            "default": false
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "text_to_speech",
                    "speech_to_speech",
                    "speech_to_text",
                    "models_read",
                    "models_write",
                    "voices_read",
                    "voices_write",
                    "speech_history_read",
                    "speech_history_write",
                    "sound_generation",
                    "audio_isolation",
                    "voice_generation",
                    "dubbing_read",
                    "dubbing_write",
                    "pronunciation_dictionaries_read",
                    "pronunciation_dictionaries_write",
                    "user_read",
                    "user_write",
                    "projects_read",
                    "projects_write",
                    "audio_native_read",
                    "audio_native_write",
                    "workspace_read",
                    "workspace_write",
                    "forced_alignment"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions"
          },
          "character_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Limit"
          },
          "character_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Count"
          }
        },
        "type": "object",
        "required": [
          "name",
          "hint",
          "key_id",
          "service_account_user_id"
        ],
        "title": "WorkspaceApiKeyResponseModel"
      },
      "WorkspaceBatchCallsResponse": {
        "properties": {
          "batch_calls": {
            "items": {
              "$ref": "#/components/schemas/BatchCallResponse"
            },
            "type": "array",
            "title": "Batch Calls"
          },
          "next_doc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Doc",
            "description": "The next document, used to paginate through the batch calls"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more batch calls to paginate through",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "batch_calls"
        ],
        "title": "WorkspaceBatchCallsResponse"
      },
      "WorkspaceCreateApiKeyResponseModel": {
        "properties": {
          "xi-api-key": {
            "type": "string",
            "title": "Xi-Api-Key"
          }
        },
        "type": "object",
        "required": [
          "xi-api-key"
        ],
        "title": "WorkspaceCreateApiKeyResponseModel"
      },
      "WorkspaceCreateServiceAccountResponseModel": {
        "properties": {
          "service-account-user-id": {
            "type": "string",
            "title": "Service-Account-User-Id"
          }
        },
        "type": "object",
        "required": [
          "service-account-user-id"
        ],
        "title": "WorkspaceCreateServiceAccountResponseModel"
      },
      "WorkspaceCreateWebhookResponseModel": {
        "properties": {
          "webhook_id": {
            "type": "string",
            "title": "Webhook Id"
          },
          "webhook_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook Secret"
          }
        },
        "type": "object",
        "required": [
          "webhook_id"
        ],
        "title": "WorkspaceCreateWebhookResponseModel"
      },
      "WorkspaceGroupByNameResponseModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the workspace group."
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The ID of the workspace group."
          },
          "members_emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Members Emails",
            "description": "The emails of the members of the workspace group."
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "members_emails"
        ],
        "title": "WorkspaceGroupByNameResponseModel",
        "example": {
          "id": "1234567890",
          "members_emails": [
            "john.doe@example.com",
            "jane.smith@example.com"
          ],
          "name": "My Workspace Group"
        }
      },
      "WorkspaceGroupPermission": {
        "type": "string",
        "enum": [
          "text_to_speech",
          "speech_to_speech",
          "voice_lab",
          "sound_effects",
          "projects",
          "voiceover_studio",
          "dubbing",
          "audio_native",
          "conversational_ai",
          "voice_isolator",
          "ai_speech_classifier",
          "add_voice_from_voice_library",
          "create_instant_voice_clone",
          "create_professional_voice_clone",
          "create_user_api_key",
          "publish_studio_project",
          "speech_to_text"
        ],
        "title": "WorkspaceGroupPermission"
      },
      "WorkspaceGroupResponseModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "members": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Members"
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/WorkspaceGroupPermission"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "members",
          "permissions"
        ],
        "title": "WorkspaceGroupResponseModel"
      },
      "WorkspaceInviteDBModel": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "workspace_id": {
            "type": "string",
            "title": "Workspace Id"
          },
          "invite_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invite Code"
          },
          "group_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Ids"
          },
          "user_added_to_allowlist": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Added To Allowlist"
          },
          "workspace_permission": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "external",
                  "admin",
                  "workspace_admin",
                  "workspace_member",
                  "support_l1",
                  "support_l2",
                  "moderator",
                  "sales",
                  "voice_mixer",
                  "voice_admin",
                  "convai_admin",
                  "enterprise_viewer",
                  "quality_check_admin",
                  "workspace_migration_admin",
                  "human_reviewer",
                  "productions_admin",
                  "support",
                  "internal"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Permission"
          },
          "inviting_user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inviting User Email"
          },
          "created_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At Unix"
          }
        },
        "type": "object",
        "required": [
          "email",
          "workspace_id"
        ],
        "title": "WorkspaceInviteDBModel"
      },
      "WorkspaceInviteResponseModel": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "invite_code": {
            "type": "string",
            "title": "Invite Code"
          },
          "inviting_user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inviting User Email"
          },
          "workspace_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Name"
          }
        },
        "type": "object",
        "required": [
          "email",
          "invite_code"
        ],
        "title": "WorkspaceInviteResponseModel"
      },
      "WorkspaceResourceType": {
        "type": "string",
        "enum": [
          "voice",
          "voice_collection",
          "pronunciation_dictionary",
          "dubbing",
          "project",
          "convai_agents",
          "convai_knowledge_base_documents",
          "convai_tools",
          "convai_settings",
          "convai_secrets",
          "workspace_auth_connections",
          "music_latent",
          "convai_phone_numbers",
          "convai_mcp_servers",
          "convai_batch_calls",
          "convai_agent_response_tests",
          "convai_test_suite_invocations"
        ],
        "title": "WorkspaceResourceType",
        "description": "Resource types that can be shared in the workspace. The name always need to match the collection names"
      },
      "WorkspaceServiceAccountListResponseModel": {
        "properties": {
          "service-accounts": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceServiceAccountResponseModel"
            },
            "type": "array",
            "title": "Service-Accounts"
          }
        },
        "type": "object",
        "required": [
          "service-accounts"
        ],
        "title": "WorkspaceServiceAccountListResponseModel"
      },
      "WorkspaceServiceAccountResponseModel": {
        "properties": {
          "service_account_user_id": {
            "type": "string",
            "title": "Service Account User Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "created_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At Unix"
          },
          "api-keys": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceApiKeyResponseModel"
            },
            "type": "array",
            "title": "Api-Keys"
          }
        },
        "type": "object",
        "required": [
          "service_account_user_id",
          "name",
          "api-keys"
        ],
        "title": "WorkspaceServiceAccountResponseModel"
      },
      "WorkspaceTaskInfoResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "kind": {
            "$ref": "#/components/schemas/TaskKind"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "submitted_at": {
            "type": "string",
            "format": "date-time",
            "title": "Submitted At"
          },
          "status": {
            "$ref": "#/components/schemas/TaskDescriptionState"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "quote_details": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/TranscriptionQuoteResponse"
              },
              {
                "$ref": "#/components/schemas/CaptionsQuoteResponse"
              },
              {
                "$ref": "#/components/schemas/SubtitlesQuoteResponse"
              },
              {
                "$ref": "#/components/schemas/DubsQuoteResponse"
              }
            ],
            "title": "Quote Details",
            "discriminator": {
              "propertyName": "kind",
              "mapping": {
                "captions": "#/components/schemas/CaptionsQuoteResponse",
                "dub": "#/components/schemas/DubsQuoteResponse",
                "subtitles": "#/components/schemas/SubtitlesQuoteResponse",
                "transcription_v2": "#/components/schemas/TranscriptionQuoteResponse"
              }
            }
          },
          "deliverables": {
            "items": {
              "$ref": "#/components/schemas/ProductionsDeliverableRef"
            },
            "type": "array",
            "title": "Deliverables"
          },
          "payment_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripePaymentInfo"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "kind",
          "name",
          "submitted_at",
          "status",
          "completed_at",
          "quote_details",
          "deliverables",
          "payment_info"
        ],
        "title": "WorkspaceTaskInfoResponse"
      },
      "WorkspaceTaskMediaResponse": {
        "properties": {
          "media_file": {
            "$ref": "#/components/schemas/FileResponseModel"
          }
        },
        "type": "object",
        "required": [
          "media_file"
        ],
        "title": "WorkspaceTaskMediaResponse"
      },
      "WorkspaceTaskRenameRequest": {
        "properties": {
          "new_name": {
            "type": "string",
            "title": "New Name"
          }
        },
        "type": "object",
        "required": [
          "new_name"
        ],
        "title": "WorkspaceTaskRenameRequest"
      },
      "WorkspaceTaskRenameResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "new_name": {
            "type": "string",
            "title": "New Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "new_name"
        ],
        "title": "WorkspaceTaskRenameResponse"
      },
      "WorkspaceUserResponseModel": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "email": {
            "type": "string",
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "is_owner": {
            "type": "boolean",
            "title": "Is Owner"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin"
          },
          "is_locked": {
            "type": "boolean",
            "title": "Is Locked"
          },
          "is_service_account": {
            "type": "boolean",
            "title": "Is Service Account"
          },
          "mfa_enabled": {
            "type": "boolean",
            "title": "Mfa Enabled"
          },
          "locked_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locked By"
          },
          "picture_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Picture Url"
          },
          "invited_by_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invited By Email"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "email",
          "first_name",
          "is_owner",
          "is_admin",
          "is_locked",
          "is_service_account",
          "mfa_enabled"
        ],
        "title": "WorkspaceUserResponseModel"
      },
      "WorkspaceWebhookListResponseModel": {
        "properties": {
          "webhooks": {
            "items": {
              "$ref": "#/components/schemas/WorkspaceWebhookResponseModel"
            },
            "type": "array",
            "title": "Webhooks",
            "description": "List of webhooks currently configured for the workspace"
          }
        },
        "type": "object",
        "required": [
          "webhooks"
        ],
        "title": "WorkspaceWebhookListResponseModel",
        "example": {
          "webhooks": [
            {
              "auth_type": "hmac",
              "created_at_unix": 123456789,
              "is_auto_disabled": false,
              "is_disabled": false,
              "most_recent_failure_error_code": 404,
              "most_recent_failure_timestamp": 123456799,
              "name": "My Webhook",
              "usage": [
                {
                  "usage_type": "ConvAI Settings"
                }
              ],
              "webhook_id": "123",
              "webhook_url": "https://elevenlabs.io/example-callback-url"
            }
          ]
        }
      },
      "WorkspaceWebhookResponseModel": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The display name for this webhook."
          },
          "webhook_id": {
            "type": "string",
            "title": "Webhook Id",
            "description": "The unique ID for this webhook."
          },
          "webhook_url": {
            "type": "string",
            "title": "Webhook Url",
            "description": "The HTTPS callback URL that is called when this webhook is triggered in the platform."
          },
          "is_disabled": {
            "type": "boolean",
            "title": "Is Disabled",
            "description": "Whether the webhook has been manually disabled by a user."
          },
          "is_auto_disabled": {
            "type": "boolean",
            "title": "Is Auto Disabled",
            "description": "Whether the webhook has been automatically disabled due to repeated consecutive failures over a long period of time."
          },
          "created_at_unix": {
            "type": "integer",
            "title": "Created At Unix",
            "description": "Original creation time of the webhook."
          },
          "auth_type": {
            "$ref": "#/components/schemas/WebhookAuthMethodType",
            "description": "The authentication mode used to secure the webhook."
          },
          "usage": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/WorkspaceWebhookUsageResponseModel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usage",
            "description": "The list of products that are currently configured to trigger this webhook."
          },
          "most_recent_failure_error_code": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Most Recent Failure Error Code",
            "description": "The most recent error code returned from the callback URL."
          },
          "most_recent_failure_timestamp": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Most Recent Failure Timestamp",
            "description": "The most recent time the webhook failed, failures are any non-200 codes returned by the callback URL."
          }
        },
        "type": "object",
        "required": [
          "name",
          "webhook_id",
          "webhook_url",
          "is_disabled",
          "is_auto_disabled",
          "created_at_unix",
          "auth_type"
        ],
        "title": "WorkspaceWebhookResponseModel"
      },
      "WorkspaceWebhookUsageResponseModel": {
        "properties": {
          "usage_type": {
            "$ref": "#/components/schemas/WebhookUsageType"
          }
        },
        "type": "object",
        "required": [
          "usage_type"
        ],
        "title": "WorkspaceWebhookUsageResponseModel"
      },
      "XiApiKeyMetadataResponseModel": {
        "properties": {
          "xi_api_key": {
            "type": "string",
            "title": "Xi Api Key"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "is_api_key_hashed": {
            "type": "boolean",
            "title": "Is Api Key Hashed",
            "default": false
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "xi_api_key_preview": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Xi Api Key Preview"
          },
          "is_disabled": {
            "type": "boolean",
            "title": "Is Disabled",
            "default": false
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "text_to_speech",
                    "speech_to_speech",
                    "speech_to_text",
                    "models_read",
                    "models_write",
                    "voices_read",
                    "voices_write",
                    "speech_history_read",
                    "speech_history_write",
                    "sound_generation",
                    "audio_isolation",
                    "voice_generation",
                    "dubbing_read",
                    "dubbing_write",
                    "pronunciation_dictionaries_read",
                    "pronunciation_dictionaries_write",
                    "user_read",
                    "user_write",
                    "projects_read",
                    "projects_write",
                    "audio_native_read",
                    "audio_native_write",
                    "workspace_read",
                    "workspace_write",
                    "forced_alignment"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions"
          },
          "character_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Limit"
          },
          "disable_reason": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LockReason"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at_unix": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At Unix"
          },
          "character_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Character Count"
          }
        },
        "type": "object",
        "required": [
          "xi_api_key",
          "user_id",
          "name"
        ],
        "title": "XiApiKeyMetadataResponseModel"
      },
      "xi_backend__routes__productions__models__request__request_models__CueOptions": {
        "properties": {
          "min_duration_ms": {
            "type": "integer",
            "maximum": 2000,
            "title": "Min Duration Ms",
            "default": 1000
          },
          "max_duration_ms": {
            "type": "integer",
            "minimum": 4000,
            "title": "Max Duration Ms",
            "default": 7000
          },
          "max_lines_per_cue": {
            "type": "integer",
            "maximum": 3,
            "minimum": 1,
            "title": "Max Lines Per Cue",
            "default": 2
          },
          "max_char_per_line": {
            "type": "integer",
            "maximum": 50,
            "minimum": 16,
            "title": "Max Char Per Line",
            "default": 42
          },
          "max_char_per_s": {
            "type": "integer",
            "maximum": 30,
            "minimum": 15,
            "title": "Max Char Per S",
            "default": 20
          },
          "min_gap_between_cues_frames": {
            "type": "integer",
            "maximum": 6,
            "minimum": 0,
            "title": "Min Gap Between Cues Frames",
            "default": 2
          }
        },
        "type": "object",
        "title": "CueOptions"
      },
      "xi_backend__routes__productions__models__request__request_models__SubtitlesCommonInstructions-Output": {
        "properties": {
          "sdh": {
            "type": "boolean",
            "title": "Sdh",
            "default": false
          },
          "cue_options": {
            "$ref": "#/components/schemas/xi_backend__routes__productions__models__request__request_models__CueOptions",
            "default": {
              "min_duration_ms": 1000,
              "max_duration_ms": 7000,
              "max_lines_per_cue": 2,
              "max_char_per_line": 42,
              "max_char_per_s": 20,
              "min_gap_between_cues_frames": 2
            }
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comments"
          }
        },
        "type": "object",
        "title": "SubtitlesCommonInstructions"
      },
      "xi_backend__routes__productions__models__response__response_models__CueOptions": {
        "properties": {
          "min_duration_ms": {
            "type": "integer",
            "title": "Min Duration Ms"
          },
          "max_duration_ms": {
            "type": "integer",
            "title": "Max Duration Ms"
          },
          "max_lines_per_cue": {
            "type": "integer",
            "title": "Max Lines Per Cue"
          },
          "max_char_per_line": {
            "type": "integer",
            "title": "Max Char Per Line"
          },
          "max_char_per_s": {
            "type": "integer",
            "title": "Max Char Per S"
          },
          "min_gap_between_cues_frames": {
            "type": "integer",
            "title": "Min Gap Between Cues Frames"
          }
        },
        "type": "object",
        "required": [
          "min_duration_ms",
          "max_duration_ms",
          "max_lines_per_cue",
          "max_char_per_line",
          "max_char_per_s",
          "min_gap_between_cues_frames"
        ],
        "title": "CueOptions"
      },
      "xi_backend__routes__productions__models__response__response_models__SubtitlesCommonInstructions": {
        "properties": {
          "kind": {
            "anyOf": [
              {
                "type": "string",
                "const": "captions"
              },
              {
                "type": "string",
                "const": "subtitles"
              }
            ],
            "title": "Kind"
          },
          "sdh": {
            "type": "boolean",
            "title": "Sdh"
          },
          "cue_options": {
            "$ref": "#/components/schemas/xi_backend__routes__productions__models__response__response_models__CueOptions"
          },
          "comments": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comments"
          }
        },
        "type": "object",
        "required": [
          "kind",
          "sdh",
          "cue_options",
          "comments"
        ],
        "title": "SubtitlesCommonInstructions"
      },
      "xi_backend__routes__productions__utils__transcripts__segmentation__utils__Segment": {
        "properties": {
          "speaker_offset": {
            "type": "integer",
            "title": "Speaker Offset"
          },
          "start_word_offset": {
            "type": "integer",
            "title": "Start Word Offset"
          },
          "end_word_offset": {
            "type": "integer",
            "title": "End Word Offset"
          },
          "start_time": {
            "type": "integer",
            "title": "Start Time"
          },
          "end_time": {
            "type": "integer",
            "title": "End Time"
          }
        },
        "type": "object",
        "required": [
          "speaker_offset",
          "start_word_offset",
          "end_word_offset",
          "start_time",
          "end_time"
        ],
        "title": "Segment"
      },
      "xi_backend__routes__productions__utils__transcripts__segmentation__utils__Speaker": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "color": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Speaker"
      },
      "xi_backend__routes__speech_to_text__projects__models__Segment": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "speaker_id": {
            "type": "string",
            "title": "Speaker Id"
          },
          "target_start_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Start Time"
          },
          "target_end_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target End Time"
          }
        },
        "type": "object",
        "required": [
          "id",
          "project_id",
          "speaker_id"
        ],
        "title": "Segment",
        "description": "Represents a segment that has a project_id and speaker_id."
      },
      "xi_backend__routes__speech_to_text__projects__models__Speaker": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "color_seed": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color Seed"
          }
        },
        "type": "object",
        "required": [
          "id",
          "project_id",
          "name"
        ],
        "title": "Speaker"
      },
      "xi_backend__routes__speech_to_text__projects__models__Word": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "segment_id": {
            "type": "string",
            "title": "Segment Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "start_at_seconds": {
            "type": "number",
            "title": "Start At Seconds"
          },
          "end_at_seconds": {
            "type": "number",
            "title": "End At Seconds"
          },
          "type": {
            "type": "string",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "segment_id",
          "text",
          "start_at_seconds",
          "end_at_seconds",
          "type"
        ],
        "title": "Word",
        "description": "Represents a word (or token) annotation associated to a segment."
      },
      "xi_backend__routes__speech_to_text__projects_v2__utils__Word": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "type": {
            "type": "string",
            "enum": [
              "spacing",
              "word",
              "audio_event"
            ],
            "title": "Type"
          },
          "speaker_id": {
            "type": "string",
            "title": "Speaker Id"
          },
          "start": {
            "type": "number",
            "title": "Start"
          },
          "end": {
            "type": "number",
            "title": "End"
          }
        },
        "type": "object",
        "required": [
          "text",
          "type",
          "speaker_id",
          "start",
          "end"
        ],
        "title": "Word"
      }
    }
  },
  "tags": [
    {
      "name": "text-to-speech",
      "description": "Convert text into lifelike speech using a voice of your choice."
    },
    {
      "name": "speech-to-speech",
      "description": "Create speech by combining the style and content of an audio file you upload with a voice of your choice."
    },
    {
      "name": "speech-to-text",
      "description": "Transcribe your audio files with detailed speaker annotations and precise timestamps using our cutting-edge model."
    },
    {
      "name": "forced-alignment",
      "description": "Force align an audio file to a text transcript to get precise word-level and character level timing information. Response is a list of characters with their start and end times as milliseconds elapsed from the start of the recording."
    },
    {
      "name": "models",
      "description": "Access the different models of the platform."
    },
    {
      "name": "voices",
      "description": "Access to voices created either by you or ElevenLabs."
    },
    {
      "name": "samples",
      "description": "Access to your samples. A sample is any audio file you attached to a voice. A voice can have one or more samples."
    },
    {
      "name": "speech-history",
      "description": "Accesses your speech history. Your speech history is a list of all your created audio including its metadata using our text-to-speech and speech-to-speech models."
    },
    {
      "name": "studios",
      "description": "Access, create and convert Studio Projects programmatically, only specifically whitelisted accounts can access the Studio API. If you need access please contact our sales team."
    },
    {
      "name": "workspace",
      "description": "Access to workspace related endpoints."
    }
  ]
}