{
  "openapi": "3.1.0",
  "info": {
    "title": "ElevenLabs API Documentation",
    "description": "This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.",
    "version": "1.0"
  },
  "paths": {
    "/v1/history": {
      "get": {
        "operationId": "Get_generated_items_v1_history_get",
        "summary": "Get Generated Items",
        "description": "Returns metadata about all your generated audio.",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "How many history items to return at maximum. Can not exceed 1000, defaults to 100.",
            "required": false,
            "schema": {
              "description": "How many history items to return at maximum. Can not exceed 1000, defaults to 100.",
              "type": "integer",
              "default": 100,
              "title": "Page Size"
            }
          },
          {
            "name": "start_after_history_item_id",
            "in": "query",
            "description": "After which ID to start fetching, use this parameter to paginate across a large collection of history items. In case this parameter is not provided history items will be fetched starting from the most recently created one ordered descending by their creation date.",
            "required": false,
            "schema": {
              "description": "After which ID to start fetching, use this parameter to paginate across a large collection of history items. In case this parameter is not provided history items will be fetched starting from the most recently created one ordered descending by their creation date.",
              "type": "string",
              "title": "Start After History Item Id"
            }
          },
          {
            "name": "voice_id",
            "in": "query",
            "description": "Voice ID to be filtered for, you can use GET https://api.elevenlabs.io/v1/voices to receive a list of voices and their IDs.",
            "required": false,
            "schema": {
              "description": "Voice ID to be filtered for, you can use GET https://api.elevenlabs.io/v1/voices to receive a list of voices and their IDs.",
              "type": "string",
              "title": "Voice Id"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "search term used for filtering",
            "required": false,
            "schema": {
              "description": "search term used for filtering",
              "type": "string",
              "examples": [
                "In the land far far away"
              ],
              "title": "Search"
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Source of the generated history item",
            "required": false,
            "schema": {
              "description": "Source of the generated history item",
              "type": "string",
              "enum": [
                "TTS",
                "STS"
              ],
              "examples": [
                "TTS"
              ],
              "title": "Source"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSpeechHistoryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-history"
        ],
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "get_all"
      }
    },
    "/v1/history/{history_item_id}": {
      "get": {
        "operationId": "Get_history_item_by_ID_v1_history__history_item_id__get",
        "summary": "Get History Item By Id",
        "description": "Returns information about an history item by its ID.",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
            "required": true,
            "schema": {
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeechHistoryItemResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-history"
        ],
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "operationId": "Delete_history_item_v1_history__history_item_id__delete",
        "summary": "Delete History Item",
        "description": "Delete a history item by its ID",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
            "required": true,
            "schema": {
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-history"
        ],
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/history/{history_item_id}/audio": {
      "get": {
        "operationId": "Get_audio_from_history_item_v1_history__history_item_id__audio_get",
        "summary": "Get Audio From History Item",
        "description": "Returns the audio of an history item.",
        "parameters": [
          {
            "name": "history_item_id",
            "in": "path",
            "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
            "required": true,
            "schema": {
              "description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "History Item Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-history"
        ],
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "get_audio"
      }
    },
    "/v1/history/download": {
      "post": {
        "operationId": "Download_history_items_v1_history_download_post",
        "summary": "Download History Items",
        "description": "Download one or more history items. If one history item ID is provided, we will return a single audio file. If more than one history item IDs are provided, we will provide the history items packed into a .zip file.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Download_history_items_v1_history_download_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-history"
        ],
        "x-fern-sdk-group-name": "history",
        "x-fern-sdk-method-name": "download"
      }
    },
    "/v1/sound-generation": {
      "post": {
        "operationId": "Sound_Generation_v1_sound_generation_post",
        "summary": "Sound Generation",
        "description": "Turn text into sound effects for your videos, voice-overs or video games using the most advanced sound effects model in the world.",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "ulaw_8000"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Sound_Generation_v1_sound_generation_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated sound effect as an MP3 file",
            "headers": {
              "character-cost": {
                "description": "The number of characters used for billing",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "sound-generation"
        ],
        "x-fern-sdk-group-name": "text_to_sound_effects",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/audio-isolation": {
      "post": {
        "operationId": "Audio_Isolation_v1_audio_isolation_post",
        "summary": "Audio Isolation",
        "description": "Removes background noise from audio",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Audio_Isolation_v1_audio_isolation_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "audio-isolation"
        ],
        "x-fern-sdk-group-name": "audio_isolation",
        "x-fern-sdk-method-name": "audio_isolation"
      }
    },
    "/v1/audio-isolation/stream": {
      "post": {
        "operationId": "Audio_Isolation_Stream_v1_audio_isolation_stream_post",
        "summary": "Audio Isolation Stream",
        "description": "Removes background noise from audio and streams the result",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "audio-isolation"
        ],
        "x-fern-sdk-group-name": "audio_isolation",
        "x-fern-sdk-method-name": "audio_isolation_stream",
        "x-fern-streaming": true
      }
    },
    "/v1/voices/{voice_id}/samples/{sample_id}": {
      "delete": {
        "operationId": "Delete_sample_v1_voices__voice_id__samples__sample_id__delete",
        "summary": "Delete Sample",
        "description": "Removes a sample by its ID.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "sample_id",
            "in": "path",
            "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
            "required": true,
            "schema": {
              "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSampleResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "samples"
        ],
        "x-fern-sdk-group-name": "samples",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/voices/{voice_id}/samples/{sample_id}/audio": {
      "get": {
        "operationId": "Get_audio_from_sample_v1_voices__voice_id__samples__sample_id__audio_get",
        "summary": "Get Audio From Sample",
        "description": "Returns the audio corresponding to a sample attached to a voice.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "sample_id",
            "in": "path",
            "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
            "required": true,
            "schema": {
              "description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
              "type": "string",
              "examples": [
                "VW7YKqPnjY4h39yTbx2L"
              ],
              "title": "Sample Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/*": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "samples"
        ],
        "x-fern-sdk-group-name": "samples",
        "x-fern-sdk-method-name": "get_audio"
      }
    },
    "/v1/text-to-speech/{voice_id}": {
      "post": {
        "operationId": "Text_to_speech_v1_text_to_speech__voice_id__post",
        "summary": "Text To Speech",
        "description": "Converts text into speech using a voice of your choice and returns audio.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "required": false,
            "schema": {
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "type": "integer",
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte)."
            },
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "ulaw_8000"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_v1_text_to_speech__voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated audio file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "text-to-speech"
        ],
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/text-to-speech/{voice_id}/with-timestamps": {
      "post": {
        "operationId": "Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post",
        "summary": "Text To Speech With Timestamps",
        "description": "Generate speech from text with precise character-level timing information for audio-text synchronization.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "required": false,
            "schema": {
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "type": "integer",
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte)."
            },
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "ulaw_8000"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioWithTimestampsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "text-to-speech"
        ],
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "convert_with_timestamps"
      }
    },
    "/v1/text-to-speech/{voice_id}/stream": {
      "post": {
        "operationId": "Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post",
        "summary": "Text To Speech Streaming",
        "description": "Converts text into speech using a voice of your choice and returns audio as an audio stream.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "required": false,
            "schema": {
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "type": "integer",
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte)."
            },
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "ulaw_8000"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "text-to-speech"
        ],
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "convert_as_stream",
        "x-fern-streaming": true
      }
    },
    "/v1/text-to-speech/{voice_id}/stream/with-timestamps": {
      "post": {
        "operationId": "Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post",
        "summary": "Text To Speech Streaming With Timestamps",
        "description": "Converts text into speech using a voice of your choice and returns a stream of JSONs containing audio as a base64 encoded string together with information on when which character was spoken.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "required": false,
            "schema": {
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "type": "integer",
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte)."
            },
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "ulaw_8000"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stream of transcription chunks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StreamingAudioChunkWithTimestampsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "text-to-speech"
        ],
        "x-fern-sdk-group-name": "text_to_speech",
        "x-fern-sdk-method-name": "stream_with_timestamps",
        "x-fern-streaming": true
      }
    },
    "/v1/speech-to-speech/{voice_id}": {
      "post": {
        "operationId": "Speech_to_Speech_v1_speech_to_speech__voice_id__post",
        "summary": "Speech To Speech",
        "description": "Transform audio from one voice to another. Maintain full control over emotion, timing and delivery.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "required": false,
            "schema": {
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "type": "integer",
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte)."
            },
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "ulaw_8000"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The generated audio file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-to-speech"
        ],
        "x-fern-sdk-group-name": "speech_to_speech",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/speech-to-speech/{voice_id}/stream": {
      "post": {
        "operationId": "Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post",
        "summary": "Speech To Speech Streaming",
        "description": "Stream audio from one voice to another. Maintain full control over emotion, timing and delivery.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "optimize_streaming_latency",
            "in": "query",
            "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
            "required": false,
            "schema": {
              "description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
              "type": "integer",
              "title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte)."
            },
            "deprecated": true
          },
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_128",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "ulaw_8000"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-to-speech"
        ],
        "x-fern-sdk-group-name": "speech_to_speech",
        "x-fern-sdk-method-name": "convert_as_stream",
        "x-fern-streaming": true
      }
    },
    "/v1/voice-generation/generate-voice/parameters": {
      "get": {
        "operationId": "Voice_Generation_Parameters_v1_voice_generation_generate_voice_parameters_get",
        "summary": "Voice Generation Parameters",
        "description": "Get possible parameters for the /v1/voice-generation/generate-voice endpoint.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceGenerationParameterResponseModel"
                }
              }
            }
          }
        },
        "tags": [
          "voice-generation"
        ],
        "x-fern-sdk-group-name": "voice_generation",
        "x-fern-sdk-method-name": "generate_parameters"
      }
    },
    "/v1/voice-generation/generate-voice": {
      "post": {
        "operationId": "Generate_a_random_voice_v1_voice_generation_generate_voice_post",
        "summary": "Generate A Random Voice",
        "description": "Generate a random voice based on parameters. This method returns a generated_voice_id in the response header, and a sample of the voice in the body. If you like the generated voice call /v1/voice-generation/create-voice with the generated_voice_id to create the voice.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "audio/mpeg": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voice-generation"
        ],
        "x-fern-sdk-group-name": "voice_generation",
        "x-fern-sdk-method-name": "generate"
      }
    },
    "/v1/text-to-voice/create-previews": {
      "post": {
        "operationId": "Generate_a_voice_preview_from_description_v1_text_to_voice_create_previews_post",
        "summary": "Generate A Voice Preview From Description",
        "description": "Generate a custom voice based on voice description. This method returns a list of voice previews. Each preview has a generated_voice_id and a sample of the voice as base64 encoded mp3 audio. If you like the a voice previewand want to create the voice call /v1/text-to-voice/create-voice-from-preview with the generated_voice_id to create the voice.",
        "parameters": [
          {
            "name": "output_format",
            "in": "query",
            "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
            "required": false,
            "schema": {
              "description": "Output format of the generated audio. Formatted as codec_sample_rate_bitrate. So an mp3 with 22.05kHz sample rate at 32kbs is represented as mp3_22050_32. MP3 with 192kbps bitrate requires you to be subscribed to Creator tier or above. PCM with 44.1kHz sample rate requires you to be subscribed to Pro tier or above. Note that the μ-law format (sometimes written mu-law, often approximated as u-law) is commonly used for Twilio audio inputs.",
              "type": "string",
              "default": "mp3_44100_192",
              "enum": [
                "mp3_22050_32",
                "mp3_44100_32",
                "mp3_44100_64",
                "mp3_44100_96",
                "mp3_44100_128",
                "mp3_44100_192",
                "pcm_8000",
                "pcm_16000",
                "pcm_22050",
                "pcm_24000",
                "pcm_44100",
                "ulaw_8000"
              ],
              "title": "Output format of the generated audio."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoicePreviewsRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoicePreviewsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "text-to-voice"
        ],
        "x-fern-sdk-group-name": "text_to_voice",
        "x-fern-sdk-method-name": "create_previews"
      }
    },
    "/v1/voice-generation/create-voice": {
      "post": {
        "operationId": "Create_a_previously_generated_voice_v1_voice_generation_create_voice_post",
        "summary": "Create A Previously Generated Voice",
        "description": "Create a previously generated voice. This endpoint should be called after you fetched a generated_voice_id using /v1/voice-generation/generate-voice.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voice-generation"
        ],
        "x-fern-sdk-group-name": "voice_generation",
        "x-fern-sdk-method-name": "create_a_previously_generated_voice"
      }
    },
    "/v1/text-to-voice/create-voice-from-preview": {
      "post": {
        "operationId": "Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post",
        "summary": "Create A New Voice From Voice Preview",
        "description": "Create a voice from previously generated voice preview. This endpoint should be called after you fetched a generated_voice_id using POST /v1/text-to-voice/create-previews.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "text-to-voice"
        ],
        "x-fern-sdk-group-name": "text_to_voice",
        "x-fern-sdk-method-name": "create_voice_from_preview"
      }
    },
    "/v1/user/subscription": {
      "get": {
        "operationId": "Get_user_subscription_info_v1_user_subscription_get",
        "summary": "Get User Subscription Info",
        "description": "Gets extended information about the users subscription",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedSubscriptionResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ],
        "x-fern-sdk-group-name": "user",
        "x-fern-sdk-method-name": "get_subscription"
      }
    },
    "/v1/user": {
      "get": {
        "operationId": "Get_user_info_v1_user_get",
        "summary": "Get User Info",
        "description": "Gets information about the user",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ],
        "x-fern-sdk-group-name": "user",
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/voices": {
      "get": {
        "operationId": "List_voices_v1_voices_get",
        "summary": "List Voices",
        "description": "Returns a list of all available voices for a user.",
        "parameters": [
          {
            "name": "show_legacy",
            "in": "query",
            "description": "If set to true, legacy premade voices will be included in responses from /v1/voices",
            "required": false,
            "schema": {
              "description": "If set to true, legacy premade voices will be included in responses from /v1/voices",
              "type": "boolean",
              "default": false,
              "examples": [
                true
              ],
              "title": "Show Legacy"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_all"
      }
    },
    "/v1/voices/settings/default": {
      "get": {
        "operationId": "Get_default_voice_settings__v1_voices_settings_default_get",
        "summary": "Get Default Voice Settings.",
        "description": "Gets the default settings for voices. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSettingsResponseModel"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_default_settings"
      }
    },
    "/v1/voices/{voice_id}/settings": {
      "get": {
        "operationId": "Get_voice_settings_v1_voices__voice_id__settings_get",
        "summary": "Get Voice Settings",
        "description": "Returns the settings for a specific voice. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_settings"
      }
    },
    "/v1/voices/{voice_id}": {
      "get": {
        "operationId": "Get_voice_v1_voices__voice_id__get",
        "summary": "Get Voice",
        "description": "Returns metadata about a specific voice.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "with_settings",
            "in": "query",
            "description": "This parameter is now deprecated. It is ignored and will be removed in a future version.",
            "required": false,
            "schema": {
              "description": "This parameter is now deprecated. It is ignored and will be removed in a future version.",
              "type": "boolean",
              "default": true,
              "title": "With Settings"
            },
            "deprecated": true
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get"
      },
      "delete": {
        "operationId": "Delete_voice_v1_voices__voice_id__delete",
        "summary": "Delete Voice",
        "description": "Deletes a voice by its ID.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/voices/{voice_id}/settings/edit": {
      "post": {
        "operationId": "Edit_voice_settings_v1_voices__voice_id__settings_edit_post",
        "summary": "Edit Voice Settings",
        "description": "Edit your settings for a specific voice. \"similarity_boost\" corresponds to \"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "The settings for a specific voice.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VoiceSettingsResponseModel"
                  }
                ],
                "title": "Settings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditVoiceSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "edit_settings"
      }
    },
    "/v1/voices/add": {
      "post": {
        "operationId": "Add_voice_v1_voices_add_post",
        "summary": "Add Voice",
        "description": "Add a new voice to your collection of voices in VoiceLab.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_voice_v1_voices_add_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceIVCResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "add"
      }
    },
    "/v1/voices/{voice_id}/edit": {
      "post": {
        "operationId": "Edit_voice_v1_voices__voice_id__edit_post",
        "summary": "Edit Voice",
        "description": "Edit a voice created by you.",
        "parameters": [
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_voice_v1_voices__voice_id__edit_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "edit"
      }
    },
    "/v1/voices/add/{public_user_id}/{voice_id}": {
      "post": {
        "operationId": "Add_shared_voice_v1_voices_add__public_user_id___voice_id__post",
        "summary": "Add Shared Voice",
        "description": "Add a shared voice to your collection of voices.",
        "parameters": [
          {
            "name": "public_user_id",
            "in": "path",
            "description": "Public user ID used to publicly identify ElevenLabs users.",
            "required": true,
            "schema": {
              "description": "Public user ID used to publicly identify ElevenLabs users.",
              "type": "string",
              "examples": [
                "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca"
              ],
              "title": "Public User Id"
            }
          },
          {
            "name": "voice_id",
            "in": "path",
            "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
            "required": true,
            "schema": {
              "description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Voice Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddVoiceResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "add_sharing_voice"
      }
    },
    "/v1/studio/podcasts": {
      "post": {
        "operationId": "Create_podcast_v1_studio_podcasts_post",
        "summary": "Create Podcast",
        "description": "Create and auto-convert a podcast project. Currently, the LLM cost is covered by us but you will still be charged for the audio generation. In the future, you will be charged for both the LLM and audio generation costs.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_podcast_v1_studio_podcasts_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PodcastProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": "studio",
        "x-fern-sdk-method-name": "create_podcast"
      }
    },
    "/v1/projects/podcast/create": {
      "post": {
        "operationId": "Create_podcast_v1_projects_podcast_create_post",
        "summary": "Create Podcast",
        "description": "Create and auto-convert a podcast project. Currently, the LLM cost is covered by us but you will still be charged for the audio generation. In the future, you will be charged for both the LLM and audio generation costs.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_podcast_v1_projects_podcast_create_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PodcastProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects": {
      "get": {
        "operationId": "List_Studio_projects_v1_studio_projects_get",
        "summary": "List Studio Projects",
        "description": "Returns a list of your Studio projects with metadata.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "get_all"
      },
      "post": {
        "operationId": "Create_Studio_project_v1_studio_projects_post",
        "summary": "Create Studio Project",
        "description": "Creates a new Studio project, it can be either initialized as blank, from a document or from a URL.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_Studio_project_v1_studio_projects_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "add"
      }
    },
    "/v1/projects": {
      "get": {
        "operationId": "Get_projects_v1_projects_get",
        "summary": "Get Projects",
        "description": "Returns a list of your projects together and its metadata.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/projects/add": {
      "post": {
        "operationId": "Add_project_v1_projects_add_post",
        "summary": "Add Project",
        "description": "Creates a new project, it can be either initialized as blank, from a document or from a URL.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_project_v1_projects_add_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}": {
      "get": {
        "operationId": "Get_Studio_project_v1_studio_projects__project_id__get",
        "summary": "Get Studio Project",
        "description": "Returns information about a specific Studio project. This endpoint returns more detailed information about a project than `GET /v1/studio`.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "post": {
        "operationId": "Update_Studio_project_v1_studio_projects__project_id__post",
        "summary": "Update Studio Project",
        "description": "Updates the specified Studio project by setting the values of the parameters passed.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_Studio_project_v1_studio_projects__project_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "update_metadata"
      },
      "delete": {
        "operationId": "Delete_Studio_project_v1_studio_projects__project_id__delete",
        "summary": "Delete Studio Project",
        "description": "Deletes a Studio project.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/projects/{project_id}": {
      "get": {
        "operationId": "Get_project_by_ID_v1_projects__project_id__get",
        "summary": "Get Project By Id",
        "description": "Returns information about a specific project. This endpoint returns more detailed information about a project than `GET /v1/projects`.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      },
      "post": {
        "operationId": "Edit_basic_project_info_v1_projects__project_id__post",
        "summary": "Edit Basic Project Info",
        "description": "Edits basic project info.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_basic_project_info_v1_projects__project_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      },
      "delete": {
        "operationId": "Delete_project_v1_projects__project_id__delete",
        "summary": "Delete Project",
        "description": "Deletes a project.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/content": {
      "post": {
        "operationId": "Update_Studio_project_content_v1_studio_projects__project_id__content_post",
        "summary": "Update Studio Project Content",
        "description": "Updates Studio project content.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "update_content"
      }
    },
    "/v1/projects/{project_id}/content": {
      "post": {
        "operationId": "Edit_project_content_v1_projects__project_id__content_post",
        "summary": "Edit Project Content",
        "description": "Edits project content.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_project_content_v1_projects__project_id__content_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/convert": {
      "post": {
        "operationId": "Convert_Studio_project_v1_studio_projects__project_id__convert_post",
        "summary": "Convert Studio Project",
        "description": "Starts conversion of a Studio project and all of its chapters.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConvertProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/projects/{project_id}/convert": {
      "post": {
        "operationId": "Convert_project_v1_projects__project_id__convert_post",
        "summary": "Convert Project",
        "description": "Starts conversion of a project and all of its chapters.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/snapshots": {
      "get": {
        "operationId": "List_Studio_project_snapshots_v1_studio_projects__project_id__snapshots_get",
        "summary": "List Studio Project Snapshots",
        "description": "Retrieves a list of snapshots for a Studio project.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "get_snapshots"
      }
    },
    "/v1/projects/{project_id}/snapshots": {
      "get": {
        "operationId": "Get_project_snapshots_v1_projects__project_id__snapshots_get",
        "summary": "Get Project Snapshots",
        "description": "Gets the snapshots of a project.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}": {
      "get": {
        "operationId": "Get_project_snapshot_v1_studio_projects__project_id__snapshots__project_snapshot_id__get",
        "summary": "Get Project Snapshot",
        "description": "Returns the project snapshot.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "description": "The ID of the Studio project snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSnapshotExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "get_project_snapshot"
      }
    },
    "/v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/stream": {
      "post": {
        "operationId": "Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post",
        "summary": "Stream Studio Project Audio",
        "description": "Stream the audio from a Studio project snapshot.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "description": "The ID of the Studio project snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "stream_audio",
        "x-fern-streaming": true
      }
    },
    "/v1/projects/{project_id}/snapshots/{project_snapshot_id}/stream": {
      "post": {
        "operationId": "Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post",
        "summary": "Stream Project Audio",
        "description": "Stream the audio from a project snapshot.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "description": "The ID of the Studio project snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/archive": {
      "post": {
        "operationId": "Stream_archive_with_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__archive_post",
        "summary": "Stream Archive With Studio Project Audio",
        "description": "Returns a compressed archive of the Studio project's audio.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "description": "The ID of the Studio project snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Streaming archive data",
            "content": {
              "application/x-zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "stream_archive"
      }
    },
    "/v1/projects/{project_id}/snapshots/{project_snapshot_id}/archive": {
      "post": {
        "operationId": "Streams_archive_with_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__archive_post",
        "summary": "Streams Archive With Project Audio",
        "description": "Streams archive with project audio.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "project_snapshot_id",
            "in": "path",
            "description": "The ID of the Studio project snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/chapters": {
      "get": {
        "operationId": "List_chapters_v1_studio_projects__project_id__chapters_get",
        "summary": "List Chapters",
        "description": "Returns a list of a Studio project's chapters.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChaptersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "get_all"
      },
      "post": {
        "operationId": "Create_chapter_v1_studio_projects__project_id__chapters_post",
        "summary": "Create Chapter",
        "description": "Creates a new chapter either as blank or from a URL.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_chapter_v1_studio_projects__project_id__chapters_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/projects/{project_id}/chapters": {
      "get": {
        "operationId": "Get_chapters_v1_projects__project_id__chapters_get",
        "summary": "Get Chapters",
        "description": "Returns a list of your chapters for a project together and its metadata.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChaptersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}": {
      "get": {
        "operationId": "Get_chapter_v1_studio_projects__project_id__chapters__chapter_id__get",
        "summary": "Get Chapter",
        "description": "Returns information about a specific chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterWithContentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "get"
      },
      "post": {
        "operationId": "Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post",
        "summary": "Update Chapter",
        "description": "Updates a chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "edit"
      },
      "delete": {
        "operationId": "Delete_chapter_v1_studio_projects__project_id__chapters__chapter_id__delete",
        "summary": "Delete Chapter",
        "description": "Deletes a chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "delete"
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}": {
      "get": {
        "operationId": "Get_chapter_by_ID_v1_projects__project_id__chapters__chapter_id__get",
        "summary": "Get Chapter By Id",
        "description": "Returns information about a specific chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterWithContentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      },
      "delete": {
        "operationId": "Delete_chapter_v1_projects__project_id__chapters__chapter_id__delete",
        "summary": "Delete Chapter",
        "description": "Deletes a chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      },
      "patch": {
        "operationId": "Edit_chapter_v1_projects__project_id__chapters__chapter_id__patch",
        "summary": "Edit Chapter",
        "description": "Edits a chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Edit_chapter_v1_projects__project_id__chapters__chapter_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/projects/{project_id}/chapters/add": {
      "post": {
        "operationId": "Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post",
        "summary": "Add Chapter To A Project",
        "description": "Creates a new chapter either as blank or from a URL.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/convert": {
      "post": {
        "operationId": "Convert_chapter_v1_studio_projects__project_id__chapters__chapter_id__convert_post",
        "summary": "Convert Chapter",
        "description": "Starts conversion of a specific chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConvertChapterResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/convert": {
      "post": {
        "operationId": "Convert_chapter_v1_projects__project_id__chapters__chapter_id__convert_post",
        "summary": "Convert Chapter",
        "description": "Starts conversion of a specific chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots": {
      "get": {
        "operationId": "List_chapter_snapshots_v1_studio_projects__project_id__chapters__chapter_id__snapshots_get",
        "summary": "List Chapter Snapshots",
        "description": "Gets information about all the snapshots of a chapter. Each snapshot can be downloaded as audio. Whenever a chapter is converted a snapshot will automatically be created.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "get_all_snapshots"
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/snapshots": {
      "get": {
        "operationId": "List_chapter_snapshots_v1_projects__project_id__chapters__chapter_id__snapshots_get",
        "summary": "List Chapter Snapshots",
        "description": "Gets information about all the snapshots of a chapter. Each snapshot can be downloaded as audio. Whenever a chapter is converted a snapshot will automatically be created.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterSnapshotsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}": {
      "get": {
        "operationId": "Get_chapter_snapshot_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__get",
        "summary": "Get Chapter Snapshot",
        "description": "Returns the chapter snapshot.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "chapter_snapshot_id",
            "in": "path",
            "description": "The ID of the chapter snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChapterSnapshotExtendedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "get_chapter_snapshot"
      }
    },
    "/v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}/stream": {
      "post": {
        "operationId": "Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post",
        "summary": "Stream Chapter Audio",
        "description": "Stream the audio from a chapter snapshot. Use `GET /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots` to return the snapshots of a chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "chapter_snapshot_id",
            "in": "path",
            "description": "The ID of the chapter snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming audio data",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "chapters"
        ],
        "x-fern-sdk-method-name": "stream_snapshot",
        "x-fern-streaming": true
      }
    },
    "/v1/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}/stream": {
      "post": {
        "operationId": "Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post",
        "summary": "Stream Chapter Audio",
        "description": "Stream the audio from a chapter snapshot. Use `GET /v1/projects/{project_id}/chapters/{chapter_id}/snapshots` to return the chapter snapshots of a chapter.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "chapter_id",
            "in": "path",
            "description": "The ID of the chapter.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Id"
            }
          },
          {
            "name": "chapter_snapshot_id",
            "in": "path",
            "description": "The ID of the chapter snapshot.",
            "required": true,
            "schema": {
              "description": "The ID of the chapter snapshot.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Chapter Snapshot Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/studio/projects/{project_id}/pronunciation-dictionaries": {
      "post": {
        "operationId": "Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post",
        "summary": "Create Pronunciation Dictionaries",
        "description": "Create a set of pronunciation dictionaries acting on a project. This will automatically mark text within this project as requiring reconverting where the new dictionary would apply or the old one no longer does.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePronunciationDictionaryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "studio"
        ],
        "x-fern-sdk-group-name": [
          "studio",
          "projects"
        ],
        "x-fern-sdk-method-name": "update_pronunciation_dictionaries"
      }
    },
    "/v1/projects/{project_id}/update-pronunciation-dictionaries": {
      "post": {
        "operationId": "Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post",
        "summary": "Update Pronunciation Dictionaries",
        "description": "Updates the set of pronunciation dictionaries acting on a project. This will automatically mark text within this project as requiring reconverting where the new dictionary would apply or the old one no longer does.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "projects"
        ]
      }
    },
    "/v1/dubbing/resource/{dubbing_id}": {
      "get": {
        "operationId": "Get_the_dubbing_resource_for_an_ID__v1_dubbing_resource__dubbing_id__get",
        "summary": "Get The Dubbing Resource For An Id.",
        "description": "Given a dubbing ID generated from the '/v1/dubbing' endpoint with studio enabled, returns the dubbing resource.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingResource"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "get_dubbing_resource"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/language": {
      "post": {
        "operationId": "Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post",
        "summary": "Add A Language To The Resource",
        "description": "Adds the given ElevenLab Turbo V2/V2.5 language code to the resource. Does not automatically generate transcripts/translations/audio.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageAddedResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "add_language_to_resource"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/speaker/{speaker_id}/segment": {
      "post": {
        "operationId": "Create_a_segment_for_the_speaker_v1_dubbing_resource__dubbing_id__speaker__speaker_id__segment_post",
        "summary": "Create A Segment For The Speaker",
        "description": "Creates a new segment in dubbing resource with a start and end time for the speaker in every available language. Does not automatically generate transcripts/translations/audio.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "speaker_id",
            "in": "path",
            "description": "ID of the speaker.",
            "required": true,
            "schema": {
              "description": "ID of the speaker.",
              "type": "string",
              "title": "Speaker Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "The text, and start and end times of a segment.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SegmentCreatePayload"
                  }
                ],
                "title": "Segment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "create_segment_for_speaker"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/segment/{segment_id}/{language}": {
      "patch": {
        "operationId": "Modify_a_single_segment_v1_dubbing_resource__dubbing_id__segment__segment_id___language__patch",
        "summary": "Modify A Single Segment",
        "description": "Modifies a single segment with new text and/or start/end times. Will update the values for only a specific language of a segment. Does not automatically regenerate the dub.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "segment_id",
            "in": "path",
            "description": "ID of the segment",
            "required": true,
            "schema": {
              "description": "ID of the segment",
              "type": "string",
              "title": "Segment Id"
            }
          },
          {
            "name": "language",
            "in": "path",
            "description": "ID of the language.",
            "required": true,
            "schema": {
              "description": "ID of the language.",
              "type": "string",
              "title": "Language"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "The text, and start and end times of a segment.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SegmentUpdatePayload"
                  }
                ],
                "title": "Updates"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "update_segment_language"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/segment/{segment_id}": {
      "delete": {
        "operationId": "Deletes_a_single_segment_v1_dubbing_resource__dubbing_id__segment__segment_id__delete",
        "summary": "Deletes A Single Segment",
        "description": "Deletes a single segment from the dubbing.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "segment_id",
            "in": "path",
            "description": "ID of the segment",
            "required": true,
            "schema": {
              "description": "ID of the segment",
              "type": "string",
              "title": "Segment Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentDeleteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "delete_segment"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/transcribe": {
      "post": {
        "operationId": "Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post",
        "summary": "Transcribes Segments",
        "description": "Regenerate the transcriptions for the specified segments. Does not automatically regenerate translations or dubs.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentTranscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "transcribe_segments"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/translate": {
      "post": {
        "operationId": "Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post",
        "summary": "Translates All Or Some Segments And Languages",
        "description": "Regenerate the translations for either the entire resource or the specified segments/languages. Will automatically transcribe missing transcriptions. Will not automatically regenerate the dubs.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentTranslationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "translate_segments"
      }
    },
    "/v1/dubbing/resource/{dubbing_id}/dub": {
      "post": {
        "operationId": "Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post",
        "summary": "Dubs All Or Some Segments And Languages",
        "description": "Regenerate the dubs for either the entire resource or the specified segments/languages. Will automatically transcribe and translate any missing transcriptions and translations.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SegmentDubResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing",
          "resource",
          "segment"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "dub_segments"
      }
    },
    "/v1/dubbing": {
      "post": {
        "operationId": "Dub_a_video_or_an_audio_file_v1_dubbing_post",
        "summary": "Dub A Video Or An Audio File",
        "description": "Dubs a provided audio or video file into given language.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Dub_a_video_or_an_audio_file_v1_dubbing_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DoDubbingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "dub_a_video_or_an_audio_file"
      }
    },
    "/v1/dubbing/{dubbing_id}": {
      "get": {
        "operationId": "Get_dubbing_v1_dubbing__dubbing_id__get",
        "summary": "Get Dubbing",
        "description": "Returns metadata about a dubbing project, including whether it's still in progress or not",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DubbingMetadataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "get_dubbing_project_metadata"
      },
      "delete": {
        "operationId": "Delete_dubbing_v1_dubbing__dubbing_id__delete",
        "summary": "Delete Dubbing",
        "description": "Deletes a dubbing project.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteDubbingResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "dubbing"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "delete_dubbing_project"
      }
    },
    "/v1/dubbing/{dubbing_id}/audio/{language_code}": {
      "get": {
        "operationId": "Get_dubbed_file_v1_dubbing__dubbing_id__audio__language_code__get",
        "summary": "Get Dubbed File",
        "description": "Returns dubbed file as a streamed file. Videos will be returned in MP4 format and audio only dubs will be returned in MP3.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "language_code",
            "in": "path",
            "description": "ID of the language.",
            "required": true,
            "schema": {
              "description": "ID of the language.",
              "type": "string",
              "title": "Language Code"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The dubbed audio or video file",
            "content": {
              "audio/mpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "video/mp4": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied",
            "content": {
              "application/json": {
                "example": {
                  "error": "permission_denied",
                  "message": "User does not have required permissions"
                }
              }
            }
          },
          "404": {
            "description": "Dubbing not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "dubbing_not_found",
                  "message": "There is no dubbing for language {language_code}."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "425": {
            "description": "Dubbing not ready",
            "content": {
              "application/json": {
                "example": {
                  "error": "dubbing_not_dubbed",
                  "message": "Dubbing has not finished yet."
                }
              }
            }
          }
        },
        "tags": [
          "dubbing"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "get_dubbed_file"
      }
    },
    "/v1/dubbing/{dubbing_id}/transcript/{language_code}": {
      "get": {
        "operationId": "Get_dubbed_transcript_v1_dubbing__dubbing_id__transcript__language_code__get",
        "summary": "Get Dubbed Transcript",
        "description": "Returns transcript for the dub as an SRT or WEBVTT file.",
        "parameters": [
          {
            "name": "dubbing_id",
            "in": "path",
            "description": "ID of the dubbing project.",
            "required": true,
            "schema": {
              "description": "ID of the dubbing project.",
              "type": "string",
              "title": "Dubbing Id"
            }
          },
          {
            "name": "language_code",
            "in": "path",
            "description": "ID of the language.",
            "required": true,
            "schema": {
              "description": "ID of the language.",
              "type": "string",
              "title": "Language Code"
            }
          },
          {
            "name": "format_type",
            "in": "query",
            "description": "Format to use for the subtitle file, either 'srt' or 'webvtt'",
            "required": false,
            "schema": {
              "description": "Format to use for the subtitle file, either 'srt' or 'webvtt'",
              "type": "string",
              "default": "srt",
              "embed": true,
              "enum": [
                "srt",
                "webvtt"
              ],
              "title": "Format Type"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "1\n00:00:01,000 --> 00:00:04,000\nHello, this is the first subtitle line\n\n2\n00:00:05,000 --> 00:00:07,000\nAnd here's the second subtitle line"
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Anonymous users cannot use this function",
            "content": {
              "application/json": {
                "example": {
                  "error": "anonymous_not_allowed",
                  "message": "Anonymous users cannot use this function"
                }
              }
            }
          },
          "404": {
            "description": "Dubbing or transcript not found",
            "content": {
              "application/json": {
                "example": {
                  "error": "transcript_not_found",
                  "message": "No transcript was found for the dub."
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "425": {
            "description": "Dubbing not ready",
            "content": {
              "application/json": {
                "example": {
                  "error": "dubbing_not_dubbed",
                  "message": "Dubbing has not finished yet."
                }
              }
            }
          }
        },
        "tags": [
          "dubbing"
        ],
        "x-fern-sdk-group-name": "dubbing",
        "x-fern-sdk-method-name": "get_transcript_for_dub"
      }
    },
    "/v1/models": {
      "get": {
        "operationId": "Get_Models_v1_models_get",
        "summary": "Get Models",
        "description": "Gets a list of available models.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ModelResponseModel"
                  },
                  "title": "Response Get Models V1 Models Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "models"
        ],
        "x-fern-sdk-group-name": "models",
        "x-fern-sdk-method-name": "get_all"
      }
    },
    "/v1/audio-native": {
      "post": {
        "operationId": "Creates_Audio_Native_enabled_project__v1_audio_native_post",
        "summary": "Creates Audio Native Enabled Project.",
        "description": "Creates Audio Native enabled project, optionally starts conversion and returns project ID and embeddable HTML snippet.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Creates_Audio_Native_enabled_project__v1_audio_native_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeCreateProjectResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "audio-native"
        ],
        "x-fern-sdk-group-name": "audio_native",
        "x-fern-sdk-method-name": "create"
      }
    },
    "/v1/audio-native/{project_id}/settings": {
      "get": {
        "operationId": "Get_Audio_Native_project_settings_v1_audio_native__project_id__settings_get",
        "summary": "Get Audio Native Project Settings",
        "description": "Get player settings for the specific project.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAudioNativeProjectSettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "audio-native"
        ],
        "x-fern-sdk-group-name": "audio_native",
        "x-fern-sdk-method-name": "get_settings"
      }
    },
    "/v1/audio-native/{project_id}/content": {
      "post": {
        "operationId": "Update_audio_native_Project_content_v1_audio_native__project_id__content_post",
        "summary": "Update Audio-Native Project Content",
        "description": "Updates content for the specific AudioNative Project.",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "description": "The ID of the Studio project.",
            "required": true,
            "schema": {
              "description": "The ID of the Studio project.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Project Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AudioNativeEditContentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "audio-native"
        ],
        "x-fern-sdk-group-name": "audio_native",
        "x-fern-sdk-method-name": "update_content"
      }
    },
    "/v1/shared-voices": {
      "get": {
        "operationId": "Get_voices_v1_shared_voices_get",
        "summary": "Get Voices",
        "description": "Retrieves a list of shared voices.",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "How many shared voices to return at maximum. Can not exceed 100, defaults to 30.",
            "required": false,
            "schema": {
              "description": "How many shared voices to return at maximum. Can not exceed 100, defaults to 30.",
              "type": "integer",
              "default": 30,
              "title": "Page Size"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Voice category used for filtering",
            "required": false,
            "schema": {
              "description": "Voice category used for filtering",
              "type": "string",
              "enum": [
                "professional",
                "famous",
                "high_quality"
              ],
              "examples": [
                "professional"
              ],
              "title": "Category"
            }
          },
          {
            "name": "gender",
            "in": "query",
            "description": "Gender used for filtering",
            "required": false,
            "schema": {
              "description": "Gender used for filtering",
              "type": "string",
              "examples": [
                "male"
              ],
              "title": "Gender"
            }
          },
          {
            "name": "age",
            "in": "query",
            "description": "Age used for filtering",
            "required": false,
            "schema": {
              "description": "Age used for filtering",
              "type": "string",
              "examples": [
                "young"
              ],
              "title": "Age"
            }
          },
          {
            "name": "accent",
            "in": "query",
            "description": "Accent used for filtering",
            "required": false,
            "schema": {
              "description": "Accent used for filtering",
              "type": "string",
              "examples": [
                "american"
              ],
              "title": "Accent"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language used for filtering",
            "required": false,
            "schema": {
              "description": "Language used for filtering",
              "type": "string",
              "examples": [
                "en"
              ],
              "title": "Language"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term used for filtering",
            "required": false,
            "schema": {
              "description": "Search term used for filtering",
              "type": "string",
              "examples": [
                "tiktok"
              ],
              "title": "Search"
            }
          },
          {
            "name": "use_cases",
            "in": "query",
            "description": "Use-case used for filtering",
            "required": false,
            "schema": {
              "description": "Use-case used for filtering",
              "type": "array",
              "items": {
                "type": "string"
              },
              "examples": [
                "audiobook"
              ],
              "title": "Use Cases"
            }
          },
          {
            "name": "descriptives",
            "in": "query",
            "description": "Search term used for filtering",
            "required": false,
            "schema": {
              "description": "Search term used for filtering",
              "type": "array",
              "items": {
                "type": "string"
              },
              "examples": [
                "tiktok"
              ],
              "title": "Descriptives"
            }
          },
          {
            "name": "featured",
            "in": "query",
            "description": "Filter featured voices",
            "required": false,
            "schema": {
              "description": "Filter featured voices",
              "type": "boolean",
              "default": false,
              "examples": [
                true
              ],
              "title": "Featured"
            }
          },
          {
            "name": "min_notice_period_days",
            "in": "query",
            "description": "Filter voices with a minimum notice period of the given number of days.",
            "required": false,
            "schema": {
              "description": "Filter voices with a minimum notice period of the given number of days.",
              "type": "integer",
              "examples": [
                30
              ],
              "title": "Min Notice Period Days"
            }
          },
          {
            "name": "reader_app_enabled",
            "in": "query",
            "description": "Filter voices that are enabled for the reader app",
            "required": false,
            "schema": {
              "description": "Filter voices that are enabled for the reader app",
              "type": "boolean",
              "default": false,
              "examples": [
                true
              ],
              "title": "Reader App Enabled"
            }
          },
          {
            "name": "owner_id",
            "in": "query",
            "description": "Filter voices by public owner ID",
            "required": false,
            "schema": {
              "description": "Filter voices by public owner ID",
              "type": "string",
              "examples": [
                "7c9fab611d9a0e1fb2e7448a0c294a8804efc2bcc324b0a366a5d5232b7d1532"
              ],
              "title": "Owner Id"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort criteria",
            "required": false,
            "schema": {
              "description": "Sort criteria",
              "type": "string",
              "examples": [
                "created_date"
              ],
              "title": "Sort"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Page"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLibraryVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_shared"
      }
    },
    "/v1/similar-voices": {
      "post": {
        "operationId": "Get_similar_library_voices_v1_similar_voices_post",
        "summary": "Get Similar Library Voices",
        "description": "Returns a list of shared voices similar to the provided audio sample. If neither similarity_threshold nor top_k is provided, we will apply default values.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Get_similar_library_voices_v1_similar_voices_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLibraryVoicesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "voices",
        "x-fern-sdk-method-name": "get_similar_library_voices"
      }
    },
    "/v1/usage/character-stats": {
      "get": {
        "operationId": "Get_characters_usage_metrics_v1_usage_character_stats_get",
        "summary": "Get Characters Usage Metrics",
        "description": "Returns the credit usage metrics for the current user or the entire workspace they are part of. The response will return a time axis with unix timestamps for each day and daily usage along that axis. The usage will be broken down by the specified breakdown type. For example, breakdown type \"voice\" will return the usage of each voice along the time axis.",
        "parameters": [
          {
            "name": "start_unix",
            "in": "query",
            "description": "UTC Unix timestamp for the start of the usage window, in milliseconds. To include the first day of the window, the timestamp should be at 00:00:00 of that day.",
            "required": true,
            "schema": {
              "description": "UTC Unix timestamp for the start of the usage window, in milliseconds. To include the first day of the window, the timestamp should be at 00:00:00 of that day.",
              "type": "integer",
              "examples": [
                "1685574000"
              ],
              "title": "Start Unix"
            }
          },
          {
            "name": "end_unix",
            "in": "query",
            "description": "UTC Unix timestamp for the end of the usage window, in milliseconds. To include the last day of the window, the timestamp should be at 23:59:59 of that day.",
            "required": true,
            "schema": {
              "description": "UTC Unix timestamp for the end of the usage window, in milliseconds. To include the last day of the window, the timestamp should be at 23:59:59 of that day.",
              "type": "integer",
              "examples": [
                "1688165999"
              ],
              "title": "End Unix"
            }
          },
          {
            "name": "include_workspace_metrics",
            "in": "query",
            "description": "Whether or not to include the statistics of the entire workspace.",
            "required": false,
            "schema": {
              "description": "Whether or not to include the statistics of the entire workspace.",
              "type": "boolean",
              "default": false,
              "title": "Include Workspace Metrics"
            }
          },
          {
            "name": "breakdown_type",
            "in": "query",
            "description": "How to break down the information. Cannot be \"user\" if include_workspace_metrics is False.",
            "required": false,
            "schema": {
              "description": "How to break down the information. Cannot be \"user\" if include_workspace_metrics is False.",
              "default": "none",
              "allOf": [
                {
                  "$ref": "#/components/schemas/BreakdownTypes"
                }
              ]
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageCharactersResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "usage"
        ],
        "x-fern-sdk-group-name": "usage",
        "x-fern-sdk-method-name": "get_characters_usage_metrics"
      }
    },
    "/v1/pronunciation-dictionaries/add-from-file": {
      "post": {
        "operationId": "Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post",
        "summary": "Add A Pronunciation Dictionary",
        "description": "Creates a new pronunciation dictionary from a lexicon .PLS file",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPronunciationDictionaryResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Pronunciation Dictionary"
        ],
        "x-fern-sdk-group-name": "pronunciation_dictionary",
        "x-fern-sdk-method-name": "add_from_file"
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/add-rules": {
      "post": {
        "operationId": "Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post",
        "summary": "Add Rules To The Pronunciation Dictionary",
        "description": "Add rules to the pronunciation dictionary",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "description": "The id of the pronunciation dictionary",
            "required": true,
            "schema": {
              "description": "The id of the pronunciation dictionary",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddPronunciationDictionaryRulesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Pronunciation Dictionary"
        ],
        "x-fern-sdk-group-name": "pronunciation_dictionary",
        "x-fern-sdk-method-name": "add_rules"
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/remove-rules": {
      "post": {
        "operationId": "Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post",
        "summary": "Remove Rules From The Pronunciation Dictionary",
        "description": "Remove rules from the pronunciation dictionary",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "description": "The id of the pronunciation dictionary",
            "required": true,
            "schema": {
              "description": "The id of the pronunciation dictionary",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemovePronunciationDictionaryRulesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Pronunciation Dictionary"
        ],
        "x-fern-sdk-group-name": "pronunciation_dictionary",
        "x-fern-sdk-method-name": "remove_rules"
      }
    },
    "/v1/pronunciation-dictionaries/{dictionary_id}/{version_id}/download": {
      "get": {
        "operationId": "Get_a_PLS_file_with_a_pronunciation_dictionary_version_rules_v1_pronunciation_dictionaries__dictionary_id___version_id__download_get",
        "summary": "Get A Pls File With A Pronunciation Dictionary Version Rules",
        "description": "Get a PLS file with a pronunciation dictionary version rules",
        "parameters": [
          {
            "name": "dictionary_id",
            "in": "path",
            "description": "The id of the pronunciation dictionary",
            "required": true,
            "schema": {
              "description": "The id of the pronunciation dictionary",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Dictionary Id"
            }
          },
          {
            "name": "version_id",
            "in": "path",
            "description": "The id of the version of the pronunciation dictionary",
            "required": true,
            "schema": {
              "description": "The id of the version of the pronunciation dictionary",
              "type": "string",
              "examples": [
                "BdF0s0aZ3oFoKnDYdTox"
              ],
              "title": "Version Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The PLS file containing pronunciation dictionary rules",
            "headers": {
              "Content-Disposition": {
                "description": "Attachment filename",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Pronunciation Dictionary"
        ],
        "x-fern-sdk-group-name": "pronunciation_dictionary",
        "x-fern-sdk-method-name": "download"
      }
    },
    "/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/": {
      "get": {
        "operationId": "Get_metadata_for_a_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id___get",
        "summary": "Get Metadata For A Pronunciation Dictionary",
        "description": "Get metadata for a pronunciation dictionary",
        "parameters": [
          {
            "name": "pronunciation_dictionary_id",
            "in": "path",
            "description": "The id of the pronunciation dictionary",
            "required": true,
            "schema": {
              "description": "The id of the pronunciation dictionary",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Pronunciation Dictionary Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPronunciationDictionaryMetadataResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Pronunciation Dictionary"
        ],
        "x-fern-sdk-group-name": "pronunciation_dictionary",
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/pronunciation-dictionaries/": {
      "get": {
        "operationId": "Get_Pronunciation_Dictionaries_v1_pronunciation_dictionaries__get",
        "summary": "Get Pronunciation Dictionaries",
        "description": "Get a list of the pronunciation dictionaries you have access to and their metadata",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "Used for fetching next page. Cursor is returned in the response.",
            "required": false,
            "schema": {
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "type": "string",
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "How many pronunciation dictionaries to return at maximum. Can not exceed 100, defaults to 30.",
            "required": false,
            "schema": {
              "description": "How many pronunciation dictionaries to return at maximum. Can not exceed 100, defaults to 30.",
              "type": "integer",
              "default": 30,
              "maximum": 100,
              "minimum": 1,
              "title": "Page Size"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPronunciationDictionariesMetadataResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Pronunciation Dictionary"
        ],
        "x-fern-sdk-group-name": "pronunciation_dictionary",
        "x-fern-sdk-method-name": "get_all"
      }
    },
    "/v1/workspace/groups/search": {
      "get": {
        "operationId": "Search_user_groups_v1_workspace_groups_search_get",
        "summary": "Search User Groups",
        "description": "Searches for user groups in the workspace. Multiple or no groups may be returned.",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name of the group to find.",
            "required": true,
            "schema": {
              "description": "Name of the group to find.",
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": true,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkspaceGroupByNameResponseModel"
                  },
                  "title": "Response Search User Groups V1 Workspace Groups Search Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/groups/{group_id}/members/remove": {
      "post": {
        "operationId": "Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post",
        "summary": "Delete Member From User Group",
        "description": "Removes a member from the specified group. This endpoint may only be called by workspace administrators.",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "The ID of the target group.",
            "required": true,
            "schema": {
              "description": "The ID of the target group.",
              "type": "string",
              "title": "Group Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": true,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWorkspaceGroupMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/groups/{group_id}/members": {
      "post": {
        "operationId": "Add_member_to_user_group_v1_workspace_groups__group_id__members_post",
        "summary": "Add Member To User Group",
        "description": "Adds a member of your workspace to the specified group. This endpoint may only be called by workspace administrators.",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "description": "The ID of the target group.",
            "required": true,
            "schema": {
              "description": "The ID of the target group.",
              "type": "string",
              "title": "Group Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": true,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWorkspaceGroupMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/invites/add": {
      "post": {
        "operationId": "Invite_user_v1_workspace_invites_add_post",
        "summary": "Invite User",
        "description": "Sends an email invitation to join your workspace to the provided email. If the user doesn't have an account they will be prompted to create one. If the user accepts this invite they will be added as a user to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators. If the user is already in the workspace a 400 error will be returned.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Invite_user_v1_workspace_invites_add_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWorkspaceInviteResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/invites/add-bulk": {
      "post": {
        "operationId": "Invite_multiple_users_v1_workspace_invites_add_bulk_post",
        "summary": "Invite Multiple Users",
        "description": "Sends email invitations to join your workspace to the provided emails. Requires all email addresses to be part of a verified domain. If the users don't have an account they will be prompted to create one. If the users accept these invites they will be added as users to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddWorkspaceInviteResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/invites": {
      "delete": {
        "operationId": "Delete_existing_invitation_v1_workspace_invites_delete",
        "summary": "Delete Existing Invitation",
        "description": "Invalidates an existing email invitation. The invitation will still show up in the inbox it has been delivered to, but activating it to join the workspace won't work. This endpoint may only be called by workspace administrators.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Delete_existing_invitation_v1_workspace_invites_delete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteWorkspaceInviteResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/v1/workspace/members": {
      "post": {
        "operationId": "Update_member_v1_workspace_members_post",
        "summary": "Update Member",
        "description": "Updates attributes of a workspace member. Apart from the email identifier, all parameters will remain unchanged unless specified. This endpoint may only be called by workspace administrators.",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Update_member_v1_workspace_members_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateWorkspaceMemberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "workspace"
        ]
      }
    },
    "/profile/{handle}": {
      "get": {
        "operationId": "Get_a_profile_page_profile__handle__get",
        "summary": "Get A Profile Page",
        "description": "Gets a profile page based on a handle",
        "parameters": [
          {
            "name": "handle",
            "in": "path",
            "description": "Handle for a VA's profile page",
            "required": true,
            "schema": {
              "description": "Handle for a VA's profile page",
              "type": "string",
              "examples": [
                "talexgeorge"
              ],
              "title": "Handle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilePageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "voices"
        ],
        "x-fern-sdk-group-name": "profile",
        "x-fern-sdk-method-name": "get"
      }
    },
    "/v1/speech-to-text": {
      "post": {
        "operationId": "Speech_to_Text_v1_speech_to_text_post",
        "summary": "Speech To Text",
        "description": "Transcribe an audio or video file.",
        "parameters": [
          {
            "name": "enable_logging",
            "in": "query",
            "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
            "required": false,
            "schema": {
              "description": "When enable_logging is set to false zero retention mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Zero retention mode may only be used by enterprise customers.",
              "type": "boolean",
              "default": true,
              "title": "Enable request logging."
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Speech_to_Text_v1_speech_to_text_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpeechToTextChunkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "speech-to-text"
        ],
        "x-fern-sdk-group-name": "speech_to_text",
        "x-fern-sdk-method-name": "convert"
      }
    },
    "/v1/convai/conversation/get_signed_url": {
      "get": {
        "operationId": "Get_Signed_Url_v1_convai_conversation_get_signed_url_get",
        "summary": "Get Signed Url",
        "description": "Get a signed url to start a conversation with an agent with an agent that requires authorization",
        "parameters": [
          {
            "name": "agent_id",
            "in": "query",
            "description": "The id of the agent you're taking the action on.",
            "required": true,
            "schema": {
              "description": "The id of the agent you're taking the action on.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationSignedUrlResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_signed_url"
      }
    },
    "/v1/convai/agents/create": {
      "post": {
        "operationId": "Create_Agent_v1_convai_agents_create_post",
        "summary": "Create Agent",
        "description": "Create an agent from a config object",
        "parameters": [
          {
            "name": "use_tool_ids",
            "in": "query",
            "description": "Use tool ids instead of tools specs from request payload.",
            "required": false,
            "schema": {
              "description": "Use tool ids instead of tools specs from request payload.",
              "type": "boolean",
              "default": false,
              "title": "Use Tool Ids"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Create_Agent_v1_convai_agents_create_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "create_agent"
      }
    },
    "/v1/convai/agents/{agent_id}": {
      "get": {
        "operationId": "Get_Agent_v1_convai_agents__agent_id__get",
        "summary": "Get Agent",
        "description": "Retrieve config for an agent",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_agent"
      },
      "delete": {
        "operationId": "Delete_Agent_v1_convai_agents__agent_id__delete",
        "summary": "Delete Agent",
        "description": "Delete an agent",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "delete_agent"
      },
      "patch": {
        "operationId": "Patches_an_Agent_settings_v1_convai_agents__agent_id__patch",
        "summary": "Patches An Agent Settings",
        "description": "Patches an Agent settings",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "use_tool_ids",
            "in": "query",
            "description": "Use tool ids instead of tools specs from request payload.",
            "required": false,
            "schema": {
              "description": "Use tool ids instead of tools specs from request payload.",
              "type": "boolean",
              "default": false,
              "title": "Use Tool Ids"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "update_agent"
      }
    },
    "/v1/convai/agents/{agent_id}/widget": {
      "get": {
        "operationId": "Get_Agent_widget_config_v1_convai_agents__agent_id__widget_get",
        "summary": "Get Agent Widget Config",
        "description": "Retrieve the widget configuration for an agent",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "conversation_signature",
            "in": "query",
            "description": "An expiring token that enables a conversation to start. These can be generated for an agent using the /v1/convai/conversation/get_signed_url endpoint",
            "required": false,
            "schema": {
              "description": "An expiring token that enables a conversation to start. These can be generated for an agent using the /v1/convai/conversation/get_signed_url endpoint",
              "type": "string",
              "title": "Conversation Signature"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentEmbedResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_agent_widget"
      }
    },
    "/v1/convai/agents/{agent_id}/link": {
      "get": {
        "operationId": "Get_shareable_agent_link_v1_convai_agents__agent_id__link_get",
        "summary": "Get Shareable Agent Link",
        "description": "Get the current link used to share the agent with others",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentLinkResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_agent_link"
      }
    },
    "/v1/convai/agents/{agent_id}/avatar": {
      "post": {
        "operationId": "Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post",
        "summary": "Post Agent Avatar",
        "description": "Sets the avatar for an agent displayed in the widget",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostAgentAvatarResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "post_agent_avatar"
      }
    },
    "/v1/convai/agents/{agent_id}/add-secret": {
      "post": {
        "operationId": "Add_a_secret_to_the_Agent_which_can_be_referenced_in_tool_calls_v1_convai_agents__agent_id__add_secret_post",
        "summary": "Add A Secret To The Agent Which Can Be Referenced In Tool Calls",
        "description": "Uploads a file or reference a webpage for the agent to use as part of it's knowledge base",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_a_secret_to_the_Agent_which_can_be_referenced_in_tool_calls_v1_convai_agents__agent_id__add_secret_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddAgentSecretResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "add_agent_secret"
      }
    },
    "/v1/convai/agents": {
      "get": {
        "operationId": "Get_agents_page_v1_convai_agents_get",
        "summary": "Get Agents Page",
        "description": "Returns a page of your agents and their metadata.",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "Used for fetching next page. Cursor is returned in the response.",
            "required": false,
            "schema": {
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "type": "string",
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "How many Agents to return at maximum. Can not exceed 100, defaults to 30.",
            "required": false,
            "schema": {
              "description": "How many Agents to return at maximum. Can not exceed 100, defaults to 30.",
              "type": "integer",
              "default": 30,
              "maximum": 100,
              "minimum": 1,
              "title": "Page Size"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search by agents name.",
            "required": false,
            "schema": {
              "description": "Search by agents name.",
              "type": "string",
              "title": "Search"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAgentsPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_agents"
      }
    },
    "/v1/convai/conversations": {
      "get": {
        "operationId": "Get_Conversations_v1_convai_conversations_get",
        "summary": "Get Conversations",
        "description": "Get all conversations of agents that user owns. With option to restrict to a specific agent.",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "Used for fetching next page. Cursor is returned in the response.",
            "required": false,
            "schema": {
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "type": "string",
              "title": "Cursor"
            }
          },
          {
            "name": "agent_id",
            "in": "query",
            "description": "The id of the agent you're taking the action on.",
            "required": false,
            "schema": {
              "description": "The id of the agent you're taking the action on.",
              "type": "string",
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Agent Id"
            }
          },
          {
            "name": "call_successful",
            "in": "query",
            "description": "The result of the success evaluation",
            "required": false,
            "schema": {
              "description": "The result of the success evaluation",
              "allOf": [
                {
                  "$ref": "#/components/schemas/EvaluationSuccessResult"
                }
              ],
              "examples": [
                "success"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "How many conversations to return at maximum. Can not exceed 100, defaults to 30.",
            "required": false,
            "schema": {
              "description": "How many conversations to return at maximum. Can not exceed 100, defaults to 30.",
              "type": "integer",
              "default": 30,
              "maximum": 100,
              "minimum": 1,
              "title": "Page Size"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConversationsPageResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_conversations"
      }
    },
    "/v1/convai/conversations/{conversation_id}": {
      "get": {
        "operationId": "Get_Conversation_Details_v1_convai_conversations__conversation_id__get",
        "summary": "Get Conversation Details",
        "description": "Get the details of a particular conversation",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation you're taking the action on.",
            "required": true,
            "schema": {
              "description": "The id of the conversation you're taking the action on.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Conversation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConversationResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_conversation"
      },
      "delete": {
        "operationId": "Delete_Conversation_v1_convai_conversations__conversation_id__delete",
        "summary": "Delete Conversation",
        "description": "Delete a particular conversation",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation you're taking the action on.",
            "required": true,
            "schema": {
              "description": "The id of the conversation you're taking the action on.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Conversation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "delete_conversation"
      }
    },
    "/v1/convai/conversations/{conversation_id}/audio": {
      "get": {
        "operationId": "Get_Conversation_Audio_v1_convai_conversations__conversation_id__audio_get",
        "summary": "Get Conversation Audio",
        "description": "Get the audio recording of a particular conversation",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation you're taking the action on.",
            "required": true,
            "schema": {
              "description": "The id of the conversation you're taking the action on.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Conversation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_conversation_audio"
      }
    },
    "/v1/convai/conversations/{conversation_id}/feedback": {
      "post": {
        "operationId": "Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post",
        "summary": "Send Conversation Feedback",
        "description": "Send the feedback for the given conversation",
        "parameters": [
          {
            "name": "conversation_id",
            "in": "path",
            "description": "The id of the conversation you're taking the action on.",
            "required": true,
            "schema": {
              "description": "The id of the conversation you're taking the action on.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Conversation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "post_conversation_feedback"
      }
    },
    "/v1/convai/phone-numbers/create": {
      "post": {
        "operationId": "Import_phone_number_v1_convai_phone_numbers_create_post",
        "summary": "Import Phone Number",
        "description": "Import Phone Number from Twilio configuration",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Create Phone Request Information",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreatePhoneNumberRequest"
                  }
                ],
                "title": "Phone Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePhoneNumberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "create_phone_number"
      }
    },
    "/v1/convai/phone-numbers/{phone_number_id}": {
      "get": {
        "operationId": "Get_phone_number_v1_convai_phone_numbers__phone_number_id__get",
        "summary": "Get Phone Number",
        "description": "Retrieve Phone Number details by ID",
        "parameters": [
          {
            "name": "phone_number_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "title": "Phone Number Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPhoneNumberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_phone_number"
      },
      "delete": {
        "operationId": "Delete_phone_number_v1_convai_phone_numbers__phone_number_id__delete",
        "summary": "Delete Phone Number",
        "description": "Delete Phone Number by ID",
        "parameters": [
          {
            "name": "phone_number_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "title": "Phone Number Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "delete_phone_number"
      },
      "patch": {
        "operationId": "Update_phone_number_v1_convai_phone_numbers__phone_number_id__patch",
        "summary": "Update Phone Number",
        "description": "Update Phone Number details by ID",
        "parameters": [
          {
            "name": "phone_number_id",
            "in": "path",
            "description": "The id of an agent. This is returned on agent creation.",
            "required": true,
            "schema": {
              "description": "The id of an agent. This is returned on agent creation.",
              "type": "string",
              "embed": true,
              "examples": [
                "TeaqRRdTcIfIu2i7BYfT"
              ],
              "title": "Phone Number Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Patch Phone Request Information",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdatePhoneNumberRequest"
                  }
                ],
                "title": "Phone Update Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPhoneNumberResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "update_phone_number"
      }
    },
    "/v1/convai/phone-numbers/": {
      "get": {
        "operationId": "List_phone_numbers_v1_convai_phone_numbers__get",
        "summary": "List Phone Numbers",
        "description": "Retrieve all Phone Numbers",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetPhoneNumberResponseModel"
                  },
                  "title": "Response List Phone Numbers V1 Convai Phone Numbers  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_phone_numbers"
      }
    },
    "/v1/convai/knowledge-base": {
      "get": {
        "operationId": "Get_knowledge_base_list_v1_convai_knowledge_base_get",
        "summary": "Get Knowledge Base List",
        "description": "Get a list of available knowledge base documents",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "description": "Used for fetching next page. Cursor is returned in the response.",
            "required": false,
            "schema": {
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "type": "string",
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
            "required": false,
            "schema": {
              "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
              "type": "integer",
              "default": 30,
              "maximum": 100,
              "minimum": 1,
              "title": "Page Size"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "If specified, the endpoint returns only such knowledge base documents whose names start with this string.",
            "required": false,
            "schema": {
              "description": "If specified, the endpoint returns only such knowledge base documents whose names start with this string.",
              "type": "string",
              "title": "Search"
            }
          },
          {
            "name": "show_only_owned_documents",
            "in": "query",
            "description": "If set to true, the endpoint will return only documents owned by you (and not shared from somebody else).",
            "required": false,
            "schema": {
              "description": "If set to true, the endpoint will return only documents owned by you (and not shared from somebody else).",
              "type": "boolean",
              "default": false,
              "title": "Show Only Owned Documents"
            }
          },
          {
            "name": "use_typesense",
            "in": "query",
            "description": "If set to true, the endpoint will use typesense DB to search for the documents).",
            "required": false,
            "schema": {
              "description": "If set to true, the endpoint will use typesense DB to search for the documents).",
              "type": "boolean",
              "default": false,
              "title": "Use Typesense"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKnowledgeBaseListResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_knowledge_base_list"
      },
      "post": {
        "operationId": "Add_to_knowledge_base_v1_convai_knowledge_base_post",
        "summary": "Add To Knowledge Base",
        "description": "Uploads a file or reference a webpage to use as part of the shared knowledge base",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_to_knowledge_base_v1_convai_knowledge_base_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "add_to_knowledge_base"
      }
    },
    "/v1/convai/add-to-knowledge-base": {
      "post": {
        "operationId": "Add_to_knowledge_base_v1_convai_add_to_knowledge_base_post",
        "summary": "Add To Knowledge Base",
        "description": "Uploads a file or reference a webpage for the agent to use as part of it's knowledge base",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_to_knowledge_base_v1_convai_add_to_knowledge_base_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai"
      }
    },
    "/v1/convai/agents/{agent_id}/add-to-knowledge-base": {
      "post": {
        "operationId": "Add_to_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post",
        "summary": "Add To Knowledge Base",
        "description": "Uploads a file or reference a webpage for the agent to use as part of it's knowledge base",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_Add_to_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/rag-index": {
      "post": {
        "operationId": "Compute_RAG_index__v1_convai_knowledge_base__documentation_id__rag_index_post",
        "summary": "Compute Rag Index.",
        "description": "In case the document is not RAG indexed, it triggers rag indexing task, otherwise it just returns the current status.",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "description": "The id of a document from the knowledge base. This is returned on document addition.",
            "required": true,
            "schema": {
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Documentation Id"
            }
          },
          {
            "name": "force_reindex",
            "in": "query",
            "description": "In case the document is indexed and for some reason you want to reindex it, set this param as true.",
            "required": false,
            "schema": {
              "description": "In case the document is indexed and for some reason you want to reindex it, set this param as true.",
              "type": "boolean",
              "default": false,
              "title": "Force Reindex"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Payload for RAG index status endpoint.",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RAGIndexRequestModel"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RAGIndexResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "rag_index_status"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}": {
      "get": {
        "operationId": "Get_documentation_from_knowledge_base_v1_convai_knowledge_base__documentation_id__get",
        "summary": "Get Documentation From Knowledge Base",
        "description": "Get details about a specific documentation making up the agent's knowledge base",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "description": "The id of a document from the knowledge base. This is returned on document addition.",
            "required": true,
            "schema": {
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Documentation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_knowledge_base_document_by_id"
      },
      "delete": {
        "operationId": "Delete_knowledge_base_document_v1_convai_knowledge_base__documentation_id__delete",
        "summary": "Delete Knowledge Base Document",
        "description": "Delete a document from the knowledge base",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "description": "The id of a document from the knowledge base. This is returned on document addition.",
            "required": true,
            "schema": {
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Documentation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "delete_knowledge_base_document"
      }
    },
    "/v1/convai/agents/{agent_id}/knowledge-base/{documentation_id}": {
      "get": {
        "operationId": "Get_documentation_from_knowledge_base_v1_convai_agents__agent_id__knowledge_base__documentation_id__get",
        "summary": "Get Documentation From Knowledge Base",
        "description": "Get details about a specific documentation making up the agent's knowledge base",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "description": "The id of a document from the knowledge base. This is returned on document addition.",
            "required": true,
            "schema": {
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Documentation Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKnowledgeBaseResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "deprecated": true,
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai"
      }
    },
    "/v1/convai/knowledge-base/{documentation_id}/dependent-agents": {
      "get": {
        "operationId": "Get_dependent_agents_list_v1_convai_knowledge_base__documentation_id__dependent_agents_get",
        "summary": "Get Dependent Agents List",
        "description": "Get a list of agents depending on this knowledge base document",
        "parameters": [
          {
            "name": "documentation_id",
            "in": "path",
            "description": "The id of a document from the knowledge base. This is returned on document addition.",
            "required": true,
            "schema": {
              "description": "The id of a document from the knowledge base. This is returned on document addition.",
              "type": "string",
              "embed": true,
              "examples": [
                "21m00Tcm4TlvDq8ikWAM"
              ],
              "title": "Documentation Id"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Used for fetching next page. Cursor is returned in the response.",
            "required": false,
            "schema": {
              "description": "Used for fetching next page. Cursor is returned in the response.",
              "type": "string",
              "title": "Cursor"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
            "required": false,
            "schema": {
              "description": "How many documents to return at maximum. Can not exceed 100, defaults to 30.",
              "type": "integer",
              "default": 30,
              "maximum": 100,
              "minimum": 1,
              "title": "Page Size"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetKnowledgeBaseDependentAgentsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_dependent_agents"
      }
    },
    "/v1/convai/settings": {
      "get": {
        "operationId": "Get_Convai_settings_v1_convai_settings_get",
        "summary": "Get Convai Settings",
        "description": "Retrieve Convai settings for the workspace",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAISettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_settings"
      },
      "patch": {
        "operationId": "Update_Convai_settings_v1_convai_settings_patch",
        "summary": "Update Convai Settings",
        "description": "Update Convai settings for the workspace",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Convai settings to update",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PatchConvAISettingsRequest"
                  }
                ],
                "title": "Request Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConvAISettingsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "update_settings"
      }
    },
    "/v1/convai/secrets": {
      "get": {
        "operationId": "Get_ConvAI_workspace_secrets_v1_convai_secrets_get",
        "summary": "Get Convai Workspace Secrets",
        "description": "Get all workspace secrets for the user",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWorkspaceSecretsResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "get_secrets"
      },
      "post": {
        "operationId": "Create_ConvAI_workspace_secret_v1_convai_secrets_post",
        "summary": "Create Convai Workspace Secret",
        "description": "Create a new secret for the workspace",
        "parameters": [
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Secret to create",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PostWorkspaceSecretRequest"
                  }
                ],
                "title": "Request Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostWorkspaceSecretResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "create_secret"
      }
    },
    "/v1/convai/secrets/{secret_id}": {
      "delete": {
        "operationId": "Delete_ConvAI_workspace_secret_v1_convai_secrets__secret_id__delete",
        "summary": "Delete Convai Workspace Secret",
        "description": "Delete a workspace secret if it's not in use",
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Secret Id"
            }
          },
          {
            "name": "xi-api-key",
            "in": "header",
            "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
            "required": false,
            "schema": {
              "description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
              "type": "string",
              "title": "Xi-Api-Key"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "tags": [
          "Conversational AI"
        ],
        "x-fern-sdk-group-name": "conversational_ai",
        "x-fern-sdk-method-name": "delete_secret"
      }
    },
    "/docs": {
      "get": {
        "operationId": "redirect_to_mintlify_docs_get",
        "summary": "Redirect To Mintlify",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ASRConversationalConfig": {
        "type": "object",
        "properties": {
          "quality": {
            "default": "high",
            "allOf": [
              {
                "$ref": "#/components/schemas/ASRQuality"
              }
            ]
          },
          "provider": {
            "default": "elevenlabs",
            "allOf": [
              {
                "$ref": "#/components/schemas/ASRProvider"
              }
            ]
          },
          "user_input_audio_format": {
            "default": "pcm_16000",
            "allOf": [
              {
                "$ref": "#/components/schemas/ASRInputFormat"
              }
            ]
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Keywords"
          }
        },
        "title": "ASRConversationalConfig"
      },
      "ASRInputFormat": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "pcm_8000",
          "pcm_16000",
          "pcm_22050",
          "pcm_24000",
          "pcm_44100",
          "ulaw_8000"
        ],
        "title": "ASRInputFormat"
      },
      "ASRProvider": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "elevenlabs"
        ],
        "title": "ASRProvider"
      },
      "ASRQuality": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "high"
        ],
        "title": "ASRQuality"
      },
      "AddAgentSecretResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "AddAgentSecretResponseModel"
      },
      "AddChapterResponseModel": {
        "type": "object",
        "properties": {
          "chapter": {
            "$ref": "#/components/schemas/ChapterWithContentResponseModel"
          }
        },
        "required": [
          "chapter"
        ],
        "title": "AddChapterResponseModel"
      },
      "AddKnowledgeBaseResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "prompt_injectable": {
            "type": "boolean",
            "title": "Prompt Injectable"
          }
        },
        "required": [
          "id",
          "prompt_injectable"
        ],
        "title": "AddKnowledgeBaseResponseModel"
      },
      "AddProjectResponseModel": {
        "type": "object",
        "properties": {
          "project": {
            "$ref": "#/components/schemas/ProjectResponseModel"
          }
        },
        "required": [
          "project"
        ],
        "title": "AddProjectResponseModel"
      },
      "AddPronunciationDictionaryResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the created pronunciation dictionary.",
            "type": "string",
            "title": "Id"
          },
          "name": {
            "description": "The name of the created pronunciation dictionary.",
            "type": "string",
            "title": "Name"
          },
          "created_by": {
            "description": "The user ID of the creator of the pronunciation dictionary.",
            "type": "string",
            "title": "Created By"
          },
          "creation_time_unix": {
            "description": "The creation time of the pronunciation dictionary in Unix timestamp.",
            "type": "integer",
            "title": "Creation Time Unix"
          },
          "version_id": {
            "description": "The ID of the created pronunciation dictionary version.",
            "type": "string",
            "title": "Version Id"
          },
          "description": {
            "description": "The description of the pronunciation dictionary.",
            "type": "string",
            "title": "Description"
          }
        },
        "example": {
          "id": "5xM3yVvZQKV0EfqQpLrJ",
          "name": "My Dictionary",
          "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
          "creation_time_unix": 1714156800,
          "version_id": "5xM3yVvZQKV0EfqQpLrJ",
          "description": "This is a test dictionary"
        },
        "required": [
          "id",
          "name",
          "created_by",
          "creation_time_unix",
          "version_id"
        ],
        "title": "AddPronunciationDictionaryResponseModel"
      },
      "AddPronunciationDictionaryRulesResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the pronunciation dictionary.",
            "type": "string",
            "title": "Id"
          },
          "version_id": {
            "description": "The version ID of the pronunciation dictionary.",
            "type": "string",
            "title": "Version Id"
          }
        },
        "example": {
          "id": "5xM3yVvZQKV0EfqQpLrJ",
          "version_id": "5xM3yVvZQKV0EfqQpLr2"
        },
        "required": [
          "id",
          "version_id"
        ],
        "title": "AddPronunciationDictionaryRulesResponseModel"
      },
      "AddVoiceIVCResponseModel": {
        "type": "object",
        "properties": {
          "voice_id": {
            "description": "The ID of the newly created voice.",
            "type": "string",
            "title": "Voice Id"
          },
          "requires_verification": {
            "description": "Whether the voice requires verification",
            "type": "boolean",
            "title": "Requires Verification"
          }
        },
        "example": {
          "voice_id": "c38kUX8pkfYO2kHyqfFy",
          "requires_verification": false
        },
        "required": [
          "voice_id",
          "requires_verification"
        ],
        "title": "AddVoiceIVCResponseModel"
      },
      "AddVoiceResponseModel": {
        "type": "object",
        "properties": {
          "voice_id": {
            "description": "The ID of the voice.",
            "type": "string",
            "title": "Voice Id"
          }
        },
        "example": {
          "voice_id": "b38kUX8pkfYO2kHyqfFy"
        },
        "required": [
          "voice_id"
        ],
        "title": "AddVoiceResponseModel"
      },
      "AddWorkspaceGroupMemberResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the workspace group member addition request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "AddWorkspaceGroupMemberResponseModel"
      },
      "AddWorkspaceInviteResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the workspace invite request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "AddWorkspaceInviteResponseModel"
      },
      "AgentBan": {
        "type": "object",
        "properties": {
          "at_unix": {
            "type": "integer",
            "title": "At Unix"
          },
          "reason": {
            "type": "string",
            "title": "Reason"
          },
          "reason_type": {
            "$ref": "#/components/schemas/BanReasonType"
          }
        },
        "required": [
          "at_unix",
          "reason_type"
        ],
        "title": "AgentBan"
      },
      "AgentCallLimits": {
        "type": "object",
        "properties": {
          "agent_concurrency_limit": {
            "type": "integer",
            "default": -1,
            "title": "Agent Concurrency Limit"
          },
          "daily_limit": {
            "type": "integer",
            "default": 100000,
            "title": "Daily Limit"
          }
        },
        "title": "AgentCallLimits"
      },
      "AgentConfigAPIModel": {
        "type": "object",
        "properties": {
          "first_message": {
            "type": "string",
            "default": "",
            "title": "First Message"
          },
          "language": {
            "type": "string",
            "default": "en",
            "title": "Language"
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig"
          },
          "prompt": {
            "$ref": "#/components/schemas/PromptAgent"
          }
        },
        "title": "AgentConfigAPIModel"
      },
      "AgentConfigOverride": {
        "type": "object",
        "properties": {
          "prompt": {
            "$ref": "#/components/schemas/PromptAgentOverride"
          },
          "first_message": {
            "type": "string",
            "title": "First Message"
          },
          "language": {
            "type": "string",
            "title": "Language"
          }
        },
        "title": "AgentConfigOverride"
      },
      "AgentConfigOverrideConfig": {
        "type": "object",
        "properties": {
          "prompt": {
            "$ref": "#/components/schemas/PromptAgentOverrideConfig"
          },
          "first_message": {
            "type": "boolean",
            "default": false,
            "title": "First Message"
          },
          "language": {
            "type": "boolean",
            "default": false,
            "title": "Language"
          }
        },
        "title": "AgentConfigOverrideConfig"
      },
      "AgentMetadataResponseModel": {
        "type": "object",
        "properties": {
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          }
        },
        "required": [
          "created_at_unix_secs"
        ],
        "title": "AgentMetadataResponseModel"
      },
      "AgentPlatformSettingsRequestModel": {
        "type": "object",
        "properties": {
          "auth": {
            "$ref": "#/components/schemas/AuthSettings"
          },
          "evaluation": {
            "$ref": "#/components/schemas/EvaluationSettings"
          },
          "widget": {
            "$ref": "#/components/schemas/WidgetConfig"
          },
          "data_collection": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "title": "Data Collection"
          },
          "overrides": {
            "$ref": "#/components/schemas/ConversationInitiationClientDataConfig"
          },
          "call_limits": {
            "$ref": "#/components/schemas/AgentCallLimits"
          },
          "ban": {
            "$ref": "#/components/schemas/AgentBan"
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyConfig"
          },
          "safety": {
            "$ref": "#/components/schemas/SafetyCommonModel"
          }
        },
        "title": "AgentPlatformSettingsRequestModel"
      },
      "AgentPlatformSettingsResponseModel": {
        "type": "object",
        "properties": {
          "auth": {
            "$ref": "#/components/schemas/AuthSettings"
          },
          "evaluation": {
            "$ref": "#/components/schemas/EvaluationSettings"
          },
          "widget": {
            "$ref": "#/components/schemas/WidgetConfig"
          },
          "data_collection": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "title": "Data Collection"
          },
          "overrides": {
            "$ref": "#/components/schemas/ConversationInitiationClientDataConfig"
          },
          "call_limits": {
            "$ref": "#/components/schemas/AgentCallLimits"
          },
          "ban": {
            "$ref": "#/components/schemas/AgentBan"
          },
          "privacy": {
            "$ref": "#/components/schemas/PrivacyConfig"
          },
          "safety": {
            "$ref": "#/components/schemas/SafetyResponseModel"
          }
        },
        "title": "AgentPlatformSettingsResponseModel"
      },
      "AgentSummaryResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "access_info": {
            "$ref": "#/components/schemas/ResourceAccessInfo"
          }
        },
        "required": [
          "agent_id",
          "name",
          "created_at_unix_secs",
          "access_info"
        ],
        "title": "AgentSummaryResponseModel"
      },
      "AllowlistItem": {
        "type": "object",
        "properties": {
          "hostname": {
            "type": "string",
            "title": "Hostname"
          }
        },
        "required": [
          "hostname"
        ],
        "title": "AllowlistItem"
      },
      "ArrayJsonSchemaProperty": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "array",
            "enum": [
              "array"
            ],
            "title": "Type"
          },
          "items": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
              },
              {
                "$ref": "#/components/schemas/ObjectJsonSchemaProperty"
              },
              {
                "$ref": "#/components/schemas/ArrayJsonSchemaProperty"
              }
            ],
            "title": "Items"
          },
          "description": {
            "type": "string",
            "default": "",
            "title": "Description"
          }
        },
        "additionalProperties": false,
        "required": [
          "items"
        ],
        "title": "ArrayJsonSchemaProperty"
      },
      "AudioNativeCreateProjectResponseModel": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "The ID of the created Audio Native project.",
            "type": "string",
            "title": "Project Id"
          },
          "converting": {
            "description": "Whether the project is currently being converted.",
            "type": "boolean",
            "title": "Converting"
          },
          "html_snippet": {
            "description": "The HTML snippet to embed the Audio Native player.",
            "type": "string",
            "title": "Html Snippet"
          }
        },
        "example": {
          "project_id": "JBFqnCBsd6RMkjVDRZzb",
          "converting": false,
          "html_snippet": "<div id='audio-native-player'></div>"
        },
        "required": [
          "project_id",
          "converting",
          "html_snippet"
        ],
        "title": "AudioNativeCreateProjectResponseModel"
      },
      "AudioNativeEditContentResponseModel": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "converting": {
            "description": "Whether the project is currently being converted.",
            "type": "boolean",
            "title": "Converting"
          },
          "publishing": {
            "description": "Whether the project is currently being published.",
            "type": "boolean",
            "title": "Publishing"
          },
          "html_snippet": {
            "description": "The HTML snippet to embed the Audio Native player.",
            "type": "string",
            "title": "Html Snippet"
          }
        },
        "example": {
          "project_id": "JBFqnCBsd6RMkjVDRZzb",
          "converting": false,
          "publishing": false,
          "html_snippet": "<div id='audio-native-player'></div>"
        },
        "required": [
          "project_id",
          "converting",
          "publishing",
          "html_snippet"
        ],
        "title": "AudioNativeEditContentResponseModel"
      },
      "AudioNativeProjectSettingsResponseModel": {
        "type": "object",
        "properties": {
          "title": {
            "description": "The title of the project.",
            "type": "string",
            "title": "Title"
          },
          "image": {
            "description": "The image of the project.",
            "type": "string",
            "title": "Image"
          },
          "author": {
            "description": "The author of the project.",
            "type": "string",
            "title": "Author"
          },
          "small": {
            "description": "Whether the project is small.",
            "type": "boolean",
            "title": "Small"
          },
          "text_color": {
            "description": "The text color of the project.",
            "type": "string",
            "title": "Text Color"
          },
          "background_color": {
            "description": "The background color of the project.",
            "type": "string",
            "title": "Background Color"
          },
          "sessionization": {
            "description": "The sessionization of the project. Specifies for how many minutes to persist the session across page reloads.",
            "type": "integer",
            "title": "Sessionization"
          },
          "audio_path": {
            "description": "The path of the audio file.",
            "type": "string",
            "title": "Audio Path"
          },
          "audio_url": {
            "description": "The URL of the audio file.",
            "type": "string",
            "title": "Audio Url"
          }
        },
        "example": {
          "title": "My Project",
          "image": "https://example.com/image.jpg",
          "author": "John Doe",
          "small": false,
          "text_color": "#000000",
          "background_color": "#FFFFFF",
          "sessionization": 1,
          "audio_path": "audio/my_project.mp3",
          "audio_url": "https://example.com/audio/my_project.mp3"
        },
        "required": [
          "title",
          "image",
          "author",
          "small",
          "text_color",
          "background_color",
          "sessionization"
        ],
        "title": "AudioNativeProjectSettingsResponseModel"
      },
      "AudioWithTimestampsResponseModel": {
        "type": "object",
        "properties": {
          "audio_base64": {
            "description": "Base64 encoded audio data",
            "type": "string",
            "title": "Audio Base64"
          },
          "alignment": {
            "description": "Timestamp information for each character in the original text",
            "allOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              }
            ],
            "title": "Alignment"
          },
          "normalized_alignment": {
            "description": "Timestamp information for each character in the normalized text",
            "allOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              }
            ],
            "title": "Normalized Alignment"
          }
        },
        "example": {
          "audio_base64": "base64_encoded_audio_string",
          "alignment": {
            "characters": [
              "H",
              "e",
              "l",
              "l",
              "o"
            ],
            "character_start_times_seconds": [
              0,
              0.1,
              0.2,
              0.3,
              0.4
            ],
            "character_end_times_seconds": [
              0.1,
              0.2,
              0.3,
              0.4,
              0.5
            ]
          },
          "normalized_alignment": {
            "characters": [
              "H",
              "e",
              "l",
              "l",
              "o"
            ],
            "character_start_times_seconds": [
              0,
              0.1,
              0.2,
              0.3,
              0.4
            ],
            "character_end_times_seconds": [
              0.1,
              0.2,
              0.3,
              0.4,
              0.5
            ]
          }
        },
        "required": [
          "audio_base64"
        ],
        "title": "AudioWithTimestampsResponseModel"
      },
      "AuthSettings": {
        "type": "object",
        "properties": {
          "enable_auth": {
            "type": "boolean",
            "default": false,
            "title": "Enable Auth"
          },
          "allowlist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AllowlistItem"
            },
            "title": "Allowlist"
          },
          "shareable_token": {
            "type": "string",
            "title": "Shareable Token"
          }
        },
        "title": "AuthSettings"
      },
      "AuthorizationMethod": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "public",
          "authorization_header",
          "signed_url",
          "shareable_link"
        ],
        "title": "AuthorizationMethod"
      },
      "BanReasonType": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "safety",
          "manual"
        ],
        "title": "BanReasonType"
      },
      "Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post": {
        "type": "object",
        "properties": {
          "language": {
            "description": "The Target language.",
            "type": "string",
            "title": "Language"
          }
        },
        "required": [
          "language"
        ],
        "title": "Body_Add_a_language_to_the_resource_v1_dubbing_resource__dubbing_id__language_post"
      },
      "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the pronunciation dictionary, used for identification only.",
            "type": "string",
            "examples": [
              "My Dictionary"
            ],
            "title": "Name"
          },
          "file": {
            "description": "A lexicon .pls file which we will use to initialize the project with.",
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "description": {
            "description": "A description of the pronunciation dictionary, used for identification only.",
            "type": "string",
            "examples": [
              "Contains pronunciation's of our character names"
            ],
            "title": "Description"
          },
          "workspace_access": {
            "description": "Should be one of 'admin', 'editor' or 'viewer'. If not provided, defaults to no access.",
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "examples": [
              "viewer"
            ],
            "title": "Workspace Access"
          }
        },
        "required": [
          "name"
        ],
        "title": "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post"
      },
      "Body_Add_a_secret_to_the_Agent_which_can_be_referenced_in_tool_calls_v1_convai_agents__agent_id__add_secret_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "A name to help identify a particular agent secret",
            "type": "string",
            "examples": [
              "MY API KEY"
            ],
            "title": "Name"
          },
          "secret_value": {
            "description": "A value to be encrypted and used by the agent",
            "type": "string",
            "examples": [
              "sk_api_12354abc"
            ],
            "title": "Secret Value"
          }
        },
        "required": [
          "name",
          "secret_value"
        ],
        "title": "Body_Add_a_secret_to_the_Agent_which_can_be_referenced_in_tool_calls_v1_convai_agents__agent_id__add_secret_post"
      },
      "Body_Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the chapter, used for identification only.",
            "type": "string",
            "examples": [
              "Chapter 1"
            ],
            "title": "Name"
          },
          "from_url": {
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "type": "string",
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ],
            "title": "From Url"
          }
        },
        "required": [
          "name"
        ],
        "title": "Body_Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post"
      },
      "Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post": {
        "type": "object",
        "properties": {
          "email": {
            "description": "The email of the target workspace member.",
            "type": "string",
            "title": "Email"
          }
        },
        "required": [
          "email"
        ],
        "title": "Body_Add_member_to_user_group_v1_workspace_groups__group_id__members_post"
      },
      "Body_Add_project_v1_projects_add_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Studio project, used for identification only.",
            "type": "string",
            "examples": [
              "Project 1"
            ],
            "title": "Name"
          },
          "default_title_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new titles.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Paragraph Voice Id"
          },
          "default_model_id": {
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Model Id"
          },
          "from_url": {
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "type": "string",
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ],
            "title": "From Url"
          },
          "from_document": {
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' must be null.  If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "type": "string",
            "format": "binary",
            "title": "From Document"
          },
          "quality_preset": {
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "type": "string",
            "default": "standard",
            "examples": [
              "standard"
            ],
            "title": "Quality of the generated audio."
          },
          "title": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "type": "string",
            "examples": [
              "Romeo and Juliet"
            ],
            "title": "Title"
          },
          "author": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "type": "string",
            "examples": [
              "William Shakespeare"
            ],
            "title": "Author"
          },
          "description": {
            "description": "An optional description of the Studio project.",
            "type": "string",
            "examples": [
              "A tragic love story between two young lovers."
            ],
            "title": "Description"
          },
          "genres": {
            "description": "An optional list of genres associated with the Studio project.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "Romance",
                "Drama"
              ]
            ],
            "title": "Genres"
          },
          "target_audience": {
            "description": "An optional target audience of the Studio project.",
            "type": "string",
            "enum": [
              "children",
              "young adult",
              "adult",
              "all ages"
            ],
            "examples": [
              "adult"
            ],
            "title": "Target Audience"
          },
          "language": {
            "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
            "type": "string",
            "examples": [
              "en"
            ],
            "maxLength": 2,
            "minLength": 2,
            "title": "Language"
          },
          "content_type": {
            "description": "An optional content type of the Studio project.",
            "type": "string",
            "examples": [
              "Book"
            ],
            "title": "Content Type"
          },
          "original_publication_date": {
            "description": "An optional original publication date of the Studio project, in the format YYYY-MM-DD or YYYY.",
            "type": "string",
            "examples": [
              "1597-01-01"
            ],
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^\\d{4}$",
            "title": "Original Publication Date"
          },
          "mature_content": {
            "description": "An optional specification of whether this Studio project contains mature content.",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Mature Content"
          },
          "isbn_number": {
            "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "type": "string",
            "examples": [
              "0-306-40615-2"
            ],
            "title": "Isbn Number"
          },
          "acx_volume_normalization": {
            "description": "[Deprecated] When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Acx Volume Normalization"
          },
          "volume_normalization": {
            "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Volume Normalization"
          },
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "{\"pronunciation_dictionary_id\": \"test\", \"version_id\": \"id2\"}"
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "callback_url": {
            "description": "A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion",
            "type": "string",
            "examples": [
              [
                "https://www.test.com/my-api/projects-status"
              ]
            ],
            "title": "Callback Url"
          },
          "fiction": {
            "description": "An optional specification of whether the content of this Studio project is fiction.",
            "type": "string",
            "enum": [
              "fiction",
              "non-fiction"
            ],
            "examples": [
              "fiction"
            ],
            "title": "Fiction"
          },
          "apply_text_normalization": {
            "description": "\n    This parameter controls text normalization with four modes: 'auto', 'on', 'apply_english' and 'off'.\n    When set to 'auto', the system will automatically decide whether to apply text normalization\n    (e.g., spelling out numbers). With 'on', text normalization will always be applied, while\n    with 'off', it will be skipped. 'apply_english' is the same as 'on' but will assume that text is in English.\n    ",
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off",
              "apply_english"
            ],
            "title": "Apply Text Normalization"
          },
          "auto_convert": {
            "description": "Whether to auto convert the Studio project to audio or not.",
            "type": "boolean",
            "default": false,
            "title": "Auto Convert"
          },
          "auto_assign_voices": {
            "description": "[Alpha Feature] Whether automatically assign voices to phrases in the create Project.",
            "type": "boolean",
            "default": false,
            "title": "Auto Assign Voices"
          }
        },
        "required": [
          "name",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id"
        ],
        "title": "Body_Add_project_v1_projects_add_post"
      },
      "Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post": {
        "type": "object",
        "properties": {
          "rules": {
            "description": "List of pronunciation rules. Rule can be either:\n    an alias rule: {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b', }\n    or a phoneme rule: {'string_to_replace': 'a', 'type': 'phoneme', 'phoneme': 'b', 'alphabet': 'ipa' }",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryAliasRuleRequestModel"
                },
                {
                  "$ref": "#/components/schemas/PronunciationDictionaryPhonemeRuleRequestModel"
                }
              ]
            },
            "examples": [
              "\n    [\n        {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b' },\n        {'string_to_replace': 'c', 'type': 'phoneme', 'phoneme': 'd', 'alphabet': 'ipa' }\n    ]"
            ],
            "title": "Rules"
          }
        },
        "required": [
          "rules"
        ],
        "title": "Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post"
      },
      "Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post": {
        "type": "object",
        "properties": {
          "new_name": {
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "type": "string",
            "examples": [
              "Joe Rogan"
            ],
            "title": "New Name"
          }
        },
        "required": [
          "new_name"
        ],
        "title": "Body_Add_shared_voice_v1_voices_add__public_user_id___voice_id__post"
      },
      "Body_Add_to_knowledge_base_v1_convai_add_to_knowledge_base_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "A custom, human-readable name for the document.",
            "type": "string",
            "title": "Name"
          },
          "url": {
            "description": "URL to a page of documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "title": "Url"
          },
          "file": {
            "description": "Documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "title": "Body_Add_to_knowledge_base_v1_convai_add_to_knowledge_base_post"
      },
      "Body_Add_to_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "A custom, human-readable name for the document.",
            "type": "string",
            "title": "Name"
          },
          "url": {
            "description": "URL to a page of documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "title": "Url"
          },
          "file": {
            "description": "Documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "title": "Body_Add_to_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post"
      },
      "Body_Add_to_knowledge_base_v1_convai_knowledge_base_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "A custom, human-readable name for the document.",
            "type": "string",
            "title": "Name"
          },
          "url": {
            "description": "URL to a page of documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "title": "Url"
          },
          "file": {
            "description": "Documentation that the agent will have access to in order to interact with users.",
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "title": "Body_Add_to_knowledge_base_v1_convai_knowledge_base_post"
      },
      "Body_Add_voice_v1_voices_add_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "type": "string",
            "examples": [
              "Joe Rogan"
            ],
            "title": "Name"
          },
          "files": {
            "description": "A list of file paths to audio recordings intended for voice cloning.",
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "title": "Files"
          },
          "remove_background_noise": {
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Remove Background Noise"
          },
          "description": {
            "description": "A description of the voice.",
            "type": "string",
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ],
            "title": "Description"
          },
          "labels": {
            "description": "Serialized labels dictionary for the voice.",
            "type": "string",
            "title": "Labels"
          }
        },
        "required": [
          "name",
          "files"
        ],
        "title": "Body_Add_voice_v1_voices_add_post"
      },
      "Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post": {
        "type": "object",
        "properties": {
          "audio": {
            "description": "The audio file from which vocals/speech will be isolated from.",
            "type": "string",
            "format": "binary",
            "title": "Audio"
          }
        },
        "required": [
          "audio"
        ],
        "title": "Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post"
      },
      "Body_Audio_Isolation_v1_audio_isolation_post": {
        "type": "object",
        "properties": {
          "audio": {
            "description": "The audio file from which vocals/speech will be isolated from.",
            "type": "string",
            "format": "binary",
            "title": "Audio"
          }
        },
        "required": [
          "audio"
        ],
        "title": "Body_Audio_Isolation_v1_audio_isolation_post"
      },
      "Body_Create_Agent_v1_convai_agents_create_post": {
        "type": "object",
        "properties": {
          "conversation_config": {
            "description": "Conversation configuration for an agent",
            "allOf": [
              {
                "$ref": "#/components/schemas/ConversationalConfigAPIModel"
              }
            ],
            "title": "Conversation Config"
          },
          "platform_settings": {
            "description": "Platform settings for the agent are all settings that aren't related to the conversation orchestration and content.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AgentPlatformSettingsRequestModel"
              }
            ],
            "title": "Platform Settings"
          },
          "name": {
            "description": "A name to make the agent easier to find",
            "type": "string",
            "examples": [
              "My agent"
            ],
            "optional": true,
            "title": "Name"
          }
        },
        "required": [
          "conversation_config"
        ],
        "title": "Body_Create_Agent_v1_convai_agents_create_post"
      },
      "Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post": {
        "type": "object",
        "properties": {
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
            },
            "examples": [
              [
                "{\"pronunciation_dictionary_id\": \"test\", \"version_id\": \"id2\"}"
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "invalidate_affected_text": {
            "description": "This will automatically mark text in this project for reconversion when the new dictionary applies or the old one no longer does.",
            "type": "boolean",
            "default": true,
            "examples": [
              false
            ],
            "title": "Invalidate Affected Text"
          }
        },
        "required": [
          "pronunciation_dictionary_locators"
        ],
        "title": "Body_Create_Pronunciation_Dictionaries_v1_studio_projects__project_id__pronunciation_dictionaries_post"
      },
      "Body_Create_Studio_project_v1_studio_projects_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Studio project, used for identification only.",
            "type": "string",
            "examples": [
              "Project 1"
            ],
            "title": "Name"
          },
          "default_title_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new titles.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Paragraph Voice Id"
          },
          "default_model_id": {
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Model Id"
          },
          "from_url": {
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "type": "string",
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ],
            "title": "From Url"
          },
          "from_document": {
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' must be null.  If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "type": "string",
            "format": "binary",
            "title": "From Document"
          },
          "quality_preset": {
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "type": "string",
            "default": "standard",
            "examples": [
              "standard"
            ],
            "title": "Quality of the generated audio."
          },
          "title": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "type": "string",
            "examples": [
              "Romeo and Juliet"
            ],
            "title": "Title"
          },
          "author": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "type": "string",
            "examples": [
              "William Shakespeare"
            ],
            "title": "Author"
          },
          "description": {
            "description": "An optional description of the Studio project.",
            "type": "string",
            "examples": [
              "A tragic love story between two young lovers."
            ],
            "title": "Description"
          },
          "genres": {
            "description": "An optional list of genres associated with the Studio project.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "Romance",
                "Drama"
              ]
            ],
            "title": "Genres"
          },
          "target_audience": {
            "description": "An optional target audience of the Studio project.",
            "type": "string",
            "enum": [
              "children",
              "young adult",
              "adult",
              "all ages"
            ],
            "examples": [
              "adult"
            ],
            "title": "Target Audience"
          },
          "language": {
            "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
            "type": "string",
            "examples": [
              "en"
            ],
            "maxLength": 2,
            "minLength": 2,
            "title": "Language"
          },
          "content_type": {
            "description": "An optional content type of the Studio project.",
            "type": "string",
            "examples": [
              "Book"
            ],
            "title": "Content Type"
          },
          "original_publication_date": {
            "description": "An optional original publication date of the Studio project, in the format YYYY-MM-DD or YYYY.",
            "type": "string",
            "examples": [
              "1597-01-01"
            ],
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^\\d{4}$",
            "title": "Original Publication Date"
          },
          "mature_content": {
            "description": "An optional specification of whether this Studio project contains mature content.",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Mature Content"
          },
          "isbn_number": {
            "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "type": "string",
            "examples": [
              "0-306-40615-2"
            ],
            "title": "Isbn Number"
          },
          "acx_volume_normalization": {
            "description": "[Deprecated] When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Acx Volume Normalization"
          },
          "volume_normalization": {
            "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Volume Normalization"
          },
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "{\"pronunciation_dictionary_id\": \"test\", \"version_id\": \"id2\"}"
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "callback_url": {
            "description": "A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion",
            "type": "string",
            "examples": [
              [
                "https://www.test.com/my-api/projects-status"
              ]
            ],
            "title": "Callback Url"
          },
          "fiction": {
            "description": "An optional specification of whether the content of this Studio project is fiction.",
            "type": "string",
            "enum": [
              "fiction",
              "non-fiction"
            ],
            "examples": [
              "fiction"
            ],
            "title": "Fiction"
          },
          "apply_text_normalization": {
            "description": "\n    This parameter controls text normalization with four modes: 'auto', 'on', 'apply_english' and 'off'.\n    When set to 'auto', the system will automatically decide whether to apply text normalization\n    (e.g., spelling out numbers). With 'on', text normalization will always be applied, while\n    with 'off', it will be skipped. 'apply_english' is the same as 'on' but will assume that text is in English.\n    ",
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off",
              "apply_english"
            ],
            "title": "Apply Text Normalization"
          },
          "auto_convert": {
            "description": "Whether to auto convert the Studio project to audio or not.",
            "type": "boolean",
            "default": false,
            "title": "Auto Convert"
          },
          "auto_assign_voices": {
            "description": "[Alpha Feature] Whether automatically assign voices to phrases in the create Project.",
            "type": "boolean",
            "default": false,
            "title": "Auto Assign Voices"
          }
        },
        "required": [
          "name",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id"
        ],
        "title": "Body_Create_Studio_project_v1_studio_projects_post"
      },
      "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post": {
        "type": "object",
        "properties": {
          "voice_name": {
            "description": "Name to use for the created voice.",
            "type": "string",
            "examples": [
              "Sassy squeaky mouse"
            ],
            "title": "Voice Name"
          },
          "voice_description": {
            "description": "Description to use for the created voice.",
            "type": "string",
            "examples": [
              "A sassy squeaky mouse"
            ],
            "maxLength": 1000,
            "minLength": 20,
            "title": "Voice Description"
          },
          "generated_voice_id": {
            "description": "The generated_voice_id to create, call POST /v1/text-to-voice/create-previews and fetch the generated_voice_id from the response header if don't have one yet.",
            "type": "string",
            "examples": [
              "37HceQefKmEi3bGovXjL"
            ],
            "title": "Generated Voice Id"
          },
          "labels": {
            "description": "Optional, metadata to add to the created voice. Defaults to None.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "examples": [
              {
                "language": "en"
              }
            ],
            "name": "Voice metadata",
            "title": "Labels"
          },
          "played_not_selected_voice_ids": {
            "description": "List of voice ids that the user has played but not selected. Used for RLHF.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Played Not Selected Voice Ids"
          }
        },
        "required": [
          "voice_name",
          "voice_description",
          "generated_voice_id"
        ],
        "title": "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post"
      },
      "Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post": {
        "type": "object",
        "properties": {
          "voice_name": {
            "description": "Name to use for the created voice.",
            "type": "string",
            "examples": [
              "Sassy squeaky mouse"
            ],
            "title": "Voice Name"
          },
          "voice_description": {
            "description": "Description to use for the created voice.",
            "type": "string",
            "examples": [
              "A sassy squeaky mouse"
            ],
            "title": "Voice Description"
          },
          "generated_voice_id": {
            "description": "The generated_voice_id to create, call POST /v1/text-to-voice/create-previews and fetch the generated_voice_id from the response header if don't have one yet.",
            "type": "string",
            "examples": [
              "37HceQefKmEi3bGovXjL"
            ],
            "title": "Generated Voice Id"
          },
          "played_not_selected_voice_ids": {
            "description": "List of voice ids that the user has played but not selected. Used for RLHF.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "title": "Played Not Selected Voice Ids"
          },
          "labels": {
            "description": "Optional, metadata to add to the created voice. Defaults to None.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "examples": [
              {
                "language": "en"
              }
            ],
            "name": "Voice metadata",
            "title": "Labels"
          }
        },
        "required": [
          "voice_name",
          "voice_description",
          "generated_voice_id"
        ],
        "title": "Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post"
      },
      "Body_Create_chapter_v1_studio_projects__project_id__chapters_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the chapter, used for identification only.",
            "type": "string",
            "examples": [
              "Chapter 1"
            ],
            "title": "Name"
          },
          "from_url": {
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "type": "string",
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ],
            "title": "From Url"
          }
        },
        "required": [
          "name"
        ],
        "title": "Body_Create_chapter_v1_studio_projects__project_id__chapters_post"
      },
      "Body_Create_podcast_v1_projects_podcast_create_post": {
        "type": "object",
        "properties": {
          "model_id": {
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Model Id"
          },
          "mode": {
            "description": "The type of podcast to generate. Can be 'conversation', an interaction between two voices, or 'bulletin', a monologue.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/PodcastConversationMode"
              },
              {
                "$ref": "#/components/schemas/PodcastBulletinMode"
              }
            ],
            "examples": [
              {
                "type": "conversation",
                "conversation": {
                  "host_voice_id": "6lCwbsX1yVjD49QmpkTR",
                  "guest_voice_id": "bYTqZQo3Jz7LQtmGTgwi"
                }
              }
            ],
            "title": "Mode"
          },
          "source": {
            "description": "The source content for the Podcast.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/PodcastTextSource"
              },
              {
                "$ref": "#/components/schemas/PodcastURLSource"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PodcastTextSource"
                    },
                    {
                      "$ref": "#/components/schemas/PodcastURLSource"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "examples": [
              {
                "type": "url",
                "url": "https://en.wikipedia.org/wiki/Cognitive_science"
              }
            ],
            "title": "Source"
          },
          "quality_preset": {
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "type": "string",
            "default": "standard",
            "enum": [
              "standard",
              "high",
              "highest",
              "ultra",
              "ultra_lossless"
            ],
            "examples": [
              "standard"
            ],
            "title": "Quality of the generated audio."
          },
          "duration_scale": {
            "description": "Duration of the generated podcast. Must be one of:\nshort - produces podcasts shorter than 3 minutes.\ndefault - produces podcasts roughly between 3-7 minutes.\nlong - prodces podcasts longer than 7 minutes.\n",
            "type": "string",
            "default": "default",
            "enum": [
              "short",
              "default",
              "long"
            ],
            "examples": [
              "short"
            ],
            "title": "The duration of the generated podcast. This varies depending on the format, voice and language."
          },
          "language": {
            "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
            "type": "string",
            "examples": [
              "en"
            ],
            "maxLength": 2,
            "minLength": 2,
            "title": "Language"
          },
          "highlights": {
            "description": "A brief summary or highlights of the Studio project's content, providing key points or themes. This should be between 10 and 70 characters.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 70,
              "minLength": 10
            },
            "default": [],
            "examples": [
              [
                "Emphasize the importance of AI on education"
              ]
            ],
            "maxLength": 70,
            "minLength": 10,
            "title": "Highlights"
          },
          "callback_url": {
            "description": "A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion",
            "type": "string",
            "examples": [
              [
                "https://www.test.com/my-api/projects-status"
              ]
            ],
            "title": "Callback Url"
          }
        },
        "required": [
          "model_id",
          "mode",
          "source"
        ],
        "title": "Body_Create_podcast_v1_projects_podcast_create_post"
      },
      "Body_Create_podcast_v1_studio_podcasts_post": {
        "type": "object",
        "properties": {
          "model_id": {
            "description": "The ID of the model to be used for this Studio project, you can query GET /v1/models to list all available models.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Model Id"
          },
          "mode": {
            "description": "The type of podcast to generate. Can be 'conversation', an interaction between two voices, or 'bulletin', a monologue.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/PodcastConversationMode"
              },
              {
                "$ref": "#/components/schemas/PodcastBulletinMode"
              }
            ],
            "examples": [
              {
                "type": "conversation",
                "conversation": {
                  "host_voice_id": "6lCwbsX1yVjD49QmpkTR",
                  "guest_voice_id": "bYTqZQo3Jz7LQtmGTgwi"
                }
              }
            ],
            "title": "Mode"
          },
          "source": {
            "description": "The source content for the Podcast.",
            "anyOf": [
              {
                "$ref": "#/components/schemas/PodcastTextSource"
              },
              {
                "$ref": "#/components/schemas/PodcastURLSource"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PodcastTextSource"
                    },
                    {
                      "$ref": "#/components/schemas/PodcastURLSource"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "examples": [
              {
                "type": "url",
                "url": "https://en.wikipedia.org/wiki/Cognitive_science"
              }
            ],
            "title": "Source"
          },
          "quality_preset": {
            "description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
            "type": "string",
            "default": "standard",
            "enum": [
              "standard",
              "high",
              "highest",
              "ultra",
              "ultra_lossless"
            ],
            "examples": [
              "standard"
            ],
            "title": "Quality of the generated audio."
          },
          "duration_scale": {
            "description": "Duration of the generated podcast. Must be one of:\nshort - produces podcasts shorter than 3 minutes.\ndefault - produces podcasts roughly between 3-7 minutes.\nlong - prodces podcasts longer than 7 minutes.\n",
            "type": "string",
            "default": "default",
            "enum": [
              "short",
              "default",
              "long"
            ],
            "examples": [
              "short"
            ],
            "title": "The duration of the generated podcast. This varies depending on the format, voice and language."
          },
          "language": {
            "description": "An optional language of the Studio project. Two-letter language code (ISO 639-1).",
            "type": "string",
            "examples": [
              "en"
            ],
            "maxLength": 2,
            "minLength": 2,
            "title": "Language"
          },
          "highlights": {
            "description": "A brief summary or highlights of the Studio project's content, providing key points or themes. This should be between 10 and 70 characters.",
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 70,
              "minLength": 10
            },
            "default": [],
            "examples": [
              [
                "Emphasize the importance of AI on education"
              ]
            ],
            "maxLength": 70,
            "minLength": 10,
            "title": "Highlights"
          },
          "callback_url": {
            "description": "A url that will be called by our service when the Studio project is converted. Request will contain a json blob containing the status of the conversion",
            "type": "string",
            "examples": [
              [
                "https://www.test.com/my-api/projects-status"
              ]
            ],
            "title": "Callback Url"
          }
        },
        "required": [
          "model_id",
          "mode",
          "source"
        ],
        "title": "Body_Create_podcast_v1_studio_podcasts_post"
      },
      "Body_Creates_Audio_Native_enabled_project__v1_audio_native_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Project name.",
            "type": "string",
            "title": "Name"
          },
          "image": {
            "description": "(Deprecated) Image URL used in the player. If not provided, default image set in the Player settings is used.",
            "type": "string",
            "title": "Image"
          },
          "author": {
            "description": "Author used in the player and inserted at the start of the uploaded article. If not provided, the default author set in the Player settings is used.",
            "type": "string",
            "title": "Author"
          },
          "title": {
            "description": "Title used in the player and inserted at the top of the uploaded article. If not provided, the default title set in the Player settings is used.",
            "type": "string",
            "title": "Title"
          },
          "small": {
            "description": "(Deprecated) Whether to use small player or not. If not provided, default value set in the Player settings is used.",
            "type": "boolean",
            "default": false,
            "title": "Small"
          },
          "text_color": {
            "description": "Text color used in the player. If not provided, default text color set in the Player settings is used.",
            "type": "string",
            "title": "Text Color"
          },
          "background_color": {
            "description": "Background color used in the player. If not provided, default background color set in the Player settings is used.",
            "type": "string",
            "title": "Background Color"
          },
          "sessionization": {
            "description": "(Deprecated) Specifies for how many minutes to persist the session across page reloads. If not provided, default sessionization set in the Player settings is used.",
            "type": "integer",
            "default": 0,
            "title": "Sessionization"
          },
          "voice_id": {
            "description": "Voice ID used to voice the content. If not provided, default voice ID set in the Player settings is used.",
            "type": "string",
            "title": "Voice Id"
          },
          "model_id": {
            "description": "TTS Model ID used in the player. If not provided, default model ID set in the Player settings is used.",
            "type": "string",
            "title": "Model Id"
          },
          "file": {
            "description": "Either txt or HTML input file containing the article content. HTML should be formatted as follows '&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;Your content&lt;/p&gt;&lt;h5&gt;More of your content&lt;/h5&gt;&lt;p&gt;Some more of your content&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'",
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "auto_convert": {
            "description": "Whether to auto convert the project to audio or not.",
            "type": "boolean",
            "default": false,
            "title": "Auto Convert"
          }
        },
        "required": [
          "name"
        ],
        "title": "Body_Creates_Audio_Native_enabled_project__v1_audio_native_post"
      },
      "Body_Delete_existing_invitation_v1_workspace_invites_delete": {
        "type": "object",
        "properties": {
          "email": {
            "description": "The email of the customer",
            "type": "string",
            "examples": [
              "john.doe@testmail.com"
            ],
            "title": "Email"
          }
        },
        "required": [
          "email"
        ],
        "title": "Body_Delete_existing_invitation_v1_workspace_invites_delete"
      },
      "Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post": {
        "type": "object",
        "properties": {
          "email": {
            "description": "The email of the target workspace member.",
            "type": "string",
            "title": "Email"
          }
        },
        "required": [
          "email"
        ],
        "title": "Body_Delete_member_from_user_group_v1_workspace_groups__group_id__members_remove_post"
      },
      "Body_Download_history_items_v1_history_download_post": {
        "type": "object",
        "properties": {
          "history_item_ids": {
            "description": "A list of history items to download, you can get IDs of history items and other metadata using the GET https://api.elevenlabs.io/v1/history endpoint.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "History Item Ids"
          },
          "output_format": {
            "description": "Output format to transcode the audio file, can be wav or default.",
            "type": "string",
            "title": "Output Format"
          }
        },
        "required": [
          "history_item_ids"
        ],
        "title": "Body_Download_history_items_v1_history_download_post"
      },
      "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post": {
        "type": "object",
        "properties": {
          "file": {
            "description": "A list of file paths to audio recordings intended for voice cloning",
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "name": {
            "description": "Name of the dubbing project.",
            "type": "string",
            "title": "Name"
          },
          "source_url": {
            "description": "URL of the source video/audio file.",
            "type": "string",
            "title": "Source Url"
          },
          "source_lang": {
            "description": "Source language.",
            "type": "string",
            "default": "auto",
            "title": "Source Lang"
          },
          "target_lang": {
            "description": "The Target language to dub the content into.",
            "type": "string",
            "title": "Target Lang"
          },
          "num_speakers": {
            "description": "Number of speakers to use for the dubbing. Set to 0 to automatically detect the number of speakers",
            "type": "integer",
            "default": 0,
            "title": "Num Speakers"
          },
          "watermark": {
            "description": "Whether to apply watermark to the output video.",
            "type": "boolean",
            "default": false,
            "title": "Watermark"
          },
          "start_time": {
            "description": "Start time of the source video/audio file.",
            "type": "integer",
            "title": "Start Time"
          },
          "end_time": {
            "description": "End time of the source video/audio file.",
            "type": "integer",
            "title": "End Time"
          },
          "highest_resolution": {
            "description": "Whether to use the highest resolution available.",
            "type": "boolean",
            "default": false,
            "title": "Highest Resolution"
          },
          "drop_background_audio": {
            "description": "An advanced setting. Whether to drop background audio from the final dub. This can improve dub quality where it's known that audio shouldn't have a background track such as for speeches or monologues.",
            "type": "boolean",
            "default": false,
            "title": "Drop Background Audio"
          },
          "use_profanity_filter": {
            "description": "[BETA] Whether transcripts should have profanities censored with the words '[censored]'",
            "type": "boolean",
            "title": "Use Profanity Filter"
          },
          "dubbing_studio": {
            "description": "Whether to prepare dub for edits in dubbing studio or edits as a dubbing resource.",
            "type": "boolean",
            "default": false,
            "title": "Dubbing Studio"
          }
        },
        "title": "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post"
      },
      "Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post": {
        "type": "object",
        "properties": {
          "segments": {
            "description": "Dub only this list of segments.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Segments"
          },
          "languages": {
            "description": "Dub only these languages for each segment.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Languages"
          }
        },
        "required": [
          "segments",
          "languages"
        ],
        "title": "Body_Dubs_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__dub_post"
      },
      "Body_Edit_basic_project_info_v1_projects__project_id__post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Studio project, used for identification only.",
            "type": "string",
            "examples": [
              "Project 1"
            ],
            "title": "Name"
          },
          "default_title_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new titles.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Paragraph Voice Id"
          },
          "title": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "type": "string",
            "examples": [
              "Romeo and Juliet"
            ],
            "title": "Title"
          },
          "author": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "type": "string",
            "examples": [
              "William Shakespeare"
            ],
            "title": "Author"
          },
          "isbn_number": {
            "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "type": "string",
            "examples": [
              "0-306-40615-2"
            ],
            "title": "Isbn Number"
          },
          "volume_normalization": {
            "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Volume Normalization"
          }
        },
        "required": [
          "name",
          "default_title_voice_id",
          "default_paragraph_voice_id"
        ],
        "title": "Body_Edit_basic_project_info_v1_projects__project_id__post"
      },
      "Body_Edit_chapter_v1_projects__project_id__chapters__chapter_id__patch": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the chapter, used for identification only.",
            "type": "string",
            "examples": [
              "Chapter 1"
            ],
            "title": "Name"
          },
          "content": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChapterContentInputModel"
              }
            ],
            "description": "The chapter content to use.",
            "title": "Content"
          }
        },
        "title": "Body_Edit_chapter_v1_projects__project_id__chapters__chapter_id__patch"
      },
      "Body_Edit_project_content_v1_projects__project_id__content_post": {
        "type": "object",
        "properties": {
          "from_url": {
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "type": "string",
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ],
            "title": "From Url"
          },
          "from_document": {
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' must be null.  If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "type": "string",
            "format": "binary",
            "title": "From Document"
          },
          "auto_convert": {
            "description": "Whether to auto convert the Studio project to audio or not.",
            "type": "boolean",
            "default": false,
            "title": "Auto Convert"
          }
        },
        "title": "Body_Edit_project_content_v1_projects__project_id__content_post"
      },
      "Body_Edit_voice_v1_voices__voice_id__edit_post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name that identifies this voice. This will be displayed in the dropdown of the website.",
            "type": "string",
            "examples": [
              "Joe Rogan"
            ],
            "title": "Name"
          },
          "files": {
            "description": "Audio files to add to the voice",
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "title": "Files"
          },
          "remove_background_noise": {
            "description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Remove Background Noise"
          },
          "description": {
            "description": "A description of the voice.",
            "type": "string",
            "examples": [
              "An old American male voice with a slight hoarseness in his throat. Perfect for news."
            ],
            "title": "Description"
          },
          "labels": {
            "description": "Serialized labels dictionary for the voice.",
            "type": "string",
            "title": "Labels"
          }
        },
        "required": [
          "name"
        ],
        "title": "Body_Edit_voice_v1_voices__voice_id__edit_post"
      },
      "Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post": {
        "type": "object",
        "properties": {
          "gender": {
            "description": "Category code corresponding to the gender of the generated voice. Possible values: female, male.",
            "type": "string",
            "enum": [
              "female",
              "male"
            ],
            "examples": [
              "female"
            ],
            "title": "Gender"
          },
          "accent": {
            "description": "Category code corresponding to the accent of the generated voice. Possible values: british, american, african, australian, indian.",
            "type": "string",
            "examples": [
              "british"
            ],
            "title": "Accent"
          },
          "age": {
            "description": "Category code corresponding to the age of the generated voice. Possible values: young, middle_aged, old.",
            "type": "string",
            "enum": [
              "young",
              "middle_aged",
              "old"
            ],
            "examples": [
              "young"
            ],
            "title": "Age"
          },
          "accent_strength": {
            "description": "The strength of the accent of the generated voice. Has to be between 0.3 and 2.0.",
            "type": "number",
            "title": "Accent Strength"
          },
          "text": {
            "description": "Text to generate, text length has to be between 100 and 1000.",
            "type": "string",
            "examples": [
              "Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
            ],
            "maxLength": 1000,
            "minLength": 100,
            "title": "Text"
          }
        },
        "required": [
          "gender",
          "accent",
          "age",
          "accent_strength",
          "text"
        ],
        "title": "Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post"
      },
      "Body_Get_similar_library_voices_v1_similar_voices_post": {
        "type": "object",
        "properties": {
          "audio_file": {
            "type": "string",
            "format": "binary",
            "title": "Audio File"
          },
          "similarity_threshold": {
            "description": "Threshold for voice similarity between provided sample and library voices. Values range from 0 to 2. The smaller the value the more similar voices will be returned.",
            "type": "number",
            "examples": [
              0.5
            ],
            "title": "Similarity Threshold"
          },
          "top_k": {
            "description": "Number of most similar voices to return. If similarity_threshold is provided, less than this number of voices may be returned. Values range from 1 to 100.",
            "type": "integer",
            "examples": [
              10
            ],
            "title": "Top K"
          }
        },
        "title": "Body_Get_similar_library_voices_v1_similar_voices_post"
      },
      "Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post": {
        "type": "object",
        "properties": {
          "emails": {
            "description": "The email of the customer",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              "john.doe@testmail.com"
            ],
            "title": "Emails"
          },
          "group_ids": {
            "description": "The group ids of the user",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "group_id_1",
                "group_id_2"
              ]
            ],
            "title": "Group Ids"
          }
        },
        "required": [
          "emails"
        ],
        "title": "Body_Invite_multiple_users_v1_workspace_invites_add_bulk_post"
      },
      "Body_Invite_user_v1_workspace_invites_add_post": {
        "type": "object",
        "properties": {
          "email": {
            "description": "The email of the customer",
            "type": "string",
            "examples": [
              "john.doe@testmail.com"
            ],
            "title": "Email"
          },
          "group_ids": {
            "description": "The group ids of the user",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "group_id_1",
                "group_id_2"
              ]
            ],
            "title": "Group Ids"
          }
        },
        "required": [
          "email"
        ],
        "title": "Body_Invite_user_v1_workspace_invites_add_post"
      },
      "Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch": {
        "type": "object",
        "properties": {
          "conversation_config": {
            "description": "Conversation configuration for an agent",
            "type": "object",
            "title": "Conversation Config"
          },
          "platform_settings": {
            "description": "Platform settings for the agent are all settings that aren't related to the conversation orchestration and content.",
            "type": "object",
            "title": "Platform Settings"
          },
          "name": {
            "description": "A name to make the agent easier to find",
            "type": "string",
            "examples": [
              "My agent"
            ],
            "optional": true,
            "title": "Name"
          }
        },
        "title": "Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch"
      },
      "Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post": {
        "type": "object",
        "properties": {
          "avatar_file": {
            "description": "An image file to be used as the agent's avatar.",
            "type": "string",
            "format": "binary",
            "title": "Avatar File"
          }
        },
        "required": [
          "avatar_file"
        ],
        "title": "Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post"
      },
      "Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post": {
        "type": "object",
        "properties": {
          "rule_strings": {
            "description": "List of strings to remove from the pronunciation dictionary.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "examples": [
              "['a', 'b']"
            ],
            "title": "Rule Strings"
          }
        },
        "required": [
          "rule_strings"
        ],
        "title": "Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post"
      },
      "Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post": {
        "type": "object",
        "properties": {
          "feedback": {
            "description": "Either 'like' or 'dislike' to indicate the feedback for the conversation.",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserFeedbackScore"
              }
            ],
            "examples": [
              "like"
            ]
          }
        },
        "required": [
          "feedback"
        ],
        "title": "Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post"
      },
      "Body_Sound_Generation_v1_sound_generation_post": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The text that will get converted into a sound effect.",
            "type": "string",
            "examples": [
              "A large, ancient wooden door slowly opening in an eerie, abandoned castle.."
            ],
            "title": "Text"
          },
          "duration_seconds": {
            "description": "The duration of the sound which will be generated in seconds. Must be at least 0.5 and at most 22. If set to None we will guess the optimal duration using the prompt. Defaults to None.",
            "type": "number",
            "title": "Duration Seconds"
          },
          "prompt_influence": {
            "description": "A higher prompt influence makes your generation follow the prompt more closely while also making generations less variable. Must be a value between 0 and 1. Defaults to 0.3.",
            "type": "number",
            "default": 0.3,
            "title": "Prompt Influence"
          }
        },
        "required": [
          "text"
        ],
        "title": "Body_Sound_Generation_v1_sound_generation_post"
      },
      "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post": {
        "type": "object",
        "properties": {
          "audio": {
            "description": "The audio file which holds the content and emotion that will control the generated speech.",
            "type": "string",
            "format": "binary",
            "title": "Audio"
          },
          "model_id": {
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
            "type": "string",
            "default": "eleven_english_sts_v2",
            "title": "Model Id"
          },
          "voice_settings": {
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string.",
            "type": "string",
            "title": "Voice Settings"
          },
          "seed": {
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "type": "integer",
            "examples": [
              12345
            ],
            "title": "Seed"
          },
          "remove_background_noise": {
            "description": "If set, will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Remove Background Noise"
          }
        },
        "required": [
          "audio"
        ],
        "title": "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post"
      },
      "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post": {
        "type": "object",
        "properties": {
          "audio": {
            "description": "The audio file which holds the content and emotion that will control the generated speech.",
            "type": "string",
            "format": "binary",
            "title": "Audio"
          },
          "model_id": {
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
            "type": "string",
            "default": "eleven_english_sts_v2",
            "title": "Model Id"
          },
          "voice_settings": {
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string.",
            "type": "string",
            "title": "Voice Settings"
          },
          "seed": {
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "type": "integer",
            "examples": [
              12345
            ],
            "title": "Seed"
          },
          "remove_background_noise": {
            "description": "If set, will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Remove Background Noise"
          }
        },
        "required": [
          "audio"
        ],
        "title": "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post"
      },
      "Body_Speech_to_Text_v1_speech_to_text_post": {
        "type": "object",
        "properties": {
          "model_id": {
            "description": "The ID of the model to use for transcription, currently only 'scribe_v1' is available.",
            "type": "string",
            "title": "Model Id"
          },
          "file": {
            "description": "The file to transcribe. All major audio and video formats are supported. The file size must be less than 1GB.",
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "language_code": {
            "description": "An ISO-639-1 or ISO-639-3 language_code corresponding to the language of the audio file. Can sometimes improve transcription performance if known beforehand. Defaults to null, in this case the language is predicted automatically.",
            "type": "string",
            "title": "Language Code"
          },
          "tag_audio_events": {
            "description": "Whether to tag audio events like (laughter), (footsteps), etc. in the transcription.",
            "type": "boolean",
            "default": true,
            "title": "Tag Audio Events"
          },
          "num_speakers": {
            "description": "The maximum amount of speakers talking in the uploaded file. Can help with predicting who speaks when. The maximum amount of speakers that can be predicted is 32. Defaults to null, in this case the amount of speakers is set to the maximum value the model supports.",
            "type": "integer",
            "maximum": 32,
            "minimum": 1,
            "title": "Num Speakers"
          },
          "timestamps_granularity": {
            "description": "The granularity of the timestamps in the transcription. 'word' provides word-level timestamps and 'character' provides character-level timestamps per word.",
            "type": "string",
            "default": "word",
            "enum": [
              "none",
              "word",
              "character"
            ],
            "title": "Timestamps Granularity"
          },
          "diarize": {
            "description": "Whether to annotate which speaker is currently talking in the uploaded file.",
            "type": "boolean",
            "default": false,
            "title": "Diarize"
          }
        },
        "required": [
          "model_id",
          "file"
        ],
        "title": "Body_Speech_to_Text_v1_speech_to_text_post"
      },
      "Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post": {
        "type": "object",
        "properties": {
          "convert_to_mpeg": {
            "description": "Whether to convert the audio to mpeg format.",
            "type": "boolean",
            "default": false,
            "title": "Convert To Mpeg"
          }
        },
        "title": "Body_Stream_Studio_project_audio_v1_studio_projects__project_id__snapshots__project_snapshot_id__stream_post"
      },
      "Body_Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post": {
        "type": "object",
        "properties": {
          "convert_to_mpeg": {
            "description": "Whether to convert the audio to mpeg format.",
            "type": "boolean",
            "default": false,
            "title": "Convert To Mpeg"
          }
        },
        "title": "Body_Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
      },
      "Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post": {
        "type": "object",
        "properties": {
          "convert_to_mpeg": {
            "description": "Whether to convert the audio to mpeg format.",
            "type": "boolean",
            "default": false,
            "title": "Convert To Mpeg"
          }
        },
        "title": "Body_Stream_chapter_audio_v1_studio_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
      },
      "Body_Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post": {
        "type": "object",
        "properties": {
          "convert_to_mpeg": {
            "description": "Whether to convert the audio to mpeg format.",
            "type": "boolean",
            "default": false,
            "title": "Convert To Mpeg"
          }
        },
        "title": "Body_Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post"
      },
      "Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The text that will get converted into speech.",
            "type": "string",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ],
            "title": "Text"
          },
          "model_id": {
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "type": "string",
            "default": "eleven_monolingual_v1",
            "title": "Model Id"
          },
          "language_code": {
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided.",
            "type": "string",
            "title": "Language Code"
          },
          "voice_settings": {
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              }
            ],
            "title": "Voice Settings"
          },
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
            },
            "default": [],
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "seed": {
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "type": "integer",
            "examples": [
              12345
            ],
            "title": "Seed"
          },
          "previous_text": {
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "type": "string",
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ],
            "title": "Previous Text"
          },
          "next_text": {
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "type": "string",
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ],
            "title": "Next Text"
          },
          "previous_request_ids": {
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ],
            "title": "Previous Request Ids"
          },
          "next_request_ids": {
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ],
            "title": "Next Request Ids"
          },
          "use_pvc_as_ivc": {
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Use Pvc As Ivc"
          },
          "apply_text_normalization": {
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' model.",
            "type": "string",
            "default": "auto",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "examples": [
              true
            ],
            "title": "Apply Text Normalization"
          }
        },
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post"
      },
      "Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The text that will get converted into speech.",
            "type": "string",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ],
            "title": "Text"
          },
          "model_id": {
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "type": "string",
            "default": "eleven_monolingual_v1",
            "title": "Model Id"
          },
          "language_code": {
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided.",
            "type": "string",
            "title": "Language Code"
          },
          "voice_settings": {
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              }
            ],
            "title": "Voice Settings"
          },
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
            },
            "default": [],
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "seed": {
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "type": "integer",
            "examples": [
              12345
            ],
            "title": "Seed"
          },
          "previous_text": {
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "type": "string",
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ],
            "title": "Previous Text"
          },
          "next_text": {
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "type": "string",
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ],
            "title": "Next Text"
          },
          "previous_request_ids": {
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ],
            "title": "Previous Request Ids"
          },
          "next_request_ids": {
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ],
            "title": "Next Request Ids"
          },
          "use_pvc_as_ivc": {
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Use Pvc As Ivc"
          },
          "apply_text_normalization": {
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' model.",
            "type": "string",
            "default": "auto",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "examples": [
              true
            ],
            "title": "Apply Text Normalization"
          }
        },
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post"
      },
      "Body_Text_to_speech_v1_text_to_speech__voice_id__post": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The text that will get converted into speech.",
            "type": "string",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ],
            "title": "Text"
          },
          "model_id": {
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "type": "string",
            "default": "eleven_monolingual_v1",
            "title": "Model Id"
          },
          "language_code": {
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided.",
            "type": "string",
            "title": "Language Code"
          },
          "voice_settings": {
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              }
            ],
            "title": "Voice Settings"
          },
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
            },
            "default": [],
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "seed": {
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "type": "integer",
            "examples": [
              12345
            ],
            "title": "Seed"
          },
          "previous_text": {
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "type": "string",
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ],
            "title": "Previous Text"
          },
          "next_text": {
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "type": "string",
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ],
            "title": "Next Text"
          },
          "previous_request_ids": {
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ],
            "title": "Previous Request Ids"
          },
          "next_request_ids": {
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ],
            "title": "Next Request Ids"
          },
          "use_pvc_as_ivc": {
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Use Pvc As Ivc"
          },
          "apply_text_normalization": {
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' model.",
            "type": "string",
            "default": "auto",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "examples": [
              true
            ],
            "title": "Apply Text Normalization"
          }
        },
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_v1_text_to_speech__voice_id__post"
      },
      "Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The text that will get converted into speech.",
            "type": "string",
            "examples": [
              "This is a test for the API of ElevenLabs."
            ],
            "title": "Text"
          },
          "model_id": {
            "description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
            "type": "string",
            "default": "eleven_monolingual_v1",
            "title": "Model Id"
          },
          "language_code": {
            "description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 and Flash v2.5 support language enforcement. For other models, an error will be returned if language code is provided.",
            "type": "string",
            "title": "Language Code"
          },
          "voice_settings": {
            "description": "Voice settings overriding stored settings for the given voice. They are applied only on the given request.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              }
            ],
            "title": "Voice Settings"
          },
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
            },
            "default": [],
            "examples": [
              [
                {
                  "pronunciation_dictionary_id": "test",
                  "version_id": "id2"
                }
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "seed": {
            "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295.",
            "type": "integer",
            "examples": [
              12345
            ],
            "title": "Seed"
          },
          "previous_text": {
            "description": "The text that came before the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "type": "string",
            "examples": [
              "In the heart of a lush valley surrounded by towering mountains lies the quaint village of Willowbrook."
            ],
            "title": "Previous Text"
          },
          "next_text": {
            "description": "The text that comes after the text of the current request. Can be used to improve the speech's continuity when concatenating together multiple generations or to influence the speech's continuity in the current generation.",
            "type": "string",
            "examples": [
              "The Willowbrook Festival, held every spring, celebrates the blossoming of the wild bluebells that carpet the nearby forest floors, creating a breathtaking sea of blue under the canopy of fresh green leaves."
            ],
            "title": "Next Text"
          },
          "previous_request_ids": {
            "description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the speech's continuity when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "examples": [
              [
                "09bOJkdYVjKy2oOiiVtR",
                "0p2uKqOnZyce22SPZ9d5",
                "1KYvY8WZAKmcjCJ1mvVB"
              ]
            ],
            "title": "Previous Request Ids"
          },
          "next_request_ids": {
            "description": "A list of request_id of the samples that come after this generation. next_request_ids is especially useful for maintaining the speech's continuity when regenerating a sample that has had some audio quality issues. For example, if you have generated 3 speech clips, and you want to improve clip 2, passing the request id of clip 3 as a next_request_id (and that of clip 1 as a previous_request_id) will help maintain natural flow in the combined speech. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "examples": [
              [
                "3tPgBrD1UdW3snUkGw1K",
                "4D1jAxiRFkolBNUGzXkU",
                "4c8Z4aWliVR2oipYRXhj"
              ]
            ],
            "title": "Next Request Ids"
          },
          "use_pvc_as_ivc": {
            "description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
            "type": "boolean",
            "default": false,
            "examples": [
              true
            ],
            "title": "Use Pvc As Ivc"
          },
          "apply_text_normalization": {
            "description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' model.",
            "type": "string",
            "default": "auto",
            "enum": [
              "auto",
              "on",
              "off"
            ],
            "examples": [
              true
            ],
            "title": "Apply Text Normalization"
          }
        },
        "required": [
          "text"
        ],
        "title": "Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post"
      },
      "Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post": {
        "type": "object",
        "properties": {
          "segments": {
            "description": "Transcribe this specific list of segments.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Segments"
          }
        },
        "required": [
          "segments"
        ],
        "title": "Body_Transcribes_segments_v1_dubbing_resource__dubbing_id__transcribe_post"
      },
      "Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post": {
        "type": "object",
        "properties": {
          "segments": {
            "description": "Translate only this list of segments.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Segments"
          },
          "languages": {
            "description": "Translate only these languages for each segment.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Languages"
          }
        },
        "required": [
          "segments",
          "languages"
        ],
        "title": "Body_Translates_all_or_some_segments_and_languages_v1_dubbing_resource__dubbing_id__translate_post"
      },
      "Body_Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post": {
        "type": "object",
        "properties": {
          "pronunciation_dictionary_locators": {
            "description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text. A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
            },
            "examples": [
              [
                "{\"pronunciation_dictionary_id\": \"test\", \"version_id\": \"id2\"}"
              ]
            ],
            "title": "Pronunciation Dictionary Locators"
          },
          "invalidate_affected_text": {
            "description": "This will automatically mark text in this project for reconversion when the new dictionary applies or the old one no longer does.",
            "type": "boolean",
            "default": true,
            "examples": [
              false
            ],
            "title": "Invalidate Affected Text"
          }
        },
        "required": [
          "pronunciation_dictionary_locators"
        ],
        "title": "Body_Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post"
      },
      "Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post": {
        "type": "object",
        "properties": {
          "from_url": {
            "description": "An optional URL from which we will extract content to initialize the Studio project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "type": "string",
            "examples": [
              "https://blog.elevenlabs.io/the_first_ai_that_can_laugh/"
            ],
            "title": "From Url"
          },
          "from_document": {
            "description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the Studio project with its content. If this is set, 'from_url' must be null.  If neither 'from_url' or 'from_document' are provided we will initialize the Studio project as blank.",
            "type": "string",
            "format": "binary",
            "title": "From Document"
          },
          "auto_convert": {
            "description": "Whether to auto convert the Studio project to audio or not.",
            "type": "boolean",
            "default": false,
            "title": "Auto Convert"
          }
        },
        "title": "Body_Update_Studio_project_content_v1_studio_projects__project_id__content_post"
      },
      "Body_Update_Studio_project_v1_studio_projects__project_id__post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the Studio project, used for identification only.",
            "type": "string",
            "examples": [
              "Project 1"
            ],
            "title": "Name"
          },
          "default_title_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new titles.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "description": "The voice_id that corresponds to the default voice used for new paragraphs.",
            "type": "string",
            "examples": [
              "21m00Tcm4TlvDq8ikWAM"
            ],
            "title": "Default Paragraph Voice Id"
          },
          "title": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "type": "string",
            "examples": [
              "Romeo and Juliet"
            ],
            "title": "Title"
          },
          "author": {
            "description": "An optional name of the author of the Studio project, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "type": "string",
            "examples": [
              "William Shakespeare"
            ],
            "title": "Author"
          },
          "isbn_number": {
            "description": "An optional ISBN number of the Studio project you want to create, this will be added as metadata to the mp3 file on Studio project or chapter download.",
            "type": "string",
            "examples": [
              "0-306-40615-2"
            ],
            "title": "Isbn Number"
          },
          "volume_normalization": {
            "description": "When the Studio project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
            "type": "boolean",
            "default": false,
            "examples": [
              false
            ],
            "title": "Volume Normalization"
          }
        },
        "required": [
          "name",
          "default_title_voice_id",
          "default_paragraph_voice_id"
        ],
        "title": "Body_Update_Studio_project_v1_studio_projects__project_id__post"
      },
      "Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post": {
        "type": "object",
        "properties": {
          "file": {
            "description": "Either txt or HTML input file containing the article content. HTML should be formatted as follows '&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;Your content&lt;/p&gt;&lt;h5&gt;More of your content&lt;/h5&gt;&lt;p&gt;Some more of your content&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'",
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "auto_convert": {
            "description": "Whether to auto convert the project to audio or not.",
            "type": "boolean",
            "default": false,
            "title": "Auto Convert"
          },
          "auto_publish": {
            "description": "Whether to auto publish the new project snapshot after it's converted.",
            "type": "boolean",
            "default": false,
            "title": "Auto Publish"
          }
        },
        "title": "Body_Update_audio_native_Project_content_v1_audio_native__project_id__content_post"
      },
      "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the chapter, used for identification only.",
            "type": "string",
            "examples": [
              "Chapter 1"
            ],
            "title": "Name"
          },
          "content": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChapterContentInputModel"
              }
            ],
            "description": "The chapter content to use.",
            "title": "Content"
          }
        },
        "title": "Body_Update_chapter_v1_studio_projects__project_id__chapters__chapter_id__post"
      },
      "Body_Update_member_v1_workspace_members_post": {
        "type": "object",
        "properties": {
          "email": {
            "description": "Email of the target user.",
            "type": "string",
            "title": "Email"
          },
          "is_locked": {
            "description": "Whether to lock or unlock the user account.",
            "type": "boolean",
            "title": "Is Locked"
          },
          "workspace_role": {
            "description": "Role dictating permissions in the workspace.",
            "type": "string",
            "enum": [
              "workspace_admin",
              "workspace_member"
            ],
            "title": "Workspace Role"
          }
        },
        "required": [
          "email"
        ],
        "title": "Body_Update_member_v1_workspace_members_post"
      },
      "BreakdownTypes": {
        "description": "How to break down the information. Cannot be \"user\" or \"api_key\" if include_workspace_metrics is False.",
        "enum": [
          "none",
          "voice",
          "voice_multiplier",
          "user",
          "groups",
          "api_keys",
          "all_api_keys",
          "product_type",
          "model",
          "resource"
        ],
        "title": "BreakdownTypes"
      },
      "ChapterContentBlockExtendableNodeResponseModel": {
        "description": "Not used. Make sure you anticipate new types in the future.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "_other"
            ],
            "title": "Type"
          }
        },
        "required": [
          "type"
        ],
        "title": "ChapterContentBlockExtendableNodeResponseModel"
      },
      "ChapterContentBlockInputModel": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterContentParagraphTtsNodeInputModel"
            },
            "title": "Nodes"
          }
        },
        "required": [
          "nodes"
        ],
        "title": "ChapterContentBlockInputModel"
      },
      "ChapterContentBlockResponseModel": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "title": "Block Id"
          },
          "nodes": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ChapterContentBlockTtsNodeResponseModel"
                },
                {
                  "$ref": "#/components/schemas/ChapterContentBlockExtendableNodeResponseModel"
                }
              ]
            },
            "title": "Nodes"
          }
        },
        "required": [
          "block_id",
          "nodes"
        ],
        "title": "ChapterContentBlockResponseModel"
      },
      "ChapterContentBlockTtsNodeResponseModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tts_node"
            ],
            "title": "Type"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "required": [
          "type",
          "voice_id",
          "text"
        ],
        "title": "ChapterContentBlockTtsNodeResponseModel"
      },
      "ChapterContentInputModel": {
        "type": "object",
        "properties": {
          "blocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterContentBlockInputModel"
            },
            "title": "Blocks"
          }
        },
        "required": [
          "blocks"
        ],
        "title": "ChapterContentInputModel"
      },
      "ChapterContentParagraphTtsNodeInputModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "tts_node"
            ],
            "title": "Type"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          }
        },
        "required": [
          "type",
          "text",
          "voice_id"
        ],
        "title": "ChapterContentParagraphTtsNodeInputModel"
      },
      "ChapterContentResponseModel": {
        "type": "object",
        "properties": {
          "blocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterContentBlockResponseModel"
            },
            "title": "Blocks"
          }
        },
        "required": [
          "blocks"
        ],
        "title": "ChapterContentResponseModel"
      },
      "ChapterResponseModel": {
        "type": "object",
        "properties": {
          "chapter_id": {
            "description": "The ID of the chapter.",
            "type": "string",
            "title": "Chapter Id"
          },
          "name": {
            "description": "The name of the chapter.",
            "type": "string",
            "title": "Name"
          },
          "last_conversion_date_unix": {
            "description": "The last conversion date of the chapter.",
            "type": "integer",
            "title": "Last Conversion Date Unix"
          },
          "conversion_progress": {
            "description": "The conversion progress of the chapter.",
            "type": "number",
            "title": "Conversion Progress"
          },
          "can_be_downloaded": {
            "description": "Whether the chapter can be downloaded.",
            "type": "boolean",
            "title": "Can Be Downloaded"
          },
          "state": {
            "description": "The state of the chapter.",
            "type": "string",
            "enum": [
              "default",
              "converting"
            ],
            "title": "State"
          },
          "statistics": {
            "description": "The statistics of the chapter.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ChapterStatisticsResponseModel"
              }
            ],
            "title": "Statistics"
          },
          "last_conversion_error": {
            "description": "The last conversion error of the chapter.",
            "type": "string",
            "title": "Last Conversion Error"
          }
        },
        "example": {
          "chapter_id": "aw1NgEzBg83R7vgmiJt6",
          "name": "Chapter 1",
          "last_conversion_date_unix": 1714204800,
          "conversion_progress": 0.5,
          "can_be_downloaded": true,
          "state": "converting",
          "statistics": {
            "characters_unconverted": 1000,
            "characters_converted": 500,
            "paragraphs_converted": 20,
            "paragraphs_unconverted": 10
          },
          "last_conversion_error": "Error message"
        },
        "required": [
          "chapter_id",
          "name",
          "can_be_downloaded",
          "state"
        ],
        "title": "ChapterResponseModel"
      },
      "ChapterSnapshotExtendedResponseModel": {
        "type": "object",
        "properties": {
          "chapter_snapshot_id": {
            "description": "The ID of the chapter snapshot.",
            "type": "string",
            "title": "Chapter Snapshot Id"
          },
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "chapter_id": {
            "description": "The ID of the chapter.",
            "type": "string",
            "title": "Chapter Id"
          },
          "created_at_unix": {
            "description": "The creation date of the chapter snapshot.",
            "type": "integer",
            "title": "Created At Unix"
          },
          "name": {
            "description": "The name of the chapter snapshot.",
            "type": "string",
            "title": "Name"
          },
          "character_alignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CharacterAlignmentModel"
            },
            "title": "Character Alignments"
          }
        },
        "example": {
          "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
          "project_id": "aw1NgEzBg83R7vgmiJt2",
          "chapter_id": "aw1NgEzBg83R7vgmiJt3",
          "created_at_unix": 1714204800,
          "name": "My Chapter Snapshot"
        },
        "required": [
          "chapter_snapshot_id",
          "project_id",
          "chapter_id",
          "created_at_unix",
          "name",
          "character_alignments"
        ],
        "title": "ChapterSnapshotExtendedResponseModel"
      },
      "ChapterSnapshotResponseModel": {
        "type": "object",
        "properties": {
          "chapter_snapshot_id": {
            "description": "The ID of the chapter snapshot.",
            "type": "string",
            "title": "Chapter Snapshot Id"
          },
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "chapter_id": {
            "description": "The ID of the chapter.",
            "type": "string",
            "title": "Chapter Id"
          },
          "created_at_unix": {
            "description": "The creation date of the chapter snapshot.",
            "type": "integer",
            "title": "Created At Unix"
          },
          "name": {
            "description": "The name of the chapter snapshot.",
            "type": "string",
            "title": "Name"
          }
        },
        "example": {
          "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
          "project_id": "aw1NgEzBg83R7vgmiJt2",
          "chapter_id": "aw1NgEzBg83R7vgmiJt3",
          "created_at_unix": 1714204800,
          "name": "My Chapter Snapshot"
        },
        "required": [
          "chapter_snapshot_id",
          "project_id",
          "chapter_id",
          "created_at_unix",
          "name"
        ],
        "title": "ChapterSnapshotResponseModel"
      },
      "ChapterSnapshotsResponseModel": {
        "type": "object",
        "properties": {
          "snapshots": {
            "description": "List of chapter snapshots.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterSnapshotResponseModel"
            },
            "title": "Snapshots"
          }
        },
        "example": {
          "snapshots": [
            {
              "chapter_snapshot_id": "aw1NgEzBg83R7vgmiJt1",
              "project_id": "aw1NgEzBg83R7vgmiJt2",
              "chapter_id": "aw1NgEzBg83R7vgmiJt3",
              "created_at_unix": 1714204800,
              "name": "My Chapter Snapshot"
            }
          ]
        },
        "required": [
          "snapshots"
        ],
        "title": "ChapterSnapshotsResponseModel"
      },
      "ChapterStatisticsResponseModel": {
        "type": "object",
        "properties": {
          "characters_unconverted": {
            "description": "The number of unconverted characters.",
            "type": "integer",
            "title": "Characters Unconverted"
          },
          "characters_converted": {
            "description": "The number of converted characters.",
            "type": "integer",
            "title": "Characters Converted"
          },
          "paragraphs_converted": {
            "description": "The number of converted paragraphs.",
            "type": "integer",
            "title": "Paragraphs Converted"
          },
          "paragraphs_unconverted": {
            "description": "The number of unconverted paragraphs.",
            "type": "integer",
            "title": "Paragraphs Unconverted"
          }
        },
        "example": {
          "characters_unconverted": 1000,
          "characters_converted": 500,
          "paragraphs_converted": 20,
          "paragraphs_unconverted": 10
        },
        "required": [
          "characters_unconverted",
          "characters_converted",
          "paragraphs_converted",
          "paragraphs_unconverted"
        ],
        "title": "ChapterStatisticsResponseModel"
      },
      "ChapterWithContentResponseModel": {
        "type": "object",
        "properties": {
          "chapter_id": {
            "description": "The ID of the chapter.",
            "type": "string",
            "title": "Chapter Id"
          },
          "name": {
            "description": "The name of the chapter.",
            "type": "string",
            "title": "Name"
          },
          "last_conversion_date_unix": {
            "description": "The last conversion date of the chapter.",
            "type": "integer",
            "title": "Last Conversion Date Unix"
          },
          "conversion_progress": {
            "description": "The conversion progress of the chapter.",
            "type": "number",
            "title": "Conversion Progress"
          },
          "can_be_downloaded": {
            "description": "Whether the chapter can be downloaded.",
            "type": "boolean",
            "title": "Can Be Downloaded"
          },
          "state": {
            "description": "The state of the chapter.",
            "type": "string",
            "enum": [
              "default",
              "converting"
            ],
            "title": "State"
          },
          "statistics": {
            "description": "The statistics of the chapter.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ChapterStatisticsResponseModel"
              }
            ],
            "title": "Statistics"
          },
          "last_conversion_error": {
            "description": "The last conversion error of the chapter.",
            "type": "string",
            "title": "Last Conversion Error"
          },
          "content": {
            "$ref": "#/components/schemas/ChapterContentResponseModel"
          }
        },
        "example": {
          "chapter_id": "aw1NgEzBg83R7vgmiJt6",
          "name": "Chapter 1",
          "last_conversion_date_unix": 1714204800,
          "conversion_progress": 0.5,
          "can_be_downloaded": true,
          "state": "converting",
          "statistics": {
            "characters_unconverted": 1000,
            "characters_converted": 500,
            "paragraphs_converted": 20,
            "paragraphs_unconverted": 10
          },
          "last_conversion_error": "Error message"
        },
        "required": [
          "chapter_id",
          "name",
          "can_be_downloaded",
          "state",
          "content"
        ],
        "title": "ChapterWithContentResponseModel"
      },
      "CharacterAlignmentModel": {
        "type": "object",
        "properties": {
          "characters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Characters"
          },
          "character_start_times_seconds": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Character Start Times Seconds"
          },
          "character_end_times_seconds": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Character End Times Seconds"
          }
        },
        "required": [
          "characters",
          "character_start_times_seconds",
          "character_end_times_seconds"
        ],
        "title": "CharacterAlignmentModel"
      },
      "CharacterAlignmentResponseModel": {
        "type": "object",
        "properties": {
          "characters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Characters"
          },
          "character_start_times_seconds": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Character Start Times Seconds"
          },
          "character_end_times_seconds": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Character End Times Seconds"
          }
        },
        "required": [
          "characters",
          "character_start_times_seconds",
          "character_end_times_seconds"
        ],
        "title": "CharacterAlignmentResponseModel"
      },
      "ClientEvent": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "conversation_initiation_metadata",
          "asr_initiation_metadata",
          "ping",
          "audio",
          "interruption",
          "user_transcript",
          "agent_response",
          "agent_response_correction",
          "client_tool_call",
          "internal_vad_score",
          "internal_turn_probability",
          "internal_tentative_agent_response"
        ],
        "title": "ClientEvent"
      },
      "ClientToolConfig": {
        "description": "A client tool is one that sends an event to the user's client to trigger something client side",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "client"
            ],
            "title": "Type"
          },
          "name": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "parameters": {
            "$ref": "#/components/schemas/ObjectJsonSchemaProperty"
          },
          "expects_response": {
            "type": "boolean",
            "default": false,
            "title": "Expects Response"
          },
          "response_timeout_secs": {
            "type": "integer",
            "maximum": 30,
            "minimum": 1,
            "title": "Response Timeout Secs"
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig"
          }
        },
        "required": [
          "type",
          "name",
          "description"
        ],
        "title": "ClientToolConfig"
      },
      "ConvAISecretLocator": {
        "description": "Used to reference a secret from the agent's secret store.",
        "type": "object",
        "properties": {
          "secret_id": {
            "type": "string",
            "title": "Secret Id"
          }
        },
        "required": [
          "secret_id"
        ],
        "title": "ConvAISecretLocator"
      },
      "ConvAIStoredSecretDependencies": {
        "type": "object",
        "properties": {
          "tools": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableToolIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownToolIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableToolIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownToolIdentifier"
                }
              }
            },
            "title": "Tools"
          },
          "agent_tools": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentToolIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentToolIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentToolIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentToolIdentifier"
                }
              }
            },
            "title": "Agent Tools"
          },
          "others": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SecretDependencyType"
            }
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DependentPhoneNumberIdentifier"
            },
            "title": "Phone Numbers"
          }
        },
        "required": [
          "tools",
          "agent_tools",
          "others"
        ],
        "title": "ConvAIStoredSecretDependencies"
      },
      "ConvAIWebhooks": {
        "type": "object",
        "properties": {
          "post_call_webhook_id": {
            "type": "string",
            "title": "Post Call Webhook Id"
          }
        },
        "title": "ConvAIWebhooks"
      },
      "ConvAIWorkspaceStoredSecretConfig": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "stored"
            ],
            "title": "Type"
          },
          "secret_id": {
            "type": "string",
            "title": "Secret Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "used_by": {
            "$ref": "#/components/schemas/ConvAIStoredSecretDependencies"
          }
        },
        "required": [
          "type",
          "secret_id",
          "name",
          "used_by"
        ],
        "title": "ConvAIWorkspaceStoredSecretConfig"
      },
      "ConversationChargingCommonModel": {
        "type": "object",
        "properties": {
          "dev_discount": {
            "type": "boolean",
            "default": false,
            "title": "Dev Discount"
          }
        },
        "title": "ConversationChargingCommonModel"
      },
      "ConversationConfig": {
        "type": "object",
        "properties": {
          "max_duration_seconds": {
            "type": "integer",
            "default": 600,
            "title": "Max Duration Seconds"
          },
          "client_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientEvent"
            }
          }
        },
        "title": "ConversationConfig"
      },
      "ConversationConfigClientOverride": {
        "type": "object",
        "properties": {
          "agent": {
            "$ref": "#/components/schemas/AgentConfigOverride"
          },
          "tts": {
            "$ref": "#/components/schemas/TTSConversationalConfigOverride"
          }
        },
        "title": "ConversationConfigClientOverride"
      },
      "ConversationConfigClientOverrideConfig": {
        "type": "object",
        "properties": {
          "agent": {
            "$ref": "#/components/schemas/AgentConfigOverrideConfig"
          },
          "tts": {
            "$ref": "#/components/schemas/TTSConversationalConfigOverrideConfig"
          }
        },
        "title": "ConversationConfigClientOverrideConfig"
      },
      "ConversationDeletionSettings": {
        "type": "object",
        "properties": {
          "deletion_time_unix_secs": {
            "type": "integer",
            "title": "Deletion Time Unix Secs"
          },
          "deleted_logs_at_time_unix_secs": {
            "type": "integer",
            "title": "Deleted Logs At Time Unix Secs"
          },
          "deleted_audio_at_time_unix_secs": {
            "type": "integer",
            "title": "Deleted Audio At Time Unix Secs"
          },
          "deleted_transcript_at_time_unix_secs": {
            "type": "integer",
            "title": "Deleted Transcript At Time Unix Secs"
          },
          "delete_transcript_and_pii": {
            "type": "boolean",
            "default": false,
            "title": "Delete Transcript And Pii"
          },
          "delete_audio": {
            "type": "boolean",
            "default": false,
            "title": "Delete Audio"
          }
        },
        "title": "ConversationDeletionSettings"
      },
      "ConversationHistoryAnalysisCommonModel": {
        "type": "object",
        "properties": {
          "evaluation_criteria_results": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ConversationHistoryEvaluationCriteriaResultCommonModel"
            },
            "title": "Evaluation Criteria Results"
          },
          "data_collection_results": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DataCollectionResultCommonModel"
            },
            "title": "Data Collection Results"
          },
          "call_successful": {
            "$ref": "#/components/schemas/EvaluationSuccessResult"
          },
          "transcript_summary": {
            "type": "string",
            "title": "Transcript Summary"
          }
        },
        "required": [
          "call_successful",
          "transcript_summary"
        ],
        "title": "ConversationHistoryAnalysisCommonModel"
      },
      "ConversationHistoryEvaluationCriteriaResultCommonModel": {
        "type": "object",
        "properties": {
          "criteria_id": {
            "type": "string",
            "title": "Criteria Id"
          },
          "result": {
            "$ref": "#/components/schemas/EvaluationSuccessResult"
          },
          "rationale": {
            "type": "string",
            "title": "Rationale"
          }
        },
        "required": [
          "criteria_id",
          "result",
          "rationale"
        ],
        "title": "ConversationHistoryEvaluationCriteriaResultCommonModel"
      },
      "ConversationHistoryFeedbackCommonModel": {
        "type": "object",
        "properties": {
          "overall_score": {
            "$ref": "#/components/schemas/UserFeedbackScore"
          },
          "likes": {
            "type": "integer",
            "default": 0,
            "title": "Likes"
          },
          "dislikes": {
            "type": "integer",
            "default": 0,
            "title": "Dislikes"
          }
        },
        "title": "ConversationHistoryFeedbackCommonModel"
      },
      "ConversationHistoryMetadataCommonModel": {
        "type": "object",
        "properties": {
          "start_time_unix_secs": {
            "type": "integer",
            "title": "Start Time Unix Secs"
          },
          "call_duration_secs": {
            "type": "integer",
            "title": "Call Duration Secs"
          },
          "cost": {
            "type": "integer",
            "title": "Cost"
          },
          "deletion_settings": {
            "$ref": "#/components/schemas/ConversationDeletionSettings"
          },
          "feedback": {
            "$ref": "#/components/schemas/ConversationHistoryFeedbackCommonModel"
          },
          "authorization_method": {
            "default": "public",
            "allOf": [
              {
                "$ref": "#/components/schemas/AuthorizationMethod"
              }
            ]
          },
          "charging": {
            "$ref": "#/components/schemas/ConversationChargingCommonModel"
          },
          "termination_reason": {
            "type": "string",
            "default": "",
            "title": "Termination Reason"
          }
        },
        "required": [
          "start_time_unix_secs",
          "call_duration_secs"
        ],
        "title": "ConversationHistoryMetadataCommonModel"
      },
      "ConversationHistoryTranscriptCommonModel": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "user",
              "agent"
            ],
            "title": "Role"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "tool_calls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallCommonModel"
            },
            "title": "Tool Calls"
          },
          "tool_results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptToolResultCommonModel"
            },
            "title": "Tool Results"
          },
          "feedback": {
            "$ref": "#/components/schemas/UserFeedback"
          },
          "time_in_call_secs": {
            "type": "integer",
            "title": "Time In Call Secs"
          },
          "conversation_turn_metrics": {
            "type": "object",
            "title": "Conversation Turn Metrics"
          }
        },
        "required": [
          "role",
          "time_in_call_secs"
        ],
        "title": "ConversationHistoryTranscriptCommonModel"
      },
      "ConversationHistoryTranscriptToolCallCommonModel": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "params_as_json": {
            "type": "string",
            "title": "Params As Json"
          },
          "tool_has_been_called": {
            "type": "boolean",
            "title": "Tool Has Been Called"
          }
        },
        "required": [
          "request_id",
          "tool_name",
          "params_as_json",
          "tool_has_been_called"
        ],
        "title": "ConversationHistoryTranscriptToolCallCommonModel"
      },
      "ConversationHistoryTranscriptToolResultCommonModel": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "tool_name": {
            "type": "string",
            "title": "Tool Name"
          },
          "result_value": {
            "type": "string",
            "title": "Result Value"
          },
          "is_error": {
            "type": "boolean",
            "title": "Is Error"
          },
          "tool_has_been_called": {
            "type": "boolean",
            "title": "Tool Has Been Called"
          }
        },
        "required": [
          "request_id",
          "tool_name",
          "result_value",
          "is_error",
          "tool_has_been_called"
        ],
        "title": "ConversationHistoryTranscriptToolResultCommonModel"
      },
      "ConversationInitiationClientData": {
        "type": "object",
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride"
          },
          "custom_llm_extra_body": {
            "type": "object",
            "title": "Custom Llm Extra Body"
          },
          "dynamic_variables": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "title": "Dynamic Variables"
          }
        },
        "title": "ConversationInitiationClientData"
      },
      "ConversationInitiationClientDataConfig": {
        "type": "object",
        "properties": {
          "conversation_config_override": {
            "$ref": "#/components/schemas/ConversationConfigClientOverrideConfig"
          },
          "custom_llm_extra_body": {
            "type": "boolean",
            "default": false,
            "title": "Custom Llm Extra Body"
          },
          "enable_conversation_initiation_client_data_from_webhook": {
            "type": "boolean",
            "default": false,
            "title": "Enable Conversation Initiation Client Data From Webhook"
          }
        },
        "title": "ConversationInitiationClientDataConfig"
      },
      "ConversationInitiationClientDataWebhook": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "request_headers": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                }
              ]
            },
            "title": "Request Headers"
          }
        },
        "required": [
          "url",
          "request_headers"
        ],
        "title": "ConversationInitiationClientDataWebhook"
      },
      "ConversationSignedUrlResponseModel": {
        "type": "object",
        "properties": {
          "signed_url": {
            "type": "string",
            "title": "Signed Url"
          }
        },
        "required": [
          "signed_url"
        ],
        "title": "ConversationSignedUrlResponseModel"
      },
      "ConversationSummaryResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_name": {
            "type": "string",
            "title": "Agent Name"
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id"
          },
          "start_time_unix_secs": {
            "type": "integer",
            "title": "Start Time Unix Secs"
          },
          "call_duration_secs": {
            "type": "integer",
            "title": "Call Duration Secs"
          },
          "message_count": {
            "type": "integer",
            "title": "Message Count"
          },
          "status": {
            "type": "string",
            "enum": [
              "processing",
              "done"
            ],
            "title": "Status"
          },
          "call_successful": {
            "$ref": "#/components/schemas/EvaluationSuccessResult"
          }
        },
        "required": [
          "agent_id",
          "conversation_id",
          "start_time_unix_secs",
          "call_duration_secs",
          "message_count",
          "status",
          "call_successful"
        ],
        "title": "ConversationSummaryResponseModel"
      },
      "ConversationTokenDBModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "conversation_token": {
            "type": "string",
            "title": "Conversation Token"
          },
          "expiration_time_unix_secs": {
            "type": "integer",
            "title": "Expiration Time Unix Secs"
          },
          "purpose": {
            "default": "signed_url",
            "allOf": [
              {
                "$ref": "#/components/schemas/ConversationTokenPurpose"
              }
            ]
          }
        },
        "required": [
          "agent_id",
          "conversation_token"
        ],
        "title": "ConversationTokenDBModel"
      },
      "ConversationTokenPurpose": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "signed_url",
          "shareable_link"
        ],
        "title": "ConversationTokenPurpose"
      },
      "ConversationalConfigAPIModel": {
        "type": "object",
        "properties": {
          "asr": {
            "$ref": "#/components/schemas/ASRConversationalConfig"
          },
          "turn": {
            "$ref": "#/components/schemas/TurnConfig"
          },
          "tts": {
            "$ref": "#/components/schemas/TTSConversationalConfig"
          },
          "conversation": {
            "$ref": "#/components/schemas/ConversationConfig"
          },
          "language_presets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LanguagePreset"
            },
            "title": "Language Presets"
          },
          "agent": {
            "$ref": "#/components/schemas/AgentConfigAPIModel"
          }
        },
        "title": "ConversationalConfigAPIModel"
      },
      "ConvertChapterResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the studio chapter conversion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "ConvertChapterResponseModel"
      },
      "ConvertProjectResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the studio project conversion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "ConvertProjectResponseModel"
      },
      "CreateAgentResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          }
        },
        "required": [
          "agent_id"
        ],
        "title": "CreateAgentResponseModel"
      },
      "CreatePhoneNumberRequest": {
        "type": "object",
        "properties": {
          "phone_number": {
            "description": "Phone number",
            "type": "string",
            "title": "Phone Number"
          },
          "provider": {
            "description": "Phone provider",
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephonyProvider"
              }
            ]
          },
          "label": {
            "description": "Label for the phone number",
            "type": "string",
            "title": "Label"
          },
          "sid": {
            "description": "Twilio Account SID",
            "type": "string",
            "title": "Sid"
          },
          "token": {
            "description": "Twilio Auth Token",
            "type": "string",
            "title": "Token"
          }
        },
        "required": [
          "phone_number",
          "provider",
          "label",
          "sid",
          "token"
        ],
        "title": "CreatePhoneNumberRequest"
      },
      "CreatePhoneNumberResponseModel": {
        "type": "object",
        "properties": {
          "phone_number_id": {
            "description": "Phone entity id",
            "type": "string",
            "title": "Phone Number Id"
          }
        },
        "required": [
          "phone_number_id"
        ],
        "title": "CreatePhoneNumberResponseModel"
      },
      "CreatePronunciationDictionaryResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the create pronunciation dictionary request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "CreatePronunciationDictionaryResponseModel"
      },
      "CustomLLM": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id"
          },
          "api_key": {
            "$ref": "#/components/schemas/ConvAISecretLocator"
          }
        },
        "required": [
          "url"
        ],
        "title": "CustomLLM"
      },
      "DataCollectionResultCommonModel": {
        "type": "object",
        "properties": {
          "data_collection_id": {
            "type": "string",
            "title": "Data Collection Id"
          },
          "value": {
            "title": "Value"
          },
          "json_schema": {
            "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
          },
          "rationale": {
            "type": "string",
            "title": "Rationale"
          }
        },
        "required": [
          "data_collection_id",
          "rationale"
        ],
        "title": "DataCollectionResultCommonModel"
      },
      "DeleteChapterResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the studio chapter deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteChapterResponseModel"
      },
      "DeleteDubbingResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the dubbing project. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteDubbingResponseModel"
      },
      "DeleteProjectResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the studio project deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteProjectResponseModel"
      },
      "DeleteSampleResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the sample deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteSampleResponseModel"
      },
      "DeleteVoiceResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the voice deletion. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteVoiceResponseModel"
      },
      "DeleteWorkspaceGroupMemberResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the workspace group member deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteWorkspaceGroupMemberResponseModel"
      },
      "DeleteWorkspaceInviteResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the workspace invite deletion request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "DeleteWorkspaceInviteResponseModel"
      },
      "DependentAvailableAgentIdentifier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "default": "available",
            "enum": [
              "available"
            ],
            "title": "Type"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          }
        },
        "required": [
          "id",
          "name",
          "created_at_unix_secs",
          "access_level"
        ],
        "title": "DependentAvailableAgentIdentifier"
      },
      "DependentAvailableAgentToolIdentifier": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_name": {
            "type": "string",
            "title": "Agent Name"
          },
          "used_by": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Used By"
          },
          "type": {
            "type": "string",
            "default": "available",
            "enum": [
              "available"
            ],
            "title": "Type"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          }
        },
        "required": [
          "agent_id",
          "agent_name",
          "used_by",
          "created_at_unix_secs",
          "access_level"
        ],
        "title": "DependentAvailableAgentToolIdentifier"
      },
      "DependentAvailableToolIdentifier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "default": "available",
            "enum": [
              "available"
            ],
            "title": "Type"
          },
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          }
        },
        "required": [
          "id",
          "name",
          "created_at_unix_secs",
          "access_level"
        ],
        "title": "DependentAvailableToolIdentifier"
      },
      "DependentPhoneNumberIdentifier": {
        "type": "object",
        "properties": {
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "provider": {
            "$ref": "#/components/schemas/TelephonyProvider"
          }
        },
        "required": [
          "phone_number_id",
          "phone_number",
          "label",
          "provider"
        ],
        "title": "DependentPhoneNumberIdentifier"
      },
      "DependentUnknownAgentIdentifier": {
        "description": "A model that represents an agent dependent on a knowledge base/tools\nto which the user has no direct access.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "unknown",
            "enum": [
              "unknown"
            ],
            "title": "Type"
          }
        },
        "title": "DependentUnknownAgentIdentifier"
      },
      "DependentUnknownAgentToolIdentifier": {
        "description": "A model that represents an tool dependent on a knowledge base/tools\nto which the user has no direct access.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "unknown",
            "enum": [
              "unknown"
            ],
            "title": "Type"
          }
        },
        "title": "DependentUnknownAgentToolIdentifier"
      },
      "DependentUnknownToolIdentifier": {
        "description": "A model that represents an tool dependent on a knowledge base/tools\nto which the user has no direct access.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "unknown",
            "enum": [
              "unknown"
            ],
            "title": "Type"
          }
        },
        "title": "DependentUnknownToolIdentifier"
      },
      "DoDubbingResponseModel": {
        "type": "object",
        "properties": {
          "dubbing_id": {
            "description": "The ID of the dubbing project.",
            "type": "string",
            "title": "Dubbing Id"
          },
          "expected_duration_sec": {
            "description": "The expected duration of the dubbing project in seconds.",
            "type": "number",
            "title": "Expected Duration Sec"
          }
        },
        "example": {
          "dubbing_id": "21m00Tcm4TlvDq8ikWAM",
          "expected_duration_sec": 127.5
        },
        "required": [
          "dubbing_id",
          "expected_duration_sec"
        ],
        "title": "DoDubbingResponseModel"
      },
      "DocumentUsageModeEnum": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "prompt",
          "auto"
        ],
        "title": "DocumentUsageModeEnum"
      },
      "DubbedSegment": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "media_ref": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          }
        },
        "required": [
          "start_time",
          "end_time",
          "text",
          "media_ref"
        ],
        "title": "DubbedSegment"
      },
      "DubbingMediaMetadata": {
        "type": "object",
        "properties": {
          "content_type": {
            "description": "The content type of the media.",
            "type": "string",
            "title": "Content Type"
          },
          "duration": {
            "description": "The duration of the media in seconds.",
            "type": "number",
            "title": "Duration"
          }
        },
        "required": [
          "content_type",
          "duration"
        ],
        "title": "DubbingMediaMetadata"
      },
      "DubbingMediaReference": {
        "type": "object",
        "properties": {
          "src": {
            "type": "string",
            "title": "Src"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name"
          },
          "random_path_slug": {
            "type": "string",
            "title": "Random Path Slug"
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs"
          },
          "is_audio": {
            "type": "boolean",
            "title": "Is Audio"
          },
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "required": [
          "src",
          "content_type",
          "bucket_name",
          "random_path_slug",
          "duration_secs",
          "is_audio",
          "url"
        ],
        "title": "DubbingMediaReference"
      },
      "DubbingMetadataResponse": {
        "type": "object",
        "properties": {
          "dubbing_id": {
            "description": "The ID of the dubbing project.",
            "type": "string",
            "title": "Dubbing Id"
          },
          "name": {
            "description": "The name of the dubbing project.",
            "type": "string",
            "title": "Name"
          },
          "status": {
            "description": "The status of the dubbing project. Either 'dubbed', 'dubbing' or 'failed'.",
            "type": "string",
            "title": "Status"
          },
          "target_languages": {
            "description": "The target languages of the dubbing project.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Target Languages"
          },
          "media_metadata": {
            "description": "The media metadata of the dubbing project.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DubbingMediaMetadata"
              }
            ],
            "title": "Media Metadata"
          },
          "error": {
            "description": "Optional error message if the dubbing project failed.",
            "type": "string",
            "title": "Error"
          }
        },
        "example": {
          "dubbing_id": "21m00Tcm4TlvDq8ikWAM",
          "name": "My Dubbing Project",
          "status": "dubbed",
          "target_languages": [
            "es",
            "fr",
            "de"
          ],
          "media_metadata": {
            "content_type": "video/mp4",
            "duration": 127.5
          }
        },
        "required": [
          "dubbing_id",
          "name",
          "status",
          "target_languages"
        ],
        "title": "DubbingMetadataResponse"
      },
      "DubbingResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "source_language": {
            "type": "string",
            "title": "Source Language"
          },
          "target_languages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Target Languages"
          },
          "background": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "foreground": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "speaker_tracks": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SpeakerTrack"
            },
            "title": "Speaker Tracks"
          },
          "speaker_segments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SpeakerSegment"
            },
            "title": "Speaker Segments"
          }
        },
        "required": [
          "id",
          "version",
          "source_language",
          "target_languages",
          "background",
          "foreground",
          "speaker_tracks",
          "speaker_segments"
        ],
        "title": "DubbingResource"
      },
      "DynamicVariablesConfig": {
        "type": "object",
        "properties": {
          "dynamic_variable_placeholders": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                }
              ]
            },
            "title": "Dynamic Variable Placeholders"
          }
        },
        "title": "DynamicVariablesConfig"
      },
      "EditChapterResponseModel": {
        "type": "object",
        "properties": {
          "chapter": {
            "$ref": "#/components/schemas/ChapterWithContentResponseModel"
          }
        },
        "required": [
          "chapter"
        ],
        "title": "EditChapterResponseModel"
      },
      "EditProjectResponseModel": {
        "type": "object",
        "properties": {
          "project": {
            "$ref": "#/components/schemas/ProjectResponseModel"
          }
        },
        "required": [
          "project"
        ],
        "title": "EditProjectResponseModel"
      },
      "EditVoiceResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the voice edit request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "EditVoiceResponseModel"
      },
      "EditVoiceSettingsResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the voice settings edit request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "EditVoiceSettingsResponseModel"
      },
      "EmbedVariant": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "compact",
          "full",
          "expandable"
        ],
        "title": "EmbedVariant"
      },
      "EmbeddingModelEnum": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "e5_mistral_7b_instruct",
          "gte_Qwen2_15B_instruct"
        ],
        "title": "EmbeddingModelEnum"
      },
      "EvaluationSettings": {
        "description": "Settings to evaluate an agent's performance.\nAgents are evaluated against a set of criteria, with success being defined as meeting some combination of those criteria.",
        "type": "object",
        "properties": {
          "criteria": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromptEvaluationCriteria"
            },
            "title": "Criteria"
          }
        },
        "title": "EvaluationSettings"
      },
      "EvaluationSuccessResult": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "success",
          "failure",
          "unknown"
        ],
        "title": "EvaluationSuccessResult"
      },
      "ExtendedSubscriptionResponseModel": {
        "type": "object",
        "properties": {
          "tier": {
            "description": "The tier of the user's subscription.",
            "type": "string",
            "title": "Tier"
          },
          "character_count": {
            "description": "The number of characters used by the user.",
            "type": "integer",
            "title": "Character Count"
          },
          "character_limit": {
            "description": "The maximum number of characters allowed in the current billing period.",
            "type": "integer",
            "title": "Character Limit"
          },
          "can_extend_character_limit": {
            "description": "Whether the user can extend their character limit.",
            "type": "boolean",
            "title": "Can Extend Character Limit"
          },
          "allowed_to_extend_character_limit": {
            "description": "Whether the user is allowed to extend their character limit.",
            "type": "boolean",
            "title": "Allowed To Extend Character Limit"
          },
          "next_character_count_reset_unix": {
            "description": "The Unix timestamp of the next character count reset.",
            "type": "integer",
            "title": "Next Character Count Reset Unix"
          },
          "voice_slots_used": {
            "description": "The number of voice slots used by the user.",
            "type": "integer",
            "title": "Voice Slots Used"
          },
          "voice_limit": {
            "description": "The maximum number of voice slots allowed for the user.",
            "type": "integer",
            "title": "Voice Limit"
          },
          "max_voice_add_edits": {
            "description": "The maximum number of voice add/edits allowed for the user.",
            "type": "integer",
            "title": "Max Voice Add Edits"
          },
          "voice_add_edit_counter": {
            "description": "The number of voice add/edits used by the user.",
            "type": "integer",
            "title": "Voice Add Edit Counter"
          },
          "professional_voice_limit": {
            "description": "The maximum number of professional voices allowed for the user.",
            "type": "integer",
            "title": "Professional Voice Limit"
          },
          "can_extend_voice_limit": {
            "description": "Whether the user can extend their voice limit.",
            "type": "boolean",
            "title": "Can Extend Voice Limit"
          },
          "can_use_instant_voice_cloning": {
            "description": "Whether the user can use instant voice cloning.",
            "type": "boolean",
            "title": "Can Use Instant Voice Cloning"
          },
          "can_use_professional_voice_cloning": {
            "description": "Whether the user can use professional voice cloning.",
            "type": "boolean",
            "title": "Can Use Professional Voice Cloning"
          },
          "currency": {
            "description": "The currency of the user's subscription.",
            "type": "string",
            "enum": [
              "usd",
              "eur"
            ],
            "title": "Currency"
          },
          "status": {
            "description": "The status of the user's subscription.",
            "type": "string",
            "enum": [
              "trialing",
              "active",
              "incomplete",
              "incomplete_expired",
              "past_due",
              "canceled",
              "unpaid",
              "free"
            ],
            "title": "Status"
          },
          "billing_period": {
            "description": "The billing period of the user's subscription.",
            "type": "string",
            "enum": [
              "monthly_period",
              "annual_period"
            ],
            "title": "Billing Period"
          },
          "character_refresh_period": {
            "description": "The character refresh period of the user's subscription.",
            "type": "string",
            "enum": [
              "monthly_period",
              "annual_period"
            ],
            "title": "Character Refresh Period"
          },
          "next_invoice": {
            "description": "The next invoice for the user.",
            "allOf": [
              {
                "$ref": "#/components/schemas/InvoiceResponseModel"
              }
            ],
            "title": "Next Invoice"
          },
          "has_open_invoices": {
            "description": "Whether the user has open invoices.",
            "type": "boolean",
            "title": "Has Open Invoices"
          }
        },
        "example": {
          "next_invoice": {
            "amount_due_cents": 1000,
            "next_payment_attempt_unix": 1738356858
          },
          "has_open_invoices": false
        },
        "required": [
          "tier",
          "character_count",
          "character_limit",
          "can_extend_character_limit",
          "allowed_to_extend_character_limit",
          "voice_slots_used",
          "voice_limit",
          "voice_add_edit_counter",
          "professional_voice_limit",
          "can_extend_voice_limit",
          "can_use_instant_voice_cloning",
          "can_use_professional_voice_cloning",
          "status",
          "has_open_invoices"
        ],
        "title": "ExtendedSubscriptionResponseModel"
      },
      "FeedbackResponseModel": {
        "type": "object",
        "properties": {
          "thumbs_up": {
            "type": "boolean",
            "title": "Thumbs Up"
          },
          "feedback": {
            "type": "string",
            "title": "Feedback"
          },
          "emotions": {
            "type": "boolean",
            "title": "Emotions"
          },
          "inaccurate_clone": {
            "type": "boolean",
            "title": "Inaccurate Clone"
          },
          "glitches": {
            "type": "boolean",
            "title": "Glitches"
          },
          "audio_quality": {
            "type": "boolean",
            "title": "Audio Quality"
          },
          "other": {
            "type": "boolean",
            "title": "Other"
          },
          "review_status": {
            "type": "string",
            "default": "not_reviewed",
            "title": "Review Status"
          }
        },
        "required": [
          "thumbs_up",
          "feedback",
          "emotions",
          "inaccurate_clone",
          "glitches",
          "audio_quality",
          "other"
        ],
        "title": "FeedbackResponseModel"
      },
      "FineTuningResponseModel": {
        "type": "object",
        "properties": {
          "is_allowed_to_fine_tune": {
            "description": "Whether the user is allowed to fine-tune the voice.",
            "type": "boolean",
            "title": "Is Allowed To Fine Tune"
          },
          "state": {
            "description": "The state of the fine-tuning process for each model.",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "enum": [
                "not_started",
                "queued",
                "fine_tuning",
                "fine_tuned",
                "failed",
                "delayed"
              ]
            },
            "title": "State"
          },
          "verification_failures": {
            "description": "List of verification failures in the fine-tuning process.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Verification Failures"
          },
          "verification_attempts_count": {
            "description": "The number of verification attempts in the fine-tuning process.",
            "type": "integer",
            "title": "Verification Attempts Count"
          },
          "manual_verification_requested": {
            "description": "Whether a manual verification was requested for the fine-tuning process.",
            "type": "boolean",
            "title": "Manual Verification Requested"
          },
          "language": {
            "description": "The language of the fine-tuning process.",
            "type": "string",
            "title": "Language"
          },
          "progress": {
            "description": "The progress of the fine-tuning process.",
            "type": "object",
            "additionalProperties": {
              "type": "number"
            },
            "title": "Progress"
          },
          "message": {
            "description": "The message of the fine-tuning process.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "Message"
          },
          "dataset_duration_seconds": {
            "description": "The duration of the dataset in seconds.",
            "type": "number",
            "title": "Dataset Duration Seconds"
          },
          "verification_attempts": {
            "description": "The number of verification attempts.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerificationAttemptResponseModel"
            },
            "title": "Verification Attempts"
          },
          "slice_ids": {
            "description": "List of slice IDs.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Slice Ids"
          },
          "manual_verification": {
            "description": "The manual verification of the fine-tuning process.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ManualVerificationResponseModel"
              }
            ],
            "title": "Manual Verification"
          },
          "max_verification_attempts": {
            "description": "The maximum number of verification attempts.",
            "type": "integer",
            "title": "Max Verification Attempts"
          },
          "next_max_verification_attempts_reset_unix_ms": {
            "description": "The next maximum verification attempts reset time in Unix milliseconds.",
            "type": "integer",
            "title": "Next Max Verification Attempts Reset Unix Ms"
          }
        },
        "example": {
          "is_allowed_to_fine_tune": true,
          "state": {
            "eleven_multilingual_v2": "fine_tuned"
          },
          "verification_failures": [],
          "verification_attempts_count": 2,
          "manual_verification_requested": false
        },
        "required": [
          "is_allowed_to_fine_tune",
          "state",
          "verification_failures",
          "verification_attempts_count",
          "manual_verification_requested"
        ],
        "title": "FineTuningResponseModel"
      },
      "GetAgentEmbedResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "widget_config": {
            "$ref": "#/components/schemas/WidgetConfigResponseModel"
          }
        },
        "required": [
          "agent_id",
          "widget_config"
        ],
        "title": "GetAgentEmbedResponseModel"
      },
      "GetAgentLinkResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "token": {
            "$ref": "#/components/schemas/ConversationTokenDBModel"
          }
        },
        "required": [
          "agent_id"
        ],
        "title": "GetAgentLinkResponseModel"
      },
      "GetAgentResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "conversation_config": {
            "$ref": "#/components/schemas/ConversationalConfigAPIModel"
          },
          "metadata": {
            "$ref": "#/components/schemas/AgentMetadataResponseModel"
          },
          "platform_settings": {
            "$ref": "#/components/schemas/AgentPlatformSettingsResponseModel"
          },
          "phone_numbers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetPhoneNumberResponseModel"
            },
            "title": "Phone Numbers"
          }
        },
        "required": [
          "agent_id",
          "name",
          "conversation_config",
          "metadata"
        ],
        "title": "GetAgentResponseModel"
      },
      "GetAgentsPageResponseModel": {
        "type": "object",
        "properties": {
          "agents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentSummaryResponseModel"
            },
            "title": "Agents"
          },
          "next_cursor": {
            "type": "string",
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "required": [
          "agents",
          "has_more"
        ],
        "title": "GetAgentsPageResponseModel"
      },
      "GetAudioNativeProjectSettingsResponseModel": {
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Whether the project is enabled.",
            "type": "boolean",
            "title": "Enabled"
          },
          "snapshot_id": {
            "description": "The ID of the latest snapshot of the project.",
            "type": "string",
            "title": "Snapshot Id"
          },
          "settings": {
            "description": "The settings of the project.",
            "allOf": [
              {
                "$ref": "#/components/schemas/AudioNativeProjectSettingsResponseModel"
              }
            ],
            "title": "Settings"
          }
        },
        "example": {
          "enabled": true,
          "snapshot_id": "JBFqnCBsd6RMkjVDRZzb",
          "settings": {
            "title": "My Project",
            "image": "https://example.com/image.jpg",
            "author": "John Doe",
            "small": false,
            "text_color": "#000000",
            "background_color": "#FFFFFF",
            "sessionization": 1,
            "audio_path": "audio/my_project.mp3",
            "audio_url": "https://example.com/audio/my_project.mp3"
          }
        },
        "required": [
          "enabled"
        ],
        "title": "GetAudioNativeProjectSettingsResponseModel"
      },
      "GetChaptersResponseModel": {
        "type": "object",
        "properties": {
          "chapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterResponseModel"
            },
            "title": "Chapters"
          }
        },
        "required": [
          "chapters"
        ],
        "title": "GetChaptersResponseModel"
      },
      "GetConvAISettingsResponseModel": {
        "type": "object",
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          }
        },
        "title": "GetConvAISettingsResponseModel"
      },
      "GetConversationResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id"
          },
          "status": {
            "type": "string",
            "enum": [
              "processing",
              "done"
            ],
            "title": "Status"
          },
          "transcript": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel"
            },
            "title": "Transcript"
          },
          "metadata": {
            "$ref": "#/components/schemas/ConversationHistoryMetadataCommonModel"
          },
          "analysis": {
            "$ref": "#/components/schemas/ConversationHistoryAnalysisCommonModel"
          },
          "conversation_initiation_client_data": {
            "$ref": "#/components/schemas/ConversationInitiationClientData"
          }
        },
        "required": [
          "agent_id",
          "conversation_id",
          "status",
          "transcript",
          "metadata"
        ],
        "title": "GetConversationResponseModel"
      },
      "GetConversationsPageResponseModel": {
        "type": "object",
        "properties": {
          "conversations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConversationSummaryResponseModel"
            },
            "title": "Conversations"
          },
          "next_cursor": {
            "type": "string",
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "required": [
          "conversations",
          "has_more"
        ],
        "title": "GetConversationsPageResponseModel"
      },
      "GetKnowledgeBaseDependentAgentsResponseModel": {
        "type": "object",
        "properties": {
          "agents": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "title": "Agents"
          },
          "next_cursor": {
            "type": "string",
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "required": [
          "agents",
          "has_more"
        ],
        "title": "GetKnowledgeBaseDependentAgentsResponseModel"
      },
      "GetKnowledgeBaseListResponseModel": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetKnowledgeBaseSummaryResponseModel"
            },
            "title": "Documents"
          },
          "next_cursor": {
            "type": "string",
            "title": "Next Cursor"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "required": [
          "documents",
          "has_more"
        ],
        "title": "GetKnowledgeBaseListResponseModel"
      },
      "GetKnowledgeBaseResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "enum": [
              "file",
              "url"
            ],
            "title": "Type"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "extracted_inner_html": {
            "type": "string",
            "title": "Extracted Inner Html"
          },
          "prompt_injectable": {
            "type": "boolean",
            "title": "Prompt Injectable"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "metadata",
          "extracted_inner_html",
          "prompt_injectable",
          "access_level"
        ],
        "title": "GetKnowledgeBaseResponseModel"
      },
      "GetKnowledgeBaseSummaryResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "enum": [
              "file",
              "url"
            ],
            "title": "Type"
          },
          "metadata": {
            "$ref": "#/components/schemas/KnowledgeBaseDocumentMetadataResponseModel"
          },
          "prompt_injectable": {
            "type": "boolean",
            "title": "Prompt Injectable"
          },
          "dependent_agents": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/DependentAvailableAgentIdentifier"
                },
                {
                  "$ref": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "available": "#/components/schemas/DependentAvailableAgentIdentifier",
                  "unknown": "#/components/schemas/DependentUnknownAgentIdentifier"
                }
              }
            },
            "title": "Dependent Agents"
          },
          "access_level": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "metadata",
          "prompt_injectable",
          "dependent_agents",
          "access_level"
        ],
        "title": "GetKnowledgeBaseSummaryResponseModel"
      },
      "GetLibraryVoicesResponseModel": {
        "type": "object",
        "properties": {
          "voices": {
            "description": "The list of shared voices",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryVoiceResponseModel"
            },
            "title": "Voices"
          },
          "has_more": {
            "description": "Whether there are more shared voices in subsequent pages.",
            "type": "boolean",
            "title": "Has More"
          },
          "last_sort_id": {
            "type": "string",
            "title": "Last Sort Id"
          }
        },
        "example": {
          "voices": {
            "public_owner_id": "63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f",
            "voice_id": "sB1b5zUrxQVAFl2PhZFp",
            "date_unix": 1714423232,
            "name": "Alita",
            "accent": "american",
            "gender": "Female",
            "age": "young",
            "descriptive": "calm",
            "use_case": "characters_animation",
            "category": "professional",
            "language": "en",
            "description": "Perfectly calm, neutral and strong voice. Great for a young female protagonist.",
            "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3",
            "usage_character_count_1y": 12852,
            "usage_character_count_7d": 12852,
            "play_api_usage_character_count_1y": 12852,
            "cloned_by_count": 11,
            "rate": 1,
            "free_users_allowed": true,
            "live_moderation_enabled": false,
            "featured": false
          },
          "has_more": false
        },
        "required": [
          "voices",
          "has_more"
        ],
        "title": "GetLibraryVoicesResponseModel"
      },
      "GetPhoneNumberResponseModel": {
        "type": "object",
        "properties": {
          "phone_number": {
            "description": "Phone number",
            "type": "string",
            "title": "Phone Number"
          },
          "provider": {
            "description": "Phone provider",
            "allOf": [
              {
                "$ref": "#/components/schemas/TelephonyProvider"
              }
            ]
          },
          "label": {
            "description": "Label for the phone number",
            "type": "string",
            "title": "Label"
          },
          "phone_number_id": {
            "type": "string",
            "title": "Phone Number Id"
          },
          "assigned_agent": {
            "$ref": "#/components/schemas/PhoneNumberAgentInfo"
          }
        },
        "required": [
          "phone_number",
          "provider",
          "label",
          "phone_number_id"
        ],
        "title": "GetPhoneNumberResponseModel"
      },
      "GetProjectsResponseModel": {
        "type": "object",
        "properties": {
          "projects": {
            "description": "A list of projects with their metadata.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectResponseModel"
            },
            "title": "Projects"
          }
        },
        "example": {
          "projects": [
            {
              "project_id": "aw1NgEzBg83R7vgmiJt6",
              "name": "My Project",
              "create_date_unix": 1714204800,
              "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
              "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
              "default_model_id": "eleven_multilingual_v2",
              "last_conversion_date_unix": 1714204800,
              "can_be_downloaded": true,
              "title": "My Project",
              "author": "John Doe",
              "description": "This is a description of my project.",
              "genres": [
                "Novel",
                "Short Story"
              ],
              "cover_image_url": "https://example.com/cover.jpg",
              "target_audience": "Young Adults",
              "language": "en",
              "content_type": "Novel",
              "original_publication_date": "2025-01-01",
              "mature_content": false,
              "isbn_number": "978-90-274-3964-2",
              "volume_normalization": true,
              "state": "default",
              "access_level": "viewer",
              "fiction": "fiction",
              "quality_check_on": false,
              "quality_check_on_when_bulk_convert": false,
              "creation_meta": {
                "creation_progress": 0.5,
                "status": "pending",
                "type": "blank"
              }
            }
          ]
        },
        "required": [
          "projects"
        ],
        "title": "GetProjectsResponseModel"
      },
      "GetPronunciationDictionariesMetadataResponseModel": {
        "type": "object",
        "properties": {
          "pronunciation_dictionaries": {
            "description": "A list of pronunciation dictionaries and their metadata.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetPronunciationDictionaryMetadataResponseModel"
            },
            "title": "Pronunciation Dictionaries"
          },
          "next_cursor": {
            "description": "The next cursor to use for pagination.",
            "type": "string",
            "title": "Next Cursor"
          },
          "has_more": {
            "description": "Whether there are more pronunciation dictionaries to fetch.",
            "type": "boolean",
            "title": "Has More"
          }
        },
        "example": {
          "pronunciation_dictionaries": [
            {
              "id": "5xM3yVvZQKV0EfqQpLrJ",
              "latest_version_id": "5xM3yVvZQKV0EfqQpLr2",
              "name": "My Dictionary",
              "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
              "creation_time_unix": 1714156800,
              "description": "This is a test dictionary"
            }
          ],
          "next_cursor": "5xM3yVvZQKV0EfqQpLr2",
          "has_more": false
        },
        "required": [
          "pronunciation_dictionaries",
          "has_more"
        ],
        "title": "GetPronunciationDictionariesMetadataResponseModel"
      },
      "GetPronunciationDictionaryMetadataResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the pronunciation dictionary.",
            "type": "string",
            "title": "Id"
          },
          "latest_version_id": {
            "description": "The ID of the latest version of the pronunciation dictionary.",
            "type": "string",
            "title": "Latest Version Id"
          },
          "name": {
            "description": "The name of the pronunciation dictionary.",
            "type": "string",
            "title": "Name"
          },
          "created_by": {
            "description": "The user ID of the creator of the pronunciation dictionary.",
            "type": "string",
            "title": "Created By"
          },
          "creation_time_unix": {
            "description": "The creation time of the pronunciation dictionary in Unix timestamp.",
            "type": "integer",
            "title": "Creation Time Unix"
          },
          "description": {
            "description": "The description of the pronunciation dictionary.",
            "type": "string",
            "title": "Description"
          }
        },
        "example": {
          "id": "5xM3yVvZQKV0EfqQpLrJ",
          "latest_version_id": "5xM3yVvZQKV0EfqQpLr2",
          "name": "My Dictionary",
          "created_by": "ar6633Es2kUjFXBdR1iVc9ztsXl1",
          "creation_time_unix": 1714156800,
          "description": "This is a test dictionary"
        },
        "required": [
          "id",
          "latest_version_id",
          "name",
          "created_by",
          "creation_time_unix"
        ],
        "title": "GetPronunciationDictionaryMetadataResponseModel"
      },
      "GetSpeechHistoryResponseModel": {
        "type": "object",
        "properties": {
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpeechHistoryItemResponseModel"
            },
            "title": "History"
          },
          "last_history_item_id": {
            "type": "string",
            "title": "Last History Item Id"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More"
          }
        },
        "required": [
          "history",
          "last_history_item_id",
          "has_more"
        ],
        "title": "GetSpeechHistoryResponseModel"
      },
      "GetVoicesResponseModel": {
        "type": "object",
        "properties": {
          "voices": {
            "description": "A list of available voices.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoiceResponseModel"
            },
            "title": "Voices"
          }
        },
        "example": {
          "voices": {
            "voice_id": "21m00Tcm4TlvDq8ikWAM",
            "name": "Rachel",
            "category": "professional",
            "fine_tuning": {
              "is_allowed_to_fine_tune": true,
              "state": {
                "eleven_multilingual_v2": "fine_tuned"
              },
              "verification_failures": [],
              "verification_attempts_count": 2,
              "manual_verification_requested": false
            },
            "labels": {
              "accent": "American",
              "description": "expressive",
              "age": "middle-aged",
              "gender": "female",
              "use_case": "social media"
            },
            "description": "A warm, expressive voice with a touch of humor.",
            "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
            "available_for_tiers": [
              "creator",
              "enterprise"
            ],
            "settings": {
              "stability": 1,
              "similarity_boost": 1,
              "style": 0,
              "use_speaker_boost": true,
              "speed": 1
            },
            "sharing": {
              "status": "enabled",
              "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
              "date_unix": 1714204800,
              "whitelisted_emails": [
                "example@example.com"
              ],
              "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
              "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
              "financial_rewards_enabled": true,
              "free_users_allowed": true,
              "live_moderation_enabled": true,
              "rate": 0.05,
              "notice_period": 30,
              "disable_at_unix": 1714204800,
              "voice_mixing_allowed": false,
              "featured": true,
              "category": "professional",
              "reader_app_enabled": true,
              "liked_by_count": 100,
              "cloned_by_count": 50,
              "name": "Rachel",
              "description": "A female voice with a soft and friendly tone.",
              "labels": {
                "accent": "American",
                "gender": "female"
              },
              "review_status": "allowed",
              "enabled_in_library": true,
              "moderation_check": {
                "date_checked_unix": 1714204800,
                "name_value": "Rachel",
                "name_check": true,
                "description_value": "A female voice with a soft and friendly tone.",
                "description_check": true,
                "sample_ids": [
                  "sample1",
                  "sample2"
                ],
                "sample_checks": [
                  0.95,
                  0.98
                ],
                "captcha_ids": [
                  "captcha1",
                  "captcha2"
                ],
                "captcha_checks": [
                  0.95,
                  0.98
                ]
              },
              "reader_restricted_on": [
                {
                  "resource_type": "read",
                  "resource_id": "FCwhRBWXzGAHq8TQ4Fs18"
                }
              ]
            },
            "high_quality_base_model_ids": [
              "eleven_v2_flash",
              "eleven_flash_v2",
              "eleven_turbo_v2_5",
              "eleven_multilingual_v2",
              "eleven_v2_5_flash",
              "eleven_flash_v2_5",
              "eleven_turbo_v2"
            ],
            "verified_languages": {
              "language": "en",
              "model_id": "eleven_turbo_v2_5",
              "accent": "American"
            },
            "voice_verification": {
              "requires_verification": false,
              "is_verified": true,
              "verification_failures": [],
              "verification_attempts_count": 0,
              "language": "en",
              "verification_attempts": [
                {
                  "text": "Hello, how are you?",
                  "date_unix": 1714204800,
                  "accepted": true,
                  "similarity": 0.95,
                  "levenshtein_distance": 2,
                  "recording": {
                    "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                    "mime_type": "audio/mpeg",
                    "size_bytes": 1000000,
                    "upload_date_unix": 1714204800,
                    "transcription": "Hello, how are you?"
                  }
                }
              ]
            },
            "is_owner": false,
            "is_legacy": false,
            "is_mixed": false
          }
        },
        "required": [
          "voices"
        ],
        "title": "GetVoicesResponseModel"
      },
      "GetWorkspaceSecretsResponseModel": {
        "type": "object",
        "properties": {
          "secrets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConvAIWorkspaceStoredSecretConfig"
            },
            "title": "Secrets"
          }
        },
        "required": [
          "secrets"
        ],
        "title": "GetWorkspaceSecretsResponseModel"
      },
      "HTTPValidationError": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail"
          }
        },
        "title": "HTTPValidationError"
      },
      "HistoryAlignmentResponseModel": {
        "type": "object",
        "properties": {
          "characters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Characters"
          },
          "character_start_times_seconds": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Character Start Times Seconds"
          },
          "character_end_times_seconds": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Character End Times Seconds"
          }
        },
        "required": [
          "characters",
          "character_start_times_seconds",
          "character_end_times_seconds"
        ],
        "title": "HistoryAlignmentResponseModel"
      },
      "HistoryAlignmentsResponseModel": {
        "type": "object",
        "properties": {
          "alignment": {
            "$ref": "#/components/schemas/HistoryAlignmentResponseModel"
          },
          "normalized_alignment": {
            "$ref": "#/components/schemas/HistoryAlignmentResponseModel"
          }
        },
        "required": [
          "alignment",
          "normalized_alignment"
        ],
        "title": "HistoryAlignmentsResponseModel"
      },
      "ImageAvatar": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "image",
            "enum": [
              "image"
            ],
            "title": "Type"
          },
          "url": {
            "type": "string",
            "default": "",
            "title": "Url"
          }
        },
        "title": "ImageAvatar"
      },
      "InvoiceResponseModel": {
        "type": "object",
        "properties": {
          "amount_due_cents": {
            "description": "The amount due in cents.",
            "type": "integer",
            "title": "Amount Due Cents"
          },
          "next_payment_attempt_unix": {
            "description": "The Unix timestamp of the next payment attempt.",
            "type": "integer",
            "title": "Next Payment Attempt Unix"
          }
        },
        "example": {
          "amount_due_cents": 1000,
          "next_payment_attempt_unix": 1738356858
        },
        "required": [
          "amount_due_cents",
          "next_payment_attempt_unix"
        ],
        "title": "InvoiceResponseModel"
      },
      "KnowledgeBaseDocumentMetadataResponseModel": {
        "type": "object",
        "properties": {
          "created_at_unix_secs": {
            "type": "integer",
            "title": "Created At Unix Secs"
          },
          "last_updated_at_unix_secs": {
            "type": "integer",
            "title": "Last Updated At Unix Secs"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes"
          }
        },
        "required": [
          "created_at_unix_secs",
          "last_updated_at_unix_secs",
          "size_bytes"
        ],
        "title": "KnowledgeBaseDocumentMetadataResponseModel"
      },
      "KnowledgeBaseLocator": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "file",
              "url"
            ],
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "usage_mode": {
            "default": "auto",
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentUsageModeEnum"
              }
            ]
          }
        },
        "required": [
          "type",
          "name",
          "id"
        ],
        "title": "KnowledgeBaseLocator"
      },
      "LLM": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "gpt-4o-mini",
          "gpt-4o",
          "gpt-4",
          "gpt-4-turbo",
          "gpt-3.5-turbo",
          "gemini-1.5-pro",
          "gemini-1.5-flash",
          "gemini-2.0-flash-001",
          "gemini-2.0-flash-lite",
          "gemini-1.0-pro",
          "claude-3-7-sonnet",
          "claude-3-5-sonnet",
          "claude-3-5-sonnet-v1",
          "claude-3-haiku",
          "grok-beta",
          "custom-llm"
        ],
        "title": "LLM"
      },
      "LanguageAddedResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "required": [
          "version"
        ],
        "title": "LanguageAddedResponse"
      },
      "LanguagePreset": {
        "type": "object",
        "properties": {
          "overrides": {
            "$ref": "#/components/schemas/ConversationConfigClientOverride"
          },
          "first_message_translation": {
            "$ref": "#/components/schemas/LanguagePresetTranslation"
          }
        },
        "required": [
          "overrides"
        ],
        "title": "LanguagePreset"
      },
      "LanguagePresetTranslation": {
        "type": "object",
        "properties": {
          "source_hash": {
            "type": "string",
            "title": "Source Hash"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "required": [
          "source_hash",
          "text"
        ],
        "title": "LanguagePresetTranslation"
      },
      "LanguageResponseModel": {
        "type": "object",
        "properties": {
          "language_id": {
            "description": "The unique identifier of the language.",
            "type": "string",
            "title": "Language Id"
          },
          "name": {
            "description": "The name of the language.",
            "type": "string",
            "title": "Name"
          }
        },
        "example": {
          "language_id": "en",
          "name": "English"
        },
        "required": [
          "language_id",
          "name"
        ],
        "title": "LanguageResponseModel"
      },
      "LibraryVoiceResponseModel": {
        "type": "object",
        "properties": {
          "public_owner_id": {
            "description": "The public owner id of the voice.",
            "type": "string",
            "title": "Public Owner Id"
          },
          "voice_id": {
            "description": "The id of the voice.",
            "type": "string",
            "title": "Voice Id"
          },
          "date_unix": {
            "description": "The date the voice was added to the library in Unix time.",
            "type": "integer",
            "title": "Date Unix"
          },
          "name": {
            "description": "The name of the voice.",
            "type": "string",
            "title": "Name"
          },
          "accent": {
            "description": "The accent of the voice.",
            "type": "string",
            "title": "Accent"
          },
          "gender": {
            "description": "The gender of the voice.",
            "type": "string",
            "title": "Gender"
          },
          "age": {
            "description": "The age of the voice.",
            "type": "string",
            "title": "Age"
          },
          "descriptive": {
            "description": "The descriptive of the voice.",
            "type": "string",
            "title": "Descriptive"
          },
          "use_case": {
            "description": "The use case of the voice.",
            "type": "string",
            "title": "Use Case"
          },
          "category": {
            "description": "The category of the voice.",
            "type": "string",
            "enum": [
              "generated",
              "cloned",
              "premade",
              "professional",
              "famous",
              "high_quality"
            ],
            "title": "Category"
          },
          "language": {
            "description": "The language of the voice.",
            "type": "string",
            "title": "Language"
          },
          "description": {
            "description": "The description of the voice.",
            "type": "string",
            "title": "Description"
          },
          "preview_url": {
            "description": "The preview URL of the voice.",
            "type": "string",
            "title": "Preview Url"
          },
          "usage_character_count_1y": {
            "description": "The usage character count of the voice in the last year.",
            "type": "integer",
            "title": "Usage Character Count 1Y"
          },
          "usage_character_count_7d": {
            "description": "The usage character count of the voice in the last 7 days.",
            "type": "integer",
            "title": "Usage Character Count 7D"
          },
          "play_api_usage_character_count_1y": {
            "description": "The play API usage character count of the voice in the last year.",
            "type": "integer",
            "title": "Play Api Usage Character Count 1Y"
          },
          "cloned_by_count": {
            "description": "The number of times the voice has been cloned.",
            "type": "integer",
            "title": "Cloned By Count"
          },
          "rate": {
            "description": "The rate of the voice.",
            "type": "number",
            "title": "Rate"
          },
          "free_users_allowed": {
            "description": "Whether free users are allowed to use the voice.",
            "type": "boolean",
            "title": "Free Users Allowed"
          },
          "live_moderation_enabled": {
            "description": "Whether live moderation is enabled for the voice.",
            "type": "boolean",
            "title": "Live Moderation Enabled"
          },
          "featured": {
            "description": "Whether the voice is featured.",
            "type": "boolean",
            "title": "Featured"
          },
          "verified_languages": {
            "description": "The verified languages of the voice.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerifiedVoiceLanguageResponseModel"
            },
            "title": "Verified Languages"
          },
          "notice_period": {
            "description": "The notice period of the voice.",
            "type": "integer",
            "title": "Notice Period"
          },
          "instagram_username": {
            "description": "The Instagram username of the voice.",
            "type": "string",
            "title": "Instagram Username"
          },
          "twitter_username": {
            "description": "The Twitter username of the voice.",
            "type": "string",
            "title": "Twitter Username"
          },
          "youtube_username": {
            "description": "The YouTube username of the voice.",
            "type": "string",
            "title": "Youtube Username"
          },
          "tiktok_username": {
            "description": "The TikTok username of the voice.",
            "type": "string",
            "title": "Tiktok Username"
          },
          "image_url": {
            "description": "The image URL of the voice.",
            "type": "string",
            "title": "Image Url"
          },
          "is_added_by_user": {
            "description": "Whether the voice was added by the user.",
            "type": "boolean",
            "title": "Is Added By User"
          }
        },
        "example": {
          "public_owner_id": "63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f",
          "voice_id": "sB1b5zUrxQVAFl2PhZFp",
          "date_unix": 1714423232,
          "name": "Alita",
          "accent": "american",
          "gender": "Female",
          "age": "young",
          "descriptive": "calm",
          "use_case": "characters_animation",
          "category": "professional",
          "language": "en",
          "description": "Perfectly calm, neutral and strong voice. Great for a young female protagonist.",
          "preview_url": "https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3",
          "usage_character_count_1y": 12852,
          "usage_character_count_7d": 12852,
          "play_api_usage_character_count_1y": 12852,
          "cloned_by_count": 11,
          "rate": 1,
          "free_users_allowed": true,
          "live_moderation_enabled": false,
          "featured": false
        },
        "required": [
          "public_owner_id",
          "voice_id",
          "date_unix",
          "name",
          "accent",
          "gender",
          "age",
          "descriptive",
          "use_case",
          "category",
          "usage_character_count_1y",
          "usage_character_count_7d",
          "play_api_usage_character_count_1y",
          "cloned_by_count",
          "free_users_allowed",
          "live_moderation_enabled",
          "featured"
        ],
        "title": "LibraryVoiceResponseModel"
      },
      "LiteralJsonSchemaProperty": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "boolean",
              "string",
              "integer",
              "number"
            ],
            "title": "Type"
          },
          "description": {
            "type": "string",
            "default": "",
            "title": "Description"
          },
          "dynamic_variable": {
            "type": "string",
            "default": "",
            "title": "Dynamic Variable"
          }
        },
        "required": [
          "type"
        ],
        "title": "LiteralJsonSchemaProperty"
      },
      "ManualVerificationFileResponseModel": {
        "type": "object",
        "properties": {
          "file_id": {
            "description": "The ID of the file.",
            "type": "string",
            "title": "File Id"
          },
          "file_name": {
            "description": "The name of the file.",
            "type": "string",
            "title": "File Name"
          },
          "mime_type": {
            "description": "The MIME type of the file.",
            "type": "string",
            "title": "Mime Type"
          },
          "size_bytes": {
            "description": "The size of the file in bytes.",
            "type": "integer",
            "title": "Size Bytes"
          },
          "upload_date_unix": {
            "description": "The date of the file in Unix time.",
            "type": "integer",
            "title": "Upload Date Unix"
          }
        },
        "example": {
          "file_id": "CwhRBWXzGAHq8TQ4Fs18",
          "file_name": "file.mp3",
          "mime_type": "audio/mpeg",
          "size_bytes": 1000000,
          "upload_date_unix": 1714204800
        },
        "required": [
          "file_id",
          "file_name",
          "mime_type",
          "size_bytes",
          "upload_date_unix"
        ],
        "title": "ManualVerificationFileResponseModel"
      },
      "ManualVerificationResponseModel": {
        "type": "object",
        "properties": {
          "extra_text": {
            "description": "The extra text of the manual verification.",
            "type": "string",
            "title": "Extra Text"
          },
          "request_time_unix": {
            "description": "The date of the manual verification in Unix time.",
            "type": "integer",
            "title": "Request Time Unix"
          },
          "files": {
            "description": "The files of the manual verification.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ManualVerificationFileResponseModel"
            },
            "title": "Files"
          }
        },
        "example": {
          "extra_text": "Please verify the voice is that of a female.",
          "request_time_unix": 1714204800,
          "files": [
            {
              "file_id": "CwhRBWXzGAHq8TQ4Fs18",
              "file_name": "file.mp3",
              "mime_type": "audio/mpeg",
              "size_bytes": 1000000,
              "upload_date_unix": 1714204800
            }
          ]
        },
        "required": [
          "extra_text",
          "request_time_unix",
          "files"
        ],
        "title": "ManualVerificationResponseModel"
      },
      "ModelRatesResponseModel": {
        "type": "object",
        "properties": {
          "character_cost_multiplier": {
            "description": "The cost multiplier for characters.",
            "type": "number",
            "title": "Character Cost Multiplier"
          }
        },
        "example": {
          "character_cost_multiplier": 1
        },
        "required": [
          "character_cost_multiplier"
        ],
        "title": "ModelRatesResponseModel"
      },
      "ModelResponseModel": {
        "type": "object",
        "properties": {
          "model_id": {
            "description": "The unique identifier of the model.",
            "type": "string",
            "title": "Model Id"
          },
          "name": {
            "description": "The name of the model.",
            "type": "string",
            "title": "Name"
          },
          "can_be_finetuned": {
            "description": "Whether the model can be finetuned.",
            "type": "boolean",
            "title": "Can Be Finetuned"
          },
          "can_do_text_to_speech": {
            "description": "Whether the model can do text-to-speech.",
            "type": "boolean",
            "title": "Can Do Text To Speech"
          },
          "can_do_voice_conversion": {
            "description": "Whether the model can do voice conversion.",
            "type": "boolean",
            "title": "Can Do Voice Conversion"
          },
          "can_use_style": {
            "description": "Whether the model can use style.",
            "type": "boolean",
            "title": "Can Use Style"
          },
          "can_use_speaker_boost": {
            "description": "Whether the model can use speaker boost.",
            "type": "boolean",
            "title": "Can Use Speaker Boost"
          },
          "serves_pro_voices": {
            "description": "Whether the model serves pro voices.",
            "type": "boolean",
            "title": "Serves Pro Voices"
          },
          "token_cost_factor": {
            "description": "The cost factor for the model.",
            "type": "number",
            "title": "Token Cost Factor"
          },
          "description": {
            "description": "The description of the model.",
            "type": "string",
            "title": "Description"
          },
          "requires_alpha_access": {
            "description": "Whether the model requires alpha access.",
            "type": "boolean",
            "title": "Requires Alpha Access"
          },
          "max_characters_request_free_user": {
            "description": "The maximum number of characters that can be requested by a free user.",
            "type": "integer",
            "title": "Max Characters Request Free User"
          },
          "max_characters_request_subscribed_user": {
            "description": "The maximum number of characters that can be requested by a subscribed user.",
            "type": "integer",
            "title": "Max Characters Request Subscribed User"
          },
          "maximum_text_length_per_request": {
            "description": "The maximum length of text that can be requested for this model.",
            "type": "integer",
            "title": "Maximum Text Length Per Request"
          },
          "languages": {
            "description": "The languages supported by the model.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageResponseModel"
            },
            "title": "Languages"
          },
          "model_rates": {
            "description": "The rates for the model.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModelRatesResponseModel"
              }
            ],
            "title": "Model Rates"
          },
          "concurrency_group": {
            "description": "The concurrency group for the model.",
            "type": "string",
            "enum": [
              "standard",
              "turbo"
            ],
            "title": "Concurrency Group"
          }
        },
        "example": {
          "model_id": "eleven_multilingual_v2",
          "name": "Eleven Multilingual v2",
          "can_be_finetuned": true,
          "can_do_text_to_speech": true,
          "can_do_voice_conversion": true,
          "can_use_style": true,
          "can_use_speaker_boost": true,
          "serves_pro_voices": false,
          "token_cost_factor": 1,
          "description": "Our state of the art multilingual speech synthesis model, able to generate life-like speech in 29 languages.",
          "requires_alpha_access": false,
          "max_characters_request_free_user": 2500,
          "max_characters_request_subscribed_user": 5000,
          "maximum_text_length_per_request": 1000000,
          "languages": [
            {
              "language_id": "en",
              "name": "English"
            }
          ],
          "model_rates": {
            "character_cost_multiplier": 1
          },
          "concurrency_group": "standard"
        },
        "required": [
          "model_id",
          "name",
          "can_be_finetuned",
          "can_do_text_to_speech",
          "can_do_voice_conversion",
          "can_use_style",
          "can_use_speaker_boost",
          "serves_pro_voices",
          "token_cost_factor",
          "description",
          "requires_alpha_access",
          "max_characters_request_free_user",
          "max_characters_request_subscribed_user",
          "maximum_text_length_per_request",
          "languages",
          "model_rates",
          "concurrency_group"
        ],
        "title": "ModelResponseModel"
      },
      "ModerationStatusResponseModel": {
        "type": "object",
        "properties": {
          "is_in_probation": {
            "description": "Whether the user is in probation.",
            "type": "boolean",
            "title": "Is In Probation"
          },
          "enterprise_check_nogo_voice": {
            "description": "Whether the user's enterprise check nogo voice is enabled.",
            "type": "boolean",
            "title": "Enterprise Check Nogo Voice"
          },
          "enterprise_check_block_nogo_voice": {
            "description": "Whether the user's enterprise check block nogo voice is enabled.",
            "type": "boolean",
            "title": "Enterprise Check Block Nogo Voice"
          },
          "never_live_moderate": {
            "description": "Whether the user's never live moderate is enabled.",
            "type": "boolean",
            "title": "Never Live Moderate"
          },
          "nogo_voice_similar_voice_upload_count": {
            "description": "The number of similar voice uploads that have been blocked.",
            "type": "integer",
            "title": "Nogo Voice Similar Voice Upload Count"
          },
          "enterprise_background_moderation_enabled": {
            "description": "Whether the user's enterprise background moderation is enabled.",
            "type": "boolean",
            "title": "Enterprise Background Moderation Enabled"
          },
          "safety_status": {
            "description": "The safety status of the user.",
            "type": "string",
            "enum": [
              "appeal_approved",
              "appeal_denied",
              "false_positive"
            ],
            "title": "Safety Status"
          },
          "warning_status": {
            "description": "The warning status of the user.",
            "type": "string",
            "enum": [
              "warning",
              "warning_cleared"
            ],
            "title": "Warning Status"
          },
          "on_watchlist": {
            "description": "Whether the user is on the watchlist.",
            "type": "boolean",
            "title": "On Watchlist"
          }
        },
        "example": {
          "is_in_probation": false,
          "enterprise_check_nogo_voice": false,
          "enterprise_check_block_nogo_voice": false,
          "never_live_moderate": false,
          "nogo_voice_similar_voice_upload_count": 0,
          "enterprise_background_moderation_enabled": false,
          "on_watchlist": false
        },
        "required": [
          "is_in_probation",
          "enterprise_check_nogo_voice",
          "enterprise_check_block_nogo_voice",
          "never_live_moderate",
          "nogo_voice_similar_voice_upload_count",
          "enterprise_background_moderation_enabled",
          "on_watchlist"
        ],
        "title": "ModerationStatusResponseModel"
      },
      "ObjectJsonSchemaProperty": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "object",
            "enum": [
              "object"
            ],
            "title": "Type"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
                },
                {
                  "$ref": "#/components/schemas/ObjectJsonSchemaProperty"
                },
                {
                  "$ref": "#/components/schemas/ArrayJsonSchemaProperty"
                }
              ]
            },
            "title": "Properties"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required"
          },
          "description": {
            "type": "string",
            "default": "",
            "title": "Description"
          }
        },
        "additionalProperties": false,
        "title": "ObjectJsonSchemaProperty"
      },
      "OrbAvatar": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "orb",
            "enum": [
              "orb"
            ],
            "title": "Type"
          },
          "color_1": {
            "type": "string",
            "default": "#2792dc",
            "title": "Color 1"
          },
          "color_2": {
            "type": "string",
            "default": "#9ce6e6",
            "title": "Color 2"
          }
        },
        "title": "OrbAvatar"
      },
      "PatchConvAISettingsRequest": {
        "type": "object",
        "properties": {
          "conversation_initiation_client_data_webhook": {
            "$ref": "#/components/schemas/ConversationInitiationClientDataWebhook"
          },
          "webhooks": {
            "$ref": "#/components/schemas/ConvAIWebhooks"
          }
        },
        "title": "PatchConvAISettingsRequest"
      },
      "PhoneNumberAgentInfo": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "agent_name": {
            "type": "string",
            "title": "Agent Name"
          }
        },
        "required": [
          "agent_id",
          "agent_name"
        ],
        "title": "PhoneNumberAgentInfo"
      },
      "PodcastBulletinMode": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of podcast to create.",
            "type": "string",
            "enum": [
              "bulletin"
            ],
            "title": "Type"
          },
          "bulletin": {
            "description": "The voice settings for the bulletin.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PodcastBulletinModeData"
              }
            ],
            "title": "Bulletin"
          }
        },
        "example": {
          "type": "bulletin",
          "bulletin": {
            "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
          }
        },
        "required": [
          "type",
          "bulletin"
        ],
        "title": "PodcastBulletinMode"
      },
      "PodcastBulletinModeData": {
        "type": "object",
        "properties": {
          "host_voice_id": {
            "description": "The ID of the host voice.",
            "type": "string",
            "title": "Host Voice Id"
          }
        },
        "example": {
          "host_voice_id": "aw1NgEzBg83R7vgmiJt6"
        },
        "required": [
          "host_voice_id"
        ],
        "title": "PodcastBulletinModeData"
      },
      "PodcastConversationMode": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of podcast to create.",
            "type": "string",
            "enum": [
              "conversation"
            ],
            "title": "Type"
          },
          "conversation": {
            "description": "The voice settings for the conversation.",
            "allOf": [
              {
                "$ref": "#/components/schemas/PodcastConversationModeData"
              }
            ],
            "title": "Conversation"
          }
        },
        "example": {
          "type": "conversation",
          "conversation": {
            "host_voice_id": "aw1NgEzBg83R7vgmiJt6",
            "guest_voice_id": "aw1NgEzBg83R7vgmiJt7"
          }
        },
        "required": [
          "type",
          "conversation"
        ],
        "title": "PodcastConversationMode"
      },
      "PodcastConversationModeData": {
        "type": "object",
        "properties": {
          "host_voice_id": {
            "description": "The ID of the host voice.",
            "type": "string",
            "title": "Host Voice Id"
          },
          "guest_voice_id": {
            "description": "The ID of the guest voice.",
            "type": "string",
            "title": "Guest Voice Id"
          }
        },
        "example": {
          "host_voice_id": "aw1NgEzBg83R7vgmiJt6",
          "guest_voice_id": "aw1NgEzBg83R7vgmiJt7"
        },
        "required": [
          "host_voice_id",
          "guest_voice_id"
        ],
        "title": "PodcastConversationModeData"
      },
      "PodcastProjectResponseModel": {
        "type": "object",
        "properties": {
          "project": {
            "description": "The project associated with the created podcast.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectResponseModel"
              }
            ],
            "title": "Project"
          }
        },
        "required": [
          "project"
        ],
        "title": "PodcastProjectResponseModel"
      },
      "PodcastTextSource": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of source to create.",
            "type": "string",
            "enum": [
              "text"
            ],
            "title": "Type"
          },
          "text": {
            "description": "The text to create the podcast from.",
            "type": "string",
            "title": "Text"
          }
        },
        "example": {
          "type": "text",
          "text": "This is a test podcast."
        },
        "required": [
          "type",
          "text"
        ],
        "title": "PodcastTextSource"
      },
      "PodcastURLSource": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of source to create.",
            "type": "string",
            "enum": [
              "url"
            ],
            "title": "Type"
          },
          "url": {
            "description": "The URL to create the podcast from.",
            "type": "string",
            "title": "Url"
          }
        },
        "example": {
          "type": "url",
          "url": "https://www.example.com"
        },
        "required": [
          "type",
          "url"
        ],
        "title": "PodcastURLSource"
      },
      "PostAgentAvatarResponseModel": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          },
          "avatar_url": {
            "type": "string",
            "title": "Avatar Url"
          }
        },
        "required": [
          "agent_id"
        ],
        "title": "PostAgentAvatarResponseModel"
      },
      "PostWorkspaceSecretRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "new"
            ],
            "title": "Type"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "required": [
          "type",
          "name",
          "value"
        ],
        "title": "PostWorkspaceSecretRequest"
      },
      "PostWorkspaceSecretResponseModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "stored"
            ],
            "title": "Type"
          },
          "secret_id": {
            "type": "string",
            "title": "Secret Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "required": [
          "type",
          "secret_id",
          "name"
        ],
        "title": "PostWorkspaceSecretResponseModel"
      },
      "PrivacyConfig": {
        "type": "object",
        "properties": {
          "record_voice": {
            "type": "boolean",
            "default": true,
            "title": "Record Voice"
          },
          "retention_days": {
            "type": "integer",
            "default": -1,
            "title": "Retention Days"
          },
          "delete_transcript_and_pii": {
            "type": "boolean",
            "default": false,
            "title": "Delete Transcript And Pii"
          },
          "delete_audio": {
            "type": "boolean",
            "default": false,
            "title": "Delete Audio"
          },
          "apply_to_existing_conversations": {
            "type": "boolean",
            "default": false,
            "title": "Apply To Existing Conversations"
          }
        },
        "title": "PrivacyConfig"
      },
      "ProfilePageResponseModel": {
        "type": "object",
        "properties": {
          "handle": {
            "type": "string",
            "title": "Handle"
          },
          "public_user_id": {
            "type": "string",
            "title": "Public User Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "bio": {
            "type": "string",
            "title": "Bio"
          },
          "profile_picture": {
            "type": "string",
            "title": "Profile Picture"
          }
        },
        "required": [
          "handle",
          "public_user_id",
          "name",
          "bio",
          "profile_picture"
        ],
        "title": "ProfilePageResponseModel"
      },
      "ProjectCreationMetaResponseModel": {
        "type": "object",
        "properties": {
          "creation_progress": {
            "description": "The progress of the project creation.",
            "type": "number",
            "title": "Creation Progress"
          },
          "status": {
            "description": "The status of the project creation action.",
            "type": "string",
            "enum": [
              "pending",
              "creating",
              "finished",
              "failed"
            ],
            "title": "Status"
          },
          "type": {
            "description": "The type of the project creation action.",
            "type": "string",
            "enum": [
              "blank",
              "generate_podcast",
              "auto_assign_voices"
            ],
            "title": "Type"
          }
        },
        "example": {
          "creation_progress": 0.5,
          "status": "pending",
          "type": "blank"
        },
        "required": [
          "creation_progress",
          "status",
          "type"
        ],
        "title": "ProjectCreationMetaResponseModel"
      },
      "ProjectExtendedResponseModel": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "name": {
            "description": "The name of the project.",
            "type": "string",
            "title": "Name"
          },
          "create_date_unix": {
            "description": "The creation date of the project.",
            "type": "integer",
            "title": "Create Date Unix"
          },
          "default_title_voice_id": {
            "description": "The default title voice ID.",
            "type": "string",
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "description": "The default paragraph voice ID.",
            "type": "string",
            "title": "Default Paragraph Voice Id"
          },
          "default_model_id": {
            "description": "The default model ID.",
            "type": "string",
            "title": "Default Model Id"
          },
          "last_conversion_date_unix": {
            "description": "The last conversion date of the project.",
            "type": "integer",
            "title": "Last Conversion Date Unix"
          },
          "can_be_downloaded": {
            "description": "Whether the project can be downloaded.",
            "type": "boolean",
            "title": "Can Be Downloaded"
          },
          "title": {
            "description": "The title of the project.",
            "type": "string",
            "title": "Title"
          },
          "author": {
            "description": "The author of the project.",
            "type": "string",
            "title": "Author"
          },
          "description": {
            "description": "The description of the project.",
            "type": "string",
            "title": "Description"
          },
          "genres": {
            "description": "List of genres of the project.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Genres"
          },
          "cover_image_url": {
            "description": "The cover image URL of the project.",
            "type": "string",
            "title": "Cover Image Url"
          },
          "target_audience": {
            "description": "The target audience of the project.",
            "type": "string",
            "enum": [
              "children",
              "young adult",
              "adult",
              "all ages"
            ],
            "title": "Target Audience"
          },
          "language": {
            "description": "Two-letter language code (ISO 639-1) of the language of the project.",
            "type": "string",
            "title": "Language"
          },
          "content_type": {
            "description": "The content type of the project, e.g. 'Novel' or 'Short Story'",
            "type": "string",
            "title": "Content Type"
          },
          "original_publication_date": {
            "description": "The original publication date of the project.",
            "type": "string",
            "title": "Original Publication Date"
          },
          "mature_content": {
            "description": "Whether the project contains mature content.",
            "type": "boolean",
            "title": "Mature Content"
          },
          "isbn_number": {
            "description": "The ISBN number of the project.",
            "type": "string",
            "title": "Isbn Number"
          },
          "volume_normalization": {
            "description": "Whether the project uses volume normalization.",
            "type": "boolean",
            "title": "Volume Normalization"
          },
          "state": {
            "description": "The state of the project.",
            "type": "string",
            "enum": [
              "creating",
              "default",
              "converting",
              "in_queue"
            ],
            "title": "State"
          },
          "access_level": {
            "description": "The access level of the project.",
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          },
          "fiction": {
            "description": "Whether the project is fiction.",
            "type": "string",
            "enum": [
              "fiction",
              "non-fiction"
            ],
            "title": "Fiction"
          },
          "quality_check_on": {
            "description": "Whether quality check is enabled for this project.",
            "type": "boolean",
            "deprecated": true,
            "title": "Quality Check On"
          },
          "quality_check_on_when_bulk_convert": {
            "description": "Whether quality check is enabled on the project when bulk converting.",
            "type": "boolean",
            "deprecated": true,
            "title": "Quality Check On When Bulk Convert"
          },
          "creation_meta": {
            "description": "The creation meta of the project.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectCreationMetaResponseModel"
              }
            ],
            "title": "Creation Meta"
          },
          "source_type": {
            "description": "The source type of the project.",
            "type": "string",
            "enum": [
              "blank",
              "book",
              "article",
              "genfm"
            ],
            "title": "Source Type"
          },
          "quality_preset": {
            "description": "The quality preset level of the project.",
            "type": "string",
            "enum": [
              "standard",
              "high",
              "highest",
              "ultra",
              "ultra_lossless"
            ],
            "title": "Quality Preset"
          },
          "chapters": {
            "description": "List of chapters of the project and their metadata.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterResponseModel"
            },
            "title": "Chapters"
          },
          "pronunciation_dictionary_versions": {
            "description": "List of pronunciation dictionary versions of the project and their metadata.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PronunciationDictionaryVersionResponseModel"
            },
            "title": "Pronunciation Dictionary Versions"
          },
          "apply_text_normalization": {
            "description": "Whether text normalization is applied to the project.",
            "type": "string",
            "enum": [
              "auto",
              "on",
              "off",
              "apply_english"
            ],
            "title": "Apply Text Normalization"
          },
          "experimental": {
            "description": "Experimental features of the project.",
            "type": "object",
            "title": "Experimental"
          }
        },
        "example": {
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "name": "My Project",
          "create_date_unix": 1714204800,
          "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "default_model_id": "eleven_multilingual_v2",
          "last_conversion_date_unix": 1714204800,
          "can_be_downloaded": true,
          "title": "My Project",
          "author": "John Doe",
          "description": "This is a description of my project.",
          "genres": [
            "Novel",
            "Short Story"
          ],
          "cover_image_url": "https://example.com/cover.jpg",
          "target_audience": "Young Adults",
          "language": "en",
          "content_type": "Novel",
          "original_publication_date": "2025-01-01",
          "mature_content": false,
          "isbn_number": "978-90-274-3964-2",
          "volume_normalization": true,
          "state": "default",
          "access_level": "viewer",
          "fiction": "fiction",
          "quality_check_on": false,
          "quality_check_on_when_bulk_convert": false,
          "creation_meta": {
            "creation_progress": 0.5,
            "status": "pending",
            "type": "blank"
          }
        },
        "required": [
          "project_id",
          "name",
          "create_date_unix",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id",
          "can_be_downloaded",
          "volume_normalization",
          "state",
          "access_level",
          "quality_check_on",
          "quality_check_on_when_bulk_convert",
          "quality_preset",
          "chapters",
          "pronunciation_dictionary_versions",
          "apply_text_normalization",
          "experimental"
        ],
        "title": "ProjectExtendedResponseModel"
      },
      "ProjectResponseModel": {
        "type": "object",
        "properties": {
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "name": {
            "description": "The name of the project.",
            "type": "string",
            "title": "Name"
          },
          "create_date_unix": {
            "description": "The creation date of the project.",
            "type": "integer",
            "title": "Create Date Unix"
          },
          "default_title_voice_id": {
            "description": "The default title voice ID.",
            "type": "string",
            "title": "Default Title Voice Id"
          },
          "default_paragraph_voice_id": {
            "description": "The default paragraph voice ID.",
            "type": "string",
            "title": "Default Paragraph Voice Id"
          },
          "default_model_id": {
            "description": "The default model ID.",
            "type": "string",
            "title": "Default Model Id"
          },
          "last_conversion_date_unix": {
            "description": "The last conversion date of the project.",
            "type": "integer",
            "title": "Last Conversion Date Unix"
          },
          "can_be_downloaded": {
            "description": "Whether the project can be downloaded.",
            "type": "boolean",
            "title": "Can Be Downloaded"
          },
          "title": {
            "description": "The title of the project.",
            "type": "string",
            "title": "Title"
          },
          "author": {
            "description": "The author of the project.",
            "type": "string",
            "title": "Author"
          },
          "description": {
            "description": "The description of the project.",
            "type": "string",
            "title": "Description"
          },
          "genres": {
            "description": "List of genres of the project.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Genres"
          },
          "cover_image_url": {
            "description": "The cover image URL of the project.",
            "type": "string",
            "title": "Cover Image Url"
          },
          "target_audience": {
            "description": "The target audience of the project.",
            "type": "string",
            "enum": [
              "children",
              "young adult",
              "adult",
              "all ages"
            ],
            "title": "Target Audience"
          },
          "language": {
            "description": "Two-letter language code (ISO 639-1) of the language of the project.",
            "type": "string",
            "title": "Language"
          },
          "content_type": {
            "description": "The content type of the project, e.g. 'Novel' or 'Short Story'",
            "type": "string",
            "title": "Content Type"
          },
          "original_publication_date": {
            "description": "The original publication date of the project.",
            "type": "string",
            "title": "Original Publication Date"
          },
          "mature_content": {
            "description": "Whether the project contains mature content.",
            "type": "boolean",
            "title": "Mature Content"
          },
          "isbn_number": {
            "description": "The ISBN number of the project.",
            "type": "string",
            "title": "Isbn Number"
          },
          "volume_normalization": {
            "description": "Whether the project uses volume normalization.",
            "type": "boolean",
            "title": "Volume Normalization"
          },
          "state": {
            "description": "The state of the project.",
            "type": "string",
            "enum": [
              "creating",
              "default",
              "converting",
              "in_queue"
            ],
            "title": "State"
          },
          "access_level": {
            "description": "The access level of the project.",
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Access Level"
          },
          "fiction": {
            "description": "Whether the project is fiction.",
            "type": "string",
            "enum": [
              "fiction",
              "non-fiction"
            ],
            "title": "Fiction"
          },
          "quality_check_on": {
            "description": "Whether quality check is enabled for this project.",
            "type": "boolean",
            "deprecated": true,
            "title": "Quality Check On"
          },
          "quality_check_on_when_bulk_convert": {
            "description": "Whether quality check is enabled on the project when bulk converting.",
            "type": "boolean",
            "deprecated": true,
            "title": "Quality Check On When Bulk Convert"
          },
          "creation_meta": {
            "description": "The creation meta of the project.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectCreationMetaResponseModel"
              }
            ],
            "title": "Creation Meta"
          },
          "source_type": {
            "description": "The source type of the project.",
            "type": "string",
            "enum": [
              "blank",
              "book",
              "article",
              "genfm"
            ],
            "title": "Source Type"
          }
        },
        "example": {
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "name": "My Project",
          "create_date_unix": 1714204800,
          "default_title_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "default_paragraph_voice_id": "JBFqnCBsd6RMkjVDRZzb",
          "default_model_id": "eleven_multilingual_v2",
          "last_conversion_date_unix": 1714204800,
          "can_be_downloaded": true,
          "title": "My Project",
          "author": "John Doe",
          "description": "This is a description of my project.",
          "genres": [
            "Novel",
            "Short Story"
          ],
          "cover_image_url": "https://example.com/cover.jpg",
          "target_audience": "Young Adults",
          "language": "en",
          "content_type": "Novel",
          "original_publication_date": "2025-01-01",
          "mature_content": false,
          "isbn_number": "978-90-274-3964-2",
          "volume_normalization": true,
          "state": "default",
          "access_level": "viewer",
          "fiction": "fiction",
          "quality_check_on": false,
          "quality_check_on_when_bulk_convert": false,
          "creation_meta": {
            "creation_progress": 0.5,
            "status": "pending",
            "type": "blank"
          }
        },
        "required": [
          "project_id",
          "name",
          "create_date_unix",
          "default_title_voice_id",
          "default_paragraph_voice_id",
          "default_model_id",
          "can_be_downloaded",
          "volume_normalization",
          "state",
          "access_level",
          "quality_check_on",
          "quality_check_on_when_bulk_convert"
        ],
        "title": "ProjectResponseModel"
      },
      "ProjectSnapshotExtendedResponseModel": {
        "type": "object",
        "properties": {
          "project_snapshot_id": {
            "description": "The ID of the project snapshot.",
            "type": "string",
            "title": "Project Snapshot Id"
          },
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "created_at_unix": {
            "description": "The creation date of the project snapshot.",
            "type": "integer",
            "title": "Created At Unix"
          },
          "name": {
            "description": "The name of the project snapshot.",
            "type": "string",
            "title": "Name"
          },
          "audio_upload": {
            "description": "The audio upload of the project snapshot.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectSnapshotUploadResponseModel"
              }
            ],
            "title": "Audio Upload"
          },
          "zip_upload": {
            "description": "The zip upload of the project snapshot.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectSnapshotUploadResponseModel"
              }
            ],
            "title": "Zip Upload"
          },
          "character_alignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CharacterAlignmentModel"
            },
            "title": "Character Alignments"
          }
        },
        "example": {
          "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "created_at_unix": 1714204800,
          "name": "My Project Snapshot",
          "audio_upload": {
            "status": "success",
            "acx_volume_normalization": true
          },
          "zip_upload": {
            "status": "success",
            "acx_volume_normalization": true
          }
        },
        "required": [
          "project_snapshot_id",
          "project_id",
          "created_at_unix",
          "name",
          "character_alignments"
        ],
        "title": "ProjectSnapshotExtendedResponseModel"
      },
      "ProjectSnapshotResponseModel": {
        "type": "object",
        "properties": {
          "project_snapshot_id": {
            "description": "The ID of the project snapshot.",
            "type": "string",
            "title": "Project Snapshot Id"
          },
          "project_id": {
            "description": "The ID of the project.",
            "type": "string",
            "title": "Project Id"
          },
          "created_at_unix": {
            "description": "The creation date of the project snapshot.",
            "type": "integer",
            "title": "Created At Unix"
          },
          "name": {
            "description": "The name of the project snapshot.",
            "type": "string",
            "title": "Name"
          },
          "audio_upload": {
            "description": "The audio upload of the project snapshot.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectSnapshotUploadResponseModel"
              }
            ],
            "title": "Audio Upload"
          },
          "zip_upload": {
            "description": "The zip upload of the project snapshot.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ProjectSnapshotUploadResponseModel"
              }
            ],
            "title": "Zip Upload"
          }
        },
        "example": {
          "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6",
          "project_id": "aw1NgEzBg83R7vgmiJt6",
          "created_at_unix": 1714204800,
          "name": "My Project Snapshot",
          "audio_upload": {
            "status": "success",
            "acx_volume_normalization": true
          },
          "zip_upload": {
            "status": "success",
            "acx_volume_normalization": true
          }
        },
        "required": [
          "project_snapshot_id",
          "project_id",
          "created_at_unix",
          "name"
        ],
        "title": "ProjectSnapshotResponseModel"
      },
      "ProjectSnapshotUploadResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the snapshot upload.",
            "type": "string",
            "enum": [
              "success",
              "in_queue",
              "pending",
              "failed"
            ],
            "title": "Status"
          },
          "acx_volume_normalization": {
            "description": "Whether volume normalization was applied to the snapshot.",
            "type": "boolean",
            "title": "Acx Volume Normalization"
          }
        },
        "example": {
          "status": "success",
          "acx_volume_normalization": true
        },
        "required": [
          "status"
        ],
        "title": "ProjectSnapshotUploadResponseModel"
      },
      "ProjectSnapshotsResponseModel": {
        "type": "object",
        "properties": {
          "snapshots": {
            "description": "List of project snapshots.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectSnapshotResponseModel"
            },
            "title": "Snapshots"
          }
        },
        "example": {
          "snapshots": [
            {
              "project_snapshot_id": "aw1NgEzBg83R7vgmiJt6",
              "project_id": "aw1NgEzBg83R7vgmiJt6",
              "created_at_unix": 1714204800,
              "name": "My Project Snapshot",
              "audio_upload": {
                "status": "success",
                "acx_volume_normalization": true
              },
              "zip_upload": {
                "status": "success",
                "acx_volume_normalization": true
              }
            }
          ]
        },
        "required": [
          "snapshots"
        ],
        "title": "ProjectSnapshotsResponseModel"
      },
      "PromptAgent": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "default": "",
            "title": "Prompt"
          },
          "llm": {
            "default": "gemini-1.5-flash",
            "allOf": [
              {
                "$ref": "#/components/schemas/LLM"
              }
            ]
          },
          "temperature": {
            "type": "number",
            "default": 0,
            "title": "Temperature"
          },
          "max_tokens": {
            "type": "integer",
            "default": -1,
            "title": "Max Tokens"
          },
          "tools": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/WebhookToolConfig"
                },
                {
                  "$ref": "#/components/schemas/ClientToolConfig"
                },
                {
                  "$ref": "#/components/schemas/SystemToolConfig"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "webhook": "#/components/schemas/WebhookToolConfig",
                  "client": "#/components/schemas/ClientToolConfig",
                  "system": "#/components/schemas/SystemToolConfig"
                }
              }
            },
            "title": "Tools"
          },
          "tool_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Tool Ids"
          },
          "knowledge_base": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KnowledgeBaseLocator"
            },
            "title": "Knowledge Base"
          },
          "custom_llm": {
            "$ref": "#/components/schemas/CustomLLM"
          },
          "rag": {
            "$ref": "#/components/schemas/RagConfig"
          }
        },
        "title": "PromptAgent"
      },
      "PromptAgentOverride": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "default": "",
            "title": "Prompt"
          }
        },
        "title": "PromptAgentOverride"
      },
      "PromptAgentOverrideConfig": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "boolean",
            "default": false,
            "title": "Prompt"
          }
        },
        "title": "PromptAgentOverrideConfig"
      },
      "PromptEvaluationCriteria": {
        "description": "An evaluation using the transcript and a prompt for a yes/no achieved answer",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "default": "prompt",
            "enum": [
              "prompt"
            ],
            "const": "prompt",
            "title": "Type"
          },
          "conversation_goal_prompt": {
            "type": "string",
            "maxLength": 800,
            "title": "Conversation Goal Prompt"
          },
          "use_knowledge_base": {
            "type": "boolean",
            "default": false,
            "title": "Use Knowledge Base"
          }
        },
        "required": [
          "id",
          "conversation_goal_prompt"
        ],
        "title": "PromptEvaluationCriteria"
      },
      "PronunciationDictionaryAliasRuleRequestModel": {
        "type": "object",
        "properties": {
          "string_to_replace": {
            "description": "The string to replace. Must be a non-empty string.",
            "type": "string",
            "title": "String To Replace"
          },
          "type": {
            "description": "The type of the rule.",
            "type": "string",
            "enum": [
              "alias"
            ],
            "title": "Type"
          },
          "alias": {
            "description": "The alias for the string to be replaced.",
            "type": "string",
            "title": "Alias"
          }
        },
        "example": {
          "type": "alias",
          "string_to_replace": "Thailand",
          "alias": "tie-land"
        },
        "required": [
          "string_to_replace",
          "type",
          "alias"
        ],
        "title": "PronunciationDictionaryAliasRuleRequestModel"
      },
      "PronunciationDictionaryPhonemeRuleRequestModel": {
        "type": "object",
        "properties": {
          "string_to_replace": {
            "description": "The string to replace. Must be a non-empty string.",
            "type": "string",
            "title": "String To Replace"
          },
          "type": {
            "description": "The type of the rule.",
            "type": "string",
            "enum": [
              "phoneme"
            ],
            "title": "Type"
          },
          "phoneme": {
            "description": "The phoneme rule.",
            "type": "string",
            "title": "Phoneme"
          },
          "alphabet": {
            "description": "The alphabet to use with the phoneme rule.",
            "type": "string",
            "title": "Alphabet"
          }
        },
        "example": {
          "type": "phoneme",
          "string_to_replace": "Thailand",
          "phoneme": "/ˈtaɪ.lænd/",
          "alphabet": "ipa"
        },
        "required": [
          "string_to_replace",
          "type",
          "phoneme",
          "alphabet"
        ],
        "title": "PronunciationDictionaryPhonemeRuleRequestModel"
      },
      "PronunciationDictionaryVersionLocatorDBModel": {
        "type": "object",
        "properties": {
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "version_id": {
            "type": "string",
            "title": "Version Id"
          }
        },
        "required": [
          "pronunciation_dictionary_id",
          "version_id"
        ],
        "title": "PronunciationDictionaryVersionLocatorDBModel"
      },
      "PronunciationDictionaryVersionResponseModel": {
        "type": "object",
        "properties": {
          "version_id": {
            "type": "string",
            "title": "Version Id"
          },
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "dictionary_name": {
            "type": "string",
            "title": "Dictionary Name"
          },
          "version_name": {
            "type": "string",
            "title": "Version Name"
          },
          "created_by": {
            "type": "string",
            "title": "Created By"
          },
          "creation_time_unix": {
            "type": "integer",
            "title": "Creation Time Unix"
          }
        },
        "required": [
          "version_id",
          "pronunciation_dictionary_id",
          "dictionary_name",
          "version_name",
          "created_by",
          "creation_time_unix"
        ],
        "title": "PronunciationDictionaryVersionResponseModel"
      },
      "PydanticPronunciationDictionaryVersionLocator": {
        "description": "A locator for other documents to be able to reference a specific dictionary and it's version.\nThis is a pydantic version of PronunciationDictionaryVersionLocatorDBModel.\nRequired to ensure compat with the rest of the agent data models.",
        "type": "object",
        "properties": {
          "pronunciation_dictionary_id": {
            "type": "string",
            "title": "Pronunciation Dictionary Id"
          },
          "version_id": {
            "type": "string",
            "title": "Version Id"
          }
        },
        "required": [
          "pronunciation_dictionary_id",
          "version_id"
        ],
        "title": "PydanticPronunciationDictionaryVersionLocator"
      },
      "QueryParamsJsonSchema": {
        "type": "object",
        "properties": {
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "title": "Properties"
          },
          "required": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Required"
          }
        },
        "additionalProperties": false,
        "required": [
          "properties"
        ],
        "title": "QueryParamsJsonSchema"
      },
      "RAGIndexRequestModel": {
        "type": "object",
        "properties": {
          "model": {
            "$ref": "#/components/schemas/EmbeddingModelEnum"
          }
        },
        "required": [
          "model"
        ],
        "title": "RAGIndexRequestModel"
      },
      "RAGIndexResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/RAGIndexStatus"
          },
          "progress_percentage": {
            "type": "number",
            "title": "Progress Percentage"
          }
        },
        "required": [
          "status",
          "progress_percentage"
        ],
        "title": "RAGIndexResponseModel"
      },
      "RAGIndexStatus": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "created",
          "processing",
          "failed",
          "succeeded"
        ],
        "title": "RAGIndexStatus"
      },
      "RagConfig": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": false,
            "title": "Enabled"
          },
          "embedding_model": {
            "default": "e5_mistral_7b_instruct",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmbeddingModelEnum"
              }
            ]
          },
          "max_vector_distance": {
            "description": "Maximum vector distance of retrieved chunks.",
            "type": "number",
            "example": 0.5,
            "default": 0.6,
            "exclusiveMaximum": 1,
            "exclusiveMinimum": 0,
            "title": "Max Vector Distance"
          },
          "max_documents_length": {
            "description": "Maximum total length of document chunks retrieved from RAG.",
            "type": "integer",
            "example": "50000",
            "default": 50000,
            "exclusiveMaximum": 10000000,
            "exclusiveMinimum": 0,
            "title": "Max Documents Length"
          }
        },
        "title": "RagConfig"
      },
      "ReaderResourceResponseModel": {
        "type": "object",
        "properties": {
          "resource_type": {
            "description": "The type of resource.",
            "type": "string",
            "enum": [
              "read",
              "collection"
            ],
            "title": "Resource Type"
          },
          "resource_id": {
            "description": "The ID of the resource.",
            "type": "string",
            "title": "Resource Id"
          }
        },
        "example": {
          "resource_type": "read",
          "resource_id": "FCwhRBWXzGAHq8TQ4Fs18"
        },
        "required": [
          "resource_type",
          "resource_id"
        ],
        "title": "ReaderResourceResponseModel"
      },
      "RecordingResponseModel": {
        "type": "object",
        "properties": {
          "recording_id": {
            "description": "The ID of the recording.",
            "type": "string",
            "title": "Recording Id"
          },
          "mime_type": {
            "description": "The MIME type of the recording.",
            "type": "string",
            "title": "Mime Type"
          },
          "size_bytes": {
            "description": "The size of the recording in bytes.",
            "type": "integer",
            "title": "Size Bytes"
          },
          "upload_date_unix": {
            "description": "The date of the recording in Unix time.",
            "type": "integer",
            "title": "Upload Date Unix"
          },
          "transcription": {
            "description": "The transcription of the recording.",
            "type": "string",
            "title": "Transcription"
          }
        },
        "example": {
          "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
          "mime_type": "audio/mpeg",
          "size_bytes": 1000000,
          "upload_date_unix": 1714204800,
          "transcription": "Hello, how are you?"
        },
        "required": [
          "recording_id",
          "mime_type",
          "size_bytes",
          "upload_date_unix",
          "transcription"
        ],
        "title": "RecordingResponseModel"
      },
      "RemovePronunciationDictionaryRulesResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The ID of the pronunciation dictionary.",
            "type": "string",
            "title": "Id"
          },
          "version_id": {
            "description": "The version ID of the pronunciation dictionary.",
            "type": "string",
            "title": "Version Id"
          }
        },
        "example": {
          "id": "5xM3yVvZQKV0EfqQpLrJ",
          "version_id": "5xM3yVvZQKV0EfqQpLr2"
        },
        "required": [
          "id",
          "version_id"
        ],
        "title": "RemovePronunciationDictionaryRulesResponseModel"
      },
      "ResourceAccessInfo": {
        "type": "object",
        "properties": {
          "is_creator": {
            "type": "boolean",
            "title": "Is Creator"
          },
          "creator_name": {
            "type": "string",
            "title": "Creator Name"
          },
          "creator_email": {
            "type": "string",
            "title": "Creator Email"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "editor",
              "viewer"
            ],
            "title": "Role"
          }
        },
        "required": [
          "is_creator",
          "creator_name",
          "creator_email",
          "role"
        ],
        "title": "ResourceAccessInfo"
      },
      "SafetyCommonModel": {
        "description": "Safety object that has the information of safety evaluations based on used voice.",
        "type": "object",
        "properties": {
          "ivc": {
            "$ref": "#/components/schemas/SafetyEvaluation"
          },
          "non_ivc": {
            "$ref": "#/components/schemas/SafetyEvaluation"
          }
        },
        "title": "SafetyCommonModel"
      },
      "SafetyEvaluation": {
        "description": "Safety evaluation of the agent. Prompt and first message is taken into account.\nThe unsafe reason is provided from the evaluation",
        "type": "object",
        "properties": {
          "is_unsafe": {
            "type": "boolean",
            "default": false,
            "title": "Is Unsafe"
          },
          "llm_reason": {
            "type": "string",
            "default": "",
            "title": "Llm Reason"
          },
          "safety_prompt_version": {
            "type": "integer",
            "default": 0,
            "title": "Safety Prompt Version"
          },
          "matched_rule_id": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SafetyRule"
            }
          }
        },
        "title": "SafetyEvaluation"
      },
      "SafetyResponseModel": {
        "type": "object",
        "properties": {
          "is_blocked_ivc": {
            "type": "boolean",
            "default": false,
            "title": "Is Blocked Ivc"
          },
          "is_blocked_non_ivc": {
            "type": "boolean",
            "default": false,
            "title": "Is Blocked Non Ivc"
          }
        },
        "title": "SafetyResponseModel"
      },
      "SafetyRule": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "sexual_minors",
          "forget_moderation",
          "extremism",
          "scam_fraud",
          "political",
          "self_harm",
          "illegal_distribution_medical",
          "sexual_adults",
          "unknown"
        ],
        "title": "SafetyRule"
      },
      "SampleResponseModel": {
        "type": "object",
        "properties": {
          "sample_id": {
            "description": "The ID of the sample.",
            "type": "string",
            "title": "Sample Id"
          },
          "file_name": {
            "description": "The name of the sample file.",
            "type": "string",
            "title": "File Name"
          },
          "mime_type": {
            "description": "The MIME type of the sample file.",
            "type": "string",
            "title": "Mime Type"
          },
          "size_bytes": {
            "description": "The size of the sample file in bytes.",
            "type": "integer",
            "title": "Size Bytes"
          },
          "hash": {
            "description": "The hash of the sample file.",
            "type": "string",
            "title": "Hash"
          }
        },
        "example": {
          "sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "file_name": "sample.mp3",
          "mime_type": "audio/mpeg",
          "size_bytes": 1000000,
          "hash": "1234567890"
        },
        "required": [
          "sample_id",
          "file_name",
          "mime_type",
          "size_bytes",
          "hash"
        ],
        "title": "SampleResponseModel"
      },
      "SecretDependencyType": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "conversation_initiation_webhook"
        ],
        "title": "SecretDependencyType"
      },
      "SegmentCreatePayload": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "required": [
          "start_time",
          "end_time"
        ],
        "title": "SegmentCreatePayload"
      },
      "SegmentCreateResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          },
          "new_segment": {
            "type": "string",
            "title": "New Segment"
          }
        },
        "required": [
          "version",
          "new_segment"
        ],
        "title": "SegmentCreateResponse"
      },
      "SegmentDeleteResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "required": [
          "version"
        ],
        "title": "SegmentDeleteResponse"
      },
      "SegmentDubResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "required": [
          "version"
        ],
        "title": "SegmentDubResponse"
      },
      "SegmentTranscriptionResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "required": [
          "version"
        ],
        "title": "SegmentTranscriptionResponse"
      },
      "SegmentTranslationResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "required": [
          "version"
        ],
        "title": "SegmentTranslationResponse"
      },
      "SegmentUpdatePayload": {
        "type": "object",
        "properties": {
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "title": "SegmentUpdatePayload"
      },
      "SegmentUpdateResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "integer",
            "title": "Version"
          }
        },
        "required": [
          "version"
        ],
        "title": "SegmentUpdateResponse"
      },
      "SpeakerSegment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "start_time": {
            "type": "number",
            "title": "Start Time"
          },
          "end_time": {
            "type": "number",
            "title": "End Time"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "dubs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DubbedSegment"
            },
            "title": "Dubs"
          }
        },
        "required": [
          "id",
          "start_time",
          "end_time",
          "text",
          "dubs"
        ],
        "title": "SpeakerSegment"
      },
      "SpeakerTrack": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "media_ref": {
            "$ref": "#/components/schemas/DubbingMediaReference"
          },
          "speaker_name": {
            "type": "string",
            "title": "Speaker Name"
          },
          "segments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Segments"
          }
        },
        "required": [
          "id",
          "media_ref",
          "speaker_name",
          "segments"
        ],
        "title": "SpeakerTrack"
      },
      "SpeechHistoryItemResponseModel": {
        "type": "object",
        "properties": {
          "history_item_id": {
            "type": "string",
            "title": "History Item Id"
          },
          "request_id": {
            "type": "string",
            "title": "Request Id"
          },
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id"
          },
          "voice_name": {
            "type": "string",
            "title": "Voice Name"
          },
          "voice_category": {
            "type": "string",
            "enum": [
              "premade",
              "cloned",
              "generated",
              "professional"
            ],
            "title": "Voice Category"
          },
          "text": {
            "type": "string",
            "title": "Text"
          },
          "date_unix": {
            "type": "integer",
            "title": "Date Unix"
          },
          "character_count_change_from": {
            "type": "integer",
            "title": "Character Count Change From"
          },
          "character_count_change_to": {
            "type": "integer",
            "title": "Character Count Change To"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "state": {
            "type": "string",
            "enum": [
              "created",
              "deleted",
              "processing"
            ],
            "title": "State"
          },
          "settings": {
            "type": "object",
            "title": "Settings"
          },
          "feedback": {
            "$ref": "#/components/schemas/FeedbackResponseModel"
          },
          "share_link_id": {
            "type": "string",
            "title": "Share Link Id"
          },
          "source": {
            "type": "string",
            "enum": [
              "TTS",
              "STS"
            ],
            "title": "Source"
          },
          "alignments": {
            "$ref": "#/components/schemas/HistoryAlignmentsResponseModel"
          }
        },
        "required": [
          "history_item_id",
          "request_id",
          "voice_id",
          "model_id",
          "voice_name",
          "voice_category",
          "text",
          "date_unix",
          "character_count_change_from",
          "character_count_change_to",
          "content_type",
          "state",
          "settings",
          "feedback",
          "share_link_id",
          "source"
        ],
        "title": "SpeechHistoryItemResponseModel"
      },
      "SpeechToTextCharacterResponseModel": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The character that was transcribed.",
            "type": "string",
            "title": "Text"
          },
          "start": {
            "description": "The start time of the character in seconds.",
            "type": "number",
            "title": "Start"
          },
          "end": {
            "description": "The end time of the character in seconds.",
            "type": "number",
            "title": "End"
          }
        },
        "example": {
          "char": "H",
          "start": 0,
          "end": 0.1
        },
        "required": [
          "text"
        ],
        "title": "SpeechToTextCharacterResponseModel"
      },
      "SpeechToTextChunkResponseModel": {
        "description": "Chunk-level detail of the transcription with timing information.",
        "type": "object",
        "properties": {
          "language_code": {
            "description": "The detected language code (e.g. 'eng' for English).",
            "type": "string",
            "title": "Language Code"
          },
          "language_probability": {
            "description": "The confidence score of the language detection (0 to 1).",
            "type": "number",
            "title": "Language Probability"
          },
          "text": {
            "description": "The raw text of the transcription.",
            "type": "string",
            "title": "Text"
          },
          "words": {
            "description": "List of words with their timing information.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpeechToTextWordResponseModel"
            },
            "title": "Words"
          }
        },
        "example": {
          "language_code": "en",
          "language_probability": 0.98,
          "text": "Hello world!",
          "words": [
            {
              "text": "Hello",
              "start": 0,
              "end": 0.5,
              "type": "word",
              "speaker_id": "speaker_1"
            },
            {
              "text": " ",
              "start": 0.5,
              "end": 0.5,
              "type": "spacing",
              "speaker_id": "speaker_1"
            },
            {
              "text": "world!",
              "start": 0.5,
              "end": 1.2,
              "type": "word",
              "speaker_id": "speaker_1"
            }
          ]
        },
        "required": [
          "language_code",
          "language_probability",
          "text",
          "words"
        ],
        "title": "SpeechToTextChunkResponseModel"
      },
      "SpeechToTextWordResponseModel": {
        "description": "Word-level detail of the transcription with timing information.",
        "type": "object",
        "properties": {
          "text": {
            "description": "The word or sound that was transcribed.",
            "type": "string",
            "title": "Text"
          },
          "start": {
            "description": "The start time of the word or sound in seconds.",
            "type": "number",
            "title": "Start"
          },
          "end": {
            "description": "The end time of the word or sound in seconds.",
            "type": "number",
            "title": "End"
          },
          "type": {
            "description": "The type of the word or sound. 'audio_event' is used for non-word sounds like laughter or footsteps.",
            "type": "string",
            "enum": [
              "word",
              "spacing",
              "audio_event"
            ],
            "title": "Type"
          },
          "speaker_id": {
            "description": "Unique identifier for the speaker of this word.",
            "type": "string",
            "title": "Speaker Id"
          },
          "characters": {
            "description": "The characters that make up the word and their timing information.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpeechToTextCharacterResponseModel"
            },
            "title": "Characters"
          }
        },
        "example": {
          "text": "Hello",
          "start": 0,
          "end": 0.5,
          "type": "word",
          "speaker_id": "speaker_1",
          "characters": [
            {
              "char": "H",
              "start": 0,
              "end": 0.1
            },
            {
              "char": "e",
              "start": 0.1,
              "end": 0.2
            },
            {
              "char": "l",
              "start": 0.2,
              "end": 0.3
            },
            {
              "char": "l",
              "start": 0.3,
              "end": 0.4
            },
            {
              "char": "o",
              "start": 0.4,
              "end": 0.5
            }
          ]
        },
        "required": [
          "text",
          "type"
        ],
        "title": "SpeechToTextWordResponseModel"
      },
      "StreamingAudioChunkWithTimestampsResponseModel": {
        "type": "object",
        "properties": {
          "audio_base64": {
            "description": "Base64 encoded audio data",
            "type": "string",
            "title": "Audio Base64"
          },
          "alignment": {
            "description": "Timestamp information for each character in the original text",
            "allOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              }
            ],
            "title": "Alignment"
          },
          "normalized_alignment": {
            "description": "Timestamp information for each character in the normalized text",
            "allOf": [
              {
                "$ref": "#/components/schemas/CharacterAlignmentResponseModel"
              }
            ],
            "title": "Normalized Alignment"
          }
        },
        "example": {
          "audio_base64": "base64_encoded_audio_chunk",
          "alignment": {
            "characters": [
              "H",
              "e"
            ],
            "character_start_times_seconds": [
              0,
              0.1
            ],
            "character_end_times_seconds": [
              0.1,
              0.2
            ]
          },
          "normalized_alignment": {
            "characters": [
              "H",
              "e"
            ],
            "character_start_times_seconds": [
              0,
              0.1
            ],
            "character_end_times_seconds": [
              0.1,
              0.2
            ]
          }
        },
        "required": [
          "audio_base64"
        ],
        "title": "StreamingAudioChunkWithTimestampsResponseModel"
      },
      "SubscriptionExtrasResponseModel": {
        "type": "object",
        "properties": {
          "concurrency": {
            "description": "The concurrency of the user.",
            "type": "integer",
            "title": "Concurrency"
          },
          "convai_concurrency": {
            "description": "The Convai concurrency of the user.",
            "type": "integer",
            "title": "Convai Concurrency"
          },
          "convai_chars_per_minute": {
            "description": "The Convai characters per minute of the user.",
            "type": "integer",
            "title": "Convai Chars Per Minute"
          },
          "convai_asr_chars_per_minute": {
            "description": "The Convai ASR characters per minute of the user.",
            "type": "integer",
            "title": "Convai Asr Chars Per Minute"
          },
          "force_logging_disabled": {
            "description": "Whether the user's logging is disabled.",
            "type": "boolean",
            "title": "Force Logging Disabled"
          },
          "can_request_manual_pro_voice_verification": {
            "description": "Whether the user can request manual pro voice verification.",
            "type": "boolean",
            "title": "Can Request Manual Pro Voice Verification"
          },
          "can_bypass_voice_captcha": {
            "description": "Whether the user can bypass the voice captcha.",
            "type": "boolean",
            "title": "Can Bypass Voice Captcha"
          },
          "moderation": {
            "description": "The moderation status of the user.",
            "allOf": [
              {
                "$ref": "#/components/schemas/ModerationStatusResponseModel"
              }
            ],
            "title": "Moderation"
          },
          "unused_characters_rolled_over_from_previous_period": {
            "description": "The unused characters rolled over from the previous period.",
            "type": "integer",
            "title": "Unused Characters Rolled Over From Previous Period"
          },
          "overused_characters_rolled_over_from_previous_period": {
            "description": "The overused characters rolled over from the previous period.",
            "type": "integer",
            "title": "Overused Characters Rolled Over From Previous Period"
          },
          "usage": {
            "description": "Data on how the subscription is being used.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionUsageResponseModel"
              }
            ],
            "title": "Usage"
          }
        },
        "example": {
          "concurrency": 10,
          "convai_concurrency": 10,
          "convai_chars_per_minute": 1000,
          "convai_asr_chars_per_minute": 1000,
          "force_logging_disabled": false,
          "can_request_manual_pro_voice_verification": true,
          "can_bypass_voice_captcha": true,
          "moderation": {
            "is_in_probation": false,
            "enterprise_check_nogo_voice": false,
            "enterprise_check_block_nogo_voice": false,
            "never_live_moderate": false,
            "nogo_voice_similar_voice_upload_count": 0,
            "enterprise_background_moderation_enabled": false,
            "on_watchlist": false
          },
          "unused_characters_rolled_over_from_previous_period": 1000,
          "overused_characters_rolled_over_from_previous_period": 1000,
          "usage": {
            "rollover_credits_quota": 1000,
            "subscription_cycle_credits_quota": 1000,
            "manually_gifted_credits_quota": 1000,
            "rollover_credits_used": 1000,
            "subscription_cycle_credits_used": 1000,
            "manually_gifted_credits_used": 1000,
            "paid_usage_based_credits_used": 1000,
            "actual_reported_credits": 1000
          }
        },
        "required": [
          "concurrency",
          "convai_concurrency",
          "force_logging_disabled",
          "can_request_manual_pro_voice_verification",
          "can_bypass_voice_captcha",
          "moderation"
        ],
        "title": "SubscriptionExtrasResponseModel"
      },
      "SubscriptionResponseModel": {
        "type": "object",
        "properties": {
          "tier": {
            "description": "The tier of the user's subscription.",
            "type": "string",
            "title": "Tier"
          },
          "character_count": {
            "description": "The number of characters used by the user.",
            "type": "integer",
            "title": "Character Count"
          },
          "character_limit": {
            "description": "The maximum number of characters allowed in the current billing period.",
            "type": "integer",
            "title": "Character Limit"
          },
          "can_extend_character_limit": {
            "description": "Whether the user can extend their character limit.",
            "type": "boolean",
            "title": "Can Extend Character Limit"
          },
          "allowed_to_extend_character_limit": {
            "description": "Whether the user is allowed to extend their character limit.",
            "type": "boolean",
            "title": "Allowed To Extend Character Limit"
          },
          "next_character_count_reset_unix": {
            "description": "The Unix timestamp of the next character count reset.",
            "type": "integer",
            "title": "Next Character Count Reset Unix"
          },
          "voice_slots_used": {
            "description": "The number of voice slots used by the user.",
            "type": "integer",
            "title": "Voice Slots Used"
          },
          "voice_limit": {
            "description": "The maximum number of voice slots allowed for the user.",
            "type": "integer",
            "title": "Voice Limit"
          },
          "max_voice_add_edits": {
            "description": "The maximum number of voice add/edits allowed for the user.",
            "type": "integer",
            "title": "Max Voice Add Edits"
          },
          "voice_add_edit_counter": {
            "description": "The number of voice add/edits used by the user.",
            "type": "integer",
            "title": "Voice Add Edit Counter"
          },
          "professional_voice_limit": {
            "description": "The maximum number of professional voices allowed for the user.",
            "type": "integer",
            "title": "Professional Voice Limit"
          },
          "can_extend_voice_limit": {
            "description": "Whether the user can extend their voice limit.",
            "type": "boolean",
            "title": "Can Extend Voice Limit"
          },
          "can_use_instant_voice_cloning": {
            "description": "Whether the user can use instant voice cloning.",
            "type": "boolean",
            "title": "Can Use Instant Voice Cloning"
          },
          "can_use_professional_voice_cloning": {
            "description": "Whether the user can use professional voice cloning.",
            "type": "boolean",
            "title": "Can Use Professional Voice Cloning"
          },
          "currency": {
            "description": "The currency of the user's subscription.",
            "type": "string",
            "enum": [
              "usd",
              "eur"
            ],
            "title": "Currency"
          },
          "status": {
            "description": "The status of the user's subscription.",
            "type": "string",
            "enum": [
              "trialing",
              "active",
              "incomplete",
              "incomplete_expired",
              "past_due",
              "canceled",
              "unpaid",
              "free"
            ],
            "title": "Status"
          },
          "billing_period": {
            "description": "The billing period of the user's subscription.",
            "type": "string",
            "enum": [
              "monthly_period",
              "annual_period"
            ],
            "title": "Billing Period"
          },
          "character_refresh_period": {
            "description": "The character refresh period of the user's subscription.",
            "type": "string",
            "enum": [
              "monthly_period",
              "annual_period"
            ],
            "title": "Character Refresh Period"
          }
        },
        "example": {
          "tier": "trial",
          "character_count": 17231,
          "character_limit": 100000,
          "can_extend_character_limit": false,
          "allowed_to_extend_character_limit": false,
          "next_character_count_reset_unix": 1738356858,
          "voice_slots_used": 1,
          "voice_limit": 120,
          "max_voice_add_edits": 230,
          "voice_add_edit_counter": 212,
          "professional_voice_limit": 1,
          "can_extend_voice_limit": false,
          "can_use_instant_voice_cloning": true,
          "can_use_professional_voice_cloning": true,
          "currency": "usd",
          "status": "free",
          "billing_period": "monthly_period",
          "character_refresh_period": "monthly_period"
        },
        "required": [
          "tier",
          "character_count",
          "character_limit",
          "can_extend_character_limit",
          "allowed_to_extend_character_limit",
          "voice_slots_used",
          "voice_limit",
          "voice_add_edit_counter",
          "professional_voice_limit",
          "can_extend_voice_limit",
          "can_use_instant_voice_cloning",
          "can_use_professional_voice_cloning",
          "status"
        ],
        "title": "SubscriptionResponseModel"
      },
      "SubscriptionUsageResponseModel": {
        "type": "object",
        "properties": {
          "rollover_credits_quota": {
            "description": "The rollover credits quota.",
            "type": "integer",
            "title": "Rollover Credits Quota"
          },
          "subscription_cycle_credits_quota": {
            "description": "The subscription cycle credits quota.",
            "type": "integer",
            "title": "Subscription Cycle Credits Quota"
          },
          "manually_gifted_credits_quota": {
            "description": "The manually gifted credits quota.",
            "type": "integer",
            "title": "Manually Gifted Credits Quota"
          },
          "rollover_credits_used": {
            "description": "The rollover credits used.",
            "type": "integer",
            "title": "Rollover Credits Used"
          },
          "subscription_cycle_credits_used": {
            "description": "The subscription cycle credits used.",
            "type": "integer",
            "title": "Subscription Cycle Credits Used"
          },
          "manually_gifted_credits_used": {
            "description": "The manually gifted credits used.",
            "type": "integer",
            "title": "Manually Gifted Credits Used"
          },
          "paid_usage_based_credits_used": {
            "description": "The paid usage based credits used.",
            "type": "integer",
            "title": "Paid Usage Based Credits Used"
          },
          "actual_reported_credits": {
            "description": "The actual reported credits.",
            "type": "integer",
            "title": "Actual Reported Credits"
          }
        },
        "example": {
          "rollover_credits_quota": 1000,
          "subscription_cycle_credits_quota": 1000,
          "manually_gifted_credits_quota": 1000,
          "rollover_credits_used": 1000,
          "subscription_cycle_credits_used": 1000,
          "manually_gifted_credits_used": 1000,
          "paid_usage_based_credits_used": 1000,
          "actual_reported_credits": 1000
        },
        "required": [
          "rollover_credits_quota",
          "subscription_cycle_credits_quota",
          "manually_gifted_credits_quota",
          "rollover_credits_used",
          "subscription_cycle_credits_used",
          "manually_gifted_credits_used",
          "paid_usage_based_credits_used",
          "actual_reported_credits"
        ],
        "title": "SubscriptionUsageResponseModel"
      },
      "SystemToolConfig": {
        "description": "A system tool is a tool that is used to call a system method in the server",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "system"
            ],
            "title": "Type"
          },
          "name": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "required": [
          "type",
          "name",
          "description"
        ],
        "title": "SystemToolConfig"
      },
      "TTSConversationalConfig": {
        "type": "object",
        "properties": {
          "model_id": {
            "default": "eleven_turbo_v2",
            "allOf": [
              {
                "$ref": "#/components/schemas/TTSConversationalModel"
              }
            ]
          },
          "voice_id": {
            "type": "string",
            "default": "cjVigY5qzO86Huf0OWal",
            "title": "Voice Id"
          },
          "agent_output_audio_format": {
            "default": "pcm_16000",
            "allOf": [
              {
                "$ref": "#/components/schemas/TTSOutputFormat"
              }
            ]
          },
          "optimize_streaming_latency": {
            "default": 3,
            "allOf": [
              {
                "$ref": "#/components/schemas/TTSOptimizeStreamingLatency"
              }
            ]
          },
          "stability": {
            "type": "number",
            "default": 0.5,
            "maximum": 1,
            "minimum": 0,
            "title": "Stability"
          },
          "speed": {
            "type": "number",
            "default": 1,
            "maximum": 1.2,
            "minimum": 0.7,
            "title": "Speed"
          },
          "similarity_boost": {
            "type": "number",
            "default": 0.8,
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Boost"
          },
          "pronunciation_dictionary_locators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PydanticPronunciationDictionaryVersionLocator"
            },
            "title": "Pronunciation Dictionary Locators"
          }
        },
        "title": "TTSConversationalConfig"
      },
      "TTSConversationalConfigOverride": {
        "type": "object",
        "properties": {
          "voice_id": {
            "type": "string",
            "title": "Voice Id"
          }
        },
        "title": "TTSConversationalConfigOverride"
      },
      "TTSConversationalConfigOverrideConfig": {
        "type": "object",
        "properties": {
          "voice_id": {
            "type": "boolean",
            "default": false,
            "title": "Voice Id"
          }
        },
        "title": "TTSConversationalConfigOverrideConfig"
      },
      "TTSConversationalModel": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "eleven_turbo_v2",
          "eleven_turbo_v2_5",
          "eleven_flash_v2",
          "eleven_flash_v2_5"
        ],
        "title": "TTSConversationalModel"
      },
      "TTSOptimizeStreamingLatency": {
        "description": "An enumeration.",
        "type": "integer",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "title": "TTSOptimizeStreamingLatency"
      },
      "TTSOutputFormat": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "pcm_8000",
          "pcm_16000",
          "pcm_22050",
          "pcm_24000",
          "pcm_44100",
          "ulaw_8000"
        ],
        "title": "TTSOutputFormat"
      },
      "TelephonyProvider": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "twilio"
        ],
        "title": "TelephonyProvider"
      },
      "TurnConfig": {
        "type": "object",
        "properties": {
          "turn_timeout": {
            "type": "number",
            "default": 7,
            "title": "Turn Timeout"
          },
          "mode": {
            "default": "turn",
            "allOf": [
              {
                "$ref": "#/components/schemas/TurnMode"
              }
            ]
          }
        },
        "title": "TurnConfig"
      },
      "TurnMode": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "silence",
          "turn"
        ],
        "title": "TurnMode"
      },
      "URLAvatar": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "default": "url",
            "enum": [
              "url"
            ],
            "title": "Type"
          },
          "custom_url": {
            "type": "string",
            "default": "",
            "title": "Custom Url"
          }
        },
        "title": "URLAvatar"
      },
      "UpdatePhoneNumberRequest": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "title": "Agent Id"
          }
        },
        "title": "UpdatePhoneNumberRequest"
      },
      "UpdateWorkspaceMemberResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the workspace member update request. If the request was successful, the status will be 'ok'. Otherwise an error message with status 500 will be returned.",
            "type": "string",
            "title": "Status"
          }
        },
        "example": {
          "status": "ok"
        },
        "required": [
          "status"
        ],
        "title": "UpdateWorkspaceMemberResponseModel"
      },
      "UsageCharactersResponseModel": {
        "type": "object",
        "properties": {
          "time": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "title": "Time"
          },
          "usage": {
            "type": "object",
            "additionalProperties": {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "title": "Usage"
          }
        },
        "required": [
          "time",
          "usage"
        ],
        "title": "UsageCharactersResponseModel"
      },
      "UserFeedback": {
        "type": "object",
        "properties": {
          "score": {
            "$ref": "#/components/schemas/UserFeedbackScore"
          },
          "time_in_call_secs": {
            "type": "integer",
            "title": "Time In Call Secs"
          }
        },
        "required": [
          "score",
          "time_in_call_secs"
        ],
        "title": "UserFeedback"
      },
      "UserFeedbackScore": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "like",
          "dislike"
        ],
        "title": "UserFeedbackScore"
      },
      "UserResponseModel": {
        "type": "object",
        "properties": {
          "user_id": {
            "description": "The unique identifier of the user.",
            "type": "string",
            "title": "User Id"
          },
          "subscription": {
            "description": "Details of the user's subscription.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionResponseModel"
              }
            ],
            "title": "Subscription"
          },
          "subscription_extras": {
            "description": "Optional additional details about the user's subscription.",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionExtrasResponseModel"
              }
            ],
            "title": "Subscription Extras"
          },
          "is_new_user": {
            "description": "Whether the user is new.",
            "type": "boolean",
            "title": "Is New User"
          },
          "xi_api_key": {
            "description": "The API key of the user.",
            "type": "string",
            "title": "Xi Api Key"
          },
          "can_use_delayed_payment_methods": {
            "description": "Whether the user can use delayed payment methods.",
            "type": "boolean",
            "title": "Can Use Delayed Payment Methods"
          },
          "is_onboarding_completed": {
            "description": "Whether the user's onboarding is completed.",
            "type": "boolean",
            "title": "Is Onboarding Completed"
          },
          "is_onboarding_checklist_completed": {
            "description": "Whether the user's onboarding checklist is completed.",
            "type": "boolean",
            "title": "Is Onboarding Checklist Completed"
          },
          "first_name": {
            "description": "First name of the user.",
            "type": "string",
            "title": "First Name"
          },
          "is_api_key_hashed": {
            "description": "Whether the user's API key is hashed.",
            "type": "boolean",
            "default": false,
            "title": "Is Api Key Hashed"
          },
          "xi_api_key_preview": {
            "description": "The preview of the user's API key.",
            "type": "string",
            "title": "Xi Api Key Preview"
          },
          "referral_link_code": {
            "description": "The referral link code of the user.",
            "type": "string",
            "title": "Referral Link Code"
          },
          "partnerstack_partner_default_link": {
            "description": "The Partnerstack partner default link of the user.",
            "type": "string",
            "title": "Partnerstack Partner Default Link"
          }
        },
        "example": {
          "user_id": "1234567890",
          "subscription": {
            "tier": "trial",
            "character_count": 17231,
            "character_limit": 100000,
            "can_extend_character_limit": false,
            "allowed_to_extend_character_limit": false,
            "next_character_count_reset_unix": 1738356858,
            "voice_slots_used": 1,
            "voice_limit": 120,
            "max_voice_add_edits": 230,
            "voice_add_edit_counter": 212,
            "professional_voice_limit": 1,
            "can_extend_voice_limit": false,
            "can_use_instant_voice_cloning": true,
            "can_use_professional_voice_cloning": true,
            "currency": "usd",
            "status": "free",
            "billing_period": "monthly_period",
            "character_refresh_period": "monthly_period"
          },
          "subscription_extras": {
            "concurrency": 10,
            "convai_concurrency": 10,
            "convai_chars_per_minute": 1000,
            "convai_asr_chars_per_minute": 1000,
            "force_logging_disabled": false,
            "can_request_manual_pro_voice_verification": true,
            "can_bypass_voice_captcha": true,
            "moderation": {
              "is_in_probation": false,
              "enterprise_check_nogo_voice": false,
              "enterprise_check_block_nogo_voice": false,
              "never_live_moderate": false,
              "nogo_voice_similar_voice_upload_count": 0,
              "enterprise_background_moderation_enabled": false,
              "on_watchlist": false
            },
            "unused_characters_rolled_over_from_previous_period": 1000,
            "overused_characters_rolled_over_from_previous_period": 1000,
            "usage": {
              "rollover_credits_quota": 1000,
              "subscription_cycle_credits_quota": 1000,
              "manually_gifted_credits_quota": 1000,
              "rollover_credits_used": 1000,
              "subscription_cycle_credits_used": 1000,
              "manually_gifted_credits_used": 1000,
              "paid_usage_based_credits_used": 1000,
              "actual_reported_credits": 1000
            }
          },
          "is_new_user": false,
          "xi_api_key": "8so27l7327189x0h939ekx293380l920",
          "can_use_delayed_payment_methods": true,
          "is_onboarding_completed": true,
          "is_onboarding_checklist_completed": true,
          "first_name": "John",
          "is_api_key_hashed": false
        },
        "required": [
          "user_id",
          "subscription",
          "is_new_user",
          "can_use_delayed_payment_methods",
          "is_onboarding_completed",
          "is_onboarding_checklist_completed"
        ],
        "title": "UserResponseModel"
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VerificationAttemptResponseModel": {
        "type": "object",
        "properties": {
          "text": {
            "description": "The text of the verification attempt.",
            "type": "string",
            "title": "Text"
          },
          "date_unix": {
            "description": "The date of the verification attempt in Unix time.",
            "type": "integer",
            "title": "Date Unix"
          },
          "accepted": {
            "description": "Whether the verification attempt was accepted.",
            "type": "boolean",
            "title": "Accepted"
          },
          "similarity": {
            "description": "The similarity of the verification attempt.",
            "type": "number",
            "title": "Similarity"
          },
          "levenshtein_distance": {
            "description": "The Levenshtein distance of the verification attempt.",
            "type": "number",
            "title": "Levenshtein Distance"
          },
          "recording": {
            "description": "The recording of the verification attempt.",
            "allOf": [
              {
                "$ref": "#/components/schemas/RecordingResponseModel"
              }
            ],
            "title": "Recording"
          }
        },
        "example": {
          "text": "Hello, how are you?",
          "date_unix": 1714204800,
          "accepted": true,
          "similarity": 0.95,
          "levenshtein_distance": 2,
          "recording": {
            "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
            "mime_type": "audio/mpeg",
            "size_bytes": 1000000,
            "upload_date_unix": 1714204800,
            "transcription": "Hello, how are you?"
          }
        },
        "required": [
          "text",
          "date_unix",
          "accepted",
          "similarity",
          "levenshtein_distance"
        ],
        "title": "VerificationAttemptResponseModel"
      },
      "VerifiedVoiceLanguageResponseModel": {
        "type": "object",
        "properties": {
          "language": {
            "description": "The language of the voice.",
            "type": "string",
            "title": "Language"
          },
          "model_id": {
            "description": "The voice's model ID.",
            "type": "string",
            "title": "Model Id"
          },
          "accent": {
            "description": "The voice's accent, if applicable.",
            "type": "string",
            "title": "Accent"
          },
          "preview_url": {
            "description": "The voice's preview URL, if applicable.",
            "type": "string",
            "title": "Preview Url"
          }
        },
        "example": {
          "language": "en",
          "model_id": "eleven_turbo_v2_5",
          "accent": "American"
        },
        "required": [
          "language",
          "model_id"
        ],
        "title": "VerifiedVoiceLanguageResponseModel"
      },
      "VoiceGenerationParameterOptionResponseModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "required": [
          "name",
          "code"
        ],
        "title": "VoiceGenerationParameterOptionResponseModel"
      },
      "VoiceGenerationParameterResponseModel": {
        "type": "object",
        "properties": {
          "genders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
            },
            "title": "Genders"
          },
          "accents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
            },
            "title": "Accents"
          },
          "ages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
            },
            "title": "Ages"
          },
          "minimum_characters": {
            "type": "integer",
            "title": "Minimum Characters"
          },
          "maximum_characters": {
            "type": "integer",
            "title": "Maximum Characters"
          },
          "minimum_accent_strength": {
            "type": "number",
            "title": "Minimum Accent Strength"
          },
          "maximum_accent_strength": {
            "type": "number",
            "title": "Maximum Accent Strength"
          }
        },
        "required": [
          "genders",
          "accents",
          "ages",
          "minimum_characters",
          "maximum_characters",
          "minimum_accent_strength",
          "maximum_accent_strength"
        ],
        "title": "VoiceGenerationParameterResponseModel"
      },
      "VoicePreviewResponseModel": {
        "type": "object",
        "properties": {
          "audio_base_64": {
            "type": "string",
            "title": "Audio Base 64"
          },
          "generated_voice_id": {
            "type": "string",
            "title": "Generated Voice Id"
          },
          "media_type": {
            "type": "string",
            "title": "Media Type"
          },
          "duration_secs": {
            "type": "number",
            "title": "Duration Secs"
          }
        },
        "required": [
          "audio_base_64",
          "generated_voice_id",
          "media_type",
          "duration_secs"
        ],
        "title": "VoicePreviewResponseModel"
      },
      "VoicePreviewsRequestModel": {
        "type": "object",
        "properties": {
          "voice_description": {
            "description": "Description to use for the created voice.",
            "type": "string",
            "examples": [
              "A sassy squeaky mouse"
            ],
            "maxLength": 1000,
            "minLength": 20,
            "title": "Voice Description"
          },
          "text": {
            "description": "Text to generate, text length has to be between 100 and 1000.",
            "type": "string",
            "examples": [
              "Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
            ],
            "maxLength": 1000,
            "minLength": 100,
            "title": "Text"
          },
          "auto_generate_text": {
            "description": "Whether to automatically generate a text suitable for the voice description.",
            "type": "boolean",
            "default": false,
            "title": "Auto Generate Text"
          }
        },
        "required": [
          "voice_description",
          "text"
        ],
        "title": "VoicePreviewsRequestModel"
      },
      "VoicePreviewsResponseModel": {
        "type": "object",
        "properties": {
          "previews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VoicePreviewResponseModel"
            },
            "title": "Previews"
          },
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "required": [
          "previews",
          "text"
        ],
        "title": "VoicePreviewsResponseModel"
      },
      "VoiceResponseModel": {
        "type": "object",
        "properties": {
          "voice_id": {
            "description": "The ID of the voice.",
            "type": "string",
            "title": "Voice Id"
          },
          "name": {
            "description": "The name of the voice.",
            "type": "string",
            "title": "Name"
          },
          "samples": {
            "description": "List of samples associated with the voice.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SampleResponseModel"
            },
            "title": "Samples"
          },
          "category": {
            "description": "The category of the voice.",
            "type": "string",
            "enum": [
              "generated",
              "cloned",
              "premade",
              "professional",
              "famous",
              "high_quality"
            ],
            "title": "Category"
          },
          "fine_tuning": {
            "description": "Fine-tuning information for the voice.",
            "allOf": [
              {
                "$ref": "#/components/schemas/FineTuningResponseModel"
              }
            ],
            "title": "Fine Tuning"
          },
          "labels": {
            "description": "Labels associated with the voice.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "Labels"
          },
          "description": {
            "description": "The description of the voice.",
            "type": "string",
            "title": "Description"
          },
          "preview_url": {
            "description": "The preview URL of the voice.",
            "type": "string",
            "title": "Preview Url"
          },
          "available_for_tiers": {
            "description": "The tiers the voice is available for.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Available For Tiers"
          },
          "settings": {
            "description": "The settings of the voice.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceSettingsResponseModel"
              }
            ],
            "title": "Settings"
          },
          "sharing": {
            "description": "The sharing information of the voice.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceSharingResponseModel"
              }
            ],
            "title": "Sharing"
          },
          "high_quality_base_model_ids": {
            "description": "The base model IDs for high-quality voices.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "High Quality Base Model Ids"
          },
          "verified_languages": {
            "description": "The verified languages of the voice.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerifiedVoiceLanguageResponseModel"
            },
            "title": "Verified Languages"
          },
          "safety_control": {
            "description": "The safety controls of the voice.",
            "type": "string",
            "enum": [
              "NONE",
              "BAN",
              "CAPTCHA",
              "CAPTCHA_AND_MODERATION",
              "ENTERPRISE_BAN",
              "ENTERPRISE_CAPTCHA"
            ],
            "title": "Safety Control"
          },
          "voice_verification": {
            "description": "The voice verification of the voice.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceVerificationResponseModel"
              }
            ],
            "title": "Voice Verification"
          },
          "permission_on_resource": {
            "description": "The permission on the resource of the voice.",
            "type": "string",
            "title": "Permission On Resource"
          },
          "is_owner": {
            "description": "Whether the voice is owned by the user.",
            "type": "boolean",
            "title": "Is Owner"
          },
          "is_legacy": {
            "description": "Whether the voice is legacy.",
            "type": "boolean",
            "default": false,
            "title": "Is Legacy"
          },
          "is_mixed": {
            "description": "Whether the voice is mixed.",
            "type": "boolean",
            "default": false,
            "title": "Is Mixed"
          },
          "created_at_unix": {
            "description": "The creation time of the voice in Unix time.",
            "type": "integer",
            "title": "Created At Unix"
          }
        },
        "example": {
          "voice_id": "21m00Tcm4TlvDq8ikWAM",
          "name": "Rachel",
          "category": "professional",
          "fine_tuning": {
            "is_allowed_to_fine_tune": true,
            "state": {
              "eleven_multilingual_v2": "fine_tuned"
            },
            "verification_failures": [],
            "verification_attempts_count": 2,
            "manual_verification_requested": false
          },
          "labels": {
            "accent": "American",
            "description": "expressive",
            "age": "middle-aged",
            "gender": "female",
            "use_case": "social media"
          },
          "description": "A warm, expressive voice with a touch of humor.",
          "preview_url": "https://storage.googleapis.com/eleven-public-prod/premade/voices/9BWtsMINqrJLrRacOk9x/405766b8-1f4e-4d3c-aba1-6f25333823ec.mp3",
          "available_for_tiers": [
            "creator",
            "enterprise"
          ],
          "settings": {
            "stability": 1,
            "similarity_boost": 1,
            "style": 0,
            "use_speaker_boost": true,
            "speed": 1
          },
          "sharing": {
            "status": "enabled",
            "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
            "date_unix": 1714204800,
            "whitelisted_emails": [
              "example@example.com"
            ],
            "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
            "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
            "financial_rewards_enabled": true,
            "free_users_allowed": true,
            "live_moderation_enabled": true,
            "rate": 0.05,
            "notice_period": 30,
            "disable_at_unix": 1714204800,
            "voice_mixing_allowed": false,
            "featured": true,
            "category": "professional",
            "reader_app_enabled": true,
            "liked_by_count": 100,
            "cloned_by_count": 50,
            "name": "Rachel",
            "description": "A female voice with a soft and friendly tone.",
            "labels": {
              "accent": "American",
              "gender": "female"
            },
            "review_status": "allowed",
            "enabled_in_library": true,
            "moderation_check": {
              "date_checked_unix": 1714204800,
              "name_value": "Rachel",
              "name_check": true,
              "description_value": "A female voice with a soft and friendly tone.",
              "description_check": true,
              "sample_ids": [
                "sample1",
                "sample2"
              ],
              "sample_checks": [
                0.95,
                0.98
              ],
              "captcha_ids": [
                "captcha1",
                "captcha2"
              ],
              "captcha_checks": [
                0.95,
                0.98
              ]
            },
            "reader_restricted_on": [
              {
                "resource_type": "read",
                "resource_id": "FCwhRBWXzGAHq8TQ4Fs18"
              }
            ]
          },
          "high_quality_base_model_ids": [
            "eleven_v2_flash",
            "eleven_flash_v2",
            "eleven_turbo_v2_5",
            "eleven_multilingual_v2",
            "eleven_v2_5_flash",
            "eleven_flash_v2_5",
            "eleven_turbo_v2"
          ],
          "verified_languages": {
            "language": "en",
            "model_id": "eleven_turbo_v2_5",
            "accent": "American"
          },
          "voice_verification": {
            "requires_verification": false,
            "is_verified": true,
            "verification_failures": [],
            "verification_attempts_count": 0,
            "language": "en",
            "verification_attempts": [
              {
                "text": "Hello, how are you?",
                "date_unix": 1714204800,
                "accepted": true,
                "similarity": 0.95,
                "levenshtein_distance": 2,
                "recording": {
                  "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                  "mime_type": "audio/mpeg",
                  "size_bytes": 1000000,
                  "upload_date_unix": 1714204800,
                  "transcription": "Hello, how are you?"
                }
              }
            ]
          },
          "is_owner": false,
          "is_legacy": false,
          "is_mixed": false
        },
        "required": [
          "voice_id",
          "name",
          "category",
          "labels",
          "available_for_tiers",
          "high_quality_base_model_ids"
        ],
        "title": "VoiceResponseModel"
      },
      "VoiceSettingsResponseModel": {
        "type": "object",
        "properties": {
          "stability": {
            "description": "Determines how stable the voice is and the randomness between each generation. Lower values introduce broader emotional range for the voice. Higher values can result in a monotonous voice with limited emotion.",
            "type": "number",
            "title": "Stability"
          },
          "similarity_boost": {
            "description": "Determines how closely the AI should adhere to the original voice when attempting to replicate it.",
            "type": "number",
            "title": "Similarity Boost"
          },
          "style": {
            "description": "Determines the style exaggeration of the voice. This setting attempts to amplify the style of the original speaker. It does consume additional computational resources and might increase latency if set to anything other than 0.",
            "type": "number",
            "default": 0,
            "title": "Style"
          },
          "use_speaker_boost": {
            "description": "This setting boosts the similarity to the original speaker. Using this setting requires a slightly higher computational load, which in turn increases latency.",
            "type": "boolean",
            "default": true,
            "title": "Use Speaker Boost"
          },
          "speed": {
            "description": "Controls the speed of the generated speech. Values range from 0.7 to 1.2, with 1.0 being the default speed. Lower values create slower, more deliberate speech while higher values produce faster-paced speech. Extreme values can impact the quality of the generated speech.",
            "type": "number",
            "default": 1,
            "title": "Speed"
          }
        },
        "example": {
          "stability": 1,
          "similarity_boost": 1,
          "style": 0,
          "use_speaker_boost": true,
          "speed": 1
        },
        "required": [
          "stability",
          "similarity_boost"
        ],
        "title": "VoiceSettingsResponseModel"
      },
      "VoiceSharingModerationCheckResponseModel": {
        "type": "object",
        "properties": {
          "date_checked_unix": {
            "description": "The date the moderation check was made in Unix time.",
            "type": "integer",
            "title": "Date Checked Unix"
          },
          "name_value": {
            "description": "The name value of the voice.",
            "type": "string",
            "title": "Name Value"
          },
          "name_check": {
            "description": "Whether the name check was successful.",
            "type": "boolean",
            "title": "Name Check"
          },
          "description_value": {
            "description": "The description value of the voice.",
            "type": "string",
            "title": "Description Value"
          },
          "description_check": {
            "description": "Whether the description check was successful.",
            "type": "boolean",
            "title": "Description Check"
          },
          "sample_ids": {
            "description": "A list of sample IDs.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Sample Ids"
          },
          "sample_checks": {
            "description": "A list of sample checks.",
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Sample Checks"
          },
          "captcha_ids": {
            "description": "A list of captcha IDs.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Captcha Ids"
          },
          "captcha_checks": {
            "description": "A list of CAPTCHA check values.",
            "type": "array",
            "items": {
              "type": "number"
            },
            "title": "Captcha Checks"
          }
        },
        "example": {
          "date_checked_unix": 1714204800,
          "name_value": "Rachel",
          "name_check": true,
          "description_value": "A female voice with a soft and friendly tone.",
          "description_check": true,
          "sample_ids": [
            "sample1",
            "sample2"
          ],
          "sample_checks": [
            0.95,
            0.98
          ],
          "captcha_ids": [
            "captcha1",
            "captcha2"
          ],
          "captcha_checks": [
            0.95,
            0.98
          ]
        },
        "title": "VoiceSharingModerationCheckResponseModel"
      },
      "VoiceSharingResponseModel": {
        "type": "object",
        "properties": {
          "status": {
            "description": "The status of the voice sharing.",
            "type": "string",
            "enum": [
              "enabled",
              "disabled",
              "copied",
              "copied_disabled"
            ],
            "title": "Status"
          },
          "history_item_sample_id": {
            "description": "The sample ID of the history item.",
            "type": "string",
            "title": "History Item Sample Id"
          },
          "date_unix": {
            "description": "The date of the voice sharing in Unix time.",
            "type": "integer",
            "title": "Date Unix"
          },
          "whitelisted_emails": {
            "description": "A list of whitelisted emails.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Whitelisted Emails"
          },
          "public_owner_id": {
            "description": "The ID of the public owner.",
            "type": "string",
            "title": "Public Owner Id"
          },
          "original_voice_id": {
            "description": "The ID of the original voice.",
            "type": "string",
            "title": "Original Voice Id"
          },
          "financial_rewards_enabled": {
            "description": "Whether financial rewards are enabled.",
            "type": "boolean",
            "title": "Financial Rewards Enabled"
          },
          "free_users_allowed": {
            "description": "Whether free users are allowed.",
            "type": "boolean",
            "title": "Free Users Allowed"
          },
          "live_moderation_enabled": {
            "description": "Whether live moderation is enabled.",
            "type": "boolean",
            "title": "Live Moderation Enabled"
          },
          "rate": {
            "description": "The rate of the voice sharing.",
            "type": "number",
            "title": "Rate"
          },
          "notice_period": {
            "description": "The notice period of the voice sharing.",
            "type": "integer",
            "title": "Notice Period"
          },
          "disable_at_unix": {
            "description": "The date of the voice sharing in Unix time.",
            "type": "integer",
            "title": "Disable At Unix"
          },
          "voice_mixing_allowed": {
            "description": "Whether voice mixing is allowed.",
            "type": "boolean",
            "title": "Voice Mixing Allowed"
          },
          "featured": {
            "description": "Whether the voice is featured.",
            "type": "boolean",
            "title": "Featured"
          },
          "category": {
            "description": "The category of the voice.",
            "type": "string",
            "enum": [
              "generated",
              "cloned",
              "premade",
              "professional",
              "famous",
              "high_quality"
            ],
            "title": "Category"
          },
          "reader_app_enabled": {
            "description": "Whether the reader app is enabled.",
            "type": "boolean",
            "title": "Reader App Enabled"
          },
          "image_url": {
            "description": "The image URL of the voice.",
            "type": "string",
            "title": "Image Url"
          },
          "ban_reason": {
            "description": "The ban reason of the voice.",
            "type": "string",
            "title": "Ban Reason"
          },
          "liked_by_count": {
            "description": "The number of likes on the voice.",
            "type": "integer",
            "title": "Liked By Count"
          },
          "cloned_by_count": {
            "description": "The number of clones on the voice.",
            "type": "integer",
            "title": "Cloned By Count"
          },
          "name": {
            "description": "The name of the voice.",
            "type": "string",
            "title": "Name"
          },
          "description": {
            "description": "The description of the voice.",
            "type": "string",
            "title": "Description"
          },
          "labels": {
            "description": "The labels of the voice.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "Labels"
          },
          "review_status": {
            "description": "The review status of the voice.",
            "type": "string",
            "enum": [
              "not_requested",
              "pending",
              "declined",
              "allowed",
              "allowed_with_changes"
            ],
            "title": "Review Status"
          },
          "review_message": {
            "description": "The review message of the voice.",
            "type": "string",
            "title": "Review Message"
          },
          "enabled_in_library": {
            "description": "Whether the voice is enabled in the library.",
            "type": "boolean",
            "title": "Enabled In Library"
          },
          "instagram_username": {
            "description": "The Instagram username of the voice.",
            "type": "string",
            "title": "Instagram Username"
          },
          "twitter_username": {
            "description": "The Twitter/X username of the voice.",
            "type": "string",
            "title": "Twitter Username"
          },
          "youtube_username": {
            "description": "The YouTube username of the voice.",
            "type": "string",
            "title": "Youtube Username"
          },
          "tiktok_username": {
            "description": "The TikTok username of the voice.",
            "type": "string",
            "title": "Tiktok Username"
          },
          "moderation_check": {
            "description": "The moderation check of the voice.",
            "allOf": [
              {
                "$ref": "#/components/schemas/VoiceSharingModerationCheckResponseModel"
              }
            ],
            "title": "Moderation Check"
          },
          "reader_restricted_on": {
            "description": "The reader restricted on of the voice.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReaderResourceResponseModel"
            },
            "title": "Reader Restricted On"
          }
        },
        "example": {
          "status": "enabled",
          "history_item_sample_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "date_unix": 1714204800,
          "whitelisted_emails": [
            "example@example.com"
          ],
          "public_owner_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "original_voice_id": "DCwhRBWXzGAHq8TQ4Fs18",
          "financial_rewards_enabled": true,
          "free_users_allowed": true,
          "live_moderation_enabled": true,
          "rate": 0.05,
          "notice_period": 30,
          "disable_at_unix": 1714204800,
          "voice_mixing_allowed": false,
          "featured": true,
          "category": "professional",
          "reader_app_enabled": true,
          "liked_by_count": 100,
          "cloned_by_count": 50,
          "name": "Rachel",
          "description": "A female voice with a soft and friendly tone.",
          "labels": {
            "accent": "American",
            "gender": "female"
          },
          "review_status": "allowed",
          "enabled_in_library": true,
          "moderation_check": {
            "date_checked_unix": 1714204800,
            "name_value": "Rachel",
            "name_check": true,
            "description_value": "A female voice with a soft and friendly tone.",
            "description_check": true,
            "sample_ids": [
              "sample1",
              "sample2"
            ],
            "sample_checks": [
              0.95,
              0.98
            ],
            "captcha_ids": [
              "captcha1",
              "captcha2"
            ],
            "captcha_checks": [
              0.95,
              0.98
            ]
          },
          "reader_restricted_on": [
            {
              "resource_type": "read",
              "resource_id": "FCwhRBWXzGAHq8TQ4Fs18"
            }
          ]
        },
        "required": [
          "status",
          "date_unix",
          "whitelisted_emails",
          "public_owner_id",
          "original_voice_id",
          "financial_rewards_enabled",
          "free_users_allowed",
          "live_moderation_enabled",
          "notice_period",
          "voice_mixing_allowed",
          "featured",
          "category",
          "liked_by_count",
          "cloned_by_count",
          "name",
          "labels",
          "review_status",
          "enabled_in_library"
        ],
        "title": "VoiceSharingResponseModel"
      },
      "VoiceVerificationResponseModel": {
        "type": "object",
        "properties": {
          "requires_verification": {
            "description": "Whether the voice requires verification.",
            "type": "boolean",
            "title": "Requires Verification"
          },
          "is_verified": {
            "description": "Whether the voice has been verified.",
            "type": "boolean",
            "title": "Is Verified"
          },
          "verification_failures": {
            "description": "List of verification failures.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Verification Failures"
          },
          "verification_attempts_count": {
            "description": "The number of verification attempts.",
            "type": "integer",
            "title": "Verification Attempts Count"
          },
          "language": {
            "description": "The language of the voice.",
            "type": "string",
            "title": "Language"
          },
          "verification_attempts": {
            "description": "Number of times a verification was attempted.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VerificationAttemptResponseModel"
            },
            "title": "Verification Attempts"
          }
        },
        "example": {
          "requires_verification": false,
          "is_verified": true,
          "verification_failures": [],
          "verification_attempts_count": 0,
          "language": "en",
          "verification_attempts": [
            {
              "text": "Hello, how are you?",
              "date_unix": 1714204800,
              "accepted": true,
              "similarity": 0.95,
              "levenshtein_distance": 2,
              "recording": {
                "recording_id": "CwhRBWXzGAHq8TQ4Fs17",
                "mime_type": "audio/mpeg",
                "size_bytes": 1000000,
                "upload_date_unix": 1714204800,
                "transcription": "Hello, how are you?"
              }
            }
          ]
        },
        "required": [
          "requires_verification",
          "is_verified",
          "verification_failures",
          "verification_attempts_count"
        ],
        "title": "VoiceVerificationResponseModel"
      },
      "WebhookToolApiSchemaConfig": {
        "description": "Configuration for a webhook that will be called by an LLM tool.",
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "method": {
            "type": "string",
            "default": "GET",
            "enum": [
              "GET",
              "POST",
              "PATCH",
              "DELETE"
            ],
            "title": "Method"
          },
          "path_params_schema": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/LiteralJsonSchemaProperty"
            },
            "title": "Path Params Schema"
          },
          "query_params_schema": {
            "$ref": "#/components/schemas/QueryParamsJsonSchema"
          },
          "request_body_schema": {
            "$ref": "#/components/schemas/ObjectJsonSchemaProperty"
          },
          "request_headers": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/ConvAISecretLocator"
                }
              ]
            },
            "title": "Request Headers"
          }
        },
        "required": [
          "url"
        ],
        "title": "WebhookToolApiSchemaConfig"
      },
      "WebhookToolConfig": {
        "description": "A webhook tool is a tool that calls an external webhook from our server",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "webhook"
            ],
            "title": "Type"
          },
          "name": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9_-]{1,64}$",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "api_schema": {
            "$ref": "#/components/schemas/WebhookToolApiSchemaConfig"
          },
          "dynamic_variables": {
            "$ref": "#/components/schemas/DynamicVariablesConfig"
          }
        },
        "required": [
          "type",
          "name",
          "description",
          "api_schema"
        ],
        "title": "WebhookToolConfig"
      },
      "WidgetConfig": {
        "type": "object",
        "properties": {
          "variant": {
            "default": "full",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmbedVariant"
              }
            ]
          },
          "expandable": {
            "default": "never",
            "allOf": [
              {
                "$ref": "#/components/schemas/WidgetExpandable"
              }
            ]
          },
          "avatar": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrbAvatar"
              },
              {
                "$ref": "#/components/schemas/URLAvatar"
              },
              {
                "$ref": "#/components/schemas/ImageAvatar"
              }
            ],
            "title": "Avatar"
          },
          "feedback_mode": {
            "default": "none",
            "allOf": [
              {
                "$ref": "#/components/schemas/WidgetFeedbackMode"
              }
            ]
          },
          "bg_color": {
            "type": "string",
            "default": "#ffffff",
            "title": "Bg Color"
          },
          "text_color": {
            "type": "string",
            "default": "#000000",
            "title": "Text Color"
          },
          "btn_color": {
            "type": "string",
            "default": "#000000",
            "title": "Btn Color"
          },
          "btn_text_color": {
            "type": "string",
            "default": "#ffffff",
            "title": "Btn Text Color"
          },
          "border_color": {
            "type": "string",
            "default": "#e1e1e1",
            "title": "Border Color"
          },
          "focus_color": {
            "type": "string",
            "default": "#000000",
            "title": "Focus Color"
          },
          "border_radius": {
            "type": "integer",
            "title": "Border Radius"
          },
          "btn_radius": {
            "type": "integer",
            "title": "Btn Radius"
          },
          "action_text": {
            "type": "string",
            "title": "Action Text"
          },
          "start_call_text": {
            "type": "string",
            "title": "Start Call Text"
          },
          "end_call_text": {
            "type": "string",
            "title": "End Call Text"
          },
          "expand_text": {
            "type": "string",
            "title": "Expand Text"
          },
          "listening_text": {
            "type": "string",
            "title": "Listening Text"
          },
          "speaking_text": {
            "type": "string",
            "title": "Speaking Text"
          },
          "shareable_page_text": {
            "type": "string",
            "title": "Shareable Page Text"
          },
          "shareable_page_show_terms": {
            "type": "boolean",
            "default": true,
            "title": "Shareable Page Show Terms"
          },
          "terms_text": {
            "type": "string",
            "title": "Terms Text"
          },
          "terms_html": {
            "type": "string",
            "title": "Terms Html"
          },
          "terms_key": {
            "type": "string",
            "title": "Terms Key"
          },
          "show_avatar_when_collapsed": {
            "type": "boolean",
            "default": false,
            "title": "Show Avatar When Collapsed"
          },
          "disable_banner": {
            "description": "Whether to disable the ConvAI widget banner",
            "type": "boolean",
            "default": false,
            "title": "Disable Banner"
          },
          "language_selector": {
            "type": "boolean",
            "default": false,
            "title": "Language Selector"
          },
          "custom_avatar_path": {
            "type": "string",
            "title": "Custom Avatar Path"
          }
        },
        "title": "WidgetConfig"
      },
      "WidgetConfigResponseModel": {
        "type": "object",
        "properties": {
          "variant": {
            "default": "full",
            "allOf": [
              {
                "$ref": "#/components/schemas/EmbedVariant"
              }
            ]
          },
          "expandable": {
            "default": "never",
            "allOf": [
              {
                "$ref": "#/components/schemas/WidgetExpandable"
              }
            ]
          },
          "avatar": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrbAvatar"
              },
              {
                "$ref": "#/components/schemas/URLAvatar"
              },
              {
                "$ref": "#/components/schemas/ImageAvatar"
              }
            ],
            "title": "Avatar"
          },
          "feedback_mode": {
            "default": "none",
            "allOf": [
              {
                "$ref": "#/components/schemas/WidgetFeedbackMode"
              }
            ]
          },
          "bg_color": {
            "type": "string",
            "default": "#ffffff",
            "title": "Bg Color"
          },
          "text_color": {
            "type": "string",
            "default": "#000000",
            "title": "Text Color"
          },
          "btn_color": {
            "type": "string",
            "default": "#000000",
            "title": "Btn Color"
          },
          "btn_text_color": {
            "type": "string",
            "default": "#ffffff",
            "title": "Btn Text Color"
          },
          "border_color": {
            "type": "string",
            "default": "#e1e1e1",
            "title": "Border Color"
          },
          "focus_color": {
            "type": "string",
            "default": "#000000",
            "title": "Focus Color"
          },
          "border_radius": {
            "type": "integer",
            "title": "Border Radius"
          },
          "btn_radius": {
            "type": "integer",
            "title": "Btn Radius"
          },
          "action_text": {
            "type": "string",
            "title": "Action Text"
          },
          "start_call_text": {
            "type": "string",
            "title": "Start Call Text"
          },
          "end_call_text": {
            "type": "string",
            "title": "End Call Text"
          },
          "expand_text": {
            "type": "string",
            "title": "Expand Text"
          },
          "listening_text": {
            "type": "string",
            "title": "Listening Text"
          },
          "speaking_text": {
            "type": "string",
            "title": "Speaking Text"
          },
          "shareable_page_text": {
            "type": "string",
            "title": "Shareable Page Text"
          },
          "shareable_page_show_terms": {
            "type": "boolean",
            "default": true,
            "title": "Shareable Page Show Terms"
          },
          "terms_text": {
            "type": "string",
            "title": "Terms Text"
          },
          "terms_html": {
            "type": "string",
            "title": "Terms Html"
          },
          "terms_key": {
            "type": "string",
            "title": "Terms Key"
          },
          "show_avatar_when_collapsed": {
            "type": "boolean",
            "default": false,
            "title": "Show Avatar When Collapsed"
          },
          "disable_banner": {
            "description": "Whether to disable the ConvAI widget banner",
            "type": "boolean",
            "default": false,
            "title": "Disable Banner"
          },
          "language": {
            "type": "string",
            "title": "Language"
          },
          "supported_language_overrides": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Supported Language Overrides"
          }
        },
        "required": [
          "language"
        ],
        "title": "WidgetConfigResponseModel"
      },
      "WidgetExpandable": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "never",
          "mobile",
          "desktop",
          "always"
        ],
        "title": "WidgetExpandable"
      },
      "WidgetFeedbackMode": {
        "description": "An enumeration.",
        "type": "string",
        "enum": [
          "none",
          "during",
          "end"
        ],
        "title": "WidgetFeedbackMode"
      },
      "WorkspaceGroupByNameResponseModel": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the workspace group.",
            "type": "string",
            "title": "Name"
          },
          "id": {
            "description": "The ID of the workspace group.",
            "type": "string",
            "title": "Id"
          },
          "members_emails": {
            "description": "The emails of the members of the workspace group.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "Members Emails"
          }
        },
        "example": {
          "name": "My Workspace Group",
          "id": "1234567890",
          "members_emails": [
            "john.doe@example.com",
            "jane.smith@example.com"
          ]
        },
        "required": [
          "name",
          "id",
          "members_emails"
        ],
        "title": "WorkspaceGroupByNameResponseModel"
      }
    }
  },
  "tags": [
    {
      "name": "text-to-speech",
      "description": "Convert text into lifelike speech using a voice of your choice."
    },
    {
      "name": "speech-to-speech",
      "description": "Create speech by combining the style and content of an audio file you upload with a voice of your choice."
    },
    {
      "name": "speech-to-text",
      "description": "Transcribe your audio files with detailed speaker annotations and precise timestamps using our cutting-edge model. Speech-to-text is currently in alpha and available to a select group of users. We plan to roll it out more broadly soon."
    },
    {
      "name": "models",
      "description": "Access the different models of the platform."
    },
    {
      "name": "voices",
      "description": "Access to voices created either by you or us."
    },
    {
      "name": "samples",
      "description": "Access to your samples. A sample is any audio file you attached to a voice. A voice can have one or more samples."
    },
    {
      "name": "speech-history",
      "description": "Accesses your speech history. Your speech history is a list of all your created audio including its metadata using our text-to-speech and speech-to-speech models."
    },
    {
      "name": "projects",
      "description": "Access, create and convert Projects programmatically, only specifically whitelisted accounts can access the Projects API. If you need access please contact our sales team."
    }
  ]
}