{
	"openapi": "3.1.0",
	"info": {
		"title": "ElevenLabs API Documentation",
		"description": "This is the documentation for the ElevenLabs API. You can use this API to use our service programmatically, this is done by using your xi-api-key. <br/> You can view your xi-api-key using the 'Profile' tab on https://elevenlabs.io. Our API is experimental so all endpoints are subject to change.",
		"version": "1.0"
	},
	"paths": {
		"/v1/history": {
			"get": {
				"tags": [
					"speech-history"
				],
				"summary": "Get Generated Items",
				"description": "Returns metadata about all your generated audio.",
				"operationId": "Get_generated_items_v1_history_get",
				"parameters": [
					{
						"description": "How many history items to return at maximum. Can not exceed 1000, defaults to 100.",
						"required": false,
						"schema": {
							"type": "integer",
							"title": "Page Size",
							"description": "How many history items to return at maximum. Can not exceed 1000, defaults to 100.",
							"default": 100
						},
						"name": "page_size",
						"in": "query"
					},
					{
						"description": "After which ID to start fetching, use this parameter to paginate across a large collection of history items. In case this parameter is not provided history items will be fetched starting from the most recently created one ordered descending by their creation date.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Start After History Item Id",
							"description": "After which ID to start fetching, use this parameter to paginate across a large collection of history items. In case this parameter is not provided history items will be fetched starting from the most recently created one ordered descending by their creation date."
						},
						"name": "start_after_history_item_id",
						"in": "query"
					},
					{
						"description": "Voice ID to be filtered for, you can use GET https://api.elevenlabs.io/v1/voices to receive a list of voices and their IDs.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be filtered for, you can use GET https://api.elevenlabs.io/v1/voices to receive a list of voices and their IDs."
						},
						"name": "voice_id",
						"in": "query"
					},
					{
						"description": "search term used for filtering",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Search",
							"description": "search term used for filtering"
						},
						"example": "In the land far far away",
						"name": "search",
						"in": "query"
					},
					{
						"description": "Source of the generated history item",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"TTS",
								"STS"
							],
							"title": "Source",
							"description": "Source of the generated history item"
						},
						"example": "TTS",
						"name": "source",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetSpeechHistoryResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_all",
				"x-fern-sdk-group-name": "history",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.history.get_all()\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.history.getAll();\n"
					}
				]
			}
		},
		"/v1/history/{history_item_id}": {
			"get": {
				"tags": [
					"speech-history"
				],
				"summary": "Get History Item By Id",
				"description": "Returns information about an history item by its ID.",
				"operationId": "Get_history_item_by_ID_v1_history__history_item_id__get",
				"parameters": [
					{
						"description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "History Item Id",
							"description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
						},
						"example": "VW7YKqPnjY4h39yTbx2L",
						"name": "history_item_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SpeechHistoryItemResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get",
				"x-fern-sdk-group-name": "history",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.history.get(\n    history_item_id=\"HISTORY_ITEM_ID\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.history.get(\"HISTORY_ITEM_ID\");\n"
					}
				]
			},
			"delete": {
				"tags": [
					"speech-history"
				],
				"summary": "Delete History Item",
				"description": "Delete a history item by its ID",
				"operationId": "Delete_history_item_v1_history__history_item_id__delete",
				"parameters": [
					{
						"description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "History Item Id",
							"description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
						},
						"example": "VW7YKqPnjY4h39yTbx2L",
						"name": "history_item_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "delete",
				"x-fern-sdk-group-name": "history",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.history.delete(\n    history_item_id=\"HISTORY_ITEM_ID\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.history.delete(\"HISTORY_ITEM_ID\");\n"
					}
				]
			}
		},
		"/v1/history/{history_item_id}/audio": {
			"get": {
				"tags": [
					"speech-history"
				],
				"summary": "Get Audio From History Item",
				"description": "Returns the audio of an history item.",
				"operationId": "Get_audio_from_history_item_v1_history__history_item_id__audio_get",
				"parameters": [
					{
						"description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "History Item Id",
							"description": "History item ID to be used, you can use GET https://api.elevenlabs.io/v1/history to receive a list of history items and their IDs."
						},
						"example": "VW7YKqPnjY4h39yTbx2L",
						"name": "history_item_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"audio/mpeg": {}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_audio",
				"x-fern-sdk-group-name": "history",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.history.get_audio(\n    history_item_id=\"HISTORY_ITEM_ID\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.history.getAudio(\"HISTORY_ITEM_ID\");\n"
					}
				]
			}
		},
		"/v1/history/download": {
			"post": {
				"tags": [
					"speech-history"
				],
				"summary": "Download History Items",
				"description": "Download one or more history items. If one history item ID is provided, we will return a single audio file. If more than one history item IDs are provided, we will provide the history items packed into a .zip file.",
				"operationId": "Download_history_items_v1_history_download_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Download_history_items_v1_history_download_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "download",
				"x-fern-sdk-group-name": "history",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.history.download(\n    history_item_ids=[\"HISTORY_ITEM_ID\"],\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.history.download({\n    history_item_ids: [\"HISTORY_ITEM_ID\"]\n});\n"
					}
				]
			}
		},
		"/v1/sound-generation": {
			"post": {
				"tags": [
					"sound-generation"
				],
				"summary": "Sound Generation",
				"description": "Converts a text of your choice into sound",
				"operationId": "Sound_Generation_v1_sound_generation_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Sound_Generation_v1_sound_generation_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"audio/mpeg": {}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "convert",
				"x-fern-sdk-group-name": "text_to_sound_effects",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_to_sound_effects.convert(\n    text=\"Spacious braam suitable for high-impact movie trailer moments\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.textToSoundEffects.convert({\n    text: \"Spacious braam suitable for high-impact movie trailer moments\"\n});\n"
					}
				]
			}
		},
		"/v1/audio-isolation": {
			"post": {
				"tags": [
					"audio-isolation"
				],
				"summary": "Audio Isolation",
				"description": "Removes background noise from audio",
				"operationId": "Audio_Isolation_v1_audio_isolation_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_Audio_Isolation_v1_audio_isolation_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"audio/mpeg": {}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "audio_isolation",
				"x-fern-sdk-group-name": "audio_isolation",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.audio_isolation.audio_isolation()\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\nimport * as fs from \"fs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.audioIsolation.audioIsolation({\n    audio: fs.createReadStream(\"/path/to/your/file\")\n});\n"
					}
				]
			}
		},
		"/v1/audio-isolation/stream": {
			"post": {
				"tags": [
					"audio-isolation"
				],
				"summary": "Audio Isolation Stream",
				"description": "Removes background noise from audio and streams the result",
				"operationId": "Audio_Isolation_Stream_v1_audio_isolation_stream_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"audio/mpeg": {}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "audio_isolation_stream",
				"x-fern-sdk-group-name": "audio_isolation",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.audio_isolation.audio_isolation_stream()\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\nimport * as fs from \"fs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.audioIsolation.audioIsolationStream({\n    audio: fs.createReadStream(\"/path/to/your/file\")\n});\n"
					}
				]
			}
		},
		"/v1/voices/{voice_id}/samples/{sample_id}": {
			"delete": {
				"tags": [
					"samples"
				],
				"summary": "Delete Sample",
				"description": "Removes a sample by its ID.",
				"operationId": "Delete_sample_v1_voices__voice_id__samples__sample_id__delete",
				"parameters": [
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Sample Id",
							"description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice."
						},
						"example": "VW7YKqPnjY4h39yTbx2L",
						"name": "sample_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "delete",
				"x-fern-sdk-group-name": "samples",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.samples.delete(\n    voice_id=\"VOICE_ID\",\n    sample_id=\"SAMPLE_ID\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.samples.delete(\"VOICE_ID\", \"SAMPLE_ID\");\n"
					}
				]
			}
		},
		"/v1/voices/{voice_id}/samples/{sample_id}/audio": {
			"get": {
				"tags": [
					"samples"
				],
				"summary": "Get Audio From Sample",
				"description": "Returns the audio corresponding to a sample attached to a voice.",
				"operationId": "Get_audio_from_sample_v1_voices__voice_id__samples__sample_id__audio_get",
				"parameters": [
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Sample Id",
							"description": "Sample ID to be used, you can use GET https://api.elevenlabs.io/v1/voices/{voice_id} to list all the available samples for a voice."
						},
						"example": "VW7YKqPnjY4h39yTbx2L",
						"name": "sample_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"audio/*": {}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_audio",
				"x-fern-sdk-group-name": "samples",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.samples.get_audio(\n    voice_id=\"VOICE_ID\",\n    sample_id=\"SAMPLE_ID\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.samples.getAudio(\"VOICE_ID\", \"SAMPLE_ID\");\n"
					}
				]
			}
		},
		"/v1/text-to-speech/{voice_id}": {
			"post": {
				"tags": [
					"text-to-speech"
				],
				"summary": "Text To Speech",
				"description": "Converts text into speech using a voice of your choice and returns audio.",
				"operationId": "Text_to_speech_v1_text_to_speech__voice_id__post",
				"parameters": [
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "When enable_logging is set to false full privacy mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Full privacy mode may only be used by enterprise customers.",
						"required": false,
						"schema": {
							"type": "boolean",
							"title": "Enable request logging.",
							"description": "When enable_logging is set to false full privacy mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Full privacy mode may only be used by enterprise customers.",
							"default": true
						},
						"name": "enable_logging",
						"in": "query"
					},
					{
						"description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
						"required": false,
						"deprecated": true,
						"schema": {
							"type": "integer",
							"title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
							"description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n"
						},
						"name": "optimize_streaming_latency",
						"in": "query"
					},
					{
						"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Output format of the generated audio.",
							"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
							"default": "mp3_44100_128"
						},
						"name": "output_format",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Text_to_speech_v1_text_to_speech__voice_id__post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"audio/mpeg": {}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "convert",
				"x-fern-sdk-group-name": "text_to_speech",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_to_speech.convert(\n    voice_id=\"JBFqnCBsd6RMkjVDRZzb\",\n    output_format=\"mp3_44100_128\",\n    text=\"The first move is what sets everything in motion.\",\n    model_id=\"eleven_multilingual_v2\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.textToSpeech.convert(\"JBFqnCBsd6RMkjVDRZzb\", {\n    output_format: \"mp3_44100_128\",\n    text: \"The first move is what sets everything in motion.\",\n    model_id: \"eleven_multilingual_v2\"\n});\n"
					}
				]
			}
		},
		"/v1/text-to-speech/{voice_id}/with-timestamps": {
			"post": {
				"tags": [
					"text-to-speech"
				],
				"summary": "Text To Speech With Timestamps",
				"description": "Converts text into speech using a voice of your choice and returns JSON containing audio as a base64 encoded string together with information on when which character was spoken.",
				"operationId": "Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post",
				"parameters": [
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "When enable_logging is set to false full privacy mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Full privacy mode may only be used by enterprise customers.",
						"required": false,
						"schema": {
							"type": "boolean",
							"title": "Enable request logging.",
							"description": "When enable_logging is set to false full privacy mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Full privacy mode may only be used by enterprise customers.",
							"default": true
						},
						"name": "enable_logging",
						"in": "query"
					},
					{
						"description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
						"required": false,
						"deprecated": true,
						"schema": {
							"type": "integer",
							"title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
							"description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n"
						},
						"name": "optimize_streaming_latency",
						"in": "query"
					},
					{
						"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Output format of the generated audio.",
							"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
							"default": "mp3_44100_128"
						},
						"name": "output_format",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "convert_with_timestamps",
				"x-fern-sdk-group-name": "text_to_speech",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_to_speech.convert_with_timestamps(\n    voice_id=\"JBFqnCBsd6RMkjVDRZzb\",\n    output_format=\"mp3_44100_128\",\n    text=\"The first move is what sets everything in motion.\",\n    model_id=\"eleven_multilingual_v2\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.textToSpeech.convertWithTimestamps(\"JBFqnCBsd6RMkjVDRZzb\", {\n    output_format: \"mp3_44100_128\",\n    text: \"The first move is what sets everything in motion.\",\n    model_id: \"eleven_multilingual_v2\"\n});\n"
					}
				]
			}
		},
		"/v1/text-to-speech/{voice_id}/stream": {
			"post": {
				"tags": [
					"text-to-speech"
				],
				"summary": "Text To Speech Streaming",
				"description": "Converts text into speech using a voice of your choice and returns audio as an audio stream.",
				"operationId": "Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post",
				"parameters": [
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "When enable_logging is set to false full privacy mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Full privacy mode may only be used by enterprise customers.",
						"required": false,
						"schema": {
							"type": "boolean",
							"title": "Enable request logging.",
							"description": "When enable_logging is set to false full privacy mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Full privacy mode may only be used by enterprise customers.",
							"default": true
						},
						"name": "enable_logging",
						"in": "query"
					},
					{
						"description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
						"required": false,
						"deprecated": true,
						"schema": {
							"type": "integer",
							"title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
							"description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n"
						},
						"name": "optimize_streaming_latency",
						"in": "query"
					},
					{
						"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Output format of the generated audio.",
							"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
							"default": "mp3_44100_128"
						},
						"name": "output_format",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "convert_as_stream",
				"x-fern-sdk-group-name": "text_to_speech",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_to_speech.convert_as_stream(\n    voice_id=\"JBFqnCBsd6RMkjVDRZzb\",\n    output_format=\"mp3_44100_128\",\n    text=\"The first move is what sets everything in motion.\",\n    model_id=\"eleven_multilingual_v2\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.textToSpeech.convertAsStream(\"JBFqnCBsd6RMkjVDRZzb\", {\n    output_format: \"mp3_44100_128\",\n    text: \"The first move is what sets everything in motion.\",\n    model_id: \"eleven_multilingual_v2\"\n});\n"
					}
				]
			}
		},
		"/v1/text-to-speech/{voice_id}/stream/with-timestamps": {
			"post": {
				"tags": [
					"text-to-speech"
				],
				"summary": "Text To Speech Streaming With Timestamps",
				"description": "Converts text into speech using a voice of your choice and returns a stream of JSONs containing audio as a base64 encoded string together with information on when which character was spoken.",
				"operationId": "Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post",
				"parameters": [
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "When enable_logging is set to false full privacy mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Full privacy mode may only be used by enterprise customers.",
						"required": false,
						"schema": {
							"type": "boolean",
							"title": "Enable request logging.",
							"description": "When enable_logging is set to false full privacy mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Full privacy mode may only be used by enterprise customers.",
							"default": true
						},
						"name": "enable_logging",
						"in": "query"
					},
					{
						"description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
						"required": false,
						"deprecated": true,
						"schema": {
							"type": "integer",
							"title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
							"description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n"
						},
						"name": "optimize_streaming_latency",
						"in": "query"
					},
					{
						"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Output format of the generated audio.",
							"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
							"default": "mp3_44100_128"
						},
						"name": "output_format",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "stream_with_timestamps",
				"x-fern-streaming": true,
				"x-fern-sdk-group-name": "text_to_speech",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nresponse = client.text_to_speech.stream_with_timestamps(\n    voice_id=\"JBFqnCBsd6RMkjVDRZzb\",\n    output_format=\"mp3_44100_128\",\n    text=\"The first move is what sets everything in motion.\",\n    model_id=\"eleven_multilingual_v2\",\n)\nfor chunk in response:\n    yield chunk\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nconst response = await client.textToSpeech.streamWithTimestamps(\"JBFqnCBsd6RMkjVDRZzb\", {\n    output_format: \"mp3_44100_128\",\n    text: \"The first move is what sets everything in motion.\",\n    model_id: \"eleven_multilingual_v2\"\n});\nfor await (const item of response) {\n    console.log(item);\n}\n"
					}
				]
			}
		},
		"/v1/speech-to-speech/{voice_id}": {
			"post": {
				"tags": [
					"speech-to-speech"
				],
				"summary": "Speech To Speech",
				"description": "Create speech by combining the content and emotion of the uploaded audio with a voice of your choice.",
				"operationId": "Speech_to_Speech_v1_speech_to_speech__voice_id__post",
				"parameters": [
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "When enable_logging is set to false full privacy mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Full privacy mode may only be used by enterprise customers.",
						"required": false,
						"schema": {
							"type": "boolean",
							"title": "Enable request logging.",
							"description": "When enable_logging is set to false full privacy mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Full privacy mode may only be used by enterprise customers.",
							"default": true
						},
						"name": "enable_logging",
						"in": "query"
					},
					{
						"description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
						"required": false,
						"deprecated": true,
						"schema": {
							"type": "integer",
							"title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
							"description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n"
						},
						"name": "optimize_streaming_latency",
						"in": "query"
					},
					{
						"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Output format of the generated audio.",
							"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
							"default": "mp3_44100_128"
						},
						"name": "output_format",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"audio/mpeg": {}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "convert",
				"x-fern-sdk-group-name": "speech_to_speech",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.speech_to_speech.convert(\n    voice_id=\"JBFqnCBsd6RMkjVDRZzb\",\n    output_format=\"mp3_44100_128\",\n    model_id=\"eleven_multilingual_sts_v2\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\nimport * as fs from \"fs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.speechToSpeech.convert(\"JBFqnCBsd6RMkjVDRZzb\", {\n    audio: fs.createReadStream(\"/path/to/your/file\"),\n    output_format: \"mp3_44100_128\",\n    model_id: \"eleven_multilingual_sts_v2\"\n});\n"
					}
				]
			}
		},
		"/v1/speech-to-speech/{voice_id}/stream": {
			"post": {
				"tags": [
					"speech-to-speech"
				],
				"summary": "Speech To Speech Streaming",
				"description": "Create speech by combining the content and emotion of the uploaded audio with a voice of your choice and returns an audio stream.",
				"operationId": "Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post",
				"parameters": [
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "When enable_logging is set to false full privacy mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Full privacy mode may only be used by enterprise customers.",
						"required": false,
						"schema": {
							"type": "boolean",
							"title": "Enable request logging.",
							"description": "When enable_logging is set to false full privacy mode will be used for the request. This will mean history features are unavailable for this request, including request stitching. Full privacy mode may only be used by enterprise customers.",
							"default": true
						},
						"name": "enable_logging",
						"in": "query"
					},
					{
						"description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n",
						"required": false,
						"deprecated": true,
						"schema": {
							"type": "integer",
							"title": "DEPRECATED. How much we should optimize streaming request latency (time to first audio byte).",
							"description": "You can turn on latency optimizations at some cost of quality. The best possible final latency varies by model. Possible values:\n0 - default mode (no latency optimizations)\n1 - normal latency optimizations (about 50% of possible latency improvement of option 3)\n2 - strong latency optimizations (about 75% of possible latency improvement of option 3)\n3 - max latency optimizations\n4 - max latency optimizations, but also with text normalizer turned off for even more latency savings (best latency, but can mispronounce eg numbers and dates).\n\nDefaults to None.\n"
						},
						"name": "optimize_streaming_latency",
						"in": "query"
					},
					{
						"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Output format of the generated audio.",
							"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
							"default": "mp3_44100_128"
						},
						"name": "output_format",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "convert_as_stream",
				"x-fern-sdk-group-name": "speech_to_speech",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.speech_to_speech.convert_as_stream(\n    voice_id=\"JBFqnCBsd6RMkjVDRZzb\",\n    output_format=\"mp3_44100_128\",\n    model_id=\"eleven_multilingual_sts_v2\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\nimport * as fs from \"fs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.speechToSpeech.convertAsStream(\"JBFqnCBsd6RMkjVDRZzb\", {\n    audio: fs.createReadStream(\"/path/to/your/file\"),\n    output_format: \"mp3_44100_128\",\n    model_id: \"eleven_multilingual_sts_v2\"\n});\n"
					}
				]
			}
		},
		"/v1/voice-generation/generate-voice/parameters": {
			"get": {
				"tags": [
					"voice-generation"
				],
				"summary": "Voice Generation Parameters",
				"description": "Get possible parameters for the /v1/voice-generation/generate-voice endpoint.",
				"operationId": "Voice_Generation_Parameters_v1_voice_generation_generate_voice_parameters_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VoiceGenerationParameterResponseModel"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "generate_parameters",
				"x-fern-sdk-group-name": "voice_generation",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voice_generation.generate_parameters()\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voiceGeneration.generateParameters();\n"
					}
				]
			}
		},
		"/v1/voice-generation/generate-voice": {
			"post": {
				"tags": [
					"voice-generation"
				],
				"summary": "Generate A Random Voice",
				"description": "Generate a random voice based on parameters. This method returns a generated_voice_id in the response header, and a sample of the voice in the body. If you like the generated voice call /v1/voice-generation/create-voice with the generated_voice_id to create the voice.",
				"operationId": "Generate_a_random_voice_v1_voice_generation_generate_voice_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"audio/mpeg": {}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "generate",
				"x-fern-sdk-group-name": "voice_generation",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voice_generation.generate(\n    gender=\"female\",\n    accent=\"american\",\n    age=\"middle_aged\",\n    accent_strength=2.0,\n    text=\"It sure does, Jackie… My mama always said: “In Carolina, the air's so thick you can wear it!”\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voiceGeneration.generate({\n    gender: \"female\",\n    accent: \"american\",\n    age: \"middle_aged\",\n    accent_strength: 2,\n    text: \"It sure does, Jackie\\u2026 My mama always said: \\u201CIn Carolina, the air's so thick you can wear it!\\u201D\"\n});\n"
					}
				]
			}
		},
		"/v1/text-to-voice/create-previews": {
			"post": {
				"tags": [
					"text-to-voice"
				],
				"summary": "Generate A Voice Preview From Description",
				"description": "Generate a custom voice based on voice description. This method returns a list of voice previews. Each preview has a generated_voice_id and a sample of the voice as base64 encoded mp3 audio. If you like the a voice previewand want to create the voice call /v1/text-to-voice/create-voice-from-preview with the generated_voice_id to create the voice.",
				"operationId": "Generate_a_voice_preview_from_description_v1_text_to_voice_create_previews_post",
				"parameters": [
					{
						"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"mp3_22050_32",
								"mp3_44100_32",
								"mp3_44100_64",
								"mp3_44100_96",
								"mp3_44100_128",
								"mp3_44100_192",
								"pcm_16000",
								"pcm_22050",
								"pcm_24000",
								"pcm_44100",
								"ulaw_8000"
							],
							"title": "Output format of the generated audio.",
							"description": "Output format of the generated audio. Must be one of:\nmp3_22050_32 - output format, mp3 with 22.05kHz sample rate at 32kbps.\nmp3_44100_32 - output format, mp3 with 44.1kHz sample rate at 32kbps.\nmp3_44100_64 - output format, mp3 with 44.1kHz sample rate at 64kbps.\nmp3_44100_96 - output format, mp3 with 44.1kHz sample rate at 96kbps.\nmp3_44100_128 - default output format, mp3 with 44.1kHz sample rate at 128kbps.\nmp3_44100_192 - output format, mp3 with 44.1kHz sample rate at 192kbps. Requires you to be subscribed to Creator tier or above.\npcm_16000 - PCM format (S16LE) with 16kHz sample rate.\npcm_22050 - PCM format (S16LE) with 22.05kHz sample rate.\npcm_24000 - PCM format (S16LE) with 24kHz sample rate.\npcm_44100 - PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Pro tier or above.\nulaw_8000 - μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.\n",
							"default": "mp3_44100_192"
						},
						"name": "output_format",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VoicePreviewsRequestModel"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VoicePreviewsResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "create_previews",
				"x-fern-sdk-group-name": "text_to_voice",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_to_voice.create_previews(\n    voice_description=\"A sassy little squeaky mouse\",\n    text=\"Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted.\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.textToVoice.createPreviews({\n    voice_description: \"A sassy little squeaky mouse\",\n    text: \"Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted.\"\n});\n"
					}
				]
			}
		},
		"/v1/voice-generation/create-voice": {
			"post": {
				"tags": [
					"voice-generation"
				],
				"summary": "Create A Previously Generated Voice",
				"description": "Create a previously generated voice. This endpoint should be called after you fetched a generated_voice_id using /v1/voice-generation/generate-voice.",
				"operationId": "Create_a_previously_generated_voice_v1_voice_generation_create_voice_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VoiceResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "create_a_previously_generated_voice",
				"x-fern-sdk-group-name": "voice_generation",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voice_generation.create_a_previously_generated_voice(\n    voice_name=\"Alex\",\n    voice_description=\"Middle-aged American woman\",\n    generated_voice_id=\"rbVJFu6SGRD1dbWpKnWl\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voiceGeneration.createAPreviouslyGeneratedVoice({\n    voice_name: \"Alex\",\n    voice_description: \"Middle-aged American woman\",\n    generated_voice_id: \"rbVJFu6SGRD1dbWpKnWl\"\n});\n"
					}
				]
			}
		},
		"/v1/text-to-voice/create-voice-from-preview": {
			"post": {
				"tags": [
					"text-to-voice"
				],
				"summary": "Create A New Voice From Voice Preview",
				"description": "Create a voice from previously generated voice preview. This endpoint should be called after you fetched a generated_voice_id using /v1/text-to-voice/create-previews.",
				"operationId": "Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VoiceResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "create_voice_from_preview",
				"x-fern-sdk-group-name": "text_to_voice",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.text_to_voice.create_voice_from_preview(\n    voice_name=\"Little squeaky mouse\",\n    voice_description=\"A sassy little squeaky mouse\",\n    generated_voice_id=\"37HceQefKmEi3bGovXjL\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.textToVoice.createVoiceFromPreview({\n    voice_name: \"Little squeaky mouse\",\n    voice_description: \"A sassy little squeaky mouse\",\n    generated_voice_id: \"37HceQefKmEi3bGovXjL\"\n});\n"
					}
				]
			}
		},
		"/v1/user/subscription": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "Get User Subscription Info",
				"description": "Gets extended information about the users subscription",
				"operationId": "Get_user_subscription_info_v1_user_subscription_get",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ExtendedSubscriptionResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_subscription",
				"x-fern-sdk-group-name": "user",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.user.get_subscription()\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.user.getSubscription();\n"
					}
				]
			}
		},
		"/v1/user": {
			"get": {
				"tags": [
					"user"
				],
				"summary": "Get User Info",
				"description": "Gets information about the user",
				"operationId": "Get_user_info_v1_user_get",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get",
				"x-fern-sdk-group-name": "user",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.user.get()\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.user.get();\n"
					}
				]
			}
		},
		"/v1/voices": {
			"get": {
				"tags": [
					"voices"
				],
				"summary": "Get Voices",
				"description": "Gets a list of all available voices for a user.",
				"operationId": "Get_voices_v1_voices_get",
				"parameters": [
					{
						"description": "If set to true, legacy premade voices will be included in responses from /v1/voices",
						"required": false,
						"schema": {
							"type": "boolean",
							"title": "Show Legacy",
							"description": "If set to true, legacy premade voices will be included in responses from /v1/voices",
							"default": false
						},
						"example": true,
						"name": "show_legacy",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetVoicesResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_all",
				"x-fern-sdk-group-name": "voices",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voices.get_all()\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voices.getAll();\n"
					}
				]
			}
		},
		"/v1/voices/settings/default": {
			"get": {
				"tags": [
					"voices"
				],
				"summary": "Get Default Voice Settings.",
				"description": "Gets the default settings for voices. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
				"operationId": "Get_default_voice_settings__v1_voices_settings_default_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VoiceSettingsResponseModel"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_default_settings",
				"x-fern-sdk-group-name": "voices",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voices.get_default_settings()\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voices.getDefaultSettings();\n"
					}
				]
			}
		},
		"/v1/voices/{voice_id}/settings": {
			"get": {
				"tags": [
					"voices"
				],
				"summary": "Get Voice Settings",
				"description": "Returns the settings for a specific voice. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
				"operationId": "Get_voice_settings_v1_voices__voice_id__settings_get",
				"parameters": [
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VoiceSettingsResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_settings",
				"x-fern-sdk-group-name": "voices",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voices.get_settings(\n    voice_id=\"JBFqnCBsd6RMkjVDRZzb\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voices.getSettings(\"JBFqnCBsd6RMkjVDRZzb\");\n"
					}
				]
			}
		},
		"/v1/voices/{voice_id}": {
			"get": {
				"tags": [
					"voices"
				],
				"summary": "Get Voice",
				"description": "Returns metadata about a specific voice.",
				"operationId": "Get_voice_v1_voices__voice_id__get",
				"parameters": [
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "If set will return settings information corresponding to the voice, requires authorization.",
						"required": false,
						"schema": {
							"type": "boolean",
							"title": "With Settings",
							"description": "If set will return settings information corresponding to the voice, requires authorization.",
							"default": false
						},
						"name": "with_settings",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VoiceResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get",
				"x-fern-sdk-group-name": "voices",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voices.get(\n    voice_id=\"JBFqnCBsd6RMkjVDRZzb\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voices.get(\"JBFqnCBsd6RMkjVDRZzb\");\n"
					}
				]
			},
			"delete": {
				"tags": [
					"voices"
				],
				"summary": "Delete Voice",
				"description": "Deletes a voice by its ID.",
				"operationId": "Delete_voice_v1_voices__voice_id__delete",
				"parameters": [
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "delete",
				"x-fern-sdk-group-name": "voices",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voices.delete(\n    voice_id=\"VOICE_ID\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voices.delete(\"VOICE_ID\");\n"
					}
				]
			}
		},
		"/v1/voices/{voice_id}/settings/edit": {
			"post": {
				"tags": [
					"voices"
				],
				"summary": "Edit Voice Settings",
				"description": "Edit your settings for a specific voice. \"similarity_boost\" corresponds to\"Clarity + Similarity Enhancement\" in the web app and \"stability\" corresponds to \"Stability\" slider in the web app.",
				"operationId": "Edit_voice_settings_v1_voices__voice_id__settings_edit_post",
				"parameters": [
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/components/schemas/VoiceSettingsResponseModel"
									}
								],
								"title": "Settings",
								"description": "The settings for a specific voice."
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "edit_settings",
				"x-fern-sdk-group-name": "voices",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs, VoiceSettings\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voices.edit_settings(\n    voice_id=\"VOICE_ID\",\n    request=VoiceSettings(\n        stability=0.1,\n        similarity_boost=0.3,\n        style=0.2,\n    ),\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voices.editSettings(\"VOICE_ID\", {\n    stability: 0.1,\n    similarity_boost: 0.3,\n    style: 0.2\n});\n"
					}
				]
			}
		},
		"/v1/voices/add": {
			"post": {
				"tags": [
					"voices"
				],
				"summary": "Add Voice",
				"description": "Add a new voice to your collection of voices in VoiceLab.",
				"operationId": "Add_voice_v1_voices_add_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_Add_voice_v1_voices_add_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AddVoiceIVCResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "add",
				"x-fern-sdk-group-name": "voices",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voices.add(\n    name=\"Alex\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\nimport * as fs from \"fs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voices.add({\n    files: [fs.createReadStream(\"/path/to/your/file\")],\n    name: \"Alex\"\n});\n"
					}
				]
			}
		},
		"/v1/voices/{voice_id}/edit": {
			"post": {
				"tags": [
					"voices"
				],
				"summary": "Edit Voice",
				"description": "Edit a voice created by you.",
				"operationId": "Edit_voice_v1_voices__voice_id__edit_post",
				"parameters": [
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_Edit_voice_v1_voices__voice_id__edit_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "edit",
				"x-fern-sdk-group-name": "voices",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voices.edit(\n    voice_id=\"VOICE_ID\",\n    name=\"George\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voices.edit(\"VOICE_ID\", {\n    name: \"George\"\n});\n"
					}
				]
			}
		},
		"/v1/voices/add/{public_user_id}/{voice_id}": {
			"post": {
				"tags": [
					"voices"
				],
				"summary": "Add Sharing Voice",
				"description": "Add a sharing voice to your collection of voices in VoiceLab.",
				"operationId": "Add_sharing_voice_v1_voices_add__public_user_id___voice_id__post",
				"parameters": [
					{
						"description": "Public user ID used to publicly identify ElevenLabs users.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Public User Id",
							"description": "Public user ID used to publicly identify ElevenLabs users."
						},
						"example": "63e06b7e7cafdc46be4d2e0b3f045940231ae058d508589653d74d1265a574ca",
						"name": "public_user_id",
						"in": "path"
					},
					{
						"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Voice Id",
							"description": "Voice ID to be used, you can use https://api.elevenlabs.io/v1/voices to list all the available voices."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "voice_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Add_sharing_voice_v1_voices_add__public_user_id___voice_id__post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AddVoiceResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "add_sharing_voice",
				"x-fern-sdk-group-name": "voices",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voices.add_sharing_voice(\n    public_user_id=\"63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f\",\n    voice_id=\"sB1b5zUrxQVAFl2PhZFp\",\n    new_name=\"Alita\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voices.addSharingVoice(\"63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f\", \"sB1b5zUrxQVAFl2PhZFp\", {\n    new_name: \"Alita\"\n});\n"
					}
				]
			}
		},
		"/v1/projects": {
			"get": {
				"tags": [
					"projects"
				],
				"summary": "Get Projects",
				"description": "Returns a list of your projects together and its metadata.",
				"operationId": "Get_projects_v1_projects_get",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetProjectsResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_all",
				"x-fern-sdk-group-name": "projects",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.projects.get_all()\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.projects.getAll();\n"
					}
				]
			}
		},
		"/v1/projects/add": {
			"post": {
				"tags": [
					"projects"
				],
				"summary": "Add Project",
				"description": "Creates a new project, it can be either initialized as blank, from a document or from a URL.",
				"operationId": "Add_project_v1_projects_add_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_Add_project_v1_projects_add_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AddProjectResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "add",
				"x-fern-sdk-group-name": "projects",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.projects.add(\n    name=\"name\",\n    default_title_voice_id=\"default_title_voice_id\",\n    default_paragraph_voice_id=\"default_paragraph_voice_id\",\n    default_model_id=\"default_model_id\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.projects.add({\n    name: \"name\",\n    default_title_voice_id: \"default_title_voice_id\",\n    default_paragraph_voice_id: \"default_paragraph_voice_id\",\n    default_model_id: \"default_model_id\"\n});\n"
					}
				]
			}
		},
		"/v1/projects/{project_id}": {
			"get": {
				"tags": [
					"projects"
				],
				"summary": "Get Project By Id",
				"description": "Returns information about a specific project. This endpoint returns more detailed information about a project than GET api.elevenlabs.io/v1/projects.",
				"operationId": "Get_project_by_ID_v1_projects__project_id__get",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProjectExtendedResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get",
				"x-fern-sdk-group-name": "projects",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.projects.get(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.projects.get(\"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			},
			"post": {
				"tags": [
					"projects"
				],
				"summary": "Edit Basic Project Info",
				"description": "Edits basic project info.",
				"operationId": "Edit_basic_project_info_v1_projects__project_id__post",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Edit_basic_project_info_v1_projects__project_id__post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EditProjectResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "edit_basic_project_info",
				"x-fern-sdk-group-name": "projects",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.projects.edit_basic_project_info(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n    name=\"name\",\n    default_title_voice_id=\"default_title_voice_id\",\n    default_paragraph_voice_id=\"default_paragraph_voice_id\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.projects.editBasicProjectInfo(\"21m00Tcm4TlvDq8ikWAM\", {\n    name: \"name\",\n    default_title_voice_id: \"default_title_voice_id\",\n    default_paragraph_voice_id: \"default_paragraph_voice_id\"\n});\n"
					}
				]
			},
			"delete": {
				"tags": [
					"projects"
				],
				"summary": "Delete Project",
				"description": "Delete a project by its project_id.",
				"operationId": "Delete_project_v1_projects__project_id__delete",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "delete",
				"x-fern-sdk-group-name": "projects",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.projects.delete(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.projects.delete(\"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/projects/{project_id}/convert": {
			"post": {
				"tags": [
					"projects"
				],
				"summary": "Convert Project",
				"description": "Starts conversion of a project and all of its chapters.",
				"operationId": "Convert_project_v1_projects__project_id__convert_post",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "convert",
				"x-fern-sdk-group-name": "projects",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.projects.convert(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.projects.convert(\"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/projects/{project_id}/snapshots": {
			"get": {
				"tags": [
					"projects"
				],
				"summary": "Get Project Snapshots",
				"description": "Gets the snapshots of a project.",
				"operationId": "Get_project_snapshots_v1_projects__project_id__snapshots_get",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProjectSnapshotsResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_snapshots",
				"x-fern-sdk-group-name": "projects",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.projects.get_snapshots(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.projects.getSnapshots(\"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/projects/{project_id}/snapshots/{project_snapshot_id}/stream": {
			"post": {
				"tags": [
					"projects"
				],
				"summary": "Stream Project Audio",
				"description": "Stream the audio from a project snapshot.",
				"operationId": "Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "The project_snapshot_id of the project snapshot. You can query GET /v1/projects/{project_id}/snapshots to list all available snapshots for a project.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Snapshot Id",
							"description": "The project_snapshot_id of the project snapshot. You can query GET /v1/projects/{project_id}/snapshots to list all available snapshots for a project."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_snapshot_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "stream_audio",
				"x-fern-sdk-group-name": "projects",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.projects.stream_audio(\n    project_id=\"string\",\n    project_snapshot_id=\"string\",\n    convert_to_mpeg=True,\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.projects.streamAudio(\"string\", \"string\", {\n    convert_to_mpeg: true\n});\n"
					}
				]
			}
		},
		"/v1/projects/{project_id}/snapshots/{project_snapshot_id}/archive": {
			"post": {
				"tags": [
					"projects"
				],
				"summary": "Streams Archive With Project Audio",
				"description": "Streams archive with project audio.",
				"operationId": "Streams_archive_with_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__archive_post",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "The project_snapshot_id of the project snapshot. You can query GET /v1/projects/{project_id}/snapshots to list all available snapshots for a project.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Snapshot Id",
							"description": "The project_snapshot_id of the project snapshot. You can query GET /v1/projects/{project_id}/snapshots to list all available snapshots for a project."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_snapshot_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "stream_archive",
				"x-fern-sdk-group-name": "projects",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.projects.stream_archive(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n    project_snapshot_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.projects.streamArchive(\"21m00Tcm4TlvDq8ikWAM\", \"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/projects/{project_id}/chapters": {
			"get": {
				"tags": [
					"projects"
				],
				"summary": "Get Chapters",
				"description": "Returns a list of your chapters for a project together and its metadata.",
				"operationId": "Get_chapters_v1_projects__project_id__chapters_get",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetChaptersResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_all",
				"x-fern-sdk-group-name": "chapters",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.chapters.get_all(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.chapters.getAll(\"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/projects/{project_id}/chapters/{chapter_id}": {
			"get": {
				"tags": [
					"projects"
				],
				"summary": "Get Chapter By Id",
				"description": "Returns information about a specific chapter.",
				"operationId": "Get_chapter_by_ID_v1_projects__project_id__chapters__chapter_id__get",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Chapter Id",
							"description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "chapter_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChapterResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get",
				"x-fern-sdk-group-name": "chapters",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.chapters.get(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n    chapter_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.chapters.get(\"21m00Tcm4TlvDq8ikWAM\", \"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			},
			"delete": {
				"tags": [
					"projects"
				],
				"summary": "Delete Chapter",
				"description": "Delete a chapter by its chapter_id.",
				"operationId": "Delete_chapter_v1_projects__project_id__chapters__chapter_id__delete",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Chapter Id",
							"description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "chapter_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "delete",
				"x-fern-sdk-group-name": "chapters",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.chapters.delete(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n    chapter_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.chapters.delete(\"21m00Tcm4TlvDq8ikWAM\", \"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/projects/{project_id}/chapters/add": {
			"post": {
				"tags": [
					"projects"
				],
				"summary": "Add Chapter To A Project",
				"description": "Creates a new chapter either as blank or from a URL.",
				"operationId": "Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AddChapterResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "create",
				"x-fern-sdk-group-name": "chapters",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.chapters.create(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n    name=\"name\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.chapters.create(\"21m00Tcm4TlvDq8ikWAM\", {\n    name: \"name\"\n});\n"
					}
				]
			}
		},
		"/v1/projects/{project_id}/chapters/{chapter_id}/convert": {
			"post": {
				"tags": [
					"projects"
				],
				"summary": "Convert Chapter",
				"description": "Starts conversion of a specific chapter.",
				"operationId": "Convert_chapter_v1_projects__project_id__chapters__chapter_id__convert_post",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Chapter Id",
							"description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "chapter_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "convert",
				"x-fern-sdk-group-name": "chapters",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.chapters.convert(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n    chapter_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.chapters.convert(\"21m00Tcm4TlvDq8ikWAM\", \"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/projects/{project_id}/chapters/{chapter_id}/snapshots": {
			"get": {
				"tags": [
					"projects"
				],
				"summary": "Get Chapter Snapshots",
				"description": "Gets information about all the snapshots of a chapter, each snapshot corresponds can be downloaded as audio. Whenever a chapter is converted a snapshot will be automatically created.",
				"operationId": "Get_chapter_snapshots_v1_projects__project_id__chapters__chapter_id__snapshots_get",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Chapter Id",
							"description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "chapter_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ChapterSnapshotsResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_all_snapshots",
				"x-fern-sdk-group-name": "chapters",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.chapters.get_all_snapshots(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n    chapter_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.chapters.getAllSnapshots(\"21m00Tcm4TlvDq8ikWAM\", \"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}/stream": {
			"post": {
				"tags": [
					"projects"
				],
				"summary": "Stream Chapter Audio",
				"description": "Stream the audio from a chapter snapshot. Use `GET /v1/projects/{project_id}/chapters/{chapter_id}/snapshots` to return the chapter snapshots of a chapter.",
				"operationId": "Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Chapter Id",
							"description": "The chapter_id of the chapter. You can query GET https://api.elevenlabs.io/v1/projects/{project_id}/chapters to list all available chapters for a project."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "chapter_id",
						"in": "path"
					},
					{
						"description": "The chapter_snapshot_id of the chapter snapshot. You can query GET /v1/projects/{project_id}/chapters/{chapter_id}/snapshots to the all available snapshots for a chapter.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Chapter Snapshot Id",
							"description": "The chapter_snapshot_id of the chapter snapshot. You can query GET /v1/projects/{project_id}/chapters/{chapter_id}/snapshots to the all available snapshots for a chapter."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "chapter_snapshot_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "stream_snapshot",
				"x-fern-sdk-group-name": "chapters",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.chapters.stream_snapshot(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n    chapter_id=\"21m00Tcm4TlvDq8ikWAM\",\n    chapter_snapshot_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.chapters.streamSnapshot(\"21m00Tcm4TlvDq8ikWAM\", \"21m00Tcm4TlvDq8ikWAM\", \"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/projects/{project_id}/update-pronunciation-dictionaries": {
			"post": {
				"tags": [
					"projects"
				],
				"summary": "Update Pronunciation Dictionaries",
				"description": "Updates the set of pronunciation dictionaries acting on a project. This will automatically mark text within this project as requiring reconverting where the new dictionary would apply or the old one no longer does.",
				"operationId": "Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post",
				"parameters": [
					{
						"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Project Id",
							"description": "The project_id of the project, you can query GET https://api.elevenlabs.io/v1/projects to list all available projects."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "project_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "update_pronunciation_dictionaries",
				"x-fern-sdk-group-name": "projects",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs, PronunciationDictionaryVersionLocator\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.projects.update_pronunciation_dictionaries(\n    project_id=\"21m00Tcm4TlvDq8ikWAM\",\n    pronunciation_dictionary_locators=[\n        PronunciationDictionaryVersionLocator(\n            pronunciation_dictionary_id=\"pronunciation_dictionary_id\",\n            version_id=\"version_id\",\n        )\n    ],\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.projects.updatePronunciationDictionaries(\"21m00Tcm4TlvDq8ikWAM\", {\n    pronunciation_dictionary_locators: [{\n            pronunciation_dictionary_id: \"pronunciation_dictionary_id\",\n            version_id: \"version_id\"\n        }]\n});\n"
					}
				]
			}
		},
		"/v1/dubbing": {
			"post": {
				"tags": [
					"dubbing"
				],
				"summary": "Dub A Video Or An Audio File",
				"description": "Dubs provided audio or video file into given language.",
				"operationId": "Dub_a_video_or_an_audio_file_v1_dubbing_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_Dub_a_video_or_an_audio_file_v1_dubbing_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DoDubbingResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "dub_a_video_or_an_audio_file",
				"x-fern-sdk-group-name": "dubbing",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.dubbing.dub_a_video_or_an_audio_file(\n    target_lang=\"target_lang\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.dubbing.dubAVideoOrAnAudioFile({\n    target_lang: \"target_lang\"\n});\n"
					}
				]
			}
		},
		"/v1/dubbing/{dubbing_id}": {
			"get": {
				"tags": [
					"dubbing"
				],
				"summary": "Get Dubbing Project Metadata",
				"description": "Returns metadata about a dubbing project, including whether it's still in progress or not",
				"operationId": "Get_dubbing_project_metadata_v1_dubbing__dubbing_id__get",
				"parameters": [
					{
						"description": "ID of the dubbing project.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Dubbing Id",
							"description": "ID of the dubbing project."
						},
						"name": "dubbing_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/DubbingMetadataResponse"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_dubbing_project_metadata",
				"x-fern-sdk-group-name": "dubbing",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.dubbing.get_dubbing_project_metadata(\n    dubbing_id=\"dubbing_id\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.dubbing.getDubbingProjectMetadata(\"dubbing_id\");\n"
					}
				]
			},
			"delete": {
				"tags": [
					"dubbing"
				],
				"summary": "Delete Dubbing Project",
				"description": "Deletes a dubbing project.",
				"operationId": "Delete_dubbing_project_v1_dubbing__dubbing_id__delete",
				"parameters": [
					{
						"description": "ID of the dubbing project.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Dubbing Id",
							"description": "ID of the dubbing project."
						},
						"name": "dubbing_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "delete_dubbing_project",
				"x-fern-sdk-group-name": "dubbing",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.dubbing.delete_dubbing_project(\n    dubbing_id=\"dubbing_id\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.dubbing.deleteDubbingProject(\"dubbing_id\");\n"
					}
				]
			}
		},
		"/v1/dubbing/{dubbing_id}/audio/{language_code}": {
			"get": {
				"tags": [
					"dubbing"
				],
				"summary": "Get Dubbed File",
				"description": "Returns dubbed file as a streamed file. Videos will be returned in MP4 format and audio only dubs will be returned in MP3.",
				"operationId": "Get_dubbed_file_v1_dubbing__dubbing_id__audio__language_code__get",
				"parameters": [
					{
						"description": "ID of the dubbing project.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Dubbing Id",
							"description": "ID of the dubbing project."
						},
						"name": "dubbing_id",
						"in": "path"
					},
					{
						"description": "ID of the language.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Language Code",
							"description": "ID of the language."
						},
						"name": "language_code",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/octet-stream": {}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_dubbed_file",
				"x-fern-sdk-group-name": "dubbing",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.dubbing.get_dubbed_file(\n    dubbing_id=\"string\",\n    language_code=\"string\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.dubbing.getDubbedFile(\"string\", \"string\");\n"
					}
				]
			}
		},
		"/v1/dubbing/{dubbing_id}/transcript/{language_code}": {
			"get": {
				"tags": [
					"dubbing"
				],
				"summary": "Get Transcript For Dub",
				"description": "Returns transcript for the dub as an SRT file.",
				"operationId": "Get_transcript_for_dub_v1_dubbing__dubbing_id__transcript__language_code__get",
				"parameters": [
					{
						"description": "ID of the dubbing project.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Dubbing Id",
							"description": "ID of the dubbing project."
						},
						"name": "dubbing_id",
						"in": "path"
					},
					{
						"description": "ID of the language.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Language Code",
							"description": "ID of the language."
						},
						"name": "language_code",
						"in": "path"
					},
					{
						"description": "Format to use for the subtitle file, either 'srt' or 'webvtt'",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"srt",
								"webvtt"
							],
							"title": "Format Type",
							"description": "Format to use for the subtitle file, either 'srt' or 'webvtt'",
							"embed": true
						},
						"name": "format_type",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							},
							"application/text": {}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_dubbing_transcript",
				"x-fern-sdk-group-name": "dubbing",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.dubbing.get_transcript_for_dub(\n    dubbing_id=\"dubbing_id\",\n    language_code=\"language_code\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.dubbing.getTranscriptForDub(\"dubbing_id\", \"language_code\");\n"
					}
				]
			}
		},
		"/v1/models": {
			"get": {
				"tags": [
					"models"
				],
				"summary": "Get Models",
				"description": "Gets a list of available models.",
				"operationId": "Get_Models_v1_models_get",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ModelResponseModel"
									},
									"type": "array",
									"title": "Response Get Models V1 Models Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_all",
				"x-fern-sdk-group-name": "models",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.models.get_all()\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.models.getAll();\n"
					}
				]
			}
		},
		"/v1/audio-native": {
			"post": {
				"tags": [
					"audio-native"
				],
				"summary": "Creates Audionative Enabled Project.",
				"description": "Creates AudioNative enabled project, optionally starts conversion and returns project id and embeddable html snippet.",
				"operationId": "Creates_AudioNative_enabled_project__v1_audio_native_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_Creates_AudioNative_enabled_project__v1_audio_native_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AudioNativeCreateProjectResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "create",
				"x-fern-sdk-group-name": "audio_native",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.audio_native.create(\n    name=\"name\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.audioNative.create({\n    name: \"name\"\n});\n"
					}
				]
			}
		},
		"/v1/shared-voices": {
			"get": {
				"tags": [
					"voices"
				],
				"summary": "Get Voices",
				"description": "Gets a list of shared voices.",
				"operationId": "Get_voices_v1_shared_voices_get",
				"parameters": [
					{
						"description": "How many shared voices to return at maximum. Can not exceed 100, defaults to 30.",
						"required": false,
						"schema": {
							"type": "integer",
							"title": "Page Size",
							"description": "How many shared voices to return at maximum. Can not exceed 100, defaults to 30.",
							"default": 30
						},
						"name": "page_size",
						"in": "query"
					},
					{
						"description": "voice category used for filtering",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Category",
							"description": "voice category used for filtering"
						},
						"example": "professional",
						"name": "category",
						"in": "query"
					},
					{
						"description": "gender used for filtering",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Gender",
							"description": "gender used for filtering"
						},
						"example": "male",
						"name": "gender",
						"in": "query"
					},
					{
						"description": "age used for filtering",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Age",
							"description": "age used for filtering"
						},
						"example": "young",
						"name": "age",
						"in": "query"
					},
					{
						"description": "accent used for filtering",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Accent",
							"description": "accent used for filtering"
						},
						"example": "american",
						"name": "accent",
						"in": "query"
					},
					{
						"description": "language used for filtering",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Language",
							"description": "language used for filtering"
						},
						"example": "en",
						"name": "language",
						"in": "query"
					},
					{
						"description": "search term used for filtering",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Search",
							"description": "search term used for filtering"
						},
						"example": "tiktok",
						"name": "search",
						"in": "query"
					},
					{
						"description": "use-case used for filtering",
						"required": false,
						"schema": {
							"items": {
								"type": "string"
							},
							"type": "array",
							"title": "Use Cases",
							"description": "use-case used for filtering"
						},
						"example": "audiobook",
						"name": "use_cases",
						"in": "query"
					},
					{
						"description": "search term used for filtering",
						"required": false,
						"schema": {
							"items": {
								"type": "string"
							},
							"type": "array",
							"title": "Descriptives",
							"description": "search term used for filtering"
						},
						"example": "tiktok",
						"name": "descriptives",
						"in": "query"
					},
					{
						"description": "Filter featured voices",
						"required": false,
						"schema": {
							"type": "boolean",
							"title": "Featured",
							"description": "Filter featured voices",
							"default": false
						},
						"example": true,
						"name": "featured",
						"in": "query"
					},
					{
						"description": "Filter voices that are enabled for the reader app",
						"required": false,
						"schema": {
							"type": "boolean",
							"title": "Reader App Enabled",
							"description": "Filter voices that are enabled for the reader app",
							"default": false
						},
						"example": true,
						"name": "reader_app_enabled",
						"in": "query"
					},
					{
						"description": "Filter voices by public owner ID",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Owner Id",
							"description": "Filter voices by public owner ID"
						},
						"example": "7c9fab611d9a0e1fb2e7448a0c294a8804efc2bcc324b0a366a5d5232b7d1532",
						"name": "owner_id",
						"in": "query"
					},
					{
						"description": "sort criteria",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Sort",
							"description": "sort criteria"
						},
						"example": "created_date",
						"name": "sort",
						"in": "query"
					},
					{
						"required": false,
						"schema": {
							"type": "integer",
							"title": "Page",
							"default": 0
						},
						"name": "page",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetLibraryVoicesResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_shared",
				"x-fern-sdk-group-name": "voices",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voices.get_shared(\n    page_size=1,\n    gender=\"female\",\n    language=\"en\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voices.getShared({\n    page_size: 1,\n    gender: \"female\",\n    language: \"en\"\n});\n"
					}
				]
			}
		},
		"/v1/similar-voices": {
			"post": {
				"tags": [
					"voices"
				],
				"summary": "Get Similar Library Voices",
				"description": "Returns a list of shared voices similar to the provided audio sample. If neither similarity_threshold nor top_k is provided, we will apply default values.",
				"operationId": "Get_similar_library_voices_v1_similar_voices_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_Get_similar_library_voices_v1_similar_voices_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetLibraryVoicesResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_similar_library_voices",
				"x-fern-sdk-group-name": "voices",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voices.get_similar_library_voices()\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voices.getSimilarLibraryVoices({});\n"
					}
				]
			}
		},
		"/v1/usage/character-stats": {
			"get": {
				"tags": [
					"usage"
				],
				"summary": "Get Characters Usage Metrics",
				"description": "Returns the credit usage metrics for the current user or the entire workspace they are part of. The response will return a time axis with unix timestamps for each day and daily usage along that axis. The usage will be broken down by the specified breakdown type. For example, breakdown type \"voice\" will return the usage of each voice along the time axis.",
				"operationId": "Get_characters_usage_metrics_v1_usage_character_stats_get",
				"parameters": [
					{
						"description": "UTC Unix timestamp for the start of the usage window, in milliseconds. To include the first day of the window, the timestamp should be at 00:00:00 of that day.",
						"required": true,
						"schema": {
							"type": "integer",
							"title": "Start Unix",
							"description": "UTC Unix timestamp for the start of the usage window, in milliseconds. To include the first day of the window, the timestamp should be at 00:00:00 of that day."
						},
						"example": "1685574000",
						"name": "start_unix",
						"in": "query"
					},
					{
						"description": "UTC Unix timestamp for the end of the usage window, in milliseconds. To include the last day of the window, the timestamp should be at 23:59:59 of that day.",
						"required": true,
						"schema": {
							"type": "integer",
							"title": "End Unix",
							"description": "UTC Unix timestamp for the end of the usage window, in milliseconds. To include the last day of the window, the timestamp should be at 23:59:59 of that day."
						},
						"example": "1688165999",
						"name": "end_unix",
						"in": "query"
					},
					{
						"description": "Whether or not to include the statistics of the entire workspace.",
						"required": false,
						"schema": {
							"type": "boolean",
							"title": "Include Workspace Metrics",
							"description": "Whether or not to include the statistics of the entire workspace.",
							"default": false
						},
						"name": "include_workspace_metrics",
						"in": "query"
					},
					{
						"description": "How to break down the information. Cannot be \"user\" if include_workspace_metrics is False.",
						"required": false,
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/BreakdownTypes"
								}
							],
							"description": "How to break down the information. Cannot be \"user\" if include_workspace_metrics is False.",
							"default": "none"
						},
						"name": "breakdown_type",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsageCharactersResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_characters_usage_metrics",
				"x-fern-sdk-group-name": "usage",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.usage.get_characters_usage_metrics(\n    start_unix=1,\n    end_unix=1,\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.usage.getCharactersUsageMetrics({\n    start_unix: 1,\n    end_unix: 1\n});\n"
					}
				]
			}
		},
		"/v1/pronunciation-dictionaries/add-from-file": {
			"post": {
				"tags": [
					"Pronunciation Dictionary"
				],
				"summary": "Add A Pronunciation Dictionary",
				"description": "Creates a new pronunciation dictionary from a lexicon .PLS file",
				"operationId": "Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AddPronunciationDictionaryResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "add_from_file",
				"x-fern-sdk-group-name": "pronunciation_dictionary",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.pronunciation_dictionary.add_from_file(\n    name=\"name\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.pronunciationDictionary.addFromFile({\n    name: \"name\"\n});\n"
					}
				]
			}
		},
		"/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/add-rules": {
			"post": {
				"tags": [
					"Pronunciation Dictionary"
				],
				"summary": "Add Rules To The Pronunciation Dictionary",
				"description": "Add rules to the pronunciation dictionary",
				"operationId": "Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post",
				"parameters": [
					{
						"description": "The id of the pronunciation dictionary",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Pronunciation Dictionary Id",
							"description": "The id of the pronunciation dictionary"
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "pronunciation_dictionary_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AddPronunciationDictionaryRulesResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "add_rules",
				"x-fern-sdk-group-name": "pronunciation_dictionary",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\nfrom elevenlabs.pronunciation_dictionary import (\n    PronunciationDictionaryRule_Phoneme,\n)\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.pronunciation_dictionary.add_rules(\n    pronunciation_dictionary_id=\"21m00Tcm4TlvDq8ikWAM\",\n    rules=[\n        PronunciationDictionaryRule_Phoneme(\n            string_to_replace=\"rules\",\n            phoneme=\"rules\",\n            alphabet=\"rules\",\n        )\n    ],\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.pronunciationDictionary.addRules(\"21m00Tcm4TlvDq8ikWAM\", {\n    rules: [{\n            type: \"phoneme\",\n            string_to_replace: \"rules\",\n            phoneme: \"rules\",\n            alphabet: \"rules\"\n        }]\n});\n"
					}
				]
			}
		},
		"/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/remove-rules": {
			"post": {
				"tags": [
					"Pronunciation Dictionary"
				],
				"summary": "Remove Rules From The Pronunciation Dictionary",
				"description": "Remove rules from the pronunciation dictionary",
				"operationId": "Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post",
				"parameters": [
					{
						"description": "The id of the pronunciation dictionary",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Pronunciation Dictionary Id",
							"description": "The id of the pronunciation dictionary"
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "pronunciation_dictionary_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RemovePronunciationDictionaryRulesResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "remove_rules",
				"x-fern-sdk-group-name": "pronunciation_dictionary",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.pronunciation_dictionary.remove_rules(\n    pronunciation_dictionary_id=\"21m00Tcm4TlvDq8ikWAM\",\n    rule_strings=[\"rule_strings\"],\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.pronunciationDictionary.removeRules(\"21m00Tcm4TlvDq8ikWAM\", {\n    rule_strings: [\"rule_strings\"]\n});\n"
					}
				]
			}
		},
		"/v1/pronunciation-dictionaries/{dictionary_id}/{version_id}/download": {
			"get": {
				"tags": [
					"Pronunciation Dictionary"
				],
				"summary": "Get Pls File With A Pronunciation Dictionary Version Rules",
				"description": "Get PLS file with a pronunciation dictionary version rules",
				"operationId": "Get_PLS_file_with_a_pronunciation_dictionary_version_rules_v1_pronunciation_dictionaries__dictionary_id___version_id__download_get",
				"parameters": [
					{
						"description": "The id of the pronunciation dictionary",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Dictionary Id",
							"description": "The id of the pronunciation dictionary"
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "dictionary_id",
						"in": "path"
					},
					{
						"description": "The id of the version of the pronunciation dictionary",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Version Id",
							"description": "The id of the version of the pronunciation dictionary"
						},
						"example": "BdF0s0aZ3oFoKnDYdTox",
						"name": "version_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"text/plain": {}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "download",
				"x-fern-sdk-group-name": "pronunciation_dictionary",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.pronunciation_dictionary.download(\n    dictionary_id=\"Fm6AvNgS53NXe6Kqxp3e\",\n    version_id=\"KZFyRUq3R6kaqhKI146w\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.pronunciationDictionary.download(\"Fm6AvNgS53NXe6Kqxp3e\", \"KZFyRUq3R6kaqhKI146w\");\n"
					}
				]
			}
		},
		"/v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/": {
			"get": {
				"tags": [
					"Pronunciation Dictionary"
				],
				"summary": "Get Metadata For A Pronunciation Dictionary",
				"description": "Get metadata for a pronunciation dictionary",
				"operationId": "Get_metadata_for_a_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id___get",
				"parameters": [
					{
						"description": "The id of the pronunciation dictionary",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Pronunciation Dictionary Id",
							"description": "The id of the pronunciation dictionary"
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "pronunciation_dictionary_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetPronunciationDictionaryMetadataResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get",
				"x-fern-sdk-group-name": "pronunciation_dictionary",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.pronunciation_dictionary.get(\n    pronunciation_dictionary_id=\"Fm6AvNgS53NXe6Kqxp3e\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.pronunciationDictionary.get(\"Fm6AvNgS53NXe6Kqxp3e\");\n"
					}
				]
			}
		},
		"/v1/pronunciation-dictionaries/": {
			"get": {
				"tags": [
					"Pronunciation Dictionary"
				],
				"summary": "Get Pronunciation Dictionaries",
				"description": "Get a list of the pronunciation dictionaries you have access to and their metadata",
				"operationId": "Get_Pronunciation_Dictionaries_v1_pronunciation_dictionaries__get",
				"parameters": [
					{
						"description": "Used for fetching next page. Cursor is returned in the response.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Cursor",
							"description": "Used for fetching next page. Cursor is returned in the response."
						},
						"name": "cursor",
						"in": "query"
					},
					{
						"description": "How many pronunciation dictionaries to return at maximum. Can not exceed 100, defaults to 30.",
						"required": false,
						"schema": {
							"type": "integer",
							"maximum": 100,
							"minimum": 1,
							"title": "Page Size",
							"description": "How many pronunciation dictionaries to return at maximum. Can not exceed 100, defaults to 30.",
							"default": 30
						},
						"name": "page_size",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetPronunciationDictionariesMetadataResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_all",
				"x-fern-sdk-group-name": "pronunciation_dictionary",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.pronunciation_dictionary.get_all(\n    page_size=1,\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.pronunciationDictionary.getAll({\n    page_size: 1\n});\n"
					}
				]
			}
		},
		"/v1/workspace/invites/add": {
			"post": {
				"tags": [
					"workspace"
				],
				"summary": "Invite User",
				"description": "Sends an email invitation to join your workspace to the provided email. If the user doesn't have an account they will be prompted to create one. If the user accepts this invite they will be added as a user to your workspace and your subscription using one of your seats. This endpoint may only be called by workspace administrators.",
				"operationId": "Invite_user_v1_workspace_invites_add_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Invite_user_v1_workspace_invites_add_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.workspace.invite_user(\n    email=\"email\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.workspace.inviteUser({\n    email: \"email\"\n});\n"
					}
				]
			}
		},
		"/v1/workspace/invites": {
			"delete": {
				"tags": [
					"workspace"
				],
				"summary": "Delete Existing Invitation",
				"description": "Invalidates an existing email invitation. The invitation will still show up in the inbox it has been delivered to, but activating it to join the workspace won't work. This endpoint may only be called by workspace administrators.",
				"operationId": "Delete_existing_invitation_v1_workspace_invites_delete",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Delete_existing_invitation_v1_workspace_invites_delete"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.workspace.delete_existing_invitation(\n    email=\"email\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.workspace.deleteExistingInvitation({\n    email: \"email\"\n});\n"
					}
				]
			}
		},
		"/v1/workspace/members": {
			"post": {
				"tags": [
					"workspace"
				],
				"summary": "Update Member",
				"description": "Updates attributes of a workspace member. Apart from the email identifier, all parameters will remain unchanged unless specified. This endpoint may only be called by workspace administrators.",
				"operationId": "Update_member_v1_workspace_members_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Update_member_v1_workspace_members_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.workspace.update_member(\n    email=\"email\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.workspace.updateMember({\n    email: \"email\"\n});\n"
					}
				]
			}
		},
		"/profile/{handle}": {
			"get": {
				"tags": [
					"voices"
				],
				"summary": "Get A Profile Page",
				"description": "Gets a profile page based on a handle",
				"operationId": "Get_a_profile_page_profile__handle__get",
				"parameters": [
					{
						"description": "Handle for a VA's profile page",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Handle",
							"description": "Handle for a VA's profile page"
						},
						"example": "talexgeorge",
						"name": "handle",
						"in": "path"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProfilePageResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get",
				"x-fern-sdk-group-name": "profile",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.voices.get_a_profile_page(\n    handle=\"talexgeorge\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.voices.getAProfilePage(\"talexgeorge\");\n"
					}
				]
			}
		},
		"/v1/convai/conversation/get_signed_url": {
			"get": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Get Signed Url",
				"description": "Get a signed url to start a conversation with an agent with an agent that requires authorization",
				"operationId": "Get_Signed_Url_v1_convai_conversation_get_signed_url_get",
				"parameters": [
					{
						"description": "The id of the agent you're taking the action on.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Agent Id",
							"description": "The id of the agent you're taking the action on."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "agent_id",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ConversationSignedUrlResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_signed_url",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.get_signed_url(\n    agent_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.getSignedUrl({\n    agent_id: \"21m00Tcm4TlvDq8ikWAM\"\n});\n"
					}
				]
			}
		},
		"/v1/convai/agents/create": {
			"post": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Create Agent",
				"description": "Create an agent from a config object",
				"operationId": "Create_Agent_v1_convai_agents_create_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Create_Agent_v1_convai_agents_create_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreateAgentResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "create_agent",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ConversationalConfig, ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.create_agent(\n    conversation_config=ConversationalConfig(),\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.createAgent({\n    conversation_config: {}\n});\n"
					}
				]
			}
		},
		"/v1/convai/agents/{agent_id}": {
			"get": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Get Agent",
				"description": "Retrieve config for an agent",
				"operationId": "Get_Agent_v1_convai_agents__agent_id__get",
				"parameters": [
					{
						"description": "The id of an agent. This is returned on agent creation.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Agent Id",
							"description": "The id of an agent. This is returned on agent creation.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "agent_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAgentResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_agent",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.get_agent(\n    agent_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.getAgent(\"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			},
			"delete": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Delete Agent",
				"description": "Delete an agent",
				"operationId": "Delete_Agent_v1_convai_agents__agent_id__delete",
				"parameters": [
					{
						"description": "The id of an agent. This is returned on agent creation.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Agent Id",
							"description": "The id of an agent. This is returned on agent creation.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "agent_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"additionalProperties": {
										"type": "string"
									},
									"type": "object",
									"title": "Response Delete Agent V1 Convai Agents  Agent Id  Delete"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "delete_agent",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.delete_agent(\n    agent_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.deleteAgent(\"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			},
			"patch": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Patches An Agent Settings",
				"description": "Patches an Agent settings",
				"operationId": "Patches_an_Agent_settings_v1_convai_agents__agent_id__patch",
				"parameters": [
					{
						"description": "The id of an agent. This is returned on agent creation.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Agent Id",
							"description": "The id of an agent. This is returned on agent creation.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "agent_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAgentResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "update_agent",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.update_agent(\n    agent_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.updateAgent(\"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/convai/agents/{agent_id}/widget": {
			"get": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Get Agent Widget Config",
				"description": "Retrieve the widget configuration for an agent",
				"operationId": "Get_Agent_widget_config_v1_convai_agents__agent_id__widget_get",
				"parameters": [
					{
						"description": "The id of an agent. This is returned on agent creation.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Agent Id",
							"description": "The id of an agent. This is returned on agent creation.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "agent_id",
						"in": "path"
					},
					{
						"description": "An expiring token that enables a conversation to start. These can be generated for an agent using the /v1/convai/conversation/get_signed_url endpoint",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Conversation Signature",
							"description": "An expiring token that enables a conversation to start. These can be generated for an agent using the /v1/convai/conversation/get_signed_url endpoint"
						},
						"name": "conversation_signature",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAgentEmbedResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_agent_widget",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.get_agent_widget(\n    agent_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.getAgentWidget(\"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/convai/agents/{agent_id}/link": {
			"get": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Get Shareable Agent Link",
				"description": "Get the current link used to share the agent with others",
				"operationId": "Get_shareable_agent_link_v1_convai_agents__agent_id__link_get",
				"parameters": [
					{
						"description": "The id of an agent. This is returned on agent creation.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Agent Id",
							"description": "The id of an agent. This is returned on agent creation.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "agent_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAgentLinkResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_agent_link",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.get_agent_link(\n    agent_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.getAgentLink(\"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/convai/agents/{agent_id}/avatar": {
			"post": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Post Agent Avatar",
				"description": "Sets the avatar for an agent displayed in the widget",
				"operationId": "Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post",
				"parameters": [
					{
						"description": "The id of an agent. This is returned on agent creation.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Agent Id",
							"description": "The id of an agent. This is returned on agent creation.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "agent_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PostAgentAvatarResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "post_agent_avatar",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.post_agent_avatar(\n    agent_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\nimport * as fs from \"fs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.postAgentAvatar(\"21m00Tcm4TlvDq8ikWAM\", {\n    avatar_file: fs.createReadStream(\"/path/to/your/file\")\n});\n"
					}
				]
			}
		},
		"/v1/convai/agents/{agent_id}/knowledge-base/{documentation_id}": {
			"get": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Get Documentation From Agent'S Knowledge Base",
				"description": "Get details about a specific documentation making up the agent's knowledge base",
				"operationId": "Get_documentation_from_Agent_s_knowledge_base_v1_convai_agents__agent_id__knowledge_base__documentation_id__get",
				"parameters": [
					{
						"description": "The id of an agent. This is returned on agent creation.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Agent Id",
							"description": "The id of an agent. This is returned on agent creation.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "agent_id",
						"in": "path"
					},
					{
						"description": "The id of a document from the agent's knowledge base. This is returned on document addition.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Documentation Id",
							"description": "The id of a document from the agent's knowledge base. This is returned on document addition.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "documentation_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetKnowledgeBaseReponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_agent_knowledge_base_document_by_id",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.get_agent_knowledge_base_document_by_id(\n    agent_id=\"21m00Tcm4TlvDq8ikWAM\",\n    documentation_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.getAgentKnowledgeBaseDocumentById(\"21m00Tcm4TlvDq8ikWAM\", \"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/convai/agents/{agent_id}/add-secret": {
			"post": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Add A Secret To The Agent Which Can Be Referenced In Tool Calls",
				"description": "Uploads a file or reference a webpage for the agent to use as part of it's knowledge base",
				"operationId": "Add_a_secret_to_the_Agent_which_can_be_referenced_in_tool_calls_v1_convai_agents__agent_id__add_secret_post",
				"parameters": [
					{
						"description": "The id of an agent. This is returned on agent creation.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Agent Id",
							"description": "The id of an agent. This is returned on agent creation.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "agent_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Add_a_secret_to_the_Agent_which_can_be_referenced_in_tool_calls_v1_convai_agents__agent_id__add_secret_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AddAgentSecretResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "add_agent_secret",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.add_agent_secret(\n    agent_id=\"21m00Tcm4TlvDq8ikWAM\",\n    name=\"name\",\n    secret_value=\"secret_value\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.addAgentSecret(\"21m00Tcm4TlvDq8ikWAM\", {\n    name: \"name\",\n    secret_value: \"secret_value\"\n});\n"
					}
				]
			}
		},
		"/v1/convai/agents/{agent_id}/add-to-knowledge-base": {
			"post": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Add To Agent'S Knowledge Base",
				"description": "Uploads a file or reference a webpage for the agent to use as part of it's knowledge base",
				"operationId": "Add_to_Agent_s_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post",
				"parameters": [
					{
						"description": "The id of an agent. This is returned on agent creation.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Agent Id",
							"description": "The id of an agent. This is returned on agent creation.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "agent_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_Add_to_Agent_s_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AddKnowledgeBaseResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "add_to_agent_knowledge_base",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.add_to_agent_knowledge_base(\n    agent_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.addToAgentKnowledgeBase(\"21m00Tcm4TlvDq8ikWAM\", {});\n"
					}
				]
			}
		},
		"/v1/convai/agents": {
			"get": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Get Agents Page",
				"description": "Returns a page of your agents and their metadata.",
				"operationId": "Get_agents_page_v1_convai_agents_get",
				"parameters": [
					{
						"description": "Used for fetching next page. Cursor is returned in the response.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Cursor",
							"description": "Used for fetching next page. Cursor is returned in the response."
						},
						"name": "cursor",
						"in": "query"
					},
					{
						"description": "How many Agents to return at maximum. Can not exceed 100, defaults to 30.",
						"required": false,
						"schema": {
							"type": "integer",
							"maximum": 100,
							"minimum": 1,
							"title": "Page Size",
							"description": "How many Agents to return at maximum. Can not exceed 100, defaults to 30.",
							"default": 30
						},
						"name": "page_size",
						"in": "query"
					},
					{
						"description": "Search by agents name.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Search",
							"description": "Search by agents name."
						},
						"name": "search",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAgentsPageResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_agents",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.get_agents()\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.getAgents();\n"
					}
				]
			}
		},
		"/v1/convai/conversations": {
			"get": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Get Conversations",
				"description": "Get all conversations of agents that user owns. With option to restrict to a specific agent.",
				"operationId": "Get_Conversations_v1_convai_conversations_get",
				"parameters": [
					{
						"description": "Used for fetching next page. Cursor is returned in the response.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Cursor",
							"description": "Used for fetching next page. Cursor is returned in the response."
						},
						"name": "cursor",
						"in": "query"
					},
					{
						"description": "The id of the agent you're taking the action on.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Agent Id",
							"description": "The id of the agent you're taking the action on."
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "agent_id",
						"in": "query"
					},
					{
						"description": "The result of the success evaluation",
						"required": false,
						"schema": {
							"allOf": [
								{
									"$ref": "#/components/schemas/EvaluationSuccessResult"
								}
							],
							"description": "The result of the success evaluation"
						},
						"example": "success",
						"name": "call_successful",
						"in": "query"
					},
					{
						"description": "How many conversations to return at maximum. Can not exceed 100, defaults to 30.",
						"required": false,
						"schema": {
							"type": "integer",
							"maximum": 100,
							"minimum": 1,
							"title": "Page Size",
							"description": "How many conversations to return at maximum. Can not exceed 100, defaults to 30.",
							"default": 30
						},
						"name": "page_size",
						"in": "query"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetConversationsPageResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_conversations",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.get_conversations(\n    agent_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.getConversations({\n    agent_id: \"21m00Tcm4TlvDq8ikWAM\"\n});\n"
					}
				]
			}
		},
		"/v1/convai/conversations/{conversation_id}": {
			"get": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Get Conversation Details",
				"description": "Get the details of a particular conversation",
				"operationId": "Get_Conversation_Details_v1_convai_conversations__conversation_id__get",
				"parameters": [
					{
						"description": "The id of the conversation you're taking the action on.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Conversation Id",
							"description": "The id of the conversation you're taking the action on.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "conversation_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetConversationResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_conversation",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.get_conversation(\n    conversation_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.getConversation(\"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			},
			"delete": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Delete Conversation",
				"description": "Delete a particular conversation",
				"operationId": "Delete_Conversation_v1_convai_conversations__conversation_id__delete",
				"parameters": [
					{
						"description": "The id of the conversation you're taking the action on.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Conversation Id",
							"description": "The id of the conversation you're taking the action on.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "conversation_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "delete_conversation",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.delete_conversation(\n    conversation_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.deleteConversation(\"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/convai/conversations/{conversation_id}/audio": {
			"get": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Get Conversation Audio",
				"description": "Get the audio recording of a particular conversation",
				"operationId": "Get_Conversation_Audio_v1_convai_conversations__conversation_id__audio_get",
				"parameters": [
					{
						"description": "The id of the conversation you're taking the action on.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Conversation Id",
							"description": "The id of the conversation you're taking the action on.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "conversation_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response"
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_conversation_audio",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.get_conversation_audio(\n    conversation_id=\"21m00Tcm4TlvDq8ikWAM\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.getConversationAudio(\"21m00Tcm4TlvDq8ikWAM\");\n"
					}
				]
			}
		},
		"/v1/convai/conversations/{conversation_id}/feedback": {
			"post": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Send Conversation Feedback",
				"description": "Send the feedback for the given conversation",
				"operationId": "Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post",
				"parameters": [
					{
						"description": "The id of the conversation you're taking the action on.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Conversation Id",
							"description": "The id of the conversation you're taking the action on.",
							"embed": true
						},
						"example": "21m00Tcm4TlvDq8ikWAM",
						"name": "conversation_id",
						"in": "path"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "post_conversation_feedback",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.post_conversation_feedback(\n    conversation_id=\"21m00Tcm4TlvDq8ikWAM\",\n    feedback=\"like\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.postConversationFeedback(\"21m00Tcm4TlvDq8ikWAM\", {\n    feedback: \"like\"\n});\n"
					}
				]
			}
		},
		"/v1/convai/phone-numbers/create": {
			"post": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Import Phone Number",
				"description": "Import Phone Number from Twilio configuration",
				"operationId": "Import_phone_number_v1_convai_phone_numbers_create_post",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/components/schemas/CreatePhoneNumberRequest"
									}
								],
								"title": "Phone Request",
								"description": "Create Phone Request Information"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CreatePhoneNumberResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "create_phone_number",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.create_phone_number(\n    phone_number=\"phone_number\",\n    label=\"label\",\n    sid=\"sid\",\n    token=\"token\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.createPhoneNumber({\n    phone_number: \"phone_number\",\n    provider: \"twilio\",\n    label: \"label\",\n    sid: \"sid\",\n    token: \"token\"\n});\n"
					}
				]
			}
		},
		"/v1/convai/phone-numbers/{phone_number_id}": {
			"get": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Get Phone Number",
				"description": "Retrieve Phone Number details by ID",
				"operationId": "Get_phone_number_v1_convai_phone_numbers__phone_number_id__get",
				"parameters": [
					{
						"description": "The id of an agent. This is returned on agent creation.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Phone Number Id",
							"description": "The id of an agent. This is returned on agent creation.",
							"embed": true
						},
						"example": "TeaqRRdTcIfIu2i7BYfT",
						"name": "phone_number_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetPhoneNumberResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_phone_number",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.get_phone_number(\n    phone_number_id=\"TeaqRRdTcIfIu2i7BYfT\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.getPhoneNumber(\"TeaqRRdTcIfIu2i7BYfT\");\n"
					}
				]
			},
			"delete": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Delete Phone Number",
				"description": "Delete Phone Number by ID",
				"operationId": "Delete_phone_number_v1_convai_phone_numbers__phone_number_id__delete",
				"parameters": [
					{
						"description": "The id of an agent. This is returned on agent creation.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Phone Number Id",
							"description": "The id of an agent. This is returned on agent creation.",
							"embed": true
						},
						"example": "TeaqRRdTcIfIu2i7BYfT",
						"name": "phone_number_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "delete_phone_number",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.delete_phone_number(\n    phone_number_id=\"TeaqRRdTcIfIu2i7BYfT\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.deletePhoneNumber(\"TeaqRRdTcIfIu2i7BYfT\");\n"
					}
				]
			},
			"patch": {
				"tags": [
					"Conversational AI"
				],
				"summary": "Update Phone Number",
				"description": "Update Phone Number details by ID",
				"operationId": "Update_phone_number_v1_convai_phone_numbers__phone_number_id__patch",
				"parameters": [
					{
						"description": "The id of an agent. This is returned on agent creation.",
						"required": true,
						"schema": {
							"type": "string",
							"title": "Phone Number Id",
							"description": "The id of an agent. This is returned on agent creation.",
							"embed": true
						},
						"example": "TeaqRRdTcIfIu2i7BYfT",
						"name": "phone_number_id",
						"in": "path"
					},
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"allOf": [
									{
										"$ref": "#/components/schemas/UpdatePhoneNumberRequest"
									}
								],
								"title": "Phone Update Request",
								"description": "Patch Phone Request Information"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetPhoneNumberResponseModel"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "update_phone_number",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.update_phone_number(\n    phone_number_id=\"TeaqRRdTcIfIu2i7BYfT\",\n)\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.updatePhoneNumber(\"TeaqRRdTcIfIu2i7BYfT\");\n"
					}
				]
			}
		},
		"/v1/convai/phone-numbers/": {
			"get": {
				"tags": [
					"Conversational AI"
				],
				"summary": "List Phone Numbers",
				"description": "Retrieve all Phone Numbers",
				"operationId": "List_phone_numbers_v1_convai_phone_numbers__get",
				"parameters": [
					{
						"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.",
						"required": false,
						"schema": {
							"type": "string",
							"title": "Xi-Api-Key",
							"description": "Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website."
						},
						"name": "xi-api-key",
						"in": "header"
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/GetPhoneNumberResponseModel"
									},
									"type": "array",
									"title": "Response List Phone Numbers V1 Convai Phone Numbers  Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPValidationError"
								}
							}
						}
					}
				},
				"x-fern-sdk-method-name": "get_phone_numbers",
				"x-fern-sdk-group-name": "conversational_ai",
				"x-codeSamples": [
					{
						"lang": "Python",
						"source": "from elevenlabs import ElevenLabs\n\nclient = ElevenLabs(\n    api_key=\"YOUR_API_KEY\",\n)\nclient.conversational_ai.get_phone_numbers()\n"
					},
					{
						"lang": "JavaScript",
						"source": "import { ElevenLabsClient } from \"elevenlabs\";\n\nconst client = new ElevenLabsClient({ apiKey: \"YOUR_API_KEY\" });\nawait client.conversationalAi.getPhoneNumbers();\n"
					}
				]
			}
		},
		"/docs": {
			"get": {
				"summary": "Redirect To Mintlify",
				"operationId": "redirect_to_mintlify_docs_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"x-codeSamples": []
			}
		}
	},
	"components": {
		"schemas": {
			"ASRConversationalConfig": {
				"properties": {
					"quality": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ASRQuality"
							}
						],
						"default": "high"
					},
					"provider": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ASRProvider"
							}
						],
						"default": "elevenlabs"
					},
					"user_input_audio_format": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ASRInputFormat"
							}
						],
						"default": "pcm_16000"
					},
					"keywords": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Keywords"
					}
				},
				"type": "object",
				"title": "ASRConversationalConfig"
			},
			"ASRInputFormat": {
				"type": "string",
				"enum": [
					"pcm_16000",
					"pcm_22050",
					"pcm_24000",
					"pcm_44100",
					"ulaw_8000"
				],
				"title": "ASRInputFormat",
				"description": "An enumeration."
			},
			"ASRProvider": {
				"type": "string",
				"enum": [
					"elevenlabs"
				],
				"title": "ASRProvider",
				"description": "An enumeration."
			},
			"ASRQuality": {
				"type": "string",
				"enum": [
					"high"
				],
				"title": "ASRQuality",
				"description": "An enumeration."
			},
			"AddAgentSecretResponseModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					}
				},
				"type": "object",
				"required": [
					"id",
					"name"
				],
				"title": "AddAgentSecretResponseModel"
			},
			"AddChapterResponseModel": {
				"properties": {
					"chapter": {
						"$ref": "#/components/schemas/ChapterResponseModel"
					}
				},
				"type": "object",
				"required": [
					"chapter"
				],
				"title": "AddChapterResponseModel"
			},
			"AddKnowledgeBaseResponseModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					}
				},
				"type": "object",
				"required": [
					"id"
				],
				"title": "AddKnowledgeBaseResponseModel"
			},
			"AddProjectResponseModel": {
				"properties": {
					"project": {
						"$ref": "#/components/schemas/ProjectResponseModel"
					}
				},
				"type": "object",
				"required": [
					"project"
				],
				"title": "AddProjectResponseModel"
			},
			"AddPronunciationDictionaryResponseModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"created_by": {
						"type": "string",
						"title": "Created By"
					},
					"creation_time_unix": {
						"type": "integer",
						"title": "Creation Time Unix"
					},
					"version_id": {
						"type": "string",
						"title": "Version Id"
					},
					"description": {
						"type": "string",
						"title": "Description"
					}
				},
				"type": "object",
				"required": [
					"id",
					"name",
					"created_by",
					"creation_time_unix",
					"version_id"
				],
				"title": "AddPronunciationDictionaryResponseModel"
			},
			"AddPronunciationDictionaryRulesResponseModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"version_id": {
						"type": "string",
						"title": "Version Id"
					}
				},
				"type": "object",
				"required": [
					"id",
					"version_id"
				],
				"title": "AddPronunciationDictionaryRulesResponseModel"
			},
			"AddVoiceIVCResponseModel": {
				"properties": {
					"voice_id": {
						"type": "string",
						"title": "Voice Id"
					},
					"requires_verification": {
						"type": "boolean",
						"title": "Requires Verification"
					}
				},
				"type": "object",
				"required": [
					"voice_id",
					"requires_verification"
				],
				"title": "AddVoiceIVCResponseModel"
			},
			"AddVoiceResponseModel": {
				"properties": {
					"voice_id": {
						"type": "string",
						"title": "Voice Id"
					}
				},
				"type": "object",
				"required": [
					"voice_id"
				],
				"title": "AddVoiceResponseModel"
			},
			"AgentBan": {
				"properties": {
					"at_unix": {
						"type": "integer",
						"title": "At Unix"
					},
					"reason": {
						"type": "string",
						"title": "Reason"
					},
					"reason_type": {
						"$ref": "#/components/schemas/BanReasonType"
					}
				},
				"type": "object",
				"required": [
					"at_unix",
					"reason_type"
				],
				"title": "AgentBan"
			},
			"AgentConfig": {
				"properties": {
					"prompt": {
						"$ref": "#/components/schemas/PromptAgent"
					},
					"first_message": {
						"type": "string",
						"title": "First Message",
						"default": ""
					},
					"language": {
						"type": "string",
						"title": "Language",
						"default": "en"
					}
				},
				"type": "object",
				"title": "AgentConfig"
			},
			"AgentConfigOverride": {
				"properties": {
					"prompt": {
						"$ref": "#/components/schemas/PromptAgentOverride"
					},
					"first_message": {
						"type": "string",
						"title": "First Message"
					},
					"language": {
						"type": "string",
						"title": "Language"
					}
				},
				"type": "object",
				"title": "AgentConfigOverride"
			},
			"AgentConfigOverrideConfig": {
				"properties": {
					"prompt": {
						"$ref": "#/components/schemas/PromptAgentOverrideConfig"
					},
					"first_message": {
						"type": "boolean",
						"title": "First Message",
						"default": false
					},
					"language": {
						"type": "boolean",
						"title": "Language",
						"default": false
					}
				},
				"type": "object",
				"title": "AgentConfigOverrideConfig"
			},
			"AgentMetadataResponseModel": {
				"properties": {
					"created_at_unix_secs": {
						"type": "integer",
						"title": "Created At Unix Secs"
					}
				},
				"type": "object",
				"required": [
					"created_at_unix_secs"
				],
				"title": "AgentMetadataResponseModel"
			},
			"AgentPlatformSettings": {
				"properties": {
					"auth": {
						"$ref": "#/components/schemas/AuthSettings"
					},
					"evaluation": {
						"$ref": "#/components/schemas/EvaluationSettings"
					},
					"widget": {
						"$ref": "#/components/schemas/EmbedConfig"
					},
					"data_collection": {
						"additionalProperties": {
							"$ref": "#/components/schemas/LiteralJsonSchemaProperty"
						},
						"type": "object",
						"title": "Data Collection"
					},
					"overrides": {
						"$ref": "#/components/schemas/ConversationInitiationClientDataConfig"
					},
					"ban": {
						"$ref": "#/components/schemas/AgentBan"
					},
					"safety": {
						"$ref": "#/components/schemas/Safety"
					},
					"privacy": {
						"$ref": "#/components/schemas/PrivacyConfig"
					}
				},
				"type": "object",
				"title": "AgentPlatformSettings"
			},
			"AgentSummaryResponseModel": {
				"properties": {
					"agent_id": {
						"type": "string",
						"title": "Agent Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"created_at_unix_secs": {
						"type": "integer",
						"title": "Created At Unix Secs"
					}
				},
				"type": "object",
				"required": [
					"agent_id",
					"name",
					"created_at_unix_secs"
				],
				"title": "AgentSummaryResponseModel"
			},
			"AllowlistItem": {
				"properties": {
					"hostname": {
						"type": "string",
						"title": "Hostname"
					}
				},
				"type": "object",
				"required": [
					"hostname"
				],
				"title": "AllowlistItem"
			},
			"ArrayJsonSchemaProperty": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"array"
						],
						"title": "Type",
						"default": "array"
					},
					"items": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/LiteralJsonSchemaProperty"
							},
							{
								"$ref": "#/components/schemas/ObjectJsonSchemaProperty"
							},
							{
								"$ref": "#/components/schemas/ArrayJsonSchemaProperty"
							}
						],
						"title": "Items"
					},
					"description": {
						"type": "string",
						"title": "Description",
						"default": ""
					}
				},
				"additionalProperties": false,
				"type": "object",
				"required": [
					"items"
				],
				"title": "ArrayJsonSchemaProperty"
			},
			"AudioNativeCreateProjectResponseModel": {
				"properties": {
					"project_id": {
						"type": "string",
						"title": "Project Id"
					},
					"converting": {
						"type": "boolean",
						"title": "Converting"
					},
					"html_snippet": {
						"type": "string",
						"title": "Html Snippet"
					}
				},
				"type": "object",
				"required": [
					"project_id",
					"converting",
					"html_snippet"
				],
				"title": "AudioNativeCreateProjectResponseModel"
			},
			"AuthSettings": {
				"properties": {
					"enable_auth": {
						"type": "boolean",
						"title": "Enable Auth",
						"default": false
					},
					"allowlist": {
						"items": {
							"$ref": "#/components/schemas/AllowlistItem"
						},
						"type": "array",
						"title": "Allowlist"
					},
					"shareable_token": {
						"type": "string",
						"title": "Shareable Token"
					}
				},
				"type": "object",
				"title": "AuthSettings"
			},
			"AuthorizationMethod": {
				"type": "string",
				"enum": [
					"public",
					"authorization_header",
					"signed_url",
					"shareable_link"
				],
				"title": "AuthorizationMethod",
				"description": "An enumeration."
			},
			"BanReasonType": {
				"type": "string",
				"enum": [
					"safety",
					"manual"
				],
				"title": "BanReasonType",
				"description": "An enumeration."
			},
			"Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name",
						"description": "The name of the pronunciation dictionary, used for identification only."
					},
					"file": {
						"type": "string",
						"format": "binary",
						"title": "File",
						"description": "A lexicon .pls file which we will use to initialize the project with."
					},
					"description": {
						"type": "string",
						"title": "Description",
						"description": "A description of the pronunciation dictionary, used for identification only."
					},
					"workspace_access": {
						"type": "string",
						"enum": [
							"admin",
							"editor",
							"viewer"
						],
						"title": "Workspace Access",
						"description": "Should be one of 'editor' or 'viewer'. If not provided, defaults to no access."
					}
				},
				"type": "object",
				"required": [
					"name"
				],
				"title": "Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post"
			},
			"Body_Add_a_secret_to_the_Agent_which_can_be_referenced_in_tool_calls_v1_convai_agents__agent_id__add_secret_post": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name",
						"description": "A name to help identify a particular agent secret"
					},
					"secret_value": {
						"type": "string",
						"title": "Secret Value",
						"description": "A value to be encrypted and used by the agent"
					}
				},
				"type": "object",
				"required": [
					"name",
					"secret_value"
				],
				"title": "Body_Add_a_secret_to_the_Agent_which_can_be_referenced_in_tool_calls_v1_convai_agents__agent_id__add_secret_post"
			},
			"Body_Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name",
						"description": "The name of the chapter, used for identification only."
					},
					"from_url": {
						"type": "string",
						"title": "From Url",
						"description": "An optional URL from which we will extract content to initialize the project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the project as blank."
					}
				},
				"type": "object",
				"required": [
					"name"
				],
				"title": "Body_Add_chapter_to_a_project_v1_projects__project_id__chapters_add_post"
			},
			"Body_Add_project_v1_projects_add_post": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name",
						"description": "The name of the project, used for identification only."
					},
					"default_title_voice_id": {
						"type": "string",
						"title": "Default Title Voice Id",
						"description": "The voice_id that corresponds to the default voice used for new titles."
					},
					"default_paragraph_voice_id": {
						"type": "string",
						"title": "Default Paragraph Voice Id",
						"description": "The voice_id that corresponds to the default voice used for new paragraphs."
					},
					"default_model_id": {
						"type": "string",
						"title": "Default Model Id",
						"description": "The model_id of the model to be used for this project, you can query GET https://api.elevenlabs.io/v1/models to list all available models."
					},
					"from_url": {
						"type": "string",
						"title": "From Url",
						"description": "An optional URL from which we will extract content to initialize the project. If this is set, 'from_url' must be null. If neither 'from_url' or 'from_document' are provided we will initialize the project as blank."
					},
					"from_document": {
						"type": "string",
						"format": "binary",
						"title": "From Document",
						"description": "An optional .epub, .pdf, .txt or similar file can be provided. If provided, we will initialize the project with its content. If this is set, 'from_url' must be null.  If neither 'from_url' or 'from_document' are provided we will initialize the project as blank."
					},
					"quality_preset": {
						"type": "string",
						"title": "Quality of the generated audio.",
						"description": "Output quality of the generated audio. Must be one of:\nstandard - standard output format, 128kbps with 44.1kHz sample rate.\nhigh - high quality output format, 192kbps with 44.1kHz sample rate and major improvements on our side. Using this setting increases the credit cost by 20%.\nultra - ultra quality output format, 192kbps with 44.1kHz sample rate and highest improvements on our side. Using this setting increases the credit cost by 50%.\nultra lossless - ultra quality output format, 705.6kbps with 44.1kHz sample rate and highest improvements on our side in a fully lossless format. Using this setting increases the credit cost by 100%.\n",
						"default": "standard",
						"include_in_schema": true
					},
					"title": {
						"type": "string",
						"title": "Title",
						"description": "An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download."
					},
					"author": {
						"type": "string",
						"title": "Author",
						"description": "An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download."
					},
					"description": {
						"type": "string",
						"title": "Description",
						"description": "An optional description of the project."
					},
					"genres": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Genres",
						"description": "An optional list of genres associated with the project."
					},
					"target_audience": {
						"type": "string",
						"enum": [
							"children",
							"young adult",
							"adult",
							"all ages"
						],
						"title": "Target Audience",
						"description": "An optional target audience of the project."
					},
					"language": {
						"type": "string",
						"maxLength": 2,
						"minLength": 2,
						"title": "Language",
						"description": "An optional language of the project. Two-letter language code (ISO 639-1)."
					},
					"content_type": {
						"type": "string",
						"title": "Content Type",
						"description": "An optional content type of the project."
					},
					"original_publication_date": {
						"type": "string",
						"pattern": "^\\d{4}-\\d{2}-\\d{2}$|^\\d{4}$",
						"title": "Original Publication Date",
						"description": "An optional original publication date of the project, in the format YYYY-MM-DD or YYYY."
					},
					"mature_content": {
						"type": "boolean",
						"title": "Mature Content",
						"description": "An optional mature content of the project.",
						"default": false
					},
					"isbn_number": {
						"type": "string",
						"title": "Isbn Number",
						"description": "An optional ISBN number of the project you want to create, this will be added as metadata to the mp3 file on project / chapter download."
					},
					"acx_volume_normalization": {
						"type": "boolean",
						"title": "Acx Volume Normalization",
						"description": "[Deprecated] When the project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
						"default": false,
						"include_in_schema": false
					},
					"volume_normalization": {
						"type": "boolean",
						"title": "Volume Normalization",
						"description": "When the project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
						"default": false
					},
					"pronunciation_dictionary_locators": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Pronunciation Dictionary Locators",
						"description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text.  A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first."
					},
					"callback_url": {
						"type": "string",
						"title": "Callback Url",
						"description": "[Deprecated] A url that will be called by our service when the project is converted with a json containing the status of the conversion",
						"include_in_schema": false
					},
					"fiction": {
						"type": "string",
						"enum": [
							"fiction",
							"non-fiction"
						],
						"title": "Fiction",
						"description": "An optional fiction of the project."
					},
					"quality_check_on": {
						"type": "boolean",
						"title": "Quality Check On",
						"description": "Whether to run quality check on the generated audio and regenerate if needed. Applies to individual block conversion."
					}
				},
				"type": "object",
				"required": [
					"name",
					"default_title_voice_id",
					"default_paragraph_voice_id",
					"default_model_id"
				],
				"title": "Body_Add_project_v1_projects_add_post"
			},
			"Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post": {
				"properties": {
					"rules": {
						"items": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/PronunciationDictionaryAliasRuleRequestModel"
								},
								{
									"$ref": "#/components/schemas/PronunciationDictionaryPhonemeRuleRequestModel"
								}
							]
						},
						"type": "array",
						"title": "Rules",
						"description": "List of pronunciation rules. Rule can be either:\n    an alias rule: {'string_to_replace': 'a', 'type': 'alias', 'alias': 'b', }\n    or a phoneme rule: {'string_to_replace': 'a', 'type': 'phoneme', 'phoneme': 'b', 'alphabet': 'ipa' }"
					}
				},
				"type": "object",
				"required": [
					"rules"
				],
				"title": "Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post"
			},
			"Body_Add_sharing_voice_v1_voices_add__public_user_id___voice_id__post": {
				"properties": {
					"new_name": {
						"type": "string",
						"title": "New Name",
						"description": "The name that identifies this voice. This will be displayed in the dropdown of the website."
					}
				},
				"type": "object",
				"required": [
					"new_name"
				],
				"title": "Body_Add_sharing_voice_v1_voices_add__public_user_id___voice_id__post"
			},
			"Body_Add_to_Agent_s_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post": {
				"properties": {
					"url": {
						"type": "string",
						"title": "Url",
						"description": "URL to a page of documentation that the agent will have access to in order to interact with users."
					},
					"file": {
						"type": "string",
						"format": "binary",
						"title": "File",
						"description": "Documentation that the agent will have access to in order to interact with users."
					}
				},
				"type": "object",
				"title": "Body_Add_to_Agent_s_knowledge_base_v1_convai_agents__agent_id__add_to_knowledge_base_post"
			},
			"Body_Add_voice_v1_voices_add_post": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name",
						"description": "The name that identifies this voice. This will be displayed in the dropdown of the website."
					},
					"files": {
						"items": {
							"type": "string",
							"format": "binary"
						},
						"type": "array",
						"title": "Files",
						"description": "A list of file paths to audio recordings intended for voice cloning"
					},
					"remove_background_noise": {
						"type": "boolean",
						"title": "Remove Background Noise",
						"description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
						"default": false
					},
					"description": {
						"type": "string",
						"title": "Description",
						"description": "How would you describe the voice?"
					},
					"labels": {
						"type": "string",
						"title": "Labels",
						"description": "Serialized labels dictionary for the voice."
					}
				},
				"type": "object",
				"required": [
					"name",
					"files"
				],
				"title": "Body_Add_voice_v1_voices_add_post"
			},
			"Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post": {
				"properties": {
					"audio": {
						"type": "string",
						"format": "binary",
						"title": "Audio",
						"description": "The audio file from which vocals/speech will be isolated from."
					}
				},
				"type": "object",
				"required": [
					"audio"
				],
				"title": "Body_Audio_Isolation_Stream_v1_audio_isolation_stream_post"
			},
			"Body_Audio_Isolation_v1_audio_isolation_post": {
				"properties": {
					"audio": {
						"type": "string",
						"format": "binary",
						"title": "Audio",
						"description": "The audio file from which vocals/speech will be isolated from."
					}
				},
				"type": "object",
				"required": [
					"audio"
				],
				"title": "Body_Audio_Isolation_v1_audio_isolation_post"
			},
			"Body_Create_Agent_v1_convai_agents_create_post": {
				"properties": {
					"conversation_config": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ConversationalConfig"
							}
						],
						"title": "Conversation Config",
						"description": "Conversation configuration for an agent"
					},
					"platform_settings": {
						"allOf": [
							{
								"$ref": "#/components/schemas/AgentPlatformSettings"
							}
						],
						"title": "Platform Settings",
						"description": "Platform settings for the agent are all settings that aren't related to the conversation orchestration and content."
					},
					"name": {
						"type": "string",
						"title": "Name",
						"description": "A name to make the agent easier to find",
						"optional": true
					}
				},
				"type": "object",
				"required": [
					"conversation_config"
				],
				"title": "Body_Create_Agent_v1_convai_agents_create_post"
			},
			"Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post": {
				"properties": {
					"voice_name": {
						"type": "string",
						"title": "Voice Name",
						"description": "Name to use for the created voice.",
						"examples": [
							"Little squeaky mouse"
						]
					},
					"voice_description": {
						"type": "string",
						"maxLength": 1000,
						"minLength": 20,
						"title": "Voice Description",
						"description": "Description to use for the created voice.",
						"examples": [
							"A sassy little squeaky mouse"
						]
					},
					"generated_voice_id": {
						"type": "string",
						"title": "Generated Voice Id",
						"description": "The generated_voice_id to create, call POST /v1/voice-generation/generate-voice and fetch the generated_voice_id from the response header if don't have one yet.",
						"examples": [
							"37HceQefKmEi3bGovXjL"
						]
					},
					"labels": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Labels",
						"description": "Optional, metadata to add to the created voice. Defaults to None.",
						"examples": [
							{
								"language": "en"
							}
						],
						"name": "Voice metadata"
					},
					"played_not_selected_voice_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Played Not Selected Voice Ids",
						"description": "List of voice ids that the user has played but not selected. Used for RLHF."
					}
				},
				"type": "object",
				"required": [
					"voice_name",
					"voice_description",
					"generated_voice_id"
				],
				"title": "Body_Create_a_new_voice_from_voice_preview_v1_text_to_voice_create_voice_from_preview_post"
			},
			"Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post": {
				"properties": {
					"voice_name": {
						"type": "string",
						"title": "Voice Name",
						"description": "Name to use for the created voice.",
						"examples": [
							"Little squeaky mouse"
						]
					},
					"voice_description": {
						"type": "string",
						"title": "Voice Description",
						"description": "Description to use for the created voice.",
						"examples": [
							"A sassy little squeaky mouse"
						]
					},
					"generated_voice_id": {
						"type": "string",
						"title": "Generated Voice Id",
						"description": "The generated_voice_id to create, call POST /v1/voice-generation/generate-voice and fetch the generated_voice_id from the response header if don't have one yet.",
						"examples": [
							"37HceQefKmEi3bGovXjL"
						]
					},
					"played_not_selected_voice_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Played Not Selected Voice Ids",
						"description": "List of voice ids that the user has played but not selected. Used for RLHF.",
						"default": []
					},
					"labels": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Labels",
						"description": "Optional, metadata to add to the created voice. Defaults to None.",
						"examples": [
							{
								"language": "en"
							}
						],
						"name": "Voice metadata"
					}
				},
				"type": "object",
				"required": [
					"voice_name",
					"voice_description",
					"generated_voice_id"
				],
				"title": "Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post"
			},
			"Body_Creates_AudioNative_enabled_project__v1_audio_native_post": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name",
						"description": "Project name."
					},
					"image": {
						"type": "string",
						"title": "Image",
						"description": "Image URL used in the player. If not provided, default image set in the Player settings is used."
					},
					"author": {
						"type": "string",
						"title": "Author",
						"description": "Author used in the player and inserted at the start of the uploaded article. If not provided, the default author set in the Player settings is used."
					},
					"title": {
						"type": "string",
						"title": "Title",
						"description": "Title used in the player and inserted at the top of the uploaded article. If not provided, the default title set in the Player settings is used."
					},
					"small": {
						"type": "boolean",
						"title": "Small",
						"description": "Whether to use small player or not. If not provided, default value set in the Player settings is used.",
						"default": false
					},
					"text_color": {
						"type": "string",
						"title": "Text Color",
						"description": "Text color used in the player. If not provided, default text color set in the Player settings is used."
					},
					"background_color": {
						"type": "string",
						"title": "Background Color",
						"description": "Background color used in the player. If not provided, default background color set in the Player settings is used."
					},
					"sessionization": {
						"type": "integer",
						"title": "Sessionization",
						"description": "Specifies for how many minutes to persist the session across page reloads. If not provided, default sessionization set in the Player settings is used.",
						"default": 0
					},
					"voice_id": {
						"type": "string",
						"title": "Voice Id",
						"description": "Voice ID used to voice the content. If not provided, default voice ID set in the Player settings is used."
					},
					"model_id": {
						"type": "string",
						"title": "Model Id",
						"description": "TTS Model ID used in the player. If not provided, default model ID set in the Player settings is used."
					},
					"file": {
						"type": "string",
						"format": "binary",
						"title": "File",
						"description": "Either txt or HTML input file containing the article content. HTML should be formatted as follows '&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;Your content&lt;/p&gt;&lt;h5&gt;More of your content&lt;/h5&gt;&lt;p&gt;Some more of your content&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;'"
					},
					"auto_convert": {
						"type": "boolean",
						"title": "Auto Convert",
						"description": "Whether to auto convert the project to audio or not.",
						"default": false
					}
				},
				"type": "object",
				"required": [
					"name"
				],
				"title": "Body_Creates_AudioNative_enabled_project__v1_audio_native_post"
			},
			"Body_Delete_existing_invitation_v1_workspace_invites_delete": {
				"properties": {
					"email": {
						"type": "string",
						"title": "Email",
						"description": "Email of the target user."
					}
				},
				"type": "object",
				"required": [
					"email"
				],
				"title": "Body_Delete_existing_invitation_v1_workspace_invites_delete"
			},
			"Body_Download_history_items_v1_history_download_post": {
				"properties": {
					"history_item_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "History Item Ids",
						"description": "A list of history items to download, you can get IDs of history items and other metadata using the GET https://api.elevenlabs.io/v1/history endpoint."
					},
					"output_format": {
						"type": "string",
						"title": "Output Format",
						"description": "Output format to transcode the audio file, can be wav or default."
					}
				},
				"type": "object",
				"required": [
					"history_item_ids"
				],
				"title": "Body_Download_history_items_v1_history_download_post"
			},
			"Body_Dub_a_video_or_an_audio_file_v1_dubbing_post": {
				"properties": {
					"file": {
						"type": "string",
						"format": "binary",
						"title": "File",
						"description": "A list of file paths to audio recordings intended for voice cloning"
					},
					"name": {
						"type": "string",
						"title": "Name",
						"description": "Name of the dubbing project."
					},
					"source_url": {
						"type": "string",
						"title": "Source Url",
						"description": "URL of the source video/audio file."
					},
					"source_lang": {
						"type": "string",
						"title": "Source Lang",
						"description": "Source language.",
						"default": "auto"
					},
					"target_lang": {
						"type": "string",
						"title": "Target Lang",
						"description": "The Target language to dub the content into."
					},
					"num_speakers": {
						"type": "integer",
						"title": "Num Speakers",
						"description": "Number of speakers to use for the dubbing. Set to 0 to automatically detect the number of speakers",
						"default": 0
					},
					"watermark": {
						"type": "boolean",
						"title": "Watermark",
						"description": "Whether to apply watermark to the output video.",
						"default": false
					},
					"start_time": {
						"type": "integer",
						"title": "Start Time",
						"description": "Start time of the source video/audio file."
					},
					"end_time": {
						"type": "integer",
						"title": "End Time",
						"description": "End time of the source video/audio file."
					},
					"highest_resolution": {
						"type": "boolean",
						"title": "Highest Resolution",
						"description": "Whether to use the highest resolution available.",
						"default": false
					},
					"drop_background_audio": {
						"type": "boolean",
						"title": "Drop Background Audio",
						"description": "An advanced setting. Whether to drop background audio from the final dub. This can improve dub quality where it's known that audio shouldn't have a background track such as for speeches or monologues.",
						"default": false
					},
					"use_profanity_filter": {
						"type": "boolean",
						"title": "Use Profanity Filter",
						"description": "[BETA] Whether transcripts should have profanities censored with the words '[censored]'",
						"emded": true
					}
				},
				"type": "object",
				"title": "Body_Dub_a_video_or_an_audio_file_v1_dubbing_post"
			},
			"Body_Edit_basic_project_info_v1_projects__project_id__post": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name",
						"description": "The name of the project, used for identification only."
					},
					"default_title_voice_id": {
						"type": "string",
						"title": "Default Title Voice Id",
						"description": "The voice_id that corresponds to the default voice used for new titles."
					},
					"default_paragraph_voice_id": {
						"type": "string",
						"title": "Default Paragraph Voice Id",
						"description": "The voice_id that corresponds to the default voice used for new paragraphs."
					},
					"title": {
						"type": "string",
						"title": "Title",
						"description": "An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download."
					},
					"author": {
						"type": "string",
						"title": "Author",
						"description": "An optional name of the author of the project, this will be added as metadata to the mp3 file on project / chapter download."
					},
					"isbn_number": {
						"type": "string",
						"title": "Isbn Number",
						"description": "An optional ISBN number of the project you want to create, this will be added as metadata to the mp3 file on project / chapter download."
					},
					"volume_normalization": {
						"type": "boolean",
						"title": "Volume Normalization",
						"description": "When the project is downloaded, should the returned audio have postprocessing in order to make it compliant with audiobook normalized volume requirements",
						"default": false
					},
					"quality_check_on": {
						"type": "boolean",
						"title": "Quality Check On",
						"description": "Whether to run quality check on the generated audio and regenerate if needed. Applies to individual block conversion."
					}
				},
				"type": "object",
				"required": [
					"name",
					"default_title_voice_id",
					"default_paragraph_voice_id"
				],
				"title": "Body_Edit_basic_project_info_v1_projects__project_id__post"
			},
			"Body_Edit_voice_v1_voices__voice_id__edit_post": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name",
						"description": "The name that identifies this voice. This will be displayed in the dropdown of the website."
					},
					"files": {
						"items": {
							"type": "string",
							"format": "binary"
						},
						"type": "array",
						"title": "Files",
						"description": "Audio files to add to the voice"
					},
					"remove_background_noise": {
						"type": "boolean",
						"title": "Remove Background Noise",
						"description": "If set will remove background noise for voice samples using our audio isolation model. If the samples do not include background noise, it can make the quality worse.",
						"default": false
					},
					"description": {
						"type": "string",
						"title": "Description",
						"description": "How would you describe the voice?"
					},
					"labels": {
						"type": "string",
						"title": "Labels",
						"description": "Serialized labels dictionary for the voice."
					}
				},
				"type": "object",
				"required": [
					"name"
				],
				"title": "Body_Edit_voice_v1_voices__voice_id__edit_post"
			},
			"Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post": {
				"properties": {
					"gender": {
						"type": "string",
						"enum": [
							"female",
							"male"
						],
						"title": "Gender",
						"description": "Category code corresponding to the gender of the generated voice. Possible values: female, male."
					},
					"accent": {
						"type": "string",
						"title": "Accent",
						"description": "Category code corresponding to the accent of the generated voice. Possible values: british, american, african, australian, indian."
					},
					"age": {
						"type": "string",
						"enum": [
							"young",
							"middle_aged",
							"old"
						],
						"title": "Age",
						"description": "Category code corresponding to the age of the generated voice. Possible values: young, middle_aged, old."
					},
					"accent_strength": {
						"type": "number",
						"title": "Accent Strength",
						"description": "The strength of the accent of the generated voice. Has to be between 0.3 and 2.0."
					},
					"text": {
						"type": "string",
						"maxLength": 1000,
						"minLength": 100,
						"title": "Text",
						"description": "Text to generate, text length has to be between 100 and 1000.",
						"examples": [
							"Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
						]
					}
				},
				"type": "object",
				"required": [
					"gender",
					"accent",
					"age",
					"accent_strength",
					"text"
				],
				"title": "Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post"
			},
			"Body_Get_similar_library_voices_v1_similar_voices_post": {
				"properties": {
					"audio_file": {
						"type": "string",
						"format": "binary",
						"title": "Audio File"
					},
					"similarity_threshold": {
						"type": "number",
						"title": "Similarity Threshold",
						"description": "Threshold for voice similarity between provided sample and library voices. Must be in range <0, 2>. The smaller the value the more similar voices will be returned."
					},
					"top_k": {
						"type": "integer",
						"title": "Top K",
						"description": "Number of most similar voices to return. If similarity_threshold is provided, less than this number of voices may be returned. Must be in range <1, 100>."
					}
				},
				"type": "object",
				"title": "Body_Get_similar_library_voices_v1_similar_voices_post"
			},
			"Body_Invite_user_v1_workspace_invites_add_post": {
				"properties": {
					"email": {
						"type": "string",
						"title": "Email",
						"description": "Email of the target user."
					}
				},
				"type": "object",
				"required": [
					"email"
				],
				"title": "Body_Invite_user_v1_workspace_invites_add_post"
			},
			"Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch": {
				"properties": {
					"conversation_config": {
						"type": "object",
						"title": "Conversation Config",
						"description": "Conversation configuration for an agent"
					},
					"platform_settings": {
						"type": "object",
						"title": "Platform Settings",
						"description": "Platform settings for the agent are all settings that aren't related to the conversation orchestration and content."
					},
					"secrets": {
						"items": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/ConvAINewSecretConfig"
								},
								{
									"$ref": "#/components/schemas/ConvAIStoredSecretConfig"
								}
							]
						},
						"type": "array",
						"title": "Secrets",
						"description": "A list of secrets for the agent. Can be used to add new secrets or update and delete the existing ones"
					},
					"name": {
						"type": "string",
						"title": "Name",
						"description": "A name to make the agent easier to find",
						"optional": true
					}
				},
				"type": "object",
				"title": "Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch"
			},
			"Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post": {
				"properties": {
					"avatar_file": {
						"type": "string",
						"format": "binary",
						"title": "Avatar File",
						"description": "An image file to be used as the agent's avatar."
					}
				},
				"type": "object",
				"required": [
					"avatar_file"
				],
				"title": "Body_Post_Agent_avatar_v1_convai_agents__agent_id__avatar_post"
			},
			"Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post": {
				"properties": {
					"rule_strings": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Rule Strings",
						"description": "List of strings to remove from the pronunciation dictionary."
					}
				},
				"type": "object",
				"required": [
					"rule_strings"
				],
				"title": "Body_Remove_rules_from_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__remove_rules_post"
			},
			"Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post": {
				"properties": {
					"feedback": {
						"allOf": [
							{
								"$ref": "#/components/schemas/UserFeedbackScore"
							}
						],
						"description": "Either 'like' or 'dislike' to indicate the feedback for the conversation."
					}
				},
				"type": "object",
				"required": [
					"feedback"
				],
				"title": "Body_Send_Conversation_Feedback_v1_convai_conversations__conversation_id__feedback_post"
			},
			"Body_Sound_Generation_v1_sound_generation_post": {
				"properties": {
					"text": {
						"type": "string",
						"title": "Text",
						"description": "The text that will get converted into a sound effect."
					},
					"duration_seconds": {
						"type": "number",
						"title": "Duration Seconds",
						"description": "The duration of the sound which will be generated in seconds. Must be at least 0.5 and at most 22. If set to None we will guess the optimal duration using the prompt. Defaults to None."
					},
					"prompt_influence": {
						"type": "number",
						"title": "Prompt Influence",
						"description": "A higher prompt influence makes your generation follow the prompt more closely while also making generations less variable. Must be a value between 0 and 1. Defaults to 0.3.",
						"default": 0.3
					}
				},
				"type": "object",
				"required": [
					"text"
				],
				"title": "Body_Sound_Generation_v1_sound_generation_post"
			},
			"Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post": {
				"properties": {
					"audio": {
						"type": "string",
						"format": "binary",
						"title": "Audio",
						"description": "The audio file which holds the content and emotion that will control the generated speech."
					},
					"model_id": {
						"type": "string",
						"title": "Model Id",
						"description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
						"default": "eleven_english_sts_v2"
					},
					"voice_settings": {
						"type": "string",
						"title": "Voice Settings",
						"description": "Voice settings overriding stored setttings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string."
					},
					"seed": {
						"type": "integer",
						"title": "Seed",
						"description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295."
					},
					"remove_background_noise": {
						"type": "boolean",
						"title": "Remove Background Noise",
						"description": "If set will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
						"default": false
					}
				},
				"type": "object",
				"required": [
					"audio"
				],
				"title": "Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post"
			},
			"Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post": {
				"properties": {
					"audio": {
						"type": "string",
						"format": "binary",
						"title": "Audio",
						"description": "The audio file which holds the content and emotion that will control the generated speech."
					},
					"model_id": {
						"type": "string",
						"title": "Model Id",
						"description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for speech to speech, you can check this using the can_do_voice_conversion property.",
						"default": "eleven_english_sts_v2"
					},
					"voice_settings": {
						"type": "string",
						"title": "Voice Settings",
						"description": "Voice settings overriding stored setttings for the given voice. They are applied only on the given request. Needs to be send as a JSON encoded string."
					},
					"seed": {
						"type": "integer",
						"title": "Seed",
						"description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295."
					},
					"remove_background_noise": {
						"type": "boolean",
						"title": "Remove Background Noise",
						"description": "If set will remove the background noise from your audio input using our audio isolation model. Only applies to Voice Changer.",
						"default": false
					}
				},
				"type": "object",
				"required": [
					"audio"
				],
				"title": "Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post"
			},
			"Body_Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post": {
				"properties": {
					"convert_to_mpeg": {
						"type": "boolean",
						"title": "Convert To Mpeg",
						"description": "Whether to convert the audio to mpeg format.",
						"default": false
					}
				},
				"type": "object",
				"title": "Body_Stream_chapter_audio_v1_projects__project_id__chapters__chapter_id__snapshots__chapter_snapshot_id__stream_post"
			},
			"Body_Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post": {
				"properties": {
					"convert_to_mpeg": {
						"type": "boolean",
						"title": "Convert To Mpeg",
						"description": "Whether to convert the audio to mpeg format.",
						"default": false
					}
				},
				"type": "object",
				"title": "Body_Stream_project_audio_v1_projects__project_id__snapshots__project_snapshot_id__stream_post"
			},
			"Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post": {
				"properties": {
					"text": {
						"type": "string",
						"title": "Text",
						"description": "The text that will get converted into speech."
					},
					"model_id": {
						"type": "string",
						"title": "Model Id",
						"description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
						"default": "eleven_monolingual_v1"
					},
					"language_code": {
						"type": "string",
						"title": "Language Code",
						"description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 supports language enforcement. For other models, an error will be returned if language code is provided."
					},
					"voice_settings": {
						"allOf": [
							{
								"$ref": "#/components/schemas/VoiceSettingsResponseModel"
							}
						],
						"title": "Voice Settings",
						"description": "Voice settings overriding stored setttings for the given voice. They are applied only on the given request."
					},
					"pronunciation_dictionary_locators": {
						"items": {
							"$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
						},
						"type": "array",
						"title": "Pronunciation Dictionary Locators",
						"description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
						"default": []
					},
					"seed": {
						"type": "integer",
						"title": "Seed",
						"description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295."
					},
					"previous_text": {
						"type": "string",
						"title": "Previous Text",
						"description": "The text that came before the text of the current request. Can be used to improve the flow of prosody when concatenating together multiple generations or to influence the prosody in the current generation."
					},
					"next_text": {
						"type": "string",
						"title": "Next Text",
						"description": "The text that comes after the text of the current request. Can be used to improve the flow of prosody when concatenating together multiple generations or to influence the prosody in the current generation."
					},
					"previous_request_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Previous Request Ids",
						"description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the flow of prosody when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
						"default": []
					},
					"next_request_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Next Request Ids",
						"description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the flow of prosody when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
						"default": []
					},
					"use_pvc_as_ivc": {
						"type": "boolean",
						"title": "Use Pvc As Ivc",
						"description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
						"default": false,
						"deprecated": true,
						"include_in_schema": false
					},
					"apply_text_normalization": {
						"type": "string",
						"enum": [
							"auto",
							"on",
							"off"
						],
						"title": "Apply Text Normalization",
						"description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' model.",
						"default": "auto",
						"include_in_schema": true
					}
				},
				"type": "object",
				"required": [
					"text"
				],
				"title": "Body_Text_to_speech_streaming_v1_text_to_speech__voice_id__stream_post"
			},
			"Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post": {
				"properties": {
					"text": {
						"type": "string",
						"title": "Text",
						"description": "The text that will get converted into speech."
					},
					"model_id": {
						"type": "string",
						"title": "Model Id",
						"description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
						"default": "eleven_monolingual_v1"
					},
					"language_code": {
						"type": "string",
						"title": "Language Code",
						"description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 supports language enforcement. For other models, an error will be returned if language code is provided."
					},
					"voice_settings": {
						"allOf": [
							{
								"$ref": "#/components/schemas/VoiceSettingsResponseModel"
							}
						],
						"title": "Voice Settings",
						"description": "Voice settings overriding stored setttings for the given voice. They are applied only on the given request."
					},
					"pronunciation_dictionary_locators": {
						"items": {
							"$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
						},
						"type": "array",
						"title": "Pronunciation Dictionary Locators",
						"description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
						"default": []
					},
					"seed": {
						"type": "integer",
						"title": "Seed",
						"description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295."
					},
					"previous_text": {
						"type": "string",
						"title": "Previous Text",
						"description": "The text that came before the text of the current request. Can be used to improve the flow of prosody when concatenating together multiple generations or to influence the prosody in the current generation."
					},
					"next_text": {
						"type": "string",
						"title": "Next Text",
						"description": "The text that comes after the text of the current request. Can be used to improve the flow of prosody when concatenating together multiple generations or to influence the prosody in the current generation."
					},
					"previous_request_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Previous Request Ids",
						"description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the flow of prosody when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
						"default": []
					},
					"next_request_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Next Request Ids",
						"description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the flow of prosody when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
						"default": []
					},
					"use_pvc_as_ivc": {
						"type": "boolean",
						"title": "Use Pvc As Ivc",
						"description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
						"default": false,
						"deprecated": true,
						"include_in_schema": false
					},
					"apply_text_normalization": {
						"type": "string",
						"enum": [
							"auto",
							"on",
							"off"
						],
						"title": "Apply Text Normalization",
						"description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' model.",
						"default": "auto",
						"include_in_schema": true
					}
				},
				"type": "object",
				"required": [
					"text"
				],
				"title": "Body_Text_to_speech_streaming_with_timestamps_v1_text_to_speech__voice_id__stream_with_timestamps_post"
			},
			"Body_Text_to_speech_v1_text_to_speech__voice_id__post": {
				"properties": {
					"text": {
						"type": "string",
						"title": "Text",
						"description": "The text that will get converted into speech."
					},
					"model_id": {
						"type": "string",
						"title": "Model Id",
						"description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
						"default": "eleven_monolingual_v1"
					},
					"language_code": {
						"type": "string",
						"title": "Language Code",
						"description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 supports language enforcement. For other models, an error will be returned if language code is provided."
					},
					"voice_settings": {
						"allOf": [
							{
								"$ref": "#/components/schemas/VoiceSettingsResponseModel"
							}
						],
						"title": "Voice Settings",
						"description": "Voice settings overriding stored setttings for the given voice. They are applied only on the given request."
					},
					"pronunciation_dictionary_locators": {
						"items": {
							"$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
						},
						"type": "array",
						"title": "Pronunciation Dictionary Locators",
						"description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
						"default": []
					},
					"seed": {
						"type": "integer",
						"title": "Seed",
						"description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295."
					},
					"previous_text": {
						"type": "string",
						"title": "Previous Text",
						"description": "The text that came before the text of the current request. Can be used to improve the flow of prosody when concatenating together multiple generations or to influence the prosody in the current generation."
					},
					"next_text": {
						"type": "string",
						"title": "Next Text",
						"description": "The text that comes after the text of the current request. Can be used to improve the flow of prosody when concatenating together multiple generations or to influence the prosody in the current generation."
					},
					"previous_request_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Previous Request Ids",
						"description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the flow of prosody when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
						"default": []
					},
					"next_request_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Next Request Ids",
						"description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the flow of prosody when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
						"default": []
					},
					"use_pvc_as_ivc": {
						"type": "boolean",
						"title": "Use Pvc As Ivc",
						"description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
						"default": false,
						"deprecated": true,
						"include_in_schema": false
					},
					"apply_text_normalization": {
						"type": "string",
						"enum": [
							"auto",
							"on",
							"off"
						],
						"title": "Apply Text Normalization",
						"description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' model.",
						"default": "auto",
						"include_in_schema": true
					}
				},
				"type": "object",
				"required": [
					"text"
				],
				"title": "Body_Text_to_speech_v1_text_to_speech__voice_id__post"
			},
			"Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post": {
				"properties": {
					"text": {
						"type": "string",
						"title": "Text",
						"description": "The text that will get converted into speech."
					},
					"model_id": {
						"type": "string",
						"title": "Model Id",
						"description": "Identifier of the model that will be used, you can query them using GET /v1/models. The model needs to have support for text to speech, you can check this using the can_do_text_to_speech property.",
						"default": "eleven_monolingual_v1"
					},
					"language_code": {
						"type": "string",
						"title": "Language Code",
						"description": "Language code (ISO 639-1) used to enforce a language for the model. Currently only Turbo v2.5 supports language enforcement. For other models, an error will be returned if language code is provided."
					},
					"voice_settings": {
						"allOf": [
							{
								"$ref": "#/components/schemas/VoiceSettingsResponseModel"
							}
						],
						"title": "Voice Settings",
						"description": "Voice settings overriding stored setttings for the given voice. They are applied only on the given request."
					},
					"pronunciation_dictionary_locators": {
						"items": {
							"$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
						},
						"type": "array",
						"title": "Pronunciation Dictionary Locators",
						"description": "A list of pronunciation dictionary locators (id, version_id) to be applied to the text. They will be applied in order. You may have up to 3 locators per request",
						"default": []
					},
					"seed": {
						"type": "integer",
						"title": "Seed",
						"description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed. Must be integer between 0 and 4294967295."
					},
					"previous_text": {
						"type": "string",
						"title": "Previous Text",
						"description": "The text that came before the text of the current request. Can be used to improve the flow of prosody when concatenating together multiple generations or to influence the prosody in the current generation."
					},
					"next_text": {
						"type": "string",
						"title": "Next Text",
						"description": "The text that comes after the text of the current request. Can be used to improve the flow of prosody when concatenating together multiple generations or to influence the prosody in the current generation."
					},
					"previous_request_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Previous Request Ids",
						"description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the flow of prosody when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both previous_text and previous_request_ids is send, previous_text will be ignored. A maximum of 3 request_ids can be send.",
						"default": []
					},
					"next_request_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Next Request Ids",
						"description": "A list of request_id of the samples that were generated before this generation. Can be used to improve the flow of prosody when splitting up a large task into multiple requests. The results will be best when the same model is used across the generations. In case both next_text and next_request_ids is send, next_text will be ignored. A maximum of 3 request_ids can be send.",
						"default": []
					},
					"use_pvc_as_ivc": {
						"type": "boolean",
						"title": "Use Pvc As Ivc",
						"description": "If true, we won't use PVC version of the voice for the generation but the IVC version. This is a temporary workaround for higher latency in PVC versions.",
						"default": false,
						"deprecated": true,
						"include_in_schema": false
					},
					"apply_text_normalization": {
						"type": "string",
						"enum": [
							"auto",
							"on",
							"off"
						],
						"title": "Apply Text Normalization",
						"description": "This parameter controls text normalization with three modes: 'auto', 'on', and 'off'. When set to 'auto', the system will automatically decide whether to apply text normalization (e.g., spelling out numbers). With 'on', text normalization will always be applied, while with 'off', it will be skipped. Cannot be turned on for 'eleven_turbo_v2_5' model.",
						"default": "auto",
						"include_in_schema": true
					}
				},
				"type": "object",
				"required": [
					"text"
				],
				"title": "Body_Text_to_speech_with_timestamps_v1_text_to_speech__voice_id__with_timestamps_post"
			},
			"Body_Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post": {
				"properties": {
					"pronunciation_dictionary_locators": {
						"items": {
							"$ref": "#/components/schemas/PronunciationDictionaryVersionLocatorDBModel"
						},
						"type": "array",
						"title": "Pronunciation Dictionary Locators",
						"description": "A list of pronunciation dictionary locators (pronunciation_dictionary_id, version_id) encoded as a list of JSON strings for pronunciation dictionaries to be applied to the text.  A list of json encoded strings is required as adding projects may occur through formData as opposed to jsonBody. To specify multiple dictionaries use multiple --form lines in your curl, such as --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"Vmd4Zor6fplcA7WrINey\\\",\\\"version_id\\\":\\\"hRPaxjlTdR7wFMhV4w0b\\\"}\"' --form 'pronunciation_dictionary_locators=\"{\\\"pronunciation_dictionary_id\\\":\\\"JzWtcGQMJ6bnlWwyMo7e\\\",\\\"version_id\\\":\\\"lbmwxiLu4q6txYxgdZqn\\\"}\"'. Note that multiple dictionaries are not currently supported by our UI which will only show the first."
					}
				},
				"type": "object",
				"required": [
					"pronunciation_dictionary_locators"
				],
				"title": "Body_Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post"
			},
			"Body_Update_member_v1_workspace_members_post": {
				"properties": {
					"email": {
						"type": "string",
						"title": "Email",
						"description": "Email of the target user."
					},
					"is_locked": {
						"type": "boolean",
						"title": "Is Locked",
						"description": "Whether to lock or unlock the user account."
					},
					"workspace_role": {
						"type": "string",
						"enum": [
							"workspace_admin",
							"workspace_member"
						],
						"title": "Workspace Role",
						"description": "Role dictating permissions in the workspace."
					}
				},
				"type": "object",
				"required": [
					"email"
				],
				"title": "Body_Update_member_v1_workspace_members_post"
			},
			"BreakdownTypes": {
				"enum": [
					"none",
					"voice",
					"user",
					"api_keys",
					"all_api_keys",
					"product_type",
					"model",
					"resource"
				],
				"title": "BreakdownTypes",
				"description": "How to break down the information. Cannot be \"user\" or \"api_key\" if include_workspace_metrics is False."
			},
			"ChapterResponseModel": {
				"properties": {
					"chapter_id": {
						"type": "string",
						"title": "Chapter Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"last_conversion_date_unix": {
						"type": "integer",
						"title": "Last Conversion Date Unix"
					},
					"conversion_progress": {
						"type": "number",
						"title": "Conversion Progress"
					},
					"can_be_downloaded": {
						"type": "boolean",
						"title": "Can Be Downloaded"
					},
					"state": {
						"type": "string",
						"enum": [
							"default",
							"converting"
						],
						"title": "State"
					},
					"statistics": {
						"$ref": "#/components/schemas/ChapterStatisticsResponseModel"
					},
					"last_conversion_error": {
						"type": "string",
						"title": "Last Conversion Error"
					}
				},
				"type": "object",
				"required": [
					"chapter_id",
					"name",
					"can_be_downloaded",
					"state"
				],
				"title": "ChapterResponseModel"
			},
			"ChapterSnapshotResponseModel": {
				"properties": {
					"chapter_snapshot_id": {
						"type": "string",
						"title": "Chapter Snapshot Id"
					},
					"project_id": {
						"type": "string",
						"title": "Project Id"
					},
					"chapter_id": {
						"type": "string",
						"title": "Chapter Id"
					},
					"created_at_unix": {
						"type": "integer",
						"title": "Created At Unix"
					},
					"name": {
						"type": "string",
						"title": "Name"
					}
				},
				"type": "object",
				"required": [
					"chapter_snapshot_id",
					"project_id",
					"chapter_id",
					"created_at_unix",
					"name"
				],
				"title": "ChapterSnapshotResponseModel"
			},
			"ChapterSnapshotsResponseModel": {
				"properties": {
					"snapshots": {
						"items": {
							"$ref": "#/components/schemas/ChapterSnapshotResponseModel"
						},
						"type": "array",
						"title": "Snapshots"
					}
				},
				"type": "object",
				"required": [
					"snapshots"
				],
				"title": "ChapterSnapshotsResponseModel"
			},
			"ChapterStatisticsResponseModel": {
				"properties": {
					"characters_unconverted": {
						"type": "integer",
						"title": "Characters Unconverted"
					},
					"characters_converted": {
						"type": "integer",
						"title": "Characters Converted"
					},
					"paragraphs_converted": {
						"type": "integer",
						"title": "Paragraphs Converted"
					},
					"paragraphs_unconverted": {
						"type": "integer",
						"title": "Paragraphs Unconverted"
					}
				},
				"type": "object",
				"required": [
					"characters_unconverted",
					"characters_converted",
					"paragraphs_converted",
					"paragraphs_unconverted"
				],
				"title": "ChapterStatisticsResponseModel"
			},
			"ClientEvent": {
				"type": "string",
				"enum": [
					"conversation_initiation_metadata",
					"asr_initiation_metadata",
					"ping",
					"audio",
					"interruption",
					"user_transcript",
					"agent_response",
					"agent_response_correction",
					"client_tool_call",
					"internal_vad_score",
					"internal_turn_probability",
					"internal_tentative_agent_response"
				],
				"title": "ClientEvent",
				"description": "An enumeration."
			},
			"ClientToolConfig": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"client"
						],
						"title": "Type"
					},
					"name": {
						"type": "string",
						"pattern": "^[a-zA-Z0-9_-]{1,64}$",
						"title": "Name"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"parameters": {
						"$ref": "#/components/schemas/ObjectJsonSchemaProperty"
					},
					"expects_response": {
						"type": "boolean",
						"title": "Expects Response",
						"default": false
					},
					"response_timeout_secs": {
						"type": "integer",
						"maximum": 30,
						"minimum": 1,
						"title": "Response Timeout Secs"
					}
				},
				"type": "object",
				"required": [
					"type",
					"name",
					"description"
				],
				"title": "ClientToolConfig",
				"description": "A client tool is one that sends an event to the user's client to trigger something client side"
			},
			"ConvAINewSecretConfig": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"new"
						],
						"title": "Type"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"value": {
						"type": "string",
						"title": "Value"
					}
				},
				"type": "object",
				"required": [
					"type",
					"name",
					"value"
				],
				"title": "ConvAINewSecretConfig"
			},
			"ConvAISecretLocator": {
				"properties": {
					"secret_id": {
						"type": "string",
						"title": "Secret Id"
					}
				},
				"type": "object",
				"required": [
					"secret_id"
				],
				"title": "ConvAISecretLocator",
				"description": "Used to reference a secret from the agent's secret store."
			},
			"ConvAIStoredSecretConfig": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"stored"
						],
						"title": "Type"
					},
					"secret_id": {
						"type": "string",
						"title": "Secret Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					}
				},
				"type": "object",
				"required": [
					"type",
					"secret_id",
					"name"
				],
				"title": "ConvAIStoredSecretConfig"
			},
			"ConversationChargingCommonModel": {
				"properties": {
					"dev_discount": {
						"type": "boolean",
						"title": "Dev Discount",
						"default": false
					}
				},
				"type": "object",
				"title": "ConversationChargingCommonModel"
			},
			"ConversationConfig": {
				"properties": {
					"max_duration_seconds": {
						"type": "integer",
						"title": "Max Duration Seconds",
						"default": 600
					},
					"client_events": {
						"items": {
							"$ref": "#/components/schemas/ClientEvent"
						},
						"type": "array"
					}
				},
				"type": "object",
				"title": "ConversationConfig"
			},
			"ConversationConfigClientOverride": {
				"properties": {
					"agent": {
						"$ref": "#/components/schemas/AgentConfigOverride"
					},
					"tts": {
						"$ref": "#/components/schemas/TTSConversationalConfigOverride"
					}
				},
				"type": "object",
				"title": "ConversationConfigClientOverride"
			},
			"ConversationConfigClientOverrideConfig": {
				"properties": {
					"agent": {
						"$ref": "#/components/schemas/AgentConfigOverrideConfig"
					},
					"tts": {
						"$ref": "#/components/schemas/TTSConversationalConfigOverrideConfig"
					}
				},
				"type": "object",
				"title": "ConversationConfigClientOverrideConfig"
			},
			"ConversationHistoryAnalysisCommonModel": {
				"properties": {
					"evaluation_criteria_results": {
						"additionalProperties": {
							"$ref": "#/components/schemas/ConversationHistoryEvaluationCriteriaResultCommonModel"
						},
						"type": "object",
						"title": "Evaluation Criteria Results"
					},
					"data_collection_results": {
						"additionalProperties": {
							"$ref": "#/components/schemas/DataCollectionResultCommonModel"
						},
						"type": "object",
						"title": "Data Collection Results"
					},
					"call_successful": {
						"$ref": "#/components/schemas/EvaluationSuccessResult"
					},
					"transcript_summary": {
						"type": "string",
						"title": "Transcript Summary"
					}
				},
				"type": "object",
				"required": [
					"call_successful",
					"transcript_summary"
				],
				"title": "ConversationHistoryAnalysisCommonModel"
			},
			"ConversationHistoryEvaluationCriteriaResultCommonModel": {
				"properties": {
					"criteria_id": {
						"type": "string",
						"title": "Criteria Id"
					},
					"result": {
						"$ref": "#/components/schemas/EvaluationSuccessResult"
					},
					"rationale": {
						"type": "string",
						"title": "Rationale"
					}
				},
				"type": "object",
				"required": [
					"criteria_id",
					"result",
					"rationale"
				],
				"title": "ConversationHistoryEvaluationCriteriaResultCommonModel"
			},
			"ConversationHistoryFeedbackCommonModel": {
				"properties": {
					"overall_score": {
						"$ref": "#/components/schemas/UserFeedbackScore"
					},
					"likes": {
						"type": "integer",
						"title": "Likes",
						"default": 0
					},
					"dislikes": {
						"type": "integer",
						"title": "Dislikes",
						"default": 0
					}
				},
				"type": "object",
				"title": "ConversationHistoryFeedbackCommonModel"
			},
			"ConversationHistoryMetadataCommonModel": {
				"properties": {
					"start_time_unix_secs": {
						"type": "integer",
						"title": "Start Time Unix Secs"
					},
					"call_duration_secs": {
						"type": "integer",
						"title": "Call Duration Secs"
					},
					"cost": {
						"type": "integer",
						"title": "Cost"
					},
					"feedback": {
						"$ref": "#/components/schemas/ConversationHistoryFeedbackCommonModel"
					},
					"authorization_method": {
						"allOf": [
							{
								"$ref": "#/components/schemas/AuthorizationMethod"
							}
						],
						"default": "public"
					},
					"charging": {
						"$ref": "#/components/schemas/ConversationChargingCommonModel"
					}
				},
				"type": "object",
				"required": [
					"start_time_unix_secs",
					"call_duration_secs"
				],
				"title": "ConversationHistoryMetadataCommonModel"
			},
			"ConversationHistoryTranscriptCommonModel": {
				"properties": {
					"role": {
						"type": "string",
						"enum": [
							"user",
							"agent"
						],
						"title": "Role"
					},
					"message": {
						"type": "string",
						"title": "Message"
					},
					"tool_calls": {
						"items": {
							"$ref": "#/components/schemas/ConversationHistoryTranscriptToolCallCommonModel"
						},
						"type": "array",
						"title": "Tool Calls"
					},
					"tool_results": {
						"items": {
							"$ref": "#/components/schemas/ConversationHistoryTranscriptToolResultCommonModel"
						},
						"type": "array",
						"title": "Tool Results"
					},
					"feedback": {
						"$ref": "#/components/schemas/UserFeedback"
					},
					"time_in_call_secs": {
						"type": "integer",
						"title": "Time In Call Secs"
					},
					"conversation_turn_metrics": {
						"type": "object",
						"title": "Conversation Turn Metrics"
					}
				},
				"type": "object",
				"required": [
					"role",
					"time_in_call_secs"
				],
				"title": "ConversationHistoryTranscriptCommonModel"
			},
			"ConversationHistoryTranscriptToolCallCommonModel": {
				"properties": {
					"request_id": {
						"type": "string",
						"title": "Request Id"
					},
					"tool_name": {
						"type": "string",
						"title": "Tool Name"
					},
					"params_as_json": {
						"type": "string",
						"title": "Params As Json"
					},
					"tool_has_been_called": {
						"type": "boolean",
						"title": "Tool Has Been Called"
					}
				},
				"type": "object",
				"required": [
					"request_id",
					"tool_name",
					"params_as_json",
					"tool_has_been_called"
				],
				"title": "ConversationHistoryTranscriptToolCallCommonModel"
			},
			"ConversationHistoryTranscriptToolResultCommonModel": {
				"properties": {
					"request_id": {
						"type": "string",
						"title": "Request Id"
					},
					"tool_name": {
						"type": "string",
						"title": "Tool Name"
					},
					"result_value": {
						"type": "string",
						"title": "Result Value"
					},
					"is_error": {
						"type": "boolean",
						"title": "Is Error"
					},
					"tool_has_been_called": {
						"type": "boolean",
						"title": "Tool Has Been Called"
					}
				},
				"type": "object",
				"required": [
					"request_id",
					"tool_name",
					"result_value",
					"is_error",
					"tool_has_been_called"
				],
				"title": "ConversationHistoryTranscriptToolResultCommonModel"
			},
			"ConversationInitiationClientData": {
				"properties": {
					"conversation_config_override": {
						"$ref": "#/components/schemas/ConversationConfigClientOverride"
					},
					"custom_llm_extra_body": {
						"type": "object",
						"title": "Custom Llm Extra Body"
					}
				},
				"type": "object",
				"title": "ConversationInitiationClientData"
			},
			"ConversationInitiationClientDataConfig": {
				"properties": {
					"conversation_config_override": {
						"$ref": "#/components/schemas/ConversationConfigClientOverrideConfig"
					},
					"custom_llm_extra_body": {
						"type": "boolean",
						"title": "Custom Llm Extra Body",
						"default": false
					}
				},
				"type": "object",
				"title": "ConversationInitiationClientDataConfig"
			},
			"ConversationSignedUrlResponseModel": {
				"properties": {
					"signed_url": {
						"type": "string",
						"title": "Signed Url"
					}
				},
				"type": "object",
				"required": [
					"signed_url"
				],
				"title": "ConversationSignedUrlResponseModel"
			},
			"ConversationSummaryResponseModel": {
				"properties": {
					"agent_id": {
						"type": "string",
						"title": "Agent Id"
					},
					"agent_name": {
						"type": "string",
						"title": "Agent Name"
					},
					"conversation_id": {
						"type": "string",
						"title": "Conversation Id"
					},
					"start_time_unix_secs": {
						"type": "integer",
						"title": "Start Time Unix Secs"
					},
					"call_duration_secs": {
						"type": "integer",
						"title": "Call Duration Secs"
					},
					"message_count": {
						"type": "integer",
						"title": "Message Count"
					},
					"status": {
						"type": "string",
						"enum": [
							"processing",
							"done"
						],
						"title": "Status"
					},
					"call_successful": {
						"$ref": "#/components/schemas/EvaluationSuccessResult"
					}
				},
				"type": "object",
				"required": [
					"agent_id",
					"conversation_id",
					"start_time_unix_secs",
					"call_duration_secs",
					"message_count",
					"status",
					"call_successful"
				],
				"title": "ConversationSummaryResponseModel"
			},
			"ConversationTokenDBModel": {
				"properties": {
					"agent_id": {
						"type": "string",
						"title": "Agent Id"
					},
					"conversation_token": {
						"type": "string",
						"title": "Conversation Token"
					},
					"expiration_time_unix_secs": {
						"type": "integer",
						"title": "Expiration Time Unix Secs"
					},
					"purpose": {
						"allOf": [
							{
								"$ref": "#/components/schemas/ConversationTokenPurpose"
							}
						],
						"default": "signed_url"
					}
				},
				"type": "object",
				"required": [
					"agent_id",
					"conversation_token"
				],
				"title": "ConversationTokenDBModel"
			},
			"ConversationTokenPurpose": {
				"type": "string",
				"enum": [
					"signed_url",
					"shareable_link"
				],
				"title": "ConversationTokenPurpose",
				"description": "An enumeration."
			},
			"ConversationalConfig": {
				"properties": {
					"agent": {
						"$ref": "#/components/schemas/AgentConfig"
					},
					"asr": {
						"$ref": "#/components/schemas/ASRConversationalConfig"
					},
					"turn": {
						"$ref": "#/components/schemas/TurnConfig"
					},
					"tts": {
						"$ref": "#/components/schemas/TTSConversationalConfig"
					},
					"conversation": {
						"$ref": "#/components/schemas/ConversationConfig"
					}
				},
				"type": "object",
				"title": "ConversationalConfig"
			},
			"CreateAgentResponseModel": {
				"properties": {
					"agent_id": {
						"type": "string",
						"title": "Agent Id"
					}
				},
				"type": "object",
				"required": [
					"agent_id"
				],
				"title": "CreateAgentResponseModel"
			},
			"CreatePhoneNumberRequest": {
				"properties": {
					"phone_number": {
						"type": "string",
						"title": "Phone Number",
						"description": "Phone number"
					},
					"provider": {
						"allOf": [
							{
								"$ref": "#/components/schemas/TelephonyProvider"
							}
						],
						"description": "Phone provider"
					},
					"label": {
						"type": "string",
						"title": "Label",
						"description": "Label for the phone number"
					},
					"sid": {
						"type": "string",
						"title": "Sid",
						"description": "Twilio Account SID"
					},
					"token": {
						"type": "string",
						"title": "Token",
						"description": "Twilio Token"
					}
				},
				"type": "object",
				"required": [
					"phone_number",
					"provider",
					"label",
					"sid",
					"token"
				],
				"title": "CreatePhoneNumberRequest"
			},
			"CreatePhoneNumberResponseModel": {
				"properties": {
					"phone_number_id": {
						"type": "string",
						"title": "Phone Number Id",
						"description": "Phone entity id"
					}
				},
				"type": "object",
				"required": [
					"phone_number_id"
				],
				"title": "CreatePhoneNumberResponseModel"
			},
			"CustomLLM": {
				"properties": {
					"url": {
						"type": "string",
						"title": "Url"
					},
					"model_id": {
						"type": "string",
						"title": "Model Id"
					},
					"api_key": {
						"$ref": "#/components/schemas/ConvAISecretLocator"
					}
				},
				"type": "object",
				"required": [
					"url"
				],
				"title": "CustomLLM"
			},
			"DataCollectionResultCommonModel": {
				"properties": {
					"data_collection_id": {
						"type": "string",
						"title": "Data Collection Id"
					},
					"value": {
						"title": "Value"
					},
					"json_schema": {
						"$ref": "#/components/schemas/LiteralJsonSchemaProperty"
					},
					"rationale": {
						"type": "string",
						"title": "Rationale"
					}
				},
				"type": "object",
				"required": [
					"data_collection_id",
					"rationale"
				],
				"title": "DataCollectionResultCommonModel"
			},
			"DoDubbingResponseModel": {
				"properties": {
					"dubbing_id": {
						"type": "string",
						"title": "Dubbing Id"
					},
					"expected_duration_sec": {
						"type": "number",
						"title": "Expected Duration Sec"
					}
				},
				"type": "object",
				"required": [
					"dubbing_id",
					"expected_duration_sec"
				],
				"title": "DoDubbingResponseModel"
			},
			"DubbingMetadataResponse": {
				"properties": {
					"dubbing_id": {
						"type": "string",
						"title": "Dubbing Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"status": {
						"type": "string",
						"title": "Status"
					},
					"target_languages": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Target Languages"
					},
					"error": {
						"type": "string",
						"title": "Error"
					}
				},
				"type": "object",
				"required": [
					"dubbing_id",
					"name",
					"status",
					"target_languages"
				],
				"title": "DubbingMetadataResponse"
			},
			"EditProjectResponseModel": {
				"properties": {
					"project": {
						"$ref": "#/components/schemas/ProjectResponseModel"
					}
				},
				"type": "object",
				"required": [
					"project"
				],
				"title": "EditProjectResponseModel"
			},
			"EmbedConfig": {
				"properties": {
					"variant": {
						"allOf": [
							{
								"$ref": "#/components/schemas/EmbedVariant"
							}
						],
						"default": "full"
					},
					"avatar": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/OrbAvatar"
							},
							{
								"$ref": "#/components/schemas/URLAvatar"
							},
							{
								"$ref": "#/components/schemas/ImageAvatar"
							}
						],
						"title": "Avatar"
					},
					"feedback_mode": {
						"allOf": [
							{
								"$ref": "#/components/schemas/WidgetFeedbackMode"
							}
						],
						"default": "none"
					},
					"custom_avatar_path": {
						"type": "string",
						"title": "Custom Avatar Path"
					},
					"bg_color": {
						"type": "string",
						"title": "Bg Color",
						"default": "#ffffff"
					},
					"text_color": {
						"type": "string",
						"title": "Text Color",
						"default": "#000000"
					},
					"btn_color": {
						"type": "string",
						"title": "Btn Color",
						"default": "#000000"
					},
					"btn_text_color": {
						"type": "string",
						"title": "Btn Text Color",
						"default": "#ffffff"
					},
					"border_color": {
						"type": "string",
						"title": "Border Color",
						"default": "#e1e1e1"
					},
					"focus_color": {
						"type": "string",
						"title": "Focus Color",
						"default": "#000000"
					},
					"border_radius": {
						"type": "integer",
						"title": "Border Radius"
					},
					"btn_radius": {
						"type": "integer",
						"title": "Btn Radius"
					},
					"action_text": {
						"type": "string",
						"title": "Action Text"
					},
					"start_call_text": {
						"type": "string",
						"title": "Start Call Text"
					},
					"end_call_text": {
						"type": "string",
						"title": "End Call Text"
					},
					"expand_text": {
						"type": "string",
						"title": "Expand Text"
					},
					"listening_text": {
						"type": "string",
						"title": "Listening Text"
					},
					"speaking_text": {
						"type": "string",
						"title": "Speaking Text"
					},
					"shareable_page_text": {
						"type": "string",
						"title": "Shareable Page Text"
					}
				},
				"type": "object",
				"title": "EmbedConfig"
			},
			"EmbedVariant": {
				"type": "string",
				"enum": [
					"compact",
					"full",
					"expandable"
				],
				"title": "EmbedVariant",
				"description": "An enumeration."
			},
			"EvaluationSettings": {
				"properties": {
					"criteria": {
						"items": {
							"$ref": "#/components/schemas/PromptEvaluationCriteria"
						},
						"type": "array",
						"title": "Criteria"
					}
				},
				"type": "object",
				"title": "EvaluationSettings",
				"description": "Settings to evaluate an agent's performance.\nAgents are evaluated against a set of criteria, with success being defined as meeting some combination of those criteria."
			},
			"EvaluationSuccessResult": {
				"type": "string",
				"enum": [
					"success",
					"failure",
					"unknown"
				],
				"title": "EvaluationSuccessResult",
				"description": "An enumeration."
			},
			"ExtendedSubscriptionResponseModel": {
				"properties": {
					"tier": {
						"type": "string",
						"title": "Tier"
					},
					"character_count": {
						"type": "integer",
						"title": "Character Count"
					},
					"character_limit": {
						"type": "integer",
						"title": "Character Limit"
					},
					"can_extend_character_limit": {
						"type": "boolean",
						"title": "Can Extend Character Limit"
					},
					"allowed_to_extend_character_limit": {
						"type": "boolean",
						"title": "Allowed To Extend Character Limit"
					},
					"next_character_count_reset_unix": {
						"type": "integer",
						"title": "Next Character Count Reset Unix"
					},
					"voice_limit": {
						"type": "integer",
						"title": "Voice Limit"
					},
					"max_voice_add_edits": {
						"type": "integer",
						"title": "Max Voice Add Edits"
					},
					"voice_add_edit_counter": {
						"type": "integer",
						"title": "Voice Add Edit Counter"
					},
					"professional_voice_limit": {
						"type": "integer",
						"title": "Professional Voice Limit"
					},
					"can_extend_voice_limit": {
						"type": "boolean",
						"title": "Can Extend Voice Limit"
					},
					"can_use_instant_voice_cloning": {
						"type": "boolean",
						"title": "Can Use Instant Voice Cloning"
					},
					"can_use_professional_voice_cloning": {
						"type": "boolean",
						"title": "Can Use Professional Voice Cloning"
					},
					"currency": {
						"type": "string",
						"enum": [
							"usd",
							"eur"
						],
						"title": "Currency"
					},
					"status": {
						"type": "string",
						"enum": [
							"trialing",
							"active",
							"incomplete",
							"incomplete_expired",
							"past_due",
							"canceled",
							"unpaid",
							"free"
						],
						"title": "Status"
					},
					"billing_period": {
						"type": "string",
						"enum": [
							"monthly_period",
							"annual_period"
						],
						"title": "Billing Period"
					},
					"character_refresh_period": {
						"type": "string",
						"enum": [
							"monthly_period",
							"annual_period"
						],
						"title": "Character Refresh Period"
					},
					"next_invoice": {
						"$ref": "#/components/schemas/InvoiceResponseModel"
					},
					"has_open_invoices": {
						"type": "boolean",
						"title": "Has Open Invoices"
					}
				},
				"type": "object",
				"required": [
					"tier",
					"character_count",
					"character_limit",
					"can_extend_character_limit",
					"allowed_to_extend_character_limit",
					"next_character_count_reset_unix",
					"voice_limit",
					"max_voice_add_edits",
					"voice_add_edit_counter",
					"professional_voice_limit",
					"can_extend_voice_limit",
					"can_use_instant_voice_cloning",
					"can_use_professional_voice_cloning",
					"currency",
					"status",
					"billing_period",
					"character_refresh_period",
					"next_invoice",
					"has_open_invoices"
				],
				"title": "ExtendedSubscriptionResponseModel"
			},
			"FeedbackResponseModel": {
				"properties": {
					"thumbs_up": {
						"type": "boolean",
						"title": "Thumbs Up"
					},
					"feedback": {
						"type": "string",
						"title": "Feedback"
					},
					"emotions": {
						"type": "boolean",
						"title": "Emotions"
					},
					"inaccurate_clone": {
						"type": "boolean",
						"title": "Inaccurate Clone"
					},
					"glitches": {
						"type": "boolean",
						"title": "Glitches"
					},
					"audio_quality": {
						"type": "boolean",
						"title": "Audio Quality"
					},
					"other": {
						"type": "boolean",
						"title": "Other"
					},
					"review_status": {
						"type": "string",
						"title": "Review Status",
						"default": "not_reviewed"
					}
				},
				"type": "object",
				"required": [
					"thumbs_up",
					"feedback",
					"emotions",
					"inaccurate_clone",
					"glitches",
					"audio_quality",
					"other"
				],
				"title": "FeedbackResponseModel"
			},
			"FineTuningResponseModel": {
				"properties": {
					"is_allowed_to_fine_tune": {
						"type": "boolean",
						"title": "Is Allowed To Fine Tune"
					},
					"state": {
						"additionalProperties": {
							"type": "string",
							"enum": [
								"not_started",
								"queued",
								"fine_tuning",
								"fine_tuned",
								"failed",
								"delayed"
							]
						},
						"type": "object",
						"title": "State"
					},
					"verification_failures": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Verification Failures"
					},
					"verification_attempts_count": {
						"type": "integer",
						"title": "Verification Attempts Count"
					},
					"manual_verification_requested": {
						"type": "boolean",
						"title": "Manual Verification Requested"
					},
					"language": {
						"type": "string",
						"title": "Language"
					},
					"progress": {
						"additionalProperties": {
							"type": "number"
						},
						"type": "object",
						"title": "Progress"
					},
					"message": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Message"
					},
					"dataset_duration_seconds": {
						"type": "number",
						"title": "Dataset Duration Seconds"
					},
					"verification_attempts": {
						"items": {
							"$ref": "#/components/schemas/VerificationAttemptResponseModel"
						},
						"type": "array",
						"title": "Verification Attempts"
					},
					"slice_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Slice Ids"
					},
					"manual_verification": {
						"$ref": "#/components/schemas/ManualVerificationResponseModel"
					},
					"max_verification_attempts": {
						"type": "integer",
						"title": "Max Verification Attempts"
					},
					"next_max_verification_attempts_reset_unix_ms": {
						"type": "integer",
						"title": "Next Max Verification Attempts Reset Unix Ms"
					}
				},
				"type": "object",
				"required": [
					"is_allowed_to_fine_tune",
					"state",
					"verification_failures",
					"verification_attempts_count",
					"manual_verification_requested"
				],
				"title": "FineTuningResponseModel"
			},
			"GetAgentEmbedResponseModel": {
				"properties": {
					"agent_id": {
						"type": "string",
						"title": "Agent Id"
					},
					"widget_config": {
						"$ref": "#/components/schemas/EmbedConfig"
					}
				},
				"type": "object",
				"required": [
					"agent_id",
					"widget_config"
				],
				"title": "GetAgentEmbedResponseModel"
			},
			"GetAgentLinkResponseModel": {
				"properties": {
					"agent_id": {
						"type": "string",
						"title": "Agent Id"
					},
					"token": {
						"$ref": "#/components/schemas/ConversationTokenDBModel"
					}
				},
				"type": "object",
				"required": [
					"agent_id"
				],
				"title": "GetAgentLinkResponseModel"
			},
			"GetAgentResponseModel": {
				"properties": {
					"agent_id": {
						"type": "string",
						"title": "Agent Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"conversation_config": {
						"$ref": "#/components/schemas/ConversationalConfig"
					},
					"metadata": {
						"$ref": "#/components/schemas/AgentMetadataResponseModel"
					},
					"platform_settings": {
						"$ref": "#/components/schemas/AgentPlatformSettings"
					},
					"secrets": {
						"items": {
							"$ref": "#/components/schemas/ConvAIStoredSecretConfig"
						},
						"type": "array",
						"title": "Secrets"
					}
				},
				"type": "object",
				"required": [
					"agent_id",
					"name",
					"conversation_config",
					"metadata",
					"secrets"
				],
				"title": "GetAgentResponseModel"
			},
			"GetAgentsPageResponseModel": {
				"properties": {
					"agents": {
						"items": {
							"$ref": "#/components/schemas/AgentSummaryResponseModel"
						},
						"type": "array",
						"title": "Agents"
					},
					"next_cursor": {
						"type": "string",
						"title": "Next Cursor"
					},
					"has_more": {
						"type": "boolean",
						"title": "Has More"
					}
				},
				"type": "object",
				"required": [
					"agents",
					"has_more"
				],
				"title": "GetAgentsPageResponseModel"
			},
			"GetChaptersResponseModel": {
				"properties": {
					"chapters": {
						"items": {
							"$ref": "#/components/schemas/ChapterResponseModel"
						},
						"type": "array",
						"title": "Chapters"
					}
				},
				"type": "object",
				"required": [
					"chapters"
				],
				"title": "GetChaptersResponseModel"
			},
			"GetConversationResponseModel": {
				"properties": {
					"agent_id": {
						"type": "string",
						"title": "Agent Id"
					},
					"conversation_id": {
						"type": "string",
						"title": "Conversation Id"
					},
					"status": {
						"type": "string",
						"enum": [
							"processing",
							"done"
						],
						"title": "Status"
					},
					"transcript": {
						"items": {
							"$ref": "#/components/schemas/ConversationHistoryTranscriptCommonModel"
						},
						"type": "array",
						"title": "Transcript"
					},
					"metadata": {
						"$ref": "#/components/schemas/ConversationHistoryMetadataCommonModel"
					},
					"analysis": {
						"$ref": "#/components/schemas/ConversationHistoryAnalysisCommonModel"
					},
					"conversation_initiation_client_data": {
						"$ref": "#/components/schemas/ConversationInitiationClientData"
					}
				},
				"type": "object",
				"required": [
					"agent_id",
					"conversation_id",
					"status",
					"transcript",
					"metadata"
				],
				"title": "GetConversationResponseModel"
			},
			"GetConversationsPageResponseModel": {
				"properties": {
					"conversations": {
						"items": {
							"$ref": "#/components/schemas/ConversationSummaryResponseModel"
						},
						"type": "array",
						"title": "Conversations"
					},
					"next_cursor": {
						"type": "string",
						"title": "Next Cursor"
					},
					"has_more": {
						"type": "boolean",
						"title": "Has More"
					}
				},
				"type": "object",
				"required": [
					"conversations",
					"has_more"
				],
				"title": "GetConversationsPageResponseModel"
			},
			"GetKnowledgeBaseReponseModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"type": {
						"type": "string",
						"enum": [
							"file",
							"url"
						],
						"title": "Type"
					},
					"extracted_inner_html": {
						"type": "string",
						"title": "Extracted Inner Html"
					}
				},
				"type": "object",
				"required": [
					"id",
					"type",
					"extracted_inner_html"
				],
				"title": "GetKnowledgeBaseReponseModel"
			},
			"GetLibraryVoicesResponseModel": {
				"properties": {
					"voices": {
						"items": {
							"$ref": "#/components/schemas/LibraryVoiceResponseModel"
						},
						"type": "array",
						"title": "Voices"
					},
					"has_more": {
						"type": "boolean",
						"title": "Has More"
					},
					"last_sort_id": {
						"type": "string",
						"title": "Last Sort Id"
					}
				},
				"type": "object",
				"required": [
					"voices",
					"has_more"
				],
				"title": "GetLibraryVoicesResponseModel"
			},
			"GetPhoneNumberResponseModel": {
				"properties": {
					"phone_number": {
						"type": "string",
						"title": "Phone Number",
						"description": "Phone number"
					},
					"provider": {
						"allOf": [
							{
								"$ref": "#/components/schemas/TelephonyProvider"
							}
						],
						"description": "Phone provider"
					},
					"label": {
						"type": "string",
						"title": "Label",
						"description": "Label for the phone number"
					},
					"phone_number_id": {
						"type": "string",
						"title": "Phone Number Id"
					},
					"assigned_agent": {
						"$ref": "#/components/schemas/PhoneNumberAgentInfo"
					}
				},
				"type": "object",
				"required": [
					"phone_number",
					"provider",
					"label",
					"phone_number_id"
				],
				"title": "GetPhoneNumberResponseModel"
			},
			"GetProjectsResponseModel": {
				"properties": {
					"projects": {
						"items": {
							"$ref": "#/components/schemas/ProjectResponseModel"
						},
						"type": "array",
						"title": "Projects"
					}
				},
				"type": "object",
				"required": [
					"projects"
				],
				"title": "GetProjectsResponseModel"
			},
			"GetPronunciationDictionariesMetadataResponseModel": {
				"properties": {
					"pronunciation_dictionaries": {
						"items": {
							"$ref": "#/components/schemas/GetPronunciationDictionaryMetadataResponseModel"
						},
						"type": "array",
						"title": "Pronunciation Dictionaries"
					},
					"next_cursor": {
						"type": "string",
						"title": "Next Cursor"
					},
					"has_more": {
						"type": "boolean",
						"title": "Has More"
					}
				},
				"type": "object",
				"required": [
					"pronunciation_dictionaries",
					"next_cursor",
					"has_more"
				],
				"title": "GetPronunciationDictionariesMetadataResponseModel"
			},
			"GetPronunciationDictionaryMetadataResponseModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"latest_version_id": {
						"type": "string",
						"title": "Latest Version Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"created_by": {
						"type": "string",
						"title": "Created By"
					},
					"creation_time_unix": {
						"type": "integer",
						"title": "Creation Time Unix"
					},
					"description": {
						"type": "string",
						"title": "Description"
					}
				},
				"type": "object",
				"required": [
					"id",
					"latest_version_id",
					"name",
					"created_by",
					"creation_time_unix"
				],
				"title": "GetPronunciationDictionaryMetadataResponseModel"
			},
			"GetSpeechHistoryResponseModel": {
				"properties": {
					"history": {
						"items": {
							"$ref": "#/components/schemas/SpeechHistoryItemResponseModel"
						},
						"type": "array",
						"title": "History"
					},
					"last_history_item_id": {
						"type": "string",
						"title": "Last History Item Id"
					},
					"has_more": {
						"type": "boolean",
						"title": "Has More"
					}
				},
				"type": "object",
				"required": [
					"history",
					"last_history_item_id",
					"has_more"
				],
				"title": "GetSpeechHistoryResponseModel"
			},
			"GetVoicesResponseModel": {
				"properties": {
					"voices": {
						"items": {
							"$ref": "#/components/schemas/VoiceResponseModel"
						},
						"type": "array",
						"title": "Voices"
					}
				},
				"type": "object",
				"required": [
					"voices"
				],
				"title": "GetVoicesResponseModel"
			},
			"HTTPValidationError": {
				"properties": {
					"detail": {
						"items": {
							"$ref": "#/components/schemas/ValidationError"
						},
						"type": "array",
						"title": "Detail"
					}
				},
				"type": "object",
				"title": "HTTPValidationError"
			},
			"HistoryAlignmentResponseModel": {
				"properties": {
					"characters": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Characters"
					},
					"character_start_times_seconds": {
						"items": {
							"type": "number"
						},
						"type": "array",
						"title": "Character Start Times Seconds"
					},
					"character_end_times_seconds": {
						"items": {
							"type": "number"
						},
						"type": "array",
						"title": "Character End Times Seconds"
					}
				},
				"type": "object",
				"required": [
					"characters",
					"character_start_times_seconds",
					"character_end_times_seconds"
				],
				"title": "HistoryAlignmentResponseModel"
			},
			"HistoryAlignmentsResponseModel": {
				"properties": {
					"alignment": {
						"$ref": "#/components/schemas/HistoryAlignmentResponseModel"
					},
					"normalized_alignment": {
						"$ref": "#/components/schemas/HistoryAlignmentResponseModel"
					}
				},
				"type": "object",
				"required": [
					"alignment",
					"normalized_alignment"
				],
				"title": "HistoryAlignmentsResponseModel"
			},
			"ImageAvatar": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"image"
						],
						"title": "Type",
						"default": "image"
					},
					"url": {
						"type": "string",
						"title": "Url",
						"default": ""
					}
				},
				"type": "object",
				"title": "ImageAvatar"
			},
			"InvoiceResponseModel": {
				"properties": {
					"amount_due_cents": {
						"type": "integer",
						"title": "Amount Due Cents"
					},
					"next_payment_attempt_unix": {
						"type": "integer",
						"title": "Next Payment Attempt Unix"
					}
				},
				"type": "object",
				"required": [
					"amount_due_cents",
					"next_payment_attempt_unix"
				],
				"title": "InvoiceResponseModel"
			},
			"KnowledgeBaseLocator": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"file",
							"url"
						],
						"title": "Type"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"id": {
						"type": "string",
						"title": "Id"
					}
				},
				"type": "object",
				"required": [
					"type",
					"name",
					"id"
				],
				"title": "KnowledgeBaseLocator"
			},
			"LLM": {
				"type": "string",
				"enum": [
					"gpt-4o-mini",
					"gpt-4o",
					"gpt-4",
					"gpt-4-turbo",
					"gpt-3.5-turbo",
					"gemini-1.5-pro",
					"gemini-1.5-flash",
					"gemini-1.0-pro",
					"claude-3-5-sonnet",
					"claude-3-haiku",
					"grok-beta",
					"custom-llm"
				],
				"title": "LLM",
				"description": "An enumeration."
			},
			"LanguageResponseModel": {
				"properties": {
					"language_id": {
						"type": "string",
						"title": "Language Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					}
				},
				"type": "object",
				"required": [
					"language_id",
					"name"
				],
				"title": "LanguageResponseModel"
			},
			"LibraryVoiceResponseModel": {
				"properties": {
					"public_owner_id": {
						"type": "string",
						"title": "Public Owner Id"
					},
					"voice_id": {
						"type": "string",
						"title": "Voice Id"
					},
					"date_unix": {
						"type": "integer",
						"title": "Date Unix"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"accent": {
						"type": "string",
						"title": "Accent"
					},
					"gender": {
						"type": "string",
						"title": "Gender"
					},
					"age": {
						"type": "string",
						"title": "Age"
					},
					"descriptive": {
						"type": "string",
						"title": "Descriptive"
					},
					"use_case": {
						"type": "string",
						"title": "Use Case"
					},
					"category": {
						"type": "string",
						"enum": [
							"generated",
							"cloned",
							"premade",
							"professional",
							"famous",
							"high_quality"
						],
						"title": "Category"
					},
					"language": {
						"type": "string",
						"title": "Language"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"preview_url": {
						"type": "string",
						"title": "Preview Url"
					},
					"usage_character_count_1y": {
						"type": "integer",
						"title": "Usage Character Count 1Y"
					},
					"usage_character_count_7d": {
						"type": "integer",
						"title": "Usage Character Count 7D"
					},
					"play_api_usage_character_count_1y": {
						"type": "integer",
						"title": "Play Api Usage Character Count 1Y"
					},
					"cloned_by_count": {
						"type": "integer",
						"title": "Cloned By Count"
					},
					"rate": {
						"type": "number",
						"title": "Rate"
					},
					"free_users_allowed": {
						"type": "boolean",
						"title": "Free Users Allowed"
					},
					"live_moderation_enabled": {
						"type": "boolean",
						"title": "Live Moderation Enabled"
					},
					"featured": {
						"type": "boolean",
						"title": "Featured"
					},
					"notice_period": {
						"type": "integer",
						"title": "Notice Period"
					},
					"instagram_username": {
						"type": "string",
						"title": "Instagram Username"
					},
					"twitter_username": {
						"type": "string",
						"title": "Twitter Username"
					},
					"youtube_username": {
						"type": "string",
						"title": "Youtube Username"
					},
					"tiktok_username": {
						"type": "string",
						"title": "Tiktok Username"
					},
					"image_url": {
						"type": "string",
						"title": "Image Url"
					}
				},
				"type": "object",
				"required": [
					"public_owner_id",
					"voice_id",
					"date_unix",
					"name",
					"accent",
					"gender",
					"age",
					"descriptive",
					"use_case",
					"category",
					"language",
					"description",
					"preview_url",
					"usage_character_count_1y",
					"usage_character_count_7d",
					"play_api_usage_character_count_1y",
					"cloned_by_count",
					"rate",
					"free_users_allowed",
					"live_moderation_enabled",
					"featured"
				],
				"title": "LibraryVoiceResponseModel"
			},
			"LiteralJsonSchemaProperty": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"boolean",
							"string",
							"integer",
							"number"
						],
						"title": "Type"
					},
					"description": {
						"type": "string",
						"title": "Description"
					}
				},
				"type": "object",
				"required": [
					"type",
					"description"
				],
				"title": "LiteralJsonSchemaProperty"
			},
			"ManualVerificationFileResponseModel": {
				"properties": {
					"file_id": {
						"type": "string",
						"title": "File Id"
					},
					"file_name": {
						"type": "string",
						"title": "File Name"
					},
					"mime_type": {
						"type": "string",
						"title": "Mime Type"
					},
					"size_bytes": {
						"type": "integer",
						"title": "Size Bytes"
					},
					"upload_date_unix": {
						"type": "integer",
						"title": "Upload Date Unix"
					}
				},
				"type": "object",
				"required": [
					"file_id",
					"file_name",
					"mime_type",
					"size_bytes",
					"upload_date_unix"
				],
				"title": "ManualVerificationFileResponseModel"
			},
			"ManualVerificationResponseModel": {
				"properties": {
					"extra_text": {
						"type": "string",
						"title": "Extra Text"
					},
					"request_time_unix": {
						"type": "integer",
						"title": "Request Time Unix"
					},
					"files": {
						"items": {
							"$ref": "#/components/schemas/ManualVerificationFileResponseModel"
						},
						"type": "array",
						"title": "Files"
					}
				},
				"type": "object",
				"required": [
					"extra_text",
					"request_time_unix",
					"files"
				],
				"title": "ManualVerificationResponseModel"
			},
			"ModelRatesResponseModel": {
				"properties": {
					"character_cost_multiplier": {
						"type": "number",
						"title": "Character Cost Multiplier"
					}
				},
				"type": "object",
				"required": [
					"character_cost_multiplier"
				],
				"title": "ModelRatesResponseModel"
			},
			"ModelResponseModel": {
				"properties": {
					"model_id": {
						"type": "string",
						"title": "Model Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"can_be_finetuned": {
						"type": "boolean",
						"title": "Can Be Finetuned"
					},
					"can_do_text_to_speech": {
						"type": "boolean",
						"title": "Can Do Text To Speech"
					},
					"can_do_voice_conversion": {
						"type": "boolean",
						"title": "Can Do Voice Conversion"
					},
					"can_use_style": {
						"type": "boolean",
						"title": "Can Use Style"
					},
					"can_use_speaker_boost": {
						"type": "boolean",
						"title": "Can Use Speaker Boost"
					},
					"serves_pro_voices": {
						"type": "boolean",
						"title": "Serves Pro Voices"
					},
					"token_cost_factor": {
						"type": "number",
						"title": "Token Cost Factor"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"requires_alpha_access": {
						"type": "boolean",
						"title": "Requires Alpha Access"
					},
					"max_characters_request_free_user": {
						"type": "integer",
						"title": "Max Characters Request Free User"
					},
					"max_characters_request_subscribed_user": {
						"type": "integer",
						"title": "Max Characters Request Subscribed User"
					},
					"maximum_text_length_per_request": {
						"type": "integer",
						"title": "Maximum Text Length Per Request"
					},
					"languages": {
						"items": {
							"$ref": "#/components/schemas/LanguageResponseModel"
						},
						"type": "array",
						"title": "Languages"
					},
					"model_rates": {
						"$ref": "#/components/schemas/ModelRatesResponseModel"
					},
					"concurrency_group": {
						"type": "string",
						"enum": [
							"standard",
							"turbo"
						],
						"title": "Concurrency Group"
					}
				},
				"type": "object",
				"required": [
					"model_id",
					"name",
					"can_be_finetuned",
					"can_do_text_to_speech",
					"can_do_voice_conversion",
					"can_use_style",
					"can_use_speaker_boost",
					"serves_pro_voices",
					"token_cost_factor",
					"description",
					"requires_alpha_access",
					"max_characters_request_free_user",
					"max_characters_request_subscribed_user",
					"maximum_text_length_per_request",
					"languages",
					"model_rates",
					"concurrency_group"
				],
				"title": "ModelResponseModel"
			},
			"ModerationStatusResponseModel": {
				"properties": {
					"is_in_probation": {
						"type": "boolean",
						"title": "Is In Probation"
					},
					"enterprise_check_nogo_voice": {
						"type": "boolean",
						"title": "Enterprise Check Nogo Voice"
					},
					"enterprise_check_block_nogo_voice": {
						"type": "boolean",
						"title": "Enterprise Check Block Nogo Voice"
					},
					"never_live_moderate": {
						"type": "boolean",
						"title": "Never Live Moderate"
					},
					"nogo_voice_similar_voice_upload_count": {
						"type": "integer",
						"title": "Nogo Voice Similar Voice Upload Count"
					},
					"enterprise_background_moderation_enabled": {
						"type": "boolean",
						"title": "Enterprise Background Moderation Enabled"
					},
					"safety_status": {
						"type": "string",
						"enum": [
							"appeal_approved",
							"appeal_denied"
						],
						"title": "Safety Status"
					},
					"warning_status": {
						"type": "string",
						"enum": [
							"warning",
							"warning_cleared"
						],
						"title": "Warning Status"
					}
				},
				"type": "object",
				"required": [
					"is_in_probation",
					"enterprise_check_nogo_voice",
					"enterprise_check_block_nogo_voice",
					"never_live_moderate",
					"nogo_voice_similar_voice_upload_count",
					"enterprise_background_moderation_enabled",
					"safety_status",
					"warning_status"
				],
				"title": "ModerationStatusResponseModel"
			},
			"ObjectJsonSchemaProperty": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"object"
						],
						"title": "Type",
						"default": "object"
					},
					"properties": {
						"additionalProperties": {
							"anyOf": [
								{
									"$ref": "#/components/schemas/LiteralJsonSchemaProperty"
								},
								{
									"$ref": "#/components/schemas/ObjectJsonSchemaProperty"
								},
								{
									"$ref": "#/components/schemas/ArrayJsonSchemaProperty"
								}
							]
						},
						"type": "object",
						"title": "Properties"
					},
					"required": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Required"
					},
					"description": {
						"type": "string",
						"title": "Description",
						"default": ""
					}
				},
				"additionalProperties": false,
				"type": "object",
				"title": "ObjectJsonSchemaProperty"
			},
			"OrbAvatar": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"orb"
						],
						"title": "Type",
						"default": "orb"
					},
					"color_1": {
						"type": "string",
						"title": "Color 1",
						"default": "#2792dc"
					},
					"color_2": {
						"type": "string",
						"title": "Color 2",
						"default": "#9ce6e6"
					}
				},
				"type": "object",
				"title": "OrbAvatar"
			},
			"PhoneNumberAgentInfo": {
				"properties": {
					"agent_id": {
						"type": "string",
						"title": "Agent Id"
					},
					"agent_name": {
						"type": "string",
						"title": "Agent Name"
					}
				},
				"type": "object",
				"required": [
					"agent_id",
					"agent_name"
				],
				"title": "PhoneNumberAgentInfo"
			},
			"PostAgentAvatarResponseModel": {
				"properties": {
					"agent_id": {
						"type": "string",
						"title": "Agent Id"
					},
					"avatar_url": {
						"type": "string",
						"title": "Avatar Url"
					}
				},
				"type": "object",
				"required": [
					"agent_id"
				],
				"title": "PostAgentAvatarResponseModel"
			},
			"PrivacyConfig": {
				"properties": {
					"record_voice": {
						"type": "boolean",
						"title": "Record Voice",
						"default": true
					}
				},
				"type": "object",
				"title": "PrivacyConfig"
			},
			"ProfilePageResponseModel": {
				"properties": {
					"handle": {
						"type": "string",
						"title": "Handle"
					},
					"public_user_id": {
						"type": "string",
						"title": "Public User Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"bio": {
						"type": "string",
						"title": "Bio"
					},
					"profile_picture": {
						"type": "string",
						"title": "Profile Picture"
					}
				},
				"type": "object",
				"required": [
					"handle",
					"public_user_id",
					"name",
					"bio",
					"profile_picture"
				],
				"title": "ProfilePageResponseModel"
			},
			"ProjectCreationMetaResponseModel": {
				"properties": {
					"creation_progress": {
						"type": "number",
						"title": "Creation Progress"
					},
					"status": {
						"type": "string",
						"enum": [
							"pending",
							"creating",
							"finished",
							"failed"
						],
						"title": "Status"
					},
					"type": {
						"type": "string",
						"enum": [
							"blank",
							"generate_podcast"
						],
						"title": "Type"
					}
				},
				"type": "object",
				"required": [
					"creation_progress",
					"status",
					"type"
				],
				"title": "ProjectCreationMetaResponseModel"
			},
			"ProjectExtendedResponseModel": {
				"properties": {
					"project_id": {
						"type": "string",
						"title": "Project Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"create_date_unix": {
						"type": "integer",
						"title": "Create Date Unix"
					},
					"default_title_voice_id": {
						"type": "string",
						"title": "Default Title Voice Id"
					},
					"default_paragraph_voice_id": {
						"type": "string",
						"title": "Default Paragraph Voice Id"
					},
					"default_model_id": {
						"type": "string",
						"title": "Default Model Id"
					},
					"last_conversion_date_unix": {
						"type": "integer",
						"title": "Last Conversion Date Unix"
					},
					"can_be_downloaded": {
						"type": "boolean",
						"title": "Can Be Downloaded"
					},
					"title": {
						"type": "string",
						"title": "Title"
					},
					"author": {
						"type": "string",
						"title": "Author"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"genres": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Genres"
					},
					"cover_image_url": {
						"type": "string",
						"title": "Cover Image Url"
					},
					"target_audience": {
						"type": "string",
						"enum": [
							"children",
							"young adult",
							"adult",
							"all ages"
						],
						"title": "Target Audience"
					},
					"language": {
						"type": "string",
						"title": "Language"
					},
					"content_type": {
						"type": "string",
						"title": "Content Type"
					},
					"original_publication_date": {
						"type": "string",
						"title": "Original Publication Date"
					},
					"mature_content": {
						"type": "boolean",
						"title": "Mature Content"
					},
					"isbn_number": {
						"type": "string",
						"title": "Isbn Number"
					},
					"volume_normalization": {
						"type": "boolean",
						"title": "Volume Normalization"
					},
					"state": {
						"type": "string",
						"enum": [
							"creating",
							"default",
							"converting",
							"in_queue"
						],
						"title": "State"
					},
					"access_level": {
						"type": "string",
						"enum": [
							"admin",
							"editor",
							"viewer"
						],
						"title": "Access Level"
					},
					"fiction": {
						"type": "string",
						"enum": [
							"fiction",
							"non-fiction"
						],
						"title": "Fiction"
					},
					"quality_check_on": {
						"type": "boolean",
						"title": "Quality Check On"
					},
					"quality_check_on_when_bulk_convert": {
						"type": "boolean",
						"title": "Quality Check On When Bulk Convert"
					},
					"creation_meta": {
						"$ref": "#/components/schemas/ProjectCreationMetaResponseModel"
					},
					"quality_preset": {
						"type": "string",
						"enum": [
							"standard",
							"high",
							"highest",
							"ultra",
							"ultra_lossless"
						],
						"title": "Quality Preset"
					},
					"chapters": {
						"items": {
							"$ref": "#/components/schemas/ChapterResponseModel"
						},
						"type": "array",
						"title": "Chapters"
					},
					"pronunciation_dictionary_versions": {
						"items": {
							"$ref": "#/components/schemas/PronunciationDictionaryVersionResponseModel"
						},
						"type": "array",
						"title": "Pronunciation Dictionary Versions"
					},
					"apply_text_normalization": {
						"type": "string",
						"enum": [
							"auto",
							"on",
							"off",
							"apply_english"
						],
						"title": "Apply Text Normalization"
					},
					"experimental": {
						"type": "object",
						"title": "Experimental"
					}
				},
				"type": "object",
				"required": [
					"project_id",
					"name",
					"create_date_unix",
					"default_title_voice_id",
					"default_paragraph_voice_id",
					"default_model_id",
					"can_be_downloaded",
					"volume_normalization",
					"state",
					"access_level",
					"quality_check_on",
					"quality_check_on_when_bulk_convert",
					"quality_preset",
					"chapters",
					"pronunciation_dictionary_versions",
					"apply_text_normalization",
					"experimental"
				],
				"title": "ProjectExtendedResponseModel"
			},
			"ProjectResponseModel": {
				"properties": {
					"project_id": {
						"type": "string",
						"title": "Project Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"create_date_unix": {
						"type": "integer",
						"title": "Create Date Unix"
					},
					"default_title_voice_id": {
						"type": "string",
						"title": "Default Title Voice Id"
					},
					"default_paragraph_voice_id": {
						"type": "string",
						"title": "Default Paragraph Voice Id"
					},
					"default_model_id": {
						"type": "string",
						"title": "Default Model Id"
					},
					"last_conversion_date_unix": {
						"type": "integer",
						"title": "Last Conversion Date Unix"
					},
					"can_be_downloaded": {
						"type": "boolean",
						"title": "Can Be Downloaded"
					},
					"title": {
						"type": "string",
						"title": "Title"
					},
					"author": {
						"type": "string",
						"title": "Author"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"genres": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Genres"
					},
					"cover_image_url": {
						"type": "string",
						"title": "Cover Image Url"
					},
					"target_audience": {
						"type": "string",
						"enum": [
							"children",
							"young adult",
							"adult",
							"all ages"
						],
						"title": "Target Audience"
					},
					"language": {
						"type": "string",
						"title": "Language"
					},
					"content_type": {
						"type": "string",
						"title": "Content Type"
					},
					"original_publication_date": {
						"type": "string",
						"title": "Original Publication Date"
					},
					"mature_content": {
						"type": "boolean",
						"title": "Mature Content"
					},
					"isbn_number": {
						"type": "string",
						"title": "Isbn Number"
					},
					"volume_normalization": {
						"type": "boolean",
						"title": "Volume Normalization"
					},
					"state": {
						"type": "string",
						"enum": [
							"creating",
							"default",
							"converting",
							"in_queue"
						],
						"title": "State"
					},
					"access_level": {
						"type": "string",
						"enum": [
							"admin",
							"editor",
							"viewer"
						],
						"title": "Access Level"
					},
					"fiction": {
						"type": "string",
						"enum": [
							"fiction",
							"non-fiction"
						],
						"title": "Fiction"
					},
					"quality_check_on": {
						"type": "boolean",
						"title": "Quality Check On"
					},
					"quality_check_on_when_bulk_convert": {
						"type": "boolean",
						"title": "Quality Check On When Bulk Convert"
					},
					"creation_meta": {
						"$ref": "#/components/schemas/ProjectCreationMetaResponseModel"
					}
				},
				"type": "object",
				"required": [
					"project_id",
					"name",
					"create_date_unix",
					"default_title_voice_id",
					"default_paragraph_voice_id",
					"default_model_id",
					"can_be_downloaded",
					"volume_normalization",
					"state",
					"access_level",
					"quality_check_on",
					"quality_check_on_when_bulk_convert"
				],
				"title": "ProjectResponseModel"
			},
			"ProjectSnapshotResponseModel": {
				"properties": {
					"project_snapshot_id": {
						"type": "string",
						"title": "Project Snapshot Id"
					},
					"project_id": {
						"type": "string",
						"title": "Project Id"
					},
					"created_at_unix": {
						"type": "integer",
						"title": "Created At Unix"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"audio_upload": {
						"$ref": "#/components/schemas/ProjectSnapshotUploadResponseModel"
					},
					"zip_upload": {
						"$ref": "#/components/schemas/ProjectSnapshotUploadResponseModel"
					}
				},
				"type": "object",
				"required": [
					"project_snapshot_id",
					"project_id",
					"created_at_unix",
					"name"
				],
				"title": "ProjectSnapshotResponseModel"
			},
			"ProjectSnapshotUploadResponseModel": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"success",
							"in_queue",
							"pending",
							"failed"
						],
						"title": "Status"
					},
					"acx_volume_normalization": {
						"type": "boolean",
						"title": "Acx Volume Normalization"
					}
				},
				"type": "object",
				"required": [
					"status"
				],
				"title": "ProjectSnapshotUploadResponseModel"
			},
			"ProjectSnapshotsResponseModel": {
				"properties": {
					"snapshots": {
						"items": {
							"$ref": "#/components/schemas/ProjectSnapshotResponseModel"
						},
						"type": "array",
						"title": "Snapshots"
					}
				},
				"type": "object",
				"required": [
					"snapshots"
				],
				"title": "ProjectSnapshotsResponseModel"
			},
			"PromptAgent": {
				"properties": {
					"prompt": {
						"type": "string",
						"title": "Prompt",
						"default": ""
					},
					"llm": {
						"allOf": [
							{
								"$ref": "#/components/schemas/LLM"
							}
						],
						"default": "gemini-1.5-flash"
					},
					"temperature": {
						"type": "number",
						"title": "Temperature",
						"default": 0
					},
					"max_tokens": {
						"type": "integer",
						"title": "Max Tokens",
						"default": -1
					},
					"tools": {
						"items": {
							"oneOf": [
								{
									"$ref": "#/components/schemas/WebhookToolConfig"
								},
								{
									"$ref": "#/components/schemas/ClientToolConfig"
								}
							],
							"discriminator": {
								"propertyName": "type",
								"mapping": {
									"webhook": "#/components/schemas/WebhookToolConfig",
									"client": "#/components/schemas/ClientToolConfig"
								}
							}
						},
						"type": "array",
						"title": "Tools"
					},
					"knowledge_base": {
						"items": {
							"$ref": "#/components/schemas/KnowledgeBaseLocator"
						},
						"type": "array",
						"title": "Knowledge Base"
					},
					"custom_llm": {
						"$ref": "#/components/schemas/CustomLLM"
					}
				},
				"type": "object",
				"title": "PromptAgent"
			},
			"PromptAgentOverride": {
				"properties": {
					"prompt": {
						"type": "string",
						"title": "Prompt",
						"default": ""
					}
				},
				"type": "object",
				"title": "PromptAgentOverride"
			},
			"PromptAgentOverrideConfig": {
				"properties": {
					"prompt": {
						"type": "boolean",
						"title": "Prompt",
						"default": false
					}
				},
				"type": "object",
				"title": "PromptAgentOverrideConfig"
			},
			"PromptEvaluationCriteria": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"type": {
						"type": "string",
						"enum": [
							"prompt"
						],
						"const": "prompt",
						"title": "Type",
						"default": "prompt"
					},
					"conversation_goal_prompt": {
						"type": "string",
						"maxLength": 800,
						"title": "Conversation Goal Prompt"
					}
				},
				"type": "object",
				"required": [
					"id",
					"conversation_goal_prompt"
				],
				"title": "PromptEvaluationCriteria",
				"description": "An evaluation using the transcript and a prompt for a yes/no achieved answer"
			},
			"PronunciationDictionaryAliasRuleRequestModel": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"alias"
						],
						"title": "Type"
					},
					"string_to_replace": {
						"type": "string",
						"title": "String To Replace"
					},
					"alias": {
						"type": "string",
						"title": "Alias"
					}
				},
				"type": "object",
				"required": [
					"type",
					"string_to_replace",
					"alias"
				],
				"title": "PronunciationDictionaryAliasRuleRequestModel"
			},
			"PronunciationDictionaryPhonemeRuleRequestModel": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"phoneme"
						],
						"title": "Type"
					},
					"string_to_replace": {
						"type": "string",
						"title": "String To Replace"
					},
					"phoneme": {
						"type": "string",
						"title": "Phoneme"
					},
					"alphabet": {
						"type": "string",
						"title": "Alphabet"
					}
				},
				"type": "object",
				"required": [
					"type",
					"string_to_replace",
					"phoneme",
					"alphabet"
				],
				"title": "PronunciationDictionaryPhonemeRuleRequestModel"
			},
			"PronunciationDictionaryVersionLocatorDBModel": {
				"properties": {
					"pronunciation_dictionary_id": {
						"type": "string",
						"title": "Pronunciation Dictionary Id"
					},
					"version_id": {
						"type": "string",
						"title": "Version Id"
					}
				},
				"type": "object",
				"required": [
					"pronunciation_dictionary_id",
					"version_id"
				],
				"title": "PronunciationDictionaryVersionLocatorDBModel"
			},
			"PronunciationDictionaryVersionResponseModel": {
				"properties": {
					"version_id": {
						"type": "string",
						"title": "Version Id"
					},
					"pronunciation_dictionary_id": {
						"type": "string",
						"title": "Pronunciation Dictionary Id"
					},
					"dictionary_name": {
						"type": "string",
						"title": "Dictionary Name"
					},
					"version_name": {
						"type": "string",
						"title": "Version Name"
					},
					"created_by": {
						"type": "string",
						"title": "Created By"
					},
					"creation_time_unix": {
						"type": "integer",
						"title": "Creation Time Unix"
					}
				},
				"type": "object",
				"required": [
					"version_id",
					"pronunciation_dictionary_id",
					"dictionary_name",
					"version_name",
					"created_by",
					"creation_time_unix"
				],
				"title": "PronunciationDictionaryVersionResponseModel"
			},
			"PydanticPronunciationDictionaryVersionLocator": {
				"properties": {
					"pronunciation_dictionary_id": {
						"type": "string",
						"title": "Pronunciation Dictionary Id"
					},
					"version_id": {
						"type": "string",
						"title": "Version Id"
					}
				},
				"type": "object",
				"required": [
					"pronunciation_dictionary_id",
					"version_id"
				],
				"title": "PydanticPronunciationDictionaryVersionLocator",
				"description": "A locator for other documents to be able to reference a specific dictionary and it's version.\nThis is a pydantic version of PronunciationDictionaryVersionLocatorDBModel.\nRequired to ensure compat with the rest of the agent data models."
			},
			"QueryParamsJsonSchema": {
				"properties": {
					"properties": {
						"additionalProperties": {
							"$ref": "#/components/schemas/LiteralJsonSchemaProperty"
						},
						"type": "object",
						"title": "Properties"
					},
					"required": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Required"
					}
				},
				"additionalProperties": false,
				"type": "object",
				"required": [
					"properties"
				],
				"title": "QueryParamsJsonSchema"
			},
			"ReaderResourceResponseModel": {
				"properties": {
					"resource_type": {
						"type": "string",
						"enum": [
							"read",
							"collection"
						],
						"title": "Resource Type"
					},
					"resource_id": {
						"type": "string",
						"title": "Resource Id"
					}
				},
				"type": "object",
				"required": [
					"resource_type",
					"resource_id"
				],
				"title": "ReaderResourceResponseModel"
			},
			"RecordingResponseModel": {
				"properties": {
					"recording_id": {
						"type": "string",
						"title": "Recording Id"
					},
					"mime_type": {
						"type": "string",
						"title": "Mime Type"
					},
					"size_bytes": {
						"type": "integer",
						"title": "Size Bytes"
					},
					"upload_date_unix": {
						"type": "integer",
						"title": "Upload Date Unix"
					},
					"transcription": {
						"type": "string",
						"title": "Transcription"
					}
				},
				"type": "object",
				"required": [
					"recording_id",
					"mime_type",
					"size_bytes",
					"upload_date_unix",
					"transcription"
				],
				"title": "RecordingResponseModel"
			},
			"RemovePronunciationDictionaryRulesResponseModel": {
				"properties": {
					"id": {
						"type": "string",
						"title": "Id"
					},
					"version_id": {
						"type": "string",
						"title": "Version Id"
					}
				},
				"type": "object",
				"required": [
					"id",
					"version_id"
				],
				"title": "RemovePronunciationDictionaryRulesResponseModel"
			},
			"Safety": {
				"properties": {
					"ivc": {
						"$ref": "#/components/schemas/SafetyEvaluation"
					},
					"non_ivc": {
						"$ref": "#/components/schemas/SafetyEvaluation"
					}
				},
				"type": "object",
				"title": "Safety",
				"description": "Safety object that has the information of safety evaluations based on used voice."
			},
			"SafetyEvaluation": {
				"properties": {
					"is_unsafe": {
						"type": "boolean",
						"title": "Is Unsafe",
						"default": false
					},
					"llm_reason": {
						"type": "string",
						"title": "Llm Reason",
						"default": ""
					},
					"safety_prompt_version": {
						"type": "integer",
						"title": "Safety Prompt Version",
						"default": 0
					},
					"matched_rule_id": {
						"items": {
							"$ref": "#/components/schemas/SafetyRule"
						},
						"type": "array"
					}
				},
				"type": "object",
				"title": "SafetyEvaluation",
				"description": "Safety evaluation of the agent. Prompt and first message is taken into account.\nThe unsafe reason is provided from the evaluation"
			},
			"SafetyRule": {
				"type": "string",
				"enum": [
					"sexual_minors",
					"forget_moderation",
					"extremism",
					"scam_fraud",
					"political",
					"self_harm",
					"illegal_distribution_medical",
					"sexual_adults",
					"unknown"
				],
				"title": "SafetyRule",
				"description": "An enumeration."
			},
			"SampleResponseModel": {
				"properties": {
					"sample_id": {
						"type": "string",
						"title": "Sample Id"
					},
					"file_name": {
						"type": "string",
						"title": "File Name"
					},
					"mime_type": {
						"type": "string",
						"title": "Mime Type"
					},
					"size_bytes": {
						"type": "integer",
						"title": "Size Bytes"
					},
					"hash": {
						"type": "string",
						"title": "Hash"
					}
				},
				"type": "object",
				"required": [
					"sample_id",
					"file_name",
					"mime_type",
					"size_bytes",
					"hash"
				],
				"title": "SampleResponseModel"
			},
			"SpeechHistoryItemResponseModel": {
				"properties": {
					"history_item_id": {
						"type": "string",
						"title": "History Item Id"
					},
					"request_id": {
						"type": "string",
						"title": "Request Id"
					},
					"voice_id": {
						"type": "string",
						"title": "Voice Id"
					},
					"model_id": {
						"type": "string",
						"title": "Model Id"
					},
					"voice_name": {
						"type": "string",
						"title": "Voice Name"
					},
					"voice_category": {
						"type": "string",
						"enum": [
							"premade",
							"cloned",
							"generated",
							"professional"
						],
						"title": "Voice Category"
					},
					"text": {
						"type": "string",
						"title": "Text"
					},
					"date_unix": {
						"type": "integer",
						"title": "Date Unix"
					},
					"character_count_change_from": {
						"type": "integer",
						"title": "Character Count Change From"
					},
					"character_count_change_to": {
						"type": "integer",
						"title": "Character Count Change To"
					},
					"content_type": {
						"type": "string",
						"title": "Content Type"
					},
					"state": {
						"type": "string",
						"enum": [
							"created",
							"deleted",
							"processing"
						],
						"title": "State"
					},
					"settings": {
						"type": "object",
						"title": "Settings"
					},
					"feedback": {
						"$ref": "#/components/schemas/FeedbackResponseModel"
					},
					"share_link_id": {
						"type": "string",
						"title": "Share Link Id"
					},
					"source": {
						"type": "string",
						"enum": [
							"TTS",
							"STS"
						],
						"title": "Source"
					},
					"alignments": {
						"$ref": "#/components/schemas/HistoryAlignmentsResponseModel"
					}
				},
				"type": "object",
				"required": [
					"history_item_id",
					"request_id",
					"voice_id",
					"model_id",
					"voice_name",
					"voice_category",
					"text",
					"date_unix",
					"character_count_change_from",
					"character_count_change_to",
					"content_type",
					"state",
					"settings",
					"feedback",
					"share_link_id",
					"source"
				],
				"title": "SpeechHistoryItemResponseModel"
			},
			"SubscriptionExtrasResponseModel": {
				"properties": {
					"concurrency": {
						"type": "integer",
						"title": "Concurrency"
					},
					"force_logging_disabled": {
						"type": "boolean",
						"title": "Force Logging Disabled"
					},
					"moderation": {
						"$ref": "#/components/schemas/ModerationStatusResponseModel"
					}
				},
				"type": "object",
				"required": [
					"concurrency",
					"force_logging_disabled",
					"moderation"
				],
				"title": "SubscriptionExtrasResponseModel"
			},
			"SubscriptionResponseModel": {
				"properties": {
					"tier": {
						"type": "string",
						"title": "Tier"
					},
					"character_count": {
						"type": "integer",
						"title": "Character Count"
					},
					"character_limit": {
						"type": "integer",
						"title": "Character Limit"
					},
					"can_extend_character_limit": {
						"type": "boolean",
						"title": "Can Extend Character Limit"
					},
					"allowed_to_extend_character_limit": {
						"type": "boolean",
						"title": "Allowed To Extend Character Limit"
					},
					"next_character_count_reset_unix": {
						"type": "integer",
						"title": "Next Character Count Reset Unix"
					},
					"voice_limit": {
						"type": "integer",
						"title": "Voice Limit"
					},
					"max_voice_add_edits": {
						"type": "integer",
						"title": "Max Voice Add Edits"
					},
					"voice_add_edit_counter": {
						"type": "integer",
						"title": "Voice Add Edit Counter"
					},
					"professional_voice_limit": {
						"type": "integer",
						"title": "Professional Voice Limit"
					},
					"can_extend_voice_limit": {
						"type": "boolean",
						"title": "Can Extend Voice Limit"
					},
					"can_use_instant_voice_cloning": {
						"type": "boolean",
						"title": "Can Use Instant Voice Cloning"
					},
					"can_use_professional_voice_cloning": {
						"type": "boolean",
						"title": "Can Use Professional Voice Cloning"
					},
					"currency": {
						"type": "string",
						"enum": [
							"usd",
							"eur"
						],
						"title": "Currency"
					},
					"status": {
						"type": "string",
						"enum": [
							"trialing",
							"active",
							"incomplete",
							"incomplete_expired",
							"past_due",
							"canceled",
							"unpaid",
							"free"
						],
						"title": "Status"
					},
					"billing_period": {
						"type": "string",
						"enum": [
							"monthly_period",
							"annual_period"
						],
						"title": "Billing Period"
					},
					"character_refresh_period": {
						"type": "string",
						"enum": [
							"monthly_period",
							"annual_period"
						],
						"title": "Character Refresh Period"
					}
				},
				"type": "object",
				"required": [
					"tier",
					"character_count",
					"character_limit",
					"can_extend_character_limit",
					"allowed_to_extend_character_limit",
					"next_character_count_reset_unix",
					"voice_limit",
					"max_voice_add_edits",
					"voice_add_edit_counter",
					"professional_voice_limit",
					"can_extend_voice_limit",
					"can_use_instant_voice_cloning",
					"can_use_professional_voice_cloning",
					"currency",
					"status",
					"billing_period",
					"character_refresh_period"
				],
				"title": "SubscriptionResponseModel"
			},
			"TTSConversationalConfig": {
				"properties": {
					"model_id": {
						"allOf": [
							{
								"$ref": "#/components/schemas/TTSConversationalModel"
							}
						],
						"default": "eleven_turbo_v2"
					},
					"voice_id": {
						"type": "string",
						"title": "Voice Id",
						"default": "cjVigY5qzO86Huf0OWal"
					},
					"agent_output_audio_format": {
						"allOf": [
							{
								"$ref": "#/components/schemas/TTSOutputFormat"
							}
						],
						"default": "pcm_16000"
					},
					"optimize_streaming_latency": {
						"allOf": [
							{
								"$ref": "#/components/schemas/TTSOptimizeStreamingLatency"
							}
						],
						"default": 3
					},
					"stability": {
						"type": "number",
						"title": "Stability",
						"default": 0.5
					},
					"similarity_boost": {
						"type": "number",
						"title": "Similarity Boost",
						"default": 0.8
					},
					"pronunciation_dictionary_locators": {
						"items": {
							"$ref": "#/components/schemas/PydanticPronunciationDictionaryVersionLocator"
						},
						"type": "array",
						"title": "Pronunciation Dictionary Locators"
					}
				},
				"type": "object",
				"title": "TTSConversationalConfig"
			},
			"TTSConversationalConfigOverride": {
				"properties": {
					"voice_id": {
						"type": "string",
						"title": "Voice Id"
					}
				},
				"type": "object",
				"title": "TTSConversationalConfigOverride"
			},
			"TTSConversationalConfigOverrideConfig": {
				"properties": {
					"voice_id": {
						"type": "boolean",
						"title": "Voice Id",
						"default": false
					}
				},
				"type": "object",
				"title": "TTSConversationalConfigOverrideConfig"
			},
			"TTSConversationalModel": {
				"type": "string",
				"enum": [
					"eleven_turbo_v2",
					"eleven_turbo_v2_5"
				],
				"title": "TTSConversationalModel",
				"description": "An enumeration."
			},
			"TTSOptimizeStreamingLatency": {
				"type": "integer",
				"enum": [
					0,
					1,
					2,
					3,
					4
				],
				"title": "TTSOptimizeStreamingLatency",
				"description": "An enumeration."
			},
			"TTSOutputFormat": {
				"type": "string",
				"enum": [
					"pcm_16000",
					"pcm_22050",
					"pcm_24000",
					"pcm_44100",
					"ulaw_8000"
				],
				"title": "TTSOutputFormat",
				"description": "An enumeration."
			},
			"TelephonyProvider": {
				"type": "string",
				"enum": [
					"twilio"
				],
				"title": "TelephonyProvider",
				"description": "An enumeration."
			},
			"TurnConfig": {
				"properties": {
					"turn_timeout": {
						"type": "number",
						"title": "Turn Timeout",
						"default": 7
					},
					"mode": {
						"allOf": [
							{
								"$ref": "#/components/schemas/TurnMode"
							}
						],
						"default": "turn"
					}
				},
				"type": "object",
				"title": "TurnConfig"
			},
			"TurnMode": {
				"type": "string",
				"enum": [
					"silence",
					"turn"
				],
				"title": "TurnMode",
				"description": "An enumeration."
			},
			"URLAvatar": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"url"
						],
						"title": "Type",
						"default": "url"
					},
					"custom_url": {
						"type": "string",
						"title": "Custom Url",
						"default": ""
					}
				},
				"type": "object",
				"title": "URLAvatar"
			},
			"UpdatePhoneNumberRequest": {
				"properties": {
					"agent_id": {
						"type": "string",
						"title": "Agent Id"
					}
				},
				"type": "object",
				"title": "UpdatePhoneNumberRequest"
			},
			"UsageCharactersResponseModel": {
				"properties": {
					"time": {
						"items": {
							"type": "integer"
						},
						"type": "array",
						"title": "Time"
					},
					"usage": {
						"additionalProperties": {
							"items": {
								"type": "integer"
							},
							"type": "array"
						},
						"type": "object",
						"title": "Usage"
					}
				},
				"type": "object",
				"required": [
					"time",
					"usage"
				],
				"title": "UsageCharactersResponseModel"
			},
			"UserFeedback": {
				"properties": {
					"score": {
						"$ref": "#/components/schemas/UserFeedbackScore"
					},
					"time_in_call_secs": {
						"type": "integer",
						"title": "Time In Call Secs"
					}
				},
				"type": "object",
				"required": [
					"score",
					"time_in_call_secs"
				],
				"title": "UserFeedback"
			},
			"UserFeedbackScore": {
				"type": "string",
				"enum": [
					"like",
					"dislike"
				],
				"title": "UserFeedbackScore",
				"description": "An enumeration."
			},
			"UserResponseModel": {
				"properties": {
					"subscription": {
						"$ref": "#/components/schemas/SubscriptionResponseModel"
					},
					"subscription_extras": {
						"$ref": "#/components/schemas/SubscriptionExtrasResponseModel"
					},
					"is_new_user": {
						"type": "boolean",
						"title": "Is New User"
					},
					"xi_api_key": {
						"type": "string",
						"title": "Xi Api Key"
					},
					"can_use_delayed_payment_methods": {
						"type": "boolean",
						"title": "Can Use Delayed Payment Methods"
					},
					"is_onboarding_completed": {
						"type": "boolean",
						"title": "Is Onboarding Completed"
					},
					"is_onboarding_checklist_completed": {
						"type": "boolean",
						"title": "Is Onboarding Checklist Completed"
					},
					"first_name": {
						"type": "string",
						"title": "First Name"
					},
					"is_api_key_hashed": {
						"type": "boolean",
						"title": "Is Api Key Hashed",
						"default": false
					},
					"xi_api_key_preview": {
						"type": "string",
						"title": "Xi Api Key Preview"
					},
					"referral_link_code": {
						"type": "string",
						"title": "Referral Link Code"
					},
					"partnerstack_partner_default_link": {
						"type": "string",
						"title": "Partnerstack Partner Default Link"
					}
				},
				"type": "object",
				"required": [
					"subscription",
					"subscription_extras",
					"is_new_user",
					"xi_api_key",
					"can_use_delayed_payment_methods",
					"is_onboarding_completed",
					"is_onboarding_checklist_completed"
				],
				"title": "UserResponseModel"
			},
			"ValidationError": {
				"properties": {
					"loc": {
						"items": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"type": "integer"
								}
							]
						},
						"type": "array",
						"title": "Location"
					},
					"msg": {
						"type": "string",
						"title": "Message"
					},
					"type": {
						"type": "string",
						"title": "Error Type"
					}
				},
				"type": "object",
				"required": [
					"loc",
					"msg",
					"type"
				],
				"title": "ValidationError"
			},
			"VerificationAttemptResponseModel": {
				"properties": {
					"text": {
						"type": "string",
						"title": "Text"
					},
					"date_unix": {
						"type": "integer",
						"title": "Date Unix"
					},
					"accepted": {
						"type": "boolean",
						"title": "Accepted"
					},
					"similarity": {
						"type": "number",
						"title": "Similarity"
					},
					"levenshtein_distance": {
						"type": "number",
						"title": "Levenshtein Distance"
					},
					"recording": {
						"$ref": "#/components/schemas/RecordingResponseModel"
					}
				},
				"type": "object",
				"required": [
					"text",
					"date_unix",
					"accepted",
					"similarity",
					"levenshtein_distance"
				],
				"title": "VerificationAttemptResponseModel"
			},
			"VoiceGenerationParameterOptionResponseModel": {
				"properties": {
					"name": {
						"type": "string",
						"title": "Name"
					},
					"code": {
						"type": "string",
						"title": "Code"
					}
				},
				"type": "object",
				"required": [
					"name",
					"code"
				],
				"title": "VoiceGenerationParameterOptionResponseModel"
			},
			"VoiceGenerationParameterResponseModel": {
				"properties": {
					"genders": {
						"items": {
							"$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
						},
						"type": "array",
						"title": "Genders"
					},
					"accents": {
						"items": {
							"$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
						},
						"type": "array",
						"title": "Accents"
					},
					"ages": {
						"items": {
							"$ref": "#/components/schemas/VoiceGenerationParameterOptionResponseModel"
						},
						"type": "array",
						"title": "Ages"
					},
					"minimum_characters": {
						"type": "integer",
						"title": "Minimum Characters"
					},
					"maximum_characters": {
						"type": "integer",
						"title": "Maximum Characters"
					},
					"minimum_accent_strength": {
						"type": "number",
						"title": "Minimum Accent Strength"
					},
					"maximum_accent_strength": {
						"type": "number",
						"title": "Maximum Accent Strength"
					}
				},
				"type": "object",
				"required": [
					"genders",
					"accents",
					"ages",
					"minimum_characters",
					"maximum_characters",
					"minimum_accent_strength",
					"maximum_accent_strength"
				],
				"title": "VoiceGenerationParameterResponseModel"
			},
			"VoicePreviewResponseModel": {
				"properties": {
					"audio_base_64": {
						"type": "string",
						"title": "Audio Base 64"
					},
					"generated_voice_id": {
						"type": "string",
						"title": "Generated Voice Id"
					},
					"media_type": {
						"type": "string",
						"title": "Media Type"
					},
					"duration_secs": {
						"type": "number",
						"title": "Duration Secs"
					}
				},
				"type": "object",
				"required": [
					"audio_base_64",
					"generated_voice_id",
					"media_type",
					"duration_secs"
				],
				"title": "VoicePreviewResponseModel"
			},
			"VoicePreviewsRequestModel": {
				"properties": {
					"voice_description": {
						"type": "string",
						"maxLength": 1000,
						"minLength": 20,
						"title": "Voice Description",
						"description": "Description to use for the created voice.",
						"examples": [
							"A sassy little squeaky mouse"
						]
					},
					"text": {
						"type": "string",
						"maxLength": 1000,
						"minLength": 100,
						"title": "Text",
						"description": "Text to generate, text length has to be between 100 and 1000.",
						"examples": [
							"Every act of kindness, no matter how small, carries value and can make a difference, as no gesture of goodwill is ever wasted."
						]
					},
					"auto_generate_text": {
						"type": "boolean",
						"title": "Auto Generate Text",
						"description": "Whether to automatically generate a text suitable for the voice description.",
						"default": false
					}
				},
				"type": "object",
				"required": [
					"voice_description",
					"text"
				],
				"title": "VoicePreviewsRequestModel"
			},
			"VoicePreviewsResponseModel": {
				"properties": {
					"previews": {
						"items": {
							"$ref": "#/components/schemas/VoicePreviewResponseModel"
						},
						"type": "array",
						"title": "Previews"
					},
					"text": {
						"type": "string",
						"title": "Text"
					}
				},
				"type": "object",
				"required": [
					"previews",
					"text"
				],
				"title": "VoicePreviewsResponseModel"
			},
			"VoiceResponseModel": {
				"properties": {
					"voice_id": {
						"type": "string",
						"title": "Voice Id"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"samples": {
						"items": {
							"$ref": "#/components/schemas/SampleResponseModel"
						},
						"type": "array",
						"title": "Samples"
					},
					"category": {
						"type": "string",
						"enum": [
							"generated",
							"cloned",
							"premade",
							"professional",
							"famous",
							"high_quality"
						],
						"title": "Category"
					},
					"fine_tuning": {
						"$ref": "#/components/schemas/FineTuningResponseModel"
					},
					"labels": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Labels"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"preview_url": {
						"type": "string",
						"title": "Preview Url"
					},
					"available_for_tiers": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Available For Tiers"
					},
					"settings": {
						"$ref": "#/components/schemas/VoiceSettingsResponseModel"
					},
					"sharing": {
						"$ref": "#/components/schemas/VoiceSharingResponseModel"
					},
					"high_quality_base_model_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "High Quality Base Model Ids"
					},
					"safety_control": {
						"type": "string",
						"enum": [
							"NONE",
							"BAN",
							"CAPTCHA",
							"CAPTCHA_AND_MODERATION",
							"ENTERPRISE_BAN",
							"ENTERPRISE_CAPTCHA"
						],
						"title": "Safety Control"
					},
					"voice_verification": {
						"$ref": "#/components/schemas/VoiceVerificationResponseModel"
					},
					"permission_on_resource": {
						"type": "string",
						"title": "Permission On Resource"
					},
					"is_owner": {
						"type": "boolean",
						"title": "Is Owner"
					},
					"is_legacy": {
						"type": "boolean",
						"title": "Is Legacy",
						"default": false
					},
					"is_mixed": {
						"type": "boolean",
						"title": "Is Mixed",
						"default": false
					},
					"created_at_unix": {
						"type": "integer",
						"title": "Created At Unix"
					}
				},
				"type": "object",
				"required": [
					"voice_id",
					"name",
					"samples",
					"category",
					"fine_tuning",
					"labels",
					"description",
					"preview_url",
					"available_for_tiers",
					"settings",
					"sharing",
					"high_quality_base_model_ids"
				],
				"title": "VoiceResponseModel"
			},
			"VoiceSettingsResponseModel": {
				"properties": {
					"stability": {
						"type": "number",
						"title": "Stability"
					},
					"similarity_boost": {
						"type": "number",
						"title": "Similarity Boost"
					},
					"style": {
						"type": "number",
						"title": "Style",
						"default": 0
					},
					"use_speaker_boost": {
						"type": "boolean",
						"title": "Use Speaker Boost",
						"default": true
					}
				},
				"type": "object",
				"required": [
					"stability",
					"similarity_boost"
				],
				"title": "VoiceSettingsResponseModel"
			},
			"VoiceSharingModerationCheckResponseModel": {
				"properties": {
					"date_checked_unix": {
						"type": "integer",
						"title": "Date Checked Unix"
					},
					"name_value": {
						"type": "string",
						"title": "Name Value"
					},
					"name_check": {
						"type": "boolean",
						"title": "Name Check"
					},
					"description_value": {
						"type": "string",
						"title": "Description Value"
					},
					"description_check": {
						"type": "boolean",
						"title": "Description Check"
					},
					"sample_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Sample Ids"
					},
					"sample_checks": {
						"items": {
							"type": "number"
						},
						"type": "array",
						"title": "Sample Checks"
					},
					"captcha_ids": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Captcha Ids"
					},
					"captcha_checks": {
						"items": {
							"type": "number"
						},
						"type": "array",
						"title": "Captcha Checks"
					}
				},
				"type": "object",
				"title": "VoiceSharingModerationCheckResponseModel"
			},
			"VoiceSharingResponseModel": {
				"properties": {
					"status": {
						"type": "string",
						"enum": [
							"enabled",
							"disabled",
							"copied",
							"copied_disabled"
						],
						"title": "Status"
					},
					"history_item_sample_id": {
						"type": "string",
						"title": "History Item Sample Id"
					},
					"date_unix": {
						"type": "integer",
						"title": "Date Unix"
					},
					"whitelisted_emails": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Whitelisted Emails"
					},
					"public_owner_id": {
						"type": "string",
						"title": "Public Owner Id"
					},
					"original_voice_id": {
						"type": "string",
						"title": "Original Voice Id"
					},
					"financial_rewards_enabled": {
						"type": "boolean",
						"title": "Financial Rewards Enabled"
					},
					"free_users_allowed": {
						"type": "boolean",
						"title": "Free Users Allowed"
					},
					"live_moderation_enabled": {
						"type": "boolean",
						"title": "Live Moderation Enabled"
					},
					"rate": {
						"type": "number",
						"title": "Rate"
					},
					"notice_period": {
						"type": "integer",
						"title": "Notice Period"
					},
					"disable_at_unix": {
						"type": "integer",
						"title": "Disable At Unix"
					},
					"voice_mixing_allowed": {
						"type": "boolean",
						"title": "Voice Mixing Allowed"
					},
					"featured": {
						"type": "boolean",
						"title": "Featured"
					},
					"category": {
						"type": "string",
						"enum": [
							"generated",
							"professional",
							"high_quality",
							"famous"
						],
						"title": "Category"
					},
					"reader_app_enabled": {
						"type": "boolean",
						"title": "Reader App Enabled"
					},
					"image_url": {
						"type": "string",
						"title": "Image Url"
					},
					"ban_reason": {
						"type": "string",
						"title": "Ban Reason"
					},
					"liked_by_count": {
						"type": "integer",
						"title": "Liked By Count"
					},
					"cloned_by_count": {
						"type": "integer",
						"title": "Cloned By Count"
					},
					"name": {
						"type": "string",
						"title": "Name"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"labels": {
						"additionalProperties": {
							"type": "string"
						},
						"type": "object",
						"title": "Labels"
					},
					"review_status": {
						"type": "string",
						"enum": [
							"not_requested",
							"pending",
							"declined",
							"allowed",
							"allowed_with_changes"
						],
						"title": "Review Status"
					},
					"review_message": {
						"type": "string",
						"title": "Review Message"
					},
					"enabled_in_library": {
						"type": "boolean",
						"title": "Enabled In Library"
					},
					"instagram_username": {
						"type": "string",
						"title": "Instagram Username"
					},
					"twitter_username": {
						"type": "string",
						"title": "Twitter Username"
					},
					"youtube_username": {
						"type": "string",
						"title": "Youtube Username"
					},
					"tiktok_username": {
						"type": "string",
						"title": "Tiktok Username"
					},
					"moderation_check": {
						"$ref": "#/components/schemas/VoiceSharingModerationCheckResponseModel"
					},
					"reader_restricted_on": {
						"items": {
							"$ref": "#/components/schemas/ReaderResourceResponseModel"
						},
						"type": "array",
						"title": "Reader Restricted On"
					}
				},
				"type": "object",
				"required": [
					"status",
					"history_item_sample_id",
					"date_unix",
					"whitelisted_emails",
					"public_owner_id",
					"original_voice_id",
					"financial_rewards_enabled",
					"free_users_allowed",
					"live_moderation_enabled",
					"rate",
					"notice_period",
					"disable_at_unix",
					"voice_mixing_allowed",
					"featured",
					"category",
					"reader_app_enabled",
					"image_url",
					"ban_reason",
					"liked_by_count",
					"cloned_by_count",
					"name",
					"description",
					"labels",
					"review_status",
					"review_message",
					"enabled_in_library"
				],
				"title": "VoiceSharingResponseModel"
			},
			"VoiceVerificationResponseModel": {
				"properties": {
					"requires_verification": {
						"type": "boolean",
						"title": "Requires Verification"
					},
					"is_verified": {
						"type": "boolean",
						"title": "Is Verified"
					},
					"verification_failures": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"title": "Verification Failures"
					},
					"verification_attempts_count": {
						"type": "integer",
						"title": "Verification Attempts Count"
					},
					"language": {
						"type": "string",
						"title": "Language"
					},
					"verification_attempts": {
						"items": {
							"$ref": "#/components/schemas/VerificationAttemptResponseModel"
						},
						"type": "array",
						"title": "Verification Attempts"
					}
				},
				"type": "object",
				"required": [
					"requires_verification",
					"is_verified",
					"verification_failures",
					"verification_attempts_count"
				],
				"title": "VoiceVerificationResponseModel"
			},
			"WebhookToolApiSchemaConfig": {
				"properties": {
					"url": {
						"type": "string",
						"title": "Url"
					},
					"method": {
						"type": "string",
						"enum": [
							"GET",
							"POST",
							"PATCH",
							"DELETE"
						],
						"title": "Method",
						"default": "GET"
					},
					"path_params_schema": {
						"additionalProperties": {
							"$ref": "#/components/schemas/LiteralJsonSchemaProperty"
						},
						"type": "object",
						"title": "Path Params Schema"
					},
					"query_params_schema": {
						"$ref": "#/components/schemas/QueryParamsJsonSchema"
					},
					"request_body_schema": {
						"$ref": "#/components/schemas/ObjectJsonSchemaProperty"
					},
					"request_headers": {
						"additionalProperties": {
							"anyOf": [
								{
									"type": "string"
								},
								{
									"$ref": "#/components/schemas/ConvAISecretLocator"
								}
							]
						},
						"type": "object",
						"title": "Request Headers"
					}
				},
				"type": "object",
				"required": [
					"url"
				],
				"title": "WebhookToolApiSchemaConfig",
				"description": "Configuration for a webhook that will be called by an LLM tool."
			},
			"WebhookToolConfig": {
				"properties": {
					"type": {
						"type": "string",
						"enum": [
							"webhook"
						],
						"title": "Type"
					},
					"name": {
						"type": "string",
						"pattern": "^[a-zA-Z0-9_-]{1,64}$",
						"title": "Name"
					},
					"description": {
						"type": "string",
						"title": "Description"
					},
					"api_schema": {
						"$ref": "#/components/schemas/WebhookToolApiSchemaConfig"
					}
				},
				"type": "object",
				"required": [
					"type",
					"name",
					"description",
					"api_schema"
				],
				"title": "WebhookToolConfig",
				"description": "A webhook tool is a tool that calls an external webhook from our server"
			},
			"WidgetFeedbackMode": {
				"type": "string",
				"enum": [
					"none",
					"during",
					"end"
				],
				"title": "WidgetFeedbackMode",
				"description": "An enumeration."
			}
		}
	},
	"tags": [
		{
			"name": "text-to-speech",
			"description": "Convert text into lifelike speech using a voice of your choice."
		},
		{
			"name": "speech-to-speech",
			"description": "Create speech by combining the style and content of an audio file you upload with a voice of your choice."
		},
		{
			"name": "models",
			"description": "Access the different models of the platform."
		},
		{
			"name": "voices",
			"description": "Access to voices created either by you or us."
		},
		{
			"name": "samples",
			"description": "Access to your samples. A sample is any audio file you attached to a voice. A voice can have one or more samples."
		},
		{
			"name": "speech-history",
			"description": "Accesses your speech history. Your speech history is a list of all your created audio including its metadata using our text-to-speech and speech-to-speech models."
		},
		{
			"name": "projects",
			"description": "Access, create and convert Projects programmatically, only specifically whitelisted accounts can access the Projects API. If you need access please contact our sales team."
		}
	]
}