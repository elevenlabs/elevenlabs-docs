security:
  - api-key: []
servers:
  - url: https://api.elevenlabs.io/
    x-fern-server-name: Production
    description: Production (default). Routed to the closest region.
  - url: https://api.us.elevenlabs.io/
    x-fern-server-name: Production US
    description: Production routed only to the US region.
x-fern-groups:
  samples:
    summary: Samples
  voices:
    summary: Voices
  studio:
    summary: Studio
  models:
    summary: Models
paths:
  /docs:
    get:
      x-fern-ignore: true
  /v1/dubbing/{dubbing_id}/transcript/{language_code}:
    get:
      summary: Get dubbed transcript
      x-fern-sdk-method-name: get_transcript_for_dub
  /profile/{handle}:
    get:
      summary: Get a profile page
      x-fern-sdk-group-name: voices
      x-fern-sdk-method-name: get_a_profile_page
  /v1/dubbing/resource/{dubbing_id}:
    get:
      summary: Get dubbing resource
  /v1/dubbing/resource/{dubbing_id}/language:
    post:
      summary: Add language to dubbing resource
  /v1/dubbing/resource/{dubbing_id}/speaker/{speaker_id}/segment:
    post:
      summary: Add speaker segment to dubbing resource
  /v1/dubbing/resource/{dubbing_id}/segment/{segment_id}/{language}:
    patch:
      summary: Modify a segment
  /v1/dubbing/resource/{dubbing_id}/segment/{segment_id}:
    delete:
      summary: Delete a segment
  /v1/dubbing/resource/{dubbing_id}/transcribe:
    post:
      summary: Transcribe segments
  /v1/dubbing/resource/{dubbing_id}/translate:
    post:
      summary: Translate segments
  /v1/dubbing/resource/{dubbing_id}/dub:
    post:
      summary: Dub segments
  /v1/similar-voices:
    post:
      summary: List similar voices
  /v1/dubbing:
    post:
      summary: Dub a video or audio file
  /v1/dubbing/{dubbing_id}:
    get:
      summary: Get dubbing
    delete:
      summary: Delete dubbing
  /v1/dubbing/{dubbing_id}/audio/{language_code}:
    get:
      summary: Get dubbed audio
  /v1/text-to-speech/{voice_id}:
    post:
      summary: Create speech
      x-fern-examples:
        - path-parameters:
            voice_id: JBFqnCBsd6RMkjVDRZzb
          query-parameters:
            output_format: mp3_44100_128
          request:
            text: 'The first move is what sets everything in motion.'
            model_id: eleven_multilingual_v2
      parameters:
        - required: true
          description: ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
  /v1/text-to-speech/{voice_id}/with-timestamps:
    post:
      summary: Create speech with timing
  /v1/text-to-speech/{voice_id}/stream:
    post:
      summary: Stream speech
      x-fern-request-name: StreamTextToSpeechRequest
      x-fern-examples:
        - path-parameters:
            voice_id: JBFqnCBsd6RMkjVDRZzb
          query-parameters:
            output_format: mp3_44100_128
          request:
            text: 'The first move is what sets everything in motion.'
            model_id: eleven_multilingual_v2
      parameters:
        - required: true
          description: ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
  /v1/text-to-speech/{voice_id}/stream/with-timestamps:
    post:
      summary: Stream speech with timing
      x-fern-request-name: StreamTextToSpeechWithTimstampsRequest
      x-fern-examples:
        - path-parameters:
            voice_id: JBFqnCBsd6RMkjVDRZzb
          query-parameters:
            output_format: mp3_44100_128
          request:
            text: 'The first move is what sets everything in motion.'
            model_id: eleven_multilingual_v2
      parameters:
        - required: true
          description: ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
  /v1/speech-to-speech/{voice_id}:
    post:
      summary: Voice changer
      x-fern-examples:
        - path-parameters:
            voice_id: JBFqnCBsd6RMkjVDRZzb
          query-parameters:
            output_format: mp3_44100_128
          request:
            model_id: eleven_multilingual_sts_v2
      parameters:
        - required: true
          description: ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
  /v1/speech-to-speech/{voice_id}/stream:
    post:
      summary: Voice changer stream
      x-fern-examples:
        - path-parameters:
            voice_id: JBFqnCBsd6RMkjVDRZzb
          query-parameters:
            output_format: mp3_44100_128
          request:
            model_id: eleven_multilingual_sts_v2
      parameters:
        - required: true
          description: ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.

  # ==============
  # SPEECH TO TEXT
  # ==============
  /v1/speech-to-text:
    post:
      summary: Create transcript
  # /v1/speech-to-text/stream:
  #   post:
  #     summary: Stream transcript
  #     description: Transcribe an audio or video file with a streamed response. <br> <Note> This endpoint is currently only available to alpha users and is subject to change. </Note>
  # ================
  # Sound Effects
  # ================
  /v1/sound-generation:
    post:
      summary: Create sound effect
      x-fern-examples:
        - request:
            text: 'Spacious braam suitable for high-impact movie trailer moments'
  /v1/history:
    get:
      summary: Get generated items
      x-fern-examples:
        - query-parameters:
          response:
            body:
              history:
                [
                  {
                    history_item_id: 'ja9xsmfGhxYcymxGcOGB',
                    request_id: 'BF0BZg4IwLGBlaVjv9Im',
                    voice_id: '21m00Tcm4TlvDq8ikWAM',
                    model_id: 'eleven_multilingual_v2',
                    voice_name: 'Rachel',
                    voice_category: 'premade',
                    text: 'This is an example sentence with streaming',
                    date_unix: 1714650306,
                    character_count_change_from: 17189,
                    character_count_change_to: 17231,
                    content_type: 'audio/mpeg',
                    state: 'created',
                    settings:
                      { similarity_boost: 0.5, stability: 0.71, style: 0, use_speaker_boost: true },
                    feedback: null,
                    share_link_id: null,
                    source: 'TTS',
                  },
                ]
              last_history_item_id: 'ja9xsmfGhxYcymxGcOGB'
              has_more: true
      parameters:
        - {} # page_size
        - {} # start_after_history_item_id
        - description: ID of the voice to be filtered for. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
        - description: Search term used for filtering history items. If provided, source becomes required.
        - description: Source of the history items. If search parameter is provided, source becomes required. Otherwise this parameter is optional.
  /v1/history/{history_item_id}:
    get:
      summary: Get history item
      x-fern-examples:
        - path-parameters:
            history_item_id: 'HISTORY_ITEM_ID'
          response:
            body:
              history_item_id: 'ja9xsmfGhxYcymxGcOGB'
              request_id: 'BF0BZg4IwLGBlaVjv9Im'
              voice_id: '21m00Tcm4TlvDq8ikWAM'
              model_id: 'eleven_multilingual_v2'
              voice_name: 'Rachel'
              voice_category: 'premade'
              text: 'This is an example sentence with streaming'
              date_unix: 1714650306
              character_count_change_from: 17189
              character_count_change_to: 17231
              content_type: 'audio/mpeg'
              state: 'created'
              settings:
                {
                  'stability': 0.71,
                  'similarity_boost': 0.5,
                  'style': 0,
                  'use_speaker_boost': true,
                }
              feedback: null
              share_link_id: null
              source: 'TTS'
      parameters:
        - description: ID of the history item to be used. You can use the [Get generated items](/docs/api-reference/history/get-all) endpoint to retrieve a list of history items.
    delete:
      summary: Delete history item

      x-fern-examples:
        - path-parameters:
            history_item_id: 'HISTORY_ITEM_ID'
          response:
            body:
              status: 'ok'
      parameters:
        - description: ID of the history item to be used. You can use the [Get generated items](/docs/api-reference/history/get-all) endpoint to retrieve a list of history items.
  /v1/history/{history_item_id}/audio:
    get:
      summary: Get audio from history item
      x-fern-examples:
        - path-parameters:
            history_item_id: 'HISTORY_ITEM_ID'
      parameters:
        - description: ID of the history item to be used. You can use the [Get generated items](/docs/api-reference/history/get-all) endpoint to retrieve a list of history items.
  /v1/history/download:
    post:
      summary: Download history items
      x-fern-examples:
        - request:
            history_item_ids: ['HISTORY_ITEM_ID']
      properties:
        - description: IDs of the history items to be downloaded. You can use the [Get generated items](/docs/api-reference/history/get-all) endpoint to retrieve a list of history items.
  /v1/voices/{voice_id}/samples/{sample_id}:
    delete:
      summary: Delete voice sample
      parameters:
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
        - description: ID of the sample to be used. You can use the [Get voices](/docs/api-reference/voices/get) endpoint list all the available samples for a voice.
  /v1/voices/{voice_id}/samples/{sample_id}/audio:
    get:
      summary: Get audio from sample
      parameters:
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
        - description: ID of the sample to be used. You can use the [Get voices](/docs/api-reference/voices/get) endpoint list all the available samples for a voice.
  /v1/voices/settings/default:
    get:
      summary: Get default voice settings
  /v1/voices/{voice_id}/settings:
    get:
      summary: Get voice settings
  /v1/voices/{voice_id}:
    get:
      summary: Get voice
      parameters:
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
    delete:
      summary: Delete voice
      parameters:
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
  /v1/voices/{voice_id}/settings/edit:
    post:
      summary: Edit voice settings
      parameters:
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
  /v1/voices/add:
    post:
      description: Create a voice clone and add it to your Voices
      summary: Create voice clone
  /v1/voices/{voice_id}/edit:
    post:
      summary: Edit voice
      parameters:
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
  /v1/voices/add/{public_user_id}/{voice_id}:
    post:
      description: Add a shared voice to your collection of Voices
      summary: Add shared voice
      parameters:
        - {} # public_user_id
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
  /v1/voices:
    get:
      summary: List voices
  /v1/voice-generation/generate-voice/parameters:
    get:
      x-fern-ignore: true
  /v1/voice-generation/generate-voice:
    post:
      x-fern-ignore: true
  /v1/voice-generation/create-voice:
    post:
      x-fern-ignore: true
  /v1/studio/projects/{project_id}:
    get:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
    delete:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
  /v1/studio/projects/{project_id}/content:
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
  /v1/studio/projects/{project_id}/convert:
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
  /v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/stream:
    post:
      responses:
        '200':
          content:
            audio/mpeg:
              schema:
                type: string
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
  /v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/archive:
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
  /v1/studio/projects/{project_id}/chapters/{chapter_id}:
    get:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
        - description: The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
        - description: The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
    delete:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
        - description: The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
  /v1/studio/projects/{project_id}/chapters/{chapter_id}/convert:
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
        - description: The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
  /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots:
    get:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
        - description: The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
  /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}/stream:
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
        - description: The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
        - description: The ID of the chapter snapshot to be used. You can use the [List project chapter snapshots](/docs/api-reference/studio/get-snapshots) endpoint to list all the available snapshots.
  /v1/studio/projects/{project_id}/pronunciation-dictionaries:
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
  /v1/models:
    get:
      summary: List models
  /v1/user/subscription:
    get:
      summary: Get user subscription
  /v1/user:
    get:
      summary: Get user
  /v1/shared-voices:
    get:
      summary: Get shared voices
  /v1/pronunciation-dictionaries/:
    get:
      summary: List pronunciation dictionaries
  /v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/:
    get:
      summary: Get pronunciation dictionary
  /v1/pronunciation-dictionaries/{dictionary_id}/{version_id}/download:
    get:
      summary: Get pronunciation dictionary by version
  /v1/pronunciation-dictionaries/add-from-file:
    post:
      summary: Create a pronunciation dictionary
  /v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/add-rules:
    post:
      summary: Add pronunciation dictionary rules
  /v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/remove-rules:
    post:
      summary: Remove pronunciation dictionary rules
  /v1/convai/conversation/get_signed_url:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/secrets:
    get:
      x-fern-audiences:
        - convai
    post:
      x-fern-audiences:
        - convai
  /v1/convai/agents/create:
    post:
      summary: Create agent
      x-fern-audiences:
        - convai
  /v1/convai/agents/{agent_id}:
    get:
      summary: Get agent
      x-fern-audiences:
        - convai
    delete:
      summary: Delete agent
      x-fern-audiences:
        - convai
    patch:
      summary: Update agent
      x-fern-audiences:
        - convai
  /v1/convai/agents/{agent_id}/widget:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/agents/{agent_id}/link:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/agents/{agent_id}/avatar:
    post:
      x-fern-audiences:
        - convai
  /v1/convai/agents/{agent_id}/knowledge-base/{documentation_id}:
    get:
      x-fern-ignore: true
  /v1/convai/agents/{agent_id}/add-secret:
    post:
      x-fern-ignore: true
      x-fern-audiences:
        - convai
  /v1/convai/agents/{agent_id}/add-to-knowledge-base:
    post:
      x-fern-ignore: true
  /v1/convai/agents:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/conversations:
    get:
      summary: List conversations
      x-fern-audiences:
        - convai
  /v1/convai/conversations/{conversation_id}:
    get:
      x-fern-audiences:
        - convai
      x-fern-examples:
        - path-parameters:
            conversation_id: '123'
          response:
            body:
              agent_id: '123'
              conversation_id: '123'
              status: 'processing'
              transcript: [{ role: 'user', message: 'Hello, how are you?', time_in_call_secs: 10 }]
              metadata: { 'start_time_unix_secs': 1714423232, 'call_duration_secs': 10 }
    delete:
      x-fern-audiences:
        - convai
  /v1/convai/conversations/{conversation_id}/audio:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/conversations/{conversation_id}/feedback:
    post:
      x-fern-audiences:
        - convai
  /v1/convai/phone-numbers/create:
    post:
      x-fern-audiences:
        - convai
  /v1/convai/phone-numbers/{phone_number_id}:
    get:
      x-fern-audiences:
        - convai
    delete:
      x-fern-audiences:
        - convai
    patch:
      x-fern-audiences:
        - convai
  /v1/convai/phone-numbers/:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/knowledge-base:
    get:
      x-fern-audiences:
        - convai
    post:
      description: Upload a file or webpage URL to create a knowledge base document. <br> <Note> After creating the document, update the agent's knowledge base by calling [Update agent](/docs/conversational-ai/api-reference/agents/update-agent). </Note>
      x-fern-audiences:
        - convai
  /v1/convai/knowledge-base/{documentation_id}:
    delete:
      x-fern-audiences:
        - convai
    get:
      x-fern-audiences:
        - convai
  /v1/convai/knowledge-base/{documentation_id}/dependent-agents:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/add-to-knowledge-base:
    post:
      x-fern-ignore: true
  /v1/convai/settings:
    get:
      x-fern-audiences:
        - convai
    patch:
      x-fern-audiences:
        - convai
  /v1/audio-native:
    post:
      summary: Create audio native project
  /v1/audio-native/{project_id}/content:
    post:
      summary: Update audio native project
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/projects/get-projects) endpoint to list all the available projects.
  /v1/audio-native/get-embed-code:
    get:
      x-fern-ignore: true
  /v1/audio-native/{project_id}/get-embed-code:
    get:
      x-fern-ignore: true
  /v1/workspace/invites:
    delete:
      summary: Delete invite
  /v1/workspace/invites/add:
    post:
      summary: Invite user
  /v1/workspace/members:
    post:
      summary: Update member
  /v1/workspace/groups/search:
    get:
      summary: Search user group
  /v1/workspace/groups/{group_id}/members:
    post:
      summary: Add member to user group
  /v1/workspace/groups/{group_id}/members/remove:
    post:
      summary: Remove member from user group
  /v1/audio-isolation:
    post:
      description: Removes background noise from audio.
      summary: Audio isolation

  /v1/audio-isolation/stream:
    post:
      description: Removes background noise from audio.
      summary: Audio isolation stream
  # ==========================
  # Voice Design (Text to voice)
  # ==========================
  /v1/text-to-voice/create-previews:
    post:
      summary: Voice design
      description: Create a voice from a text prompt.
      parameters:
        - description: The output format of the generated audio.
  /v1/text-to-voice/create-voice-from-preview:
    post:
      summary: Save a voice preview
      description: Add a generated voice to the voice library.
  /v1/usage/character-stats:
    get:
      summary: Get character usage metrics
components:
  schemas:
    Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch:
      type: object
      title: Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch
      properties:
        conversation_config:
          $ref: '#/components/schemas/ConversationalConfig'
        platform_settings:
          $ref: '#/components/schemas/AgentPlatformSettings'
    FineTuningResponseModel:
      x-fern-type-name: FineTuningResponse
      properties:
        finetuning_state:
          x-fern-type-name: FinetuningState
      required: []
    HistoryItemResponseModel:
      x-fern-type-name: HistoryItem
      required:
        [
          history_item_id,
          voice_id,
          text,
          date_unix,
          character_count_change_from,
          character_count_change_to,
          content_type,
        ]
      properties:
        state:
          x-fern-type-name: HistoryItemState
        voice_category:
          x-fern-type-name: VoiceCategory
    SpeechHistoryItemResponseModel:
      x-fern-type-name: SpeechHistoryItemResponse
      properties:
        state:
          - x-fern-type-name: SpeechHistoryState
      required:
        - history_item_id
  securitySchemes:
    api-key:
      type: apiKey
      name: xi-api-key
      optional: true
      env: ELEVENLABS_API_KEY
      in: header
      description: Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
