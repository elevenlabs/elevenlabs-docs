security:
  - api-key: []
servers:
  - url: https://api.elevenlabs.io/
    x-fern-server-name: Production
    description: Production (default). Routed to the closest region.
  - url: https://api.us.elevenlabs.io/
    x-fern-server-name: Production US
    description: Production routed only to the US region.
x-fern-groups:
  samples:
    summary: Samples
  voices:
    summary: Voices
  studio:
    summary: Studio
  models:
    summary: Models
paths:
  /docs:
    get:
      x-fern-ignore: true
  /v1/dubbing/{dubbing_id}/transcript/{language_code}:
    get:
      summary: Get dubbed transcript
      x-fern-sdk-method-name: get_transcript_for_dub
  /profile/{handle}:
    get:
      x-fern-sdk-group-name: voices
      x-fern-sdk-method-name: get_a_profile_page
  /v1/similar-voices:
    post:
      summary: List similar voices
  /v1/dubbing:
    post:
      summary: Dub a video or audio file
  /v1/dubbing/{dubbing_id}:
    get:
      summary: Get dubbing
    delete:
      summary: Delete dubbing
  /v1/dubbing/{dubbing_id}/audio/{language_code}:
    get:
      summary: Get dubbed audio
  /v1/text-to-speech/{voice_id}:
    post:
      summary: Create speech
      description: Convert text to speech using our library of over 3,000 voices across 32 languages.
      x-fern-examples:
        - path-parameters:
            voice_id: JBFqnCBsd6RMkjVDRZzb
          query-parameters:
            output_format: mp3_44100_128
          request:
            text: 'The first move is what sets everything in motion.'
            model_id: eleven_multilingual_v2
      parameters:
        - required: true
          description: ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
        - {} # enable logging
        - {} # optimize streaming latency
        - schema:
            $ref: '#/components/schemas/OutputFormat'
          required: false
          description: The output format of the generated audio.
  /v1/text-to-speech/{voice_id}/with-timestamps:
    post:
      summary: Create speech with timing
      description: Generate speech from text with precise character-level timing information for audio-text synchronization.
      x-fern-request-name: TextToSpeechWithTimestampsRequest
      x-fern-examples:
        - path-parameters:
            voice_id: JBFqnCBsd6RMkjVDRZzb
          query-parameters:
            output_format: mp3_44100_128
          request:
            text: 'The first move is what sets everything in motion.'
            model_id: eleven_multilingual_v2
      parameters:
        - required: true
          description: ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
        - {} # enable logging
        - {} # optimize streaming latency
        - schema:
            $ref: '#/components/schemas/OutputFormat'
          required: false
          description: The output format of the generated audio.
  /v1/text-to-speech/{voice_id}/stream:
    post:
      summary: Stream speech
      description: Convert text to speech in real-time using our library of over 3,000 voices across 32 languages.
      x-fern-request-name: StreamTextToSpeechRequest
      x-fern-examples:
        - path-parameters:
            voice_id: JBFqnCBsd6RMkjVDRZzb
          query-parameters:
            output_format: mp3_44100_128
          request:
            text: 'The first move is what sets everything in motion.'
            model_id: eleven_multilingual_v2
      parameters:
        - required: true
          description: ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
        - {} # enable logging
        - {} # optimize streaming latency
        - schema:
            $ref: '#/components/schemas/OutputFormat'
          required: false
          description: The output format of the generated audio.
      responses:
        '200':
          content:
            audio/mpeg:
              schema:
                type: string
  /v1/text-to-speech/{voice_id}/stream/with-timestamps:
    post:
      summary: Stream speech with timing
      description: Stream speech from text with precise character-level timing information for audio-text synchronization.
      x-fern-request-name: StreamTextToSpeechWithTimstampsRequest
      x-fern-examples:
        - path-parameters:
            voice_id: JBFqnCBsd6RMkjVDRZzb
          query-parameters:
            output_format: mp3_44100_128
          request:
            text: 'The first move is what sets everything in motion.'
            model_id: eleven_multilingual_v2
      parameters:
        - required: true
          description: ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
        - {} # enable logging
        - {} # optimize streaming latency
        - schema:
            $ref: '#/components/schemas/OutputFormat'
          required: false
          description: The output format of the generated audio.
      responses:
        '200':
          description: 'Stream of JSON objects containing audio chunks and character timing information'
          content:
            application/json:
              schema:
                type: object
                properties:
                  audio_base64:
                    type: string
                    description: 'Base64 encoded audio chunk'
                  alignment:
                    type: object
                    properties:
                      characters:
                        type: array
                        items:
                          type: string
                        description: 'Array of individual characters from the input text'
                      character_start_times_seconds:
                        type: array
                        items:
                          type: number
                          format: float
                        description: 'Array of start times (in seconds) for each character'
                      character_end_times_seconds:
                        type: array
                        items:
                          type: number
                          format: float
                        description: 'Array of end times (in seconds) for each character'
                  normalized_alignment:
                    type: object
                    properties:
                      characters:
                        type: array
                        items:
                          type: string
                        description: 'Array of individual characters from the normalized text'
                      character_start_times_seconds:
                        type: array
                        items:
                          type: number
                          format: float
                        description: 'Array of start times (in seconds) for each normalized character'
                      character_end_times_seconds:
                        type: array
                        items:
                          type: number
                          format: float
                        description: 'Array of end times (in seconds) for each normalized character'
  /v1/speech-to-speech/{voice_id}:
    post:
      summary: Voice changer
      description: Transform audio from one voice to another. Maintain full control over emotion, timing and delivery.
      x-fern-examples:
        - path-parameters:
            voice_id: JBFqnCBsd6RMkjVDRZzb
          query-parameters:
            output_format: mp3_44100_128
          request:
            model_id: eleven_multilingual_sts_v2
      parameters:
        - required: true
          description: ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
        - {} # enable logging
        - {} # optimize streaming latency
        - schema:
            $ref: '#/components/schemas/OutputFormat'
          required: false
          description: The output format of the generated audio.
  /v1/speech-to-speech/{voice_id}/stream:
    post:
      summary: Voice changer stream
      description: Stream audio from one voice to another. Maintain full control over emotion, timing and delivery.
      x-fern-examples:
        - path-parameters:
            voice_id: JBFqnCBsd6RMkjVDRZzb
          query-parameters:
            output_format: mp3_44100_128
          request:
            model_id: eleven_multilingual_sts_v2
      parameters:
        - required: true
          description: ID of the voice to be used. Use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
        - {} # enable logging
        - {} # optimize streaming latency
        - schema:
            $ref: '#/components/schemas/OutputFormat'
          required: false
          description: The output format of the generated audio.
      responses:
        '200':
          content:
            audio/mpeg:
              schema:
                type: string
  /v1/sound-generation:
    post:
      summary: Create sound effect
      description: Turn text into sound effects for your videos, voice-overs or video games using the most advanced sound effects model in the world.
      x-fern-examples:
        - request:
            text: 'Spacious braam suitable for high-impact movie trailer moments'
  /v1/history:
    get:
      summary: Get generated items
      x-fern-examples:
        - query-parameters:
          response:
            body:
              history:
                [
                  {
                    history_item_id: 'ja9xsmfGhxYcymxGcOGB',
                    request_id: 'BF0BZg4IwLGBlaVjv9Im',
                    voice_id: '21m00Tcm4TlvDq8ikWAM',
                    model_id: 'eleven_multilingual_v2',
                    voice_name: 'Rachel',
                    voice_category: 'premade',
                    text: 'This is an example sentence with streaming',
                    date_unix: 1714650306,
                    character_count_change_from: 17189,
                    character_count_change_to: 17231,
                    content_type: 'audio/mpeg',
                    state: 'created',
                    settings:
                      { similarity_boost: 0.5, stability: 0.71, style: 0, use_speaker_boost: true },
                    feedback: null,
                    share_link_id: null,
                    source: 'TTS',
                  },
                ]
              last_history_item_id: 'ja9xsmfGhxYcymxGcOGB'
              has_more: true
      parameters:
        - {} # page_size
        - {} # start_after_history_item_id
        - description: ID of the voice to be filtered for. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
        - description: Search term used for filtering history items. If provided, source becomes required.
        - description: Source of the history items. If search parameter is provided, source becomes required. Otherwise this parameter is optional.
  /v1/history/{history_item_id}:
    get:
      summary: Get history item
      x-fern-examples:
        - path-parameters:
            history_item_id: 'HISTORY_ITEM_ID'
          response:
            body:
              history_item_id: 'ja9xsmfGhxYcymxGcOGB'
              request_id: 'BF0BZg4IwLGBlaVjv9Im'
              voice_id: '21m00Tcm4TlvDq8ikWAM'
              model_id: 'eleven_multilingual_v2'
              voice_name: 'Rachel'
              voice_category: 'premade'
              text: 'This is an example sentence with streaming'
              date_unix: 1714650306
              character_count_change_from: 17189
              character_count_change_to: 17231
              content_type: 'audio/mpeg'
              state: 'created'
              settings:
                {
                  'stability': 0.71,
                  'similarity_boost': 0.5,
                  'style': 0,
                  'use_speaker_boost': true,
                }
              feedback: null
              share_link_id: null
              source: 'TTS'
      parameters:
        - description: ID of the history item to be used. You can use the [Get generated items](/docs/api-reference/history/get-all) endpoint to retrieve a list of history items.
    delete:
      summary: Delete history item

      x-fern-examples:
        - path-parameters:
            history_item_id: 'HISTORY_ITEM_ID'
          response:
            body:
              status: 'ok'
      parameters:
        - description: ID of the history item to be used. You can use the [Get generated items](/docs/api-reference/history/get-all) endpoint to retrieve a list of history items.
  /v1/history/{history_item_id}/audio:
    get:
      summary: Get audio from history item
      x-fern-examples:
        - path-parameters:
            history_item_id: 'HISTORY_ITEM_ID'
      parameters:
        - description: ID of the history item to be used. You can use the [Get generated items](/docs/api-reference/history/get-all) endpoint to retrieve a list of history items.
  /v1/history/download:
    post:
      summary: Download history items
      x-fern-examples:
        - request:
            history_item_ids: ['HISTORY_ITEM_ID']
      properties:
        - description: IDs of the history items to be downloaded. You can use the [Get generated items](/docs/api-reference/history/get-all) endpoint to retrieve a list of history items.
  /v1/voices/{voice_id}/samples/{sample_id}:
    delete:
      summary: Delete voice sample

      x-fern-examples:
        - path-parameters:
            voice_id: 'VOICE_ID'
            sample_id: 'SAMPLE_ID'
          response:
            body:
              status: 'ok'
      parameters:
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
        - description: ID of the sample to be used. You can use the [Get voices](/docs/api-reference/voices/get) endpoint list all the available samples for a voice.
  /v1/voices/{voice_id}/samples/{sample_id}/audio:
    get:
      summary: Get audio from sample

      x-fern-examples:
        - path-parameters:
            voice_id: 'VOICE_ID'
            sample_id: 'SAMPLE_ID'
      parameters:
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
        - description: ID of the sample to be used. You can use the [Get voices](/docs/api-reference/voices/get) endpoint list all the available samples for a voice.
  /v1/voices/settings/default:
    get:
      summary: Get default voice settings

      x-fern-examples:
        - response:
            body:
              stability: 0.5
              similarity_boost: 0.75
              style: 0
              use_speaker_boost: true
  /v1/voices/{voice_id}/settings:
    get:
      summary: Get voice settings
      x-fern-examples:
        - path-parameters:
            voice_id: JBFqnCBsd6RMkjVDRZzb
          response:
            body:
              stability: 0.5
              similarity_boost: 0.75
              style: 0
              use_speaker_boost: true
  /v1/voices/{voice_id}:
    get:
      summary: Get voice
      x-fern-examples:
        - path-parameters:
            voice_id: JBFqnCBsd6RMkjVDRZzb
          response:
            body:
              voice_id: '29vD33N1CtxCmqQRPOHJ'
              name: 'Drew'
              samples: null
              category: 'premade'
              fine_tuning:
                {
                  is_allowed_to_fine_tune: true,
                  finetuning_state: 'fine_tuned',
                  verification_failures: [],
                  verification_attempts_count: 0,
                  manual_verification_requested: false,
                  language: 'en',
                  message: null,
                  dataset_duration_seconds: null,
                  verification_attempts: null,
                  slice_ids: null,
                  manual_verification: null,
                }
              labels:
                {
                  accent: 'american',
                  description: 'well-rounded',
                  age: 'middle aged',
                  gender: 'male',
                  use_case: 'news',
                }
              description: null
              preview_url: 'https://storage.googleapis.com/eleven-public-prod/premade/voices/29vD33N1CtxCmqQRPOHJ/e8b52a3f-9732-440f-b78a-16d5e26407a1.mp3'
              available_for_tiers: []
              settings:
                { stability: 0.5, similarity_boost: 0.75, style: 0, use_speaker_boost: true }
              sharing: null
              high_quality_base_model_ids: ['eleven_turbo_v2']
              safety_control: null
              voice_verification:
                {
                  requires_verification: false,
                  is_verified: false,
                  verification_failures: [],
                  verification_attempts_count: 0,
                  language: null,
                  verification_attempts: null,
                }
              is_owner: null
              is_legacy: false
              is_mixed: false
              created_at_unix: 1234567890
              permission_on_resource: null
      parameters:
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
    delete:
      summary: Delete voice

      x-fern-examples:
        - path-parameters:
            voice_id: 'VOICE_ID'
          response:
            body:
              status: 'ok'
      parameters:
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
  /v1/voices/{voice_id}/settings/edit:
    post:
      summary: Edit voice settings
      x-fern-examples:
        - path-parameters:
            voice_id: 'VOICE_ID'
          request:
            stability: 0.1
            similarity_boost: 0.3
            style: 0.2
          response:
            body:
              status: 'ok'
      parameters:
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
  /v1/voices/add:
    post:
      description: Create a voice clone and add it to your Voices
      summary: Create voice clone
      x-fern-examples:
        - request:
            name: 'Alex'
          response:
            body:
              voice_id: 'VOICE_ID'
              requires_verification: true
  /v1/voices/{voice_id}/edit:
    post:
      summary: Edit voice
      x-fern-examples:
        - path-parameters:
            voice_id: 'VOICE_ID'
          request:
            name: 'George'
          response:
            body:
              status: 'ok'
      parameters:
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
  /v1/voices/add/{public_user_id}/{voice_id}:
    post:
      description: Add a shared voice to your collection of Voices
      summary: Add shared voice
      x-fern-examples:
        - path-parameters:
            public_user_id: '63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f'
            voice_id: 'sB1b5zUrxQVAFl2PhZFp'
          request:
            new_name: 'Alita'
          response:
            body:
              voice_id: 'b38kUX8pkfYO2kHyqfFy'
      parameters:
        - {} # public_user_id
        - description: ID of the voice to be used. You can use the [Get voices](/docs/api-reference/voices/get-all) endpoint list all the available voices.
  /v1/voices:
    get:
      summary: List voices
      x-fern-examples:
        - response:
            body:
              voices:
                [
                  {
                    voice_id: '21m00Tcm4TlvDq8ikWAM',
                    name: 'Rachel',
                    category: 'premade',
                    fine_tuning:
                      {
                        is_allowed_to_fine_tune: false,
                        finetuning_state: 'not_started',
                        verification_failures: [],
                        verification_attempts_count: 0,
                        manual_verification_requested: false,
                        language: null,
                        message: null,
                        dataset_duration_seconds: null,
                        verification_attempts: null,
                        slice_ids: null,
                        manual_verification: null,
                      },
                    labels:
                      {
                        accent: 'american',
                        description: 'calm',
                        age: 'young',
                        gender: 'female',
                        use_case: 'narration',
                      },
                    preview_url: 'https://storage.googleapis.com/eleven-public-prod/premade/voices/21m00Tcm4TlvDq8ikWAM/df6788f9-5c96-470d-8312-aab3b3d8f50a.mp3',
                    available_for_tiers: [],
                    high_quality_base_model_ids: [],
                    voice_verification:
                      {
                        requires_verification: false,
                        is_verified: false,
                        verification_failures: [],
                        verification_attempts_count: 0,
                        language: null,
                        verification_attempts: null,
                      },
                    is_owner: null,
                    is_legacy: false,
                    is_mixed: false,
                    created_at_unix: 1234567890,
                    permission_on_resource: null,
                  },
                ]
  /v1/voice-generation/generate-voice/parameters:
    get:
      x-fern-availability: deprecated
      x-fern-examples:
        - response:
            body:
              genders: [{ name: 'Female', code: 'female' }, { name: 'Male', code: 'male' }]
              accents:
                [
                  { name: 'American', code: 'american' },
                  { name: 'British', code: 'british' },
                  { name: 'African', code: 'african' },
                  { name: 'Australian', code: 'australian' },
                  { name: 'Indian', code: 'indian' },
                ]
              ages:
                [
                  { name: 'Young', code: 'young' },
                  { name: 'Middle Aged', code: 'middle_aged' },
                  { name: 'Old', code: 'old' },
                ]
              minimum_characters: 100
              maximum_characters: 1000
              minimum_accent_strength: 0.3
              maximum_accent_strength: 2
  /v1/voice-generation/generate-voice:
    post:
      x-fern-availability: deprecated
      x-fern-examples:
        - request:
            gender: female
            accent: 'american'
            age: middle_aged
            accent_strength: 2
            text: "It sure does, Jackie… My mama always said: “In Carolina, the air's so thick you can wear it!”"
  /v1/voice-generation/create-voice:
    post:
      x-fern-availability: deprecated
      x-fern-examples:
        - request:
            voice_name: 'Alex'
            voice_description: 'Middle-aged American woman'
            generated_voice_id: 'rbVJFu6SGRD1dbWpKnWl'
          response:
            body:
              voice_id: '9wc1LZ6HlhyLzbBY7Vvj'
              name: 'Alex'
              samples: null
              category: 'generated'
              fine_tuning:
                {
                  is_allowed_to_fine_tune: false,
                  finetuning_state: 'not_started',
                  verification_failures: [],
                  verification_attempts_count: 0,
                  manual_verification_requested: false,
                  language: null,
                  message: null,
                  dataset_duration_seconds: null,
                  verification_attempts: null,
                  slice_ids: null,
                  manual_verification: null,
                }
              labels: {}
              description: null
              preview_url: null
              available_for_tiers: []
              settings:
                { stability: 0.5, similarity_boost: 0.75, style: 0, use_speaker_boost: true }
              sharing: null
              high_quality_base_model_ids: []
              safety_control: null
              voice_verification: null
              is_owner: null
              is_legacy: false
              is_mixed: false
              created_at_unix: 1234567890
              permission_on_resource: null
  /v1/studio/projects/{project_id}:
    get:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
    delete:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
  /v1/studio/projects/{project_id}/content:
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
  /v1/studio/projects/{project_id}/convert:
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
  /v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/stream:
    post:
      responses:
        '200':
          content:
            audio/mpeg:
              schema:
                type: string
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
  /v1/studio/projects/{project_id}/snapshots/{project_snapshot_id}/archive:
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
  /v1/studio/projects/{project_id}/chapters/{chapter_id}:
    get:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
        - description: The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
        - description: The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
    delete:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
        - description: The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
  /v1/studio/projects/{project_id}/chapters/{chapter_id}/convert:
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
        - description: The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
  /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots:
    get:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
        - description: The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
  /v1/studio/projects/{project_id}/chapters/{chapter_id}/snapshots/{chapter_snapshot_id}/stream:
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
        - description: The ID of the chapter to be used. You can use the [List project chapters](/docs/api-reference/studio/get-chapters) endpoint to list all the available chapters.
        - description: The ID of the chapter snapshot to be used. You can use the [List project chapter snapshots](/docs/api-reference/studio/get-snapshots) endpoint to list all the available snapshots.
  /v1/studio/projects/{project_id}/pronunciation-dictionaries:
    post:
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/studio/get-projects) endpoint to list all the available projects.
  /v1/models:
    get:
      summary: List models
      x-fern-examples:
        - response:
            body:
              [
                {
                  model_id: 'eleven_multilingual_v2',
                  name: 'Eleven Multilingual v2',
                  can_be_finetuned: true,
                  can_do_text_to_speech: true,
                  can_do_voice_conversion: false,
                  can_use_style: true,
                  can_use_speaker_boost: true,
                  serves_pro_voices: false,
                  token_cost_factor: 1,
                  description: 'Our state of the art multilingual speech synthesis model, able to generate life-like speech in 29 languages.',
                  requires_alpha_access: false,
                  max_characters_request_free_user: 2500,
                  max_characters_request_subscribed_user: 5000,
                  languages:
                    [
                      { language_id: 'en', name: 'English' },
                      { language_id: 'ja', name: 'Japanese' },
                      { language_id: 'zh', name: 'Chinese' },
                      { language_id: 'de', name: 'German' },
                      { language_id: 'hi', name: 'Hindi' },
                      { language_id: 'fr', name: 'French' },
                      { language_id: 'ko', name: 'Korean' },
                      { language_id: 'pt', name: 'Portuguese' },
                      { language_id: 'it', name: 'Italian' },
                      { language_id: 'es', name: 'Spanish' },
                      { language_id: 'id', name: 'Indonesian' },
                      { language_id: 'nl', name: 'Dutch' },
                      { language_id: 'tr', name: 'Turkish' },
                      { language_id: 'fil', name: 'Filipino' },
                      { language_id: 'pl', name: 'Polish' },
                      { language_id: 'sv', name: 'Swedish' },
                      { language_id: 'bg', name: 'Bulgarian' },
                      { language_id: 'ro', name: 'Romanian' },
                      { language_id: 'ar', name: 'Arabic' },
                      { language_id: 'cs', name: 'Czech' },
                      { language_id: 'el', name: 'Greek' },
                      { language_id: 'fi', name: 'Finnish' },
                      { language_id: 'hr', name: 'Croatian' },
                      { language_id: 'ms', name: 'Malay' },
                      { language_id: 'sk', name: 'Slovak' },
                      { language_id: 'da', name: 'Danish' },
                      { language_id: 'ta', name: 'Tamil' },
                      { language_id: 'uk', name: 'Ukrainian' },
                      { language_id: 'ru', name: 'Russian' },
                    ],
                },
              ]
  /v1/user/subscription:
    get:
      summary: Get user subscription
      x-fern-examples:
        - response:
            body:
              tier: 'trial'
              character_count: 17231
              character_limit: 10000000
              can_extend_character_limit: false
              allowed_to_extend_character_limit: false
              next_character_count_reset_unix: 1738356858
              voice_slots_used: 1
              voice_limit: 120
              max_voice_add_edits: 230
              voice_add_edit_counter: 212
              professional_voice_limit: 1
              can_extend_voice_limit: false
              can_use_instant_voice_cloning: true
              can_use_professional_voice_cloning: true
              currency: usd
              status: 'free'
              billing_period: null
  /v1/user:
    get:
      summary: Get user
      x-fern-examples:
        - response:
            body:
              user_id: '123456'
              subscription:
                {
                  tier: 'trial',
                  character_count: 17231,
                  character_limit: 10000000,
                  can_extend_character_limit: false,
                  allowed_to_extend_character_limit: false,
                  next_character_count_reset_unix: 1738356858,
                  voice_slots_used: 1,
                  voice_limit: 120,
                  max_voice_add_edits: 230,
                  voice_add_edit_counter: 212,
                  professional_voice_limit: 1,
                  can_extend_voice_limit: false,
                  can_use_instant_voice_cloning: true,
                  can_use_professional_voice_cloning: true,
                  currency: usd,
                  status: 'free',
                  billing_period: 'monthly_period',
                  character_refresh_period: 'monthly_period',
                }
              is_new_user: true
              xi_api_key: '1234' # TODO: Why is this here?
              can_use_delayed_payment_methods: false
              is_onboarding_completed: true
              is_onboarding_checklist_completed: true
              first_name: null
  /v1/shared-voices:
    get:
      summary: Get shared voices
      x-fern-examples:
        - query-parameters:
            page_size: 1
            gender: 'female'
            language: 'en'
          response:
            body:
              voices:
                [
                  {
                    public_owner_id: '63e84100a6bf7874ba37a1bab9a31828a379ec94b891b401653b655c5110880f',
                    voice_id: 'sB1b5zUrxQVAFl2PhZFp',
                    date_unix: 1714423232,
                    name: 'Alita',
                    accent: 'american',
                    gender: 'female',
                    age: 'young',
                    descriptive: 'calm',
                    use_case: 'characters_animation',
                    category: 'generated',
                    language: 'en',
                    description: 'Perfectly calm, neutral and strong voice. Great for a young female protagonist.',
                    preview_url: 'https://storage.googleapis.com/eleven-public-prod/wqkMCd9huxXHX1dy5mLJn4QEQHj1/voices/sB1b5zUrxQVAFl2PhZFp/55e71aac-5cb7-4b3d-8241-429388160509.mp3',
                    usage_character_count_1y: 12852,
                    usage_character_count_7d: 12852,
                    play_api_usage_character_count_1y: 12852,
                    cloned_by_count: 11,
                    rate: 1,
                    free_users_allowed: true,
                    live_moderation_enabled: false,
                    featured: false,
                  },
                ]
              has_more: true
              last_sort_id: null
  /v1/pronunciation-dictionaries/:
    get:
      summary: List pronunciation dictionaries
      x-fern-examples:
        - query-parameters:
            page_size: 1
          response:
            body:
              pronunciation_dictionaries:
                [
                  {
                    id: 'Fm6AvNgS53NXe6Kqxp3e',
                    latest_version_id: 'KZFyRUq3R6kaqhKI146w',
                    name: 'example',
                    created_by: 'o9WISTz8KvevBMaOA9l0p4wrfsf1',
                    creation_time_unix: 1713968202235,
                    description: null,
                  },
                ]
              next_cursor: 'Rm02QXZOZ1M1M05YZTZLcXhwM2U='
              has_more: true
  /v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/:
    get:
      summary: Get pronunciation dictionary
      x-fern-examples:
        - path-parameters:
            pronunciation_dictionary_id: 'Fm6AvNgS53NXe6Kqxp3e'
          response:
            body:
              id: 'Fm6AvNgS53NXe6Kqxp3e'
              latest_version_id: 'KZFyRUq3R6kaqhKI146w'
              name: 'example'
              created_by: 'o9WISTz8KvevBMaOA9l0p4wrfsf1'
              creation_time_unix: 1713968202235
              description: null
      parameters:
        - name: pronunciation_dictionary_id
          in: path
          required: true
          description: The id of the pronunciation dictionary
          schema:
            type: string
  /v1/pronunciation-dictionaries/{dictionary_id}/{version_id}/download:
    get:
      summary: Get pronunciation dictionary by version
      x-fern-examples:
        - path-parameters:
            dictionary_id: 'Fm6AvNgS53NXe6Kqxp3e'
            version_id: 'KZFyRUq3R6kaqhKI146w'
  /v1/pronunciation-dictionaries/add-from-file:
    post:
      summary: Create a pronunciation dictionary
  /v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/add-rules:
    post:
      summary: Add pronunciation dictionary rules
  /v1/pronunciation-dictionaries/{pronunciation_dictionary_id}/remove-rules:
    post:
      summary: Remove pronunciation dictionary rules
  /v1/convai/conversation/get_signed_url:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/secrets:
    get:
      x-fern-audiences:
        - convai
    post:
      x-fern-audiences:
        - convai
  /v1/convai/agents/create:
    post:
      summary: Create agent
      x-fern-audiences:
        - convai
  /v1/convai/agents/{agent_id}:
    get:
      summary: Get agent
      x-fern-audiences:
        - convai
    delete:
      summary: Delete agent
      x-fern-audiences:
        - convai
    patch:
      summary: Update agent
      x-fern-audiences:
        - convai
  /v1/convai/agents/{agent_id}/widget:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/agents/{agent_id}/link:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/agents/{agent_id}/avatar:
    post:
      x-fern-audiences:
        - convai
  /v1/convai/agents/{agent_id}/knowledge-base/{documentation_id}:
    get:
      x-fern-ignore: true
  /v1/convai/agents/{agent_id}/add-secret:
    post:
      x-fern-ignore: true
      x-fern-audiences:
        - convai
  /v1/convai/agents/{agent_id}/add-to-knowledge-base:
    post:
      x-fern-ignore: true
  /v1/convai/agents:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/conversations:
    get:
      summary: List conversations
      x-fern-audiences:
        - convai
  /v1/convai/conversations/{conversation_id}:
    get:
      x-fern-audiences:
        - convai
      x-fern-examples:
        - path-parameters:
            conversation_id: '123'
          response:
            body:
              agent_id: '123'
              conversation_id: '123'
              status: 'processing'
              transcript: [{ role: 'user', message: 'Hello, how are you?', time_in_call_secs: 10 }]
              metadata: { 'start_time_unix_secs': 1714423232, 'call_duration_secs': 10 }
    delete:
      x-fern-audiences:
        - convai
  /v1/convai/conversations/{conversation_id}/audio:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/conversations/{conversation_id}/feedback:
    post:
      x-fern-audiences:
        - convai
  /v1/convai/phone-numbers/create:
    post:
      x-fern-audiences:
        - convai
  /v1/convai/phone-numbers/{phone_number_id}:
    get:
      x-fern-audiences:
        - convai
    delete:
      x-fern-audiences:
        - convai
    patch:
      x-fern-audiences:
        - convai
  /v1/convai/phone-numbers/:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/knowledge-base:
    get:
      x-fern-audiences:
        - convai
    post:
      description: Upload a file or webpage URL to create a knowledge base document. <br> <Note> After creating the document, update the agent's knowledge base by calling [Update agent](/docs/conversational-ai/api-reference/agents/update-agent). </Note>
      x-fern-audiences:
        - convai
  /v1/convai/knowledge-base/{documentation_id}:
    delete:
      x-fern-audiences:
        - convai
    get:
      x-fern-audiences:
        - convai
  /v1/convai/knowledge-base/{documentation_id}/dependent-agents:
    get:
      x-fern-audiences:
        - convai
  /v1/convai/add-to-knowledge-base:
    post:
      x-fern-ignore: true
  /v1/convai/tools:
    get:
      x-fern-audiences:
        - convai
    post:
      x-fern-audiences:
        - convai
  /v1/convai/tools/{tool_id}:
    get:
      x-fern-audiences:
        - convai
    patch:
      x-fern-audiences:
        - convai
    delete:
      x-fern-audiences:
        - convai
  /v1/convai/settings:
    get:
      x-fern-audiences:
        - convai
    patch:
      x-fern-audiences:
        - convai
  /v1/audio-native:
    post:
      summary: Create audio native project
  /v1/audio-native/{project_id}/content:
    post:
      summary: Update audio native project
      parameters:
        - description: The ID of the project to be used. You can use the [List projects](/docs/api-reference/projects/get-projects) endpoint to list all the available projects.
  /v1/audio-native/get-embed-code:
    get:
      x-fern-ignore: true
  /v1/audio-native/{project_id}/get-embed-code:
    get:
      x-fern-ignore: true
  /v1/workspace/invites:
    delete:
      summary: Delete invite
  /v1/workspace/invites/add:
    post:
      summary: Invite user
  /v1/workspace/members:
    post:
      summary: Update member
  /v1/workspace/groups/search:
    get:
      summary: Search user group
  /v1/workspace/groups/{group_id}/members:
    post:
      summary: Add member to user group
  /v1/workspace/groups/{group_id}/members/remove:
    post:
      summary: Remove member from user group
  /v1/audio-isolation:
    post:
      description: Removes background noise from audio.
      summary: Audio isolation

  /v1/audio-isolation/stream:
    post:
      description: Removes background noise from audio.
      summary: Audio isolation stream
  # ==========================
  # Voice Design (Text to voice)
  # ==========================
  /v1/text-to-voice/create-previews:
    post:
      summary: Voice design
      description: Create a voice from a text prompt.
      parameters:
        - description: The output format of the generated audio.
  /v1/text-to-voice/create-voice-from-preview:
    post:
      summary: Save a voice preview
      description: Add a generated voice to the voice library.
  /v1/usage/character-stats:
    get:
      summary: Get character usage metrics
components:
  schemas:
    Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch:
      type: object
      title: Body_Patches_an_Agent_settings_v1_convai_agents__agent_id__patch
      properties:
        conversation_config:
          $ref: '#/components/schemas/ConversationalConfig'
        platform_settings:
          $ref: '#/components/schemas/AgentPlatformSettings'
    SubscriptionExtrasResponseModel:
      x-fern-ignore: true
    OutputFormat:
      type: string
      enum:
        - mp3_22050_32
        - mp3_44100_32
        - mp3_44100_64
        - mp3_44100_96
        - mp3_44100_128
        - mp3_44100_192
        - pcm_16000
        - pcm_22050
        - pcm_24000
        - pcm_44100
        - ulaw_8000
      x-fern-enum:
        mp3_22050_32:
          description: Output format, mp3 with 22.05kHz sample rate at 32kbps
        mp3_44100_32:
          description: Output format, mp3 with 44.1kHz sample rate at 32kbps
        mp3_44100_64:
          description: Output format, mp3 with 44.1kHz sample rate at 64kbps
        mp3_44100_96:
          description: Output format, mp3 with 44.1kHz sample rate at 96kbps
        mp3_44100_128:
          description: Default output format, mp3 with 44.1kHz sample rate at 128kbps
        mp3_44100_192:
          description: |
            Output format, mp3 with 44.1kHz sample rate at 192kbps.
        pcm_16000:
          description: |
            PCM format (S16LE) with 16kHz sample rate.
        pcm_22050:
          description: |
            PCM format (S16LE) with 22.05kHz sample rate.
        pcm_24000:
          description: |
            PCM format (S16LE) with 24kHz sample rate.
        pcm_44100:
          description: |
            PCM format (S16LE) with 44.1kHz sample rate. Requires you to be subscribed to Independent Publisher tier or above.
        ulaw_8000:
          description: |
            μ-law format (sometimes written mu-law, often approximated as u-law) with 8kHz sample rate. Note that this format is commonly used for Twilio audio inputs.
    ExtendedSubscriptionResponseModel:
      x-fern-type-name: Subscription
      properties:
        status:
          x-fern-type-name: SubscriptionStatus
        currency:
          ref: '#/components/schemas/Currency'
      required:
        [
          tier,
          character_count,
          character_limit,
          can_extend_character_limit,
          allowed_to_extend_character_limit,
          next_character_count_reset_unix,
          voice_limit,
          professional_voice_limit,
          can_extend_voice_limit,
          can_use_instant_voice_cloning,
          can_use_professional_voice_cloning,
        ]
    FeedbackResponseModel:
      x-fern-type-name: FeedbackItem
    FineTuningResponseModel:
      x-fern-type-name: FineTuningResponse
      properties:
        finetuning_state:
          x-fern-type-name: FinetuningState
      required: []
    HistoryItemResponseModel:
      x-fern-type-name: HistoryItem
      required:
        [
          history_item_id,
          voice_id,
          text,
          date_unix,
          character_count_change_from,
          character_count_change_to,
          content_type,
        ]
      properties:
        state:
          x-fern-type-name: HistoryItemState
        voice_category:
          x-fern-type-name: VoiceCategory
    ModelResponseModel:
      x-fern-type-name: Model
      required: [model_id]
    SubscriptionResponseModel:
      x-fern-type-name: SubscriptionResponse
      properties:
        currency:
          ref: '#/components/schemas/Currency'
        status:
          x-fern-type-name: SubscriptionStatus
    UserResponseModel:
      x-fern-type-name: User
    VoiceResponseModel:
      x-fern-type-name: Voice
      required:
        - voice_id
    VoiceSettingsResponseModel:
      x-fern-type-name: VoiceSettings
      required: []
    VoiceSharingResponseModel:
      x-fern-type-name: VoiceSharingResponse
      required: []
      properties:
        status:
          x-fern-type-name: voice_sharing_state
        review_status:
          x-fern-type-name: review_status
    Accent:
      type: string
      enum:
        - british
        - american
        - african
        - australian
        - indian
    Age:
      x-fern-type-name: Age
      type: string
      enum:
        - young
        - middle_aged
        - old
    Gender:
      x-fern-type-name: Gender
      type: string
      enum:
        - male
        - female
    Currency:
      type: string
      enum:
        - usd
        - eur
    SampleResponseModel:
      x-fern-type-name: VoiceSample
      required: []
    AddProjectResponseModel:
      x-fern-type-name: AddProjectResponseModel
    AddPronunciationDictionaryResponseModel:
      x-fern-type-name: AddPronunciationDictionaryResponseModel
    AddVoiceResponseModel:
      x-fern-type-name: AddVoiceResponseModel
    AudioNativeCreateProjectResponseModel:
      x-fern-type-name: AudioNativeCreateProjectResponseModel
    Body_Add_a_pronunciation_dictionary_v1_pronunciation_dictionaries_add_from_file_post:
      x-fern-type-name: AddPronunciationDictionaryRequest
    Body_Add_project_v1_projects_add_post:
      x-fern-type-name: AddProjectRequest
      properties:
        callback_url: null
    Body_Add_sharing_voice_v1_voices_add__public_user_id___voice_id__post:
      x-fern-type-name: AddSharingVoiceRequest
    Body_Add_voice_v1_voices_add_post:
      x-fern-type-name: AddVoiceRequest
    Body_Create_a_previously_generated_voice_v1_voice_generation_create_voice_post:
      x-fern-type-name: CreatePreviouslyGenertedVoiceRequest
    Body_Creates_AudioNative_enabled_project__v1_audio_native_post:
      x-fern-type-name: CreateAudioNativeProjectRequest
    Body_Download_history_items_v1_history_download_post:
      x-fern-type-name: DownloadHistoryRequest
      properties:
        history_item_ids:
          description: A list of history item IDs to be downloaded. You can get the history item IDs from the [Get generated items](/docs/api-reference/history/get-all) endpoint.
    Body_Dub_a_video_or_an_audio_file_v1_dubbing_post:
      x-fern-type-name: DubAVideoOrAudioFileRequest
      required: [target_lang]
    Body_Edit_voice_v1_voices__voice_id__edit_post:
      x-fern-type-name: EditVoiceRequest
    Body_Generate_a_random_voice_v1_voice_generation_generate_voice_post:
      x-fern-type-name: GenerateVoiceRequest
      properties:
        gender:
          $ref: '#/components/schemas/Gender'
        age:
          $ref: '#/components/schemas/Age'
    Body_Speech_to_Speech_Streaming_v1_speech_to_speech__voice_id__stream_post:
      x-fern-type-name: >-
        SpeechToSpeechAsStreamRequest
    Body_Speech_to_Speech_v1_speech_to_speech__voice_id__post:
      x-fern-type-name: SpeechToSpeechRequest
    Body_Text_to_speech_v1_text_to_speech__voice_id__post:
      x-fern-type-name: TextToSpeechRequest
    Body_Text_to_speech_v1_text_to_speech__voice_id__stream_post:
      x-fern-type-name: TextToSpeechAsStreamRequest
    Body_Update_Pronunciation_Dictionaries_v1_projects__project_id__update_pronunciation_dictionaries_post:
      x-fern-type-name: UpdatePronunciationDictionariesRequest
    ChapterSnapshotResponseModel:
      x-fern-type-name: ChapterSnapshotResponse
    ChapterSnapshotsResponseModel:
      x-fern-type-name: ChapterSnapshotsResponse
    ChapterStatisticsResponseModel:
      x-fern-type-name: ChapterStatisticsResponse
    DoDubbingResponseModel:
      x-fern-type-name: DoDubbingResponse
    GetChaptersResponseModel:
      x-fern-type-name: GetChaptersResponse
    GetLibraryVoicesResponseModel:
      x-fern-type-name: GetLibraryVoicesResponse
    GetProjectsResponseModel:
      x-fern-type-name: GetProjectsResponse
    GetPronunciationDictionaryMetadataResponseModel:
      x-fern-type-name: GetPronunciationDictionaryMetadataResponse
    GetSpeechHistoryResponseModel:
      x-fern-type-name: GetSpeechHistoryResponse
    GetVoicesResponseModel:
      x-fern-type-name: GetVoicesResponse
    HTTPValidationError:
      x-fern-type-name: HTTPValidationError
    InvoiceResponseModel:
      x-fern-type-name: Invoice
      required:
        - amount_due_cents
        - next_payment_attempt_unix
    LanguageResponseModel:
      x-fern-type-name: LanguageResponse
    LibraryVoiceResponseModel:
      x-fern-type-name: LibraryVoiceResponse
    ManualVerificationFileResponseModel:
      x-fern-type-name: ManualVerificationFileResponse
    ManualVerificationResponseModel:
      x-fern-type-name: ManualVerificationResponse
    ProjectExtendedResponseModel:
      properties:
        state:
          x-fern-type-name: ProjectState
    ProjectResponseModel:
      x-fern-type-name: ProjectResponse
      properties:
        state:
          x-fern-type-name: ProjectState
    ProjectSnapshotResponseModel:
      x-fern-type-name: ProjectSnapshotResponse
    ProjectSnapshotsResponseModel:
      x-fern-type-name: ProjectSnapshotsResponse
    PronunciationDictionaryVersionLocatorDBModel:
      x-fern-type-name: PronunciationDictionaryVersionLocator
    RecordingResponseModel:
      x-fern-type-name: RecordingResponse
    SpeechHistoryItemResponseModel:
      x-fern-type-name: SpeechHistoryItemResponse
      properties:
        state:
          - x-fern-type-name: SpeechHistoryState
      required:
        - history_item_id
    ValidationError:
      x-fern-type-name: ValidationError
    VerificationAttemptResponseModel:
      x-fern-type-name: VerificationAttemptResponse
    VoiceGenerationParameterOptionResponseModel:
      x-fern-type-name: VoiceGenerationParameterOptionResponse
    VoiceGenerationParameterResponseModel:
      x-fern-type-name: VoiceGenerationParameterResponse
    ChapterResponseModel:
      x-fern-type-name: ChapterResponse
      properties:
        state:
          x-fern-type-name: ChapterState
    VoiceVerificationResponseModel:
      x-fern-type-name: VoiceVerificationResponse
    Body_Get_similar_library_voices_v1_similar_voices_post:
      x-fern-type-name: GetSimilarLibraryVoicesRequest
    Body_Add_rules_to_the_pronunciation_dictionary_v1_pronunciation_dictionaries__pronunciation_dictionary_id__add_rules_post:
      x-fern-type-name: PronunciationDictionary
      properties:
        rules:
          items:
            x-fern-type-name: PronunciationDictionaryRule
  securitySchemes:
    api-key:
      type: apiKey
      name: xi-api-key
      optional: true
      env: ELEVENLABS_API_KEY
      in: header
      description: Your API key. This is required by most endpoints to access our API programatically. You can view your xi-api-key using the 'Profile' tab on the website.
