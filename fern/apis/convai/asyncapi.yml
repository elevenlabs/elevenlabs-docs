asyncapi: 2.6.0

info:
  title: ElevenLabs real-time API
  description: ElevenLabs real-time API for real-time conversational AI interactions
  license:
    name: MIT License
  version: 1.1.0

servers:
  API:
    url: wss://api.elevenlabs.io
    protocol: wss
    description: ElevenLabs WebSocket API endpoint for real-time communication

tags:
  - name: conversationalAI
    description: APIs related to conversational AI functionality

channels:
  /v1/convai/conversation:
    x-fern-audiences:
      - convai
    bindings:
      ws:
        query:
          type: object
          required:
            - agent_id
          properties:
            agent_id:
              description: The unique identifier for the voice to use in the TTS process.
              schema:
                type: string
    description: Establish a WebSocket connection for real-time conversations with an AI agent.
    publish:
      summary: Messages sent from the client to the server.
      description: Defines the message types that can be sent from client to server
      message:
        oneOf:
          - $ref: '#/components/messages/UserAudioChunk'
          - $ref: '#/components/messages/Pong'
          - $ref: '#/components/messages/ConversationInitiationClientData'
          - $ref: '#/components/messages/ClientToolResult'
    subscribe:
      summary: Messages sent from the server to the client.
      description: Defines the message types that can be received by the client from the server
      message:
        oneOf:
          - $ref: '#/components/messages/ConversationInitiationMetadata'
          - $ref: '#/components/messages/UserTranscript'
          - $ref: '#/components/messages/AgentResponse'
          - $ref: '#/components/messages/AgentResponseCorrection'
          - $ref: '#/components/messages/AudioResponse'
          - $ref: '#/components/messages/Interruption'
          - $ref: '#/components/messages/Ping'
          - $ref: '#/components/messages/ClientToolCall'
          - $ref: '#/components/messages/InternalVadScore'
          - $ref: '#/components/messages/InternalTurnProbability'
          - $ref: '#/components/messages/InternalTentativeAgentResponse'
    x-fern-examples:
      - messages:
          # 1) Client => Server: Initialize conversation with configuration
          - type: publish
            messageId: ConversationInitiationClientData
            value:
              type: 'conversation_initiation_client_data'
              conversation_config_override:
                agent:
                  prompt:
                    prompt: 'You are a helpful customer support agent named Alexis.'
                  first_message: "Hi, I'm Alexis from ElevenLabs support. How can I help you today?"
                  language: 'en'
                tts:
                  voice_id: '21m00Tcm4TlvDq8ikWAM'
              custom_llm_extra_body:
                temperature: 0.7
                max_tokens: 150
              dynamic_variables:
                user_name: 'John'
                account_type: 'premium'

          # 2) Server => Client: Conversation metadata response
          - type: subscribe
            messageId: ConversationInitiationMetadata
            value:
              type: 'conversation_initiation_metadata'
              conversation_initiation_metadata_event:
                conversation_id: 'conv_123456789'
                agent_output_audio_format: 'pcm_16000'
                user_input_audio_format: 'pcm_16000'

          # 3) Client => Server: User audio input
          - type: publish
            messageId: UserAudioChunk
            value:
              user_audio_chunk: 'base64EncodedAudioData=='

          # 4) Server => Client: Voice activity detection score
          - type: subscribe
            messageId: InternalVadScore
            value:
              type: 'internal_vad_score'
              vad_event:
                score: 0.95

          # 5) Server => Client: Turn probability
          - type: subscribe
            messageId: InternalTurnProbability
            value:
              type: 'internal_turn_probability'
              turn_event:
                probability: 0.75

          # 6) Server => Client: User speech transcript
          - type: subscribe
            messageId: UserTranscript
            value:
              type: 'user_transcript'
              user_transcription_event:
                user_transcript: 'I need help with my voice cloning project.'

          # 7) Server => Client: Tentative agent response
          - type: subscribe
            messageId: InternalTentativeAgentResponse
            value:
              type: 'internal_tentative_agent_response'
              tentative_agent_response_internal_event:
                tentative_agent_response: "I'd be happy to help with your voice cloning project..."

          # 8) Server => Client: Final agent response
          - type: subscribe
            messageId: AgentResponse
            value:
              type: 'agent_response'
              agent_response_event:
                agent_response: "I'd be happy to help with your voice cloning project. Could you tell me what specific aspects you need assistance with?"

          # 9) Server => Client: Audio response
          - type: subscribe
            messageId: AudioResponse
            value:
              type: 'audio'
              audio_event:
                audio_base_64: 'base64EncodedAudioResponse=='
                event_id: 1

          # 10) Server => Client: Ping for latency check
          - type: subscribe
            messageId: Ping
            value:
              type: 'ping'
              ping_event:
                event_id: 12345
                ping_ms: 50

          # 11) Client => Server: Pong response
          - type: publish
            messageId: Pong
            value:
              type: 'pong'
              event_id: 12345

          # 12) Server => Client: Tool call example
          - type: subscribe
            messageId: ClientToolCall
            value:
              type: 'client_tool_call'
              client_tool_call:
                tool_name: 'check_account_status'
                tool_call_id: 'tool_call_123'
                parameters:
                  user_id: 'user_123'

          # 13) Client => Server: Tool result
          - type: publish
            messageId: ClientToolResult
            value:
              type: 'client_tool_result'
              tool_call_id: 'tool_call_123'
              result: 'Account is active and in good standing'
              is_error: false

components:
  messages:
    UserAudioChunk:
      name: User Audio Chunk
      description: Send audio data chunks from the user to the server for processing.
      payload:
        $ref: '#/components/schemas/UserAudioChunk'
    Pong:
      name: Pong
      description: Response message to server ping requests for latency measurement.
      payload:
        $ref: '#/components/schemas/Pong'
    ConversationInitiationClientData:
      name: Conversation Initiation Client Data
      description: Client configuration data to override default conversation settings.
      payload:
        $ref: '#/components/schemas/ConversationInitiationClientData'
    ClientToolResult:
      name: Client Tool Result
      description: Results from client-side tool execution requested by the server.
      payload:
        $ref: '#/components/schemas/ClientToolResult'
    ConversationInitiationMetadata:
      name: Conversation Initiation Metadata
      description: Initial metadata and configuration details for a new conversation.
      payload:
        $ref: '#/components/schemas/ConversationInitiationMetadata'
    UserTranscript:
      name: User Transcript
      description: Real-time transcriptions of user speech input.
      payload:
        $ref: '#/components/schemas/UserTranscript'
    AgentResponse:
      name: Agent Response
      description: Text responses generated by the AI agent.
      payload:
        $ref: '#/components/schemas/AgentResponse'
    AudioResponse:
      name: Audio Response
      description: Synthesized audio chunks of the agent's speech response.
      payload:
        $ref: '#/components/schemas/AudioResponse'
    Interruption:
      name: Interruption
      description: Notification that the agent's current response was interrupted.
      payload:
        $ref: '#/components/schemas/Interruption'
    Ping:
      name: Ping
      description: Server-initiated ping messages for measuring connection latency.
      payload:
        $ref: '#/components/schemas/Ping'
    ClientToolCall:
      name: Client Tool Call
      description: Requests from server for client to execute specific tool functions.
      payload:
        $ref: '#/components/schemas/ClientToolCall'
    AgentResponseCorrection:
      name: Agent Response Correction
      description: Correction to a previous agent response.
      payload:
        $ref: '#/components/schemas/AgentResponseCorrection'
    InternalVadScore:
      name: Internal VAD Score
      description: Voice Activity Detection scoring information.
      payload:
        $ref: '#/components/schemas/InternalVadScore'
    InternalTurnProbability:
      name: Internal Turn Probability
      description: Probability scores for conversation turn-taking.
      payload:
        $ref: '#/components/schemas/InternalTurnProbability'
    InternalTentativeAgentResponse:
      name: Internal Tentative Agent Response
      description: Preliminary response from the agent before final confirmation.
      payload:
        $ref: '#/components/schemas/InternalTentativeAgentResponse'
  schemas:
    UserAudioChunk:
      type: object
      description: Schema for chunks of user audio data
      properties:
        user_audio_chunk:
          type: string
          description: Base64-encoded audio data chunk from user input.
    Pong:
      type: object
      description: Schema for pong response messages
      required:
        - type
      properties:
        type:
          x-fern-type: literal<"pong">
        event_id:
          type: integer
          description: The ID of the ping event being responded to.
    ConversationInitiationClientData:
      type: object
      description: Schema for client-provided conversation configuration
      required:
        - type
      properties:
        type:
          x-fern-type: literal<"conversation_initiation_client_data">
        conversation_config_override:
          type: object
          description: Override settings for conversation behavior
          properties:
            agent:
              type: object
              description: Configuration for the AI agent's behavior
              properties:
                prompt:
                  type: object
                  description: System prompt configuration
                  properties:
                    prompt:
                      type: string
                      description: Custom system prompt to guide agent behavior.
                first_message:
                  type: string
                  description: Initial message the agent should use to start the conversation.
                language:
                  type: string
                  description: Preferred language code for the conversation.
            tts:
              type: object
              description: Text-to-speech configuration
              properties:
                voice_id:
                  type: string
                  description: ID of the voice to use for text-to-speech synthesis.
        custom_llm_extra_body:
          type: object
          description: Additional LLM configuration parameters
          properties:
            temperature:
              type: number
              description: Temperature parameter controlling response randomness.
            max_tokens:
              type: integer
              description: Maximum number of tokens allowed in LLM responses.
        dynamic_variables:
          type: object
          description: Dictionary of dynamic variables to be used in the conversation. Keys are the dynamic variable names which must be strings, values can be strings, numbers, integers, or booleans.
          additionalProperties:
            anyOf:
              - type: string
              - type: number
              - type: integer
              - type: boolean
    ClientToolResult:
      type: object
      description: Schema for tool execution results from client
      required:
        - type
      properties:
        type:
          x-fern-type: literal<"client_tool_result">
        tool_call_id:
          type: string
          description: Unique identifier of the tool call being responded to.
        result:
          type: string
          description: Result data from the tool execution.
        is_error:
          type: boolean
          description: Flag indicating if the tool execution encountered an error.
    ConversationInitiationMetadata:
      type: object
      description: Schema for conversation initialization metadata
      properties:
        type:
          x-fern-type: literal<"conversation_initiation_metadata">
        conversation_initiation_metadata_event:
          type: object
          description: Initial conversation metadata
          properties:
            conversation_id:
              type: string
              description: Unique identifier for the conversation session.
            agent_output_audio_format:
              type: string
              description: Audio format specification for agent's speech output.
            user_input_audio_format:
              type: string
              description: Audio format specification for user's speech input.

    UserTranscript:
      type: object
      description: Schema for user speech transcription events
      properties:
        type:
          x-fern-type: literal<"user_transcript">
        user_transcription_event:
          type: object
          description: Transcription event data
          properties:
            user_transcript:
              type: string
              description: Transcribed text from user's speech input.
    AgentResponse:
      type: object
      description: Schema for AI agent's text responses
      required:
        - type
      properties:
        type:
          x-fern-type: literal<"agent_response">
        agent_response_event:
          type: object
          description: Agent response event data
          required:
            - agent_response
          properties:
            agent_response:
              type: string
              description: Text content of the agent's response.
    AudioResponse:
      type: object
      description: Schema for agent's synthesized speech audio
      required:
        - type
      properties:
        type:
          x-fern-type: literal<"audio">
        audio_event:
          type: object
          description: Audio event data
          properties:
            audio_base_64:
              type: string
              description: Base64-encoded audio data of agent's speech.
            event_id:
              type: integer
              description: Sequential identifier for the audio chunk.
    Interruption:
      type: object
      description: Schema for interruption events
      required:
        - type
      properties:
        type:
          x-fern-type: literal<"interruption">
        interruption_event:
          type: object
          description: Interruption event data
          properties:
            event_id:
              type: integer
              description: ID of the event that was interrupted.
    Ping:
      type: object
      description: Schema for ping messages
      required:
        - type
      properties:
        type:
          x-fern-type: literal<"ping">
        ping_event:
          type: object
          description: Ping event data
          properties:
            event_id:
              type: integer
              description: Unique identifier for the ping event.
            ping_ms:
              type: integer
              description: Measured round-trip latency in milliseconds.
    ClientToolCall:
      type: object
      description: Schema for client tool execution requests
      required:
        - type
      properties:
        type:
          x-fern-type: literal<"client_tool_call">
        client_tool_call:
          type: object
          description: Tool call request data
          properties:
            tool_name:
              type: string
              description: Identifier of the tool to be executed.
            tool_call_id:
              type: string
              description: Unique identifier for this tool call request.
            parameters:
              type: object
              additionalProperties: true
              description: Tool-specific parameters for the execution request.
    AgentResponseCorrection:
      type: object
      description: Schema for agent response corrections
      required:
        - type
      properties:
        type:
          x-fern-type: literal<"agent_response_correction">
        correction_event:
          type: object
          description: Correction event data
          required:
            - corrected_response
          properties:
            corrected_response:
              type: string
              description: The corrected text content replacing the previous response
    InternalVadScore:
      type: object
      description: Schema for Voice Activity Detection scoring data
      required:
        - type
      properties:
        type:
          x-fern-type: literal<"internal_vad_score">
        vad_event:
          type: object
          description: VAD event data
          required:
            - score
          properties:
            score:
              type: number
              description: Voice activity detection confidence score between 0 and 1
              minimum: 0
              maximum: 1
    InternalTurnProbability:
      type: object
      description: Schema for turn-taking probability data
      required:
        - type
      properties:
        type:
          x-fern-type: literal<"internal_turn_probability">
        turn_event:
          type: object
          description: Turn probability event data
          required:
            - probability
          properties:
            probability:
              type: number
              description: Probability score for conversation turn changes between 0 and 1
              minimum: 0
              maximum: 1
    InternalTentativeAgentResponse:
      type: object
      description: Schema for tentative agent responses
      required:
        - type
      properties:
        type:
          x-fern-type: literal<"internal_tentative_agent_response">
        tentative_agent_response_internal_event:
          type: object
          description: Preliminary event data containing agent's tentative response
          required:
            - tentative_agent_response
          properties:
            tentative_agent_response:
              type: string
              description: Preliminary text from the agent
